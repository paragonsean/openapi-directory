/**
 * FabricAdminClient
 * Drive operation endpoints and objects.
 *
 * The version of the OpenAPI document: 2019-05-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDriveModel.h
 *
 * Properties of a drive.
 */

#ifndef OAIDriveModel_H
#define OAIDriveModel_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDriveModel : public OAIObject {
public:
    OAIDriveModel();
    OAIDriveModel(QString json);
    ~OAIDriveModel() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAction() const;
    void setAction(const QString &action);
    bool is_action_Set() const;
    bool is_action_Valid() const;

    qint32 getCapacityGb() const;
    void setCapacityGb(const qint32 &capacity_gb);
    bool is_capacity_gb_Set() const;
    bool is_capacity_gb_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getFirmwareVersion() const;
    void setFirmwareVersion(const QString &firmware_version);
    bool is_firmware_version_Set() const;
    bool is_firmware_version_Valid() const;

    QString getHealthStatus() const;
    void setHealthStatus(const QString &health_status);
    bool is_health_status_Set() const;
    bool is_health_status_Valid() const;

    bool isIsIndicationEnabled() const;
    void setIsIndicationEnabled(const bool &is_indication_enabled);
    bool is_is_indication_enabled_Set() const;
    bool is_is_indication_enabled_Valid() const;

    QString getManufacturer() const;
    void setManufacturer(const QString &manufacturer);
    bool is_manufacturer_Set() const;
    bool is_manufacturer_Valid() const;

    QString getMediaType() const;
    void setMediaType(const QString &media_type);
    bool is_media_type_Set() const;
    bool is_media_type_Valid() const;

    QString getModel() const;
    void setModel(const QString &model);
    bool is_model_Set() const;
    bool is_model_Valid() const;

    QString getOperationalStatus() const;
    void setOperationalStatus(const QString &operational_status);
    bool is_operational_status_Set() const;
    bool is_operational_status_Valid() const;

    QString getPhysicalLocation() const;
    void setPhysicalLocation(const QString &physical_location);
    bool is_physical_location_Set() const;
    bool is_physical_location_Valid() const;

    QString getSerialNumber() const;
    void setSerialNumber(const QString &serial_number);
    bool is_serial_number_Set() const;
    bool is_serial_number_Valid() const;

    QString getStorageNode() const;
    void setStorageNode(const QString &storage_node);
    bool is_storage_node_Set() const;
    bool is_storage_node_Valid() const;

    QString getStoragePool() const;
    void setStoragePool(const QString &storage_pool);
    bool is_storage_pool_Set() const;
    bool is_storage_pool_Valid() const;

    QString getUsage() const;
    void setUsage(const QString &usage);
    bool is_usage_Set() const;
    bool is_usage_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_action;
    bool m_action_isSet;
    bool m_action_isValid;

    qint32 m_capacity_gb;
    bool m_capacity_gb_isSet;
    bool m_capacity_gb_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_firmware_version;
    bool m_firmware_version_isSet;
    bool m_firmware_version_isValid;

    QString m_health_status;
    bool m_health_status_isSet;
    bool m_health_status_isValid;

    bool m_is_indication_enabled;
    bool m_is_indication_enabled_isSet;
    bool m_is_indication_enabled_isValid;

    QString m_manufacturer;
    bool m_manufacturer_isSet;
    bool m_manufacturer_isValid;

    QString m_media_type;
    bool m_media_type_isSet;
    bool m_media_type_isValid;

    QString m_model;
    bool m_model_isSet;
    bool m_model_isValid;

    QString m_operational_status;
    bool m_operational_status_isSet;
    bool m_operational_status_isValid;

    QString m_physical_location;
    bool m_physical_location_isSet;
    bool m_physical_location_isValid;

    QString m_serial_number;
    bool m_serial_number_isSet;
    bool m_serial_number_isValid;

    QString m_storage_node;
    bool m_storage_node_isSet;
    bool m_storage_node_isValid;

    QString m_storage_pool;
    bool m_storage_pool_isSet;
    bool m_storage_pool_isValid;

    QString m_usage;
    bool m_usage_isSet;
    bool m_usage_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDriveModel)

#endif // OAIDriveModel_H
