/*
 * StorSimpleManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-10-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Error;
import org.openapitools.client.model.ISCSIDisk;
import org.openapitools.client.model.ISCSIDiskList;
import org.openapitools.client.model.MetricDefinitionList;
import org.openapitools.client.model.MetricList;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for IscsiDisksApi
 */
@Disabled
public class IscsiDisksApiTest {

    private final IscsiDisksApi api = new IscsiDisksApi();

    /**
     * Creates or updates the iSCSI disk.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void iscsiDisksCreateOrUpdateTest() throws ApiException {
        String deviceName = null;
        String iscsiServerName = null;
        String diskName = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String managerName = null;
        String apiVersion = null;
        ISCSIDisk iscsiDisk = null;
        ISCSIDisk response = api.iscsiDisksCreateOrUpdate(deviceName, iscsiServerName, diskName, subscriptionId, resourceGroupName, managerName, apiVersion, iscsiDisk);
        // TODO: test validations
    }

    /**
     * Deletes the iSCSI disk.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void iscsiDisksDeleteTest() throws ApiException {
        String deviceName = null;
        String iscsiServerName = null;
        String diskName = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String managerName = null;
        String apiVersion = null;
        api.iscsiDisksDelete(deviceName, iscsiServerName, diskName, subscriptionId, resourceGroupName, managerName, apiVersion);
        // TODO: test validations
    }

    /**
     * Returns the properties of the specified iSCSI disk name.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void iscsiDisksGetTest() throws ApiException {
        String deviceName = null;
        String iscsiServerName = null;
        String diskName = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String managerName = null;
        String apiVersion = null;
        ISCSIDisk response = api.iscsiDisksGet(deviceName, iscsiServerName, diskName, subscriptionId, resourceGroupName, managerName, apiVersion);
        // TODO: test validations
    }

    /**
     * Retrieves all the iSCSI disks in a device.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void iscsiDisksListByDeviceTest() throws ApiException {
        String deviceName = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String managerName = null;
        String apiVersion = null;
        ISCSIDiskList response = api.iscsiDisksListByDevice(deviceName, subscriptionId, resourceGroupName, managerName, apiVersion);
        // TODO: test validations
    }

    /**
     * Retrieves all the disks in a iSCSI server.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void iscsiDisksListByIscsiServerTest() throws ApiException {
        String deviceName = null;
        String iscsiServerName = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String managerName = null;
        String apiVersion = null;
        ISCSIDiskList response = api.iscsiDisksListByIscsiServer(deviceName, iscsiServerName, subscriptionId, resourceGroupName, managerName, apiVersion);
        // TODO: test validations
    }

    /**
     * Retrieves metric definitions for all metric aggregated at the iSCSI disk.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void iscsiDisksListMetricDefinitionTest() throws ApiException {
        String deviceName = null;
        String iscsiServerName = null;
        String diskName = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String managerName = null;
        String apiVersion = null;
        MetricDefinitionList response = api.iscsiDisksListMetricDefinition(deviceName, iscsiServerName, diskName, subscriptionId, resourceGroupName, managerName, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets the iSCSI disk metrics
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void iscsiDisksListMetricsTest() throws ApiException {
        String deviceName = null;
        String iscsiServerName = null;
        String diskName = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String managerName = null;
        String apiVersion = null;
        String $filter = null;
        MetricList response = api.iscsiDisksListMetrics(deviceName, iscsiServerName, diskName, subscriptionId, resourceGroupName, managerName, apiVersion, $filter);
        // TODO: test validations
    }

}
