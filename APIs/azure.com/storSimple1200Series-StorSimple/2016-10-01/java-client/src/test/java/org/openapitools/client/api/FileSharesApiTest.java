/*
 * StorSimpleManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-10-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Error;
import org.openapitools.client.model.FileShare;
import org.openapitools.client.model.FileShareList;
import org.openapitools.client.model.MetricDefinitionList;
import org.openapitools.client.model.MetricList;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for FileSharesApi
 */
@Disabled
public class FileSharesApiTest {

    private final FileSharesApi api = new FileSharesApi();

    /**
     * Creates or updates the file share.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void fileSharesCreateOrUpdateTest() throws ApiException {
        String deviceName = null;
        String fileServerName = null;
        String shareName = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String managerName = null;
        String apiVersion = null;
        FileShare fileShare = null;
        FileShare response = api.fileSharesCreateOrUpdate(deviceName, fileServerName, shareName, subscriptionId, resourceGroupName, managerName, apiVersion, fileShare);
        // TODO: test validations
    }

    /**
     * Deletes the file share.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void fileSharesDeleteTest() throws ApiException {
        String deviceName = null;
        String fileServerName = null;
        String shareName = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String managerName = null;
        String apiVersion = null;
        api.fileSharesDelete(deviceName, fileServerName, shareName, subscriptionId, resourceGroupName, managerName, apiVersion);
        // TODO: test validations
    }

    /**
     * Returns the properties of the specified file share name.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void fileSharesGetTest() throws ApiException {
        String deviceName = null;
        String fileServerName = null;
        String shareName = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String managerName = null;
        String apiVersion = null;
        FileShare response = api.fileSharesGet(deviceName, fileServerName, shareName, subscriptionId, resourceGroupName, managerName, apiVersion);
        // TODO: test validations
    }

    /**
     * Retrieves all the file shares in a device.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void fileSharesListByDeviceTest() throws ApiException {
        String deviceName = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String managerName = null;
        String apiVersion = null;
        FileShareList response = api.fileSharesListByDevice(deviceName, subscriptionId, resourceGroupName, managerName, apiVersion);
        // TODO: test validations
    }

    /**
     * Retrieves all the file shares in a file server.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void fileSharesListByFileServerTest() throws ApiException {
        String deviceName = null;
        String fileServerName = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String managerName = null;
        String apiVersion = null;
        FileShareList response = api.fileSharesListByFileServer(deviceName, fileServerName, subscriptionId, resourceGroupName, managerName, apiVersion);
        // TODO: test validations
    }

    /**
     * Retrieves metric definitions of all metrics aggregated at the file share.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void fileSharesListMetricDefinitionTest() throws ApiException {
        String deviceName = null;
        String fileServerName = null;
        String shareName = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String managerName = null;
        String apiVersion = null;
        MetricDefinitionList response = api.fileSharesListMetricDefinition(deviceName, fileServerName, shareName, subscriptionId, resourceGroupName, managerName, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets the file share metrics
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void fileSharesListMetricsTest() throws ApiException {
        String deviceName = null;
        String fileServerName = null;
        String shareName = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String managerName = null;
        String apiVersion = null;
        String $filter = null;
        MetricList response = api.fileSharesListMetrics(deviceName, fileServerName, shareName, subscriptionId, resourceGroupName, managerName, apiVersion, $filter);
        // TODO: test validations
    }

}
