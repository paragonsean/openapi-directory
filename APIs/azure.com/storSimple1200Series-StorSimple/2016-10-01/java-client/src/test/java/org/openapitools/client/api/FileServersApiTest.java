/*
 * StorSimpleManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-10-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Error;
import org.openapitools.client.model.FileServer;
import org.openapitools.client.model.FileServerList;
import org.openapitools.client.model.MetricDefinitionList;
import org.openapitools.client.model.MetricList;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for FileServersApi
 */
@Disabled
public class FileServersApiTest {

    private final FileServersApi api = new FileServersApi();

    /**
     * Backup the file server now.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void fileServersBackupNowTest() throws ApiException {
        String deviceName = null;
        String fileServerName = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String managerName = null;
        String apiVersion = null;
        api.fileServersBackupNow(deviceName, fileServerName, subscriptionId, resourceGroupName, managerName, apiVersion);
        // TODO: test validations
    }

    /**
     * Creates or updates the file server.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void fileServersCreateOrUpdateTest() throws ApiException {
        String deviceName = null;
        String fileServerName = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String managerName = null;
        String apiVersion = null;
        FileServer fileServer = null;
        FileServer response = api.fileServersCreateOrUpdate(deviceName, fileServerName, subscriptionId, resourceGroupName, managerName, apiVersion, fileServer);
        // TODO: test validations
    }

    /**
     * Deletes the file server.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void fileServersDeleteTest() throws ApiException {
        String deviceName = null;
        String fileServerName = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String managerName = null;
        String apiVersion = null;
        api.fileServersDelete(deviceName, fileServerName, subscriptionId, resourceGroupName, managerName, apiVersion);
        // TODO: test validations
    }

    /**
     * Returns the properties of the specified file server name.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void fileServersGetTest() throws ApiException {
        String deviceName = null;
        String fileServerName = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String managerName = null;
        String apiVersion = null;
        FileServer response = api.fileServersGet(deviceName, fileServerName, subscriptionId, resourceGroupName, managerName, apiVersion);
        // TODO: test validations
    }

    /**
     * Retrieves all the file servers in a device.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void fileServersListByDeviceTest() throws ApiException {
        String deviceName = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String managerName = null;
        String apiVersion = null;
        FileServerList response = api.fileServersListByDevice(deviceName, subscriptionId, resourceGroupName, managerName, apiVersion);
        // TODO: test validations
    }

    /**
     * Retrieves all the file servers in a manager.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void fileServersListByManagerTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String managerName = null;
        String apiVersion = null;
        FileServerList response = api.fileServersListByManager(subscriptionId, resourceGroupName, managerName, apiVersion);
        // TODO: test validations
    }

    /**
     * Retrieves metric definitions of all metrics aggregated at the file server.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void fileServersListMetricDefinitionTest() throws ApiException {
        String deviceName = null;
        String fileServerName = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String managerName = null;
        String apiVersion = null;
        MetricDefinitionList response = api.fileServersListMetricDefinition(deviceName, fileServerName, subscriptionId, resourceGroupName, managerName, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets the file server metrics.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void fileServersListMetricsTest() throws ApiException {
        String deviceName = null;
        String fileServerName = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String managerName = null;
        String apiVersion = null;
        String $filter = null;
        MetricList response = api.fileServersListMetrics(deviceName, fileServerName, subscriptionId, resourceGroupName, managerName, apiVersion, $filter);
        // TODO: test validations
    }

}
