# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class FailoverRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, accesspoint_ids: List[str]=None, keep_source_device: bool=None, skip_validation: bool=None, target_device_id: str=None):
        """FailoverRequest - a model defined in OpenAPI

        :param accesspoint_ids: The accesspoint_ids of this FailoverRequest.
        :param keep_source_device: The keep_source_device of this FailoverRequest.
        :param skip_validation: The skip_validation of this FailoverRequest.
        :param target_device_id: The target_device_id of this FailoverRequest.
        """
        self.openapi_types = {
            'accesspoint_ids': List[str],
            'keep_source_device': bool,
            'skip_validation': bool,
            'target_device_id': str
        }

        self.attribute_map = {
            'accesspoint_ids': 'accesspointIds',
            'keep_source_device': 'keepSourceDevice',
            'skip_validation': 'skipValidation',
            'target_device_id': 'targetDeviceId'
        }

        self._accesspoint_ids = accesspoint_ids
        self._keep_source_device = keep_source_device
        self._skip_validation = skip_validation
        self._target_device_id = target_device_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FailoverRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FailoverRequest of this FailoverRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def accesspoint_ids(self):
        """Gets the accesspoint_ids of this FailoverRequest.


        :return: The accesspoint_ids of this FailoverRequest.
        :rtype: List[str]
        """
        return self._accesspoint_ids

    @accesspoint_ids.setter
    def accesspoint_ids(self, accesspoint_ids):
        """Sets the accesspoint_ids of this FailoverRequest.


        :param accesspoint_ids: The accesspoint_ids of this FailoverRequest.
        :type accesspoint_ids: List[str]
        """

        self._accesspoint_ids = accesspoint_ids

    @property
    def keep_source_device(self):
        """Gets the keep_source_device of this FailoverRequest.


        :return: The keep_source_device of this FailoverRequest.
        :rtype: bool
        """
        return self._keep_source_device

    @keep_source_device.setter
    def keep_source_device(self, keep_source_device):
        """Sets the keep_source_device of this FailoverRequest.


        :param keep_source_device: The keep_source_device of this FailoverRequest.
        :type keep_source_device: bool
        """

        self._keep_source_device = keep_source_device

    @property
    def skip_validation(self):
        """Gets the skip_validation of this FailoverRequest.


        :return: The skip_validation of this FailoverRequest.
        :rtype: bool
        """
        return self._skip_validation

    @skip_validation.setter
    def skip_validation(self, skip_validation):
        """Sets the skip_validation of this FailoverRequest.


        :param skip_validation: The skip_validation of this FailoverRequest.
        :type skip_validation: bool
        """

        self._skip_validation = skip_validation

    @property
    def target_device_id(self):
        """Gets the target_device_id of this FailoverRequest.


        :return: The target_device_id of this FailoverRequest.
        :rtype: str
        """
        return self._target_device_id

    @target_device_id.setter
    def target_device_id(self, target_device_id):
        """Sets the target_device_id of this FailoverRequest.


        :param target_device_id: The target_device_id of this FailoverRequest.
        :type target_device_id: str
        """

        self._target_device_id = target_device_id
