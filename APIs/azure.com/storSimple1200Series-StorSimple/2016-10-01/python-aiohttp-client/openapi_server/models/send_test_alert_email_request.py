# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SendTestAlertEmailRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, email_list: List[str]=None):
        """SendTestAlertEmailRequest - a model defined in OpenAPI

        :param email_list: The email_list of this SendTestAlertEmailRequest.
        """
        self.openapi_types = {
            'email_list': List[str]
        }

        self.attribute_map = {
            'email_list': 'emailList'
        }

        self._email_list = email_list

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SendTestAlertEmailRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SendTestAlertEmailRequest of this SendTestAlertEmailRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def email_list(self):
        """Gets the email_list of this SendTestAlertEmailRequest.

        List of emails to send the test alerts

        :return: The email_list of this SendTestAlertEmailRequest.
        :rtype: List[str]
        """
        return self._email_list

    @email_list.setter
    def email_list(self, email_list):
        """Sets the email_list of this SendTestAlertEmailRequest.

        List of emails to send the test alerts

        :param email_list: The email_list of this SendTestAlertEmailRequest.
        :type email_list: List[str]
        """
        if email_list is None:
            raise ValueError("Invalid value for `email_list`, must not be `None`")

        self._email_list = email_list
