# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BackupFilter(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created_time: datetime=None, initiated_by: str=None):
        """BackupFilter - a model defined in OpenAPI

        :param created_time: The created_time of this BackupFilter.
        :param initiated_by: The initiated_by of this BackupFilter.
        """
        self.openapi_types = {
            'created_time': datetime,
            'initiated_by': str
        }

        self.attribute_map = {
            'created_time': 'createdTime',
            'initiated_by': 'initiatedBy'
        }

        self._created_time = created_time
        self._initiated_by = initiated_by

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BackupFilter':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BackupFilter of this BackupFilter.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created_time(self):
        """Gets the created_time of this BackupFilter.

        Gets or sets CreatedTime

        :return: The created_time of this BackupFilter.
        :rtype: datetime
        """
        return self._created_time

    @created_time.setter
    def created_time(self, created_time):
        """Sets the created_time of this BackupFilter.

        Gets or sets CreatedTime

        :param created_time: The created_time of this BackupFilter.
        :type created_time: datetime
        """

        self._created_time = created_time

    @property
    def initiated_by(self):
        """Gets the initiated_by of this BackupFilter.

        Gets or sets InitiatedBy

        :return: The initiated_by of this BackupFilter.
        :rtype: str
        """
        return self._initiated_by

    @initiated_by.setter
    def initiated_by(self, initiated_by):
        """Sets the initiated_by of this BackupFilter.

        Gets or sets InitiatedBy

        :param initiated_by: The initiated_by of this BackupFilter.
        :type initiated_by: str
        """
        allowed_values = ["Manual", "Scheduled"]  # noqa: E501
        if initiated_by not in allowed_values:
            raise ValueError(
                "Invalid value for `initiated_by` ({0}), must be one of {1}"
                .format(initiated_by, allowed_values)
            )

        self._initiated_by = initiated_by
