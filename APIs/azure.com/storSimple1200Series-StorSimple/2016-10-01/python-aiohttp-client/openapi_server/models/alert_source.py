# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AlertSource(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, alert_source_type: str=None, name: str=None, time_zone: str=None):
        """AlertSource - a model defined in OpenAPI

        :param alert_source_type: The alert_source_type of this AlertSource.
        :param name: The name of this AlertSource.
        :param time_zone: The time_zone of this AlertSource.
        """
        self.openapi_types = {
            'alert_source_type': str,
            'name': str,
            'time_zone': str
        }

        self.attribute_map = {
            'alert_source_type': 'alertSourceType',
            'name': 'name',
            'time_zone': 'timeZone'
        }

        self._alert_source_type = alert_source_type
        self._name = name
        self._time_zone = time_zone

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AlertSource':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AlertSource of this AlertSource.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def alert_source_type(self):
        """Gets the alert_source_type of this AlertSource.

        Source type of the alert.

        :return: The alert_source_type of this AlertSource.
        :rtype: str
        """
        return self._alert_source_type

    @alert_source_type.setter
    def alert_source_type(self, alert_source_type):
        """Sets the alert_source_type of this AlertSource.

        Source type of the alert.

        :param alert_source_type: The alert_source_type of this AlertSource.
        :type alert_source_type: str
        """
        allowed_values = ["Resource", "Device"]  # noqa: E501
        if alert_source_type not in allowed_values:
            raise ValueError(
                "Invalid value for `alert_source_type` ({0}), must be one of {1}"
                .format(alert_source_type, allowed_values)
            )

        self._alert_source_type = alert_source_type

    @property
    def name(self):
        """Gets the name of this AlertSource.

        Name of the source.

        :return: The name of this AlertSource.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this AlertSource.

        Name of the source.

        :param name: The name of this AlertSource.
        :type name: str
        """

        self._name = name

    @property
    def time_zone(self):
        """Gets the time_zone of this AlertSource.

        The time zone.

        :return: The time_zone of this AlertSource.
        :rtype: str
        """
        return self._time_zone

    @time_zone.setter
    def time_zone(self, time_zone):
        """Sets the time_zone of this AlertSource.

        The time zone.

        :param time_zone: The time_zone of this AlertSource.
        :type time_zone: str
        """

        self._time_zone = time_zone
