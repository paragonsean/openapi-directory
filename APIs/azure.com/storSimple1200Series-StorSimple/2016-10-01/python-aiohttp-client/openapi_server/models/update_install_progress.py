# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateInstallProgress(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, number_of_updates_installed: int=None, number_of_updates_to_install: int=None, percent_complete: int=None):
        """UpdateInstallProgress - a model defined in OpenAPI

        :param number_of_updates_installed: The number_of_updates_installed of this UpdateInstallProgress.
        :param number_of_updates_to_install: The number_of_updates_to_install of this UpdateInstallProgress.
        :param percent_complete: The percent_complete of this UpdateInstallProgress.
        """
        self.openapi_types = {
            'number_of_updates_installed': int,
            'number_of_updates_to_install': int,
            'percent_complete': int
        }

        self.attribute_map = {
            'number_of_updates_installed': 'numberOfUpdatesInstalled',
            'number_of_updates_to_install': 'numberOfUpdatesToInstall',
            'percent_complete': 'percentComplete'
        }

        self._number_of_updates_installed = number_of_updates_installed
        self._number_of_updates_to_install = number_of_updates_to_install
        self._percent_complete = percent_complete

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateInstallProgress':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateInstallProgress of this UpdateInstallProgress.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def number_of_updates_installed(self):
        """Gets the number_of_updates_installed of this UpdateInstallProgress.

        Number of updates installed.

        :return: The number_of_updates_installed of this UpdateInstallProgress.
        :rtype: int
        """
        return self._number_of_updates_installed

    @number_of_updates_installed.setter
    def number_of_updates_installed(self, number_of_updates_installed):
        """Sets the number_of_updates_installed of this UpdateInstallProgress.

        Number of updates installed.

        :param number_of_updates_installed: The number_of_updates_installed of this UpdateInstallProgress.
        :type number_of_updates_installed: int
        """

        self._number_of_updates_installed = number_of_updates_installed

    @property
    def number_of_updates_to_install(self):
        """Gets the number_of_updates_to_install of this UpdateInstallProgress.

        Number of updates to install.

        :return: The number_of_updates_to_install of this UpdateInstallProgress.
        :rtype: int
        """
        return self._number_of_updates_to_install

    @number_of_updates_to_install.setter
    def number_of_updates_to_install(self, number_of_updates_to_install):
        """Sets the number_of_updates_to_install of this UpdateInstallProgress.

        Number of updates to install.

        :param number_of_updates_to_install: The number_of_updates_to_install of this UpdateInstallProgress.
        :type number_of_updates_to_install: int
        """

        self._number_of_updates_to_install = number_of_updates_to_install

    @property
    def percent_complete(self):
        """Gets the percent_complete of this UpdateInstallProgress.

        Percentage of completion.

        :return: The percent_complete of this UpdateInstallProgress.
        :rtype: int
        """
        return self._percent_complete

    @percent_complete.setter
    def percent_complete(self, percent_complete):
        """Sets the percent_complete of this UpdateInstallProgress.

        Percentage of completion.

        :param percent_complete: The percent_complete of this UpdateInstallProgress.
        :type percent_complete: int
        """

        self._percent_complete = percent_complete
