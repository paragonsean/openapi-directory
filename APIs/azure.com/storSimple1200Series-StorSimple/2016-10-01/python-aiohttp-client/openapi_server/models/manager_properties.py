# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.manager_intrinsic_settings import ManagerIntrinsicSettings
from openapi_server.models.manager_sku import ManagerSku
from openapi_server import util


class ManagerProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cis_intrinsic_settings: ManagerIntrinsicSettings=None, provisioning_state: str=None, sku: ManagerSku=None):
        """ManagerProperties - a model defined in OpenAPI

        :param cis_intrinsic_settings: The cis_intrinsic_settings of this ManagerProperties.
        :param provisioning_state: The provisioning_state of this ManagerProperties.
        :param sku: The sku of this ManagerProperties.
        """
        self.openapi_types = {
            'cis_intrinsic_settings': ManagerIntrinsicSettings,
            'provisioning_state': str,
            'sku': ManagerSku
        }

        self.attribute_map = {
            'cis_intrinsic_settings': 'cisIntrinsicSettings',
            'provisioning_state': 'provisioningState',
            'sku': 'sku'
        }

        self._cis_intrinsic_settings = cis_intrinsic_settings
        self._provisioning_state = provisioning_state
        self._sku = sku

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ManagerProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ManagerProperties of this ManagerProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cis_intrinsic_settings(self):
        """Gets the cis_intrinsic_settings of this ManagerProperties.


        :return: The cis_intrinsic_settings of this ManagerProperties.
        :rtype: ManagerIntrinsicSettings
        """
        return self._cis_intrinsic_settings

    @cis_intrinsic_settings.setter
    def cis_intrinsic_settings(self, cis_intrinsic_settings):
        """Sets the cis_intrinsic_settings of this ManagerProperties.


        :param cis_intrinsic_settings: The cis_intrinsic_settings of this ManagerProperties.
        :type cis_intrinsic_settings: ManagerIntrinsicSettings
        """

        self._cis_intrinsic_settings = cis_intrinsic_settings

    @property
    def provisioning_state(self):
        """Gets the provisioning_state of this ManagerProperties.

        Specifies the state of the resource as it is getting provisioned. Value of \"Succeeded\" means the Manager was successfully created

        :return: The provisioning_state of this ManagerProperties.
        :rtype: str
        """
        return self._provisioning_state

    @provisioning_state.setter
    def provisioning_state(self, provisioning_state):
        """Sets the provisioning_state of this ManagerProperties.

        Specifies the state of the resource as it is getting provisioned. Value of \"Succeeded\" means the Manager was successfully created

        :param provisioning_state: The provisioning_state of this ManagerProperties.
        :type provisioning_state: str
        """

        self._provisioning_state = provisioning_state

    @property
    def sku(self):
        """Gets the sku of this ManagerProperties.


        :return: The sku of this ManagerProperties.
        :rtype: ManagerSku
        """
        return self._sku

    @sku.setter
    def sku(self, sku):
        """Sets the sku of this ManagerProperties.


        :param sku: The sku of this ManagerProperties.
        :type sku: ManagerSku
        """

        self._sku = sku
