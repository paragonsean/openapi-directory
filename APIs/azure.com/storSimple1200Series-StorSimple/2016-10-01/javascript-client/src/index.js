/**
 * StorSimpleManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-10-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AccessControlRecord from './model/AccessControlRecord';
import AccessControlRecordList from './model/AccessControlRecordList';
import AccessControlRecordProperties from './model/AccessControlRecordProperties';
import Alert from './model/Alert';
import AlertErrorDetails from './model/AlertErrorDetails';
import AlertFilter from './model/AlertFilter';
import AlertList from './model/AlertList';
import AlertProperties from './model/AlertProperties';
import AlertSettings from './model/AlertSettings';
import AlertSettingsProperties from './model/AlertSettingsProperties';
import AlertSource from './model/AlertSource';
import AsymmetricEncryptedSecret from './model/AsymmetricEncryptedSecret';
import AvailableProviderOperation from './model/AvailableProviderOperation';
import AvailableProviderOperationDisplay from './model/AvailableProviderOperationDisplay';
import AvailableProviderOperations from './model/AvailableProviderOperations';
import Backup from './model/Backup';
import BackupElement from './model/BackupElement';
import BackupElementProperties from './model/BackupElementProperties';
import BackupFilter from './model/BackupFilter';
import BackupList from './model/BackupList';
import BackupProperties from './model/BackupProperties';
import BackupScheduleGroup from './model/BackupScheduleGroup';
import BackupScheduleGroupList from './model/BackupScheduleGroupList';
import BackupScheduleGroupProperties from './model/BackupScheduleGroupProperties';
import BaseModel from './model/BaseModel';
import ChapProperties from './model/ChapProperties';
import ChapSettings from './model/ChapSettings';
import ChapSettingsList from './model/ChapSettingsList';
import ClearAlertRequest from './model/ClearAlertRequest';
import CloneRequest from './model/CloneRequest';
import CloneRequestProperties from './model/CloneRequestProperties';
import Device from './model/Device';
import DeviceDetails from './model/DeviceDetails';
import DeviceList from './model/DeviceList';
import DevicePatch from './model/DevicePatch';
import DeviceProperties from './model/DeviceProperties';
import EncryptionSettings from './model/EncryptionSettings';
import EncryptionSettingsProperties from './model/EncryptionSettingsProperties';
import Error from './model/Error';
import FailoverRequest from './model/FailoverRequest';
import FileServer from './model/FileServer';
import FileServerList from './model/FileServerList';
import FileServerProperties from './model/FileServerProperties';
import FileShare from './model/FileShare';
import FileShareList from './model/FileShareList';
import FileShareProperties from './model/FileShareProperties';
import IPConfig from './model/IPConfig';
import ISCSIDisk from './model/ISCSIDisk';
import ISCSIDiskList from './model/ISCSIDiskList';
import ISCSIDiskProperties from './model/ISCSIDiskProperties';
import ISCSIServer from './model/ISCSIServer';
import ISCSIServerList from './model/ISCSIServerList';
import ISCSIServerProperties from './model/ISCSIServerProperties';
import Item from './model/Item';
import Job from './model/Job';
import JobErrorDetails from './model/JobErrorDetails';
import JobErrorItem from './model/JobErrorItem';
import JobFilter from './model/JobFilter';
import JobList from './model/JobList';
import JobProperties from './model/JobProperties';
import JobStage from './model/JobStage';
import JobStats from './model/JobStats';
import Manager from './model/Manager';
import ManagerExtendedInfo from './model/ManagerExtendedInfo';
import ManagerExtendedInfoProperties from './model/ManagerExtendedInfoProperties';
import ManagerIntrinsicSettings from './model/ManagerIntrinsicSettings';
import ManagerList from './model/ManagerList';
import ManagerPatch from './model/ManagerPatch';
import ManagerProperties from './model/ManagerProperties';
import ManagerSku from './model/ManagerSku';
import Message from './model/Message';
import MetricAvailablity from './model/MetricAvailablity';
import MetricData from './model/MetricData';
import MetricDefinition from './model/MetricDefinition';
import MetricDefinitionList from './model/MetricDefinitionList';
import MetricDimension from './model/MetricDimension';
import MetricFilter from './model/MetricFilter';
import MetricList from './model/MetricList';
import MetricName from './model/MetricName';
import MetricNameFilter from './model/MetricNameFilter';
import Metrics from './model/Metrics';
import NetworkAdapter from './model/NetworkAdapter';
import NetworkSettings from './model/NetworkSettings';
import NetworkSettingsProperties from './model/NetworkSettingsProperties';
import NodeNetwork from './model/NodeNetwork';
import RawCertificateData from './model/RawCertificateData';
import Resource from './model/Resource';
import ResourceCertificateAndAADDetails from './model/ResourceCertificateAndAADDetails';
import SecuritySettings from './model/SecuritySettings';
import SecuritySettingsProperties from './model/SecuritySettingsProperties';
import SendTestAlertEmailRequest from './model/SendTestAlertEmailRequest';
import StorageAccountCredential from './model/StorageAccountCredential';
import StorageAccountCredentialList from './model/StorageAccountCredentialList';
import StorageAccountCredentialProperties from './model/StorageAccountCredentialProperties';
import StorageDomain from './model/StorageDomain';
import StorageDomainList from './model/StorageDomainList';
import StorageDomainProperties from './model/StorageDomainProperties';
import SymmetricEncryptedSecret from './model/SymmetricEncryptedSecret';
import Time from './model/Time';
import TimeSettings from './model/TimeSettings';
import TimeSettingsProperties from './model/TimeSettingsProperties';
import UpdateDownloadProgress from './model/UpdateDownloadProgress';
import UpdateInstallProgress from './model/UpdateInstallProgress';
import Updates from './model/Updates';
import UpdatesProperties from './model/UpdatesProperties';
import UploadCertificateRequest from './model/UploadCertificateRequest';
import UploadCertificateResponse from './model/UploadCertificateResponse';
import AccessControlRecordsApi from './api/AccessControlRecordsApi';
import AlertsApi from './api/AlertsApi';
import AvailableProviderOperationsApi from './api/AvailableProviderOperationsApi';
import BackupScheduleGroupsApi from './api/BackupScheduleGroupsApi';
import BackupsApi from './api/BackupsApi';
import ChapSettingsApi from './api/ChapSettingsApi';
import DevicesApi from './api/DevicesApi';
import FileServersApi from './api/FileServersApi';
import FileSharesApi from './api/FileSharesApi';
import IscsiDisksApi from './api/IscsiDisksApi';
import IscsiServersApi from './api/IscsiServersApi';
import JobsApi from './api/JobsApi';
import ManagersApi from './api/ManagersApi';
import StorageAccountCredentialsApi from './api/StorageAccountCredentialsApi';
import StorageDomainsApi from './api/StorageDomainsApi';


/**
* JS API client generated by OpenAPI Generator.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var StorSimpleManagementClient = require('index'); // See note below*.
* var xxxSvc = new StorSimpleManagementClient.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new StorSimpleManagementClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new StorSimpleManagementClient.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new StorSimpleManagementClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2016-10-01
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AccessControlRecord model constructor.
     * @property {module:model/AccessControlRecord}
     */
    AccessControlRecord,

    /**
     * The AccessControlRecordList model constructor.
     * @property {module:model/AccessControlRecordList}
     */
    AccessControlRecordList,

    /**
     * The AccessControlRecordProperties model constructor.
     * @property {module:model/AccessControlRecordProperties}
     */
    AccessControlRecordProperties,

    /**
     * The Alert model constructor.
     * @property {module:model/Alert}
     */
    Alert,

    /**
     * The AlertErrorDetails model constructor.
     * @property {module:model/AlertErrorDetails}
     */
    AlertErrorDetails,

    /**
     * The AlertFilter model constructor.
     * @property {module:model/AlertFilter}
     */
    AlertFilter,

    /**
     * The AlertList model constructor.
     * @property {module:model/AlertList}
     */
    AlertList,

    /**
     * The AlertProperties model constructor.
     * @property {module:model/AlertProperties}
     */
    AlertProperties,

    /**
     * The AlertSettings model constructor.
     * @property {module:model/AlertSettings}
     */
    AlertSettings,

    /**
     * The AlertSettingsProperties model constructor.
     * @property {module:model/AlertSettingsProperties}
     */
    AlertSettingsProperties,

    /**
     * The AlertSource model constructor.
     * @property {module:model/AlertSource}
     */
    AlertSource,

    /**
     * The AsymmetricEncryptedSecret model constructor.
     * @property {module:model/AsymmetricEncryptedSecret}
     */
    AsymmetricEncryptedSecret,

    /**
     * The AvailableProviderOperation model constructor.
     * @property {module:model/AvailableProviderOperation}
     */
    AvailableProviderOperation,

    /**
     * The AvailableProviderOperationDisplay model constructor.
     * @property {module:model/AvailableProviderOperationDisplay}
     */
    AvailableProviderOperationDisplay,

    /**
     * The AvailableProviderOperations model constructor.
     * @property {module:model/AvailableProviderOperations}
     */
    AvailableProviderOperations,

    /**
     * The Backup model constructor.
     * @property {module:model/Backup}
     */
    Backup,

    /**
     * The BackupElement model constructor.
     * @property {module:model/BackupElement}
     */
    BackupElement,

    /**
     * The BackupElementProperties model constructor.
     * @property {module:model/BackupElementProperties}
     */
    BackupElementProperties,

    /**
     * The BackupFilter model constructor.
     * @property {module:model/BackupFilter}
     */
    BackupFilter,

    /**
     * The BackupList model constructor.
     * @property {module:model/BackupList}
     */
    BackupList,

    /**
     * The BackupProperties model constructor.
     * @property {module:model/BackupProperties}
     */
    BackupProperties,

    /**
     * The BackupScheduleGroup model constructor.
     * @property {module:model/BackupScheduleGroup}
     */
    BackupScheduleGroup,

    /**
     * The BackupScheduleGroupList model constructor.
     * @property {module:model/BackupScheduleGroupList}
     */
    BackupScheduleGroupList,

    /**
     * The BackupScheduleGroupProperties model constructor.
     * @property {module:model/BackupScheduleGroupProperties}
     */
    BackupScheduleGroupProperties,

    /**
     * The BaseModel model constructor.
     * @property {module:model/BaseModel}
     */
    BaseModel,

    /**
     * The ChapProperties model constructor.
     * @property {module:model/ChapProperties}
     */
    ChapProperties,

    /**
     * The ChapSettings model constructor.
     * @property {module:model/ChapSettings}
     */
    ChapSettings,

    /**
     * The ChapSettingsList model constructor.
     * @property {module:model/ChapSettingsList}
     */
    ChapSettingsList,

    /**
     * The ClearAlertRequest model constructor.
     * @property {module:model/ClearAlertRequest}
     */
    ClearAlertRequest,

    /**
     * The CloneRequest model constructor.
     * @property {module:model/CloneRequest}
     */
    CloneRequest,

    /**
     * The CloneRequestProperties model constructor.
     * @property {module:model/CloneRequestProperties}
     */
    CloneRequestProperties,

    /**
     * The Device model constructor.
     * @property {module:model/Device}
     */
    Device,

    /**
     * The DeviceDetails model constructor.
     * @property {module:model/DeviceDetails}
     */
    DeviceDetails,

    /**
     * The DeviceList model constructor.
     * @property {module:model/DeviceList}
     */
    DeviceList,

    /**
     * The DevicePatch model constructor.
     * @property {module:model/DevicePatch}
     */
    DevicePatch,

    /**
     * The DeviceProperties model constructor.
     * @property {module:model/DeviceProperties}
     */
    DeviceProperties,

    /**
     * The EncryptionSettings model constructor.
     * @property {module:model/EncryptionSettings}
     */
    EncryptionSettings,

    /**
     * The EncryptionSettingsProperties model constructor.
     * @property {module:model/EncryptionSettingsProperties}
     */
    EncryptionSettingsProperties,

    /**
     * The Error model constructor.
     * @property {module:model/Error}
     */
    Error,

    /**
     * The FailoverRequest model constructor.
     * @property {module:model/FailoverRequest}
     */
    FailoverRequest,

    /**
     * The FileServer model constructor.
     * @property {module:model/FileServer}
     */
    FileServer,

    /**
     * The FileServerList model constructor.
     * @property {module:model/FileServerList}
     */
    FileServerList,

    /**
     * The FileServerProperties model constructor.
     * @property {module:model/FileServerProperties}
     */
    FileServerProperties,

    /**
     * The FileShare model constructor.
     * @property {module:model/FileShare}
     */
    FileShare,

    /**
     * The FileShareList model constructor.
     * @property {module:model/FileShareList}
     */
    FileShareList,

    /**
     * The FileShareProperties model constructor.
     * @property {module:model/FileShareProperties}
     */
    FileShareProperties,

    /**
     * The IPConfig model constructor.
     * @property {module:model/IPConfig}
     */
    IPConfig,

    /**
     * The ISCSIDisk model constructor.
     * @property {module:model/ISCSIDisk}
     */
    ISCSIDisk,

    /**
     * The ISCSIDiskList model constructor.
     * @property {module:model/ISCSIDiskList}
     */
    ISCSIDiskList,

    /**
     * The ISCSIDiskProperties model constructor.
     * @property {module:model/ISCSIDiskProperties}
     */
    ISCSIDiskProperties,

    /**
     * The ISCSIServer model constructor.
     * @property {module:model/ISCSIServer}
     */
    ISCSIServer,

    /**
     * The ISCSIServerList model constructor.
     * @property {module:model/ISCSIServerList}
     */
    ISCSIServerList,

    /**
     * The ISCSIServerProperties model constructor.
     * @property {module:model/ISCSIServerProperties}
     */
    ISCSIServerProperties,

    /**
     * The Item model constructor.
     * @property {module:model/Item}
     */
    Item,

    /**
     * The Job model constructor.
     * @property {module:model/Job}
     */
    Job,

    /**
     * The JobErrorDetails model constructor.
     * @property {module:model/JobErrorDetails}
     */
    JobErrorDetails,

    /**
     * The JobErrorItem model constructor.
     * @property {module:model/JobErrorItem}
     */
    JobErrorItem,

    /**
     * The JobFilter model constructor.
     * @property {module:model/JobFilter}
     */
    JobFilter,

    /**
     * The JobList model constructor.
     * @property {module:model/JobList}
     */
    JobList,

    /**
     * The JobProperties model constructor.
     * @property {module:model/JobProperties}
     */
    JobProperties,

    /**
     * The JobStage model constructor.
     * @property {module:model/JobStage}
     */
    JobStage,

    /**
     * The JobStats model constructor.
     * @property {module:model/JobStats}
     */
    JobStats,

    /**
     * The Manager model constructor.
     * @property {module:model/Manager}
     */
    Manager,

    /**
     * The ManagerExtendedInfo model constructor.
     * @property {module:model/ManagerExtendedInfo}
     */
    ManagerExtendedInfo,

    /**
     * The ManagerExtendedInfoProperties model constructor.
     * @property {module:model/ManagerExtendedInfoProperties}
     */
    ManagerExtendedInfoProperties,

    /**
     * The ManagerIntrinsicSettings model constructor.
     * @property {module:model/ManagerIntrinsicSettings}
     */
    ManagerIntrinsicSettings,

    /**
     * The ManagerList model constructor.
     * @property {module:model/ManagerList}
     */
    ManagerList,

    /**
     * The ManagerPatch model constructor.
     * @property {module:model/ManagerPatch}
     */
    ManagerPatch,

    /**
     * The ManagerProperties model constructor.
     * @property {module:model/ManagerProperties}
     */
    ManagerProperties,

    /**
     * The ManagerSku model constructor.
     * @property {module:model/ManagerSku}
     */
    ManagerSku,

    /**
     * The Message model constructor.
     * @property {module:model/Message}
     */
    Message,

    /**
     * The MetricAvailablity model constructor.
     * @property {module:model/MetricAvailablity}
     */
    MetricAvailablity,

    /**
     * The MetricData model constructor.
     * @property {module:model/MetricData}
     */
    MetricData,

    /**
     * The MetricDefinition model constructor.
     * @property {module:model/MetricDefinition}
     */
    MetricDefinition,

    /**
     * The MetricDefinitionList model constructor.
     * @property {module:model/MetricDefinitionList}
     */
    MetricDefinitionList,

    /**
     * The MetricDimension model constructor.
     * @property {module:model/MetricDimension}
     */
    MetricDimension,

    /**
     * The MetricFilter model constructor.
     * @property {module:model/MetricFilter}
     */
    MetricFilter,

    /**
     * The MetricList model constructor.
     * @property {module:model/MetricList}
     */
    MetricList,

    /**
     * The MetricName model constructor.
     * @property {module:model/MetricName}
     */
    MetricName,

    /**
     * The MetricNameFilter model constructor.
     * @property {module:model/MetricNameFilter}
     */
    MetricNameFilter,

    /**
     * The Metrics model constructor.
     * @property {module:model/Metrics}
     */
    Metrics,

    /**
     * The NetworkAdapter model constructor.
     * @property {module:model/NetworkAdapter}
     */
    NetworkAdapter,

    /**
     * The NetworkSettings model constructor.
     * @property {module:model/NetworkSettings}
     */
    NetworkSettings,

    /**
     * The NetworkSettingsProperties model constructor.
     * @property {module:model/NetworkSettingsProperties}
     */
    NetworkSettingsProperties,

    /**
     * The NodeNetwork model constructor.
     * @property {module:model/NodeNetwork}
     */
    NodeNetwork,

    /**
     * The RawCertificateData model constructor.
     * @property {module:model/RawCertificateData}
     */
    RawCertificateData,

    /**
     * The Resource model constructor.
     * @property {module:model/Resource}
     */
    Resource,

    /**
     * The ResourceCertificateAndAADDetails model constructor.
     * @property {module:model/ResourceCertificateAndAADDetails}
     */
    ResourceCertificateAndAADDetails,

    /**
     * The SecuritySettings model constructor.
     * @property {module:model/SecuritySettings}
     */
    SecuritySettings,

    /**
     * The SecuritySettingsProperties model constructor.
     * @property {module:model/SecuritySettingsProperties}
     */
    SecuritySettingsProperties,

    /**
     * The SendTestAlertEmailRequest model constructor.
     * @property {module:model/SendTestAlertEmailRequest}
     */
    SendTestAlertEmailRequest,

    /**
     * The StorageAccountCredential model constructor.
     * @property {module:model/StorageAccountCredential}
     */
    StorageAccountCredential,

    /**
     * The StorageAccountCredentialList model constructor.
     * @property {module:model/StorageAccountCredentialList}
     */
    StorageAccountCredentialList,

    /**
     * The StorageAccountCredentialProperties model constructor.
     * @property {module:model/StorageAccountCredentialProperties}
     */
    StorageAccountCredentialProperties,

    /**
     * The StorageDomain model constructor.
     * @property {module:model/StorageDomain}
     */
    StorageDomain,

    /**
     * The StorageDomainList model constructor.
     * @property {module:model/StorageDomainList}
     */
    StorageDomainList,

    /**
     * The StorageDomainProperties model constructor.
     * @property {module:model/StorageDomainProperties}
     */
    StorageDomainProperties,

    /**
     * The SymmetricEncryptedSecret model constructor.
     * @property {module:model/SymmetricEncryptedSecret}
     */
    SymmetricEncryptedSecret,

    /**
     * The Time model constructor.
     * @property {module:model/Time}
     */
    Time,

    /**
     * The TimeSettings model constructor.
     * @property {module:model/TimeSettings}
     */
    TimeSettings,

    /**
     * The TimeSettingsProperties model constructor.
     * @property {module:model/TimeSettingsProperties}
     */
    TimeSettingsProperties,

    /**
     * The UpdateDownloadProgress model constructor.
     * @property {module:model/UpdateDownloadProgress}
     */
    UpdateDownloadProgress,

    /**
     * The UpdateInstallProgress model constructor.
     * @property {module:model/UpdateInstallProgress}
     */
    UpdateInstallProgress,

    /**
     * The Updates model constructor.
     * @property {module:model/Updates}
     */
    Updates,

    /**
     * The UpdatesProperties model constructor.
     * @property {module:model/UpdatesProperties}
     */
    UpdatesProperties,

    /**
     * The UploadCertificateRequest model constructor.
     * @property {module:model/UploadCertificateRequest}
     */
    UploadCertificateRequest,

    /**
     * The UploadCertificateResponse model constructor.
     * @property {module:model/UploadCertificateResponse}
     */
    UploadCertificateResponse,

    /**
    * The AccessControlRecordsApi service constructor.
    * @property {module:api/AccessControlRecordsApi}
    */
    AccessControlRecordsApi,

    /**
    * The AlertsApi service constructor.
    * @property {module:api/AlertsApi}
    */
    AlertsApi,

    /**
    * The AvailableProviderOperationsApi service constructor.
    * @property {module:api/AvailableProviderOperationsApi}
    */
    AvailableProviderOperationsApi,

    /**
    * The BackupScheduleGroupsApi service constructor.
    * @property {module:api/BackupScheduleGroupsApi}
    */
    BackupScheduleGroupsApi,

    /**
    * The BackupsApi service constructor.
    * @property {module:api/BackupsApi}
    */
    BackupsApi,

    /**
    * The ChapSettingsApi service constructor.
    * @property {module:api/ChapSettingsApi}
    */
    ChapSettingsApi,

    /**
    * The DevicesApi service constructor.
    * @property {module:api/DevicesApi}
    */
    DevicesApi,

    /**
    * The FileServersApi service constructor.
    * @property {module:api/FileServersApi}
    */
    FileServersApi,

    /**
    * The FileSharesApi service constructor.
    * @property {module:api/FileSharesApi}
    */
    FileSharesApi,

    /**
    * The IscsiDisksApi service constructor.
    * @property {module:api/IscsiDisksApi}
    */
    IscsiDisksApi,

    /**
    * The IscsiServersApi service constructor.
    * @property {module:api/IscsiServersApi}
    */
    IscsiServersApi,

    /**
    * The JobsApi service constructor.
    * @property {module:api/JobsApi}
    */
    JobsApi,

    /**
    * The ManagersApi service constructor.
    * @property {module:api/ManagersApi}
    */
    ManagersApi,

    /**
    * The StorageAccountCredentialsApi service constructor.
    * @property {module:api/StorageAccountCredentialsApi}
    */
    StorageAccountCredentialsApi,

    /**
    * The StorageDomainsApi service constructor.
    * @property {module:api/StorageDomainsApi}
    */
    StorageDomainsApi
};
