/**
 * StorSimpleManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-10-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BackupElement from './BackupElement';

/**
 * The BackupProperties model module.
 * @module model/BackupProperties
 * @version 2016-10-01
 */
class BackupProperties {
    /**
     * Constructs a new <code>BackupProperties</code>.
     * Class represents Backup properties
     * @alias module:model/BackupProperties
     * @param deviceId {String} The Device Identifier.
     * @param elements {Array.<module:model/BackupElement>} The backup elements.
     * @param initiatedBy {module:model/BackupProperties.InitiatedByEnum} Indicates how the backup was initiated \"Manual | Scheduled\".
     * @param sizeInBytes {Number} The backup size in bytes.
     */
    constructor(deviceId, elements, initiatedBy, sizeInBytes) { 
        
        BackupProperties.initialize(this, deviceId, elements, initiatedBy, sizeInBytes);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, deviceId, elements, initiatedBy, sizeInBytes) { 
        obj['deviceId'] = deviceId;
        obj['elements'] = elements;
        obj['initiatedBy'] = initiatedBy;
        obj['sizeInBytes'] = sizeInBytes;
    }

    /**
     * Constructs a <code>BackupProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BackupProperties} obj Optional instance to populate.
     * @return {module:model/BackupProperties} The populated <code>BackupProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BackupProperties();

            if (data.hasOwnProperty('createdTime')) {
                obj['createdTime'] = ApiClient.convertToType(data['createdTime'], 'Date');
            }
            if (data.hasOwnProperty('deviceId')) {
                obj['deviceId'] = ApiClient.convertToType(data['deviceId'], 'String');
            }
            if (data.hasOwnProperty('elements')) {
                obj['elements'] = ApiClient.convertToType(data['elements'], [BackupElement]);
            }
            if (data.hasOwnProperty('expirationTime')) {
                obj['expirationTime'] = ApiClient.convertToType(data['expirationTime'], 'Date');
            }
            if (data.hasOwnProperty('initiatedBy')) {
                obj['initiatedBy'] = ApiClient.convertToType(data['initiatedBy'], 'String');
            }
            if (data.hasOwnProperty('sizeInBytes')) {
                obj['sizeInBytes'] = ApiClient.convertToType(data['sizeInBytes'], 'Number');
            }
            if (data.hasOwnProperty('targetId')) {
                obj['targetId'] = ApiClient.convertToType(data['targetId'], 'String');
            }
            if (data.hasOwnProperty('targetType')) {
                obj['targetType'] = ApiClient.convertToType(data['targetType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BackupProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BackupProperties</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of BackupProperties.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['deviceId'] && !(typeof data['deviceId'] === 'string' || data['deviceId'] instanceof String)) {
            throw new Error("Expected the field `deviceId` to be a primitive type in the JSON string but got " + data['deviceId']);
        }
        if (data['elements']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['elements'])) {
                throw new Error("Expected the field `elements` to be an array in the JSON data but got " + data['elements']);
            }
            // validate the optional field `elements` (array)
            for (const item of data['elements']) {
                BackupElement.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['initiatedBy'] && !(typeof data['initiatedBy'] === 'string' || data['initiatedBy'] instanceof String)) {
            throw new Error("Expected the field `initiatedBy` to be a primitive type in the JSON string but got " + data['initiatedBy']);
        }
        // ensure the json data is a string
        if (data['targetId'] && !(typeof data['targetId'] === 'string' || data['targetId'] instanceof String)) {
            throw new Error("Expected the field `targetId` to be a primitive type in the JSON string but got " + data['targetId']);
        }
        // ensure the json data is a string
        if (data['targetType'] && !(typeof data['targetType'] === 'string' || data['targetType'] instanceof String)) {
            throw new Error("Expected the field `targetType` to be a primitive type in the JSON string but got " + data['targetType']);
        }

        return true;
    }


}

BackupProperties.RequiredProperties = ["deviceId", "elements", "initiatedBy", "sizeInBytes"];

/**
 * The time when the backup was created.
 * @member {Date} createdTime
 */
BackupProperties.prototype['createdTime'] = undefined;

/**
 * The Device Identifier.
 * @member {String} deviceId
 */
BackupProperties.prototype['deviceId'] = undefined;

/**
 * The backup elements.
 * @member {Array.<module:model/BackupElement>} elements
 */
BackupProperties.prototype['elements'] = undefined;

/**
 * The time when the backup will expire.
 * @member {Date} expirationTime
 */
BackupProperties.prototype['expirationTime'] = undefined;

/**
 * Indicates how the backup was initiated \"Manual | Scheduled\".
 * @member {module:model/BackupProperties.InitiatedByEnum} initiatedBy
 */
BackupProperties.prototype['initiatedBy'] = undefined;

/**
 * The backup size in bytes.
 * @member {Number} sizeInBytes
 */
BackupProperties.prototype['sizeInBytes'] = undefined;

/**
 * The path id of the target FileServer or IscsiServer for which the backup was taken.
 * @member {String} targetId
 */
BackupProperties.prototype['targetId'] = undefined;

/**
 * Type of target, FileServer or IscsiServer
 * @member {String} targetType
 */
BackupProperties.prototype['targetType'] = undefined;





/**
 * Allowed values for the <code>initiatedBy</code> property.
 * @enum {String}
 * @readonly
 */
BackupProperties['InitiatedByEnum'] = {

    /**
     * value: "Manual"
     * @const
     */
    "Manual": "Manual",

    /**
     * value: "Scheduled"
     * @const
     */
    "Scheduled": "Scheduled"
};



export default BackupProperties;

