/**
 * StorSimpleManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-10-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ClearAlertRequest model module.
 * @module model/ClearAlertRequest
 * @version 2016-10-01
 */
class ClearAlertRequest {
    /**
     * Constructs a new <code>ClearAlertRequest</code>.
     * Request for clearing the alert
     * @alias module:model/ClearAlertRequest
     * @param alerts {Array.<String>} List of alert Ids to be cleared
     */
    constructor(alerts) { 
        
        ClearAlertRequest.initialize(this, alerts);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, alerts) { 
        obj['alerts'] = alerts;
    }

    /**
     * Constructs a <code>ClearAlertRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ClearAlertRequest} obj Optional instance to populate.
     * @return {module:model/ClearAlertRequest} The populated <code>ClearAlertRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ClearAlertRequest();

            if (data.hasOwnProperty('alerts')) {
                obj['alerts'] = ApiClient.convertToType(data['alerts'], ['String']);
            }
            if (data.hasOwnProperty('resolutionMessage')) {
                obj['resolutionMessage'] = ApiClient.convertToType(data['resolutionMessage'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ClearAlertRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ClearAlertRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ClearAlertRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is an array
        if (!Array.isArray(data['alerts'])) {
            throw new Error("Expected the field `alerts` to be an array in the JSON data but got " + data['alerts']);
        }
        // ensure the json data is a string
        if (data['resolutionMessage'] && !(typeof data['resolutionMessage'] === 'string' || data['resolutionMessage'] instanceof String)) {
            throw new Error("Expected the field `resolutionMessage` to be a primitive type in the JSON string but got " + data['resolutionMessage']);
        }

        return true;
    }


}

ClearAlertRequest.RequiredProperties = ["alerts"];

/**
 * List of alert Ids to be cleared
 * @member {Array.<String>} alerts
 */
ClearAlertRequest.prototype['alerts'] = undefined;

/**
 * Resolution message while clearing the request
 * @member {String} resolutionMessage
 */
ClearAlertRequest.prototype['resolutionMessage'] = undefined;






export default ClearAlertRequest;

