/**
 * StorSimpleManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-10-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SendTestAlertEmailRequest model module.
 * @module model/SendTestAlertEmailRequest
 * @version 2016-10-01
 */
class SendTestAlertEmailRequest {
    /**
     * Constructs a new <code>SendTestAlertEmailRequest</code>.
     * Request for sending test alert email
     * @alias module:model/SendTestAlertEmailRequest
     * @param emailList {Array.<String>} List of emails to send the test alerts
     */
    constructor(emailList) { 
        
        SendTestAlertEmailRequest.initialize(this, emailList);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, emailList) { 
        obj['emailList'] = emailList;
    }

    /**
     * Constructs a <code>SendTestAlertEmailRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SendTestAlertEmailRequest} obj Optional instance to populate.
     * @return {module:model/SendTestAlertEmailRequest} The populated <code>SendTestAlertEmailRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SendTestAlertEmailRequest();

            if (data.hasOwnProperty('emailList')) {
                obj['emailList'] = ApiClient.convertToType(data['emailList'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SendTestAlertEmailRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SendTestAlertEmailRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SendTestAlertEmailRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is an array
        if (!Array.isArray(data['emailList'])) {
            throw new Error("Expected the field `emailList` to be an array in the JSON data but got " + data['emailList']);
        }

        return true;
    }


}

SendTestAlertEmailRequest.RequiredProperties = ["emailList"];

/**
 * List of emails to send the test alerts
 * @member {Array.<String>} emailList
 */
SendTestAlertEmailRequest.prototype['emailList'] = undefined;






export default SendTestAlertEmailRequest;

