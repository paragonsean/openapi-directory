/**
 * StorSimpleManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-10-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The JobFilter model module.
 * @module model/JobFilter
 * @version 2016-10-01
 */
class JobFilter {
    /**
     * Constructs a new <code>JobFilter</code>.
     * Filters that can be specified for the job
     * @alias module:model/JobFilter
     * @param jobType {module:model/JobFilter.JobTypeEnum} The job type.
     * @param status {module:model/JobFilter.StatusEnum} The job status.
     */
    constructor(jobType, status) { 
        
        JobFilter.initialize(this, jobType, status);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, jobType, status) { 
        obj['jobType'] = jobType;
        obj['status'] = status;
    }

    /**
     * Constructs a <code>JobFilter</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/JobFilter} obj Optional instance to populate.
     * @return {module:model/JobFilter} The populated <code>JobFilter</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new JobFilter();

            if (data.hasOwnProperty('jobType')) {
                obj['jobType'] = ApiClient.convertToType(data['jobType'], 'String');
            }
            if (data.hasOwnProperty('startTime')) {
                obj['startTime'] = ApiClient.convertToType(data['startTime'], 'Date');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>JobFilter</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>JobFilter</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of JobFilter.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['jobType'] && !(typeof data['jobType'] === 'string' || data['jobType'] instanceof String)) {
            throw new Error("Expected the field `jobType` to be a primitive type in the JSON string but got " + data['jobType']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }

        return true;
    }


}

JobFilter.RequiredProperties = ["jobType", "status"];

/**
 * The job type.
 * @member {module:model/JobFilter.JobTypeEnum} jobType
 */
JobFilter.prototype['jobType'] = undefined;

/**
 * The start time of the job.
 * @member {Date} startTime
 */
JobFilter.prototype['startTime'] = undefined;

/**
 * The job status.
 * @member {module:model/JobFilter.StatusEnum} status
 */
JobFilter.prototype['status'] = undefined;





/**
 * Allowed values for the <code>jobType</code> property.
 * @enum {String}
 * @readonly
 */
JobFilter['JobTypeEnum'] = {

    /**
     * value: "Backup"
     * @const
     */
    "Backup": "Backup",

    /**
     * value: "Clone"
     * @const
     */
    "Clone": "Clone",

    /**
     * value: "Failover"
     * @const
     */
    "Failover": "Failover",

    /**
     * value: "DownloadUpdates"
     * @const
     */
    "DownloadUpdates": "DownloadUpdates",

    /**
     * value: "InstallUpdates"
     * @const
     */
    "InstallUpdates": "InstallUpdates"
};


/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
JobFilter['StatusEnum'] = {

    /**
     * value: "Invalid"
     * @const
     */
    "Invalid": "Invalid",

    /**
     * value: "Running"
     * @const
     */
    "Running": "Running",

    /**
     * value: "Succeeded"
     * @const
     */
    "Succeeded": "Succeeded",

    /**
     * value: "Failed"
     * @const
     */
    "Failed": "Failed",

    /**
     * value: "Canceled"
     * @const
     */
    "Canceled": "Canceled",

    /**
     * value: "Paused"
     * @const
     */
    "Paused": "Paused",

    /**
     * value: "Scheduled"
     * @const
     */
    "Scheduled": "Scheduled"
};



export default JobFilter;

