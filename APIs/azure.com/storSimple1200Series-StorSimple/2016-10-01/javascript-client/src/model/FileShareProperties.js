/**
 * StorSimpleManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-10-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The FileShareProperties model module.
 * @module model/FileShareProperties
 * @version 2016-10-01
 */
class FileShareProperties {
    /**
     * Constructs a new <code>FileShareProperties</code>.
     * The File Share.
     * @alias module:model/FileShareProperties
     * @param adminUser {String} The user/group who will have full permission in this share. Active directory email address. Example: xyz@contoso.com or Contoso\\xyz.
     * @param dataPolicy {module:model/FileShareProperties.DataPolicyEnum} The data policy
     * @param monitoringStatus {module:model/FileShareProperties.MonitoringStatusEnum} The monitoring status
     * @param provisionedCapacityInBytes {Number} The total provisioned capacity in Bytes
     * @param shareStatus {module:model/FileShareProperties.ShareStatusEnum} The Share Status
     */
    constructor(adminUser, dataPolicy, monitoringStatus, provisionedCapacityInBytes, shareStatus) { 
        
        FileShareProperties.initialize(this, adminUser, dataPolicy, monitoringStatus, provisionedCapacityInBytes, shareStatus);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, adminUser, dataPolicy, monitoringStatus, provisionedCapacityInBytes, shareStatus) { 
        obj['adminUser'] = adminUser;
        obj['dataPolicy'] = dataPolicy;
        obj['monitoringStatus'] = monitoringStatus;
        obj['provisionedCapacityInBytes'] = provisionedCapacityInBytes;
        obj['shareStatus'] = shareStatus;
    }

    /**
     * Constructs a <code>FileShareProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FileShareProperties} obj Optional instance to populate.
     * @return {module:model/FileShareProperties} The populated <code>FileShareProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FileShareProperties();

            if (data.hasOwnProperty('adminUser')) {
                obj['adminUser'] = ApiClient.convertToType(data['adminUser'], 'String');
            }
            if (data.hasOwnProperty('dataPolicy')) {
                obj['dataPolicy'] = ApiClient.convertToType(data['dataPolicy'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('localUsedCapacityInBytes')) {
                obj['localUsedCapacityInBytes'] = ApiClient.convertToType(data['localUsedCapacityInBytes'], 'Number');
            }
            if (data.hasOwnProperty('monitoringStatus')) {
                obj['monitoringStatus'] = ApiClient.convertToType(data['monitoringStatus'], 'String');
            }
            if (data.hasOwnProperty('provisionedCapacityInBytes')) {
                obj['provisionedCapacityInBytes'] = ApiClient.convertToType(data['provisionedCapacityInBytes'], 'Number');
            }
            if (data.hasOwnProperty('shareStatus')) {
                obj['shareStatus'] = ApiClient.convertToType(data['shareStatus'], 'String');
            }
            if (data.hasOwnProperty('usedCapacityInBytes')) {
                obj['usedCapacityInBytes'] = ApiClient.convertToType(data['usedCapacityInBytes'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FileShareProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FileShareProperties</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of FileShareProperties.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['adminUser'] && !(typeof data['adminUser'] === 'string' || data['adminUser'] instanceof String)) {
            throw new Error("Expected the field `adminUser` to be a primitive type in the JSON string but got " + data['adminUser']);
        }
        // ensure the json data is a string
        if (data['dataPolicy'] && !(typeof data['dataPolicy'] === 'string' || data['dataPolicy'] instanceof String)) {
            throw new Error("Expected the field `dataPolicy` to be a primitive type in the JSON string but got " + data['dataPolicy']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['monitoringStatus'] && !(typeof data['monitoringStatus'] === 'string' || data['monitoringStatus'] instanceof String)) {
            throw new Error("Expected the field `monitoringStatus` to be a primitive type in the JSON string but got " + data['monitoringStatus']);
        }
        // ensure the json data is a string
        if (data['shareStatus'] && !(typeof data['shareStatus'] === 'string' || data['shareStatus'] instanceof String)) {
            throw new Error("Expected the field `shareStatus` to be a primitive type in the JSON string but got " + data['shareStatus']);
        }

        return true;
    }


}

FileShareProperties.RequiredProperties = ["adminUser", "dataPolicy", "monitoringStatus", "provisionedCapacityInBytes", "shareStatus"];

/**
 * The user/group who will have full permission in this share. Active directory email address. Example: xyz@contoso.com or Contoso\\xyz.
 * @member {String} adminUser
 */
FileShareProperties.prototype['adminUser'] = undefined;

/**
 * The data policy
 * @member {module:model/FileShareProperties.DataPolicyEnum} dataPolicy
 */
FileShareProperties.prototype['dataPolicy'] = undefined;

/**
 * Description for file share
 * @member {String} description
 */
FileShareProperties.prototype['description'] = undefined;

/**
 * The local used capacity in Bytes.
 * @member {Number} localUsedCapacityInBytes
 */
FileShareProperties.prototype['localUsedCapacityInBytes'] = undefined;

/**
 * The monitoring status
 * @member {module:model/FileShareProperties.MonitoringStatusEnum} monitoringStatus
 */
FileShareProperties.prototype['monitoringStatus'] = undefined;

/**
 * The total provisioned capacity in Bytes
 * @member {Number} provisionedCapacityInBytes
 */
FileShareProperties.prototype['provisionedCapacityInBytes'] = undefined;

/**
 * The Share Status
 * @member {module:model/FileShareProperties.ShareStatusEnum} shareStatus
 */
FileShareProperties.prototype['shareStatus'] = undefined;

/**
 * The used capacity in Bytes.
 * @member {Number} usedCapacityInBytes
 */
FileShareProperties.prototype['usedCapacityInBytes'] = undefined;





/**
 * Allowed values for the <code>dataPolicy</code> property.
 * @enum {String}
 * @readonly
 */
FileShareProperties['DataPolicyEnum'] = {

    /**
     * value: "Invalid"
     * @const
     */
    "Invalid": "Invalid",

    /**
     * value: "Local"
     * @const
     */
    "Local": "Local",

    /**
     * value: "Tiered"
     * @const
     */
    "Tiered": "Tiered",

    /**
     * value: "Cloud"
     * @const
     */
    "Cloud": "Cloud"
};


/**
 * Allowed values for the <code>monitoringStatus</code> property.
 * @enum {String}
 * @readonly
 */
FileShareProperties['MonitoringStatusEnum'] = {

    /**
     * value: "Enabled"
     * @const
     */
    "Enabled": "Enabled",

    /**
     * value: "Disabled"
     * @const
     */
    "Disabled": "Disabled"
};


/**
 * Allowed values for the <code>shareStatus</code> property.
 * @enum {String}
 * @readonly
 */
FileShareProperties['ShareStatusEnum'] = {

    /**
     * value: "Online"
     * @const
     */
    "Online": "Online",

    /**
     * value: "Offline"
     * @const
     */
    "Offline": "Offline"
};



export default FileShareProperties;

