/**
 * StorSimpleManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-10-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AsymmetricEncryptedSecret from './AsymmetricEncryptedSecret';

/**
 * The StorageDomainProperties model module.
 * @module model/StorageDomainProperties
 * @version 2016-10-01
 */
class StorageDomainProperties {
    /**
     * Constructs a new <code>StorageDomainProperties</code>.
     * The storage domain properties.
     * @alias module:model/StorageDomainProperties
     * @param encryptionStatus {module:model/StorageDomainProperties.EncryptionStatusEnum} The encryption status \"Enabled | Disabled\".
     * @param storageAccountCredentialIds {Array.<String>} The storage account credentials.
     */
    constructor(encryptionStatus, storageAccountCredentialIds) { 
        
        StorageDomainProperties.initialize(this, encryptionStatus, storageAccountCredentialIds);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, encryptionStatus, storageAccountCredentialIds) { 
        obj['encryptionStatus'] = encryptionStatus;
        obj['storageAccountCredentialIds'] = storageAccountCredentialIds;
    }

    /**
     * Constructs a <code>StorageDomainProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/StorageDomainProperties} obj Optional instance to populate.
     * @return {module:model/StorageDomainProperties} The populated <code>StorageDomainProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new StorageDomainProperties();

            if (data.hasOwnProperty('encryptionKey')) {
                obj['encryptionKey'] = AsymmetricEncryptedSecret.constructFromObject(data['encryptionKey']);
            }
            if (data.hasOwnProperty('encryptionStatus')) {
                obj['encryptionStatus'] = ApiClient.convertToType(data['encryptionStatus'], 'String');
            }
            if (data.hasOwnProperty('storageAccountCredentialIds')) {
                obj['storageAccountCredentialIds'] = ApiClient.convertToType(data['storageAccountCredentialIds'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>StorageDomainProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>StorageDomainProperties</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of StorageDomainProperties.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `encryptionKey`
        if (data['encryptionKey']) { // data not null
          AsymmetricEncryptedSecret.validateJSON(data['encryptionKey']);
        }
        // ensure the json data is a string
        if (data['encryptionStatus'] && !(typeof data['encryptionStatus'] === 'string' || data['encryptionStatus'] instanceof String)) {
            throw new Error("Expected the field `encryptionStatus` to be a primitive type in the JSON string but got " + data['encryptionStatus']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['storageAccountCredentialIds'])) {
            throw new Error("Expected the field `storageAccountCredentialIds` to be an array in the JSON data but got " + data['storageAccountCredentialIds']);
        }

        return true;
    }


}

StorageDomainProperties.RequiredProperties = ["encryptionStatus", "storageAccountCredentialIds"];

/**
 * @member {module:model/AsymmetricEncryptedSecret} encryptionKey
 */
StorageDomainProperties.prototype['encryptionKey'] = undefined;

/**
 * The encryption status \"Enabled | Disabled\".
 * @member {module:model/StorageDomainProperties.EncryptionStatusEnum} encryptionStatus
 */
StorageDomainProperties.prototype['encryptionStatus'] = undefined;

/**
 * The storage account credentials.
 * @member {Array.<String>} storageAccountCredentialIds
 */
StorageDomainProperties.prototype['storageAccountCredentialIds'] = undefined;





/**
 * Allowed values for the <code>encryptionStatus</code> property.
 * @enum {String}
 * @readonly
 */
StorageDomainProperties['EncryptionStatusEnum'] = {

    /**
     * value: "Enabled"
     * @const
     */
    "Enabled": "Enabled",

    /**
     * value: "Disabled"
     * @const
     */
    "Disabled": "Disabled"
};



export default StorageDomainProperties;

