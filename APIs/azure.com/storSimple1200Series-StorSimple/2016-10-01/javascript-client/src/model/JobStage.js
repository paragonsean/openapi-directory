/**
 * StorSimpleManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-10-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The JobStage model module.
 * @module model/JobStage
 * @version 2016-10-01
 */
class JobStage {
    /**
     * Constructs a new <code>JobStage</code>.
     * Contains details about the multiple job stages of a job
     * @alias module:model/JobStage
     * @param stageStatus {module:model/JobStage.StageStatusEnum} The stage status.
     */
    constructor(stageStatus) { 
        
        JobStage.initialize(this, stageStatus);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, stageStatus) { 
        obj['stageStatus'] = stageStatus;
    }

    /**
     * Constructs a <code>JobStage</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/JobStage} obj Optional instance to populate.
     * @return {module:model/JobStage} The populated <code>JobStage</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new JobStage();

            if (data.hasOwnProperty('detail')) {
                obj['detail'] = ApiClient.convertToType(data['detail'], 'String');
            }
            if (data.hasOwnProperty('errorCode')) {
                obj['errorCode'] = ApiClient.convertToType(data['errorCode'], 'String');
            }
            if (data.hasOwnProperty('message')) {
                obj['message'] = ApiClient.convertToType(data['message'], 'String');
            }
            if (data.hasOwnProperty('stageStatus')) {
                obj['stageStatus'] = ApiClient.convertToType(data['stageStatus'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>JobStage</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>JobStage</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of JobStage.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['detail'] && !(typeof data['detail'] === 'string' || data['detail'] instanceof String)) {
            throw new Error("Expected the field `detail` to be a primitive type in the JSON string but got " + data['detail']);
        }
        // ensure the json data is a string
        if (data['errorCode'] && !(typeof data['errorCode'] === 'string' || data['errorCode'] instanceof String)) {
            throw new Error("Expected the field `errorCode` to be a primitive type in the JSON string but got " + data['errorCode']);
        }
        // ensure the json data is a string
        if (data['message'] && !(typeof data['message'] === 'string' || data['message'] instanceof String)) {
            throw new Error("Expected the field `message` to be a primitive type in the JSON string but got " + data['message']);
        }
        // ensure the json data is a string
        if (data['stageStatus'] && !(typeof data['stageStatus'] === 'string' || data['stageStatus'] instanceof String)) {
            throw new Error("Expected the field `stageStatus` to be a primitive type in the JSON string but got " + data['stageStatus']);
        }

        return true;
    }


}

JobStage.RequiredProperties = ["stageStatus"];

/**
 * The details of the stage.
 * @member {String} detail
 */
JobStage.prototype['detail'] = undefined;

/**
 * The error code of the stage if any.
 * @member {String} errorCode
 */
JobStage.prototype['errorCode'] = undefined;

/**
 * The message of the job stage.
 * @member {String} message
 */
JobStage.prototype['message'] = undefined;

/**
 * The stage status.
 * @member {module:model/JobStage.StageStatusEnum} stageStatus
 */
JobStage.prototype['stageStatus'] = undefined;





/**
 * Allowed values for the <code>stageStatus</code> property.
 * @enum {String}
 * @readonly
 */
JobStage['StageStatusEnum'] = {

    /**
     * value: "Invalid"
     * @const
     */
    "Invalid": "Invalid",

    /**
     * value: "Running"
     * @const
     */
    "Running": "Running",

    /**
     * value: "Succeeded"
     * @const
     */
    "Succeeded": "Succeeded",

    /**
     * value: "Failed"
     * @const
     */
    "Failed": "Failed",

    /**
     * value: "Canceled"
     * @const
     */
    "Canceled": "Canceled",

    /**
     * value: "Paused"
     * @const
     */
    "Paused": "Paused",

    /**
     * value: "Scheduled"
     * @const
     */
    "Scheduled": "Scheduled"
};



export default JobStage;

