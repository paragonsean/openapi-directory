/**
 * StorSimpleManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-10-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import FileShare from './FileShare';
import ISCSIDisk from './ISCSIDisk';

/**
 * The CloneRequestProperties model module.
 * @module model/CloneRequestProperties
 * @version 2016-10-01
 */
class CloneRequestProperties {
    /**
     * Constructs a new <code>CloneRequestProperties</code>.
     * Properties of CloneRequest
     * @alias module:model/CloneRequestProperties
     * @param newEndpointName {String} Name of new endpoint which will created as part of clone job.
     * @param targetAccessPointId {String} Access point Id on which clone job will performed.
     * @param targetDeviceId {String} DeviceId of the device which will act as the Clone target
     */
    constructor(newEndpointName, targetAccessPointId, targetDeviceId) { 
        
        CloneRequestProperties.initialize(this, newEndpointName, targetAccessPointId, targetDeviceId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, newEndpointName, targetAccessPointId, targetDeviceId) { 
        obj['newEndpointName'] = newEndpointName;
        obj['targetAccessPointId'] = targetAccessPointId;
        obj['targetDeviceId'] = targetDeviceId;
    }

    /**
     * Constructs a <code>CloneRequestProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CloneRequestProperties} obj Optional instance to populate.
     * @return {module:model/CloneRequestProperties} The populated <code>CloneRequestProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CloneRequestProperties();

            if (data.hasOwnProperty('disk')) {
                obj['disk'] = ISCSIDisk.constructFromObject(data['disk']);
            }
            if (data.hasOwnProperty('newEndpointName')) {
                obj['newEndpointName'] = ApiClient.convertToType(data['newEndpointName'], 'String');
            }
            if (data.hasOwnProperty('share')) {
                obj['share'] = FileShare.constructFromObject(data['share']);
            }
            if (data.hasOwnProperty('targetAccessPointId')) {
                obj['targetAccessPointId'] = ApiClient.convertToType(data['targetAccessPointId'], 'String');
            }
            if (data.hasOwnProperty('targetDeviceId')) {
                obj['targetDeviceId'] = ApiClient.convertToType(data['targetDeviceId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CloneRequestProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CloneRequestProperties</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CloneRequestProperties.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `disk`
        if (data['disk']) { // data not null
          ISCSIDisk.validateJSON(data['disk']);
        }
        // ensure the json data is a string
        if (data['newEndpointName'] && !(typeof data['newEndpointName'] === 'string' || data['newEndpointName'] instanceof String)) {
            throw new Error("Expected the field `newEndpointName` to be a primitive type in the JSON string but got " + data['newEndpointName']);
        }
        // validate the optional field `share`
        if (data['share']) { // data not null
          FileShare.validateJSON(data['share']);
        }
        // ensure the json data is a string
        if (data['targetAccessPointId'] && !(typeof data['targetAccessPointId'] === 'string' || data['targetAccessPointId'] instanceof String)) {
            throw new Error("Expected the field `targetAccessPointId` to be a primitive type in the JSON string but got " + data['targetAccessPointId']);
        }
        // ensure the json data is a string
        if (data['targetDeviceId'] && !(typeof data['targetDeviceId'] === 'string' || data['targetDeviceId'] instanceof String)) {
            throw new Error("Expected the field `targetDeviceId` to be a primitive type in the JSON string but got " + data['targetDeviceId']);
        }

        return true;
    }


}

CloneRequestProperties.RequiredProperties = ["newEndpointName", "targetAccessPointId", "targetDeviceId"];

/**
 * @member {module:model/ISCSIDisk} disk
 */
CloneRequestProperties.prototype['disk'] = undefined;

/**
 * Name of new endpoint which will created as part of clone job.
 * @member {String} newEndpointName
 */
CloneRequestProperties.prototype['newEndpointName'] = undefined;

/**
 * @member {module:model/FileShare} share
 */
CloneRequestProperties.prototype['share'] = undefined;

/**
 * Access point Id on which clone job will performed.
 * @member {String} targetAccessPointId
 */
CloneRequestProperties.prototype['targetAccessPointId'] = undefined;

/**
 * DeviceId of the device which will act as the Clone target
 * @member {String} targetDeviceId
 */
CloneRequestProperties.prototype['targetDeviceId'] = undefined;






export default CloneRequestProperties;

