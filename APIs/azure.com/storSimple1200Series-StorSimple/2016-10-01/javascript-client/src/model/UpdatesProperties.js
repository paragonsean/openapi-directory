/**
 * StorSimpleManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-10-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UpdatesProperties model module.
 * @module model/UpdatesProperties
 * @version 2016-10-01
 */
class UpdatesProperties {
    /**
     * Constructs a new <code>UpdatesProperties</code>.
     * Properties of the update profile
     * @alias module:model/UpdatesProperties
     */
    constructor() { 
        
        UpdatesProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UpdatesProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdatesProperties} obj Optional instance to populate.
     * @return {module:model/UpdatesProperties} The populated <code>UpdatesProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdatesProperties();

            if (data.hasOwnProperty('deviceLastScannedTime')) {
                obj['deviceLastScannedTime'] = ApiClient.convertToType(data['deviceLastScannedTime'], 'Date');
            }
            if (data.hasOwnProperty('deviceVersion')) {
                obj['deviceVersion'] = ApiClient.convertToType(data['deviceVersion'], 'String');
            }
            if (data.hasOwnProperty('inProgressDownloadJobId')) {
                obj['inProgressDownloadJobId'] = ApiClient.convertToType(data['inProgressDownloadJobId'], 'String');
            }
            if (data.hasOwnProperty('inProgressDownloadJobStartedTime')) {
                obj['inProgressDownloadJobStartedTime'] = ApiClient.convertToType(data['inProgressDownloadJobStartedTime'], 'Date');
            }
            if (data.hasOwnProperty('inProgressInstallJobId')) {
                obj['inProgressInstallJobId'] = ApiClient.convertToType(data['inProgressInstallJobId'], 'String');
            }
            if (data.hasOwnProperty('inProgressInstallJobStartedTime')) {
                obj['inProgressInstallJobStartedTime'] = ApiClient.convertToType(data['inProgressInstallJobStartedTime'], 'Date');
            }
            if (data.hasOwnProperty('inProgressScanStartedTime')) {
                obj['inProgressScanStartedTime'] = ApiClient.convertToType(data['inProgressScanStartedTime'], 'Date');
            }
            if (data.hasOwnProperty('lastCompletedDownloadJobTime')) {
                obj['lastCompletedDownloadJobTime'] = ApiClient.convertToType(data['lastCompletedDownloadJobTime'], 'Date');
            }
            if (data.hasOwnProperty('lastCompletedInstallJobTime')) {
                obj['lastCompletedInstallJobTime'] = ApiClient.convertToType(data['lastCompletedInstallJobTime'], 'Date');
            }
            if (data.hasOwnProperty('lastCompletedScanTime')) {
                obj['lastCompletedScanTime'] = ApiClient.convertToType(data['lastCompletedScanTime'], 'Date');
            }
            if (data.hasOwnProperty('rebootRequiredForInstall')) {
                obj['rebootRequiredForInstall'] = ApiClient.convertToType(data['rebootRequiredForInstall'], 'Boolean');
            }
            if (data.hasOwnProperty('regularUpdatesAvailable')) {
                obj['regularUpdatesAvailable'] = ApiClient.convertToType(data['regularUpdatesAvailable'], 'Boolean');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('totalItemsPendingForDownload')) {
                obj['totalItemsPendingForDownload'] = ApiClient.convertToType(data['totalItemsPendingForDownload'], 'Number');
            }
            if (data.hasOwnProperty('totalItemsPendingForInstall')) {
                obj['totalItemsPendingForInstall'] = ApiClient.convertToType(data['totalItemsPendingForInstall'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdatesProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdatesProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['deviceVersion'] && !(typeof data['deviceVersion'] === 'string' || data['deviceVersion'] instanceof String)) {
            throw new Error("Expected the field `deviceVersion` to be a primitive type in the JSON string but got " + data['deviceVersion']);
        }
        // ensure the json data is a string
        if (data['inProgressDownloadJobId'] && !(typeof data['inProgressDownloadJobId'] === 'string' || data['inProgressDownloadJobId'] instanceof String)) {
            throw new Error("Expected the field `inProgressDownloadJobId` to be a primitive type in the JSON string but got " + data['inProgressDownloadJobId']);
        }
        // ensure the json data is a string
        if (data['inProgressInstallJobId'] && !(typeof data['inProgressInstallJobId'] === 'string' || data['inProgressInstallJobId'] instanceof String)) {
            throw new Error("Expected the field `inProgressInstallJobId` to be a primitive type in the JSON string but got " + data['inProgressInstallJobId']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }

        return true;
    }


}



/**
 * The last time when the device did an update scan.
 * @member {Date} deviceLastScannedTime
 */
UpdatesProperties.prototype['deviceLastScannedTime'] = undefined;

/**
 * The current Device version.
 * @member {String} deviceVersion
 */
UpdatesProperties.prototype['deviceVersion'] = undefined;

/**
 * If a download is in progress, this field contains the JobId of that particular download job
 * @member {String} inProgressDownloadJobId
 */
UpdatesProperties.prototype['inProgressDownloadJobId'] = undefined;

/**
 * The time when the currently running download (if any) started
 * @member {Date} inProgressDownloadJobStartedTime
 */
UpdatesProperties.prototype['inProgressDownloadJobStartedTime'] = undefined;

/**
 * If an install is in progress, this field contains the JobId of that particular install job
 * @member {String} inProgressInstallJobId
 */
UpdatesProperties.prototype['inProgressInstallJobId'] = undefined;

/**
 * The time when the currently running install (if any) started
 * @member {Date} inProgressInstallJobStartedTime
 */
UpdatesProperties.prototype['inProgressInstallJobStartedTime'] = undefined;

/**
 * The time when the currently running scan (if any) started
 * @member {Date} inProgressScanStartedTime
 */
UpdatesProperties.prototype['inProgressScanStartedTime'] = undefined;

/**
 * The time when the last Download job was completed (success|cancelled|failed) on the device.
 * @member {Date} lastCompletedDownloadJobTime
 */
UpdatesProperties.prototype['lastCompletedDownloadJobTime'] = undefined;

/**
 * The time when the last Install job was completed (success|cancelled|failed) on the device.
 * @member {Date} lastCompletedInstallJobTime
 */
UpdatesProperties.prototype['lastCompletedInstallJobTime'] = undefined;

/**
 * The time when the last scan job was completed (success|cancelled|failed) on the device.
 * @member {Date} lastCompletedScanTime
 */
UpdatesProperties.prototype['lastCompletedScanTime'] = undefined;

/**
 * Set to true if RegularUpdatesAvailable is true and if at least one of the updateItems detected has needs a reboot to install.
 * @member {Boolean} rebootRequiredForInstall
 */
UpdatesProperties.prototype['rebootRequiredForInstall'] = undefined;

/**
 * Set to true if regular updates were detected for the current version of the device.
 * @member {Boolean} regularUpdatesAvailable
 */
UpdatesProperties.prototype['regularUpdatesAvailable'] = undefined;

/**
 * The current update operation.
 * @member {module:model/UpdatesProperties.StatusEnum} status
 */
UpdatesProperties.prototype['status'] = undefined;

/**
 * The total number of items pending for download.
 * @member {Number} totalItemsPendingForDownload
 */
UpdatesProperties.prototype['totalItemsPendingForDownload'] = undefined;

/**
 * The total number of items pending for install.
 * @member {Number} totalItemsPendingForInstall
 */
UpdatesProperties.prototype['totalItemsPendingForInstall'] = undefined;





/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
UpdatesProperties['StatusEnum'] = {

    /**
     * value: "Idle"
     * @const
     */
    "Idle": "Idle",

    /**
     * value: "Scanning"
     * @const
     */
    "Scanning": "Scanning",

    /**
     * value: "Downloading"
     * @const
     */
    "Downloading": "Downloading",

    /**
     * value: "Installing"
     * @const
     */
    "Installing": "Installing"
};



export default UpdatesProperties;

