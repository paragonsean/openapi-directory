/**
 * StorSimpleManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-10-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ResourceCertificateAndAADDetails model module.
 * @module model/ResourceCertificateAndAADDetails
 * @version 2016-10-01
 */
class ResourceCertificateAndAADDetails {
    /**
     * Constructs a new <code>ResourceCertificateAndAADDetails</code>.
     * Resource Certificate And AAD Details from IDM
     * @alias module:model/ResourceCertificateAndAADDetails
     * @param aadAuthority {String} AAD tenant authority
     * @param aadTenantId {String} AAD tenant Id
     * @param azureManagementEndpointAudience {String} Azure Management Endpoint Audience
     * @param certificate {String} Gets or sets the base64 encoded certificate raw data string
     * @param friendlyName {String} Certificate friendly name
     * @param issuer {String} Certificate issuer
     * @param resourceId {Number} Gets or Sets the ResourceId
     * @param servicePrincipalClientId {String} AAD service principal clientId
     * @param servicePrincipalObjectId {String} AAD service principal ObjectId
     * @param subject {String} Certificate Subject Name
     * @param thumbprint {String} Certificate thumbprint
     * @param validFrom {Date} Certificate Validity start Date time
     * @param validTo {Date} Certificate Validity End Date time
     */
    constructor(aadAuthority, aadTenantId, azureManagementEndpointAudience, certificate, friendlyName, issuer, resourceId, servicePrincipalClientId, servicePrincipalObjectId, subject, thumbprint, validFrom, validTo) { 
        
        ResourceCertificateAndAADDetails.initialize(this, aadAuthority, aadTenantId, azureManagementEndpointAudience, certificate, friendlyName, issuer, resourceId, servicePrincipalClientId, servicePrincipalObjectId, subject, thumbprint, validFrom, validTo);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, aadAuthority, aadTenantId, azureManagementEndpointAudience, certificate, friendlyName, issuer, resourceId, servicePrincipalClientId, servicePrincipalObjectId, subject, thumbprint, validFrom, validTo) { 
        obj['aadAuthority'] = aadAuthority;
        obj['aadTenantId'] = aadTenantId;
        obj['azureManagementEndpointAudience'] = azureManagementEndpointAudience;
        obj['certificate'] = certificate;
        obj['friendlyName'] = friendlyName;
        obj['issuer'] = issuer;
        obj['resourceId'] = resourceId;
        obj['servicePrincipalClientId'] = servicePrincipalClientId;
        obj['servicePrincipalObjectId'] = servicePrincipalObjectId;
        obj['subject'] = subject;
        obj['thumbprint'] = thumbprint;
        obj['validFrom'] = validFrom;
        obj['validTo'] = validTo;
    }

    /**
     * Constructs a <code>ResourceCertificateAndAADDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ResourceCertificateAndAADDetails} obj Optional instance to populate.
     * @return {module:model/ResourceCertificateAndAADDetails} The populated <code>ResourceCertificateAndAADDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ResourceCertificateAndAADDetails();

            if (data.hasOwnProperty('aadAuthority')) {
                obj['aadAuthority'] = ApiClient.convertToType(data['aadAuthority'], 'String');
            }
            if (data.hasOwnProperty('aadTenantId')) {
                obj['aadTenantId'] = ApiClient.convertToType(data['aadTenantId'], 'String');
            }
            if (data.hasOwnProperty('authType')) {
                obj['authType'] = ApiClient.convertToType(data['authType'], 'String');
            }
            if (data.hasOwnProperty('azureManagementEndpointAudience')) {
                obj['azureManagementEndpointAudience'] = ApiClient.convertToType(data['azureManagementEndpointAudience'], 'String');
            }
            if (data.hasOwnProperty('certificate')) {
                obj['certificate'] = ApiClient.convertToType(data['certificate'], 'String');
            }
            if (data.hasOwnProperty('friendlyName')) {
                obj['friendlyName'] = ApiClient.convertToType(data['friendlyName'], 'String');
            }
            if (data.hasOwnProperty('issuer')) {
                obj['issuer'] = ApiClient.convertToType(data['issuer'], 'String');
            }
            if (data.hasOwnProperty('resourceId')) {
                obj['resourceId'] = ApiClient.convertToType(data['resourceId'], 'Number');
            }
            if (data.hasOwnProperty('servicePrincipalClientId')) {
                obj['servicePrincipalClientId'] = ApiClient.convertToType(data['servicePrincipalClientId'], 'String');
            }
            if (data.hasOwnProperty('servicePrincipalObjectId')) {
                obj['servicePrincipalObjectId'] = ApiClient.convertToType(data['servicePrincipalObjectId'], 'String');
            }
            if (data.hasOwnProperty('subject')) {
                obj['subject'] = ApiClient.convertToType(data['subject'], 'String');
            }
            if (data.hasOwnProperty('thumbprint')) {
                obj['thumbprint'] = ApiClient.convertToType(data['thumbprint'], 'String');
            }
            if (data.hasOwnProperty('validFrom')) {
                obj['validFrom'] = ApiClient.convertToType(data['validFrom'], 'Date');
            }
            if (data.hasOwnProperty('validTo')) {
                obj['validTo'] = ApiClient.convertToType(data['validTo'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ResourceCertificateAndAADDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ResourceCertificateAndAADDetails</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ResourceCertificateAndAADDetails.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['aadAuthority'] && !(typeof data['aadAuthority'] === 'string' || data['aadAuthority'] instanceof String)) {
            throw new Error("Expected the field `aadAuthority` to be a primitive type in the JSON string but got " + data['aadAuthority']);
        }
        // ensure the json data is a string
        if (data['aadTenantId'] && !(typeof data['aadTenantId'] === 'string' || data['aadTenantId'] instanceof String)) {
            throw new Error("Expected the field `aadTenantId` to be a primitive type in the JSON string but got " + data['aadTenantId']);
        }
        // ensure the json data is a string
        if (data['authType'] && !(typeof data['authType'] === 'string' || data['authType'] instanceof String)) {
            throw new Error("Expected the field `authType` to be a primitive type in the JSON string but got " + data['authType']);
        }
        // ensure the json data is a string
        if (data['azureManagementEndpointAudience'] && !(typeof data['azureManagementEndpointAudience'] === 'string' || data['azureManagementEndpointAudience'] instanceof String)) {
            throw new Error("Expected the field `azureManagementEndpointAudience` to be a primitive type in the JSON string but got " + data['azureManagementEndpointAudience']);
        }
        // ensure the json data is a string
        if (data['certificate'] && !(typeof data['certificate'] === 'string' || data['certificate'] instanceof String)) {
            throw new Error("Expected the field `certificate` to be a primitive type in the JSON string but got " + data['certificate']);
        }
        // ensure the json data is a string
        if (data['friendlyName'] && !(typeof data['friendlyName'] === 'string' || data['friendlyName'] instanceof String)) {
            throw new Error("Expected the field `friendlyName` to be a primitive type in the JSON string but got " + data['friendlyName']);
        }
        // ensure the json data is a string
        if (data['issuer'] && !(typeof data['issuer'] === 'string' || data['issuer'] instanceof String)) {
            throw new Error("Expected the field `issuer` to be a primitive type in the JSON string but got " + data['issuer']);
        }
        // ensure the json data is a string
        if (data['servicePrincipalClientId'] && !(typeof data['servicePrincipalClientId'] === 'string' || data['servicePrincipalClientId'] instanceof String)) {
            throw new Error("Expected the field `servicePrincipalClientId` to be a primitive type in the JSON string but got " + data['servicePrincipalClientId']);
        }
        // ensure the json data is a string
        if (data['servicePrincipalObjectId'] && !(typeof data['servicePrincipalObjectId'] === 'string' || data['servicePrincipalObjectId'] instanceof String)) {
            throw new Error("Expected the field `servicePrincipalObjectId` to be a primitive type in the JSON string but got " + data['servicePrincipalObjectId']);
        }
        // ensure the json data is a string
        if (data['subject'] && !(typeof data['subject'] === 'string' || data['subject'] instanceof String)) {
            throw new Error("Expected the field `subject` to be a primitive type in the JSON string but got " + data['subject']);
        }
        // ensure the json data is a string
        if (data['thumbprint'] && !(typeof data['thumbprint'] === 'string' || data['thumbprint'] instanceof String)) {
            throw new Error("Expected the field `thumbprint` to be a primitive type in the JSON string but got " + data['thumbprint']);
        }

        return true;
    }


}

ResourceCertificateAndAADDetails.RequiredProperties = ["aadAuthority", "aadTenantId", "azureManagementEndpointAudience", "certificate", "friendlyName", "issuer", "resourceId", "servicePrincipalClientId", "servicePrincipalObjectId", "subject", "thumbprint", "validFrom", "validTo"];

/**
 * AAD tenant authority
 * @member {String} aadAuthority
 */
ResourceCertificateAndAADDetails.prototype['aadAuthority'] = undefined;

/**
 * AAD tenant Id
 * @member {String} aadTenantId
 */
ResourceCertificateAndAADDetails.prototype['aadTenantId'] = undefined;

/**
 * Specify the Authentication type
 * @member {module:model/ResourceCertificateAndAADDetails.AuthTypeEnum} authType
 */
ResourceCertificateAndAADDetails.prototype['authType'] = undefined;

/**
 * Azure Management Endpoint Audience
 * @member {String} azureManagementEndpointAudience
 */
ResourceCertificateAndAADDetails.prototype['azureManagementEndpointAudience'] = undefined;

/**
 * Gets or sets the base64 encoded certificate raw data string
 * @member {String} certificate
 */
ResourceCertificateAndAADDetails.prototype['certificate'] = undefined;

/**
 * Certificate friendly name
 * @member {String} friendlyName
 */
ResourceCertificateAndAADDetails.prototype['friendlyName'] = undefined;

/**
 * Certificate issuer
 * @member {String} issuer
 */
ResourceCertificateAndAADDetails.prototype['issuer'] = undefined;

/**
 * Gets or Sets the ResourceId
 * @member {Number} resourceId
 */
ResourceCertificateAndAADDetails.prototype['resourceId'] = undefined;

/**
 * AAD service principal clientId
 * @member {String} servicePrincipalClientId
 */
ResourceCertificateAndAADDetails.prototype['servicePrincipalClientId'] = undefined;

/**
 * AAD service principal ObjectId
 * @member {String} servicePrincipalObjectId
 */
ResourceCertificateAndAADDetails.prototype['servicePrincipalObjectId'] = undefined;

/**
 * Certificate Subject Name
 * @member {String} subject
 */
ResourceCertificateAndAADDetails.prototype['subject'] = undefined;

/**
 * Certificate thumbprint
 * @member {String} thumbprint
 */
ResourceCertificateAndAADDetails.prototype['thumbprint'] = undefined;

/**
 * Certificate Validity start Date time
 * @member {Date} validFrom
 */
ResourceCertificateAndAADDetails.prototype['validFrom'] = undefined;

/**
 * Certificate Validity End Date time
 * @member {Date} validTo
 */
ResourceCertificateAndAADDetails.prototype['validTo'] = undefined;





/**
 * Allowed values for the <code>authType</code> property.
 * @enum {String}
 * @readonly
 */
ResourceCertificateAndAADDetails['AuthTypeEnum'] = {

    /**
     * value: "Invalid"
     * @const
     */
    "Invalid": "Invalid",

    /**
     * value: "AccessControlService"
     * @const
     */
    "AccessControlService": "AccessControlService",

    /**
     * value: "AzureActiveDirectory"
     * @const
     */
    "AzureActiveDirectory": "AzureActiveDirectory"
};



export default ResourceCertificateAndAADDetails;

