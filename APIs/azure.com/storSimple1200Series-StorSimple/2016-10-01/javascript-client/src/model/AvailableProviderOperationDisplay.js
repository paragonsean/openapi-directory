/**
 * StorSimpleManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-10-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AvailableProviderOperationDisplay model module.
 * @module model/AvailableProviderOperationDisplay
 * @version 2016-10-01
 */
class AvailableProviderOperationDisplay {
    /**
     * Constructs a new <code>AvailableProviderOperationDisplay</code>.
     * Contains the localized display information for this particular operation / action.   These value will be used by several clients for   (1) custom role definitions for RBAC;   (2) complex query filters for the event service; and (3) audit history / records for management operations.
     * @alias module:model/AvailableProviderOperationDisplay
     */
    constructor() { 
        
        AvailableProviderOperationDisplay.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AvailableProviderOperationDisplay</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AvailableProviderOperationDisplay} obj Optional instance to populate.
     * @return {module:model/AvailableProviderOperationDisplay} The populated <code>AvailableProviderOperationDisplay</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AvailableProviderOperationDisplay();

            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('operation')) {
                obj['operation'] = ApiClient.convertToType(data['operation'], 'String');
            }
            if (data.hasOwnProperty('provider')) {
                obj['provider'] = ApiClient.convertToType(data['provider'], 'String');
            }
            if (data.hasOwnProperty('resource')) {
                obj['resource'] = ApiClient.convertToType(data['resource'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AvailableProviderOperationDisplay</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AvailableProviderOperationDisplay</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['operation'] && !(typeof data['operation'] === 'string' || data['operation'] instanceof String)) {
            throw new Error("Expected the field `operation` to be a primitive type in the JSON string but got " + data['operation']);
        }
        // ensure the json data is a string
        if (data['provider'] && !(typeof data['provider'] === 'string' || data['provider'] instanceof String)) {
            throw new Error("Expected the field `provider` to be a primitive type in the JSON string but got " + data['provider']);
        }
        // ensure the json data is a string
        if (data['resource'] && !(typeof data['resource'] === 'string' || data['resource'] instanceof String)) {
            throw new Error("Expected the field `resource` to be a primitive type in the JSON string but got " + data['resource']);
        }

        return true;
    }


}



/**
 * Gets or sets Description  The localized friendly description for the operation, as it should be shown to the user.   It should be thorough, yet concise – it will be used in tool tips and detailed views.
 * @member {String} description
 */
AvailableProviderOperationDisplay.prototype['description'] = undefined;

/**
 * Gets or sets Operation  The localized friendly name for the operation, as it should be shown to the user.   It should be concise (to fit in drop downs) but clear (i.e. self-documenting). It should use Title Casing and include the entity/resource to which it applies.
 * @member {String} operation
 */
AvailableProviderOperationDisplay.prototype['operation'] = undefined;

/**
 * Gets or sets Provider  The localized friendly form of the resource provider name – it is expected to also include the publisher/company responsible.   It should use Title Casing and begin with “Microsoft” for 1st party services.
 * @member {String} provider
 */
AvailableProviderOperationDisplay.prototype['provider'] = undefined;

/**
 * Gets or sets Resource  The localized friendly form of the resource type related to this action/operation – it should match the public documentation for the resource provider.   It should use Title Casing – for examples, please refer to the “name” section.
 * @member {String} resource
 */
AvailableProviderOperationDisplay.prototype['resource'] = undefined;






export default AvailableProviderOperationDisplay;

