/**
 * StorSimpleManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-10-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The EncryptionSettingsProperties model module.
 * @module model/EncryptionSettingsProperties
 * @version 2016-10-01
 */
class EncryptionSettingsProperties {
    /**
     * Constructs a new <code>EncryptionSettingsProperties</code>.
     * The properties of EncryptionSettings
     * @alias module:model/EncryptionSettingsProperties
     * @param encryptionStatus {module:model/EncryptionSettingsProperties.EncryptionStatusEnum} The encryption status which indicates if encryption is enabled or not.
     * @param keyRolloverStatus {module:model/EncryptionSettingsProperties.KeyRolloverStatusEnum} The key rollover status which indicates if key rollover is required or not. If secrets encryption has been upgraded, then it requires key rollover.
     */
    constructor(encryptionStatus, keyRolloverStatus) { 
        
        EncryptionSettingsProperties.initialize(this, encryptionStatus, keyRolloverStatus);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, encryptionStatus, keyRolloverStatus) { 
        obj['encryptionStatus'] = encryptionStatus;
        obj['keyRolloverStatus'] = keyRolloverStatus;
    }

    /**
     * Constructs a <code>EncryptionSettingsProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EncryptionSettingsProperties} obj Optional instance to populate.
     * @return {module:model/EncryptionSettingsProperties} The populated <code>EncryptionSettingsProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EncryptionSettingsProperties();

            if (data.hasOwnProperty('encryptionStatus')) {
                obj['encryptionStatus'] = ApiClient.convertToType(data['encryptionStatus'], 'String');
            }
            if (data.hasOwnProperty('keyRolloverStatus')) {
                obj['keyRolloverStatus'] = ApiClient.convertToType(data['keyRolloverStatus'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EncryptionSettingsProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EncryptionSettingsProperties</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of EncryptionSettingsProperties.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['encryptionStatus'] && !(typeof data['encryptionStatus'] === 'string' || data['encryptionStatus'] instanceof String)) {
            throw new Error("Expected the field `encryptionStatus` to be a primitive type in the JSON string but got " + data['encryptionStatus']);
        }
        // ensure the json data is a string
        if (data['keyRolloverStatus'] && !(typeof data['keyRolloverStatus'] === 'string' || data['keyRolloverStatus'] instanceof String)) {
            throw new Error("Expected the field `keyRolloverStatus` to be a primitive type in the JSON string but got " + data['keyRolloverStatus']);
        }

        return true;
    }


}

EncryptionSettingsProperties.RequiredProperties = ["encryptionStatus", "keyRolloverStatus"];

/**
 * The encryption status which indicates if encryption is enabled or not.
 * @member {module:model/EncryptionSettingsProperties.EncryptionStatusEnum} encryptionStatus
 */
EncryptionSettingsProperties.prototype['encryptionStatus'] = undefined;

/**
 * The key rollover status which indicates if key rollover is required or not. If secrets encryption has been upgraded, then it requires key rollover.
 * @member {module:model/EncryptionSettingsProperties.KeyRolloverStatusEnum} keyRolloverStatus
 */
EncryptionSettingsProperties.prototype['keyRolloverStatus'] = undefined;





/**
 * Allowed values for the <code>encryptionStatus</code> property.
 * @enum {String}
 * @readonly
 */
EncryptionSettingsProperties['EncryptionStatusEnum'] = {

    /**
     * value: "Enabled"
     * @const
     */
    "Enabled": "Enabled",

    /**
     * value: "Disabled"
     * @const
     */
    "Disabled": "Disabled"
};


/**
 * Allowed values for the <code>keyRolloverStatus</code> property.
 * @enum {String}
 * @readonly
 */
EncryptionSettingsProperties['KeyRolloverStatusEnum'] = {

    /**
     * value: "Required"
     * @const
     */
    "Required": "Required",

    /**
     * value: "NotRequired"
     * @const
     */
    "NotRequired": "NotRequired"
};



export default EncryptionSettingsProperties;

