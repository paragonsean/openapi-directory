/**
 * StorSimpleManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-10-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The FileServerProperties model module.
 * @module model/FileServerProperties
 * @version 2016-10-01
 */
class FileServerProperties {
    /**
     * Constructs a new <code>FileServerProperties</code>.
     * The file server properties.
     * @alias module:model/FileServerProperties
     * @param backupScheduleGroupId {String} The backup policy id.
     * @param domainName {String} Domain of the file server
     * @param storageDomainId {String} The storage domain id.
     */
    constructor(backupScheduleGroupId, domainName, storageDomainId) { 
        
        FileServerProperties.initialize(this, backupScheduleGroupId, domainName, storageDomainId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, backupScheduleGroupId, domainName, storageDomainId) { 
        obj['backupScheduleGroupId'] = backupScheduleGroupId;
        obj['domainName'] = domainName;
        obj['storageDomainId'] = storageDomainId;
    }

    /**
     * Constructs a <code>FileServerProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FileServerProperties} obj Optional instance to populate.
     * @return {module:model/FileServerProperties} The populated <code>FileServerProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FileServerProperties();

            if (data.hasOwnProperty('backupScheduleGroupId')) {
                obj['backupScheduleGroupId'] = ApiClient.convertToType(data['backupScheduleGroupId'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('domainName')) {
                obj['domainName'] = ApiClient.convertToType(data['domainName'], 'String');
            }
            if (data.hasOwnProperty('storageDomainId')) {
                obj['storageDomainId'] = ApiClient.convertToType(data['storageDomainId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FileServerProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FileServerProperties</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of FileServerProperties.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['backupScheduleGroupId'] && !(typeof data['backupScheduleGroupId'] === 'string' || data['backupScheduleGroupId'] instanceof String)) {
            throw new Error("Expected the field `backupScheduleGroupId` to be a primitive type in the JSON string but got " + data['backupScheduleGroupId']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['domainName'] && !(typeof data['domainName'] === 'string' || data['domainName'] instanceof String)) {
            throw new Error("Expected the field `domainName` to be a primitive type in the JSON string but got " + data['domainName']);
        }
        // ensure the json data is a string
        if (data['storageDomainId'] && !(typeof data['storageDomainId'] === 'string' || data['storageDomainId'] instanceof String)) {
            throw new Error("Expected the field `storageDomainId` to be a primitive type in the JSON string but got " + data['storageDomainId']);
        }

        return true;
    }


}

FileServerProperties.RequiredProperties = ["backupScheduleGroupId", "domainName", "storageDomainId"];

/**
 * The backup policy id.
 * @member {String} backupScheduleGroupId
 */
FileServerProperties.prototype['backupScheduleGroupId'] = undefined;

/**
 * The description of the file server
 * @member {String} description
 */
FileServerProperties.prototype['description'] = undefined;

/**
 * Domain of the file server
 * @member {String} domainName
 */
FileServerProperties.prototype['domainName'] = undefined;

/**
 * The storage domain id.
 * @member {String} storageDomainId
 */
FileServerProperties.prototype['storageDomainId'] = undefined;






export default FileServerProperties;

