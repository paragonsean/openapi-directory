/**
 * StorSimpleManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-10-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.StorSimpleManagementClient);
  }
}(this, function(expect, StorSimpleManagementClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new StorSimpleManagementClient.UpdatesProperties();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('UpdatesProperties', function() {
    it('should create an instance of UpdatesProperties', function() {
      // uncomment below and update the code to test UpdatesProperties
      //var instance = new StorSimpleManagementClient.UpdatesProperties();
      //expect(instance).to.be.a(StorSimpleManagementClient.UpdatesProperties);
    });

    it('should have the property deviceLastScannedTime (base name: "deviceLastScannedTime")', function() {
      // uncomment below and update the code to test the property deviceLastScannedTime
      //var instance = new StorSimpleManagementClient.UpdatesProperties();
      //expect(instance).to.be();
    });

    it('should have the property deviceVersion (base name: "deviceVersion")', function() {
      // uncomment below and update the code to test the property deviceVersion
      //var instance = new StorSimpleManagementClient.UpdatesProperties();
      //expect(instance).to.be();
    });

    it('should have the property inProgressDownloadJobId (base name: "inProgressDownloadJobId")', function() {
      // uncomment below and update the code to test the property inProgressDownloadJobId
      //var instance = new StorSimpleManagementClient.UpdatesProperties();
      //expect(instance).to.be();
    });

    it('should have the property inProgressDownloadJobStartedTime (base name: "inProgressDownloadJobStartedTime")', function() {
      // uncomment below and update the code to test the property inProgressDownloadJobStartedTime
      //var instance = new StorSimpleManagementClient.UpdatesProperties();
      //expect(instance).to.be();
    });

    it('should have the property inProgressInstallJobId (base name: "inProgressInstallJobId")', function() {
      // uncomment below and update the code to test the property inProgressInstallJobId
      //var instance = new StorSimpleManagementClient.UpdatesProperties();
      //expect(instance).to.be();
    });

    it('should have the property inProgressInstallJobStartedTime (base name: "inProgressInstallJobStartedTime")', function() {
      // uncomment below and update the code to test the property inProgressInstallJobStartedTime
      //var instance = new StorSimpleManagementClient.UpdatesProperties();
      //expect(instance).to.be();
    });

    it('should have the property inProgressScanStartedTime (base name: "inProgressScanStartedTime")', function() {
      // uncomment below and update the code to test the property inProgressScanStartedTime
      //var instance = new StorSimpleManagementClient.UpdatesProperties();
      //expect(instance).to.be();
    });

    it('should have the property lastCompletedDownloadJobTime (base name: "lastCompletedDownloadJobTime")', function() {
      // uncomment below and update the code to test the property lastCompletedDownloadJobTime
      //var instance = new StorSimpleManagementClient.UpdatesProperties();
      //expect(instance).to.be();
    });

    it('should have the property lastCompletedInstallJobTime (base name: "lastCompletedInstallJobTime")', function() {
      // uncomment below and update the code to test the property lastCompletedInstallJobTime
      //var instance = new StorSimpleManagementClient.UpdatesProperties();
      //expect(instance).to.be();
    });

    it('should have the property lastCompletedScanTime (base name: "lastCompletedScanTime")', function() {
      // uncomment below and update the code to test the property lastCompletedScanTime
      //var instance = new StorSimpleManagementClient.UpdatesProperties();
      //expect(instance).to.be();
    });

    it('should have the property rebootRequiredForInstall (base name: "rebootRequiredForInstall")', function() {
      // uncomment below and update the code to test the property rebootRequiredForInstall
      //var instance = new StorSimpleManagementClient.UpdatesProperties();
      //expect(instance).to.be();
    });

    it('should have the property regularUpdatesAvailable (base name: "regularUpdatesAvailable")', function() {
      // uncomment below and update the code to test the property regularUpdatesAvailable
      //var instance = new StorSimpleManagementClient.UpdatesProperties();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new StorSimpleManagementClient.UpdatesProperties();
      //expect(instance).to.be();
    });

    it('should have the property totalItemsPendingForDownload (base name: "totalItemsPendingForDownload")', function() {
      // uncomment below and update the code to test the property totalItemsPendingForDownload
      //var instance = new StorSimpleManagementClient.UpdatesProperties();
      //expect(instance).to.be();
    });

    it('should have the property totalItemsPendingForInstall (base name: "totalItemsPendingForInstall")', function() {
      // uncomment below and update the code to test the property totalItemsPendingForInstall
      //var instance = new StorSimpleManagementClient.UpdatesProperties();
      //expect(instance).to.be();
    });

  });

}));
