/**
 * StorSimpleManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-10-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.StorSimpleManagementClient);
  }
}(this, function(expect, StorSimpleManagementClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new StorSimpleManagementClient.FileSharesApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('FileSharesApi', function() {
    describe('fileSharesCreateOrUpdate', function() {
      it('should call fileSharesCreateOrUpdate successfully', function(done) {
        //uncomment below and update the code to test fileSharesCreateOrUpdate
        //instance.fileSharesCreateOrUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('fileSharesDelete', function() {
      it('should call fileSharesDelete successfully', function(done) {
        //uncomment below and update the code to test fileSharesDelete
        //instance.fileSharesDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('fileSharesGet', function() {
      it('should call fileSharesGet successfully', function(done) {
        //uncomment below and update the code to test fileSharesGet
        //instance.fileSharesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('fileSharesListByDevice', function() {
      it('should call fileSharesListByDevice successfully', function(done) {
        //uncomment below and update the code to test fileSharesListByDevice
        //instance.fileSharesListByDevice(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('fileSharesListByFileServer', function() {
      it('should call fileSharesListByFileServer successfully', function(done) {
        //uncomment below and update the code to test fileSharesListByFileServer
        //instance.fileSharesListByFileServer(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('fileSharesListMetricDefinition', function() {
      it('should call fileSharesListMetricDefinition successfully', function(done) {
        //uncomment below and update the code to test fileSharesListMetricDefinition
        //instance.fileSharesListMetricDefinition(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('fileSharesListMetrics', function() {
      it('should call fileSharesListMetrics successfully', function(done) {
        //uncomment below and update the code to test fileSharesListMetrics
        //instance.fileSharesListMetrics(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
