/**
 * StorSimpleManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-10-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIJobStats.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIJobStats::OAIJobStats(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIJobStats::OAIJobStats() {
    this->initializeModel();
}

OAIJobStats::~OAIJobStats() {}

void OAIJobStats::initializeModel() {

    m_completed_work_item_count_isSet = false;
    m_completed_work_item_count_isValid = false;

    m_estimated_time_remaining_isSet = false;
    m_estimated_time_remaining_isValid = false;

    m_total_work_item_count_isSet = false;
    m_total_work_item_count_isValid = false;
}

void OAIJobStats::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIJobStats::fromJsonObject(QJsonObject json) {

    m_completed_work_item_count_isValid = ::OpenAPI::fromJsonValue(m_completed_work_item_count, json[QString("completedWorkItemCount")]);
    m_completed_work_item_count_isSet = !json[QString("completedWorkItemCount")].isNull() && m_completed_work_item_count_isValid;

    m_estimated_time_remaining_isValid = ::OpenAPI::fromJsonValue(m_estimated_time_remaining, json[QString("estimatedTimeRemaining")]);
    m_estimated_time_remaining_isSet = !json[QString("estimatedTimeRemaining")].isNull() && m_estimated_time_remaining_isValid;

    m_total_work_item_count_isValid = ::OpenAPI::fromJsonValue(m_total_work_item_count, json[QString("totalWorkItemCount")]);
    m_total_work_item_count_isSet = !json[QString("totalWorkItemCount")].isNull() && m_total_work_item_count_isValid;
}

QString OAIJobStats::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIJobStats::asJsonObject() const {
    QJsonObject obj;
    if (m_completed_work_item_count_isSet) {
        obj.insert(QString("completedWorkItemCount"), ::OpenAPI::toJsonValue(m_completed_work_item_count));
    }
    if (m_estimated_time_remaining_isSet) {
        obj.insert(QString("estimatedTimeRemaining"), ::OpenAPI::toJsonValue(m_estimated_time_remaining));
    }
    if (m_total_work_item_count_isSet) {
        obj.insert(QString("totalWorkItemCount"), ::OpenAPI::toJsonValue(m_total_work_item_count));
    }
    return obj;
}

qint32 OAIJobStats::getCompletedWorkItemCount() const {
    return m_completed_work_item_count;
}
void OAIJobStats::setCompletedWorkItemCount(const qint32 &completed_work_item_count) {
    m_completed_work_item_count = completed_work_item_count;
    m_completed_work_item_count_isSet = true;
}

bool OAIJobStats::is_completed_work_item_count_Set() const{
    return m_completed_work_item_count_isSet;
}

bool OAIJobStats::is_completed_work_item_count_Valid() const{
    return m_completed_work_item_count_isValid;
}

qint32 OAIJobStats::getEstimatedTimeRemaining() const {
    return m_estimated_time_remaining;
}
void OAIJobStats::setEstimatedTimeRemaining(const qint32 &estimated_time_remaining) {
    m_estimated_time_remaining = estimated_time_remaining;
    m_estimated_time_remaining_isSet = true;
}

bool OAIJobStats::is_estimated_time_remaining_Set() const{
    return m_estimated_time_remaining_isSet;
}

bool OAIJobStats::is_estimated_time_remaining_Valid() const{
    return m_estimated_time_remaining_isValid;
}

qint32 OAIJobStats::getTotalWorkItemCount() const {
    return m_total_work_item_count;
}
void OAIJobStats::setTotalWorkItemCount(const qint32 &total_work_item_count) {
    m_total_work_item_count = total_work_item_count;
    m_total_work_item_count_isSet = true;
}

bool OAIJobStats::is_total_work_item_count_Set() const{
    return m_total_work_item_count_isSet;
}

bool OAIJobStats::is_total_work_item_count_Valid() const{
    return m_total_work_item_count_isValid;
}

bool OAIJobStats::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_completed_work_item_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_estimated_time_remaining_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_work_item_count_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIJobStats::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
