/**
 * StorSimpleManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-10-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINetworkAdapter.h
 *
 * Represents a networkAdapter in a particular node.
 */

#ifndef OAINetworkAdapter_H
#define OAINetworkAdapter_H

#include <QJsonObject>

#include "OAIIPConfig.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIIPConfig;

class OAINetworkAdapter : public OAIObject {
public:
    OAINetworkAdapter();
    OAINetworkAdapter(QString json);
    ~OAINetworkAdapter() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDhcpStatus() const;
    void setDhcpStatus(const QString &dhcp_status);
    bool is_dhcp_status_Set() const;
    bool is_dhcp_status_Valid() const;

    OAIIPConfig getIPv4Info() const;
    void setIPv4Info(const OAIIPConfig &i_pv4_info);
    bool is_i_pv4_info_Set() const;
    bool is_i_pv4_info_Valid() const;

    OAIIPConfig getIPv6Info() const;
    void setIPv6Info(const OAIIPConfig &i_pv6_info);
    bool is_i_pv6_info_Set() const;
    bool is_i_pv6_info_Valid() const;

    qint64 getLinkSpeed() const;
    void setLinkSpeed(const qint64 &link_speed);
    bool is_link_speed_Set() const;
    bool is_link_speed_Valid() const;

    QString getNetworkAdapterName() const;
    void setNetworkAdapterName(const QString &network_adapter_name);
    bool is_network_adapter_name_Set() const;
    bool is_network_adapter_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_dhcp_status;
    bool m_dhcp_status_isSet;
    bool m_dhcp_status_isValid;

    OAIIPConfig m_i_pv4_info;
    bool m_i_pv4_info_isSet;
    bool m_i_pv4_info_isValid;

    OAIIPConfig m_i_pv6_info;
    bool m_i_pv6_info_isSet;
    bool m_i_pv6_info_isValid;

    qint64 m_link_speed;
    bool m_link_speed_isSet;
    bool m_link_speed_isValid;

    QString m_network_adapter_name;
    bool m_network_adapter_name_isSet;
    bool m_network_adapter_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINetworkAdapter)

#endif // OAINetworkAdapter_H
