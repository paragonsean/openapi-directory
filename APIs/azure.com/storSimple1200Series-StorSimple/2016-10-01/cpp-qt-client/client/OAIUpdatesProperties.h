/**
 * StorSimpleManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-10-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdatesProperties.h
 *
 * Properties of the update profile
 */

#ifndef OAIUpdatesProperties_H
#define OAIUpdatesProperties_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIUpdatesProperties : public OAIObject {
public:
    OAIUpdatesProperties();
    OAIUpdatesProperties(QString json);
    ~OAIUpdatesProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getDeviceLastScannedTime() const;
    void setDeviceLastScannedTime(const QDateTime &device_last_scanned_time);
    bool is_device_last_scanned_time_Set() const;
    bool is_device_last_scanned_time_Valid() const;

    QString getDeviceVersion() const;
    void setDeviceVersion(const QString &device_version);
    bool is_device_version_Set() const;
    bool is_device_version_Valid() const;

    QString getInProgressDownloadJobId() const;
    void setInProgressDownloadJobId(const QString &in_progress_download_job_id);
    bool is_in_progress_download_job_id_Set() const;
    bool is_in_progress_download_job_id_Valid() const;

    QDateTime getInProgressDownloadJobStartedTime() const;
    void setInProgressDownloadJobStartedTime(const QDateTime &in_progress_download_job_started_time);
    bool is_in_progress_download_job_started_time_Set() const;
    bool is_in_progress_download_job_started_time_Valid() const;

    QString getInProgressInstallJobId() const;
    void setInProgressInstallJobId(const QString &in_progress_install_job_id);
    bool is_in_progress_install_job_id_Set() const;
    bool is_in_progress_install_job_id_Valid() const;

    QDateTime getInProgressInstallJobStartedTime() const;
    void setInProgressInstallJobStartedTime(const QDateTime &in_progress_install_job_started_time);
    bool is_in_progress_install_job_started_time_Set() const;
    bool is_in_progress_install_job_started_time_Valid() const;

    QDateTime getInProgressScanStartedTime() const;
    void setInProgressScanStartedTime(const QDateTime &in_progress_scan_started_time);
    bool is_in_progress_scan_started_time_Set() const;
    bool is_in_progress_scan_started_time_Valid() const;

    QDateTime getLastCompletedDownloadJobTime() const;
    void setLastCompletedDownloadJobTime(const QDateTime &last_completed_download_job_time);
    bool is_last_completed_download_job_time_Set() const;
    bool is_last_completed_download_job_time_Valid() const;

    QDateTime getLastCompletedInstallJobTime() const;
    void setLastCompletedInstallJobTime(const QDateTime &last_completed_install_job_time);
    bool is_last_completed_install_job_time_Set() const;
    bool is_last_completed_install_job_time_Valid() const;

    QDateTime getLastCompletedScanTime() const;
    void setLastCompletedScanTime(const QDateTime &last_completed_scan_time);
    bool is_last_completed_scan_time_Set() const;
    bool is_last_completed_scan_time_Valid() const;

    bool isRebootRequiredForInstall() const;
    void setRebootRequiredForInstall(const bool &reboot_required_for_install);
    bool is_reboot_required_for_install_Set() const;
    bool is_reboot_required_for_install_Valid() const;

    bool isRegularUpdatesAvailable() const;
    void setRegularUpdatesAvailable(const bool &regular_updates_available);
    bool is_regular_updates_available_Set() const;
    bool is_regular_updates_available_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    qint32 getTotalItemsPendingForDownload() const;
    void setTotalItemsPendingForDownload(const qint32 &total_items_pending_for_download);
    bool is_total_items_pending_for_download_Set() const;
    bool is_total_items_pending_for_download_Valid() const;

    qint32 getTotalItemsPendingForInstall() const;
    void setTotalItemsPendingForInstall(const qint32 &total_items_pending_for_install);
    bool is_total_items_pending_for_install_Set() const;
    bool is_total_items_pending_for_install_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_device_last_scanned_time;
    bool m_device_last_scanned_time_isSet;
    bool m_device_last_scanned_time_isValid;

    QString m_device_version;
    bool m_device_version_isSet;
    bool m_device_version_isValid;

    QString m_in_progress_download_job_id;
    bool m_in_progress_download_job_id_isSet;
    bool m_in_progress_download_job_id_isValid;

    QDateTime m_in_progress_download_job_started_time;
    bool m_in_progress_download_job_started_time_isSet;
    bool m_in_progress_download_job_started_time_isValid;

    QString m_in_progress_install_job_id;
    bool m_in_progress_install_job_id_isSet;
    bool m_in_progress_install_job_id_isValid;

    QDateTime m_in_progress_install_job_started_time;
    bool m_in_progress_install_job_started_time_isSet;
    bool m_in_progress_install_job_started_time_isValid;

    QDateTime m_in_progress_scan_started_time;
    bool m_in_progress_scan_started_time_isSet;
    bool m_in_progress_scan_started_time_isValid;

    QDateTime m_last_completed_download_job_time;
    bool m_last_completed_download_job_time_isSet;
    bool m_last_completed_download_job_time_isValid;

    QDateTime m_last_completed_install_job_time;
    bool m_last_completed_install_job_time_isSet;
    bool m_last_completed_install_job_time_isValid;

    QDateTime m_last_completed_scan_time;
    bool m_last_completed_scan_time_isSet;
    bool m_last_completed_scan_time_isValid;

    bool m_reboot_required_for_install;
    bool m_reboot_required_for_install_isSet;
    bool m_reboot_required_for_install_isValid;

    bool m_regular_updates_available;
    bool m_regular_updates_available_isSet;
    bool m_regular_updates_available_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    qint32 m_total_items_pending_for_download;
    bool m_total_items_pending_for_download_isSet;
    bool m_total_items_pending_for_download_isValid;

    qint32 m_total_items_pending_for_install;
    bool m_total_items_pending_for_install_isSet;
    bool m_total_items_pending_for_install_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdatesProperties)

#endif // OAIUpdatesProperties_H
