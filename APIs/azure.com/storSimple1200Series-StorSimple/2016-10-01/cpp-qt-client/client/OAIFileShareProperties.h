/**
 * StorSimpleManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-10-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFileShareProperties.h
 *
 * The File Share.
 */

#ifndef OAIFileShareProperties_H
#define OAIFileShareProperties_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIFileShareProperties : public OAIObject {
public:
    OAIFileShareProperties();
    OAIFileShareProperties(QString json);
    ~OAIFileShareProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAdminUser() const;
    void setAdminUser(const QString &admin_user);
    bool is_admin_user_Set() const;
    bool is_admin_user_Valid() const;

    QString getDataPolicy() const;
    void setDataPolicy(const QString &data_policy);
    bool is_data_policy_Set() const;
    bool is_data_policy_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    qint64 getLocalUsedCapacityInBytes() const;
    void setLocalUsedCapacityInBytes(const qint64 &local_used_capacity_in_bytes);
    bool is_local_used_capacity_in_bytes_Set() const;
    bool is_local_used_capacity_in_bytes_Valid() const;

    QString getMonitoringStatus() const;
    void setMonitoringStatus(const QString &monitoring_status);
    bool is_monitoring_status_Set() const;
    bool is_monitoring_status_Valid() const;

    qint64 getProvisionedCapacityInBytes() const;
    void setProvisionedCapacityInBytes(const qint64 &provisioned_capacity_in_bytes);
    bool is_provisioned_capacity_in_bytes_Set() const;
    bool is_provisioned_capacity_in_bytes_Valid() const;

    QString getShareStatus() const;
    void setShareStatus(const QString &share_status);
    bool is_share_status_Set() const;
    bool is_share_status_Valid() const;

    qint64 getUsedCapacityInBytes() const;
    void setUsedCapacityInBytes(const qint64 &used_capacity_in_bytes);
    bool is_used_capacity_in_bytes_Set() const;
    bool is_used_capacity_in_bytes_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_admin_user;
    bool m_admin_user_isSet;
    bool m_admin_user_isValid;

    QString m_data_policy;
    bool m_data_policy_isSet;
    bool m_data_policy_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    qint64 m_local_used_capacity_in_bytes;
    bool m_local_used_capacity_in_bytes_isSet;
    bool m_local_used_capacity_in_bytes_isValid;

    QString m_monitoring_status;
    bool m_monitoring_status_isSet;
    bool m_monitoring_status_isValid;

    qint64 m_provisioned_capacity_in_bytes;
    bool m_provisioned_capacity_in_bytes_isSet;
    bool m_provisioned_capacity_in_bytes_isValid;

    QString m_share_status;
    bool m_share_status_isSet;
    bool m_share_status_isValid;

    qint64 m_used_capacity_in_bytes;
    bool m_used_capacity_in_bytes_isSet;
    bool m_used_capacity_in_bytes_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFileShareProperties)

#endif // OAIFileShareProperties_H
