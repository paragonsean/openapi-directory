/**
 * StorSimpleManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-10-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFailoverRequest.h
 *
 * The Failover request object.
 */

#ifndef OAIFailoverRequest_H
#define OAIFailoverRequest_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIFailoverRequest : public OAIObject {
public:
    OAIFailoverRequest();
    OAIFailoverRequest(QString json);
    ~OAIFailoverRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getAccesspointIds() const;
    void setAccesspointIds(const QList<QString> &accesspoint_ids);
    bool is_accesspoint_ids_Set() const;
    bool is_accesspoint_ids_Valid() const;

    bool isKeepSourceDevice() const;
    void setKeepSourceDevice(const bool &keep_source_device);
    bool is_keep_source_device_Set() const;
    bool is_keep_source_device_Valid() const;

    bool isSkipValidation() const;
    void setSkipValidation(const bool &skip_validation);
    bool is_skip_validation_Set() const;
    bool is_skip_validation_Valid() const;

    QString getTargetDeviceId() const;
    void setTargetDeviceId(const QString &target_device_id);
    bool is_target_device_id_Set() const;
    bool is_target_device_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_accesspoint_ids;
    bool m_accesspoint_ids_isSet;
    bool m_accesspoint_ids_isValid;

    bool m_keep_source_device;
    bool m_keep_source_device_isSet;
    bool m_keep_source_device_isValid;

    bool m_skip_validation;
    bool m_skip_validation_isSet;
    bool m_skip_validation_isValid;

    QString m_target_device_id;
    bool m_target_device_id_isSet;
    bool m_target_device_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFailoverRequest)

#endif // OAIFailoverRequest_H
