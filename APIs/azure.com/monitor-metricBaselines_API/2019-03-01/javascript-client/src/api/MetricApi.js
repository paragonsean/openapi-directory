/**
 * MonitorManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-03-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ErrorResponse from '../model/ErrorResponse';
import MetricBaselinesResponse from '../model/MetricBaselinesResponse';

/**
* Metric service.
* @module api/MetricApi
* @version 2019-03-01
*/
export default class MetricApi {

    /**
    * Constructs a new MetricApi. 
    * @alias module:api/MetricApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the baselinesList_0 operation.
     * @callback module:api/MetricApi~baselinesList_0Callback
     * @param {String} error Error message, if any.
     * @param {module:model/MetricBaselinesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * **Lists the metric baseline values for a resource**.
     * @param {String} resourceUri The identifier of the resource.
     * @param {String} apiVersion Client Api Version.
     * @param {Object} opts Optional parameters
     * @param {String} [metricnames] The names of the metrics (comma separated) to retrieve.
     * @param {String} [metricnamespace] Metric namespace to query metric definitions for.
     * @param {String} [timespan] The timespan of the query. It is a string with the following format 'startDateTime_ISO/endDateTime_ISO'.
     * @param {String} [interval] The interval (i.e. timegrain) of the query.
     * @param {String} [aggregation] The list of aggregation types (comma separated) to retrieve.
     * @param {String} [sensitivities] The list of sensitivities (comma separated) to retrieve.
     * @param {String} [filter] The **$filter** is used to reduce the set of metric data returned.<br>Example:<br>Metric contains metadata A, B and C.<br>- Return all time series of C where A = a1 and B = b1 or b2<br>**$filter=A eq ‘a1’ and B eq ‘b1’ or B eq ‘b2’ and C eq ‘*’**<br>- Invalid variant:<br>**$filter=A eq ‘a1’ and B eq ‘b1’ and C eq ‘*’ or B = ‘b2’**<br>This is invalid because the logical or operator cannot separate two different metadata names.<br>- Return all time series where A = a1, B = b1 and C = c1:<br>**$filter=A eq ‘a1’ and B eq ‘b1’ and C eq ‘c1’**<br>- Return all time series where A = a1<br>**$filter=A eq ‘a1’ and B eq ‘*’ and C eq ‘*’**.
     * @param {module:model/String} [resultType] Allows retrieving only metadata of the baseline. On data request all information is retrieved.
     * @param {module:api/MetricApi~baselinesList_0Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/MetricBaselinesResponse}
     */
    baselinesList_0(resourceUri, apiVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'resourceUri' is set
      if (resourceUri === undefined || resourceUri === null) {
        throw new Error("Missing the required parameter 'resourceUri' when calling baselinesList_0");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling baselinesList_0");
      }

      let pathParams = {
        'resourceUri': resourceUri
      };
      let queryParams = {
        'metricnames': opts['metricnames'],
        'metricnamespace': opts['metricnamespace'],
        'timespan': opts['timespan'],
        'interval': opts['interval'],
        'aggregation': opts['aggregation'],
        'sensitivities': opts['sensitivities'],
        '$filter': opts['filter'],
        'resultType': opts['resultType'],
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = MetricBaselinesResponse;
      return this.apiClient.callApi(
        '/{resourceUri}/providers/microsoft.insights/metricBaselines', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
