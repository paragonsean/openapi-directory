/**
 * MonitorManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-03-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import BaselineMetadata from './model/BaselineMetadata';
import ErrorResponse from './model/ErrorResponse';
import MetricBaselinesProperties from './model/MetricBaselinesProperties';
import MetricBaselinesResponse from './model/MetricBaselinesResponse';
import MetricSingleDimension from './model/MetricSingleDimension';
import SingleBaseline from './model/SingleBaseline';
import SingleMetricBaseline from './model/SingleMetricBaseline';
import TimeSeriesBaseline from './model/TimeSeriesBaseline';
import BaselineApi from './api/BaselineApi';
import MetricApi from './api/MetricApi';


/**
* JS API client generated by OpenAPI Generator.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var MonitorManagementClient = require('index'); // See note below*.
* var xxxSvc = new MonitorManagementClient.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new MonitorManagementClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new MonitorManagementClient.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new MonitorManagementClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2019-03-01
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The BaselineMetadata model constructor.
     * @property {module:model/BaselineMetadata}
     */
    BaselineMetadata,

    /**
     * The ErrorResponse model constructor.
     * @property {module:model/ErrorResponse}
     */
    ErrorResponse,

    /**
     * The MetricBaselinesProperties model constructor.
     * @property {module:model/MetricBaselinesProperties}
     */
    MetricBaselinesProperties,

    /**
     * The MetricBaselinesResponse model constructor.
     * @property {module:model/MetricBaselinesResponse}
     */
    MetricBaselinesResponse,

    /**
     * The MetricSingleDimension model constructor.
     * @property {module:model/MetricSingleDimension}
     */
    MetricSingleDimension,

    /**
     * The SingleBaseline model constructor.
     * @property {module:model/SingleBaseline}
     */
    SingleBaseline,

    /**
     * The SingleMetricBaseline model constructor.
     * @property {module:model/SingleMetricBaseline}
     */
    SingleMetricBaseline,

    /**
     * The TimeSeriesBaseline model constructor.
     * @property {module:model/TimeSeriesBaseline}
     */
    TimeSeriesBaseline,

    /**
    * The BaselineApi service constructor.
    * @property {module:api/BaselineApi}
    */
    BaselineApi,

    /**
    * The MetricApi service constructor.
    * @property {module:api/MetricApi}
    */
    MetricApi
};
