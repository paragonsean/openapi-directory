/**
 * RecoveryServicesClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-06-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIResourceCertificateDetails.h
 *
 * Certificate details representing the Vault credentials.
 */

#ifndef OAIResourceCertificateDetails_H
#define OAIResourceCertificateDetails_H

#include <QJsonObject>

#include <QByteArray>
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIResourceCertificateDetails : public OAIObject {
public:
    OAIResourceCertificateDetails();
    OAIResourceCertificateDetails(QString json);
    ~OAIResourceCertificateDetails() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAuthType() const;
    void setAuthType(const QString &auth_type);
    bool is_auth_type_Set() const;
    bool is_auth_type_Valid() const;

    QByteArray getCertificate() const;
    void setCertificate(const QByteArray &certificate);
    bool is_certificate_Set() const;
    bool is_certificate_Valid() const;

    QString getFriendlyName() const;
    void setFriendlyName(const QString &friendly_name);
    bool is_friendly_name_Set() const;
    bool is_friendly_name_Valid() const;

    QString getIssuer() const;
    void setIssuer(const QString &issuer);
    bool is_issuer_Set() const;
    bool is_issuer_Valid() const;

    qint64 getResourceId() const;
    void setResourceId(const qint64 &resource_id);
    bool is_resource_id_Set() const;
    bool is_resource_id_Valid() const;

    QString getSubject() const;
    void setSubject(const QString &subject);
    bool is_subject_Set() const;
    bool is_subject_Valid() const;

    QString getThumbprint() const;
    void setThumbprint(const QString &thumbprint);
    bool is_thumbprint_Set() const;
    bool is_thumbprint_Valid() const;

    QDateTime getValidFrom() const;
    void setValidFrom(const QDateTime &valid_from);
    bool is_valid_from_Set() const;
    bool is_valid_from_Valid() const;

    QDateTime getValidTo() const;
    void setValidTo(const QDateTime &valid_to);
    bool is_valid_to_Set() const;
    bool is_valid_to_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_auth_type;
    bool m_auth_type_isSet;
    bool m_auth_type_isValid;

    QByteArray m_certificate;
    bool m_certificate_isSet;
    bool m_certificate_isValid;

    QString m_friendly_name;
    bool m_friendly_name_isSet;
    bool m_friendly_name_isValid;

    QString m_issuer;
    bool m_issuer_isSet;
    bool m_issuer_isValid;

    qint64 m_resource_id;
    bool m_resource_id_isSet;
    bool m_resource_id_isValid;

    QString m_subject;
    bool m_subject_isSet;
    bool m_subject_isValid;

    QString m_thumbprint;
    bool m_thumbprint_isSet;
    bool m_thumbprint_isValid;

    QDateTime m_valid_from;
    bool m_valid_from_isSet;
    bool m_valid_from_isValid;

    QDateTime m_valid_to;
    bool m_valid_to_isSet;
    bool m_valid_to_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIResourceCertificateDetails)

#endif // OAIResourceCertificateDetails_H
