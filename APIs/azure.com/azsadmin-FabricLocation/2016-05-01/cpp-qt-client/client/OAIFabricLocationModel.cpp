/**
 * FabricAdminClient
 * Fabric location operation endpoints and objects.
 *
 * The version of the OpenAPI document: 2016-05-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFabricLocationModel.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFabricLocationModel::OAIFabricLocationModel(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFabricLocationModel::OAIFabricLocationModel() {
    this->initializeModel();
}

OAIFabricLocationModel::~OAIFabricLocationModel() {}

void OAIFabricLocationModel::initializeModel() {

    m_exclusive_admin_operation_name_isSet = false;
    m_exclusive_admin_operation_name_isValid = false;

    m_exclusive_admin_operation_running_isSet = false;
    m_exclusive_admin_operation_running_isValid = false;

    m_external_dnsip_address01_isSet = false;
    m_external_dnsip_address01_isValid = false;

    m_external_dnsip_address02_isSet = false;
    m_external_dnsip_address02_isValid = false;

    m_pep_ip_addresses_isSet = false;
    m_pep_ip_addresses_isValid = false;

    m_shut_down_action_plan_end_time_isSet = false;
    m_shut_down_action_plan_end_time_isValid = false;

    m_shut_down_action_plan_start_time_isSet = false;
    m_shut_down_action_plan_start_time_isValid = false;

    m_stamp_information_id_isSet = false;
    m_stamp_information_id_isValid = false;

    m_start_up_action_plan_end_time_isSet = false;
    m_start_up_action_plan_end_time_isValid = false;

    m_start_up_action_plan_start_time_isSet = false;
    m_start_up_action_plan_start_time_isValid = false;

    m_time_server_isSet = false;
    m_time_server_isValid = false;
}

void OAIFabricLocationModel::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFabricLocationModel::fromJsonObject(QJsonObject json) {

    m_exclusive_admin_operation_name_isValid = ::OpenAPI::fromJsonValue(m_exclusive_admin_operation_name, json[QString("exclusiveAdminOperationName")]);
    m_exclusive_admin_operation_name_isSet = !json[QString("exclusiveAdminOperationName")].isNull() && m_exclusive_admin_operation_name_isValid;

    m_exclusive_admin_operation_running_isValid = ::OpenAPI::fromJsonValue(m_exclusive_admin_operation_running, json[QString("exclusiveAdminOperationRunning")]);
    m_exclusive_admin_operation_running_isSet = !json[QString("exclusiveAdminOperationRunning")].isNull() && m_exclusive_admin_operation_running_isValid;

    m_external_dnsip_address01_isValid = ::OpenAPI::fromJsonValue(m_external_dnsip_address01, json[QString("externalDNSIPAddress01")]);
    m_external_dnsip_address01_isSet = !json[QString("externalDNSIPAddress01")].isNull() && m_external_dnsip_address01_isValid;

    m_external_dnsip_address02_isValid = ::OpenAPI::fromJsonValue(m_external_dnsip_address02, json[QString("externalDNSIPAddress02")]);
    m_external_dnsip_address02_isSet = !json[QString("externalDNSIPAddress02")].isNull() && m_external_dnsip_address02_isValid;

    m_pep_ip_addresses_isValid = ::OpenAPI::fromJsonValue(m_pep_ip_addresses, json[QString("pepIpAddresses")]);
    m_pep_ip_addresses_isSet = !json[QString("pepIpAddresses")].isNull() && m_pep_ip_addresses_isValid;

    m_shut_down_action_plan_end_time_isValid = ::OpenAPI::fromJsonValue(m_shut_down_action_plan_end_time, json[QString("shutDownActionPlanEndTime")]);
    m_shut_down_action_plan_end_time_isSet = !json[QString("shutDownActionPlanEndTime")].isNull() && m_shut_down_action_plan_end_time_isValid;

    m_shut_down_action_plan_start_time_isValid = ::OpenAPI::fromJsonValue(m_shut_down_action_plan_start_time, json[QString("shutDownActionPlanStartTime")]);
    m_shut_down_action_plan_start_time_isSet = !json[QString("shutDownActionPlanStartTime")].isNull() && m_shut_down_action_plan_start_time_isValid;

    m_stamp_information_id_isValid = ::OpenAPI::fromJsonValue(m_stamp_information_id, json[QString("stampInformationId")]);
    m_stamp_information_id_isSet = !json[QString("stampInformationId")].isNull() && m_stamp_information_id_isValid;

    m_start_up_action_plan_end_time_isValid = ::OpenAPI::fromJsonValue(m_start_up_action_plan_end_time, json[QString("startUpActionPlanEndTime")]);
    m_start_up_action_plan_end_time_isSet = !json[QString("startUpActionPlanEndTime")].isNull() && m_start_up_action_plan_end_time_isValid;

    m_start_up_action_plan_start_time_isValid = ::OpenAPI::fromJsonValue(m_start_up_action_plan_start_time, json[QString("startUpActionPlanStartTime")]);
    m_start_up_action_plan_start_time_isSet = !json[QString("startUpActionPlanStartTime")].isNull() && m_start_up_action_plan_start_time_isValid;

    m_time_server_isValid = ::OpenAPI::fromJsonValue(m_time_server, json[QString("timeServer")]);
    m_time_server_isSet = !json[QString("timeServer")].isNull() && m_time_server_isValid;
}

QString OAIFabricLocationModel::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFabricLocationModel::asJsonObject() const {
    QJsonObject obj;
    if (m_exclusive_admin_operation_name_isSet) {
        obj.insert(QString("exclusiveAdminOperationName"), ::OpenAPI::toJsonValue(m_exclusive_admin_operation_name));
    }
    if (m_exclusive_admin_operation_running_isSet) {
        obj.insert(QString("exclusiveAdminOperationRunning"), ::OpenAPI::toJsonValue(m_exclusive_admin_operation_running));
    }
    if (m_external_dnsip_address01_isSet) {
        obj.insert(QString("externalDNSIPAddress01"), ::OpenAPI::toJsonValue(m_external_dnsip_address01));
    }
    if (m_external_dnsip_address02_isSet) {
        obj.insert(QString("externalDNSIPAddress02"), ::OpenAPI::toJsonValue(m_external_dnsip_address02));
    }
    if (m_pep_ip_addresses.size() > 0) {
        obj.insert(QString("pepIpAddresses"), ::OpenAPI::toJsonValue(m_pep_ip_addresses));
    }
    if (m_shut_down_action_plan_end_time_isSet) {
        obj.insert(QString("shutDownActionPlanEndTime"), ::OpenAPI::toJsonValue(m_shut_down_action_plan_end_time));
    }
    if (m_shut_down_action_plan_start_time_isSet) {
        obj.insert(QString("shutDownActionPlanStartTime"), ::OpenAPI::toJsonValue(m_shut_down_action_plan_start_time));
    }
    if (m_stamp_information_id_isSet) {
        obj.insert(QString("stampInformationId"), ::OpenAPI::toJsonValue(m_stamp_information_id));
    }
    if (m_start_up_action_plan_end_time_isSet) {
        obj.insert(QString("startUpActionPlanEndTime"), ::OpenAPI::toJsonValue(m_start_up_action_plan_end_time));
    }
    if (m_start_up_action_plan_start_time_isSet) {
        obj.insert(QString("startUpActionPlanStartTime"), ::OpenAPI::toJsonValue(m_start_up_action_plan_start_time));
    }
    if (m_time_server_isSet) {
        obj.insert(QString("timeServer"), ::OpenAPI::toJsonValue(m_time_server));
    }
    return obj;
}

QString OAIFabricLocationModel::getExclusiveAdminOperationName() const {
    return m_exclusive_admin_operation_name;
}
void OAIFabricLocationModel::setExclusiveAdminOperationName(const QString &exclusive_admin_operation_name) {
    m_exclusive_admin_operation_name = exclusive_admin_operation_name;
    m_exclusive_admin_operation_name_isSet = true;
}

bool OAIFabricLocationModel::is_exclusive_admin_operation_name_Set() const{
    return m_exclusive_admin_operation_name_isSet;
}

bool OAIFabricLocationModel::is_exclusive_admin_operation_name_Valid() const{
    return m_exclusive_admin_operation_name_isValid;
}

bool OAIFabricLocationModel::isExclusiveAdminOperationRunning() const {
    return m_exclusive_admin_operation_running;
}
void OAIFabricLocationModel::setExclusiveAdminOperationRunning(const bool &exclusive_admin_operation_running) {
    m_exclusive_admin_operation_running = exclusive_admin_operation_running;
    m_exclusive_admin_operation_running_isSet = true;
}

bool OAIFabricLocationModel::is_exclusive_admin_operation_running_Set() const{
    return m_exclusive_admin_operation_running_isSet;
}

bool OAIFabricLocationModel::is_exclusive_admin_operation_running_Valid() const{
    return m_exclusive_admin_operation_running_isValid;
}

QString OAIFabricLocationModel::getExternalDnsipAddress01() const {
    return m_external_dnsip_address01;
}
void OAIFabricLocationModel::setExternalDnsipAddress01(const QString &external_dnsip_address01) {
    m_external_dnsip_address01 = external_dnsip_address01;
    m_external_dnsip_address01_isSet = true;
}

bool OAIFabricLocationModel::is_external_dnsip_address01_Set() const{
    return m_external_dnsip_address01_isSet;
}

bool OAIFabricLocationModel::is_external_dnsip_address01_Valid() const{
    return m_external_dnsip_address01_isValid;
}

QString OAIFabricLocationModel::getExternalDnsipAddress02() const {
    return m_external_dnsip_address02;
}
void OAIFabricLocationModel::setExternalDnsipAddress02(const QString &external_dnsip_address02) {
    m_external_dnsip_address02 = external_dnsip_address02;
    m_external_dnsip_address02_isSet = true;
}

bool OAIFabricLocationModel::is_external_dnsip_address02_Set() const{
    return m_external_dnsip_address02_isSet;
}

bool OAIFabricLocationModel::is_external_dnsip_address02_Valid() const{
    return m_external_dnsip_address02_isValid;
}

QList<QString> OAIFabricLocationModel::getPepIpAddresses() const {
    return m_pep_ip_addresses;
}
void OAIFabricLocationModel::setPepIpAddresses(const QList<QString> &pep_ip_addresses) {
    m_pep_ip_addresses = pep_ip_addresses;
    m_pep_ip_addresses_isSet = true;
}

bool OAIFabricLocationModel::is_pep_ip_addresses_Set() const{
    return m_pep_ip_addresses_isSet;
}

bool OAIFabricLocationModel::is_pep_ip_addresses_Valid() const{
    return m_pep_ip_addresses_isValid;
}

QDateTime OAIFabricLocationModel::getShutDownActionPlanEndTime() const {
    return m_shut_down_action_plan_end_time;
}
void OAIFabricLocationModel::setShutDownActionPlanEndTime(const QDateTime &shut_down_action_plan_end_time) {
    m_shut_down_action_plan_end_time = shut_down_action_plan_end_time;
    m_shut_down_action_plan_end_time_isSet = true;
}

bool OAIFabricLocationModel::is_shut_down_action_plan_end_time_Set() const{
    return m_shut_down_action_plan_end_time_isSet;
}

bool OAIFabricLocationModel::is_shut_down_action_plan_end_time_Valid() const{
    return m_shut_down_action_plan_end_time_isValid;
}

QDateTime OAIFabricLocationModel::getShutDownActionPlanStartTime() const {
    return m_shut_down_action_plan_start_time;
}
void OAIFabricLocationModel::setShutDownActionPlanStartTime(const QDateTime &shut_down_action_plan_start_time) {
    m_shut_down_action_plan_start_time = shut_down_action_plan_start_time;
    m_shut_down_action_plan_start_time_isSet = true;
}

bool OAIFabricLocationModel::is_shut_down_action_plan_start_time_Set() const{
    return m_shut_down_action_plan_start_time_isSet;
}

bool OAIFabricLocationModel::is_shut_down_action_plan_start_time_Valid() const{
    return m_shut_down_action_plan_start_time_isValid;
}

QString OAIFabricLocationModel::getStampInformationId() const {
    return m_stamp_information_id;
}
void OAIFabricLocationModel::setStampInformationId(const QString &stamp_information_id) {
    m_stamp_information_id = stamp_information_id;
    m_stamp_information_id_isSet = true;
}

bool OAIFabricLocationModel::is_stamp_information_id_Set() const{
    return m_stamp_information_id_isSet;
}

bool OAIFabricLocationModel::is_stamp_information_id_Valid() const{
    return m_stamp_information_id_isValid;
}

QDateTime OAIFabricLocationModel::getStartUpActionPlanEndTime() const {
    return m_start_up_action_plan_end_time;
}
void OAIFabricLocationModel::setStartUpActionPlanEndTime(const QDateTime &start_up_action_plan_end_time) {
    m_start_up_action_plan_end_time = start_up_action_plan_end_time;
    m_start_up_action_plan_end_time_isSet = true;
}

bool OAIFabricLocationModel::is_start_up_action_plan_end_time_Set() const{
    return m_start_up_action_plan_end_time_isSet;
}

bool OAIFabricLocationModel::is_start_up_action_plan_end_time_Valid() const{
    return m_start_up_action_plan_end_time_isValid;
}

QDateTime OAIFabricLocationModel::getStartUpActionPlanStartTime() const {
    return m_start_up_action_plan_start_time;
}
void OAIFabricLocationModel::setStartUpActionPlanStartTime(const QDateTime &start_up_action_plan_start_time) {
    m_start_up_action_plan_start_time = start_up_action_plan_start_time;
    m_start_up_action_plan_start_time_isSet = true;
}

bool OAIFabricLocationModel::is_start_up_action_plan_start_time_Set() const{
    return m_start_up_action_plan_start_time_isSet;
}

bool OAIFabricLocationModel::is_start_up_action_plan_start_time_Valid() const{
    return m_start_up_action_plan_start_time_isValid;
}

QString OAIFabricLocationModel::getTimeServer() const {
    return m_time_server;
}
void OAIFabricLocationModel::setTimeServer(const QString &time_server) {
    m_time_server = time_server;
    m_time_server_isSet = true;
}

bool OAIFabricLocationModel::is_time_server_Set() const{
    return m_time_server_isSet;
}

bool OAIFabricLocationModel::is_time_server_Valid() const{
    return m_time_server_isValid;
}

bool OAIFabricLocationModel::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_exclusive_admin_operation_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_exclusive_admin_operation_running_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_external_dnsip_address01_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_external_dnsip_address02_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pep_ip_addresses.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_shut_down_action_plan_end_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shut_down_action_plan_start_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_stamp_information_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_up_action_plan_end_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_up_action_plan_start_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_time_server_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFabricLocationModel::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
