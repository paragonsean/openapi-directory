/**
 * FabricAdminClient
 * Fabric location operation endpoints and objects.
 *
 * The version of the OpenAPI document: 2016-05-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import FabricLocation from '../model/FabricLocation';
import FabricLocationList from '../model/FabricLocationList';

/**
* FabricLocations service.
* @module api/FabricLocationsApi
* @version 2016-05-01
*/
export default class FabricLocationsApi {

    /**
    * Constructs a new FabricLocationsApi. 
    * @alias module:api/FabricLocationsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the fabricLocationsGet operation.
     * @callback module:api/FabricLocationsApi~fabricLocationsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/FabricLocation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns the requested fabric location.
     * @param {String} subscriptionId Subscription credentials that uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroupName Name of the resource group.
     * @param {String} fabricLocation Fabric location.
     * @param {String} apiVersion Client API Version.
     * @param {module:api/FabricLocationsApi~fabricLocationsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/FabricLocation}
     */
    fabricLocationsGet(subscriptionId, resourceGroupName, fabricLocation, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling fabricLocationsGet");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling fabricLocationsGet");
      }
      // verify the required parameter 'fabricLocation' is set
      if (fabricLocation === undefined || fabricLocation === null) {
        throw new Error("Missing the required parameter 'fabricLocation' when calling fabricLocationsGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling fabricLocationsGet");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'fabricLocation': fabricLocation
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = FabricLocation;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Fabric.Admin/fabricLocations/{fabricLocation}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the fabricLocationsList operation.
     * @callback module:api/FabricLocationsApi~fabricLocationsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/FabricLocationList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns a list of all fabric locations.
     * @param {String} subscriptionId Subscription credentials that uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroupName Name of the resource group.
     * @param {String} apiVersion Client API Version.
     * @param {Object} opts Optional parameters
     * @param {String} [filter] OData filter parameter.
     * @param {module:api/FabricLocationsApi~fabricLocationsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/FabricLocationList}
     */
    fabricLocationsList(subscriptionId, resourceGroupName, apiVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling fabricLocationsList");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling fabricLocationsList");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling fabricLocationsList");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName
      };
      let queryParams = {
        'api-version': apiVersion,
        '$filter': opts['filter']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = FabricLocationList;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Fabric.Admin/fabricLocations', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
