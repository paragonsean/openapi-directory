/*
 * DeploymentAdminClient
 * Deployment Admin Client.
 *
 * The version of the OpenAPI document: 2019-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ProductSecret;
import org.openapitools.client.model.ProductSecretsList;
import org.openapitools.client.model.SecretParameters;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ProductSecretsApi
 */
@Disabled
public class ProductSecretsApiTest {

    private final ProductSecretsApi api = new ProductSecretsApi();

    /**
     * Retrieves the specific product secret details.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void productSecretsGetTest() throws ApiException {
        String subscriptionId = null;
        String productId = null;
        String apiVersion = null;
        String secretName = null;
        ProductSecret response = api.productSecretsGet(subscriptionId, productId, apiVersion, secretName);
        // TODO: test validations
    }

    /**
     * Imports a product secret.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void productSecretsImportTest() throws ApiException {
        String subscriptionId = null;
        String productId = null;
        String secretName = null;
        String apiVersion = null;
        SecretParameters secretParameters = null;
        api.productSecretsImport(subscriptionId, productId, secretName, apiVersion, secretParameters);
        // TODO: test validations
    }

    /**
     * Returns an array of product secrets.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void productSecretsListTest() throws ApiException {
        String subscriptionId = null;
        String apiVersion = null;
        String productId = null;
        ProductSecretsList response = api.productSecretsList(subscriptionId, apiVersion, productId);
        // TODO: test validations
    }

    /**
     * Validates a product secret.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void productSecretsValidateTest() throws ApiException {
        String subscriptionId = null;
        String productId = null;
        String secretName = null;
        String apiVersion = null;
        SecretParameters secretParameters = null;
        api.productSecretsValidate(subscriptionId, productId, secretName, apiVersion, secretParameters);
        // TODO: test validations
    }

}
