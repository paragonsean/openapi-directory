/**
 * DeploymentAdminClient
 * Deployment Admin Client.
 *
 * The version of the OpenAPI document: 2019-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SecretDescriptor from './SecretDescriptor';
import SecretState from './SecretState';

/**
 * The ProductSecretProperties model module.
 * @module model/ProductSecretProperties
 * @version 2019-01-01
 */
class ProductSecretProperties {
    /**
     * Constructs a new <code>ProductSecretProperties</code>.
     * Properties of product secret.
     * @alias module:model/ProductSecretProperties
     */
    constructor() { 
        
        ProductSecretProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ProductSecretProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProductSecretProperties} obj Optional instance to populate.
     * @return {module:model/ProductSecretProperties} The populated <code>ProductSecretProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProductSecretProperties();

            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('expiresAfter')) {
                obj['expiresAfter'] = ApiClient.convertToType(data['expiresAfter'], 'String');
            }
            if (data.hasOwnProperty('provisioningState')) {
                obj['provisioningState'] = ApiClient.convertToType(data['provisioningState'], 'String');
            }
            if (data.hasOwnProperty('secretDescriptor')) {
                obj['secretDescriptor'] = SecretDescriptor.constructFromObject(data['secretDescriptor']);
            }
            if (data.hasOwnProperty('secretKind')) {
                obj['secretKind'] = ApiClient.convertToType(data['secretKind'], 'String');
            }
            if (data.hasOwnProperty('secretState')) {
                obj['secretState'] = SecretState.constructFromObject(data['secretState']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ProductSecretProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ProductSecretProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['expiresAfter'] && !(typeof data['expiresAfter'] === 'string' || data['expiresAfter'] instanceof String)) {
            throw new Error("Expected the field `expiresAfter` to be a primitive type in the JSON string but got " + data['expiresAfter']);
        }
        // ensure the json data is a string
        if (data['provisioningState'] && !(typeof data['provisioningState'] === 'string' || data['provisioningState'] instanceof String)) {
            throw new Error("Expected the field `provisioningState` to be a primitive type in the JSON string but got " + data['provisioningState']);
        }
        // validate the optional field `secretDescriptor`
        if (data['secretDescriptor']) { // data not null
          SecretDescriptor.validateJSON(data['secretDescriptor']);
        }
        // ensure the json data is a string
        if (data['secretKind'] && !(typeof data['secretKind'] === 'string' || data['secretKind'] instanceof String)) {
            throw new Error("Expected the field `secretKind` to be a primitive type in the JSON string but got " + data['secretKind']);
        }
        // validate the optional field `secretState`
        if (data['secretState']) { // data not null
          SecretState.validateJSON(data['secretState']);
        }

        return true;
    }


}



/**
 * The secret description.
 * @member {String} description
 */
ProductSecretProperties.prototype['description'] = undefined;

/**
 * The expiration period of the secret (in ISO8601 format).
 * @member {String} expiresAfter
 */
ProductSecretProperties.prototype['expiresAfter'] = undefined;

/**
 * Provisioning state of the resource.
 * @member {String} provisioningState
 */
ProductSecretProperties.prototype['provisioningState'] = undefined;

/**
 * @member {module:model/SecretDescriptor} secretDescriptor
 */
ProductSecretProperties.prototype['secretDescriptor'] = undefined;

/**
 * Specifies the secret kind.
 * @member {module:model/ProductSecretProperties.SecretKindEnum} secretKind
 */
ProductSecretProperties.prototype['secretKind'] = undefined;

/**
 * @member {module:model/SecretState} secretState
 */
ProductSecretProperties.prototype['secretState'] = undefined;





/**
 * Allowed values for the <code>secretKind</code> property.
 * @enum {String}
 * @readonly
 */
ProductSecretProperties['SecretKindEnum'] = {

    /**
     * value: "AdHoc"
     * @const
     */
    "AdHoc": "AdHoc",

    /**
     * value: "Certificate"
     * @const
     */
    "Certificate": "Certificate",

    /**
     * value: "Password"
     * @const
     */
    "Password": "Password",

    /**
     * value: "StorageAccount"
     * @const
     */
    "StorageAccount": "StorageAccount",

    /**
     * value: "SymmetricKey"
     * @const
     */
    "SymmetricKey": "SymmetricKey"
};



export default ProductSecretProperties;

