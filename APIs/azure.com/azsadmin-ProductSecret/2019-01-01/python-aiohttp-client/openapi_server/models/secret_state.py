# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.secret_rotation_status import SecretRotationStatus
from openapi_server.models.secret_status import SecretStatus
from openapi_server import util


class SecretState(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, expiration_date: datetime=None, rotation_status: SecretRotationStatus=None, status: SecretStatus=None):
        """SecretState - a model defined in OpenAPI

        :param expiration_date: The expiration_date of this SecretState.
        :param rotation_status: The rotation_status of this SecretState.
        :param status: The status of this SecretState.
        """
        self.openapi_types = {
            'expiration_date': datetime,
            'rotation_status': SecretRotationStatus,
            'status': SecretStatus
        }

        self.attribute_map = {
            'expiration_date': 'expirationDate',
            'rotation_status': 'rotationStatus',
            'status': 'status'
        }

        self._expiration_date = expiration_date
        self._rotation_status = rotation_status
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SecretState':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SecretState of this SecretState.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def expiration_date(self):
        """Gets the expiration_date of this SecretState.

        The secret expiration date.

        :return: The expiration_date of this SecretState.
        :rtype: datetime
        """
        return self._expiration_date

    @expiration_date.setter
    def expiration_date(self, expiration_date):
        """Sets the expiration_date of this SecretState.

        The secret expiration date.

        :param expiration_date: The expiration_date of this SecretState.
        :type expiration_date: datetime
        """

        self._expiration_date = expiration_date

    @property
    def rotation_status(self):
        """Gets the rotation_status of this SecretState.


        :return: The rotation_status of this SecretState.
        :rtype: SecretRotationStatus
        """
        return self._rotation_status

    @rotation_status.setter
    def rotation_status(self, rotation_status):
        """Sets the rotation_status of this SecretState.


        :param rotation_status: The rotation_status of this SecretState.
        :type rotation_status: SecretRotationStatus
        """

        self._rotation_status = rotation_status

    @property
    def status(self):
        """Gets the status of this SecretState.


        :return: The status of this SecretState.
        :rtype: SecretStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this SecretState.


        :param status: The status of this SecretState.
        :type status: SecretStatus
        """

        self._status = status
