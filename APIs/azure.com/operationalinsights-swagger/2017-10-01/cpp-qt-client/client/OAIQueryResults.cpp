/**
 * Azure Log Analytics
 * This API exposes Azure Log Analytics query capabilities
 *
 * The version of the OpenAPI document: 2017-10-01
 * Contact: aiapi@microsoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIQueryResults.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIQueryResults::OAIQueryResults(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIQueryResults::OAIQueryResults() {
    this->initializeModel();
}

OAIQueryResults::~OAIQueryResults() {}

void OAIQueryResults::initializeModel() {

    m_tables_isSet = false;
    m_tables_isValid = false;
}

void OAIQueryResults::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIQueryResults::fromJsonObject(QJsonObject json) {

    m_tables_isValid = ::OpenAPI::fromJsonValue(m_tables, json[QString("tables")]);
    m_tables_isSet = !json[QString("tables")].isNull() && m_tables_isValid;
}

QString OAIQueryResults::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIQueryResults::asJsonObject() const {
    QJsonObject obj;
    if (m_tables.size() > 0) {
        obj.insert(QString("tables"), ::OpenAPI::toJsonValue(m_tables));
    }
    return obj;
}

QList<OAITable> OAIQueryResults::getTables() const {
    return m_tables;
}
void OAIQueryResults::setTables(const QList<OAITable> &tables) {
    m_tables = tables;
    m_tables_isSet = true;
}

bool OAIQueryResults::is_tables_Set() const{
    return m_tables_isSet;
}

bool OAIQueryResults::is_tables_Valid() const{
    return m_tables_isValid;
}

bool OAIQueryResults::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_tables.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIQueryResults::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_tables_isValid && true;
}

} // namespace OpenAPI
