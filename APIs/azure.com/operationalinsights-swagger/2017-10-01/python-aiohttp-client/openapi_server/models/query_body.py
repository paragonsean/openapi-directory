# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class QueryBody(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, query: str=None, timespan: str=None, workspaces: List[str]=None):
        """QueryBody - a model defined in OpenAPI

        :param query: The query of this QueryBody.
        :param timespan: The timespan of this QueryBody.
        :param workspaces: The workspaces of this QueryBody.
        """
        self.openapi_types = {
            'query': str,
            'timespan': str,
            'workspaces': List[str]
        }

        self.attribute_map = {
            'query': 'query',
            'timespan': 'timespan',
            'workspaces': 'workspaces'
        }

        self._query = query
        self._timespan = timespan
        self._workspaces = workspaces

    @classmethod
    def from_dict(cls, dikt: dict) -> 'QueryBody':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The queryBody of this QueryBody.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def query(self):
        """Gets the query of this QueryBody.

        The Analytics query. Learn more about the [Analytics query syntax](https://azure.microsoft.com/documentation/articles/app-insights-analytics-reference/)

        :return: The query of this QueryBody.
        :rtype: str
        """
        return self._query

    @query.setter
    def query(self, query):
        """Sets the query of this QueryBody.

        The Analytics query. Learn more about the [Analytics query syntax](https://azure.microsoft.com/documentation/articles/app-insights-analytics-reference/)

        :param query: The query of this QueryBody.
        :type query: str
        """
        if query is None:
            raise ValueError("Invalid value for `query`, must not be `None`")

        self._query = query

    @property
    def timespan(self):
        """Gets the timespan of this QueryBody.

        Optional. The timespan over which to query data. This is an ISO8601 time period value.  This timespan is applied in addition to any that are specified in the query expression.

        :return: The timespan of this QueryBody.
        :rtype: str
        """
        return self._timespan

    @timespan.setter
    def timespan(self, timespan):
        """Sets the timespan of this QueryBody.

        Optional. The timespan over which to query data. This is an ISO8601 time period value.  This timespan is applied in addition to any that are specified in the query expression.

        :param timespan: The timespan of this QueryBody.
        :type timespan: str
        """

        self._timespan = timespan

    @property
    def workspaces(self):
        """Gets the workspaces of this QueryBody.

        Workspace IDs to include in cross-workspace queries.

        :return: The workspaces of this QueryBody.
        :rtype: List[str]
        """
        return self._workspaces

    @workspaces.setter
    def workspaces(self, workspaces):
        """Sets the workspaces of this QueryBody.

        Workspace IDs to include in cross-workspace queries.

        :param workspaces: The workspaces of this QueryBody.
        :type workspaces: List[str]
        """

        self._workspaces = workspaces
