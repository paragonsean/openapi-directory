/*
 * LogicAppsManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ApiConnectionDefinition;
import org.openapitools.client.model.ApiConnectionDefinitionCollection;
import org.openapitools.client.model.ConfirmConsentCodeDefinition;
import org.openapitools.client.model.ConsentLinkCollection;
import org.openapitools.client.model.ListConsentLinksDefinition;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ConnectionsApi
 */
@Disabled
public class ConnectionsApiTest {

    private final ConnectionsApi api = new ConnectionsApi();

    /**
     * Confirms the consent code for a connection
     *
     * Confirms consent code of a connection
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void connectionsConfirmConsentCodeTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String connectionName = null;
        String apiVersion = null;
        ConfirmConsentCodeDefinition confirmConsentCode = null;
        ConfirmConsentCodeDefinition response = api.connectionsConfirmConsentCode(subscriptionId, resourceGroupName, connectionName, apiVersion, confirmConsentCode);
        // TODO: test validations
    }

    /**
     * Replace an existing connection
     *
     * Creates or updates a connection
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void connectionsCreateOrUpdateTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String connectionName = null;
        String apiVersion = null;
        ApiConnectionDefinition connection = null;
        ApiConnectionDefinition response = api.connectionsCreateOrUpdate(subscriptionId, resourceGroupName, connectionName, apiVersion, connection);
        // TODO: test validations
    }

    /**
     * Delete an existing connection
     *
     * Deletes a connection
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void connectionsDeleteTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String connectionName = null;
        String apiVersion = null;
        api.connectionsDelete(subscriptionId, resourceGroupName, connectionName, apiVersion);
        // TODO: test validations
    }

    /**
     * Get a connection
     *
     * Get a specific connection
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void connectionsGetTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String connectionName = null;
        String apiVersion = null;
        ApiConnectionDefinition response = api.connectionsGet(subscriptionId, resourceGroupName, connectionName, apiVersion);
        // TODO: test validations
    }

    /**
     * Get all connections
     *
     * Gets a list of connections
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void connectionsListTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String apiVersion = null;
        Integer $top = null;
        String $filter = null;
        ApiConnectionDefinitionCollection response = api.connectionsList(subscriptionId, resourceGroupName, apiVersion, $top, $filter);
        // TODO: test validations
    }

    /**
     * Lists consent links for a connection
     *
     * Lists the consent links of a connection
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void connectionsListConsentLinksTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String connectionName = null;
        String apiVersion = null;
        ListConsentLinksDefinition listConsentLink = null;
        ConsentLinkCollection response = api.connectionsListConsentLinks(subscriptionId, resourceGroupName, connectionName, apiVersion, listConsentLink);
        // TODO: test validations
    }

    /**
     * Update an existing connection
     *
     * Updates a connection&#39;s tags
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void connectionsUpdateTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String connectionName = null;
        String apiVersion = null;
        ApiConnectionDefinition connection = null;
        ApiConnectionDefinition response = api.connectionsUpdate(subscriptionId, resourceGroupName, connectionName, apiVersion, connection);
        // TODO: test validations
    }

}
