/*
 * LogicAppsManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CustomApiDefinition;
import org.openapitools.client.model.CustomApiDefinitionCollection;
import org.openapitools.client.model.CustomApiReference;
import org.openapitools.client.model.WsdlDefinition;
import org.openapitools.client.model.WsdlServiceCollection;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CustomApisApi
 */
@Disabled
public class CustomApisApiTest {

    private final CustomApisApi api = new CustomApisApi();

    /**
     * Replaces an existing custom API
     *
     * Creates or updates an existing custom API
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void customApisCreateOrUpdateTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String apiName = null;
        String apiVersion = null;
        CustomApiDefinition customApi = null;
        CustomApiDefinition response = api.customApisCreateOrUpdate(subscriptionId, resourceGroupName, apiName, apiVersion, customApi);
        // TODO: test validations
    }

    /**
     * Delete a custom API
     *
     * Deletes a custom API from the resource group
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void customApisDeleteTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String apiName = null;
        String apiVersion = null;
        api.customApisDelete(subscriptionId, resourceGroupName, apiName, apiVersion);
        // TODO: test validations
    }

    /**
     * Returns API definition from WSDL
     *
     * Parses the specified WSDL and extracts the API definition
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void customApisExtractApiDefinitionFromWsdlTest() throws ApiException {
        String subscriptionId = null;
        String location = null;
        String apiVersion = null;
        WsdlDefinition wsdlDefinition = null;
        Object response = api.customApisExtractApiDefinitionFromWsdl(subscriptionId, location, apiVersion, wsdlDefinition);
        // TODO: test validations
    }

    /**
     * Get a custom API
     *
     * Gets a custom API by name for a specific subscription and resource group
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void customApisGetTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String apiName = null;
        String apiVersion = null;
        CustomApiDefinition response = api.customApisGet(subscriptionId, resourceGroupName, apiName, apiVersion);
        // TODO: test validations
    }

    /**
     * List of custom APIs
     *
     * Gets a list of all custom APIs for a subscription id
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void customApisListTest() throws ApiException {
        String subscriptionId = null;
        String apiVersion = null;
        Integer $top = null;
        String skiptoken = null;
        CustomApiDefinitionCollection response = api.customApisList(subscriptionId, apiVersion, $top, skiptoken);
        // TODO: test validations
    }

    /**
     * List of custom APIs
     *
     * Gets a list of all custom APIs in a subscription for a specific resource group
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void customApisListByResourceGroupTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String apiVersion = null;
        Integer $top = null;
        String skiptoken = null;
        CustomApiDefinitionCollection response = api.customApisListByResourceGroup(subscriptionId, resourceGroupName, apiVersion, $top, skiptoken);
        // TODO: test validations
    }

    /**
     * Lists WSDL interfaces
     *
     * This returns the list of interfaces in the WSDL
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void customApisListWsdlInterfacesTest() throws ApiException {
        String subscriptionId = null;
        String location = null;
        String apiVersion = null;
        WsdlDefinition wsdlDefinition = null;
        WsdlServiceCollection response = api.customApisListWsdlInterfaces(subscriptionId, location, apiVersion, wsdlDefinition);
        // TODO: test validations
    }

    /**
     * Moves the custom API
     *
     * Moves a specific custom API
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void customApisMoveTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String apiName = null;
        String apiVersion = null;
        CustomApiReference customApiReference = null;
        api.customApisMove(subscriptionId, resourceGroupName, apiName, apiVersion, customApiReference);
        // TODO: test validations
    }

    /**
     * Update an existing custom API
     *
     * Updates an existing custom API&#39;s tags
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void customApisUpdateTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String apiName = null;
        String apiVersion = null;
        CustomApiDefinition customApi = null;
        CustomApiDefinition response = api.customApisUpdate(subscriptionId, resourceGroupName, apiName, apiVersion, customApi);
        // TODO: test validations
    }

}
