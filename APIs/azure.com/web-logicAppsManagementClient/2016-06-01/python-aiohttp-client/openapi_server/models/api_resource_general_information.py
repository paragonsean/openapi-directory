# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ApiResourceGeneralInformation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, display_name: str=None, icon_url: str=None, release_tag: str=None, terms_of_use_url: str=None):
        """ApiResourceGeneralInformation - a model defined in OpenAPI

        :param description: The description of this ApiResourceGeneralInformation.
        :param display_name: The display_name of this ApiResourceGeneralInformation.
        :param icon_url: The icon_url of this ApiResourceGeneralInformation.
        :param release_tag: The release_tag of this ApiResourceGeneralInformation.
        :param terms_of_use_url: The terms_of_use_url of this ApiResourceGeneralInformation.
        """
        self.openapi_types = {
            'description': str,
            'display_name': str,
            'icon_url': str,
            'release_tag': str,
            'terms_of_use_url': str
        }

        self.attribute_map = {
            'description': 'description',
            'display_name': 'displayName',
            'icon_url': 'iconUrl',
            'release_tag': 'releaseTag',
            'terms_of_use_url': 'termsOfUseUrl'
        }

        self._description = description
        self._display_name = display_name
        self._icon_url = icon_url
        self._release_tag = release_tag
        self._terms_of_use_url = terms_of_use_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApiResourceGeneralInformation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ApiResourceGeneralInformation of this ApiResourceGeneralInformation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this ApiResourceGeneralInformation.

        The API description

        :return: The description of this ApiResourceGeneralInformation.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this ApiResourceGeneralInformation.

        The API description

        :param description: The description of this ApiResourceGeneralInformation.
        :type description: str
        """

        self._description = description

    @property
    def display_name(self):
        """Gets the display_name of this ApiResourceGeneralInformation.

        Display name

        :return: The display_name of this ApiResourceGeneralInformation.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this ApiResourceGeneralInformation.

        Display name

        :param display_name: The display_name of this ApiResourceGeneralInformation.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def icon_url(self):
        """Gets the icon_url of this ApiResourceGeneralInformation.

        The icon URL

        :return: The icon_url of this ApiResourceGeneralInformation.
        :rtype: str
        """
        return self._icon_url

    @icon_url.setter
    def icon_url(self, icon_url):
        """Sets the icon_url of this ApiResourceGeneralInformation.

        The icon URL

        :param icon_url: The icon_url of this ApiResourceGeneralInformation.
        :type icon_url: str
        """

        self._icon_url = icon_url

    @property
    def release_tag(self):
        """Gets the release_tag of this ApiResourceGeneralInformation.

        Release tag

        :return: The release_tag of this ApiResourceGeneralInformation.
        :rtype: str
        """
        return self._release_tag

    @release_tag.setter
    def release_tag(self, release_tag):
        """Sets the release_tag of this ApiResourceGeneralInformation.

        Release tag

        :param release_tag: The release_tag of this ApiResourceGeneralInformation.
        :type release_tag: str
        """

        self._release_tag = release_tag

    @property
    def terms_of_use_url(self):
        """Gets the terms_of_use_url of this ApiResourceGeneralInformation.

        URL to the Terms of Use

        :return: The terms_of_use_url of this ApiResourceGeneralInformation.
        :rtype: str
        """
        return self._terms_of_use_url

    @terms_of_use_url.setter
    def terms_of_use_url(self, terms_of_use_url):
        """Sets the terms_of_use_url of this ApiResourceGeneralInformation.

        URL to the Terms of Use

        :param terms_of_use_url: The terms_of_use_url of this ApiResourceGeneralInformation.
        :type terms_of_use_url: str
        """

        self._terms_of_use_url = terms_of_use_url
