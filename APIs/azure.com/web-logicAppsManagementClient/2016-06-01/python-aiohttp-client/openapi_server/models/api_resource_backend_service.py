# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ApiResourceBackendService(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, service_url: str=None):
        """ApiResourceBackendService - a model defined in OpenAPI

        :param service_url: The service_url of this ApiResourceBackendService.
        """
        self.openapi_types = {
            'service_url': str
        }

        self.attribute_map = {
            'service_url': 'serviceUrl'
        }

        self._service_url = service_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApiResourceBackendService':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ApiResourceBackendService of this ApiResourceBackendService.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def service_url(self):
        """Gets the service_url of this ApiResourceBackendService.

        The service URL

        :return: The service_url of this ApiResourceBackendService.
        :rtype: str
        """
        return self._service_url

    @service_url.setter
    def service_url(self, service_url):
        """Sets the service_url of this ApiResourceBackendService.

        The service URL

        :param service_url: The service_url of this ApiResourceBackendService.
        :type service_url: str
        """

        self._service_url = service_url
