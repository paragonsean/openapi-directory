# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class WsdlService(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, endpoint_qualified_names: List[str]=None, qualified_name: str=None):
        """WsdlService - a model defined in OpenAPI

        :param endpoint_qualified_names: The endpoint_qualified_names of this WsdlService.
        :param qualified_name: The qualified_name of this WsdlService.
        """
        self.openapi_types = {
            'endpoint_qualified_names': List[str],
            'qualified_name': str
        }

        self.attribute_map = {
            'endpoint_qualified_names': 'endpointQualifiedNames',
            'qualified_name': 'qualifiedName'
        }

        self._endpoint_qualified_names = endpoint_qualified_names
        self._qualified_name = qualified_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'WsdlService':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The WsdlService of this WsdlService.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def endpoint_qualified_names(self):
        """Gets the endpoint_qualified_names of this WsdlService.

        List of the endpoints' qualified names

        :return: The endpoint_qualified_names of this WsdlService.
        :rtype: List[str]
        """
        return self._endpoint_qualified_names

    @endpoint_qualified_names.setter
    def endpoint_qualified_names(self, endpoint_qualified_names):
        """Sets the endpoint_qualified_names of this WsdlService.

        List of the endpoints' qualified names

        :param endpoint_qualified_names: The endpoint_qualified_names of this WsdlService.
        :type endpoint_qualified_names: List[str]
        """

        self._endpoint_qualified_names = endpoint_qualified_names

    @property
    def qualified_name(self):
        """Gets the qualified_name of this WsdlService.

        The service's qualified name

        :return: The qualified_name of this WsdlService.
        :rtype: str
        """
        return self._qualified_name

    @qualified_name.setter
    def qualified_name(self, qualified_name):
        """Sets the qualified_name of this WsdlService.

        The service's qualified name

        :param qualified_name: The qualified_name of this WsdlService.
        :type qualified_name: str
        """
        if qualified_name is None:
            raise ValueError("Invalid value for `qualified_name`, must not be `None`")

        self._qualified_name = qualified_name
