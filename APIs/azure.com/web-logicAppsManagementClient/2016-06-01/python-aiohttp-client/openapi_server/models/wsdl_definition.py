# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.wsdl_import_method import WsdlImportMethod
from openapi_server.models.wsdl_service import WsdlService
from openapi_server import util


class WsdlDefinition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, content: str=None, import_method: WsdlImportMethod=None, service: WsdlService=None, url: str=None):
        """WsdlDefinition - a model defined in OpenAPI

        :param content: The content of this WsdlDefinition.
        :param import_method: The import_method of this WsdlDefinition.
        :param service: The service of this WsdlDefinition.
        :param url: The url of this WsdlDefinition.
        """
        self.openapi_types = {
            'content': str,
            'import_method': WsdlImportMethod,
            'service': WsdlService,
            'url': str
        }

        self.attribute_map = {
            'content': 'content',
            'import_method': 'importMethod',
            'service': 'service',
            'url': 'url'
        }

        self._content = content
        self._import_method = import_method
        self._service = service
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'WsdlDefinition':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The WsdlDefinition of this WsdlDefinition.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def content(self):
        """Gets the content of this WsdlDefinition.

        The WSDL content

        :return: The content of this WsdlDefinition.
        :rtype: str
        """
        return self._content

    @content.setter
    def content(self, content):
        """Sets the content of this WsdlDefinition.

        The WSDL content

        :param content: The content of this WsdlDefinition.
        :type content: str
        """

        self._content = content

    @property
    def import_method(self):
        """Gets the import_method of this WsdlDefinition.


        :return: The import_method of this WsdlDefinition.
        :rtype: WsdlImportMethod
        """
        return self._import_method

    @import_method.setter
    def import_method(self, import_method):
        """Sets the import_method of this WsdlDefinition.


        :param import_method: The import_method of this WsdlDefinition.
        :type import_method: WsdlImportMethod
        """

        self._import_method = import_method

    @property
    def service(self):
        """Gets the service of this WsdlDefinition.


        :return: The service of this WsdlDefinition.
        :rtype: WsdlService
        """
        return self._service

    @service.setter
    def service(self, service):
        """Sets the service of this WsdlDefinition.


        :param service: The service of this WsdlDefinition.
        :type service: WsdlService
        """

        self._service = service

    @property
    def url(self):
        """Gets the url of this WsdlDefinition.

        The WSDL URL

        :return: The url of this WsdlDefinition.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this WsdlDefinition.

        The WSDL URL

        :param url: The url of this WsdlDefinition.
        :type url: str
        """

        self._url = url
