# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.api_resource_backend_service import ApiResourceBackendService
from openapi_server.models.api_resource_definitions import ApiResourceDefinitions
from openapi_server.models.api_type import ApiType
from openapi_server.models.connection_parameter import ConnectionParameter
from openapi_server.models.wsdl_definition import WsdlDefinition
from openapi_server import util


class CustomApiPropertiesDefinition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, api_definitions: ApiResourceDefinitions=None, api_type: ApiType=None, backend_service: ApiResourceBackendService=None, brand_color: str=None, capabilities: List[str]=None, connection_parameters: Dict[str, ConnectionParameter]=None, description: str=None, display_name: str=None, icon_uri: str=None, runtime_urls: List[str]=None, swagger: object=None, wsdl_definition: WsdlDefinition=None):
        """CustomApiPropertiesDefinition - a model defined in OpenAPI

        :param api_definitions: The api_definitions of this CustomApiPropertiesDefinition.
        :param api_type: The api_type of this CustomApiPropertiesDefinition.
        :param backend_service: The backend_service of this CustomApiPropertiesDefinition.
        :param brand_color: The brand_color of this CustomApiPropertiesDefinition.
        :param capabilities: The capabilities of this CustomApiPropertiesDefinition.
        :param connection_parameters: The connection_parameters of this CustomApiPropertiesDefinition.
        :param description: The description of this CustomApiPropertiesDefinition.
        :param display_name: The display_name of this CustomApiPropertiesDefinition.
        :param icon_uri: The icon_uri of this CustomApiPropertiesDefinition.
        :param runtime_urls: The runtime_urls of this CustomApiPropertiesDefinition.
        :param swagger: The swagger of this CustomApiPropertiesDefinition.
        :param wsdl_definition: The wsdl_definition of this CustomApiPropertiesDefinition.
        """
        self.openapi_types = {
            'api_definitions': ApiResourceDefinitions,
            'api_type': ApiType,
            'backend_service': ApiResourceBackendService,
            'brand_color': str,
            'capabilities': List[str],
            'connection_parameters': Dict[str, ConnectionParameter],
            'description': str,
            'display_name': str,
            'icon_uri': str,
            'runtime_urls': List[str],
            'swagger': object,
            'wsdl_definition': WsdlDefinition
        }

        self.attribute_map = {
            'api_definitions': 'apiDefinitions',
            'api_type': 'apiType',
            'backend_service': 'backendService',
            'brand_color': 'brandColor',
            'capabilities': 'capabilities',
            'connection_parameters': 'connectionParameters',
            'description': 'description',
            'display_name': 'displayName',
            'icon_uri': 'iconUri',
            'runtime_urls': 'runtimeUrls',
            'swagger': 'swagger',
            'wsdl_definition': 'wsdlDefinition'
        }

        self._api_definitions = api_definitions
        self._api_type = api_type
        self._backend_service = backend_service
        self._brand_color = brand_color
        self._capabilities = capabilities
        self._connection_parameters = connection_parameters
        self._description = description
        self._display_name = display_name
        self._icon_uri = icon_uri
        self._runtime_urls = runtime_urls
        self._swagger = swagger
        self._wsdl_definition = wsdl_definition

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CustomApiPropertiesDefinition':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CustomApiPropertiesDefinition of this CustomApiPropertiesDefinition.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def api_definitions(self):
        """Gets the api_definitions of this CustomApiPropertiesDefinition.


        :return: The api_definitions of this CustomApiPropertiesDefinition.
        :rtype: ApiResourceDefinitions
        """
        return self._api_definitions

    @api_definitions.setter
    def api_definitions(self, api_definitions):
        """Sets the api_definitions of this CustomApiPropertiesDefinition.


        :param api_definitions: The api_definitions of this CustomApiPropertiesDefinition.
        :type api_definitions: ApiResourceDefinitions
        """

        self._api_definitions = api_definitions

    @property
    def api_type(self):
        """Gets the api_type of this CustomApiPropertiesDefinition.


        :return: The api_type of this CustomApiPropertiesDefinition.
        :rtype: ApiType
        """
        return self._api_type

    @api_type.setter
    def api_type(self, api_type):
        """Sets the api_type of this CustomApiPropertiesDefinition.


        :param api_type: The api_type of this CustomApiPropertiesDefinition.
        :type api_type: ApiType
        """

        self._api_type = api_type

    @property
    def backend_service(self):
        """Gets the backend_service of this CustomApiPropertiesDefinition.


        :return: The backend_service of this CustomApiPropertiesDefinition.
        :rtype: ApiResourceBackendService
        """
        return self._backend_service

    @backend_service.setter
    def backend_service(self, backend_service):
        """Sets the backend_service of this CustomApiPropertiesDefinition.


        :param backend_service: The backend_service of this CustomApiPropertiesDefinition.
        :type backend_service: ApiResourceBackendService
        """

        self._backend_service = backend_service

    @property
    def brand_color(self):
        """Gets the brand_color of this CustomApiPropertiesDefinition.

        Brand color

        :return: The brand_color of this CustomApiPropertiesDefinition.
        :rtype: str
        """
        return self._brand_color

    @brand_color.setter
    def brand_color(self, brand_color):
        """Sets the brand_color of this CustomApiPropertiesDefinition.

        Brand color

        :param brand_color: The brand_color of this CustomApiPropertiesDefinition.
        :type brand_color: str
        """

        self._brand_color = brand_color

    @property
    def capabilities(self):
        """Gets the capabilities of this CustomApiPropertiesDefinition.

        The custom API capabilities

        :return: The capabilities of this CustomApiPropertiesDefinition.
        :rtype: List[str]
        """
        return self._capabilities

    @capabilities.setter
    def capabilities(self, capabilities):
        """Sets the capabilities of this CustomApiPropertiesDefinition.

        The custom API capabilities

        :param capabilities: The capabilities of this CustomApiPropertiesDefinition.
        :type capabilities: List[str]
        """

        self._capabilities = capabilities

    @property
    def connection_parameters(self):
        """Gets the connection_parameters of this CustomApiPropertiesDefinition.

        Connection parameters

        :return: The connection_parameters of this CustomApiPropertiesDefinition.
        :rtype: Dict[str, ConnectionParameter]
        """
        return self._connection_parameters

    @connection_parameters.setter
    def connection_parameters(self, connection_parameters):
        """Sets the connection_parameters of this CustomApiPropertiesDefinition.

        Connection parameters

        :param connection_parameters: The connection_parameters of this CustomApiPropertiesDefinition.
        :type connection_parameters: Dict[str, ConnectionParameter]
        """

        self._connection_parameters = connection_parameters

    @property
    def description(self):
        """Gets the description of this CustomApiPropertiesDefinition.

        The custom API description

        :return: The description of this CustomApiPropertiesDefinition.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this CustomApiPropertiesDefinition.

        The custom API description

        :param description: The description of this CustomApiPropertiesDefinition.
        :type description: str
        """

        self._description = description

    @property
    def display_name(self):
        """Gets the display_name of this CustomApiPropertiesDefinition.

        The display name

        :return: The display_name of this CustomApiPropertiesDefinition.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this CustomApiPropertiesDefinition.

        The display name

        :param display_name: The display_name of this CustomApiPropertiesDefinition.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def icon_uri(self):
        """Gets the icon_uri of this CustomApiPropertiesDefinition.

        The icon URI

        :return: The icon_uri of this CustomApiPropertiesDefinition.
        :rtype: str
        """
        return self._icon_uri

    @icon_uri.setter
    def icon_uri(self, icon_uri):
        """Sets the icon_uri of this CustomApiPropertiesDefinition.

        The icon URI

        :param icon_uri: The icon_uri of this CustomApiPropertiesDefinition.
        :type icon_uri: str
        """

        self._icon_uri = icon_uri

    @property
    def runtime_urls(self):
        """Gets the runtime_urls of this CustomApiPropertiesDefinition.

        Runtime URLs

        :return: The runtime_urls of this CustomApiPropertiesDefinition.
        :rtype: List[str]
        """
        return self._runtime_urls

    @runtime_urls.setter
    def runtime_urls(self, runtime_urls):
        """Sets the runtime_urls of this CustomApiPropertiesDefinition.

        Runtime URLs

        :param runtime_urls: The runtime_urls of this CustomApiPropertiesDefinition.
        :type runtime_urls: List[str]
        """

        self._runtime_urls = runtime_urls

    @property
    def swagger(self):
        """Gets the swagger of this CustomApiPropertiesDefinition.

        The JSON representation of the swagger

        :return: The swagger of this CustomApiPropertiesDefinition.
        :rtype: object
        """
        return self._swagger

    @swagger.setter
    def swagger(self, swagger):
        """Sets the swagger of this CustomApiPropertiesDefinition.

        The JSON representation of the swagger

        :param swagger: The swagger of this CustomApiPropertiesDefinition.
        :type swagger: object
        """

        self._swagger = swagger

    @property
    def wsdl_definition(self):
        """Gets the wsdl_definition of this CustomApiPropertiesDefinition.


        :return: The wsdl_definition of this CustomApiPropertiesDefinition.
        :rtype: WsdlDefinition
        """
        return self._wsdl_definition

    @wsdl_definition.setter
    def wsdl_definition(self, wsdl_definition):
        """Sets the wsdl_definition of this CustomApiPropertiesDefinition.


        :param wsdl_definition: The wsdl_definition of this CustomApiPropertiesDefinition.
        :type wsdl_definition: WsdlDefinition
        """

        self._wsdl_definition = wsdl_definition
