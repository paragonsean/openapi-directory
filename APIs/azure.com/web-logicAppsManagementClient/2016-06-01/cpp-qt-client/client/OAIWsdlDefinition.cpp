/**
 * LogicAppsManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-06-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIWsdlDefinition.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIWsdlDefinition::OAIWsdlDefinition(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIWsdlDefinition::OAIWsdlDefinition() {
    this->initializeModel();
}

OAIWsdlDefinition::~OAIWsdlDefinition() {}

void OAIWsdlDefinition::initializeModel() {

    m_content_isSet = false;
    m_content_isValid = false;

    m_import_method_isSet = false;
    m_import_method_isValid = false;

    m_service_isSet = false;
    m_service_isValid = false;

    m_url_isSet = false;
    m_url_isValid = false;
}

void OAIWsdlDefinition::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIWsdlDefinition::fromJsonObject(QJsonObject json) {

    m_content_isValid = ::OpenAPI::fromJsonValue(m_content, json[QString("content")]);
    m_content_isSet = !json[QString("content")].isNull() && m_content_isValid;

    m_import_method_isValid = ::OpenAPI::fromJsonValue(m_import_method, json[QString("importMethod")]);
    m_import_method_isSet = !json[QString("importMethod")].isNull() && m_import_method_isValid;

    m_service_isValid = ::OpenAPI::fromJsonValue(m_service, json[QString("service")]);
    m_service_isSet = !json[QString("service")].isNull() && m_service_isValid;

    m_url_isValid = ::OpenAPI::fromJsonValue(m_url, json[QString("url")]);
    m_url_isSet = !json[QString("url")].isNull() && m_url_isValid;
}

QString OAIWsdlDefinition::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIWsdlDefinition::asJsonObject() const {
    QJsonObject obj;
    if (m_content_isSet) {
        obj.insert(QString("content"), ::OpenAPI::toJsonValue(m_content));
    }
    if (m_import_method.isSet()) {
        obj.insert(QString("importMethod"), ::OpenAPI::toJsonValue(m_import_method));
    }
    if (m_service.isSet()) {
        obj.insert(QString("service"), ::OpenAPI::toJsonValue(m_service));
    }
    if (m_url_isSet) {
        obj.insert(QString("url"), ::OpenAPI::toJsonValue(m_url));
    }
    return obj;
}

QString OAIWsdlDefinition::getContent() const {
    return m_content;
}
void OAIWsdlDefinition::setContent(const QString &content) {
    m_content = content;
    m_content_isSet = true;
}

bool OAIWsdlDefinition::is_content_Set() const{
    return m_content_isSet;
}

bool OAIWsdlDefinition::is_content_Valid() const{
    return m_content_isValid;
}

OAIWsdlImportMethod OAIWsdlDefinition::getImportMethod() const {
    return m_import_method;
}
void OAIWsdlDefinition::setImportMethod(const OAIWsdlImportMethod &import_method) {
    m_import_method = import_method;
    m_import_method_isSet = true;
}

bool OAIWsdlDefinition::is_import_method_Set() const{
    return m_import_method_isSet;
}

bool OAIWsdlDefinition::is_import_method_Valid() const{
    return m_import_method_isValid;
}

OAIWsdlService OAIWsdlDefinition::getService() const {
    return m_service;
}
void OAIWsdlDefinition::setService(const OAIWsdlService &service) {
    m_service = service;
    m_service_isSet = true;
}

bool OAIWsdlDefinition::is_service_Set() const{
    return m_service_isSet;
}

bool OAIWsdlDefinition::is_service_Valid() const{
    return m_service_isValid;
}

QString OAIWsdlDefinition::getUrl() const {
    return m_url;
}
void OAIWsdlDefinition::setUrl(const QString &url) {
    m_url = url;
    m_url_isSet = true;
}

bool OAIWsdlDefinition::is_url_Set() const{
    return m_url_isSet;
}

bool OAIWsdlDefinition::is_url_Valid() const{
    return m_url_isValid;
}

bool OAIWsdlDefinition::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_content_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_import_method.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_service.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIWsdlDefinition::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
