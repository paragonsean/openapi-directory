/**
 * LogicAppsManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-06-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIApiConnectionTestLink.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIApiConnectionTestLink::OAIApiConnectionTestLink(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIApiConnectionTestLink::OAIApiConnectionTestLink() {
    this->initializeModel();
}

OAIApiConnectionTestLink::~OAIApiConnectionTestLink() {}

void OAIApiConnectionTestLink::initializeModel() {

    m_method_isSet = false;
    m_method_isValid = false;

    m_request_uri_isSet = false;
    m_request_uri_isValid = false;
}

void OAIApiConnectionTestLink::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIApiConnectionTestLink::fromJsonObject(QJsonObject json) {

    m_method_isValid = ::OpenAPI::fromJsonValue(m_method, json[QString("method")]);
    m_method_isSet = !json[QString("method")].isNull() && m_method_isValid;

    m_request_uri_isValid = ::OpenAPI::fromJsonValue(m_request_uri, json[QString("requestUri")]);
    m_request_uri_isSet = !json[QString("requestUri")].isNull() && m_request_uri_isValid;
}

QString OAIApiConnectionTestLink::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIApiConnectionTestLink::asJsonObject() const {
    QJsonObject obj;
    if (m_method_isSet) {
        obj.insert(QString("method"), ::OpenAPI::toJsonValue(m_method));
    }
    if (m_request_uri_isSet) {
        obj.insert(QString("requestUri"), ::OpenAPI::toJsonValue(m_request_uri));
    }
    return obj;
}

QString OAIApiConnectionTestLink::getMethod() const {
    return m_method;
}
void OAIApiConnectionTestLink::setMethod(const QString &method) {
    m_method = method;
    m_method_isSet = true;
}

bool OAIApiConnectionTestLink::is_method_Set() const{
    return m_method_isSet;
}

bool OAIApiConnectionTestLink::is_method_Valid() const{
    return m_method_isValid;
}

QString OAIApiConnectionTestLink::getRequestUri() const {
    return m_request_uri;
}
void OAIApiConnectionTestLink::setRequestUri(const QString &request_uri) {
    m_request_uri = request_uri;
    m_request_uri_isSet = true;
}

bool OAIApiConnectionTestLink::is_request_uri_Set() const{
    return m_request_uri_isSet;
}

bool OAIApiConnectionTestLink::is_request_uri_Valid() const{
    return m_request_uri_isValid;
}

bool OAIApiConnectionTestLink::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_method_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_request_uri_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIApiConnectionTestLink::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
