/**
 * LogicAppsManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CustomApiDefinition from '../model/CustomApiDefinition';
import CustomApiDefinitionCollection from '../model/CustomApiDefinitionCollection';
import CustomApiReference from '../model/CustomApiReference';
import WsdlDefinition from '../model/WsdlDefinition';
import WsdlServiceCollection from '../model/WsdlServiceCollection';

/**
* CustomAPIs service.
* @module api/CustomAPIsApi
* @version 2016-06-01
*/
export default class CustomAPIsApi {

    /**
    * Constructs a new CustomAPIsApi. 
    * @alias module:api/CustomAPIsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the customApisCreateOrUpdate operation.
     * @callback module:api/CustomAPIsApi~customApisCreateOrUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CustomApiDefinition} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Replaces an existing custom API
     * Creates or updates an existing custom API
     * @param {String} subscriptionId Subscription Id
     * @param {String} resourceGroupName The resource group
     * @param {String} apiName API name
     * @param {String} apiVersion API Version
     * @param {module:model/CustomApiDefinition} customApi The custom API
     * @param {module:api/CustomAPIsApi~customApisCreateOrUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CustomApiDefinition}
     */
    customApisCreateOrUpdate(subscriptionId, resourceGroupName, apiName, apiVersion, customApi, callback) {
      let postBody = customApi;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling customApisCreateOrUpdate");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling customApisCreateOrUpdate");
      }
      // verify the required parameter 'apiName' is set
      if (apiName === undefined || apiName === null) {
        throw new Error("Missing the required parameter 'apiName' when calling customApisCreateOrUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling customApisCreateOrUpdate");
      }
      // verify the required parameter 'customApi' is set
      if (customApi === undefined || customApi === null) {
        throw new Error("Missing the required parameter 'customApi' when calling customApisCreateOrUpdate");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'apiName': apiName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CustomApiDefinition;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/customApis/{apiName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the customApisDelete operation.
     * @callback module:api/CustomAPIsApi~customApisDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete a custom API
     * Deletes a custom API from the resource group
     * @param {String} subscriptionId Subscription Id
     * @param {String} resourceGroupName The resource group
     * @param {String} apiName API name
     * @param {String} apiVersion API Version
     * @param {module:api/CustomAPIsApi~customApisDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    customApisDelete(subscriptionId, resourceGroupName, apiName, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling customApisDelete");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling customApisDelete");
      }
      // verify the required parameter 'apiName' is set
      if (apiName === undefined || apiName === null) {
        throw new Error("Missing the required parameter 'apiName' when calling customApisDelete");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling customApisDelete");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'apiName': apiName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/customApis/{apiName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the customApisExtractApiDefinitionFromWsdl operation.
     * @callback module:api/CustomAPIsApi~customApisExtractApiDefinitionFromWsdlCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns API definition from WSDL
     * Parses the specified WSDL and extracts the API definition
     * @param {String} subscriptionId Subscription Id
     * @param {String} location The location
     * @param {String} apiVersion API Version
     * @param {module:model/WsdlDefinition} wsdlDefinition WSDL definition
     * @param {module:api/CustomAPIsApi~customApisExtractApiDefinitionFromWsdlCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    customApisExtractApiDefinitionFromWsdl(subscriptionId, location, apiVersion, wsdlDefinition, callback) {
      let postBody = wsdlDefinition;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling customApisExtractApiDefinitionFromWsdl");
      }
      // verify the required parameter 'location' is set
      if (location === undefined || location === null) {
        throw new Error("Missing the required parameter 'location' when calling customApisExtractApiDefinitionFromWsdl");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling customApisExtractApiDefinitionFromWsdl");
      }
      // verify the required parameter 'wsdlDefinition' is set
      if (wsdlDefinition === undefined || wsdlDefinition === null) {
        throw new Error("Missing the required parameter 'wsdlDefinition' when calling customApisExtractApiDefinitionFromWsdl");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'location': location
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.Web/locations/{location}/extractApiDefinitionFromWsdl', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the customApisGet operation.
     * @callback module:api/CustomAPIsApi~customApisGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CustomApiDefinition} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a custom API
     * Gets a custom API by name for a specific subscription and resource group
     * @param {String} subscriptionId Subscription Id
     * @param {String} resourceGroupName The resource group
     * @param {String} apiName API name
     * @param {String} apiVersion API Version
     * @param {module:api/CustomAPIsApi~customApisGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CustomApiDefinition}
     */
    customApisGet(subscriptionId, resourceGroupName, apiName, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling customApisGet");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling customApisGet");
      }
      // verify the required parameter 'apiName' is set
      if (apiName === undefined || apiName === null) {
        throw new Error("Missing the required parameter 'apiName' when calling customApisGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling customApisGet");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'apiName': apiName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = CustomApiDefinition;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/customApis/{apiName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the customApisList operation.
     * @callback module:api/CustomAPIsApi~customApisListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CustomApiDefinitionCollection} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List of custom APIs
     * Gets a list of all custom APIs for a subscription id
     * @param {String} subscriptionId Subscription Id
     * @param {String} apiVersion API Version
     * @param {Object} opts Optional parameters
     * @param {Number} [top] The number of items to be included in the result
     * @param {String} [skiptoken] Skip Token
     * @param {module:api/CustomAPIsApi~customApisListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CustomApiDefinitionCollection}
     */
    customApisList(subscriptionId, apiVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling customApisList");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling customApisList");
      }

      let pathParams = {
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion,
        '$top': opts['top'],
        'skiptoken': opts['skiptoken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = CustomApiDefinitionCollection;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.Web/customApis', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the customApisListByResourceGroup operation.
     * @callback module:api/CustomAPIsApi~customApisListByResourceGroupCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CustomApiDefinitionCollection} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List of custom APIs
     * Gets a list of all custom APIs in a subscription for a specific resource group
     * @param {String} subscriptionId Subscription Id
     * @param {String} resourceGroupName The resource group
     * @param {String} apiVersion API Version
     * @param {Object} opts Optional parameters
     * @param {Number} [top] The number of items to be included in the result
     * @param {String} [skiptoken] Skip Token
     * @param {module:api/CustomAPIsApi~customApisListByResourceGroupCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CustomApiDefinitionCollection}
     */
    customApisListByResourceGroup(subscriptionId, resourceGroupName, apiVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling customApisListByResourceGroup");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling customApisListByResourceGroup");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling customApisListByResourceGroup");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName
      };
      let queryParams = {
        'api-version': apiVersion,
        '$top': opts['top'],
        'skiptoken': opts['skiptoken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = CustomApiDefinitionCollection;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/customApis', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the customApisListWsdlInterfaces operation.
     * @callback module:api/CustomAPIsApi~customApisListWsdlInterfacesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/WsdlServiceCollection} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists WSDL interfaces
     * This returns the list of interfaces in the WSDL
     * @param {String} subscriptionId Subscription Id
     * @param {String} location The location
     * @param {String} apiVersion API Version
     * @param {module:model/WsdlDefinition} wsdlDefinition WSDL definition
     * @param {module:api/CustomAPIsApi~customApisListWsdlInterfacesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/WsdlServiceCollection}
     */
    customApisListWsdlInterfaces(subscriptionId, location, apiVersion, wsdlDefinition, callback) {
      let postBody = wsdlDefinition;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling customApisListWsdlInterfaces");
      }
      // verify the required parameter 'location' is set
      if (location === undefined || location === null) {
        throw new Error("Missing the required parameter 'location' when calling customApisListWsdlInterfaces");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling customApisListWsdlInterfaces");
      }
      // verify the required parameter 'wsdlDefinition' is set
      if (wsdlDefinition === undefined || wsdlDefinition === null) {
        throw new Error("Missing the required parameter 'wsdlDefinition' when calling customApisListWsdlInterfaces");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'location': location
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = WsdlServiceCollection;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.Web/locations/{location}/listWsdlInterfaces', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the customApisMove operation.
     * @callback module:api/CustomAPIsApi~customApisMoveCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Moves the custom API
     * Moves a specific custom API
     * @param {String} subscriptionId Subscription Id
     * @param {String} resourceGroupName The resource group
     * @param {String} apiName API name
     * @param {String} apiVersion API Version
     * @param {module:model/CustomApiReference} customApiReference The custom API reference
     * @param {module:api/CustomAPIsApi~customApisMoveCallback} callback The callback function, accepting three arguments: error, data, response
     */
    customApisMove(subscriptionId, resourceGroupName, apiName, apiVersion, customApiReference, callback) {
      let postBody = customApiReference;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling customApisMove");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling customApisMove");
      }
      // verify the required parameter 'apiName' is set
      if (apiName === undefined || apiName === null) {
        throw new Error("Missing the required parameter 'apiName' when calling customApisMove");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling customApisMove");
      }
      // verify the required parameter 'customApiReference' is set
      if (customApiReference === undefined || customApiReference === null) {
        throw new Error("Missing the required parameter 'customApiReference' when calling customApisMove");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'apiName': apiName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/customApis/{apiName}/move', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the customApisUpdate operation.
     * @callback module:api/CustomAPIsApi~customApisUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CustomApiDefinition} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update an existing custom API
     * Updates an existing custom API's tags
     * @param {String} subscriptionId Subscription Id
     * @param {String} resourceGroupName The resource group
     * @param {String} apiName API name
     * @param {String} apiVersion API Version
     * @param {module:model/CustomApiDefinition} customApi The custom API
     * @param {module:api/CustomAPIsApi~customApisUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CustomApiDefinition}
     */
    customApisUpdate(subscriptionId, resourceGroupName, apiName, apiVersion, customApi, callback) {
      let postBody = customApi;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling customApisUpdate");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling customApisUpdate");
      }
      // verify the required parameter 'apiName' is set
      if (apiName === undefined || apiName === null) {
        throw new Error("Missing the required parameter 'apiName' when calling customApisUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling customApisUpdate");
      }
      // verify the required parameter 'customApi' is set
      if (customApi === undefined || customApi === null) {
        throw new Error("Missing the required parameter 'customApi' when calling customApisUpdate");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'apiName': apiName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CustomApiDefinition;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/customApis/{apiName}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
