/**
 * LogicAppsManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ApiOAuthSettingsParameter from './ApiOAuthSettingsParameter';

/**
 * The ApiOAuthSettings model module.
 * @module model/ApiOAuthSettings
 * @version 2016-06-01
 */
class ApiOAuthSettings {
    /**
     * Constructs a new <code>ApiOAuthSettings</code>.
     * OAuth settings for the connection provider
     * @alias module:model/ApiOAuthSettings
     */
    constructor() { 
        
        ApiOAuthSettings.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ApiOAuthSettings</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ApiOAuthSettings} obj Optional instance to populate.
     * @return {module:model/ApiOAuthSettings} The populated <code>ApiOAuthSettings</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ApiOAuthSettings();

            if (data.hasOwnProperty('clientId')) {
                obj['clientId'] = ApiClient.convertToType(data['clientId'], 'String');
            }
            if (data.hasOwnProperty('clientSecret')) {
                obj['clientSecret'] = ApiClient.convertToType(data['clientSecret'], 'String');
            }
            if (data.hasOwnProperty('customParameters')) {
                obj['customParameters'] = ApiClient.convertToType(data['customParameters'], {'String': ApiOAuthSettingsParameter});
            }
            if (data.hasOwnProperty('identityProvider')) {
                obj['identityProvider'] = ApiClient.convertToType(data['identityProvider'], 'String');
            }
            if (data.hasOwnProperty('properties')) {
                obj['properties'] = ApiClient.convertToType(data['properties'], Object);
            }
            if (data.hasOwnProperty('redirectUrl')) {
                obj['redirectUrl'] = ApiClient.convertToType(data['redirectUrl'], 'String');
            }
            if (data.hasOwnProperty('scopes')) {
                obj['scopes'] = ApiClient.convertToType(data['scopes'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ApiOAuthSettings</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ApiOAuthSettings</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['clientId'] && !(typeof data['clientId'] === 'string' || data['clientId'] instanceof String)) {
            throw new Error("Expected the field `clientId` to be a primitive type in the JSON string but got " + data['clientId']);
        }
        // ensure the json data is a string
        if (data['clientSecret'] && !(typeof data['clientSecret'] === 'string' || data['clientSecret'] instanceof String)) {
            throw new Error("Expected the field `clientSecret` to be a primitive type in the JSON string but got " + data['clientSecret']);
        }
        // ensure the json data is a string
        if (data['identityProvider'] && !(typeof data['identityProvider'] === 'string' || data['identityProvider'] instanceof String)) {
            throw new Error("Expected the field `identityProvider` to be a primitive type in the JSON string but got " + data['identityProvider']);
        }
        // ensure the json data is a string
        if (data['redirectUrl'] && !(typeof data['redirectUrl'] === 'string' || data['redirectUrl'] instanceof String)) {
            throw new Error("Expected the field `redirectUrl` to be a primitive type in the JSON string but got " + data['redirectUrl']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['scopes'])) {
            throw new Error("Expected the field `scopes` to be an array in the JSON data but got " + data['scopes']);
        }

        return true;
    }


}



/**
 * Resource provider client id
 * @member {String} clientId
 */
ApiOAuthSettings.prototype['clientId'] = undefined;

/**
 * Client Secret needed for OAuth
 * @member {String} clientSecret
 */
ApiOAuthSettings.prototype['clientSecret'] = undefined;

/**
 * OAuth parameters key is the name of parameter
 * @member {Object.<String, module:model/ApiOAuthSettingsParameter>} customParameters
 */
ApiOAuthSettings.prototype['customParameters'] = undefined;

/**
 * Identity provider
 * @member {String} identityProvider
 */
ApiOAuthSettings.prototype['identityProvider'] = undefined;

/**
 * Read only properties for this oauth setting.
 * @member {Object} properties
 */
ApiOAuthSettings.prototype['properties'] = undefined;

/**
 * Url
 * @member {String} redirectUrl
 */
ApiOAuthSettings.prototype['redirectUrl'] = undefined;

/**
 * OAuth scopes
 * @member {Array.<String>} scopes
 */
ApiOAuthSettings.prototype['scopes'] = undefined;






export default ApiOAuthSettings;

