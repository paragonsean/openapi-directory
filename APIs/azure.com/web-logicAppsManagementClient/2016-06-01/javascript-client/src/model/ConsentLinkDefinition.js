/**
 * LogicAppsManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ConsentLinkDefinition model module.
 * @module model/ConsentLinkDefinition
 * @version 2016-06-01
 */
class ConsentLinkDefinition {
    /**
     * Constructs a new <code>ConsentLinkDefinition</code>.
     * A consent link
     * @alias module:model/ConsentLinkDefinition
     */
    constructor() { 
        
        ConsentLinkDefinition.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ConsentLinkDefinition</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ConsentLinkDefinition} obj Optional instance to populate.
     * @return {module:model/ConsentLinkDefinition} The populated <code>ConsentLinkDefinition</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ConsentLinkDefinition();

            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('firstPartyLoginUri')) {
                obj['firstPartyLoginUri'] = ApiClient.convertToType(data['firstPartyLoginUri'], 'String');
            }
            if (data.hasOwnProperty('link')) {
                obj['link'] = ApiClient.convertToType(data['link'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ConsentLinkDefinition</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ConsentLinkDefinition</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // ensure the json data is a string
        if (data['firstPartyLoginUri'] && !(typeof data['firstPartyLoginUri'] === 'string' || data['firstPartyLoginUri'] instanceof String)) {
            throw new Error("Expected the field `firstPartyLoginUri` to be a primitive type in the JSON string but got " + data['firstPartyLoginUri']);
        }
        // ensure the json data is a string
        if (data['link'] && !(typeof data['link'] === 'string' || data['link'] instanceof String)) {
            throw new Error("Expected the field `link` to be a primitive type in the JSON string but got " + data['link']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }

        return true;
    }


}



/**
 * Display name of the parameter in the connection provider's OAuth settings
 * @member {String} displayName
 */
ConsentLinkDefinition.prototype['displayName'] = undefined;

/**
 * URI for first party login
 * @member {String} firstPartyLoginUri
 */
ConsentLinkDefinition.prototype['firstPartyLoginUri'] = undefined;

/**
 * URI for the consent link
 * @member {String} link
 */
ConsentLinkDefinition.prototype['link'] = undefined;

/**
 * Status of the link
 * @member {module:model/ConsentLinkDefinition.StatusEnum} status
 */
ConsentLinkDefinition.prototype['status'] = undefined;





/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
ConsentLinkDefinition['StatusEnum'] = {

    /**
     * value: "Unauthenticated"
     * @const
     */
    "Unauthenticated": "Unauthenticated",

    /**
     * value: "Authenticated"
     * @const
     */
    "Authenticated": "Authenticated",

    /**
     * value: "Error"
     * @const
     */
    "Error": "Error"
};



export default ConsentLinkDefinition;

