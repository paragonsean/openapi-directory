/**
 * LogicAppsManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ApiResourceBackendService from './ApiResourceBackendService';
import ApiResourceDefinitions from './ApiResourceDefinitions';
import ApiResourceGeneralInformation from './ApiResourceGeneralInformation';
import ApiResourceMetadata from './ApiResourceMetadata';
import ApiResourcePolicies from './ApiResourcePolicies';
import ConnectionParameter from './ConnectionParameter';

/**
 * The ApiResourceProperties model module.
 * @module model/ApiResourceProperties
 * @version 2016-06-01
 */
class ApiResourceProperties {
    /**
     * Constructs a new <code>ApiResourceProperties</code>.
     * API resource properties
     * @alias module:model/ApiResourceProperties
     */
    constructor() { 
        
        ApiResourceProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ApiResourceProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ApiResourceProperties} obj Optional instance to populate.
     * @return {module:model/ApiResourceProperties} The populated <code>ApiResourceProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ApiResourceProperties();

            if (data.hasOwnProperty('apiDefinitionUrl')) {
                obj['apiDefinitionUrl'] = ApiClient.convertToType(data['apiDefinitionUrl'], 'String');
            }
            if (data.hasOwnProperty('apiDefinitions')) {
                obj['apiDefinitions'] = ApiResourceDefinitions.constructFromObject(data['apiDefinitions']);
            }
            if (data.hasOwnProperty('backendService')) {
                obj['backendService'] = ApiResourceBackendService.constructFromObject(data['backendService']);
            }
            if (data.hasOwnProperty('capabilities')) {
                obj['capabilities'] = ApiClient.convertToType(data['capabilities'], ['String']);
            }
            if (data.hasOwnProperty('connectionParameters')) {
                obj['connectionParameters'] = ApiClient.convertToType(data['connectionParameters'], {'String': ConnectionParameter});
            }
            if (data.hasOwnProperty('generalInformation')) {
                obj['generalInformation'] = ApiResourceGeneralInformation.constructFromObject(data['generalInformation']);
            }
            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = ApiResourceMetadata.constructFromObject(data['metadata']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('policies')) {
                obj['policies'] = ApiResourcePolicies.constructFromObject(data['policies']);
            }
            if (data.hasOwnProperty('runtimeUrls')) {
                obj['runtimeUrls'] = ApiClient.convertToType(data['runtimeUrls'], ['String']);
            }
            if (data.hasOwnProperty('swagger')) {
                obj['swagger'] = ApiClient.convertToType(data['swagger'], Object);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ApiResourceProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ApiResourceProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['apiDefinitionUrl'] && !(typeof data['apiDefinitionUrl'] === 'string' || data['apiDefinitionUrl'] instanceof String)) {
            throw new Error("Expected the field `apiDefinitionUrl` to be a primitive type in the JSON string but got " + data['apiDefinitionUrl']);
        }
        // validate the optional field `apiDefinitions`
        if (data['apiDefinitions']) { // data not null
          ApiResourceDefinitions.validateJSON(data['apiDefinitions']);
        }
        // validate the optional field `backendService`
        if (data['backendService']) { // data not null
          ApiResourceBackendService.validateJSON(data['backendService']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['capabilities'])) {
            throw new Error("Expected the field `capabilities` to be an array in the JSON data but got " + data['capabilities']);
        }
        // validate the optional field `generalInformation`
        if (data['generalInformation']) { // data not null
          ApiResourceGeneralInformation.validateJSON(data['generalInformation']);
        }
        // validate the optional field `metadata`
        if (data['metadata']) { // data not null
          ApiResourceMetadata.validateJSON(data['metadata']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `policies`
        if (data['policies']) { // data not null
          ApiResourcePolicies.validateJSON(data['policies']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['runtimeUrls'])) {
            throw new Error("Expected the field `runtimeUrls` to be an array in the JSON data but got " + data['runtimeUrls']);
        }

        return true;
    }


}



/**
 * URL where the swagger can be downloaded from
 * @member {String} apiDefinitionUrl
 */
ApiResourceProperties.prototype['apiDefinitionUrl'] = undefined;

/**
 * @member {module:model/ApiResourceDefinitions} apiDefinitions
 */
ApiResourceProperties.prototype['apiDefinitions'] = undefined;

/**
 * @member {module:model/ApiResourceBackendService} backendService
 */
ApiResourceProperties.prototype['backendService'] = undefined;

/**
 * The managed API capabilities
 * @member {Array.<String>} capabilities
 */
ApiResourceProperties.prototype['capabilities'] = undefined;

/**
 * Connection parameters
 * @member {Object.<String, module:model/ConnectionParameter>} connectionParameters
 */
ApiResourceProperties.prototype['connectionParameters'] = undefined;

/**
 * @member {module:model/ApiResourceGeneralInformation} generalInformation
 */
ApiResourceProperties.prototype['generalInformation'] = undefined;

/**
 * @member {module:model/ApiResourceMetadata} metadata
 */
ApiResourceProperties.prototype['metadata'] = undefined;

/**
 * @member {String} name
 */
ApiResourceProperties.prototype['name'] = undefined;

/**
 * @member {module:model/ApiResourcePolicies} policies
 */
ApiResourceProperties.prototype['policies'] = undefined;

/**
 * Runtime URLs
 * @member {Array.<String>} runtimeUrls
 */
ApiResourceProperties.prototype['runtimeUrls'] = undefined;

/**
 * The JSON representation of the swagger
 * @member {Object} swagger
 */
ApiResourceProperties.prototype['swagger'] = undefined;






export default ApiResourceProperties;

