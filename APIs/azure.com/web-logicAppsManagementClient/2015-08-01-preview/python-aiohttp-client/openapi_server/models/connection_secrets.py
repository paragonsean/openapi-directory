# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ConnectionSecrets(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, connection_key: str=None, parameter_values: Dict[str, object]=None):
        """ConnectionSecrets - a model defined in OpenAPI

        :param connection_key: The connection_key of this ConnectionSecrets.
        :param parameter_values: The parameter_values of this ConnectionSecrets.
        """
        self.openapi_types = {
            'connection_key': str,
            'parameter_values': Dict[str, object]
        }

        self.attribute_map = {
            'connection_key': 'connectionKey',
            'parameter_values': 'parameterValues'
        }

        self._connection_key = connection_key
        self._parameter_values = parameter_values

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ConnectionSecrets':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ConnectionSecrets of this ConnectionSecrets.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def connection_key(self):
        """Gets the connection_key of this ConnectionSecrets.

        Connection Key

        :return: The connection_key of this ConnectionSecrets.
        :rtype: str
        """
        return self._connection_key

    @connection_key.setter
    def connection_key(self, connection_key):
        """Sets the connection_key of this ConnectionSecrets.

        Connection Key

        :param connection_key: The connection_key of this ConnectionSecrets.
        :type connection_key: str
        """

        self._connection_key = connection_key

    @property
    def parameter_values(self):
        """Gets the parameter_values of this ConnectionSecrets.

        Tokens/Claim

        :return: The parameter_values of this ConnectionSecrets.
        :rtype: Dict[str, object]
        """
        return self._parameter_values

    @parameter_values.setter
    def parameter_values(self, parameter_values):
        """Sets the parameter_values of this ConnectionSecrets.

        Tokens/Claim

        :param parameter_values: The parameter_values of this ConnectionSecrets.
        :type parameter_values: Dict[str, object]
        """

        self._parameter_values = parameter_values
