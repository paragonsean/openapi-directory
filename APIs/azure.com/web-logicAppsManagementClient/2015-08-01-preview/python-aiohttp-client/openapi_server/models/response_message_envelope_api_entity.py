# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.api_entity import ApiEntity
from openapi_server.models.arm_plan import ArmPlan
from openapi_server.models.sku_description import SkuDescription
from openapi_server import util


class ResponseMessageEnvelopeApiEntity(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, location: str=None, name: str=None, plan: ArmPlan=None, properties: ApiEntity=None, sku: SkuDescription=None, tags: Dict[str, str]=None, type: str=None):
        """ResponseMessageEnvelopeApiEntity - a model defined in OpenAPI

        :param id: The id of this ResponseMessageEnvelopeApiEntity.
        :param location: The location of this ResponseMessageEnvelopeApiEntity.
        :param name: The name of this ResponseMessageEnvelopeApiEntity.
        :param plan: The plan of this ResponseMessageEnvelopeApiEntity.
        :param properties: The properties of this ResponseMessageEnvelopeApiEntity.
        :param sku: The sku of this ResponseMessageEnvelopeApiEntity.
        :param tags: The tags of this ResponseMessageEnvelopeApiEntity.
        :param type: The type of this ResponseMessageEnvelopeApiEntity.
        """
        self.openapi_types = {
            'id': str,
            'location': str,
            'name': str,
            'plan': ArmPlan,
            'properties': ApiEntity,
            'sku': SkuDescription,
            'tags': Dict[str, str],
            'type': str
        }

        self.attribute_map = {
            'id': 'id',
            'location': 'location',
            'name': 'name',
            'plan': 'plan',
            'properties': 'properties',
            'sku': 'sku',
            'tags': 'tags',
            'type': 'type'
        }

        self._id = id
        self._location = location
        self._name = name
        self._plan = plan
        self._properties = properties
        self._sku = sku
        self._tags = tags
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ResponseMessageEnvelopeApiEntity':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ResponseMessageEnvelope[ApiEntity] of this ResponseMessageEnvelopeApiEntity.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this ResponseMessageEnvelopeApiEntity.

        Resource Id. Typically id is populated only for responses to GET requests. Caller is responsible for passing in this              value for GET requests only.              For example: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupId}/providers/Microsoft.Web/sites/{sitename}

        :return: The id of this ResponseMessageEnvelopeApiEntity.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ResponseMessageEnvelopeApiEntity.

        Resource Id. Typically id is populated only for responses to GET requests. Caller is responsible for passing in this              value for GET requests only.              For example: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupId}/providers/Microsoft.Web/sites/{sitename}

        :param id: The id of this ResponseMessageEnvelopeApiEntity.
        :type id: str
        """

        self._id = id

    @property
    def location(self):
        """Gets the location of this ResponseMessageEnvelopeApiEntity.

        Geo region resource belongs to e.g. SouthCentralUS, SouthEastAsia

        :return: The location of this ResponseMessageEnvelopeApiEntity.
        :rtype: str
        """
        return self._location

    @location.setter
    def location(self, location):
        """Sets the location of this ResponseMessageEnvelopeApiEntity.

        Geo region resource belongs to e.g. SouthCentralUS, SouthEastAsia

        :param location: The location of this ResponseMessageEnvelopeApiEntity.
        :type location: str
        """

        self._location = location

    @property
    def name(self):
        """Gets the name of this ResponseMessageEnvelopeApiEntity.

        Name of resource

        :return: The name of this ResponseMessageEnvelopeApiEntity.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ResponseMessageEnvelopeApiEntity.

        Name of resource

        :param name: The name of this ResponseMessageEnvelopeApiEntity.
        :type name: str
        """

        self._name = name

    @property
    def plan(self):
        """Gets the plan of this ResponseMessageEnvelopeApiEntity.


        :return: The plan of this ResponseMessageEnvelopeApiEntity.
        :rtype: ArmPlan
        """
        return self._plan

    @plan.setter
    def plan(self, plan):
        """Sets the plan of this ResponseMessageEnvelopeApiEntity.


        :param plan: The plan of this ResponseMessageEnvelopeApiEntity.
        :type plan: ArmPlan
        """

        self._plan = plan

    @property
    def properties(self):
        """Gets the properties of this ResponseMessageEnvelopeApiEntity.


        :return: The properties of this ResponseMessageEnvelopeApiEntity.
        :rtype: ApiEntity
        """
        return self._properties

    @properties.setter
    def properties(self, properties):
        """Sets the properties of this ResponseMessageEnvelopeApiEntity.


        :param properties: The properties of this ResponseMessageEnvelopeApiEntity.
        :type properties: ApiEntity
        """

        self._properties = properties

    @property
    def sku(self):
        """Gets the sku of this ResponseMessageEnvelopeApiEntity.


        :return: The sku of this ResponseMessageEnvelopeApiEntity.
        :rtype: SkuDescription
        """
        return self._sku

    @sku.setter
    def sku(self, sku):
        """Sets the sku of this ResponseMessageEnvelopeApiEntity.


        :param sku: The sku of this ResponseMessageEnvelopeApiEntity.
        :type sku: SkuDescription
        """

        self._sku = sku

    @property
    def tags(self):
        """Gets the tags of this ResponseMessageEnvelopeApiEntity.

        Tags associated with resource

        :return: The tags of this ResponseMessageEnvelopeApiEntity.
        :rtype: Dict[str, str]
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this ResponseMessageEnvelopeApiEntity.

        Tags associated with resource

        :param tags: The tags of this ResponseMessageEnvelopeApiEntity.
        :type tags: Dict[str, str]
        """

        self._tags = tags

    @property
    def type(self):
        """Gets the type of this ResponseMessageEnvelopeApiEntity.

        Type of resource e.g Microsoft.Web/sites

        :return: The type of this ResponseMessageEnvelopeApiEntity.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this ResponseMessageEnvelopeApiEntity.

        Type of resource e.g Microsoft.Web/sites

        :param type: The type of this ResponseMessageEnvelopeApiEntity.
        :type type: str
        """

        self._type = type
