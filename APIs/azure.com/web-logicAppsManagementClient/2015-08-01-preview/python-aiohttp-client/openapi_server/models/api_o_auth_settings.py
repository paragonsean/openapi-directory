# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.api_o_auth_settings_parameter import ApiOAuthSettingsParameter
from openapi_server import util


class ApiOAuthSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, client_id: str=None, client_secret: str=None, custom_parameters: Dict[str, ApiOAuthSettingsParameter]=None, identity_provider: str=None, properties: object=None, redirect_url: str=None, scopes: List[str]=None):
        """ApiOAuthSettings - a model defined in OpenAPI

        :param client_id: The client_id of this ApiOAuthSettings.
        :param client_secret: The client_secret of this ApiOAuthSettings.
        :param custom_parameters: The custom_parameters of this ApiOAuthSettings.
        :param identity_provider: The identity_provider of this ApiOAuthSettings.
        :param properties: The properties of this ApiOAuthSettings.
        :param redirect_url: The redirect_url of this ApiOAuthSettings.
        :param scopes: The scopes of this ApiOAuthSettings.
        """
        self.openapi_types = {
            'client_id': str,
            'client_secret': str,
            'custom_parameters': Dict[str, ApiOAuthSettingsParameter],
            'identity_provider': str,
            'properties': object,
            'redirect_url': str,
            'scopes': List[str]
        }

        self.attribute_map = {
            'client_id': 'clientId',
            'client_secret': 'clientSecret',
            'custom_parameters': 'customParameters',
            'identity_provider': 'identityProvider',
            'properties': 'properties',
            'redirect_url': 'redirectUrl',
            'scopes': 'scopes'
        }

        self._client_id = client_id
        self._client_secret = client_secret
        self._custom_parameters = custom_parameters
        self._identity_provider = identity_provider
        self._properties = properties
        self._redirect_url = redirect_url
        self._scopes = scopes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApiOAuthSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ApiOAuthSettings of this ApiOAuthSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def client_id(self):
        """Gets the client_id of this ApiOAuthSettings.

        Resource provider client id

        :return: The client_id of this ApiOAuthSettings.
        :rtype: str
        """
        return self._client_id

    @client_id.setter
    def client_id(self, client_id):
        """Sets the client_id of this ApiOAuthSettings.

        Resource provider client id

        :param client_id: The client_id of this ApiOAuthSettings.
        :type client_id: str
        """

        self._client_id = client_id

    @property
    def client_secret(self):
        """Gets the client_secret of this ApiOAuthSettings.

        Client Secret needed for OAuth

        :return: The client_secret of this ApiOAuthSettings.
        :rtype: str
        """
        return self._client_secret

    @client_secret.setter
    def client_secret(self, client_secret):
        """Sets the client_secret of this ApiOAuthSettings.

        Client Secret needed for OAuth

        :param client_secret: The client_secret of this ApiOAuthSettings.
        :type client_secret: str
        """

        self._client_secret = client_secret

    @property
    def custom_parameters(self):
        """Gets the custom_parameters of this ApiOAuthSettings.

        OAuth parameters key is the name of parameter

        :return: The custom_parameters of this ApiOAuthSettings.
        :rtype: Dict[str, ApiOAuthSettingsParameter]
        """
        return self._custom_parameters

    @custom_parameters.setter
    def custom_parameters(self, custom_parameters):
        """Sets the custom_parameters of this ApiOAuthSettings.

        OAuth parameters key is the name of parameter

        :param custom_parameters: The custom_parameters of this ApiOAuthSettings.
        :type custom_parameters: Dict[str, ApiOAuthSettingsParameter]
        """

        self._custom_parameters = custom_parameters

    @property
    def identity_provider(self):
        """Gets the identity_provider of this ApiOAuthSettings.

        Identity provider

        :return: The identity_provider of this ApiOAuthSettings.
        :rtype: str
        """
        return self._identity_provider

    @identity_provider.setter
    def identity_provider(self, identity_provider):
        """Sets the identity_provider of this ApiOAuthSettings.

        Identity provider

        :param identity_provider: The identity_provider of this ApiOAuthSettings.
        :type identity_provider: str
        """

        self._identity_provider = identity_provider

    @property
    def properties(self):
        """Gets the properties of this ApiOAuthSettings.


        :return: The properties of this ApiOAuthSettings.
        :rtype: object
        """
        return self._properties

    @properties.setter
    def properties(self, properties):
        """Sets the properties of this ApiOAuthSettings.


        :param properties: The properties of this ApiOAuthSettings.
        :type properties: object
        """

        self._properties = properties

    @property
    def redirect_url(self):
        """Gets the redirect_url of this ApiOAuthSettings.

        Url

        :return: The redirect_url of this ApiOAuthSettings.
        :rtype: str
        """
        return self._redirect_url

    @redirect_url.setter
    def redirect_url(self, redirect_url):
        """Sets the redirect_url of this ApiOAuthSettings.

        Url

        :param redirect_url: The redirect_url of this ApiOAuthSettings.
        :type redirect_url: str
        """

        self._redirect_url = redirect_url

    @property
    def scopes(self):
        """Gets the scopes of this ApiOAuthSettings.

        OAuth scopes

        :return: The scopes of this ApiOAuthSettings.
        :rtype: List[str]
        """
        return self._scopes

    @scopes.setter
    def scopes(self, scopes):
        """Sets the scopes of this ApiOAuthSettings.

        OAuth scopes

        :param scopes: The scopes of this ApiOAuthSettings.
        :type scopes: List[str]
        """

        self._scopes = scopes
