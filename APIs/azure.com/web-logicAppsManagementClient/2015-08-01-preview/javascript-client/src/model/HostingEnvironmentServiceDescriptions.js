/**
 * LogicAppsManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2015-08-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The HostingEnvironmentServiceDescriptions model module.
 * @module model/HostingEnvironmentServiceDescriptions
 * @version 2015-08-01-preview
 */
class HostingEnvironmentServiceDescriptions {
    /**
     * Constructs a new <code>HostingEnvironmentServiceDescriptions</code>.
     * Back end service per ASE
     * @alias module:model/HostingEnvironmentServiceDescriptions
     */
    constructor() { 
        
        HostingEnvironmentServiceDescriptions.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>HostingEnvironmentServiceDescriptions</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/HostingEnvironmentServiceDescriptions} obj Optional instance to populate.
     * @return {module:model/HostingEnvironmentServiceDescriptions} The populated <code>HostingEnvironmentServiceDescriptions</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new HostingEnvironmentServiceDescriptions();

            if (data.hasOwnProperty('hostId')) {
                obj['hostId'] = ApiClient.convertToType(data['hostId'], 'String');
            }
            if (data.hasOwnProperty('hostingEnvironmentId')) {
                obj['hostingEnvironmentId'] = ApiClient.convertToType(data['hostingEnvironmentId'], 'String');
            }
            if (data.hasOwnProperty('serviceUrl')) {
                obj['serviceUrl'] = ApiClient.convertToType(data['serviceUrl'], 'String');
            }
            if (data.hasOwnProperty('useInternalRouting')) {
                obj['useInternalRouting'] = ApiClient.convertToType(data['useInternalRouting'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>HostingEnvironmentServiceDescriptions</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>HostingEnvironmentServiceDescriptions</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['hostId'] && !(typeof data['hostId'] === 'string' || data['hostId'] instanceof String)) {
            throw new Error("Expected the field `hostId` to be a primitive type in the JSON string but got " + data['hostId']);
        }
        // ensure the json data is a string
        if (data['hostingEnvironmentId'] && !(typeof data['hostingEnvironmentId'] === 'string' || data['hostingEnvironmentId'] instanceof String)) {
            throw new Error("Expected the field `hostingEnvironmentId` to be a primitive type in the JSON string but got " + data['hostingEnvironmentId']);
        }
        // ensure the json data is a string
        if (data['serviceUrl'] && !(typeof data['serviceUrl'] === 'string' || data['serviceUrl'] instanceof String)) {
            throw new Error("Expected the field `serviceUrl` to be a primitive type in the JSON string but got " + data['serviceUrl']);
        }

        return true;
    }


}



/**
 * Host Id
 * @member {String} hostId
 */
HostingEnvironmentServiceDescriptions.prototype['hostId'] = undefined;

/**
 * Hosting environment Id
 * @member {String} hostingEnvironmentId
 */
HostingEnvironmentServiceDescriptions.prototype['hostingEnvironmentId'] = undefined;

/**
 * service url to use
 * @member {String} serviceUrl
 */
HostingEnvironmentServiceDescriptions.prototype['serviceUrl'] = undefined;

/**
 * When the backend url is in same ASE, for performance reason this flag can be set to true              If WebApp.DisableHostNames is also set it improves the security by making the back end accessible only               via API calls              Note: calls will fail if this option is used but back end is not on the same ASE
 * @member {Boolean} useInternalRouting
 */
HostingEnvironmentServiceDescriptions.prototype['useInternalRouting'] = undefined;






export default HostingEnvironmentServiceDescriptions;

