/**
 * LogicAppsManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2015-08-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ApiEntity from '../model/ApiEntity';
import ApisCollection from '../model/ApisCollection';

/**
* ManagedApis service.
* @module api/ManagedApisApi
* @version 2015-08-01-preview
*/
export default class ManagedApisApi {

    /**
    * Constructs a new ManagedApisApi. 
    * @alias module:api/ManagedApisApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the managedApisGet operation.
     * @callback module:api/ManagedApisApi~managedApisGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApiEntity} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get managed API
     * Gets a managed API.
     * @param {String} location The location.
     * @param {String} apiName The managed API name.
     * @param {String} subscriptionId Subscription Id
     * @param {String} apiVersion API Version
     * @param {Object} opts Optional parameters
     * @param {Boolean} [_export] flag showing whether to export API definition in format specified by Accept header.
     * @param {module:api/ManagedApisApi~managedApisGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApiEntity}
     */
    managedApisGet(location, apiName, subscriptionId, apiVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'location' is set
      if (location === undefined || location === null) {
        throw new Error("Missing the required parameter 'location' when calling managedApisGet");
      }
      // verify the required parameter 'apiName' is set
      if (apiName === undefined || apiName === null) {
        throw new Error("Missing the required parameter 'apiName' when calling managedApisGet");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling managedApisGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling managedApisGet");
      }

      let pathParams = {
        'location': location,
        'apiName': apiName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'export': opts['_export'],
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json'];
      let returnType = ApiEntity;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.Web/locations/{location}/managedApis/{apiName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the managedApisList operation.
     * @callback module:api/ManagedApisApi~managedApisListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApisCollection} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List managed Apis
     * Gets a list of managed APIs.
     * @param {String} location The location.
     * @param {String} subscriptionId Subscription Id
     * @param {String} apiVersion API Version
     * @param {module:api/ManagedApisApi~managedApisListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApisCollection}
     */
    managedApisList(location, subscriptionId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'location' is set
      if (location === undefined || location === null) {
        throw new Error("Missing the required parameter 'location' when calling managedApisList");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling managedApisList");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling managedApisList");
      }

      let pathParams = {
        'location': location,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json'];
      let returnType = ApisCollection;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.Web/locations/{location}/managedApis', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
