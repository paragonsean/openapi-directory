/**
 * LogicAppsManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2015-08-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIArmPlan.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIArmPlan::OAIArmPlan(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIArmPlan::OAIArmPlan() {
    this->initializeModel();
}

OAIArmPlan::~OAIArmPlan() {}

void OAIArmPlan::initializeModel() {

    m_name_isSet = false;
    m_name_isValid = false;

    m_product_isSet = false;
    m_product_isValid = false;

    m_promotion_code_isSet = false;
    m_promotion_code_isValid = false;

    m_publisher_isSet = false;
    m_publisher_isValid = false;

    m_version_isSet = false;
    m_version_isValid = false;
}

void OAIArmPlan::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIArmPlan::fromJsonObject(QJsonObject json) {

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_product_isValid = ::OpenAPI::fromJsonValue(m_product, json[QString("product")]);
    m_product_isSet = !json[QString("product")].isNull() && m_product_isValid;

    m_promotion_code_isValid = ::OpenAPI::fromJsonValue(m_promotion_code, json[QString("promotionCode")]);
    m_promotion_code_isSet = !json[QString("promotionCode")].isNull() && m_promotion_code_isValid;

    m_publisher_isValid = ::OpenAPI::fromJsonValue(m_publisher, json[QString("publisher")]);
    m_publisher_isSet = !json[QString("publisher")].isNull() && m_publisher_isValid;

    m_version_isValid = ::OpenAPI::fromJsonValue(m_version, json[QString("version")]);
    m_version_isSet = !json[QString("version")].isNull() && m_version_isValid;
}

QString OAIArmPlan::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIArmPlan::asJsonObject() const {
    QJsonObject obj;
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_product_isSet) {
        obj.insert(QString("product"), ::OpenAPI::toJsonValue(m_product));
    }
    if (m_promotion_code_isSet) {
        obj.insert(QString("promotionCode"), ::OpenAPI::toJsonValue(m_promotion_code));
    }
    if (m_publisher_isSet) {
        obj.insert(QString("publisher"), ::OpenAPI::toJsonValue(m_publisher));
    }
    if (m_version_isSet) {
        obj.insert(QString("version"), ::OpenAPI::toJsonValue(m_version));
    }
    return obj;
}

QString OAIArmPlan::getName() const {
    return m_name;
}
void OAIArmPlan::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIArmPlan::is_name_Set() const{
    return m_name_isSet;
}

bool OAIArmPlan::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIArmPlan::getProduct() const {
    return m_product;
}
void OAIArmPlan::setProduct(const QString &product) {
    m_product = product;
    m_product_isSet = true;
}

bool OAIArmPlan::is_product_Set() const{
    return m_product_isSet;
}

bool OAIArmPlan::is_product_Valid() const{
    return m_product_isValid;
}

QString OAIArmPlan::getPromotionCode() const {
    return m_promotion_code;
}
void OAIArmPlan::setPromotionCode(const QString &promotion_code) {
    m_promotion_code = promotion_code;
    m_promotion_code_isSet = true;
}

bool OAIArmPlan::is_promotion_code_Set() const{
    return m_promotion_code_isSet;
}

bool OAIArmPlan::is_promotion_code_Valid() const{
    return m_promotion_code_isValid;
}

QString OAIArmPlan::getPublisher() const {
    return m_publisher;
}
void OAIArmPlan::setPublisher(const QString &publisher) {
    m_publisher = publisher;
    m_publisher_isSet = true;
}

bool OAIArmPlan::is_publisher_Set() const{
    return m_publisher_isSet;
}

bool OAIArmPlan::is_publisher_Valid() const{
    return m_publisher_isValid;
}

QString OAIArmPlan::getVersion() const {
    return m_version;
}
void OAIArmPlan::setVersion(const QString &version) {
    m_version = version;
    m_version_isSet = true;
}

bool OAIArmPlan::is_version_Set() const{
    return m_version_isSet;
}

bool OAIArmPlan::is_version_Valid() const{
    return m_version_isValid;
}

bool OAIArmPlan::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_product_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_promotion_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_publisher_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_version_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIArmPlan::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
