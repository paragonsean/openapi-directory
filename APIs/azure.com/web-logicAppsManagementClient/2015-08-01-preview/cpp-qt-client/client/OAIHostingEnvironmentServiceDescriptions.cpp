/**
 * LogicAppsManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2015-08-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIHostingEnvironmentServiceDescriptions.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIHostingEnvironmentServiceDescriptions::OAIHostingEnvironmentServiceDescriptions(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIHostingEnvironmentServiceDescriptions::OAIHostingEnvironmentServiceDescriptions() {
    this->initializeModel();
}

OAIHostingEnvironmentServiceDescriptions::~OAIHostingEnvironmentServiceDescriptions() {}

void OAIHostingEnvironmentServiceDescriptions::initializeModel() {

    m_host_id_isSet = false;
    m_host_id_isValid = false;

    m_hosting_environment_id_isSet = false;
    m_hosting_environment_id_isValid = false;

    m_service_url_isSet = false;
    m_service_url_isValid = false;

    m_use_internal_routing_isSet = false;
    m_use_internal_routing_isValid = false;
}

void OAIHostingEnvironmentServiceDescriptions::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIHostingEnvironmentServiceDescriptions::fromJsonObject(QJsonObject json) {

    m_host_id_isValid = ::OpenAPI::fromJsonValue(m_host_id, json[QString("hostId")]);
    m_host_id_isSet = !json[QString("hostId")].isNull() && m_host_id_isValid;

    m_hosting_environment_id_isValid = ::OpenAPI::fromJsonValue(m_hosting_environment_id, json[QString("hostingEnvironmentId")]);
    m_hosting_environment_id_isSet = !json[QString("hostingEnvironmentId")].isNull() && m_hosting_environment_id_isValid;

    m_service_url_isValid = ::OpenAPI::fromJsonValue(m_service_url, json[QString("serviceUrl")]);
    m_service_url_isSet = !json[QString("serviceUrl")].isNull() && m_service_url_isValid;

    m_use_internal_routing_isValid = ::OpenAPI::fromJsonValue(m_use_internal_routing, json[QString("useInternalRouting")]);
    m_use_internal_routing_isSet = !json[QString("useInternalRouting")].isNull() && m_use_internal_routing_isValid;
}

QString OAIHostingEnvironmentServiceDescriptions::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIHostingEnvironmentServiceDescriptions::asJsonObject() const {
    QJsonObject obj;
    if (m_host_id_isSet) {
        obj.insert(QString("hostId"), ::OpenAPI::toJsonValue(m_host_id));
    }
    if (m_hosting_environment_id_isSet) {
        obj.insert(QString("hostingEnvironmentId"), ::OpenAPI::toJsonValue(m_hosting_environment_id));
    }
    if (m_service_url_isSet) {
        obj.insert(QString("serviceUrl"), ::OpenAPI::toJsonValue(m_service_url));
    }
    if (m_use_internal_routing_isSet) {
        obj.insert(QString("useInternalRouting"), ::OpenAPI::toJsonValue(m_use_internal_routing));
    }
    return obj;
}

QString OAIHostingEnvironmentServiceDescriptions::getHostId() const {
    return m_host_id;
}
void OAIHostingEnvironmentServiceDescriptions::setHostId(const QString &host_id) {
    m_host_id = host_id;
    m_host_id_isSet = true;
}

bool OAIHostingEnvironmentServiceDescriptions::is_host_id_Set() const{
    return m_host_id_isSet;
}

bool OAIHostingEnvironmentServiceDescriptions::is_host_id_Valid() const{
    return m_host_id_isValid;
}

QString OAIHostingEnvironmentServiceDescriptions::getHostingEnvironmentId() const {
    return m_hosting_environment_id;
}
void OAIHostingEnvironmentServiceDescriptions::setHostingEnvironmentId(const QString &hosting_environment_id) {
    m_hosting_environment_id = hosting_environment_id;
    m_hosting_environment_id_isSet = true;
}

bool OAIHostingEnvironmentServiceDescriptions::is_hosting_environment_id_Set() const{
    return m_hosting_environment_id_isSet;
}

bool OAIHostingEnvironmentServiceDescriptions::is_hosting_environment_id_Valid() const{
    return m_hosting_environment_id_isValid;
}

QString OAIHostingEnvironmentServiceDescriptions::getServiceUrl() const {
    return m_service_url;
}
void OAIHostingEnvironmentServiceDescriptions::setServiceUrl(const QString &service_url) {
    m_service_url = service_url;
    m_service_url_isSet = true;
}

bool OAIHostingEnvironmentServiceDescriptions::is_service_url_Set() const{
    return m_service_url_isSet;
}

bool OAIHostingEnvironmentServiceDescriptions::is_service_url_Valid() const{
    return m_service_url_isValid;
}

bool OAIHostingEnvironmentServiceDescriptions::isUseInternalRouting() const {
    return m_use_internal_routing;
}
void OAIHostingEnvironmentServiceDescriptions::setUseInternalRouting(const bool &use_internal_routing) {
    m_use_internal_routing = use_internal_routing;
    m_use_internal_routing_isSet = true;
}

bool OAIHostingEnvironmentServiceDescriptions::is_use_internal_routing_Set() const{
    return m_use_internal_routing_isSet;
}

bool OAIHostingEnvironmentServiceDescriptions::is_use_internal_routing_Valid() const{
    return m_use_internal_routing_isValid;
}

bool OAIHostingEnvironmentServiceDescriptions::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_host_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_hosting_environment_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_service_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_use_internal_routing_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIHostingEnvironmentServiceDescriptions::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
