/**
 * LogicAppsManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2015-08-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISkuDescription.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISkuDescription::OAISkuDescription(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISkuDescription::OAISkuDescription() {
    this->initializeModel();
}

OAISkuDescription::~OAISkuDescription() {}

void OAISkuDescription::initializeModel() {

    m_capacity_isSet = false;
    m_capacity_isValid = false;

    m_family_isSet = false;
    m_family_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_size_isSet = false;
    m_size_isValid = false;

    m_tier_isSet = false;
    m_tier_isValid = false;
}

void OAISkuDescription::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISkuDescription::fromJsonObject(QJsonObject json) {

    m_capacity_isValid = ::OpenAPI::fromJsonValue(m_capacity, json[QString("capacity")]);
    m_capacity_isSet = !json[QString("capacity")].isNull() && m_capacity_isValid;

    m_family_isValid = ::OpenAPI::fromJsonValue(m_family, json[QString("family")]);
    m_family_isSet = !json[QString("family")].isNull() && m_family_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_size_isValid = ::OpenAPI::fromJsonValue(m_size, json[QString("size")]);
    m_size_isSet = !json[QString("size")].isNull() && m_size_isValid;

    m_tier_isValid = ::OpenAPI::fromJsonValue(m_tier, json[QString("tier")]);
    m_tier_isSet = !json[QString("tier")].isNull() && m_tier_isValid;
}

QString OAISkuDescription::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISkuDescription::asJsonObject() const {
    QJsonObject obj;
    if (m_capacity_isSet) {
        obj.insert(QString("capacity"), ::OpenAPI::toJsonValue(m_capacity));
    }
    if (m_family_isSet) {
        obj.insert(QString("family"), ::OpenAPI::toJsonValue(m_family));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_size_isSet) {
        obj.insert(QString("size"), ::OpenAPI::toJsonValue(m_size));
    }
    if (m_tier_isSet) {
        obj.insert(QString("tier"), ::OpenAPI::toJsonValue(m_tier));
    }
    return obj;
}

qint32 OAISkuDescription::getCapacity() const {
    return m_capacity;
}
void OAISkuDescription::setCapacity(const qint32 &capacity) {
    m_capacity = capacity;
    m_capacity_isSet = true;
}

bool OAISkuDescription::is_capacity_Set() const{
    return m_capacity_isSet;
}

bool OAISkuDescription::is_capacity_Valid() const{
    return m_capacity_isValid;
}

QString OAISkuDescription::getFamily() const {
    return m_family;
}
void OAISkuDescription::setFamily(const QString &family) {
    m_family = family;
    m_family_isSet = true;
}

bool OAISkuDescription::is_family_Set() const{
    return m_family_isSet;
}

bool OAISkuDescription::is_family_Valid() const{
    return m_family_isValid;
}

QString OAISkuDescription::getName() const {
    return m_name;
}
void OAISkuDescription::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAISkuDescription::is_name_Set() const{
    return m_name_isSet;
}

bool OAISkuDescription::is_name_Valid() const{
    return m_name_isValid;
}

QString OAISkuDescription::getSize() const {
    return m_size;
}
void OAISkuDescription::setSize(const QString &size) {
    m_size = size;
    m_size_isSet = true;
}

bool OAISkuDescription::is_size_Set() const{
    return m_size_isSet;
}

bool OAISkuDescription::is_size_Valid() const{
    return m_size_isValid;
}

QString OAISkuDescription::getTier() const {
    return m_tier;
}
void OAISkuDescription::setTier(const QString &tier) {
    m_tier = tier;
    m_tier_isSet = true;
}

bool OAISkuDescription::is_tier_Set() const{
    return m_tier_isSet;
}

bool OAISkuDescription::is_tier_Valid() const{
    return m_tier_isValid;
}

bool OAISkuDescription::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_capacity_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_family_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_size_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tier_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISkuDescription::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
