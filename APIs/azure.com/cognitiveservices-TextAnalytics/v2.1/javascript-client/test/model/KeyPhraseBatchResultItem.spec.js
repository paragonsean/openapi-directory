/**
 * Text Analytics Client
 * The Text Analytics API is a suite of text analytics web services built with best-in-class Microsoft machine learning algorithms. The API can be used to analyze unstructured text for tasks such as sentiment analysis, key phrase extraction and language detection. No training data is needed to use this API; just bring your text data. This API uses advanced natural language processing techniques to deliver best in class predictions. Further documentation can be found in https://docs.microsoft.com/en-us/azure/cognitive-services/text-analytics/overview
 *
 * The version of the OpenAPI document: v2.1
 * Contact: mlapi@microsoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.TextAnalyticsClient);
  }
}(this, function(expect, TextAnalyticsClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new TextAnalyticsClient.KeyPhraseBatchResultItem();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('KeyPhraseBatchResultItem', function() {
    it('should create an instance of KeyPhraseBatchResultItem', function() {
      // uncomment below and update the code to test KeyPhraseBatchResultItem
      //var instance = new TextAnalyticsClient.KeyPhraseBatchResultItem();
      //expect(instance).to.be.a(TextAnalyticsClient.KeyPhraseBatchResultItem);
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new TextAnalyticsClient.KeyPhraseBatchResultItem();
      //expect(instance).to.be();
    });

    it('should have the property keyPhrases (base name: "keyPhrases")', function() {
      // uncomment below and update the code to test the property keyPhrases
      //var instance = new TextAnalyticsClient.KeyPhraseBatchResultItem();
      //expect(instance).to.be();
    });

    it('should have the property statistics (base name: "statistics")', function() {
      // uncomment below and update the code to test the property statistics
      //var instance = new TextAnalyticsClient.KeyPhraseBatchResultItem();
      //expect(instance).to.be();
    });

  });

}));
