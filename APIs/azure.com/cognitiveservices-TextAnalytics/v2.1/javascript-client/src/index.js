/**
 * Text Analytics Client
 * The Text Analytics API is a suite of text analytics web services built with best-in-class Microsoft machine learning algorithms. The API can be used to analyze unstructured text for tasks such as sentiment analysis, key phrase extraction and language detection. No training data is needed to use this API; just bring your text data. This API uses advanced natural language processing techniques to deliver best in class predictions. Further documentation can be found in https://docs.microsoft.com/en-us/azure/cognitive-services/text-analytics/overview
 *
 * The version of the OpenAPI document: v2.1
 * Contact: mlapi@microsoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import DetectedLanguage from './model/DetectedLanguage';
import DocumentStatistics from './model/DocumentStatistics';
import EntitiesBatchResult from './model/EntitiesBatchResult';
import EntitiesBatchResultItem from './model/EntitiesBatchResultItem';
import EntityRecord from './model/EntityRecord';
import ErrorRecord from './model/ErrorRecord';
import ErrorResponse from './model/ErrorResponse';
import InternalError from './model/InternalError';
import KeyPhraseBatchResult from './model/KeyPhraseBatchResult';
import KeyPhraseBatchResultItem from './model/KeyPhraseBatchResultItem';
import LanguageBatchInput from './model/LanguageBatchInput';
import LanguageBatchResult from './model/LanguageBatchResult';
import LanguageBatchResultItem from './model/LanguageBatchResultItem';
import LanguageInput from './model/LanguageInput';
import MatchRecord from './model/MatchRecord';
import MultiLanguageBatchInput from './model/MultiLanguageBatchInput';
import MultiLanguageInput from './model/MultiLanguageInput';
import RequestStatistics from './model/RequestStatistics';
import SentimentBatchResult from './model/SentimentBatchResult';
import SentimentBatchResultItem from './model/SentimentBatchResultItem';
import DetectLanguageApi from './api/DetectLanguageApi';
import EntitiesApi from './api/EntitiesApi';
import KeyPhrasesApi from './api/KeyPhrasesApi';
import SentimentApi from './api/SentimentApi';


/**
* The Text Analytics API is a suite of text analytics web services built with best-in-class Microsoft machine learning algorithms. The API can be used to analyze unstructured text for tasks such as sentiment analysis, key phrase extraction and language detection. No training data is needed to use this API; just bring your text data. This API uses advanced natural language processing techniques to deliver best in class predictions. Further documentation can be found in https://docs.microsoft.com/en-us/azure/cognitive-services/text-analytics/overview.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var TextAnalyticsClient = require('index'); // See note below*.
* var xxxSvc = new TextAnalyticsClient.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new TextAnalyticsClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new TextAnalyticsClient.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new TextAnalyticsClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version v2.1
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The DetectedLanguage model constructor.
     * @property {module:model/DetectedLanguage}
     */
    DetectedLanguage,

    /**
     * The DocumentStatistics model constructor.
     * @property {module:model/DocumentStatistics}
     */
    DocumentStatistics,

    /**
     * The EntitiesBatchResult model constructor.
     * @property {module:model/EntitiesBatchResult}
     */
    EntitiesBatchResult,

    /**
     * The EntitiesBatchResultItem model constructor.
     * @property {module:model/EntitiesBatchResultItem}
     */
    EntitiesBatchResultItem,

    /**
     * The EntityRecord model constructor.
     * @property {module:model/EntityRecord}
     */
    EntityRecord,

    /**
     * The ErrorRecord model constructor.
     * @property {module:model/ErrorRecord}
     */
    ErrorRecord,

    /**
     * The ErrorResponse model constructor.
     * @property {module:model/ErrorResponse}
     */
    ErrorResponse,

    /**
     * The InternalError model constructor.
     * @property {module:model/InternalError}
     */
    InternalError,

    /**
     * The KeyPhraseBatchResult model constructor.
     * @property {module:model/KeyPhraseBatchResult}
     */
    KeyPhraseBatchResult,

    /**
     * The KeyPhraseBatchResultItem model constructor.
     * @property {module:model/KeyPhraseBatchResultItem}
     */
    KeyPhraseBatchResultItem,

    /**
     * The LanguageBatchInput model constructor.
     * @property {module:model/LanguageBatchInput}
     */
    LanguageBatchInput,

    /**
     * The LanguageBatchResult model constructor.
     * @property {module:model/LanguageBatchResult}
     */
    LanguageBatchResult,

    /**
     * The LanguageBatchResultItem model constructor.
     * @property {module:model/LanguageBatchResultItem}
     */
    LanguageBatchResultItem,

    /**
     * The LanguageInput model constructor.
     * @property {module:model/LanguageInput}
     */
    LanguageInput,

    /**
     * The MatchRecord model constructor.
     * @property {module:model/MatchRecord}
     */
    MatchRecord,

    /**
     * The MultiLanguageBatchInput model constructor.
     * @property {module:model/MultiLanguageBatchInput}
     */
    MultiLanguageBatchInput,

    /**
     * The MultiLanguageInput model constructor.
     * @property {module:model/MultiLanguageInput}
     */
    MultiLanguageInput,

    /**
     * The RequestStatistics model constructor.
     * @property {module:model/RequestStatistics}
     */
    RequestStatistics,

    /**
     * The SentimentBatchResult model constructor.
     * @property {module:model/SentimentBatchResult}
     */
    SentimentBatchResult,

    /**
     * The SentimentBatchResultItem model constructor.
     * @property {module:model/SentimentBatchResultItem}
     */
    SentimentBatchResultItem,

    /**
    * The DetectLanguageApi service constructor.
    * @property {module:api/DetectLanguageApi}
    */
    DetectLanguageApi,

    /**
    * The EntitiesApi service constructor.
    * @property {module:api/EntitiesApi}
    */
    EntitiesApi,

    /**
    * The KeyPhrasesApi service constructor.
    * @property {module:api/KeyPhrasesApi}
    */
    KeyPhrasesApi,

    /**
    * The SentimentApi service constructor.
    * @property {module:api/SentimentApi}
    */
    SentimentApi
};
