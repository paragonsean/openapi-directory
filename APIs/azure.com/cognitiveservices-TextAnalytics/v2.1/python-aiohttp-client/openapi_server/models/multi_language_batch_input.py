# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.multi_language_input import MultiLanguageInput
from openapi_server import util


class MultiLanguageBatchInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, documents: List[MultiLanguageInput]=None):
        """MultiLanguageBatchInput - a model defined in OpenAPI

        :param documents: The documents of this MultiLanguageBatchInput.
        """
        self.openapi_types = {
            'documents': List[MultiLanguageInput]
        }

        self.attribute_map = {
            'documents': 'documents'
        }

        self._documents = documents

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MultiLanguageBatchInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MultiLanguageBatchInput of this MultiLanguageBatchInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def documents(self):
        """Gets the documents of this MultiLanguageBatchInput.


        :return: The documents of this MultiLanguageBatchInput.
        :rtype: List[MultiLanguageInput]
        """
        return self._documents

    @documents.setter
    def documents(self, documents):
        """Sets the documents of this MultiLanguageBatchInput.


        :param documents: The documents of this MultiLanguageBatchInput.
        :type documents: List[MultiLanguageInput]
        """

        self._documents = documents
