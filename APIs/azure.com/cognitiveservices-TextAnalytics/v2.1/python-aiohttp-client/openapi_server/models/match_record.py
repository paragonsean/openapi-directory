# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MatchRecord(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, entity_type_score: float=None, length: int=None, offset: int=None, text: str=None, wikipedia_score: float=None):
        """MatchRecord - a model defined in OpenAPI

        :param entity_type_score: The entity_type_score of this MatchRecord.
        :param length: The length of this MatchRecord.
        :param offset: The offset of this MatchRecord.
        :param text: The text of this MatchRecord.
        :param wikipedia_score: The wikipedia_score of this MatchRecord.
        """
        self.openapi_types = {
            'entity_type_score': float,
            'length': int,
            'offset': int,
            'text': str,
            'wikipedia_score': float
        }

        self.attribute_map = {
            'entity_type_score': 'entityTypeScore',
            'length': 'length',
            'offset': 'offset',
            'text': 'text',
            'wikipedia_score': 'wikipediaScore'
        }

        self._entity_type_score = entity_type_score
        self._length = length
        self._offset = offset
        self._text = text
        self._wikipedia_score = wikipedia_score

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MatchRecord':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MatchRecord of this MatchRecord.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def entity_type_score(self):
        """Gets the entity_type_score of this MatchRecord.

        (optional) If an entity type is recognized, a decimal number denoting the confidence level of the entity type will be returned.

        :return: The entity_type_score of this MatchRecord.
        :rtype: float
        """
        return self._entity_type_score

    @entity_type_score.setter
    def entity_type_score(self, entity_type_score):
        """Sets the entity_type_score of this MatchRecord.

        (optional) If an entity type is recognized, a decimal number denoting the confidence level of the entity type will be returned.

        :param entity_type_score: The entity_type_score of this MatchRecord.
        :type entity_type_score: float
        """

        self._entity_type_score = entity_type_score

    @property
    def length(self):
        """Gets the length of this MatchRecord.

        Length (in Unicode characters) for the entity match text.

        :return: The length of this MatchRecord.
        :rtype: int
        """
        return self._length

    @length.setter
    def length(self, length):
        """Sets the length of this MatchRecord.

        Length (in Unicode characters) for the entity match text.

        :param length: The length of this MatchRecord.
        :type length: int
        """

        self._length = length

    @property
    def offset(self):
        """Gets the offset of this MatchRecord.

        Start position (in Unicode characters) for the entity match text.

        :return: The offset of this MatchRecord.
        :rtype: int
        """
        return self._offset

    @offset.setter
    def offset(self, offset):
        """Sets the offset of this MatchRecord.

        Start position (in Unicode characters) for the entity match text.

        :param offset: The offset of this MatchRecord.
        :type offset: int
        """

        self._offset = offset

    @property
    def text(self):
        """Gets the text of this MatchRecord.

        Entity text as appears in the request.

        :return: The text of this MatchRecord.
        :rtype: str
        """
        return self._text

    @text.setter
    def text(self, text):
        """Sets the text of this MatchRecord.

        Entity text as appears in the request.

        :param text: The text of this MatchRecord.
        :type text: str
        """

        self._text = text

    @property
    def wikipedia_score(self):
        """Gets the wikipedia_score of this MatchRecord.

        (optional) If a well-known item with Wikipedia link is recognized, a decimal number denoting the confidence level of the Wikipedia info will be returned.

        :return: The wikipedia_score of this MatchRecord.
        :rtype: float
        """
        return self._wikipedia_score

    @wikipedia_score.setter
    def wikipedia_score(self, wikipedia_score):
        """Sets the wikipedia_score of this MatchRecord.

        (optional) If a well-known item with Wikipedia link is recognized, a decimal number denoting the confidence level of the Wikipedia info will be returned.

        :param wikipedia_score: The wikipedia_score of this MatchRecord.
        :type wikipedia_score: float
        """

        self._wikipedia_score = wikipedia_score
