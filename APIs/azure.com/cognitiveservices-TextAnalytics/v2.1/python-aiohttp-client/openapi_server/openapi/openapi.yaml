openapi: 3.0.1
info:
  contact:
    email: mlapi@microsoft.com
    name: Microsoft Cognitive Services
    url: https://azure.microsoft.com/en-us/services/cognitive-services/text-analytics/
  description: "The Text Analytics API is a suite of text analytics web services built\
    \ with best-in-class Microsoft machine learning algorithms. The API can be used\
    \ to analyze unstructured text for tasks such as sentiment analysis, key phrase\
    \ extraction and language detection. No training data is needed to use this API;\
    \ just bring your text data. This API uses advanced natural language processing\
    \ techniques to deliver best in class predictions. Further documentation can be\
    \ found in https://docs.microsoft.com/en-us/azure/cognitive-services/text-analytics/overview"
  title: Text Analytics Client
  version: v2.1
  x-apisguru-categories:
  - cloud
  x-logo:
    url: https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png
  x-origin:
  - format: swagger
    url: https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/cognitiveservices/data-plane/TextAnalytics/stable/v2.1/TextAnalytics.json
    version: "2.0"
  x-preferred: false
  x-providerName: azure.com
  x-serviceName: cognitiveservices-TextAnalytics
  x-tags:
  - Azure
  - Microsoft
servers:
- url: https://azure.local/
security:
- apim_key: []
paths:
  /entities:
    post:
      deprecated: false
      description: To get even more information on each recognized entity we recommend
        using the Bing Entity Search API by querying for the recognized entities names.
        See the <a href="https://docs.microsoft.com/en-us/azure/cognitive-services/text-analytics/text-analytics-supported-languages">Supported
        languages in Text Analytics API</a> for the list of enabled languages.
      operationId: entities
      parameters:
      - description: "(optional) if set to true, response will contain input and document\
          \ level statistics."
        in: query
        name: showStats
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultiLanguageBatchInput'
          text/json:
            schema:
              $ref: '#/components/schemas/MultiLanguageBatchInput'
        description: Collection of documents to analyze.
        required: false
        x-body-name: multiLanguageBatchInput
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitiesBatchResult'
            text/json:
              schema:
                $ref: '#/components/schemas/EntitiesBatchResult'
          description: A successful call results in a list of recognized entities
            returned for each valid document
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response
      summary: The API returns a list of recognized entities in a given document.
      tags:
      - Entities
      x-ms-examples:
        Successful Detect Language request:
          parameters:
            Endpoint: "{Endpoint}"
            Ocp-Apim-Subscription-Key: "{API key}"
            input:
              documents:
              - id: "1"
                language: en
                text: Microsoft released Windows 10
              - id: "2"
                language: en
                text: "In 1975, Bill Gates III and Paul Allen founded the company."
          responses:
            "200":
              body:
                documents:
                - entities:
                  - bingId: a093e9b9-90f5-a3d5-c4b8-5855e1b01f85
                    matches:
                    - entityTypeScore: 0.9999961853027344
                      length: 9
                      offset: 0
                      text: Microsoft
                      wikipediaScore: 0.1250868224404751
                    name: Microsoft
                    type: Organization
                    wikipediaId: Microsoft
                    wikipediaLanguage: en
                    wikipediaUrl: https://en.wikipedia.org/wiki/Microsoft
                  - bingId: 5f9fbd03-49c4-39ef-cc95-de83ab897b94
                    matches:
                    - length: 10
                      offset: 19
                      text: Windows 10
                      wikipediaScore: 0.35750355694656766
                    name: Windows 10
                    wikipediaId: Windows 10
                    wikipediaLanguage: en
                    wikipediaUrl: https://en.wikipedia.org/wiki/Windows_10
                  id: "1"
                - entities:
                  - matches:
                    - entityTypeScore: 0.8
                      length: 4
                      offset: 3
                      text: "1975"
                    name: "1975"
                    subType: DateRange
                    type: DateTime
                  - bingId: 0d47c987-0042-5576-15e8-97af601614fa
                    matches:
                    - entityTypeScore: 0.9964206218719482
                      length: 14
                      offset: 9
                      text: Bill Gates III
                      wikipediaScore: 0.8440369740199343
                    name: Bill Gates
                    type: Person
                    wikipediaId: Bill Gates
                    wikipediaLanguage: en
                    wikipediaUrl: https://en.wikipedia.org/wiki/Bill_Gates
                  - bingId: df2c4376-9923-6a54-893f-2ee5a5badbc7
                    matches:
                    - entityTypeScore: 0.9966486692428589
                      length: 10
                      offset: 28
                      text: Paul Allen
                      wikipediaScore: 0.4187887932825358
                    name: Paul Allen
                    type: Person
                    wikipediaId: Paul Allen
                    wikipediaLanguage: en
                    wikipediaUrl: https://en.wikipedia.org/wiki/Paul_Allen
                  id: "2"
                errors: []
              headers: {}
      x-codegen-request-body-name: multiLanguageBatchInput
      x-openapi-router-controller: openapi_server.controllers.entities_controller
  /keyPhrases:
    post:
      deprecated: false
      description: See the <a href="https://docs.microsoft.com/en-us/azure/cognitive-services/text-analytics/overview#supported-languages">Text
        Analytics Documentation</a> for details about the languages that are supported
        by key phrase extraction.
      operationId: key_phrases
      parameters:
      - description: "(optional) if set to true, response will contain input and document\
          \ level statistics."
        in: query
        name: showStats
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultiLanguageBatchInput'
          text/json:
            schema:
              $ref: '#/components/schemas/MultiLanguageBatchInput'
        description: Collection of documents to analyze. Documents can now contain
          a language field to indicate the text language
        required: false
        x-body-name: multiLanguageBatchInput
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyPhraseBatchResult'
            text/json:
              schema:
                $ref: '#/components/schemas/KeyPhraseBatchResult'
          description: A successful response results in 0 or more key phrases identified
            in each valid document
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response
      summary: The API returns a list of strings denoting the key talking points in
        the input text.
      tags:
      - Key Phrases
      x-ms-examples:
        Successful Detect Language request:
          parameters:
            Endpoint: "{Endpoint}"
            Ocp-Apim-Subscription-Key: "{API key}"
            input:
              documents:
              - id: "1"
                language: en
                text: If this demo doesn't work I will be super sad
              - id: "2"
                language: es
                text: Español es muy difícil de aprender
              - id: "3"
                language: en
                text: I really really love machine learning
              - id: "4"
                language: fr
                text: Le soleil se lève à l'Est
          responses:
            "200":
              body:
                documents:
                - id: "1"
                  keyPhrases:
                  - demo
                - id: "2"
                  keyPhrases:
                  - Español
                - id: "3"
                  keyPhrases:
                  - machine
                - id: "4"
                  keyPhrases:
                  - soleil
                errors: []
              headers: {}
      x-codegen-request-body-name: multiLanguageBatchInput
      x-openapi-router-controller: openapi_server.controllers.key_phrases_controller
  /languages:
    post:
      deprecated: false
      description: Scores close to 1 indicate 100% certainty that the identified language
        is true. A total of 120 languages are supported.
      operationId: detect_language
      parameters:
      - description: "(optional) if set to true, response will contain input and document\
          \ level statistics."
        in: query
        name: showStats
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LanguageBatchInput'
          text/json:
            schema:
              $ref: '#/components/schemas/LanguageBatchInput'
        description: Collection of documents to analyze.
        required: false
        x-body-name: languageBatchInput
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LanguageBatchResult'
            text/json:
              schema:
                $ref: '#/components/schemas/LanguageBatchResult'
          description: A successful call results in the detected language with the
            highest probability for each valid document
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response
      summary: The API returns the detected language and a numeric score between 0
        and 1.
      tags:
      - Detect Language
      x-ms-examples:
        Successful Detect Language request:
          parameters:
            Endpoint: "{Endpoint}"
            Ocp-Apim-Subscription-Key: "{API key}"
            input:
              documents:
              - id: "1"
                text: If this demo doesn't work I will be super sad
              - id: "2"
                text: Español es muy difícil de aprender
              - id: "3"
                text: I really really love machine learning
              - id: "4"
                text: Le soleil se lève à l'Est
          responses:
            "200":
              body:
                documents:
                - detectedLanguages:
                  - iso6391Name: en
                    name: English
                    score: 1
                  id: "1"
                - detectedLanguages:
                  - iso6391Name: es
                    name: Spanish
                    score: 1
                  id: "2"
                - detectedLanguages:
                  - iso6391Name: en
                    name: English
                    score: 1
                  id: "3"
                - detectedLanguages:
                  - iso6391Name: fr
                    name: French
                    score: 1
                  id: "4"
                errors: []
              headers: {}
      x-codegen-request-body-name: languageBatchInput
      x-openapi-router-controller: openapi_server.controllers.detect_language_controller
  /sentiment:
    post:
      deprecated: false
      description: "Scores close to 1 indicate positive sentiment, while scores close\
        \ to 0 indicate negative sentiment. A score of 0.5 indicates the lack of sentiment\
        \ (e.g. a factoid statement). See the <a href=\"https://docs.microsoft.com/en-us/azure/cognitive-services/text-analytics/overview#supported-languages\"\
        >Text Analytics Documentation</a> for details about the languages that are\
        \ supported by sentiment analysis."
      operationId: sentiment
      parameters:
      - description: "(optional) if set to true, response will contain input and document\
          \ level statistics."
        in: query
        name: showStats
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultiLanguageBatchInput'
          text/json:
            schema:
              $ref: '#/components/schemas/MultiLanguageBatchInput'
        description: Collection of documents to analyze.
        required: false
        x-body-name: multiLanguageBatchInput
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SentimentBatchResult'
            text/json:
              schema:
                $ref: '#/components/schemas/SentimentBatchResult'
          description: A successful call results in each valid document getting a
            sentiment score between 0 and 1
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response
      summary: The API returns a numeric score between 0 and 1.
      tags:
      - Sentiment
      x-ms-examples:
        Successful Detect Language request:
          parameters:
            Endpoint: "{Endpoint}"
            Ocp-Apim-Subscription-Key: "{API key}"
            input:
              documents:
              - id: "1"
                language: en
                text: If this demo doesn't work I will be super sad
              - id: "2"
                language: es
                text: Español es muy difícil de aprender
              - id: "3"
                language: en
                text: I really really love machine learning
              - id: "4"
                language: fr
                text: Le soleil se lève à l'Est
          responses:
            "200":
              body:
                documents:
                - id: "1"
                  score: 0.006573081016540527
                - id: "3"
                  score: 0.9733303189277649
                - id: "2"
                  score: 0.4421966075897217
                - id: "4"
                  score: 0.5342581272125244
                errors: []
              headers: {}
      x-codegen-request-body-name: multiLanguageBatchInput
      x-openapi-router-controller: openapi_server.controllers.sentiment_controller
components:
  parameters:
    Endpoint:
      description: "Supported Cognitive Services endpoints (protocol and hostname,\
        \ for example: https://westus.api.cognitive.microsoft.com)."
      in: path
      name: Endpoint
      required: true
      schema:
        type: string
        x-ms-parameter-location: client
        x-ms-skip-url-encoding: true
      x-ms-parameter-location: client
      x-ms-skip-url-encoding: true
  schemas:
    DetectedLanguage:
      example:
        score: 0.8008281904610115
        iso6391Name: iso6391Name
        name: name
      properties:
        iso6391Name:
          description: "A two letter representation of the detected language according\
            \ to the ISO 639-1 standard (e.g. en, fr)."
          title: iso6391Name
          type: string
        name:
          description: "Long name of a detected language (e.g. English, French)."
          title: name
          type: string
        score:
          description: A confidence score between 0 and 1. Scores close to 1 indicate
            100% certainty that the identified language is true.
          format: double
          title: score
          type: number
      title: DetectedLanguage
      type: object
    DocumentStatistics:
      example:
        charactersCount: 5
        transactionsCount: 2
      properties:
        charactersCount:
          description: Number of text elements recognized in the document.
          format: int32
          title: charactersCount
          type: integer
        transactionsCount:
          description: Number of transactions for the document.
          format: int32
          title: transactionsCount
          type: integer
      title: DocumentStatistics
      type: object
    EntitiesBatchResult:
      example:
        documents:
        - entities:
          - name: name
            wikipediaId: wikipediaId
            subType: subType
            type: type
            bingId: bingId
            matches:
            - entityTypeScore: 0.8008281904610115
              offset: 1
              wikipediaScore: 5.962133916683182
              length: 6
              text: text
            - entityTypeScore: 0.8008281904610115
              offset: 1
              wikipediaScore: 5.962133916683182
              length: 6
              text: text
            wikipediaLanguage: wikipediaLanguage
            wikipediaUrl: wikipediaUrl
          - name: name
            wikipediaId: wikipediaId
            subType: subType
            type: type
            bingId: bingId
            matches:
            - entityTypeScore: 0.8008281904610115
              offset: 1
              wikipediaScore: 5.962133916683182
              length: 6
              text: text
            - entityTypeScore: 0.8008281904610115
              offset: 1
              wikipediaScore: 5.962133916683182
              length: 6
              text: text
            wikipediaLanguage: wikipediaLanguage
            wikipediaUrl: wikipediaUrl
          id: id
          statistics:
            charactersCount: 5
            transactionsCount: 2
        - entities:
          - name: name
            wikipediaId: wikipediaId
            subType: subType
            type: type
            bingId: bingId
            matches:
            - entityTypeScore: 0.8008281904610115
              offset: 1
              wikipediaScore: 5.962133916683182
              length: 6
              text: text
            - entityTypeScore: 0.8008281904610115
              offset: 1
              wikipediaScore: 5.962133916683182
              length: 6
              text: text
            wikipediaLanguage: wikipediaLanguage
            wikipediaUrl: wikipediaUrl
          - name: name
            wikipediaId: wikipediaId
            subType: subType
            type: type
            bingId: bingId
            matches:
            - entityTypeScore: 0.8008281904610115
              offset: 1
              wikipediaScore: 5.962133916683182
              length: 6
              text: text
            - entityTypeScore: 0.8008281904610115
              offset: 1
              wikipediaScore: 5.962133916683182
              length: 6
              text: text
            wikipediaLanguage: wikipediaLanguage
            wikipediaUrl: wikipediaUrl
          id: id
          statistics:
            charactersCount: 5
            transactionsCount: 2
        errors:
        - id: id
          message: message
        - id: id
          message: message
        statistics:
          documentsCount: 7
          erroneousDocumentsCount: 9
          validDocumentsCount: 2
          transactionsCount: 3
      properties:
        documents:
          description: Response by document
          items:
            $ref: '#/components/schemas/EntitiesBatchResultItem'
          readOnly: true
          title: documents
          type: array
        errors:
          description: Errors and Warnings by document
          items:
            $ref: '#/components/schemas/ErrorRecord'
          readOnly: true
          title: errors
          type: array
        statistics:
          $ref: '#/components/schemas/RequestStatistics'
      title: EntitiesBatchResult
      type: object
    EntitiesBatchResultItem:
      example:
        entities:
        - name: name
          wikipediaId: wikipediaId
          subType: subType
          type: type
          bingId: bingId
          matches:
          - entityTypeScore: 0.8008281904610115
            offset: 1
            wikipediaScore: 5.962133916683182
            length: 6
            text: text
          - entityTypeScore: 0.8008281904610115
            offset: 1
            wikipediaScore: 5.962133916683182
            length: 6
            text: text
          wikipediaLanguage: wikipediaLanguage
          wikipediaUrl: wikipediaUrl
        - name: name
          wikipediaId: wikipediaId
          subType: subType
          type: type
          bingId: bingId
          matches:
          - entityTypeScore: 0.8008281904610115
            offset: 1
            wikipediaScore: 5.962133916683182
            length: 6
            text: text
          - entityTypeScore: 0.8008281904610115
            offset: 1
            wikipediaScore: 5.962133916683182
            length: 6
            text: text
          wikipediaLanguage: wikipediaLanguage
          wikipediaUrl: wikipediaUrl
        id: id
        statistics:
          charactersCount: 5
          transactionsCount: 2
      properties:
        entities:
          description: Recognized entities in the document.
          items:
            $ref: '#/components/schemas/EntityRecord'
          readOnly: true
          title: entities
          type: array
        id:
          description: "Unique, non-empty document identifier."
          title: id
          type: string
        statistics:
          $ref: '#/components/schemas/DocumentStatistics'
      title: EntitiesBatchResultItem
      type: object
    EntityRecord:
      example:
        name: name
        wikipediaId: wikipediaId
        subType: subType
        type: type
        bingId: bingId
        matches:
        - entityTypeScore: 0.8008281904610115
          offset: 1
          wikipediaScore: 5.962133916683182
          length: 6
          text: text
        - entityTypeScore: 0.8008281904610115
          offset: 1
          wikipediaScore: 5.962133916683182
          length: 6
          text: text
        wikipediaLanguage: wikipediaLanguage
        wikipediaUrl: wikipediaUrl
      properties:
        bingId:
          description: Bing unique identifier of the recognized entity. Use in conjunction
            with the Bing Entity Search API to fetch additional relevant information.
          title: bingId
          type: string
        matches:
          description: List of instances this entity appears in the text.
          items:
            $ref: '#/components/schemas/MatchRecord'
          title: matches
          type: array
        name:
          description: Entity formal name.
          title: name
          type: string
        subType:
          description: Entity sub type from Named Entity Recognition model
          title: subType
          type: string
        type:
          description: Entity type from Named Entity Recognition model
          title: type
          type: string
        wikipediaId:
          description: Wikipedia unique identifier of the recognized entity.
          title: wikipediaId
          type: string
        wikipediaLanguage:
          description: Wikipedia language for which the WikipediaId and WikipediaUrl
            refers to.
          title: wikipediaLanguage
          type: string
        wikipediaUrl:
          description: URL for the entity's Wikipedia page.
          readOnly: true
          title: wikipediaUrl
          type: string
      title: EntityRecord
      type: object
    ErrorRecord:
      example:
        id: id
        message: message
      properties:
        id:
          description: Input document unique identifier the error refers to.
          title: id
          type: string
        message:
          description: Error message.
          title: message
          type: string
      title: ErrorRecord
      type: object
    ErrorResponse:
      example:
        code: code
        innerError:
          code: code
          innerError: null
          message: message
        message: message
        target: target
      properties:
        code:
          title: code
          type: string
        innerError:
          $ref: '#/components/schemas/InternalError'
        message:
          title: message
          type: string
        target:
          title: target
          type: string
      title: ErrorResponse
      type: object
    InternalError:
      example:
        code: code
        innerError: null
        message: message
      properties:
        code:
          title: code
          type: string
        innerError:
          $ref: '#/components/schemas/InternalError'
        message:
          title: message
          type: string
      title: InternalError
      type: object
    KeyPhraseBatchResult:
      example:
        documents:
        - keyPhrases:
          - keyPhrases
          - keyPhrases
          id: id
          statistics:
            charactersCount: 5
            transactionsCount: 2
        - keyPhrases:
          - keyPhrases
          - keyPhrases
          id: id
          statistics:
            charactersCount: 5
            transactionsCount: 2
        errors:
        - id: id
          message: message
        - id: id
          message: message
        statistics:
          documentsCount: 7
          erroneousDocumentsCount: 9
          validDocumentsCount: 2
          transactionsCount: 3
      properties:
        documents:
          description: Response by document
          items:
            $ref: '#/components/schemas/KeyPhraseBatchResultItem'
          readOnly: true
          title: documents
          type: array
        errors:
          description: Errors and Warnings by document
          items:
            $ref: '#/components/schemas/ErrorRecord'
          readOnly: true
          title: errors
          type: array
        statistics:
          $ref: '#/components/schemas/RequestStatistics'
      title: KeyPhraseBatchResult
      type: object
    KeyPhraseBatchResultItem:
      example:
        keyPhrases:
        - keyPhrases
        - keyPhrases
        id: id
        statistics:
          charactersCount: 5
          transactionsCount: 2
      properties:
        id:
          description: "Unique, non-empty document identifier."
          title: id
          type: string
        keyPhrases:
          description: A list of representative words or phrases. The number of key
            phrases returned is proportional to the number of words in the input document.
          items:
            type: string
          readOnly: true
          title: keyPhrases
          type: array
        statistics:
          $ref: '#/components/schemas/DocumentStatistics'
      title: KeyPhraseBatchResultItem
      type: object
    LanguageBatchInput:
      example:
        documents:
        - countryHint: countryHint
          id: id
          text: text
        - countryHint: countryHint
          id: id
          text: text
      properties:
        documents:
          items:
            $ref: '#/components/schemas/LanguageInput'
          title: documents
          type: array
      title: LanguageBatchInput
      type: object
    LanguageBatchResult:
      example:
        documents:
        - detectedLanguages:
          - score: 0.8008281904610115
            iso6391Name: iso6391Name
            name: name
          - score: 0.8008281904610115
            iso6391Name: iso6391Name
            name: name
          id: id
          statistics:
            charactersCount: 5
            transactionsCount: 2
        - detectedLanguages:
          - score: 0.8008281904610115
            iso6391Name: iso6391Name
            name: name
          - score: 0.8008281904610115
            iso6391Name: iso6391Name
            name: name
          id: id
          statistics:
            charactersCount: 5
            transactionsCount: 2
        errors:
        - id: id
          message: message
        - id: id
          message: message
        statistics:
          documentsCount: 7
          erroneousDocumentsCount: 9
          validDocumentsCount: 2
          transactionsCount: 3
      properties:
        documents:
          description: Response by document
          items:
            $ref: '#/components/schemas/LanguageBatchResultItem'
          readOnly: true
          title: documents
          type: array
        errors:
          description: Errors and Warnings by document
          items:
            $ref: '#/components/schemas/ErrorRecord'
          readOnly: true
          title: errors
          type: array
        statistics:
          $ref: '#/components/schemas/RequestStatistics'
      title: LanguageBatchResult
      type: object
    LanguageBatchResultItem:
      example:
        detectedLanguages:
        - score: 0.8008281904610115
          iso6391Name: iso6391Name
          name: name
        - score: 0.8008281904610115
          iso6391Name: iso6391Name
          name: name
        id: id
        statistics:
          charactersCount: 5
          transactionsCount: 2
      properties:
        detectedLanguages:
          description: A list of extracted languages.
          items:
            $ref: '#/components/schemas/DetectedLanguage'
          title: detectedLanguages
          type: array
        id:
          description: "Unique, non-empty document identifier."
          title: id
          type: string
        statistics:
          $ref: '#/components/schemas/DocumentStatistics'
      title: LanguageBatchResultItem
      type: object
    LanguageInput:
      example:
        countryHint: countryHint
        id: id
        text: text
      properties:
        countryHint:
          title: countryHint
          type: string
        id:
          description: "Unique, non-empty document identifier."
          title: id
          type: string
        text:
          title: text
          type: string
      title: LanguageInput
      type: object
    MatchRecord:
      example:
        entityTypeScore: 0.8008281904610115
        offset: 1
        wikipediaScore: 5.962133916683182
        length: 6
        text: text
      properties:
        entityTypeScore:
          description: "(optional) If an entity type is recognized, a decimal number\
            \ denoting the confidence level of the entity type will be returned."
          format: double
          title: entityTypeScore
          type: number
        length:
          description: Length (in Unicode characters) for the entity match text.
          format: int32
          title: length
          type: integer
        offset:
          description: Start position (in Unicode characters) for the entity match
            text.
          format: int32
          title: offset
          type: integer
        text:
          description: Entity text as appears in the request.
          title: text
          type: string
        wikipediaScore:
          description: "(optional) If a well-known item with Wikipedia link is recognized,\
            \ a decimal number denoting the confidence level of the Wikipedia info\
            \ will be returned."
          format: double
          title: wikipediaScore
          type: number
      title: MatchRecord
      type: object
    MultiLanguageBatchInput:
      example:
        documents:
        - language: language
          id: id
          text: text
        - language: language
          id: id
          text: text
      properties:
        documents:
          items:
            $ref: '#/components/schemas/MultiLanguageInput'
          title: documents
          type: array
      title: MultiLanguageBatchInput
      type: object
    MultiLanguageInput:
      example:
        language: language
        id: id
        text: text
      properties:
        id:
          description: "Unique, non-empty document identifier."
          title: id
          type: string
        language:
          description: "This is the 2 letter ISO 639-1 representation of a language.\
            \ For example, use \"en\" for English; \"es\" for Spanish etc.,"
          title: language
          type: string
        text:
          title: text
          type: string
      title: MultiLanguageInput
      type: object
    Object:
      type: object
    RequestStatistics:
      example:
        documentsCount: 7
        erroneousDocumentsCount: 9
        validDocumentsCount: 2
        transactionsCount: 3
      properties:
        documentsCount:
          description: Number of documents submitted in the request.
          format: int32
          title: documentsCount
          type: integer
        erroneousDocumentsCount:
          description: "Number of invalid documents. This includes empty, over-size\
            \ limit or non-supported languages documents."
          format: int32
          title: erroneousDocumentsCount
          type: integer
        transactionsCount:
          description: Number of transactions for the request.
          format: int64
          title: transactionsCount
          type: integer
        validDocumentsCount:
          description: "Number of valid documents. This excludes empty, over-size\
            \ limit or non-supported languages documents."
          format: int32
          title: validDocumentsCount
          type: integer
      title: RequestStatistics
      type: object
    SentimentBatchResult:
      example:
        documents:
        - score: 0.8008281904610115
          id: id
          statistics:
            charactersCount: 5
            transactionsCount: 2
        - score: 0.8008281904610115
          id: id
          statistics:
            charactersCount: 5
            transactionsCount: 2
        errors:
        - id: id
          message: message
        - id: id
          message: message
        statistics:
          documentsCount: 7
          erroneousDocumentsCount: 9
          validDocumentsCount: 2
          transactionsCount: 3
      properties:
        documents:
          description: Response by document
          items:
            $ref: '#/components/schemas/SentimentBatchResultItem'
          readOnly: true
          title: documents
          type: array
        errors:
          description: Errors and Warnings by document
          items:
            $ref: '#/components/schemas/ErrorRecord'
          readOnly: true
          title: errors
          type: array
        statistics:
          $ref: '#/components/schemas/RequestStatistics'
      title: SentimentBatchResult
      type: object
    SentimentBatchResultItem:
      example:
        score: 0.8008281904610115
        id: id
        statistics:
          charactersCount: 5
          transactionsCount: 2
      properties:
        id:
          description: "Unique, non-empty document identifier."
          title: id
          type: string
        score:
          description: A decimal number between 0 and 1 denoting the sentiment of
            the document. A score above 0.7 usually refers to a positive document
            while a score below 0.3 normally has a negative connotation. Mid values
            refer to neutral text.
          format: double
          title: score
          type: number
        statistics:
          $ref: '#/components/schemas/DocumentStatistics'
      title: SentimentBatchResultItem
      type: object
  securitySchemes:
    apim_key:
      in: header
      name: Ocp-Apim-Subscription-Key
      type: apiKey
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_apim_key
x-ms-parameterized-host:
  hostTemplate: "{Endpoint}/text/analytics/v2.1"
  parameters:
  - $ref: '#/parameters/Endpoint'
  useSchemePrefix: false
x-original-swagger-version: "2.0"
