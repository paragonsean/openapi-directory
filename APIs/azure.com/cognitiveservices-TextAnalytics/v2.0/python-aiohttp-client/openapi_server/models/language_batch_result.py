# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.error_record import ErrorRecord
from openapi_server.models.language_batch_result_item import LanguageBatchResultItem
from openapi_server import util


class LanguageBatchResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, documents: List[LanguageBatchResultItem]=None, errors: List[ErrorRecord]=None):
        """LanguageBatchResult - a model defined in OpenAPI

        :param documents: The documents of this LanguageBatchResult.
        :param errors: The errors of this LanguageBatchResult.
        """
        self.openapi_types = {
            'documents': List[LanguageBatchResultItem],
            'errors': List[ErrorRecord]
        }

        self.attribute_map = {
            'documents': 'documents',
            'errors': 'errors'
        }

        self._documents = documents
        self._errors = errors

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LanguageBatchResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LanguageBatchResult of this LanguageBatchResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def documents(self):
        """Gets the documents of this LanguageBatchResult.


        :return: The documents of this LanguageBatchResult.
        :rtype: List[LanguageBatchResultItem]
        """
        return self._documents

    @documents.setter
    def documents(self, documents):
        """Sets the documents of this LanguageBatchResult.


        :param documents: The documents of this LanguageBatchResult.
        :type documents: List[LanguageBatchResultItem]
        """

        self._documents = documents

    @property
    def errors(self):
        """Gets the errors of this LanguageBatchResult.


        :return: The errors of this LanguageBatchResult.
        :rtype: List[ErrorRecord]
        """
        return self._errors

    @errors.setter
    def errors(self, errors):
        """Sets the errors of this LanguageBatchResult.


        :param errors: The errors of this LanguageBatchResult.
        :type errors: List[ErrorRecord]
        """

        self._errors = errors
