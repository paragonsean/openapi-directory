/**
 * Text Analytics Client
 * The Text Analytics API is a suite of text analytics web services built with best-in-class Microsoft machine learning algorithms. The API can be used to analyze unstructured text for tasks such as sentiment analysis, key phrase extraction and language detection. No training data is needed to use this API; just bring your text data. This API uses advanced natural language processing techniques to deliver best in class predictions. Further documentation can be found in https://docs.microsoft.com/en-us/azure/cognitive-services/text-analytics/overview
 *
 * The version of the OpenAPI document: v2.0
 * Contact: mlapi@microsoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEntityRecord.h
 *
 * 
 */

#ifndef OAIEntityRecord_H
#define OAIEntityRecord_H

#include <QJsonObject>

#include "OAIMatchRecord.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIMatchRecord;

class OAIEntityRecord : public OAIObject {
public:
    OAIEntityRecord();
    OAIEntityRecord(QString json);
    ~OAIEntityRecord() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBingId() const;
    void setBingId(const QString &bing_id);
    bool is_bing_id_Set() const;
    bool is_bing_id_Valid() const;

    QList<OAIMatchRecord> getMatches() const;
    void setMatches(const QList<OAIMatchRecord> &matches);
    bool is_matches_Set() const;
    bool is_matches_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getWikipediaId() const;
    void setWikipediaId(const QString &wikipedia_id);
    bool is_wikipedia_id_Set() const;
    bool is_wikipedia_id_Valid() const;

    QString getWikipediaLanguage() const;
    void setWikipediaLanguage(const QString &wikipedia_language);
    bool is_wikipedia_language_Set() const;
    bool is_wikipedia_language_Valid() const;

    QString getWikipediaUrl() const;
    void setWikipediaUrl(const QString &wikipedia_url);
    bool is_wikipedia_url_Set() const;
    bool is_wikipedia_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_bing_id;
    bool m_bing_id_isSet;
    bool m_bing_id_isValid;

    QList<OAIMatchRecord> m_matches;
    bool m_matches_isSet;
    bool m_matches_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_wikipedia_id;
    bool m_wikipedia_id_isSet;
    bool m_wikipedia_id_isValid;

    QString m_wikipedia_language;
    bool m_wikipedia_language_isSet;
    bool m_wikipedia_language_isValid;

    QString m_wikipedia_url;
    bool m_wikipedia_url_isSet;
    bool m_wikipedia_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEntityRecord)

#endif // OAIEntityRecord_H
