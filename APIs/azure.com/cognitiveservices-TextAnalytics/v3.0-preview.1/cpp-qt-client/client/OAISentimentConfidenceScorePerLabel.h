/**
 * Text Analytics Client
 * The Text Analytics API is a suite of text analytics web services built with best-in-class Microsoft machine learning algorithms. The API can be used to analyze unstructured text for tasks such as sentiment analysis, key phrase extraction and language detection. No training data is needed to use this API; just bring your text data. This API uses advanced natural language processing techniques to deliver best in class predictions. Further documentation can be found in https://docs.microsoft.com/en-us/azure/cognitive-services/text-analytics/overview
 *
 * The version of the OpenAPI document: v3.0-preview.1
 * Contact: mlapi@microsoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISentimentConfidenceScorePerLabel.h
 *
 * Represents the confidence scores between 0 and 1 across all sentiment classes: positive, neutral, negative.
 */

#ifndef OAISentimentConfidenceScorePerLabel_H
#define OAISentimentConfidenceScorePerLabel_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISentimentConfidenceScorePerLabel : public OAIObject {
public:
    OAISentimentConfidenceScorePerLabel();
    OAISentimentConfidenceScorePerLabel(QString json);
    ~OAISentimentConfidenceScorePerLabel() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getNegative() const;
    void setNegative(const double &negative);
    bool is_negative_Set() const;
    bool is_negative_Valid() const;

    double getNeutral() const;
    void setNeutral(const double &neutral);
    bool is_neutral_Set() const;
    bool is_neutral_Valid() const;

    double getPositive() const;
    void setPositive(const double &positive);
    bool is_positive_Set() const;
    bool is_positive_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_negative;
    bool m_negative_isSet;
    bool m_negative_isValid;

    double m_neutral;
    bool m_neutral_isSet;
    bool m_neutral_isValid;

    double m_positive;
    bool m_positive_isSet;
    bool m_positive_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISentimentConfidenceScorePerLabel)

#endif // OAISentimentConfidenceScorePerLabel_H
