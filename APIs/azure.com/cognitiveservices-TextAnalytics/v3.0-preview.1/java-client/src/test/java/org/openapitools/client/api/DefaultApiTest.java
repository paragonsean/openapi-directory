/*
 * Text Analytics Client
 * The Text Analytics API is a suite of text analytics web services built with best-in-class Microsoft machine learning algorithms. The API can be used to analyze unstructured text for tasks such as sentiment analysis, key phrase extraction and language detection. No training data is needed to use this API; just bring your text data. This API uses advanced natural language processing techniques to deliver best in class predictions. Further documentation can be found in https://docs.microsoft.com/en-us/azure/cognitive-services/text-analytics/overview
 *
 * The version of the OpenAPI document: v3.0-preview.1
 * Contact: mlapi@microsoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.EntitiesResult;
import org.openapitools.client.model.EntityLinkingResult;
import org.openapitools.client.model.KeyPhraseResult;
import org.openapitools.client.model.LanguageBatchInput;
import org.openapitools.client.model.LanguageResult;
import org.openapitools.client.model.MultiLanguageBatchInput;
import org.openapitools.client.model.SentimentResponse;
import org.openapitools.client.model.TextAnalyticsError;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Disabled
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    /**
     * Linked entities from a well-known knowledge base
     *
     * The API returns a list of recognized entities with links to a well-known knowledge base. See the &lt;a href&#x3D;\&quot;https://aka.ms/talangs\&quot;&gt;Supported languages in Text Analytics API&lt;/a&gt; for the list of enabled languages.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void entitiesLinkingTest() throws ApiException {
        MultiLanguageBatchInput input = null;
        String modelVersion = null;
        Boolean showStats = null;
        EntityLinkingResult response = api.entitiesLinking(input, modelVersion, showStats);
        // TODO: test validations
    }

    /**
     * Named Entity Recognition
     *
     * The API returns a list of general named entities in a given document. For the list of supported entity types, check &lt;a href&#x3D;\&quot;https://aka.ms/taner\&quot;&gt;Supported Entity Types in Text Analytics API&lt;/a&gt;. See the &lt;a href&#x3D;\&quot;https://aka.ms/talangs\&quot;&gt;Supported languages in Text Analytics API&lt;/a&gt; for the list of enabled languages.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void entitiesRecognitionGeneralTest() throws ApiException {
        MultiLanguageBatchInput input = null;
        String modelVersion = null;
        Boolean showStats = null;
        EntitiesResult response = api.entitiesRecognitionGeneral(input, modelVersion, showStats);
        // TODO: test validations
    }

    /**
     * Entities containing personal information
     *
     * The API returns a list of entities with personal information (\\\&quot;SSN\\\&quot;, \\\&quot;Bank Account\\\&quot; etc) in the document. For the list of supported entity types, check &lt;a href&#x3D;\&quot;https://aka.ms/tanerpii\&quot;&gt;Supported Entity Types in Text Analytics API&lt;/a&gt;. See the &lt;a href&#x3D;\&quot;https://aka.ms/talangs\&quot;&gt;Supported languages in Text Analytics API&lt;/a&gt; for the list of enabled languages. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void entitiesRecognitionPiiTest() throws ApiException {
        MultiLanguageBatchInput input = null;
        String modelVersion = null;
        Boolean showStats = null;
        EntitiesResult response = api.entitiesRecognitionPii(input, modelVersion, showStats);
        // TODO: test validations
    }

    /**
     * Key Phrases
     *
     * The API returns a list of strings denoting the key phrases in the input text. See the &lt;a href&#x3D;\&quot;https://aka.ms/talangs\&quot;&gt;Supported languages in Text Analytics API&lt;/a&gt; for the list of enabled languages.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void keyPhrasesTest() throws ApiException {
        MultiLanguageBatchInput input = null;
        String modelVersion = null;
        Boolean showStats = null;
        KeyPhraseResult response = api.keyPhrases(input, modelVersion, showStats);
        // TODO: test validations
    }

    /**
     * Detect Language
     *
     * The API returns the detected language and a numeric score between 0 and 1. Scores close to 1 indicate 100% certainty that the identified language is true. See the &lt;a href&#x3D;\&quot;https://aka.ms/talangs\&quot;&gt;Supported languages in Text Analytics API&lt;/a&gt; for the list of enabled languages.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void languagesTest() throws ApiException {
        LanguageBatchInput input = null;
        String modelVersion = null;
        Boolean showStats = null;
        LanguageResult response = api.languages(input, modelVersion, showStats);
        // TODO: test validations
    }

    /**
     * Sentiment
     *
     * The API returns a sentiment prediction, as well as sentiment scores for each sentiment class (Positive, Negative, and Neutral) for the document and each sentence within it. See the &lt;a href&#x3D;\&quot;https://aka.ms/talangs\&quot;&gt;Supported languages in Text Analytics API&lt;/a&gt; for the list of enabled languages.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void sentimentTest() throws ApiException {
        MultiLanguageBatchInput input = null;
        String modelVersion = null;
        Boolean showStats = null;
        SentimentResponse response = api.sentiment(input, modelVersion, showStats);
        // TODO: test validations
    }

}
