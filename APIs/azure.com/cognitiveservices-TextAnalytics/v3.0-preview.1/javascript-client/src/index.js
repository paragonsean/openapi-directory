/**
 * Text Analytics Client
 * The Text Analytics API is a suite of text analytics web services built with best-in-class Microsoft machine learning algorithms. The API can be used to analyze unstructured text for tasks such as sentiment analysis, key phrase extraction and language detection. No training data is needed to use this API; just bring your text data. This API uses advanced natural language processing techniques to deliver best in class predictions. Further documentation can be found in https://docs.microsoft.com/en-us/azure/cognitive-services/text-analytics/overview
 *
 * The version of the OpenAPI document: v3.0-preview.1
 * Contact: mlapi@microsoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import DetectedLanguage from './model/DetectedLanguage';
import DocumentEntities from './model/DocumentEntities';
import DocumentError from './model/DocumentError';
import DocumentKeyPhrases from './model/DocumentKeyPhrases';
import DocumentLanguage from './model/DocumentLanguage';
import DocumentLinkedEntities from './model/DocumentLinkedEntities';
import DocumentSentiment from './model/DocumentSentiment';
import DocumentStatistics from './model/DocumentStatistics';
import EntitiesResult from './model/EntitiesResult';
import Entity from './model/Entity';
import EntityLinkingResult from './model/EntityLinkingResult';
import InnerError from './model/InnerError';
import KeyPhraseResult from './model/KeyPhraseResult';
import LanguageBatchInput from './model/LanguageBatchInput';
import LanguageInput from './model/LanguageInput';
import LanguageResult from './model/LanguageResult';
import LinkedEntity from './model/LinkedEntity';
import Match from './model/Match';
import MultiLanguageBatchInput from './model/MultiLanguageBatchInput';
import MultiLanguageInput from './model/MultiLanguageInput';
import RequestStatistics from './model/RequestStatistics';
import SentenceSentiment from './model/SentenceSentiment';
import SentimentConfidenceScorePerLabel from './model/SentimentConfidenceScorePerLabel';
import SentimentResponse from './model/SentimentResponse';
import TextAnalyticsError from './model/TextAnalyticsError';
import DefaultApi from './api/DefaultApi';


/**
* The Text Analytics API is a suite of text analytics web services built with best-in-class Microsoft machine learning algorithms. The API can be used to analyze unstructured text for tasks such as sentiment analysis, key phrase extraction and language detection. No training data is needed to use this API; just bring your text data. This API uses advanced natural language processing techniques to deliver best in class predictions. Further documentation can be found in https://docs.microsoft.com/en-us/azure/cognitive-services/text-analytics/overview.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var TextAnalyticsClient = require('index'); // See note below*.
* var xxxSvc = new TextAnalyticsClient.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new TextAnalyticsClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new TextAnalyticsClient.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new TextAnalyticsClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version v3.0-preview.1
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The DetectedLanguage model constructor.
     * @property {module:model/DetectedLanguage}
     */
    DetectedLanguage,

    /**
     * The DocumentEntities model constructor.
     * @property {module:model/DocumentEntities}
     */
    DocumentEntities,

    /**
     * The DocumentError model constructor.
     * @property {module:model/DocumentError}
     */
    DocumentError,

    /**
     * The DocumentKeyPhrases model constructor.
     * @property {module:model/DocumentKeyPhrases}
     */
    DocumentKeyPhrases,

    /**
     * The DocumentLanguage model constructor.
     * @property {module:model/DocumentLanguage}
     */
    DocumentLanguage,

    /**
     * The DocumentLinkedEntities model constructor.
     * @property {module:model/DocumentLinkedEntities}
     */
    DocumentLinkedEntities,

    /**
     * The DocumentSentiment model constructor.
     * @property {module:model/DocumentSentiment}
     */
    DocumentSentiment,

    /**
     * The DocumentStatistics model constructor.
     * @property {module:model/DocumentStatistics}
     */
    DocumentStatistics,

    /**
     * The EntitiesResult model constructor.
     * @property {module:model/EntitiesResult}
     */
    EntitiesResult,

    /**
     * The Entity model constructor.
     * @property {module:model/Entity}
     */
    Entity,

    /**
     * The EntityLinkingResult model constructor.
     * @property {module:model/EntityLinkingResult}
     */
    EntityLinkingResult,

    /**
     * The InnerError model constructor.
     * @property {module:model/InnerError}
     */
    InnerError,

    /**
     * The KeyPhraseResult model constructor.
     * @property {module:model/KeyPhraseResult}
     */
    KeyPhraseResult,

    /**
     * The LanguageBatchInput model constructor.
     * @property {module:model/LanguageBatchInput}
     */
    LanguageBatchInput,

    /**
     * The LanguageInput model constructor.
     * @property {module:model/LanguageInput}
     */
    LanguageInput,

    /**
     * The LanguageResult model constructor.
     * @property {module:model/LanguageResult}
     */
    LanguageResult,

    /**
     * The LinkedEntity model constructor.
     * @property {module:model/LinkedEntity}
     */
    LinkedEntity,

    /**
     * The Match model constructor.
     * @property {module:model/Match}
     */
    Match,

    /**
     * The MultiLanguageBatchInput model constructor.
     * @property {module:model/MultiLanguageBatchInput}
     */
    MultiLanguageBatchInput,

    /**
     * The MultiLanguageInput model constructor.
     * @property {module:model/MultiLanguageInput}
     */
    MultiLanguageInput,

    /**
     * The RequestStatistics model constructor.
     * @property {module:model/RequestStatistics}
     */
    RequestStatistics,

    /**
     * The SentenceSentiment model constructor.
     * @property {module:model/SentenceSentiment}
     */
    SentenceSentiment,

    /**
     * The SentimentConfidenceScorePerLabel model constructor.
     * @property {module:model/SentimentConfidenceScorePerLabel}
     */
    SentimentConfidenceScorePerLabel,

    /**
     * The SentimentResponse model constructor.
     * @property {module:model/SentimentResponse}
     */
    SentimentResponse,

    /**
     * The TextAnalyticsError model constructor.
     * @property {module:model/TextAnalyticsError}
     */
    TextAnalyticsError,

    /**
    * The DefaultApi service constructor.
    * @property {module:api/DefaultApi}
    */
    DefaultApi
};
