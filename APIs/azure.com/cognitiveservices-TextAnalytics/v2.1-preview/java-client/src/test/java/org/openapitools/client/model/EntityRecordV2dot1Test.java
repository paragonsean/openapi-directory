/*
 * Text Analytics Client
 * The Text Analytics API is a suite of text analytics web services built with best-in-class Microsoft machine learning algorithms. The API can be used to analyze unstructured text for tasks such as sentiment analysis, key phrase extraction and language detection. No training data is needed to use this API; just bring your text data. This API uses advanced natural language processing techniques to deliver best in class predictions. Further documentation can be found in https://docs.microsoft.com/en-us/azure/cognitive-services/text-analytics/overview
 *
 * The version of the OpenAPI document: v2.1-preview
 * Contact: mlapi@microsoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.MatchRecordV2dot1;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for EntityRecordV2dot1
 */
public class EntityRecordV2dot1Test {
    private final EntityRecordV2dot1 model = new EntityRecordV2dot1();

    /**
     * Model tests for EntityRecordV2dot1
     */
    @Test
    public void testEntityRecordV2dot1() {
        // TODO: test EntityRecordV2dot1
    }

    /**
     * Test the property 'bingId'
     */
    @Test
    public void bingIdTest() {
        // TODO: test bingId
    }

    /**
     * Test the property 'matches'
     */
    @Test
    public void matchesTest() {
        // TODO: test matches
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'subType'
     */
    @Test
    public void subTypeTest() {
        // TODO: test subType
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'wikipediaId'
     */
    @Test
    public void wikipediaIdTest() {
        // TODO: test wikipediaId
    }

    /**
     * Test the property 'wikipediaLanguage'
     */
    @Test
    public void wikipediaLanguageTest() {
        // TODO: test wikipediaLanguage
    }

    /**
     * Test the property 'wikipediaUrl'
     */
    @Test
    public void wikipediaUrlTest() {
        // TODO: test wikipediaUrl
    }

}
