# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.match_record_v2dot1 import MatchRecordV2dot1
from openapi_server import util


class EntityRecordV2dot1(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bing_id: str=None, matches: List[MatchRecordV2dot1]=None, name: str=None, sub_type: str=None, type: str=None, wikipedia_id: str=None, wikipedia_language: str=None, wikipedia_url: str=None):
        """EntityRecordV2dot1 - a model defined in OpenAPI

        :param bing_id: The bing_id of this EntityRecordV2dot1.
        :param matches: The matches of this EntityRecordV2dot1.
        :param name: The name of this EntityRecordV2dot1.
        :param sub_type: The sub_type of this EntityRecordV2dot1.
        :param type: The type of this EntityRecordV2dot1.
        :param wikipedia_id: The wikipedia_id of this EntityRecordV2dot1.
        :param wikipedia_language: The wikipedia_language of this EntityRecordV2dot1.
        :param wikipedia_url: The wikipedia_url of this EntityRecordV2dot1.
        """
        self.openapi_types = {
            'bing_id': str,
            'matches': List[MatchRecordV2dot1],
            'name': str,
            'sub_type': str,
            'type': str,
            'wikipedia_id': str,
            'wikipedia_language': str,
            'wikipedia_url': str
        }

        self.attribute_map = {
            'bing_id': 'bingId',
            'matches': 'matches',
            'name': 'name',
            'sub_type': 'subType',
            'type': 'type',
            'wikipedia_id': 'wikipediaId',
            'wikipedia_language': 'wikipediaLanguage',
            'wikipedia_url': 'wikipediaUrl'
        }

        self._bing_id = bing_id
        self._matches = matches
        self._name = name
        self._sub_type = sub_type
        self._type = type
        self._wikipedia_id = wikipedia_id
        self._wikipedia_language = wikipedia_language
        self._wikipedia_url = wikipedia_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EntityRecordV2dot1':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EntityRecordV2dot1 of this EntityRecordV2dot1.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bing_id(self):
        """Gets the bing_id of this EntityRecordV2dot1.

        Bing unique identifier of the recognized entity. Use in conjunction with the Bing Entity Search API to fetch additional relevant information.

        :return: The bing_id of this EntityRecordV2dot1.
        :rtype: str
        """
        return self._bing_id

    @bing_id.setter
    def bing_id(self, bing_id):
        """Sets the bing_id of this EntityRecordV2dot1.

        Bing unique identifier of the recognized entity. Use in conjunction with the Bing Entity Search API to fetch additional relevant information.

        :param bing_id: The bing_id of this EntityRecordV2dot1.
        :type bing_id: str
        """

        self._bing_id = bing_id

    @property
    def matches(self):
        """Gets the matches of this EntityRecordV2dot1.

        List of instances this entity appears in the text.

        :return: The matches of this EntityRecordV2dot1.
        :rtype: List[MatchRecordV2dot1]
        """
        return self._matches

    @matches.setter
    def matches(self, matches):
        """Sets the matches of this EntityRecordV2dot1.

        List of instances this entity appears in the text.

        :param matches: The matches of this EntityRecordV2dot1.
        :type matches: List[MatchRecordV2dot1]
        """

        self._matches = matches

    @property
    def name(self):
        """Gets the name of this EntityRecordV2dot1.

        Entity formal name.

        :return: The name of this EntityRecordV2dot1.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this EntityRecordV2dot1.

        Entity formal name.

        :param name: The name of this EntityRecordV2dot1.
        :type name: str
        """

        self._name = name

    @property
    def sub_type(self):
        """Gets the sub_type of this EntityRecordV2dot1.

        Entity sub type from Named Entity Recognition model

        :return: The sub_type of this EntityRecordV2dot1.
        :rtype: str
        """
        return self._sub_type

    @sub_type.setter
    def sub_type(self, sub_type):
        """Sets the sub_type of this EntityRecordV2dot1.

        Entity sub type from Named Entity Recognition model

        :param sub_type: The sub_type of this EntityRecordV2dot1.
        :type sub_type: str
        """

        self._sub_type = sub_type

    @property
    def type(self):
        """Gets the type of this EntityRecordV2dot1.

        Entity type from Named Entity Recognition model

        :return: The type of this EntityRecordV2dot1.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this EntityRecordV2dot1.

        Entity type from Named Entity Recognition model

        :param type: The type of this EntityRecordV2dot1.
        :type type: str
        """

        self._type = type

    @property
    def wikipedia_id(self):
        """Gets the wikipedia_id of this EntityRecordV2dot1.

        Wikipedia unique identifier of the recognized entity.

        :return: The wikipedia_id of this EntityRecordV2dot1.
        :rtype: str
        """
        return self._wikipedia_id

    @wikipedia_id.setter
    def wikipedia_id(self, wikipedia_id):
        """Sets the wikipedia_id of this EntityRecordV2dot1.

        Wikipedia unique identifier of the recognized entity.

        :param wikipedia_id: The wikipedia_id of this EntityRecordV2dot1.
        :type wikipedia_id: str
        """

        self._wikipedia_id = wikipedia_id

    @property
    def wikipedia_language(self):
        """Gets the wikipedia_language of this EntityRecordV2dot1.

        Wikipedia language for which the WikipediaId and WikipediaUrl refers to.

        :return: The wikipedia_language of this EntityRecordV2dot1.
        :rtype: str
        """
        return self._wikipedia_language

    @wikipedia_language.setter
    def wikipedia_language(self, wikipedia_language):
        """Sets the wikipedia_language of this EntityRecordV2dot1.

        Wikipedia language for which the WikipediaId and WikipediaUrl refers to.

        :param wikipedia_language: The wikipedia_language of this EntityRecordV2dot1.
        :type wikipedia_language: str
        """

        self._wikipedia_language = wikipedia_language

    @property
    def wikipedia_url(self):
        """Gets the wikipedia_url of this EntityRecordV2dot1.

        URL for the entity's English Wikipedia page.

        :return: The wikipedia_url of this EntityRecordV2dot1.
        :rtype: str
        """
        return self._wikipedia_url

    @wikipedia_url.setter
    def wikipedia_url(self, wikipedia_url):
        """Sets the wikipedia_url of this EntityRecordV2dot1.

        URL for the entity's English Wikipedia page.

        :param wikipedia_url: The wikipedia_url of this EntityRecordV2dot1.
        :type wikipedia_url: str
        """

        self._wikipedia_url = wikipedia_url
