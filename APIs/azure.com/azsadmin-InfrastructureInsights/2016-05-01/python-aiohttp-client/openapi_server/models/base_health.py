# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.alert_summary import AlertSummary
from openapi_server import util


class BaseHealth(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, alert_summary: AlertSummary=None, health_state: str=None, namespace: str=None, registration_id: str=None, route_prefix: str=None):
        """BaseHealth - a model defined in OpenAPI

        :param alert_summary: The alert_summary of this BaseHealth.
        :param health_state: The health_state of this BaseHealth.
        :param namespace: The namespace of this BaseHealth.
        :param registration_id: The registration_id of this BaseHealth.
        :param route_prefix: The route_prefix of this BaseHealth.
        """
        self.openapi_types = {
            'alert_summary': AlertSummary,
            'health_state': str,
            'namespace': str,
            'registration_id': str,
            'route_prefix': str
        }

        self.attribute_map = {
            'alert_summary': 'alertSummary',
            'health_state': 'healthState',
            'namespace': 'namespace',
            'registration_id': 'registrationId',
            'route_prefix': 'routePrefix'
        }

        self._alert_summary = alert_summary
        self._health_state = health_state
        self._namespace = namespace
        self._registration_id = registration_id
        self._route_prefix = route_prefix

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BaseHealth':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BaseHealth of this BaseHealth.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def alert_summary(self):
        """Gets the alert_summary of this BaseHealth.


        :return: The alert_summary of this BaseHealth.
        :rtype: AlertSummary
        """
        return self._alert_summary

    @alert_summary.setter
    def alert_summary(self, alert_summary):
        """Sets the alert_summary of this BaseHealth.


        :param alert_summary: The alert_summary of this BaseHealth.
        :type alert_summary: AlertSummary
        """

        self._alert_summary = alert_summary

    @property
    def health_state(self):
        """Gets the health_state of this BaseHealth.

        Health state.

        :return: The health_state of this BaseHealth.
        :rtype: str
        """
        return self._health_state

    @health_state.setter
    def health_state(self, health_state):
        """Sets the health_state of this BaseHealth.

        Health state.

        :param health_state: The health_state of this BaseHealth.
        :type health_state: str
        """

        self._health_state = health_state

    @property
    def namespace(self):
        """Gets the namespace of this BaseHealth.

        Namespace of the health resource.

        :return: The namespace of this BaseHealth.
        :rtype: str
        """
        return self._namespace

    @namespace.setter
    def namespace(self, namespace):
        """Sets the namespace of this BaseHealth.

        Namespace of the health resource.

        :param namespace: The namespace of this BaseHealth.
        :type namespace: str
        """

        self._namespace = namespace

    @property
    def registration_id(self):
        """Gets the registration_id of this BaseHealth.

        Registration ID.

        :return: The registration_id of this BaseHealth.
        :rtype: str
        """
        return self._registration_id

    @registration_id.setter
    def registration_id(self, registration_id):
        """Sets the registration_id of this BaseHealth.

        Registration ID.

        :param registration_id: The registration_id of this BaseHealth.
        :type registration_id: str
        """

        self._registration_id = registration_id

    @property
    def route_prefix(self):
        """Gets the route_prefix of this BaseHealth.

        Route prefix.

        :return: The route_prefix of this BaseHealth.
        :rtype: str
        """
        return self._route_prefix

    @route_prefix.setter
    def route_prefix(self, route_prefix):
        """Sets the route_prefix of this BaseHealth.

        Route prefix.

        :param route_prefix: The route_prefix of this BaseHealth.
        :type route_prefix: str
        """

        self._route_prefix = route_prefix
