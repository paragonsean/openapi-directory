/**
 * InfrastructureInsightsManagementClient
 * The Admin Infrastructure Insights Management Client.
 *
 * The version of the OpenAPI document: 2016-05-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBaseHealth.h
 *
 * Models the base properties for health resource.
 */

#ifndef OAIBaseHealth_H
#define OAIBaseHealth_H

#include <QJsonObject>

#include "OAIAlertSummary.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAlertSummary;

class OAIBaseHealth : public OAIObject {
public:
    OAIBaseHealth();
    OAIBaseHealth(QString json);
    ~OAIBaseHealth() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAlertSummary getAlertSummary() const;
    void setAlertSummary(const OAIAlertSummary &alert_summary);
    bool is_alert_summary_Set() const;
    bool is_alert_summary_Valid() const;

    QString getHealthState() const;
    void setHealthState(const QString &health_state);
    bool is_health_state_Set() const;
    bool is_health_state_Valid() const;

    QString getRNamespace() const;
    void setRNamespace(const QString &r_namespace);
    bool is_r_namespace_Set() const;
    bool is_r_namespace_Valid() const;

    QString getRegistrationId() const;
    void setRegistrationId(const QString &registration_id);
    bool is_registration_id_Set() const;
    bool is_registration_id_Valid() const;

    QString getRoutePrefix() const;
    void setRoutePrefix(const QString &route_prefix);
    bool is_route_prefix_Set() const;
    bool is_route_prefix_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAlertSummary m_alert_summary;
    bool m_alert_summary_isSet;
    bool m_alert_summary_isValid;

    QString m_health_state;
    bool m_health_state_isSet;
    bool m_health_state_isValid;

    QString m_r_namespace;
    bool m_r_namespace_isSet;
    bool m_r_namespace_isValid;

    QString m_registration_id;
    bool m_registration_id_isSet;
    bool m_registration_id_isValid;

    QString m_route_prefix;
    bool m_route_prefix_isSet;
    bool m_route_prefix_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBaseHealth)

#endif // OAIBaseHealth_H
