/**
 * InfrastructureInsightsManagementClient
 * The Admin Infrastructure Insights Management Client.
 *
 * The version of the OpenAPI document: 2016-05-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMetricsSourceType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMetricsSourceType::OAIMetricsSourceType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMetricsSourceType::OAIMetricsSourceType() {
    this->initializeModel();
}

OAIMetricsSourceType::~OAIMetricsSourceType() {}

void OAIMetricsSourceType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIMetricsSourceType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIMetricsSourceType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("PhysicalNode", Qt::CaseInsensitive) == 0) {
        m_value = eOAIMetricsSourceType::PHYSICALNODE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("VirtualMachine", Qt::CaseInsensitive) == 0) {
        m_value = eOAIMetricsSourceType::VIRTUALMACHINE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ResourceProvider", Qt::CaseInsensitive) == 0) {
        m_value = eOAIMetricsSourceType::RESOURCEPROVIDER;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIMetricsSourceType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIMetricsSourceType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIMetricsSourceType::PHYSICALNODE:
            val = "PhysicalNode";
            break;
        case eOAIMetricsSourceType::VIRTUALMACHINE:
            val = "VirtualMachine";
            break;
        case eOAIMetricsSourceType::RESOURCEPROVIDER:
            val = "ResourceProvider";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIMetricsSourceType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIMetricsSourceType::eOAIMetricsSourceType OAIMetricsSourceType::getValue() const {
    return m_value;
}

void OAIMetricsSourceType::setValue(const OAIMetricsSourceType::eOAIMetricsSourceType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIMetricsSourceType::isSet() const {
    
    return m_value_isSet;
}

bool OAIMetricsSourceType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
