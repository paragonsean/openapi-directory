/**
 * InfrastructureInsightsManagementClient
 * The Admin Infrastructure Insights Management Client.
 *
 * The version of the OpenAPI document: 2016-05-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMetrics.h
 *
 * Metrics for a source.
 */

#ifndef OAIMetrics_H
#define OAIMetrics_H

#include <QJsonObject>

#include "OAIMetricsSourceType.h"
#include "OAIMetricsUnit.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIMetrics : public OAIObject {
public:
    OAIMetrics();
    OAIMetrics(QString json);
    ~OAIMetrics() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getMaCounterName() const;
    void setMaCounterName(const QString &ma_counter_name);
    bool is_ma_counter_name_Set() const;
    bool is_ma_counter_name_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QDateTime getObservedTimestamp() const;
    void setObservedTimestamp(const QDateTime &observed_timestamp);
    bool is_observed_timestamp_Set() const;
    bool is_observed_timestamp_Valid() const;

    OAIMetricsSourceType getSourceName() const;
    void setSourceName(const OAIMetricsSourceType &source_name);
    bool is_source_name_Set() const;
    bool is_source_name_Valid() const;

    QString getSourceType() const;
    void setSourceType(const QString &source_type);
    bool is_source_type_Set() const;
    bool is_source_type_Valid() const;

    OAIMetricsUnit getUnit() const;
    void setUnit(const OAIMetricsUnit &unit);
    bool is_unit_Set() const;
    bool is_unit_Valid() const;

    double getValue() const;
    void setValue(const double &value);
    bool is_value_Set() const;
    bool is_value_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_ma_counter_name;
    bool m_ma_counter_name_isSet;
    bool m_ma_counter_name_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QDateTime m_observed_timestamp;
    bool m_observed_timestamp_isSet;
    bool m_observed_timestamp_isValid;

    OAIMetricsSourceType m_source_name;
    bool m_source_name_isSet;
    bool m_source_name_isValid;

    QString m_source_type;
    bool m_source_type_isSet;
    bool m_source_type_isValid;

    OAIMetricsUnit m_unit;
    bool m_unit_isSet;
    bool m_unit_isValid;

    double m_value;
    bool m_value_isSet;
    bool m_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMetrics)

#endif // OAIMetrics_H
