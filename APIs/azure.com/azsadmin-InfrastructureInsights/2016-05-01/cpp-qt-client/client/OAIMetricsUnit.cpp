/**
 * InfrastructureInsightsManagementClient
 * The Admin Infrastructure Insights Management Client.
 *
 * The version of the OpenAPI document: 2016-05-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMetricsUnit.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMetricsUnit::OAIMetricsUnit(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMetricsUnit::OAIMetricsUnit() {
    this->initializeModel();
}

OAIMetricsUnit::~OAIMetricsUnit() {}

void OAIMetricsUnit::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIMetricsUnit::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIMetricsUnit::fromJson(QString jsonString) {
    
    if ( jsonString.compare("One", Qt::CaseInsensitive) == 0) {
        m_value = eOAIMetricsUnit::ONE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Percentage", Qt::CaseInsensitive) == 0) {
        m_value = eOAIMetricsUnit::PERCENTAGE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("B", Qt::CaseInsensitive) == 0) {
        m_value = eOAIMetricsUnit::B;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("KB", Qt::CaseInsensitive) == 0) {
        m_value = eOAIMetricsUnit::KB;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("MB", Qt::CaseInsensitive) == 0) {
        m_value = eOAIMetricsUnit::MB;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("GB", Qt::CaseInsensitive) == 0) {
        m_value = eOAIMetricsUnit::GB;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("TB", Qt::CaseInsensitive) == 0) {
        m_value = eOAIMetricsUnit::TB;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIMetricsUnit::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIMetricsUnit::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIMetricsUnit::ONE:
            val = "One";
            break;
        case eOAIMetricsUnit::PERCENTAGE:
            val = "Percentage";
            break;
        case eOAIMetricsUnit::B:
            val = "B";
            break;
        case eOAIMetricsUnit::KB:
            val = "KB";
            break;
        case eOAIMetricsUnit::MB:
            val = "MB";
            break;
        case eOAIMetricsUnit::GB:
            val = "GB";
            break;
        case eOAIMetricsUnit::TB:
            val = "TB";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIMetricsUnit::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIMetricsUnit::eOAIMetricsUnit OAIMetricsUnit::getValue() const {
    return m_value;
}

void OAIMetricsUnit::setValue(const OAIMetricsUnit::eOAIMetricsUnit& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIMetricsUnit::isSet() const {
    
    return m_value_isSet;
}

bool OAIMetricsUnit::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
