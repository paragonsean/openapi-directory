/**
 * SqlManagementClient
 * The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.
 *
 * The version of the OpenAPI document: 2017-10-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDatabaseVulnerabilityAssessmentScanExportProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDatabaseVulnerabilityAssessmentScanExportProperties::OAIDatabaseVulnerabilityAssessmentScanExportProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDatabaseVulnerabilityAssessmentScanExportProperties::OAIDatabaseVulnerabilityAssessmentScanExportProperties() {
    this->initializeModel();
}

OAIDatabaseVulnerabilityAssessmentScanExportProperties::~OAIDatabaseVulnerabilityAssessmentScanExportProperties() {}

void OAIDatabaseVulnerabilityAssessmentScanExportProperties::initializeModel() {

    m_exported_report_location_isSet = false;
    m_exported_report_location_isValid = false;
}

void OAIDatabaseVulnerabilityAssessmentScanExportProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDatabaseVulnerabilityAssessmentScanExportProperties::fromJsonObject(QJsonObject json) {

    m_exported_report_location_isValid = ::OpenAPI::fromJsonValue(m_exported_report_location, json[QString("exportedReportLocation")]);
    m_exported_report_location_isSet = !json[QString("exportedReportLocation")].isNull() && m_exported_report_location_isValid;
}

QString OAIDatabaseVulnerabilityAssessmentScanExportProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDatabaseVulnerabilityAssessmentScanExportProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_exported_report_location_isSet) {
        obj.insert(QString("exportedReportLocation"), ::OpenAPI::toJsonValue(m_exported_report_location));
    }
    return obj;
}

QString OAIDatabaseVulnerabilityAssessmentScanExportProperties::getExportedReportLocation() const {
    return m_exported_report_location;
}
void OAIDatabaseVulnerabilityAssessmentScanExportProperties::setExportedReportLocation(const QString &exported_report_location) {
    m_exported_report_location = exported_report_location;
    m_exported_report_location_isSet = true;
}

bool OAIDatabaseVulnerabilityAssessmentScanExportProperties::is_exported_report_location_Set() const{
    return m_exported_report_location_isSet;
}

bool OAIDatabaseVulnerabilityAssessmentScanExportProperties::is_exported_report_location_Valid() const{
    return m_exported_report_location_isValid;
}

bool OAIDatabaseVulnerabilityAssessmentScanExportProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_exported_report_location_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDatabaseVulnerabilityAssessmentScanExportProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
