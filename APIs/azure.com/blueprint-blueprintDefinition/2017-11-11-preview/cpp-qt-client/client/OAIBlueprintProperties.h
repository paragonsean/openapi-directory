/**
 * BlueprintClient
 * Azure Blueprint Client.
 *
 * The version of the OpenAPI document: 2017-11-11-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBlueprintProperties.h
 *
 * Schema for Blueprint properties.
 */

#ifndef OAIBlueprintProperties_H
#define OAIBlueprintProperties_H

#include <QJsonObject>

#include "OAIBlueprintStatus.h"
#include "OAIObject.h"
#include "OAIParameterDefinition.h"
#include "OAIResourceGroupDefinition.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIParameterDefinition;
class OAIResourceGroupDefinition;
class OAIBlueprintStatus;

class OAIBlueprintProperties : public OAIObject {
public:
    OAIBlueprintProperties();
    OAIBlueprintProperties(QString json);
    ~OAIBlueprintProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIObject getLayout() const;
    void setLayout(const OAIObject &layout);
    bool is_layout_Set() const;
    bool is_layout_Valid() const;

    OAIObject getVersions() const;
    void setVersions(const OAIObject &versions);
    bool is_versions_Set() const;
    bool is_versions_Valid() const;

    QMap<QString, OAIParameterDefinition> getParameters() const;
    void setParameters(const QMap<QString, OAIParameterDefinition> &parameters);
    bool is_parameters_Set() const;
    bool is_parameters_Valid() const;

    QMap<QString, OAIResourceGroupDefinition> getResourceGroups() const;
    void setResourceGroups(const QMap<QString, OAIResourceGroupDefinition> &resource_groups);
    bool is_resource_groups_Set() const;
    bool is_resource_groups_Valid() const;

    OAIBlueprintStatus getStatus() const;
    void setStatus(const OAIBlueprintStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getTargetScope() const;
    void setTargetScope(const QString &target_scope);
    bool is_target_scope_Set() const;
    bool is_target_scope_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIObject m_layout;
    bool m_layout_isSet;
    bool m_layout_isValid;

    OAIObject m_versions;
    bool m_versions_isSet;
    bool m_versions_isValid;

    QMap<QString, OAIParameterDefinition> m_parameters;
    bool m_parameters_isSet;
    bool m_parameters_isValid;

    QMap<QString, OAIResourceGroupDefinition> m_resource_groups;
    bool m_resource_groups_isSet;
    bool m_resource_groups_isValid;

    OAIBlueprintStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_target_scope;
    bool m_target_scope_isSet;
    bool m_target_scope_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBlueprintProperties)

#endif // OAIBlueprintProperties_H
