/**
 * BlueprintClient
 * Azure Blueprint Client.
 *
 * The version of the OpenAPI document: 2017-11-11-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import PublishedBlueprint from '../model/PublishedBlueprint';
import PublishedBlueprintList from '../model/PublishedBlueprintList';

/**
* PublishedBlueprint service.
* @module api/PublishedBlueprintApi
* @version 2017-11-11-preview
*/
export default class PublishedBlueprintApi {

    /**
    * Constructs a new PublishedBlueprintApi. 
    * @alias module:api/PublishedBlueprintApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the publishedBlueprintsCreate operation.
     * @callback module:api/PublishedBlueprintApi~publishedBlueprintsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PublishedBlueprint} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Publish a new version of the Blueprint with the latest artifacts. Published Blueprints are immutable.
     * @param {String} apiVersion Client Api Version.
     * @param {String} managementGroupName ManagementGroup where blueprint stores.
     * @param {String} blueprintName name of the blueprint.
     * @param {String} versionId version of the published blueprint.
     * @param {module:api/PublishedBlueprintApi~publishedBlueprintsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PublishedBlueprint}
     */
    publishedBlueprintsCreate(apiVersion, managementGroupName, blueprintName, versionId, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling publishedBlueprintsCreate");
      }
      // verify the required parameter 'managementGroupName' is set
      if (managementGroupName === undefined || managementGroupName === null) {
        throw new Error("Missing the required parameter 'managementGroupName' when calling publishedBlueprintsCreate");
      }
      // verify the required parameter 'blueprintName' is set
      if (blueprintName === undefined || blueprintName === null) {
        throw new Error("Missing the required parameter 'blueprintName' when calling publishedBlueprintsCreate");
      }
      // verify the required parameter 'versionId' is set
      if (versionId === undefined || versionId === null) {
        throw new Error("Missing the required parameter 'versionId' when calling publishedBlueprintsCreate");
      }

      let pathParams = {
        'managementGroupName': managementGroupName,
        'blueprintName': blueprintName,
        'versionId': versionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PublishedBlueprint;
      return this.apiClient.callApi(
        '/providers/Microsoft.Management/managementGroups/{managementGroupName}/providers/Microsoft.Blueprint/blueprints/{blueprintName}/versions/{versionId}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the publishedBlueprintsDelete operation.
     * @callback module:api/PublishedBlueprintApi~publishedBlueprintsDeleteCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PublishedBlueprint} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete a published Blueprint.
     * @param {String} apiVersion Client Api Version.
     * @param {String} managementGroupName ManagementGroup where blueprint stores.
     * @param {String} blueprintName name of the blueprint.
     * @param {String} versionId version of the published blueprint.
     * @param {module:api/PublishedBlueprintApi~publishedBlueprintsDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PublishedBlueprint}
     */
    publishedBlueprintsDelete(apiVersion, managementGroupName, blueprintName, versionId, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling publishedBlueprintsDelete");
      }
      // verify the required parameter 'managementGroupName' is set
      if (managementGroupName === undefined || managementGroupName === null) {
        throw new Error("Missing the required parameter 'managementGroupName' when calling publishedBlueprintsDelete");
      }
      // verify the required parameter 'blueprintName' is set
      if (blueprintName === undefined || blueprintName === null) {
        throw new Error("Missing the required parameter 'blueprintName' when calling publishedBlueprintsDelete");
      }
      // verify the required parameter 'versionId' is set
      if (versionId === undefined || versionId === null) {
        throw new Error("Missing the required parameter 'versionId' when calling publishedBlueprintsDelete");
      }

      let pathParams = {
        'managementGroupName': managementGroupName,
        'blueprintName': blueprintName,
        'versionId': versionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PublishedBlueprint;
      return this.apiClient.callApi(
        '/providers/Microsoft.Management/managementGroups/{managementGroupName}/providers/Microsoft.Blueprint/blueprints/{blueprintName}/versions/{versionId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the publishedBlueprintsGet operation.
     * @callback module:api/PublishedBlueprintApi~publishedBlueprintsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PublishedBlueprint} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a published Blueprint.
     * @param {String} apiVersion Client Api Version.
     * @param {String} managementGroupName ManagementGroup where blueprint stores.
     * @param {String} blueprintName name of the blueprint.
     * @param {String} versionId version of the published blueprint.
     * @param {module:api/PublishedBlueprintApi~publishedBlueprintsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PublishedBlueprint}
     */
    publishedBlueprintsGet(apiVersion, managementGroupName, blueprintName, versionId, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling publishedBlueprintsGet");
      }
      // verify the required parameter 'managementGroupName' is set
      if (managementGroupName === undefined || managementGroupName === null) {
        throw new Error("Missing the required parameter 'managementGroupName' when calling publishedBlueprintsGet");
      }
      // verify the required parameter 'blueprintName' is set
      if (blueprintName === undefined || blueprintName === null) {
        throw new Error("Missing the required parameter 'blueprintName' when calling publishedBlueprintsGet");
      }
      // verify the required parameter 'versionId' is set
      if (versionId === undefined || versionId === null) {
        throw new Error("Missing the required parameter 'versionId' when calling publishedBlueprintsGet");
      }

      let pathParams = {
        'managementGroupName': managementGroupName,
        'blueprintName': blueprintName,
        'versionId': versionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PublishedBlueprint;
      return this.apiClient.callApi(
        '/providers/Microsoft.Management/managementGroups/{managementGroupName}/providers/Microsoft.Blueprint/blueprints/{blueprintName}/versions/{versionId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the publishedBlueprintsList operation.
     * @callback module:api/PublishedBlueprintApi~publishedBlueprintsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PublishedBlueprintList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List published versions of given Blueprint.
     * @param {String} apiVersion Client Api Version.
     * @param {String} managementGroupName ManagementGroup where blueprint stores.
     * @param {String} blueprintName name of the blueprint.
     * @param {module:api/PublishedBlueprintApi~publishedBlueprintsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PublishedBlueprintList}
     */
    publishedBlueprintsList(apiVersion, managementGroupName, blueprintName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling publishedBlueprintsList");
      }
      // verify the required parameter 'managementGroupName' is set
      if (managementGroupName === undefined || managementGroupName === null) {
        throw new Error("Missing the required parameter 'managementGroupName' when calling publishedBlueprintsList");
      }
      // verify the required parameter 'blueprintName' is set
      if (blueprintName === undefined || blueprintName === null) {
        throw new Error("Missing the required parameter 'blueprintName' when calling publishedBlueprintsList");
      }

      let pathParams = {
        'managementGroupName': managementGroupName,
        'blueprintName': blueprintName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PublishedBlueprintList;
      return this.apiClient.callApi(
        '/providers/Microsoft.Management/managementGroups/{managementGroupName}/providers/Microsoft.Blueprint/blueprints/{blueprintName}/versions', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
