/**
 * BlueprintClient
 * Azure Blueprint Client.
 *
 * The version of the OpenAPI document: 2017-11-11-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Blueprint from '../model/Blueprint';
import BlueprintList from '../model/BlueprintList';

/**
* Blueprint service.
* @module api/BlueprintApi
* @version 2017-11-11-preview
*/
export default class BlueprintApi {

    /**
    * Constructs a new BlueprintApi. 
    * @alias module:api/BlueprintApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the blueprintsCreateOrUpdate operation.
     * @callback module:api/BlueprintApi~blueprintsCreateOrUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Blueprint} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create or update Blueprint definition.
     * @param {String} apiVersion Client Api Version.
     * @param {String} managementGroupName ManagementGroup where blueprint stores.
     * @param {String} blueprintName name of the blueprint.
     * @param {module:model/Blueprint} blueprint Blueprint definition.
     * @param {module:api/BlueprintApi~blueprintsCreateOrUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Blueprint}
     */
    blueprintsCreateOrUpdate(apiVersion, managementGroupName, blueprintName, blueprint, callback) {
      let postBody = blueprint;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling blueprintsCreateOrUpdate");
      }
      // verify the required parameter 'managementGroupName' is set
      if (managementGroupName === undefined || managementGroupName === null) {
        throw new Error("Missing the required parameter 'managementGroupName' when calling blueprintsCreateOrUpdate");
      }
      // verify the required parameter 'blueprintName' is set
      if (blueprintName === undefined || blueprintName === null) {
        throw new Error("Missing the required parameter 'blueprintName' when calling blueprintsCreateOrUpdate");
      }
      // verify the required parameter 'blueprint' is set
      if (blueprint === undefined || blueprint === null) {
        throw new Error("Missing the required parameter 'blueprint' when calling blueprintsCreateOrUpdate");
      }

      let pathParams = {
        'managementGroupName': managementGroupName,
        'blueprintName': blueprintName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Blueprint;
      return this.apiClient.callApi(
        '/providers/Microsoft.Management/managementGroups/{managementGroupName}/providers/Microsoft.Blueprint/blueprints/{blueprintName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the blueprintsDelete operation.
     * @callback module:api/BlueprintApi~blueprintsDeleteCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Blueprint} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete a blueprint definition.
     * @param {String} apiVersion Client Api Version.
     * @param {String} managementGroupName ManagementGroup where blueprint stores.
     * @param {String} blueprintName name of the blueprint.
     * @param {module:api/BlueprintApi~blueprintsDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Blueprint}
     */
    blueprintsDelete(apiVersion, managementGroupName, blueprintName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling blueprintsDelete");
      }
      // verify the required parameter 'managementGroupName' is set
      if (managementGroupName === undefined || managementGroupName === null) {
        throw new Error("Missing the required parameter 'managementGroupName' when calling blueprintsDelete");
      }
      // verify the required parameter 'blueprintName' is set
      if (blueprintName === undefined || blueprintName === null) {
        throw new Error("Missing the required parameter 'blueprintName' when calling blueprintsDelete");
      }

      let pathParams = {
        'managementGroupName': managementGroupName,
        'blueprintName': blueprintName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Blueprint;
      return this.apiClient.callApi(
        '/providers/Microsoft.Management/managementGroups/{managementGroupName}/providers/Microsoft.Blueprint/blueprints/{blueprintName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the blueprintsGet operation.
     * @callback module:api/BlueprintApi~blueprintsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Blueprint} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a blueprint definition.
     * @param {String} apiVersion Client Api Version.
     * @param {String} managementGroupName ManagementGroup where blueprint stores.
     * @param {String} blueprintName name of the blueprint.
     * @param {module:api/BlueprintApi~blueprintsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Blueprint}
     */
    blueprintsGet(apiVersion, managementGroupName, blueprintName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling blueprintsGet");
      }
      // verify the required parameter 'managementGroupName' is set
      if (managementGroupName === undefined || managementGroupName === null) {
        throw new Error("Missing the required parameter 'managementGroupName' when calling blueprintsGet");
      }
      // verify the required parameter 'blueprintName' is set
      if (blueprintName === undefined || blueprintName === null) {
        throw new Error("Missing the required parameter 'blueprintName' when calling blueprintsGet");
      }

      let pathParams = {
        'managementGroupName': managementGroupName,
        'blueprintName': blueprintName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Blueprint;
      return this.apiClient.callApi(
        '/providers/Microsoft.Management/managementGroups/{managementGroupName}/providers/Microsoft.Blueprint/blueprints/{blueprintName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the blueprintsList operation.
     * @callback module:api/BlueprintApi~blueprintsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BlueprintList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List Blueprint definitions within a Management Group.
     * @param {String} apiVersion Client Api Version.
     * @param {String} managementGroupName ManagementGroup where blueprint stores.
     * @param {module:api/BlueprintApi~blueprintsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BlueprintList}
     */
    blueprintsList(apiVersion, managementGroupName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling blueprintsList");
      }
      // verify the required parameter 'managementGroupName' is set
      if (managementGroupName === undefined || managementGroupName === null) {
        throw new Error("Missing the required parameter 'managementGroupName' when calling blueprintsList");
      }

      let pathParams = {
        'managementGroupName': managementGroupName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = BlueprintList;
      return this.apiClient.callApi(
        '/providers/Microsoft.Management/managementGroups/{managementGroupName}/providers/Microsoft.Blueprint/blueprints', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
