/**
 * BlueprintClient
 * Azure Blueprint Client.
 *
 * The version of the OpenAPI document: 2017-11-11-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ParameterDefinitionMetadata from './ParameterDefinitionMetadata';

/**
 * The ResourceGroupDefinition model module.
 * @module model/ResourceGroupDefinition
 * @version 2017-11-11-preview
 */
class ResourceGroupDefinition {
    /**
     * Constructs a new <code>ResourceGroupDefinition</code>.
     * Represents an Azure resource group in a Blueprint definition.
     * @alias module:model/ResourceGroupDefinition
     */
    constructor() { 
        
        ResourceGroupDefinition.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ResourceGroupDefinition</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ResourceGroupDefinition} obj Optional instance to populate.
     * @return {module:model/ResourceGroupDefinition} The populated <code>ResourceGroupDefinition</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ResourceGroupDefinition();

            if (data.hasOwnProperty('dependsOn')) {
                obj['dependsOn'] = ApiClient.convertToType(data['dependsOn'], ['String']);
            }
            if (data.hasOwnProperty('location')) {
                obj['location'] = ApiClient.convertToType(data['location'], 'String');
            }
            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = ParameterDefinitionMetadata.constructFromObject(data['metadata']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ResourceGroupDefinition</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ResourceGroupDefinition</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['dependsOn'])) {
            throw new Error("Expected the field `dependsOn` to be an array in the JSON data but got " + data['dependsOn']);
        }
        // ensure the json data is a string
        if (data['location'] && !(typeof data['location'] === 'string' || data['location'] instanceof String)) {
            throw new Error("Expected the field `location` to be a primitive type in the JSON string but got " + data['location']);
        }
        // validate the optional field `metadata`
        if (data['metadata']) { // data not null
          ParameterDefinitionMetadata.validateJSON(data['metadata']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }

        return true;
    }


}



/**
 * Artifacts which need to be deployed before this resource group.
 * @member {Array.<String>} dependsOn
 */
ResourceGroupDefinition.prototype['dependsOn'] = undefined;

/**
 * Location of this resourceGroup, leave empty if the resource group location will be specified during the Blueprint assignment.
 * @member {String} location
 */
ResourceGroupDefinition.prototype['location'] = undefined;

/**
 * @member {module:model/ParameterDefinitionMetadata} metadata
 */
ResourceGroupDefinition.prototype['metadata'] = undefined;

/**
 * Name of this resourceGroup, leave empty if the resource group name will be specified during the Blueprint assignment.
 * @member {String} name
 */
ResourceGroupDefinition.prototype['name'] = undefined;






export default ResourceGroupDefinition;

