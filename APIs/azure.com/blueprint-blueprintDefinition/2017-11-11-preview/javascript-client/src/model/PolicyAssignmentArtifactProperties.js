/**
 * BlueprintClient
 * Azure Blueprint Client.
 *
 * The version of the OpenAPI document: 2017-11-11-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ArtifactPropertiesBase from './ArtifactPropertiesBase';
import BlueprintResourcePropertiesBase from './BlueprintResourcePropertiesBase';
import ParameterValueBase from './ParameterValueBase';

/**
 * The PolicyAssignmentArtifactProperties model module.
 * @module model/PolicyAssignmentArtifactProperties
 * @version 2017-11-11-preview
 */
class PolicyAssignmentArtifactProperties {
    /**
     * Constructs a new <code>PolicyAssignmentArtifactProperties</code>.
     * PolicyAssignment properties
     * @alias module:model/PolicyAssignmentArtifactProperties
     * @implements module:model/BlueprintResourcePropertiesBase
     * @implements module:model/ArtifactPropertiesBase
     */
    constructor() { 
        BlueprintResourcePropertiesBase.initialize(this);ArtifactPropertiesBase.initialize(this);
        PolicyAssignmentArtifactProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
        obj['parameters'] = parameters;
        obj['policyDefinitionId'] = policyDefinitionId;
    }

    /**
     * Constructs a <code>PolicyAssignmentArtifactProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PolicyAssignmentArtifactProperties} obj Optional instance to populate.
     * @return {module:model/PolicyAssignmentArtifactProperties} The populated <code>PolicyAssignmentArtifactProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PolicyAssignmentArtifactProperties();
            BlueprintResourcePropertiesBase.constructFromObject(data, obj);
            ArtifactPropertiesBase.constructFromObject(data, obj);

            if (data.hasOwnProperty('parameters')) {
                obj['parameters'] = ApiClient.convertToType(data['parameters'], {'String': ParameterValueBase});
            }
            if (data.hasOwnProperty('policyDefinitionId')) {
                obj['policyDefinitionId'] = ApiClient.convertToType(data['policyDefinitionId'], 'String');
            }
            if (data.hasOwnProperty('resourceGroup')) {
                obj['resourceGroup'] = ApiClient.convertToType(data['resourceGroup'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('dependsOn')) {
                obj['dependsOn'] = ApiClient.convertToType(data['dependsOn'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PolicyAssignmentArtifactProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PolicyAssignmentArtifactProperties</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PolicyAssignmentArtifactProperties.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['policyDefinitionId'] && !(typeof data['policyDefinitionId'] === 'string' || data['policyDefinitionId'] instanceof String)) {
            throw new Error("Expected the field `policyDefinitionId` to be a primitive type in the JSON string but got " + data['policyDefinitionId']);
        }
        // ensure the json data is a string
        if (data['resourceGroup'] && !(typeof data['resourceGroup'] === 'string' || data['resourceGroup'] instanceof String)) {
            throw new Error("Expected the field `resourceGroup` to be a primitive type in the JSON string but got " + data['resourceGroup']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['dependsOn'])) {
            throw new Error("Expected the field `dependsOn` to be an array in the JSON data but got " + data['dependsOn']);
        }

        return true;
    }


}

PolicyAssignmentArtifactProperties.RequiredProperties = ["parameters", "policyDefinitionId"];

/**
 * A dictionary for parameters and their corresponding values.
 * @member {Object.<String, module:model/ParameterValueBase>} parameters
 */
PolicyAssignmentArtifactProperties.prototype['parameters'] = undefined;

/**
 * Azure resource ID of the policy definition.
 * @member {String} policyDefinitionId
 */
PolicyAssignmentArtifactProperties.prototype['policyDefinitionId'] = undefined;

/**
 * Name of the resource group placeholder to which the policy will be assigned.
 * @member {String} resourceGroup
 */
PolicyAssignmentArtifactProperties.prototype['resourceGroup'] = undefined;

/**
 * Multi-line explain this resource.
 * @member {String} description
 */
PolicyAssignmentArtifactProperties.prototype['description'] = undefined;

/**
 * One-liner string explain this resource.
 * @member {String} displayName
 */
PolicyAssignmentArtifactProperties.prototype['displayName'] = undefined;

/**
 * Artifacts which need to be deployed before the specified artifact.
 * @member {Array.<String>} dependsOn
 */
PolicyAssignmentArtifactProperties.prototype['dependsOn'] = undefined;


// Implement BlueprintResourcePropertiesBase interface:
/**
 * Multi-line explain this resource.
 * @member {String} description
 */
BlueprintResourcePropertiesBase.prototype['description'] = undefined;
/**
 * One-liner string explain this resource.
 * @member {String} displayName
 */
BlueprintResourcePropertiesBase.prototype['displayName'] = undefined;
// Implement ArtifactPropertiesBase interface:
/**
 * Artifacts which need to be deployed before the specified artifact.
 * @member {Array.<String>} dependsOn
 */
ArtifactPropertiesBase.prototype['dependsOn'] = undefined;




export default PolicyAssignmentArtifactProperties;

