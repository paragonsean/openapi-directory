# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ArtifactPropertiesBase(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, depends_on: List[str]=None):
        """ArtifactPropertiesBase - a model defined in OpenAPI

        :param depends_on: The depends_on of this ArtifactPropertiesBase.
        """
        self.openapi_types = {
            'depends_on': List[str]
        }

        self.attribute_map = {
            'depends_on': 'dependsOn'
        }

        self._depends_on = depends_on

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ArtifactPropertiesBase':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ArtifactPropertiesBase of this ArtifactPropertiesBase.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def depends_on(self):
        """Gets the depends_on of this ArtifactPropertiesBase.

        Artifacts which need to be deployed before the specified artifact.

        :return: The depends_on of this ArtifactPropertiesBase.
        :rtype: List[str]
        """
        return self._depends_on

    @depends_on.setter
    def depends_on(self, depends_on):
        """Sets the depends_on of this ArtifactPropertiesBase.

        Artifacts which need to be deployed before the specified artifact.

        :param depends_on: The depends_on of this ArtifactPropertiesBase.
        :type depends_on: List[str]
        """

        self._depends_on = depends_on
