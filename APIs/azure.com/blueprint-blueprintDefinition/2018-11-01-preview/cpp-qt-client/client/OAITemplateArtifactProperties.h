/**
 * BlueprintClient
 * Azure Blueprints Client provides access to blueprint definitions, assignments, and artifacts, and related blueprint operations.
 *
 * The version of the OpenAPI document: 2018-11-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITemplateArtifactProperties.h
 *
 * Properties of a Resource Manager template blueprint artifact.
 */

#ifndef OAITemplateArtifactProperties_H
#define OAITemplateArtifactProperties_H

#include <QJsonObject>

#include "OAIObject.h"
#include "OAIParameterValue.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIParameterValue;

class OAITemplateArtifactProperties : public OAIObject {
public:
    OAITemplateArtifactProperties();
    OAITemplateArtifactProperties(QString json);
    ~OAITemplateArtifactProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QMap<QString, OAIParameterValue> getParameters() const;
    void setParameters(const QMap<QString, OAIParameterValue> &parameters);
    bool is_parameters_Set() const;
    bool is_parameters_Valid() const;

    QString getResourceGroup() const;
    void setResourceGroup(const QString &resource_group);
    bool is_resource_group_Set() const;
    bool is_resource_group_Valid() const;

    OAIObject getRTemplate() const;
    void setRTemplate(const OAIObject &r_template);
    bool is_r_template_Set() const;
    bool is_r_template_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    QList<QString> getDependsOn() const;
    void setDependsOn(const QList<QString> &depends_on);
    bool is_depends_on_Set() const;
    bool is_depends_on_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QMap<QString, OAIParameterValue> m_parameters;
    bool m_parameters_isSet;
    bool m_parameters_isValid;

    QString m_resource_group;
    bool m_resource_group_isSet;
    bool m_resource_group_isValid;

    OAIObject m_r_template;
    bool m_r_template_isSet;
    bool m_r_template_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    QList<QString> m_depends_on;
    bool m_depends_on_isSet;
    bool m_depends_on_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITemplateArtifactProperties)

#endif // OAITemplateArtifactProperties_H
