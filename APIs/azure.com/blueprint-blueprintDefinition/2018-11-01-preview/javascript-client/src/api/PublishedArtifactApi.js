/**
 * BlueprintClient
 * Azure Blueprints Client provides access to blueprint definitions, assignments, and artifacts, and related blueprint operations.
 *
 * The version of the OpenAPI document: 2018-11-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Artifact from '../model/Artifact';
import ArtifactList from '../model/ArtifactList';

/**
* PublishedArtifact service.
* @module api/PublishedArtifactApi
* @version 2018-11-01-preview
*/
export default class PublishedArtifactApi {

    /**
    * Constructs a new PublishedArtifactApi. 
    * @alias module:api/PublishedArtifactApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the publishedArtifactsGet operation.
     * @callback module:api/PublishedArtifactApi~publishedArtifactsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Artifact} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get an artifact for a published blueprint definition.
     * @param {String} apiVersion Client API Version.
     * @param {String} scope The scope of the resource. Valid scopes are: management group (format: '/providers/Microsoft.Management/managementGroups/{managementGroup}'), subscription (format: '/subscriptions/{subscriptionId}'). For blueprint assignments management group scope is reserved for future use.
     * @param {String} blueprintName Name of the blueprint definition.
     * @param {String} versionId Version of the published blueprint definition.
     * @param {String} artifactName Name of the blueprint artifact.
     * @param {module:api/PublishedArtifactApi~publishedArtifactsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Artifact}
     */
    publishedArtifactsGet(apiVersion, scope, blueprintName, versionId, artifactName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling publishedArtifactsGet");
      }
      // verify the required parameter 'scope' is set
      if (scope === undefined || scope === null) {
        throw new Error("Missing the required parameter 'scope' when calling publishedArtifactsGet");
      }
      // verify the required parameter 'blueprintName' is set
      if (blueprintName === undefined || blueprintName === null) {
        throw new Error("Missing the required parameter 'blueprintName' when calling publishedArtifactsGet");
      }
      // verify the required parameter 'versionId' is set
      if (versionId === undefined || versionId === null) {
        throw new Error("Missing the required parameter 'versionId' when calling publishedArtifactsGet");
      }
      // verify the required parameter 'artifactName' is set
      if (artifactName === undefined || artifactName === null) {
        throw new Error("Missing the required parameter 'artifactName' when calling publishedArtifactsGet");
      }

      let pathParams = {
        'scope': scope,
        'blueprintName': blueprintName,
        'versionId': versionId,
        'artifactName': artifactName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Artifact;
      return this.apiClient.callApi(
        '/{scope}/providers/Microsoft.Blueprint/blueprints/{blueprintName}/versions/{versionId}/artifacts/{artifactName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the publishedArtifactsList operation.
     * @callback module:api/PublishedArtifactApi~publishedArtifactsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ArtifactList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List artifacts for a version of a published blueprint definition.
     * @param {String} apiVersion Client API Version.
     * @param {String} scope The scope of the resource. Valid scopes are: management group (format: '/providers/Microsoft.Management/managementGroups/{managementGroup}'), subscription (format: '/subscriptions/{subscriptionId}'). For blueprint assignments management group scope is reserved for future use.
     * @param {String} blueprintName Name of the blueprint definition.
     * @param {String} versionId Version of the published blueprint definition.
     * @param {module:api/PublishedArtifactApi~publishedArtifactsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ArtifactList}
     */
    publishedArtifactsList(apiVersion, scope, blueprintName, versionId, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling publishedArtifactsList");
      }
      // verify the required parameter 'scope' is set
      if (scope === undefined || scope === null) {
        throw new Error("Missing the required parameter 'scope' when calling publishedArtifactsList");
      }
      // verify the required parameter 'blueprintName' is set
      if (blueprintName === undefined || blueprintName === null) {
        throw new Error("Missing the required parameter 'blueprintName' when calling publishedArtifactsList");
      }
      // verify the required parameter 'versionId' is set
      if (versionId === undefined || versionId === null) {
        throw new Error("Missing the required parameter 'versionId' when calling publishedArtifactsList");
      }

      let pathParams = {
        'scope': scope,
        'blueprintName': blueprintName,
        'versionId': versionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ArtifactList;
      return this.apiClient.callApi(
        '/{scope}/providers/Microsoft.Blueprint/blueprints/{blueprintName}/versions/{versionId}/artifacts', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
