/**
 * DataBoxEdgeManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-08-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The OrderStatus model module.
 * @module model/OrderStatus
 * @version 2019-08-01
 */
class OrderStatus {
    /**
     * Constructs a new <code>OrderStatus</code>.
     * Represents a single status change.
     * @alias module:model/OrderStatus
     * @param status {module:model/OrderStatus.StatusEnum} Status of the order as per the allowed status types.
     */
    constructor(status) { 
        
        OrderStatus.initialize(this, status);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, status) { 
        obj['status'] = status;
    }

    /**
     * Constructs a <code>OrderStatus</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OrderStatus} obj Optional instance to populate.
     * @return {module:model/OrderStatus} The populated <code>OrderStatus</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OrderStatus();

            if (data.hasOwnProperty('additionalOrderDetails')) {
                obj['additionalOrderDetails'] = ApiClient.convertToType(data['additionalOrderDetails'], {'String': 'String'});
            }
            if (data.hasOwnProperty('comments')) {
                obj['comments'] = ApiClient.convertToType(data['comments'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('updateDateTime')) {
                obj['updateDateTime'] = ApiClient.convertToType(data['updateDateTime'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OrderStatus</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OrderStatus</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of OrderStatus.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['comments'] && !(typeof data['comments'] === 'string' || data['comments'] instanceof String)) {
            throw new Error("Expected the field `comments` to be a primitive type in the JSON string but got " + data['comments']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }

        return true;
    }


}

OrderStatus.RequiredProperties = ["status"];

/**
 * Dictionary to hold generic information which is not stored  by the already existing properties
 * @member {Object.<String, String>} additionalOrderDetails
 */
OrderStatus.prototype['additionalOrderDetails'] = undefined;

/**
 * Comments related to this status change.
 * @member {String} comments
 */
OrderStatus.prototype['comments'] = undefined;

/**
 * Status of the order as per the allowed status types.
 * @member {module:model/OrderStatus.StatusEnum} status
 */
OrderStatus.prototype['status'] = undefined;

/**
 * Time of status update.
 * @member {Date} updateDateTime
 */
OrderStatus.prototype['updateDateTime'] = undefined;





/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
OrderStatus['StatusEnum'] = {

    /**
     * value: "Untracked"
     * @const
     */
    "Untracked": "Untracked",

    /**
     * value: "AwaitingFulfilment"
     * @const
     */
    "AwaitingFulfilment": "AwaitingFulfilment",

    /**
     * value: "AwaitingPreparation"
     * @const
     */
    "AwaitingPreparation": "AwaitingPreparation",

    /**
     * value: "AwaitingShipment"
     * @const
     */
    "AwaitingShipment": "AwaitingShipment",

    /**
     * value: "Shipped"
     * @const
     */
    "Shipped": "Shipped",

    /**
     * value: "Arriving"
     * @const
     */
    "Arriving": "Arriving",

    /**
     * value: "Delivered"
     * @const
     */
    "Delivered": "Delivered",

    /**
     * value: "ReplacementRequested"
     * @const
     */
    "ReplacementRequested": "ReplacementRequested",

    /**
     * value: "LostDevice"
     * @const
     */
    "LostDevice": "LostDevice",

    /**
     * value: "Declined"
     * @const
     */
    "Declined": "Declined",

    /**
     * value: "ReturnInitiated"
     * @const
     */
    "ReturnInitiated": "ReturnInitiated",

    /**
     * value: "AwaitingReturnShipment"
     * @const
     */
    "AwaitingReturnShipment": "AwaitingReturnShipment",

    /**
     * value: "ShippedBack"
     * @const
     */
    "ShippedBack": "ShippedBack",

    /**
     * value: "CollectedAtMicrosoft"
     * @const
     */
    "CollectedAtMicrosoft": "CollectedAtMicrosoft"
};



export default OrderStatus;

