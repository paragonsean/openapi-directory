/**
 * DataBoxEdgeManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-08-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import RefreshDetails from './RefreshDetails';

/**
 * The ContainerProperties model module.
 * @module model/ContainerProperties
 * @version 2019-08-01
 */
class ContainerProperties {
    /**
     * Constructs a new <code>ContainerProperties</code>.
     * The container properties.
     * @alias module:model/ContainerProperties
     * @param dataFormat {module:model/ContainerProperties.DataFormatEnum} DataFormat for Container
     */
    constructor(dataFormat) { 
        
        ContainerProperties.initialize(this, dataFormat);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, dataFormat) { 
        obj['dataFormat'] = dataFormat;
    }

    /**
     * Constructs a <code>ContainerProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ContainerProperties} obj Optional instance to populate.
     * @return {module:model/ContainerProperties} The populated <code>ContainerProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ContainerProperties();

            if (data.hasOwnProperty('containerStatus')) {
                obj['containerStatus'] = ApiClient.convertToType(data['containerStatus'], 'String');
            }
            if (data.hasOwnProperty('createdDateTime')) {
                obj['createdDateTime'] = ApiClient.convertToType(data['createdDateTime'], 'Date');
            }
            if (data.hasOwnProperty('dataFormat')) {
                obj['dataFormat'] = ApiClient.convertToType(data['dataFormat'], 'String');
            }
            if (data.hasOwnProperty('refreshDetails')) {
                obj['refreshDetails'] = RefreshDetails.constructFromObject(data['refreshDetails']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ContainerProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ContainerProperties</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ContainerProperties.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['containerStatus'] && !(typeof data['containerStatus'] === 'string' || data['containerStatus'] instanceof String)) {
            throw new Error("Expected the field `containerStatus` to be a primitive type in the JSON string but got " + data['containerStatus']);
        }
        // ensure the json data is a string
        if (data['dataFormat'] && !(typeof data['dataFormat'] === 'string' || data['dataFormat'] instanceof String)) {
            throw new Error("Expected the field `dataFormat` to be a primitive type in the JSON string but got " + data['dataFormat']);
        }
        // validate the optional field `refreshDetails`
        if (data['refreshDetails']) { // data not null
          RefreshDetails.validateJSON(data['refreshDetails']);
        }

        return true;
    }


}

ContainerProperties.RequiredProperties = ["dataFormat"];

/**
 * Current status of the container.
 * @member {module:model/ContainerProperties.ContainerStatusEnum} containerStatus
 */
ContainerProperties.prototype['containerStatus'] = undefined;

/**
 * The UTC time when container got created.
 * @member {Date} createdDateTime
 */
ContainerProperties.prototype['createdDateTime'] = undefined;

/**
 * DataFormat for Container
 * @member {module:model/ContainerProperties.DataFormatEnum} dataFormat
 */
ContainerProperties.prototype['dataFormat'] = undefined;

/**
 * @member {module:model/RefreshDetails} refreshDetails
 */
ContainerProperties.prototype['refreshDetails'] = undefined;





/**
 * Allowed values for the <code>containerStatus</code> property.
 * @enum {String}
 * @readonly
 */
ContainerProperties['ContainerStatusEnum'] = {

    /**
     * value: "OK"
     * @const
     */
    "OK": "OK",

    /**
     * value: "Offline"
     * @const
     */
    "Offline": "Offline",

    /**
     * value: "Unknown"
     * @const
     */
    "Unknown": "Unknown",

    /**
     * value: "Updating"
     * @const
     */
    "Updating": "Updating",

    /**
     * value: "NeedsAttention"
     * @const
     */
    "NeedsAttention": "NeedsAttention"
};


/**
 * Allowed values for the <code>dataFormat</code> property.
 * @enum {String}
 * @readonly
 */
ContainerProperties['DataFormatEnum'] = {

    /**
     * value: "BlockBlob"
     * @const
     */
    "BlockBlob": "BlockBlob",

    /**
     * value: "PageBlob"
     * @const
     */
    "PageBlob": "PageBlob",

    /**
     * value: "AzureFile"
     * @const
     */
    "AzureFile": "AzureFile"
};



export default ContainerProperties;

