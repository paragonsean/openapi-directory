/**
 * DataBoxEdgeManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-08-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PeriodicTimerSourceInfo from './PeriodicTimerSourceInfo';
import RoleSinkInfo from './RoleSinkInfo';

/**
 * The PeriodicTimerProperties model module.
 * @module model/PeriodicTimerProperties
 * @version 2019-08-01
 */
class PeriodicTimerProperties {
    /**
     * Constructs a new <code>PeriodicTimerProperties</code>.
     * Periodic timer trigger properties.
     * @alias module:model/PeriodicTimerProperties
     * @param sinkInfo {module:model/RoleSinkInfo} 
     * @param sourceInfo {module:model/PeriodicTimerSourceInfo} 
     */
    constructor(sinkInfo, sourceInfo) { 
        
        PeriodicTimerProperties.initialize(this, sinkInfo, sourceInfo);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, sinkInfo, sourceInfo) { 
        obj['sinkInfo'] = sinkInfo;
        obj['sourceInfo'] = sourceInfo;
    }

    /**
     * Constructs a <code>PeriodicTimerProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PeriodicTimerProperties} obj Optional instance to populate.
     * @return {module:model/PeriodicTimerProperties} The populated <code>PeriodicTimerProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PeriodicTimerProperties();

            if (data.hasOwnProperty('customContextTag')) {
                obj['customContextTag'] = ApiClient.convertToType(data['customContextTag'], 'String');
            }
            if (data.hasOwnProperty('sinkInfo')) {
                obj['sinkInfo'] = RoleSinkInfo.constructFromObject(data['sinkInfo']);
            }
            if (data.hasOwnProperty('sourceInfo')) {
                obj['sourceInfo'] = PeriodicTimerSourceInfo.constructFromObject(data['sourceInfo']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PeriodicTimerProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PeriodicTimerProperties</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PeriodicTimerProperties.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['customContextTag'] && !(typeof data['customContextTag'] === 'string' || data['customContextTag'] instanceof String)) {
            throw new Error("Expected the field `customContextTag` to be a primitive type in the JSON string but got " + data['customContextTag']);
        }
        // validate the optional field `sinkInfo`
        if (data['sinkInfo']) { // data not null
          RoleSinkInfo.validateJSON(data['sinkInfo']);
        }
        // validate the optional field `sourceInfo`
        if (data['sourceInfo']) { // data not null
          PeriodicTimerSourceInfo.validateJSON(data['sourceInfo']);
        }

        return true;
    }


}

PeriodicTimerProperties.RequiredProperties = ["sinkInfo", "sourceInfo"];

/**
 * A custom context tag typically used to correlate the trigger against its usage. For example, if a periodic timer trigger is intended for certain specific IoT modules in the device, the tag can be the name or the image URL of the module.
 * @member {String} customContextTag
 */
PeriodicTimerProperties.prototype['customContextTag'] = undefined;

/**
 * @member {module:model/RoleSinkInfo} sinkInfo
 */
PeriodicTimerProperties.prototype['sinkInfo'] = undefined;

/**
 * @member {module:model/PeriodicTimerSourceInfo} sourceInfo
 */
PeriodicTimerProperties.prototype['sourceInfo'] = undefined;






export default PeriodicTimerProperties;

