/**
 * DataBoxEdgeManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-08-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The StorageAccountProperties model module.
 * @module model/StorageAccountProperties
 * @version 2019-08-01
 */
class StorageAccountProperties {
    /**
     * Constructs a new <code>StorageAccountProperties</code>.
     * The storage account properties.
     * @alias module:model/StorageAccountProperties
     */
    constructor() { 
        
        StorageAccountProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>StorageAccountProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/StorageAccountProperties} obj Optional instance to populate.
     * @return {module:model/StorageAccountProperties} The populated <code>StorageAccountProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new StorageAccountProperties();

            if (data.hasOwnProperty('blobEndpoint')) {
                obj['blobEndpoint'] = ApiClient.convertToType(data['blobEndpoint'], 'String');
            }
            if (data.hasOwnProperty('containerCount')) {
                obj['containerCount'] = ApiClient.convertToType(data['containerCount'], 'Number');
            }
            if (data.hasOwnProperty('dataPolicy')) {
                obj['dataPolicy'] = ApiClient.convertToType(data['dataPolicy'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('storageAccountCredentialId')) {
                obj['storageAccountCredentialId'] = ApiClient.convertToType(data['storageAccountCredentialId'], 'String');
            }
            if (data.hasOwnProperty('storageAccountStatus')) {
                obj['storageAccountStatus'] = ApiClient.convertToType(data['storageAccountStatus'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>StorageAccountProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>StorageAccountProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['blobEndpoint'] && !(typeof data['blobEndpoint'] === 'string' || data['blobEndpoint'] instanceof String)) {
            throw new Error("Expected the field `blobEndpoint` to be a primitive type in the JSON string but got " + data['blobEndpoint']);
        }
        // ensure the json data is a string
        if (data['dataPolicy'] && !(typeof data['dataPolicy'] === 'string' || data['dataPolicy'] instanceof String)) {
            throw new Error("Expected the field `dataPolicy` to be a primitive type in the JSON string but got " + data['dataPolicy']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['storageAccountCredentialId'] && !(typeof data['storageAccountCredentialId'] === 'string' || data['storageAccountCredentialId'] instanceof String)) {
            throw new Error("Expected the field `storageAccountCredentialId` to be a primitive type in the JSON string but got " + data['storageAccountCredentialId']);
        }
        // ensure the json data is a string
        if (data['storageAccountStatus'] && !(typeof data['storageAccountStatus'] === 'string' || data['storageAccountStatus'] instanceof String)) {
            throw new Error("Expected the field `storageAccountStatus` to be a primitive type in the JSON string but got " + data['storageAccountStatus']);
        }

        return true;
    }


}



/**
 * BlobEndpoint of Storage Account
 * @member {String} blobEndpoint
 */
StorageAccountProperties.prototype['blobEndpoint'] = undefined;

/**
 * The Container Count. Present only for Storage Accounts with DataPolicy set to Cloud.
 * @member {Number} containerCount
 */
StorageAccountProperties.prototype['containerCount'] = undefined;

/**
 * Data policy of the storage Account.
 * @member {module:model/StorageAccountProperties.DataPolicyEnum} dataPolicy
 */
StorageAccountProperties.prototype['dataPolicy'] = undefined;

/**
 * Description for the storage Account.
 * @member {String} description
 */
StorageAccountProperties.prototype['description'] = undefined;

/**
 * Storage Account Credential Id
 * @member {String} storageAccountCredentialId
 */
StorageAccountProperties.prototype['storageAccountCredentialId'] = undefined;

/**
 * Current status of the storage account
 * @member {module:model/StorageAccountProperties.StorageAccountStatusEnum} storageAccountStatus
 */
StorageAccountProperties.prototype['storageAccountStatus'] = undefined;





/**
 * Allowed values for the <code>dataPolicy</code> property.
 * @enum {String}
 * @readonly
 */
StorageAccountProperties['DataPolicyEnum'] = {

    /**
     * value: "Cloud"
     * @const
     */
    "Cloud": "Cloud",

    /**
     * value: "Local"
     * @const
     */
    "Local": "Local"
};


/**
 * Allowed values for the <code>storageAccountStatus</code> property.
 * @enum {String}
 * @readonly
 */
StorageAccountProperties['StorageAccountStatusEnum'] = {

    /**
     * value: "OK"
     * @const
     */
    "OK": "OK",

    /**
     * value: "Offline"
     * @const
     */
    "Offline": "Offline",

    /**
     * value: "Unknown"
     * @const
     */
    "Unknown": "Unknown",

    /**
     * value: "Updating"
     * @const
     */
    "Updating": "Updating",

    /**
     * value: "NeedsAttention"
     * @const
     */
    "NeedsAttention": "NeedsAttention"
};



export default StorageAccountProperties;

