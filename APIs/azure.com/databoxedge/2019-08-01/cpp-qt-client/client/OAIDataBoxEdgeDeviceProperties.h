/**
 * DataBoxEdgeManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-08-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDataBoxEdgeDeviceProperties.h
 *
 * The properties of the Data Box Edge/Gateway device.
 */

#ifndef OAIDataBoxEdgeDeviceProperties_H
#define OAIDataBoxEdgeDeviceProperties_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDataBoxEdgeDeviceProperties : public OAIObject {
public:
    OAIDataBoxEdgeDeviceProperties();
    OAIDataBoxEdgeDeviceProperties(QString json);
    ~OAIDataBoxEdgeDeviceProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getConfiguredRoleTypes() const;
    void setConfiguredRoleTypes(const QList<QString> &configured_role_types);
    bool is_configured_role_types_Set() const;
    bool is_configured_role_types_Valid() const;

    QString getCulture() const;
    void setCulture(const QString &culture);
    bool is_culture_Set() const;
    bool is_culture_Valid() const;

    QString getDataBoxEdgeDeviceStatus() const;
    void setDataBoxEdgeDeviceStatus(const QString &data_box_edge_device_status);
    bool is_data_box_edge_device_status_Set() const;
    bool is_data_box_edge_device_status_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getDeviceHcsVersion() const;
    void setDeviceHcsVersion(const QString &device_hcs_version);
    bool is_device_hcs_version_Set() const;
    bool is_device_hcs_version_Valid() const;

    qint64 getDeviceLocalCapacity() const;
    void setDeviceLocalCapacity(const qint64 &device_local_capacity);
    bool is_device_local_capacity_Set() const;
    bool is_device_local_capacity_Valid() const;

    QString getDeviceModel() const;
    void setDeviceModel(const QString &device_model);
    bool is_device_model_Set() const;
    bool is_device_model_Valid() const;

    QString getDeviceSoftwareVersion() const;
    void setDeviceSoftwareVersion(const QString &device_software_version);
    bool is_device_software_version_Set() const;
    bool is_device_software_version_Valid() const;

    QString getDeviceType() const;
    void setDeviceType(const QString &device_type);
    bool is_device_type_Set() const;
    bool is_device_type_Valid() const;

    QString getFriendlyName() const;
    void setFriendlyName(const QString &friendly_name);
    bool is_friendly_name_Set() const;
    bool is_friendly_name_Valid() const;

    QString getModelDescription() const;
    void setModelDescription(const QString &model_description);
    bool is_model_description_Set() const;
    bool is_model_description_Valid() const;

    qint32 getNodeCount() const;
    void setNodeCount(const qint32 &node_count);
    bool is_node_count_Set() const;
    bool is_node_count_Valid() const;

    QString getSerialNumber() const;
    void setSerialNumber(const QString &serial_number);
    bool is_serial_number_Set() const;
    bool is_serial_number_Valid() const;

    QString getTimeZone() const;
    void setTimeZone(const QString &time_zone);
    bool is_time_zone_Set() const;
    bool is_time_zone_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_configured_role_types;
    bool m_configured_role_types_isSet;
    bool m_configured_role_types_isValid;

    QString m_culture;
    bool m_culture_isSet;
    bool m_culture_isValid;

    QString m_data_box_edge_device_status;
    bool m_data_box_edge_device_status_isSet;
    bool m_data_box_edge_device_status_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_device_hcs_version;
    bool m_device_hcs_version_isSet;
    bool m_device_hcs_version_isValid;

    qint64 m_device_local_capacity;
    bool m_device_local_capacity_isSet;
    bool m_device_local_capacity_isValid;

    QString m_device_model;
    bool m_device_model_isSet;
    bool m_device_model_isValid;

    QString m_device_software_version;
    bool m_device_software_version_isSet;
    bool m_device_software_version_isValid;

    QString m_device_type;
    bool m_device_type_isSet;
    bool m_device_type_isValid;

    QString m_friendly_name;
    bool m_friendly_name_isSet;
    bool m_friendly_name_isValid;

    QString m_model_description;
    bool m_model_description_isSet;
    bool m_model_description_isValid;

    qint32 m_node_count;
    bool m_node_count_isSet;
    bool m_node_count_isValid;

    QString m_serial_number;
    bool m_serial_number_isSet;
    bool m_serial_number_isValid;

    QString m_time_zone;
    bool m_time_zone_isSet;
    bool m_time_zone_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDataBoxEdgeDeviceProperties)

#endif // OAIDataBoxEdgeDeviceProperties_H
