/**
 * DataBoxEdgeManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-08-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOrderProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOrderProperties::OAIOrderProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOrderProperties::OAIOrderProperties() {
    this->initializeModel();
}

OAIOrderProperties::~OAIOrderProperties() {}

void OAIOrderProperties::initializeModel() {

    m_contact_information_isSet = false;
    m_contact_information_isValid = false;

    m_current_status_isSet = false;
    m_current_status_isValid = false;

    m_delivery_tracking_info_isSet = false;
    m_delivery_tracking_info_isValid = false;

    m_order_history_isSet = false;
    m_order_history_isValid = false;

    m_return_tracking_info_isSet = false;
    m_return_tracking_info_isValid = false;

    m_serial_number_isSet = false;
    m_serial_number_isValid = false;

    m_shipping_address_isSet = false;
    m_shipping_address_isValid = false;
}

void OAIOrderProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOrderProperties::fromJsonObject(QJsonObject json) {

    m_contact_information_isValid = ::OpenAPI::fromJsonValue(m_contact_information, json[QString("contactInformation")]);
    m_contact_information_isSet = !json[QString("contactInformation")].isNull() && m_contact_information_isValid;

    m_current_status_isValid = ::OpenAPI::fromJsonValue(m_current_status, json[QString("currentStatus")]);
    m_current_status_isSet = !json[QString("currentStatus")].isNull() && m_current_status_isValid;

    m_delivery_tracking_info_isValid = ::OpenAPI::fromJsonValue(m_delivery_tracking_info, json[QString("deliveryTrackingInfo")]);
    m_delivery_tracking_info_isSet = !json[QString("deliveryTrackingInfo")].isNull() && m_delivery_tracking_info_isValid;

    m_order_history_isValid = ::OpenAPI::fromJsonValue(m_order_history, json[QString("orderHistory")]);
    m_order_history_isSet = !json[QString("orderHistory")].isNull() && m_order_history_isValid;

    m_return_tracking_info_isValid = ::OpenAPI::fromJsonValue(m_return_tracking_info, json[QString("returnTrackingInfo")]);
    m_return_tracking_info_isSet = !json[QString("returnTrackingInfo")].isNull() && m_return_tracking_info_isValid;

    m_serial_number_isValid = ::OpenAPI::fromJsonValue(m_serial_number, json[QString("serialNumber")]);
    m_serial_number_isSet = !json[QString("serialNumber")].isNull() && m_serial_number_isValid;

    m_shipping_address_isValid = ::OpenAPI::fromJsonValue(m_shipping_address, json[QString("shippingAddress")]);
    m_shipping_address_isSet = !json[QString("shippingAddress")].isNull() && m_shipping_address_isValid;
}

QString OAIOrderProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOrderProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_contact_information.isSet()) {
        obj.insert(QString("contactInformation"), ::OpenAPI::toJsonValue(m_contact_information));
    }
    if (m_current_status.isSet()) {
        obj.insert(QString("currentStatus"), ::OpenAPI::toJsonValue(m_current_status));
    }
    if (m_delivery_tracking_info.size() > 0) {
        obj.insert(QString("deliveryTrackingInfo"), ::OpenAPI::toJsonValue(m_delivery_tracking_info));
    }
    if (m_order_history.size() > 0) {
        obj.insert(QString("orderHistory"), ::OpenAPI::toJsonValue(m_order_history));
    }
    if (m_return_tracking_info.size() > 0) {
        obj.insert(QString("returnTrackingInfo"), ::OpenAPI::toJsonValue(m_return_tracking_info));
    }
    if (m_serial_number_isSet) {
        obj.insert(QString("serialNumber"), ::OpenAPI::toJsonValue(m_serial_number));
    }
    if (m_shipping_address.isSet()) {
        obj.insert(QString("shippingAddress"), ::OpenAPI::toJsonValue(m_shipping_address));
    }
    return obj;
}

OAIContactDetails OAIOrderProperties::getContactInformation() const {
    return m_contact_information;
}
void OAIOrderProperties::setContactInformation(const OAIContactDetails &contact_information) {
    m_contact_information = contact_information;
    m_contact_information_isSet = true;
}

bool OAIOrderProperties::is_contact_information_Set() const{
    return m_contact_information_isSet;
}

bool OAIOrderProperties::is_contact_information_Valid() const{
    return m_contact_information_isValid;
}

OAIOrderStatus OAIOrderProperties::getCurrentStatus() const {
    return m_current_status;
}
void OAIOrderProperties::setCurrentStatus(const OAIOrderStatus &current_status) {
    m_current_status = current_status;
    m_current_status_isSet = true;
}

bool OAIOrderProperties::is_current_status_Set() const{
    return m_current_status_isSet;
}

bool OAIOrderProperties::is_current_status_Valid() const{
    return m_current_status_isValid;
}

QList<OAITrackingInfo> OAIOrderProperties::getDeliveryTrackingInfo() const {
    return m_delivery_tracking_info;
}
void OAIOrderProperties::setDeliveryTrackingInfo(const QList<OAITrackingInfo> &delivery_tracking_info) {
    m_delivery_tracking_info = delivery_tracking_info;
    m_delivery_tracking_info_isSet = true;
}

bool OAIOrderProperties::is_delivery_tracking_info_Set() const{
    return m_delivery_tracking_info_isSet;
}

bool OAIOrderProperties::is_delivery_tracking_info_Valid() const{
    return m_delivery_tracking_info_isValid;
}

QList<OAIOrderStatus> OAIOrderProperties::getOrderHistory() const {
    return m_order_history;
}
void OAIOrderProperties::setOrderHistory(const QList<OAIOrderStatus> &order_history) {
    m_order_history = order_history;
    m_order_history_isSet = true;
}

bool OAIOrderProperties::is_order_history_Set() const{
    return m_order_history_isSet;
}

bool OAIOrderProperties::is_order_history_Valid() const{
    return m_order_history_isValid;
}

QList<OAITrackingInfo> OAIOrderProperties::getReturnTrackingInfo() const {
    return m_return_tracking_info;
}
void OAIOrderProperties::setReturnTrackingInfo(const QList<OAITrackingInfo> &return_tracking_info) {
    m_return_tracking_info = return_tracking_info;
    m_return_tracking_info_isSet = true;
}

bool OAIOrderProperties::is_return_tracking_info_Set() const{
    return m_return_tracking_info_isSet;
}

bool OAIOrderProperties::is_return_tracking_info_Valid() const{
    return m_return_tracking_info_isValid;
}

QString OAIOrderProperties::getSerialNumber() const {
    return m_serial_number;
}
void OAIOrderProperties::setSerialNumber(const QString &serial_number) {
    m_serial_number = serial_number;
    m_serial_number_isSet = true;
}

bool OAIOrderProperties::is_serial_number_Set() const{
    return m_serial_number_isSet;
}

bool OAIOrderProperties::is_serial_number_Valid() const{
    return m_serial_number_isValid;
}

OAIAddress OAIOrderProperties::getShippingAddress() const {
    return m_shipping_address;
}
void OAIOrderProperties::setShippingAddress(const OAIAddress &shipping_address) {
    m_shipping_address = shipping_address;
    m_shipping_address_isSet = true;
}

bool OAIOrderProperties::is_shipping_address_Set() const{
    return m_shipping_address_isSet;
}

bool OAIOrderProperties::is_shipping_address_Valid() const{
    return m_shipping_address_isValid;
}

bool OAIOrderProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_contact_information.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_current_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_delivery_tracking_info.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_history.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_return_tracking_info.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_serial_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipping_address.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOrderProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_contact_information_isValid && m_shipping_address_isValid && true;
}

} // namespace OpenAPI
