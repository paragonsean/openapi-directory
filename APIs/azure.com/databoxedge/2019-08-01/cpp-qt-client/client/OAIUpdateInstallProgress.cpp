/**
 * DataBoxEdgeManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-08-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateInstallProgress.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateInstallProgress::OAIUpdateInstallProgress(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateInstallProgress::OAIUpdateInstallProgress() {
    this->initializeModel();
}

OAIUpdateInstallProgress::~OAIUpdateInstallProgress() {}

void OAIUpdateInstallProgress::initializeModel() {

    m_number_of_updates_installed_isSet = false;
    m_number_of_updates_installed_isValid = false;

    m_number_of_updates_to_install_isSet = false;
    m_number_of_updates_to_install_isValid = false;

    m_percent_complete_isSet = false;
    m_percent_complete_isValid = false;
}

void OAIUpdateInstallProgress::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateInstallProgress::fromJsonObject(QJsonObject json) {

    m_number_of_updates_installed_isValid = ::OpenAPI::fromJsonValue(m_number_of_updates_installed, json[QString("numberOfUpdatesInstalled")]);
    m_number_of_updates_installed_isSet = !json[QString("numberOfUpdatesInstalled")].isNull() && m_number_of_updates_installed_isValid;

    m_number_of_updates_to_install_isValid = ::OpenAPI::fromJsonValue(m_number_of_updates_to_install, json[QString("numberOfUpdatesToInstall")]);
    m_number_of_updates_to_install_isSet = !json[QString("numberOfUpdatesToInstall")].isNull() && m_number_of_updates_to_install_isValid;

    m_percent_complete_isValid = ::OpenAPI::fromJsonValue(m_percent_complete, json[QString("percentComplete")]);
    m_percent_complete_isSet = !json[QString("percentComplete")].isNull() && m_percent_complete_isValid;
}

QString OAIUpdateInstallProgress::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateInstallProgress::asJsonObject() const {
    QJsonObject obj;
    if (m_number_of_updates_installed_isSet) {
        obj.insert(QString("numberOfUpdatesInstalled"), ::OpenAPI::toJsonValue(m_number_of_updates_installed));
    }
    if (m_number_of_updates_to_install_isSet) {
        obj.insert(QString("numberOfUpdatesToInstall"), ::OpenAPI::toJsonValue(m_number_of_updates_to_install));
    }
    if (m_percent_complete_isSet) {
        obj.insert(QString("percentComplete"), ::OpenAPI::toJsonValue(m_percent_complete));
    }
    return obj;
}

qint32 OAIUpdateInstallProgress::getNumberOfUpdatesInstalled() const {
    return m_number_of_updates_installed;
}
void OAIUpdateInstallProgress::setNumberOfUpdatesInstalled(const qint32 &number_of_updates_installed) {
    m_number_of_updates_installed = number_of_updates_installed;
    m_number_of_updates_installed_isSet = true;
}

bool OAIUpdateInstallProgress::is_number_of_updates_installed_Set() const{
    return m_number_of_updates_installed_isSet;
}

bool OAIUpdateInstallProgress::is_number_of_updates_installed_Valid() const{
    return m_number_of_updates_installed_isValid;
}

qint32 OAIUpdateInstallProgress::getNumberOfUpdatesToInstall() const {
    return m_number_of_updates_to_install;
}
void OAIUpdateInstallProgress::setNumberOfUpdatesToInstall(const qint32 &number_of_updates_to_install) {
    m_number_of_updates_to_install = number_of_updates_to_install;
    m_number_of_updates_to_install_isSet = true;
}

bool OAIUpdateInstallProgress::is_number_of_updates_to_install_Set() const{
    return m_number_of_updates_to_install_isSet;
}

bool OAIUpdateInstallProgress::is_number_of_updates_to_install_Valid() const{
    return m_number_of_updates_to_install_isValid;
}

qint32 OAIUpdateInstallProgress::getPercentComplete() const {
    return m_percent_complete;
}
void OAIUpdateInstallProgress::setPercentComplete(const qint32 &percent_complete) {
    m_percent_complete = percent_complete;
    m_percent_complete_isSet = true;
}

bool OAIUpdateInstallProgress::is_percent_complete_Set() const{
    return m_percent_complete_isSet;
}

bool OAIUpdateInstallProgress::is_percent_complete_Valid() const{
    return m_percent_complete_isValid;
}

bool OAIUpdateInstallProgress::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_number_of_updates_installed_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_number_of_updates_to_install_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_percent_complete_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateInstallProgress::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
