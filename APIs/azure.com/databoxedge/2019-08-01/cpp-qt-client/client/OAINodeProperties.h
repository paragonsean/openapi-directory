/**
 * DataBoxEdgeManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-08-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINodeProperties.h
 *
 * This class represents the nodes in a highly available cluster
 */

#ifndef OAINodeProperties_H
#define OAINodeProperties_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAINodeProperties : public OAIObject {
public:
    OAINodeProperties();
    OAINodeProperties(QString json);
    ~OAINodeProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getNodeChassisSerialNumber() const;
    void setNodeChassisSerialNumber(const QString &node_chassis_serial_number);
    bool is_node_chassis_serial_number_Set() const;
    bool is_node_chassis_serial_number_Valid() const;

    QString getNodeDisplayName() const;
    void setNodeDisplayName(const QString &node_display_name);
    bool is_node_display_name_Set() const;
    bool is_node_display_name_Valid() const;

    QString getNodeFriendlySoftwareVersion() const;
    void setNodeFriendlySoftwareVersion(const QString &node_friendly_software_version);
    bool is_node_friendly_software_version_Set() const;
    bool is_node_friendly_software_version_Valid() const;

    QString getNodeHcsVersion() const;
    void setNodeHcsVersion(const QString &node_hcs_version);
    bool is_node_hcs_version_Set() const;
    bool is_node_hcs_version_Valid() const;

    QString getNodeInstanceId() const;
    void setNodeInstanceId(const QString &node_instance_id);
    bool is_node_instance_id_Set() const;
    bool is_node_instance_id_Valid() const;

    QString getNodeSerialNumber() const;
    void setNodeSerialNumber(const QString &node_serial_number);
    bool is_node_serial_number_Set() const;
    bool is_node_serial_number_Valid() const;

    QString getNodeStatus() const;
    void setNodeStatus(const QString &node_status);
    bool is_node_status_Set() const;
    bool is_node_status_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_node_chassis_serial_number;
    bool m_node_chassis_serial_number_isSet;
    bool m_node_chassis_serial_number_isValid;

    QString m_node_display_name;
    bool m_node_display_name_isSet;
    bool m_node_display_name_isValid;

    QString m_node_friendly_software_version;
    bool m_node_friendly_software_version_isSet;
    bool m_node_friendly_software_version_isValid;

    QString m_node_hcs_version;
    bool m_node_hcs_version_isSet;
    bool m_node_hcs_version_isValid;

    QString m_node_instance_id;
    bool m_node_instance_id_isSet;
    bool m_node_instance_id_isValid;

    QString m_node_serial_number;
    bool m_node_serial_number_isSet;
    bool m_node_serial_number_isValid;

    QString m_node_status;
    bool m_node_status_isSet;
    bool m_node_status_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINodeProperties)

#endif // OAINodeProperties_H
