# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RoleSinkInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, role_id: str=None):
        """RoleSinkInfo - a model defined in OpenAPI

        :param role_id: The role_id of this RoleSinkInfo.
        """
        self.openapi_types = {
            'role_id': str
        }

        self.attribute_map = {
            'role_id': 'roleId'
        }

        self._role_id = role_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RoleSinkInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RoleSinkInfo of this RoleSinkInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def role_id(self):
        """Gets the role_id of this RoleSinkInfo.

        Compute role ID.

        :return: The role_id of this RoleSinkInfo.
        :rtype: str
        """
        return self._role_id

    @role_id.setter
    def role_id(self, role_id):
        """Sets the role_id of this RoleSinkInfo.

        Compute role ID.

        :param role_id: The role_id of this RoleSinkInfo.
        :type role_id: str
        """
        if role_id is None:
            raise ValueError("Invalid value for `role_id`, must not be `None`")

        self._role_id = role_id
