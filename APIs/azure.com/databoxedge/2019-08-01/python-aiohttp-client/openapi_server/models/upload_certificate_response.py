# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UploadCertificateResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, aad_audience: str=None, aad_authority: str=None, aad_tenant_id: str=None, auth_type: str=None, azure_management_endpoint_audience: str=None, resource_id: str=None, service_principal_client_id: str=None, service_principal_object_id: str=None):
        """UploadCertificateResponse - a model defined in OpenAPI

        :param aad_audience: The aad_audience of this UploadCertificateResponse.
        :param aad_authority: The aad_authority of this UploadCertificateResponse.
        :param aad_tenant_id: The aad_tenant_id of this UploadCertificateResponse.
        :param auth_type: The auth_type of this UploadCertificateResponse.
        :param azure_management_endpoint_audience: The azure_management_endpoint_audience of this UploadCertificateResponse.
        :param resource_id: The resource_id of this UploadCertificateResponse.
        :param service_principal_client_id: The service_principal_client_id of this UploadCertificateResponse.
        :param service_principal_object_id: The service_principal_object_id of this UploadCertificateResponse.
        """
        self.openapi_types = {
            'aad_audience': str,
            'aad_authority': str,
            'aad_tenant_id': str,
            'auth_type': str,
            'azure_management_endpoint_audience': str,
            'resource_id': str,
            'service_principal_client_id': str,
            'service_principal_object_id': str
        }

        self.attribute_map = {
            'aad_audience': 'aadAudience',
            'aad_authority': 'aadAuthority',
            'aad_tenant_id': 'aadTenantId',
            'auth_type': 'authType',
            'azure_management_endpoint_audience': 'azureManagementEndpointAudience',
            'resource_id': 'resourceId',
            'service_principal_client_id': 'servicePrincipalClientId',
            'service_principal_object_id': 'servicePrincipalObjectId'
        }

        self._aad_audience = aad_audience
        self._aad_authority = aad_authority
        self._aad_tenant_id = aad_tenant_id
        self._auth_type = auth_type
        self._azure_management_endpoint_audience = azure_management_endpoint_audience
        self._resource_id = resource_id
        self._service_principal_client_id = service_principal_client_id
        self._service_principal_object_id = service_principal_object_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UploadCertificateResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UploadCertificateResponse of this UploadCertificateResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def aad_audience(self):
        """Gets the aad_audience of this UploadCertificateResponse.

        Identifier of the target resource that is the recipient of the requested token.

        :return: The aad_audience of this UploadCertificateResponse.
        :rtype: str
        """
        return self._aad_audience

    @aad_audience.setter
    def aad_audience(self, aad_audience):
        """Sets the aad_audience of this UploadCertificateResponse.

        Identifier of the target resource that is the recipient of the requested token.

        :param aad_audience: The aad_audience of this UploadCertificateResponse.
        :type aad_audience: str
        """

        self._aad_audience = aad_audience

    @property
    def aad_authority(self):
        """Gets the aad_authority of this UploadCertificateResponse.

        Azure Active Directory tenant authority.

        :return: The aad_authority of this UploadCertificateResponse.
        :rtype: str
        """
        return self._aad_authority

    @aad_authority.setter
    def aad_authority(self, aad_authority):
        """Sets the aad_authority of this UploadCertificateResponse.

        Azure Active Directory tenant authority.

        :param aad_authority: The aad_authority of this UploadCertificateResponse.
        :type aad_authority: str
        """

        self._aad_authority = aad_authority

    @property
    def aad_tenant_id(self):
        """Gets the aad_tenant_id of this UploadCertificateResponse.

        Azure Active Directory tenant ID.

        :return: The aad_tenant_id of this UploadCertificateResponse.
        :rtype: str
        """
        return self._aad_tenant_id

    @aad_tenant_id.setter
    def aad_tenant_id(self, aad_tenant_id):
        """Sets the aad_tenant_id of this UploadCertificateResponse.

        Azure Active Directory tenant ID.

        :param aad_tenant_id: The aad_tenant_id of this UploadCertificateResponse.
        :type aad_tenant_id: str
        """

        self._aad_tenant_id = aad_tenant_id

    @property
    def auth_type(self):
        """Gets the auth_type of this UploadCertificateResponse.

        Specifies authentication type.

        :return: The auth_type of this UploadCertificateResponse.
        :rtype: str
        """
        return self._auth_type

    @auth_type.setter
    def auth_type(self, auth_type):
        """Sets the auth_type of this UploadCertificateResponse.

        Specifies authentication type.

        :param auth_type: The auth_type of this UploadCertificateResponse.
        :type auth_type: str
        """
        allowed_values = ["Invalid", "AzureActiveDirectory"]  # noqa: E501
        if auth_type not in allowed_values:
            raise ValueError(
                "Invalid value for `auth_type` ({0}), must be one of {1}"
                .format(auth_type, allowed_values)
            )

        self._auth_type = auth_type

    @property
    def azure_management_endpoint_audience(self):
        """Gets the azure_management_endpoint_audience of this UploadCertificateResponse.

        The azure management endpoint audience.

        :return: The azure_management_endpoint_audience of this UploadCertificateResponse.
        :rtype: str
        """
        return self._azure_management_endpoint_audience

    @azure_management_endpoint_audience.setter
    def azure_management_endpoint_audience(self, azure_management_endpoint_audience):
        """Sets the azure_management_endpoint_audience of this UploadCertificateResponse.

        The azure management endpoint audience.

        :param azure_management_endpoint_audience: The azure_management_endpoint_audience of this UploadCertificateResponse.
        :type azure_management_endpoint_audience: str
        """

        self._azure_management_endpoint_audience = azure_management_endpoint_audience

    @property
    def resource_id(self):
        """Gets the resource_id of this UploadCertificateResponse.

        The resource ID of the Data Box Edge/Gateway device.

        :return: The resource_id of this UploadCertificateResponse.
        :rtype: str
        """
        return self._resource_id

    @resource_id.setter
    def resource_id(self, resource_id):
        """Sets the resource_id of this UploadCertificateResponse.

        The resource ID of the Data Box Edge/Gateway device.

        :param resource_id: The resource_id of this UploadCertificateResponse.
        :type resource_id: str
        """

        self._resource_id = resource_id

    @property
    def service_principal_client_id(self):
        """Gets the service_principal_client_id of this UploadCertificateResponse.

        Azure Active Directory service principal client ID.

        :return: The service_principal_client_id of this UploadCertificateResponse.
        :rtype: str
        """
        return self._service_principal_client_id

    @service_principal_client_id.setter
    def service_principal_client_id(self, service_principal_client_id):
        """Sets the service_principal_client_id of this UploadCertificateResponse.

        Azure Active Directory service principal client ID.

        :param service_principal_client_id: The service_principal_client_id of this UploadCertificateResponse.
        :type service_principal_client_id: str
        """

        self._service_principal_client_id = service_principal_client_id

    @property
    def service_principal_object_id(self):
        """Gets the service_principal_object_id of this UploadCertificateResponse.

        Azure Active Directory service principal object ID.

        :return: The service_principal_object_id of this UploadCertificateResponse.
        :rtype: str
        """
        return self._service_principal_object_id

    @service_principal_object_id.setter
    def service_principal_object_id(self, service_principal_object_id):
        """Sets the service_principal_object_id of this UploadCertificateResponse.

        Azure Active Directory service principal object ID.

        :param service_principal_object_id: The service_principal_object_id of this UploadCertificateResponse.
        :type service_principal_object_id: str
        """

        self._service_principal_object_id = service_principal_object_id
