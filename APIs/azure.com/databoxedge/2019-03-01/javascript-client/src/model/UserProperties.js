/**
 * DataBoxEdgeManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-03-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AsymmetricEncryptedSecret from './AsymmetricEncryptedSecret';
import ShareAccessRight from './ShareAccessRight';

/**
 * The UserProperties model module.
 * @module model/UserProperties
 * @version 2019-03-01
 */
class UserProperties {
    /**
     * Constructs a new <code>UserProperties</code>.
     * The user properties.
     * @alias module:model/UserProperties
     */
    constructor() { 
        
        UserProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UserProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UserProperties} obj Optional instance to populate.
     * @return {module:model/UserProperties} The populated <code>UserProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UserProperties();

            if (data.hasOwnProperty('encryptedPassword')) {
                obj['encryptedPassword'] = AsymmetricEncryptedSecret.constructFromObject(data['encryptedPassword']);
            }
            if (data.hasOwnProperty('shareAccessRights')) {
                obj['shareAccessRights'] = ApiClient.convertToType(data['shareAccessRights'], [ShareAccessRight]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UserProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UserProperties</code>.
     */
    static validateJSON(data) {
        // validate the optional field `encryptedPassword`
        if (data['encryptedPassword']) { // data not null
          AsymmetricEncryptedSecret.validateJSON(data['encryptedPassword']);
        }
        if (data['shareAccessRights']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['shareAccessRights'])) {
                throw new Error("Expected the field `shareAccessRights` to be an array in the JSON data but got " + data['shareAccessRights']);
            }
            // validate the optional field `shareAccessRights` (array)
            for (const item of data['shareAccessRights']) {
                ShareAccessRight.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {module:model/AsymmetricEncryptedSecret} encryptedPassword
 */
UserProperties.prototype['encryptedPassword'] = undefined;

/**
 * List of shares that the user has rights on. This field should not be specified during user creation.
 * @member {Array.<module:model/ShareAccessRight>} shareAccessRights
 */
UserProperties.prototype['shareAccessRights'] = undefined;






export default UserProperties;

