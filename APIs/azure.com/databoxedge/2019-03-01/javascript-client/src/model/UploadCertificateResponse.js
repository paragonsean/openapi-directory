/**
 * DataBoxEdgeManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-03-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UploadCertificateResponse model module.
 * @module model/UploadCertificateResponse
 * @version 2019-03-01
 */
class UploadCertificateResponse {
    /**
     * Constructs a new <code>UploadCertificateResponse</code>.
     * The upload registration certificate response.
     * @alias module:model/UploadCertificateResponse
     * @param aadAuthority {String} Azure Active Directory tenant authority.
     * @param aadTenantId {String} Azure Active Directory tenant ID.
     * @param azureManagementEndpointAudience {String} The azure management endpoint audience.
     * @param resourceId {String} The resource ID of the Data Box Edge/Gateway device.
     * @param servicePrincipalClientId {String} Azure Active Directory service principal client ID.
     * @param servicePrincipalObjectId {String} Azure Active Directory service principal object ID.
     */
    constructor(aadAuthority, aadTenantId, azureManagementEndpointAudience, resourceId, servicePrincipalClientId, servicePrincipalObjectId) { 
        
        UploadCertificateResponse.initialize(this, aadAuthority, aadTenantId, azureManagementEndpointAudience, resourceId, servicePrincipalClientId, servicePrincipalObjectId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, aadAuthority, aadTenantId, azureManagementEndpointAudience, resourceId, servicePrincipalClientId, servicePrincipalObjectId) { 
        obj['aadAuthority'] = aadAuthority;
        obj['aadTenantId'] = aadTenantId;
        obj['azureManagementEndpointAudience'] = azureManagementEndpointAudience;
        obj['resourceId'] = resourceId;
        obj['servicePrincipalClientId'] = servicePrincipalClientId;
        obj['servicePrincipalObjectId'] = servicePrincipalObjectId;
    }

    /**
     * Constructs a <code>UploadCertificateResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UploadCertificateResponse} obj Optional instance to populate.
     * @return {module:model/UploadCertificateResponse} The populated <code>UploadCertificateResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UploadCertificateResponse();

            if (data.hasOwnProperty('aadAuthority')) {
                obj['aadAuthority'] = ApiClient.convertToType(data['aadAuthority'], 'String');
            }
            if (data.hasOwnProperty('aadTenantId')) {
                obj['aadTenantId'] = ApiClient.convertToType(data['aadTenantId'], 'String');
            }
            if (data.hasOwnProperty('authType')) {
                obj['authType'] = ApiClient.convertToType(data['authType'], 'String');
            }
            if (data.hasOwnProperty('azureManagementEndpointAudience')) {
                obj['azureManagementEndpointAudience'] = ApiClient.convertToType(data['azureManagementEndpointAudience'], 'String');
            }
            if (data.hasOwnProperty('resourceId')) {
                obj['resourceId'] = ApiClient.convertToType(data['resourceId'], 'String');
            }
            if (data.hasOwnProperty('servicePrincipalClientId')) {
                obj['servicePrincipalClientId'] = ApiClient.convertToType(data['servicePrincipalClientId'], 'String');
            }
            if (data.hasOwnProperty('servicePrincipalObjectId')) {
                obj['servicePrincipalObjectId'] = ApiClient.convertToType(data['servicePrincipalObjectId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UploadCertificateResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UploadCertificateResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of UploadCertificateResponse.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['aadAuthority'] && !(typeof data['aadAuthority'] === 'string' || data['aadAuthority'] instanceof String)) {
            throw new Error("Expected the field `aadAuthority` to be a primitive type in the JSON string but got " + data['aadAuthority']);
        }
        // ensure the json data is a string
        if (data['aadTenantId'] && !(typeof data['aadTenantId'] === 'string' || data['aadTenantId'] instanceof String)) {
            throw new Error("Expected the field `aadTenantId` to be a primitive type in the JSON string but got " + data['aadTenantId']);
        }
        // ensure the json data is a string
        if (data['authType'] && !(typeof data['authType'] === 'string' || data['authType'] instanceof String)) {
            throw new Error("Expected the field `authType` to be a primitive type in the JSON string but got " + data['authType']);
        }
        // ensure the json data is a string
        if (data['azureManagementEndpointAudience'] && !(typeof data['azureManagementEndpointAudience'] === 'string' || data['azureManagementEndpointAudience'] instanceof String)) {
            throw new Error("Expected the field `azureManagementEndpointAudience` to be a primitive type in the JSON string but got " + data['azureManagementEndpointAudience']);
        }
        // ensure the json data is a string
        if (data['resourceId'] && !(typeof data['resourceId'] === 'string' || data['resourceId'] instanceof String)) {
            throw new Error("Expected the field `resourceId` to be a primitive type in the JSON string but got " + data['resourceId']);
        }
        // ensure the json data is a string
        if (data['servicePrincipalClientId'] && !(typeof data['servicePrincipalClientId'] === 'string' || data['servicePrincipalClientId'] instanceof String)) {
            throw new Error("Expected the field `servicePrincipalClientId` to be a primitive type in the JSON string but got " + data['servicePrincipalClientId']);
        }
        // ensure the json data is a string
        if (data['servicePrincipalObjectId'] && !(typeof data['servicePrincipalObjectId'] === 'string' || data['servicePrincipalObjectId'] instanceof String)) {
            throw new Error("Expected the field `servicePrincipalObjectId` to be a primitive type in the JSON string but got " + data['servicePrincipalObjectId']);
        }

        return true;
    }


}

UploadCertificateResponse.RequiredProperties = ["aadAuthority", "aadTenantId", "azureManagementEndpointAudience", "resourceId", "servicePrincipalClientId", "servicePrincipalObjectId"];

/**
 * Azure Active Directory tenant authority.
 * @member {String} aadAuthority
 */
UploadCertificateResponse.prototype['aadAuthority'] = undefined;

/**
 * Azure Active Directory tenant ID.
 * @member {String} aadTenantId
 */
UploadCertificateResponse.prototype['aadTenantId'] = undefined;

/**
 * Specifies authentication type.
 * @member {module:model/UploadCertificateResponse.AuthTypeEnum} authType
 */
UploadCertificateResponse.prototype['authType'] = undefined;

/**
 * The azure management endpoint audience.
 * @member {String} azureManagementEndpointAudience
 */
UploadCertificateResponse.prototype['azureManagementEndpointAudience'] = undefined;

/**
 * The resource ID of the Data Box Edge/Gateway device.
 * @member {String} resourceId
 */
UploadCertificateResponse.prototype['resourceId'] = undefined;

/**
 * Azure Active Directory service principal client ID.
 * @member {String} servicePrincipalClientId
 */
UploadCertificateResponse.prototype['servicePrincipalClientId'] = undefined;

/**
 * Azure Active Directory service principal object ID.
 * @member {String} servicePrincipalObjectId
 */
UploadCertificateResponse.prototype['servicePrincipalObjectId'] = undefined;





/**
 * Allowed values for the <code>authType</code> property.
 * @enum {String}
 * @readonly
 */
UploadCertificateResponse['AuthTypeEnum'] = {

    /**
     * value: "Invalid"
     * @const
     */
    "Invalid": "Invalid",

    /**
     * value: "AzureActiveDirectory"
     * @const
     */
    "AzureActiveDirectory": "AzureActiveDirectory"
};



export default UploadCertificateResponse;

