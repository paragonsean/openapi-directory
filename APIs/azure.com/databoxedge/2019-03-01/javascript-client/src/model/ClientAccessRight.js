/**
 * DataBoxEdgeManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-03-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ClientAccessRight model module.
 * @module model/ClientAccessRight
 * @version 2019-03-01
 */
class ClientAccessRight {
    /**
     * Constructs a new <code>ClientAccessRight</code>.
     * The mapping between a particular client IP and the type of access client has on the NFS share.
     * @alias module:model/ClientAccessRight
     * @param accessPermission {module:model/ClientAccessRight.AccessPermissionEnum} Type of access to be allowed for the client.
     * @param client {String} IP of the client.
     */
    constructor(accessPermission, client) { 
        
        ClientAccessRight.initialize(this, accessPermission, client);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, accessPermission, client) { 
        obj['accessPermission'] = accessPermission;
        obj['client'] = client;
    }

    /**
     * Constructs a <code>ClientAccessRight</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ClientAccessRight} obj Optional instance to populate.
     * @return {module:model/ClientAccessRight} The populated <code>ClientAccessRight</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ClientAccessRight();

            if (data.hasOwnProperty('accessPermission')) {
                obj['accessPermission'] = ApiClient.convertToType(data['accessPermission'], 'String');
            }
            if (data.hasOwnProperty('client')) {
                obj['client'] = ApiClient.convertToType(data['client'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ClientAccessRight</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ClientAccessRight</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ClientAccessRight.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['accessPermission'] && !(typeof data['accessPermission'] === 'string' || data['accessPermission'] instanceof String)) {
            throw new Error("Expected the field `accessPermission` to be a primitive type in the JSON string but got " + data['accessPermission']);
        }
        // ensure the json data is a string
        if (data['client'] && !(typeof data['client'] === 'string' || data['client'] instanceof String)) {
            throw new Error("Expected the field `client` to be a primitive type in the JSON string but got " + data['client']);
        }

        return true;
    }


}

ClientAccessRight.RequiredProperties = ["accessPermission", "client"];

/**
 * Type of access to be allowed for the client.
 * @member {module:model/ClientAccessRight.AccessPermissionEnum} accessPermission
 */
ClientAccessRight.prototype['accessPermission'] = undefined;

/**
 * IP of the client.
 * @member {String} client
 */
ClientAccessRight.prototype['client'] = undefined;





/**
 * Allowed values for the <code>accessPermission</code> property.
 * @enum {String}
 * @readonly
 */
ClientAccessRight['AccessPermissionEnum'] = {

    /**
     * value: "NoAccess"
     * @const
     */
    "NoAccess": "NoAccess",

    /**
     * value: "ReadOnly"
     * @const
     */
    "ReadOnly": "ReadOnly",

    /**
     * value: "ReadWrite"
     * @const
     */
    "ReadWrite": "ReadWrite"
};



export default ClientAccessRight;

