# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AzureContainerInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, container_name: str=None, data_format: str=None, storage_account_credential_id: str=None):
        """AzureContainerInfo - a model defined in OpenAPI

        :param container_name: The container_name of this AzureContainerInfo.
        :param data_format: The data_format of this AzureContainerInfo.
        :param storage_account_credential_id: The storage_account_credential_id of this AzureContainerInfo.
        """
        self.openapi_types = {
            'container_name': str,
            'data_format': str,
            'storage_account_credential_id': str
        }

        self.attribute_map = {
            'container_name': 'containerName',
            'data_format': 'dataFormat',
            'storage_account_credential_id': 'storageAccountCredentialId'
        }

        self._container_name = container_name
        self._data_format = data_format
        self._storage_account_credential_id = storage_account_credential_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AzureContainerInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AzureContainerInfo of this AzureContainerInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def container_name(self):
        """Gets the container_name of this AzureContainerInfo.

        Container name (Based on the data format specified, this represents the name of Azure Files/Page blob/Block blob).

        :return: The container_name of this AzureContainerInfo.
        :rtype: str
        """
        return self._container_name

    @container_name.setter
    def container_name(self, container_name):
        """Sets the container_name of this AzureContainerInfo.

        Container name (Based on the data format specified, this represents the name of Azure Files/Page blob/Block blob).

        :param container_name: The container_name of this AzureContainerInfo.
        :type container_name: str
        """
        if container_name is None:
            raise ValueError("Invalid value for `container_name`, must not be `None`")

        self._container_name = container_name

    @property
    def data_format(self):
        """Gets the data_format of this AzureContainerInfo.

        Storage format used for the file represented by the share.

        :return: The data_format of this AzureContainerInfo.
        :rtype: str
        """
        return self._data_format

    @data_format.setter
    def data_format(self, data_format):
        """Sets the data_format of this AzureContainerInfo.

        Storage format used for the file represented by the share.

        :param data_format: The data_format of this AzureContainerInfo.
        :type data_format: str
        """
        allowed_values = ["BlockBlob", "PageBlob", "AzureFile"]  # noqa: E501
        if data_format not in allowed_values:
            raise ValueError(
                "Invalid value for `data_format` ({0}), must be one of {1}"
                .format(data_format, allowed_values)
            )

        self._data_format = data_format

    @property
    def storage_account_credential_id(self):
        """Gets the storage_account_credential_id of this AzureContainerInfo.

        ID of the storage account credential used to access storage.

        :return: The storage_account_credential_id of this AzureContainerInfo.
        :rtype: str
        """
        return self._storage_account_credential_id

    @storage_account_credential_id.setter
    def storage_account_credential_id(self, storage_account_credential_id):
        """Sets the storage_account_credential_id of this AzureContainerInfo.

        ID of the storage account credential used to access storage.

        :param storage_account_credential_id: The storage_account_credential_id of this AzureContainerInfo.
        :type storage_account_credential_id: str
        """
        if storage_account_credential_id is None:
            raise ValueError("Invalid value for `storage_account_credential_id`, must not be `None`")

        self._storage_account_credential_id = storage_account_credential_id
