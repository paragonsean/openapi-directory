# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.metric_specification_v1 import MetricSpecificationV1
from openapi_server import util


class ServiceSpecification(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, metric_specifications: List[MetricSpecificationV1]=None):
        """ServiceSpecification - a model defined in OpenAPI

        :param metric_specifications: The metric_specifications of this ServiceSpecification.
        """
        self.openapi_types = {
            'metric_specifications': List[MetricSpecificationV1]
        }

        self.attribute_map = {
            'metric_specifications': 'metricSpecifications'
        }

        self._metric_specifications = metric_specifications

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ServiceSpecification':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ServiceSpecification of this ServiceSpecification.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def metric_specifications(self):
        """Gets the metric_specifications of this ServiceSpecification.

        Metric specification as defined by shoebox.

        :return: The metric_specifications of this ServiceSpecification.
        :rtype: List[MetricSpecificationV1]
        """
        return self._metric_specifications

    @metric_specifications.setter
    def metric_specifications(self, metric_specifications):
        """Sets the metric_specifications of this ServiceSpecification.

        Metric specification as defined by shoebox.

        :param metric_specifications: The metric_specifications of this ServiceSpecification.
        :type metric_specifications: List[MetricSpecificationV1]
        """

        self._metric_specifications = metric_specifications
