/**
 * DataBoxEdgeManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-03-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRefreshDetails.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRefreshDetails::OAIRefreshDetails(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRefreshDetails::OAIRefreshDetails() {
    this->initializeModel();
}

OAIRefreshDetails::~OAIRefreshDetails() {}

void OAIRefreshDetails::initializeModel() {

    m_error_manifest_file_isSet = false;
    m_error_manifest_file_isValid = false;

    m_in_progress_refresh_job_id_isSet = false;
    m_in_progress_refresh_job_id_isValid = false;

    m_last_completed_refresh_job_time_in_utc_isSet = false;
    m_last_completed_refresh_job_time_in_utc_isValid = false;

    m_last_job_isSet = false;
    m_last_job_isValid = false;
}

void OAIRefreshDetails::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRefreshDetails::fromJsonObject(QJsonObject json) {

    m_error_manifest_file_isValid = ::OpenAPI::fromJsonValue(m_error_manifest_file, json[QString("errorManifestFile")]);
    m_error_manifest_file_isSet = !json[QString("errorManifestFile")].isNull() && m_error_manifest_file_isValid;

    m_in_progress_refresh_job_id_isValid = ::OpenAPI::fromJsonValue(m_in_progress_refresh_job_id, json[QString("inProgressRefreshJobId")]);
    m_in_progress_refresh_job_id_isSet = !json[QString("inProgressRefreshJobId")].isNull() && m_in_progress_refresh_job_id_isValid;

    m_last_completed_refresh_job_time_in_utc_isValid = ::OpenAPI::fromJsonValue(m_last_completed_refresh_job_time_in_utc, json[QString("lastCompletedRefreshJobTimeInUTC")]);
    m_last_completed_refresh_job_time_in_utc_isSet = !json[QString("lastCompletedRefreshJobTimeInUTC")].isNull() && m_last_completed_refresh_job_time_in_utc_isValid;

    m_last_job_isValid = ::OpenAPI::fromJsonValue(m_last_job, json[QString("lastJob")]);
    m_last_job_isSet = !json[QString("lastJob")].isNull() && m_last_job_isValid;
}

QString OAIRefreshDetails::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRefreshDetails::asJsonObject() const {
    QJsonObject obj;
    if (m_error_manifest_file_isSet) {
        obj.insert(QString("errorManifestFile"), ::OpenAPI::toJsonValue(m_error_manifest_file));
    }
    if (m_in_progress_refresh_job_id_isSet) {
        obj.insert(QString("inProgressRefreshJobId"), ::OpenAPI::toJsonValue(m_in_progress_refresh_job_id));
    }
    if (m_last_completed_refresh_job_time_in_utc_isSet) {
        obj.insert(QString("lastCompletedRefreshJobTimeInUTC"), ::OpenAPI::toJsonValue(m_last_completed_refresh_job_time_in_utc));
    }
    if (m_last_job_isSet) {
        obj.insert(QString("lastJob"), ::OpenAPI::toJsonValue(m_last_job));
    }
    return obj;
}

QString OAIRefreshDetails::getErrorManifestFile() const {
    return m_error_manifest_file;
}
void OAIRefreshDetails::setErrorManifestFile(const QString &error_manifest_file) {
    m_error_manifest_file = error_manifest_file;
    m_error_manifest_file_isSet = true;
}

bool OAIRefreshDetails::is_error_manifest_file_Set() const{
    return m_error_manifest_file_isSet;
}

bool OAIRefreshDetails::is_error_manifest_file_Valid() const{
    return m_error_manifest_file_isValid;
}

QString OAIRefreshDetails::getInProgressRefreshJobId() const {
    return m_in_progress_refresh_job_id;
}
void OAIRefreshDetails::setInProgressRefreshJobId(const QString &in_progress_refresh_job_id) {
    m_in_progress_refresh_job_id = in_progress_refresh_job_id;
    m_in_progress_refresh_job_id_isSet = true;
}

bool OAIRefreshDetails::is_in_progress_refresh_job_id_Set() const{
    return m_in_progress_refresh_job_id_isSet;
}

bool OAIRefreshDetails::is_in_progress_refresh_job_id_Valid() const{
    return m_in_progress_refresh_job_id_isValid;
}

QDateTime OAIRefreshDetails::getLastCompletedRefreshJobTimeInUtc() const {
    return m_last_completed_refresh_job_time_in_utc;
}
void OAIRefreshDetails::setLastCompletedRefreshJobTimeInUtc(const QDateTime &last_completed_refresh_job_time_in_utc) {
    m_last_completed_refresh_job_time_in_utc = last_completed_refresh_job_time_in_utc;
    m_last_completed_refresh_job_time_in_utc_isSet = true;
}

bool OAIRefreshDetails::is_last_completed_refresh_job_time_in_utc_Set() const{
    return m_last_completed_refresh_job_time_in_utc_isSet;
}

bool OAIRefreshDetails::is_last_completed_refresh_job_time_in_utc_Valid() const{
    return m_last_completed_refresh_job_time_in_utc_isValid;
}

QString OAIRefreshDetails::getLastJob() const {
    return m_last_job;
}
void OAIRefreshDetails::setLastJob(const QString &last_job) {
    m_last_job = last_job;
    m_last_job_isSet = true;
}

bool OAIRefreshDetails::is_last_job_Set() const{
    return m_last_job_isSet;
}

bool OAIRefreshDetails::is_last_job_Valid() const{
    return m_last_job_isValid;
}

bool OAIRefreshDetails::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_error_manifest_file_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_in_progress_refresh_job_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_completed_refresh_job_time_in_utc_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_job_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRefreshDetails::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
