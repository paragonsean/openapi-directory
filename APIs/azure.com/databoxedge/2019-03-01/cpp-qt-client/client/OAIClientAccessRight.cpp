/**
 * DataBoxEdgeManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-03-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIClientAccessRight.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIClientAccessRight::OAIClientAccessRight(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIClientAccessRight::OAIClientAccessRight() {
    this->initializeModel();
}

OAIClientAccessRight::~OAIClientAccessRight() {}

void OAIClientAccessRight::initializeModel() {

    m_access_permission_isSet = false;
    m_access_permission_isValid = false;

    m_client_isSet = false;
    m_client_isValid = false;
}

void OAIClientAccessRight::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIClientAccessRight::fromJsonObject(QJsonObject json) {

    m_access_permission_isValid = ::OpenAPI::fromJsonValue(m_access_permission, json[QString("accessPermission")]);
    m_access_permission_isSet = !json[QString("accessPermission")].isNull() && m_access_permission_isValid;

    m_client_isValid = ::OpenAPI::fromJsonValue(m_client, json[QString("client")]);
    m_client_isSet = !json[QString("client")].isNull() && m_client_isValid;
}

QString OAIClientAccessRight::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIClientAccessRight::asJsonObject() const {
    QJsonObject obj;
    if (m_access_permission_isSet) {
        obj.insert(QString("accessPermission"), ::OpenAPI::toJsonValue(m_access_permission));
    }
    if (m_client_isSet) {
        obj.insert(QString("client"), ::OpenAPI::toJsonValue(m_client));
    }
    return obj;
}

QString OAIClientAccessRight::getAccessPermission() const {
    return m_access_permission;
}
void OAIClientAccessRight::setAccessPermission(const QString &access_permission) {
    m_access_permission = access_permission;
    m_access_permission_isSet = true;
}

bool OAIClientAccessRight::is_access_permission_Set() const{
    return m_access_permission_isSet;
}

bool OAIClientAccessRight::is_access_permission_Valid() const{
    return m_access_permission_isValid;
}

QString OAIClientAccessRight::getClient() const {
    return m_client;
}
void OAIClientAccessRight::setClient(const QString &client) {
    m_client = client;
    m_client_isSet = true;
}

bool OAIClientAccessRight::is_client_Set() const{
    return m_client_isSet;
}

bool OAIClientAccessRight::is_client_Valid() const{
    return m_client_isValid;
}

bool OAIClientAccessRight::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_access_permission_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_client_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIClientAccessRight::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_access_permission_isValid && m_client_isValid && true;
}

} // namespace OpenAPI
