/**
 * DataBoxEdgeManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-07-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import UpdateDownloadProgress from './UpdateDownloadProgress';
import UpdateInstallProgress from './UpdateInstallProgress';

/**
 * The JobProperties model module.
 * @module model/JobProperties
 * @version 2019-07-01
 */
class JobProperties {
    /**
     * Constructs a new <code>JobProperties</code>.
     * The properties for the job.
     * @alias module:model/JobProperties
     */
    constructor() { 
        
        JobProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>JobProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/JobProperties} obj Optional instance to populate.
     * @return {module:model/JobProperties} The populated <code>JobProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new JobProperties();

            if (data.hasOwnProperty('currentStage')) {
                obj['currentStage'] = ApiClient.convertToType(data['currentStage'], 'String');
            }
            if (data.hasOwnProperty('downloadProgress')) {
                obj['downloadProgress'] = UpdateDownloadProgress.constructFromObject(data['downloadProgress']);
            }
            if (data.hasOwnProperty('errorManifestFile')) {
                obj['errorManifestFile'] = ApiClient.convertToType(data['errorManifestFile'], 'String');
            }
            if (data.hasOwnProperty('folder')) {
                obj['folder'] = ApiClient.convertToType(data['folder'], 'String');
            }
            if (data.hasOwnProperty('installProgress')) {
                obj['installProgress'] = UpdateInstallProgress.constructFromObject(data['installProgress']);
            }
            if (data.hasOwnProperty('jobType')) {
                obj['jobType'] = ApiClient.convertToType(data['jobType'], 'String');
            }
            if (data.hasOwnProperty('shareId')) {
                obj['shareId'] = ApiClient.convertToType(data['shareId'], 'String');
            }
            if (data.hasOwnProperty('totalRefreshErrors')) {
                obj['totalRefreshErrors'] = ApiClient.convertToType(data['totalRefreshErrors'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>JobProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>JobProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['currentStage'] && !(typeof data['currentStage'] === 'string' || data['currentStage'] instanceof String)) {
            throw new Error("Expected the field `currentStage` to be a primitive type in the JSON string but got " + data['currentStage']);
        }
        // validate the optional field `downloadProgress`
        if (data['downloadProgress']) { // data not null
          UpdateDownloadProgress.validateJSON(data['downloadProgress']);
        }
        // ensure the json data is a string
        if (data['errorManifestFile'] && !(typeof data['errorManifestFile'] === 'string' || data['errorManifestFile'] instanceof String)) {
            throw new Error("Expected the field `errorManifestFile` to be a primitive type in the JSON string but got " + data['errorManifestFile']);
        }
        // ensure the json data is a string
        if (data['folder'] && !(typeof data['folder'] === 'string' || data['folder'] instanceof String)) {
            throw new Error("Expected the field `folder` to be a primitive type in the JSON string but got " + data['folder']);
        }
        // validate the optional field `installProgress`
        if (data['installProgress']) { // data not null
          UpdateInstallProgress.validateJSON(data['installProgress']);
        }
        // ensure the json data is a string
        if (data['jobType'] && !(typeof data['jobType'] === 'string' || data['jobType'] instanceof String)) {
            throw new Error("Expected the field `jobType` to be a primitive type in the JSON string but got " + data['jobType']);
        }
        // ensure the json data is a string
        if (data['shareId'] && !(typeof data['shareId'] === 'string' || data['shareId'] instanceof String)) {
            throw new Error("Expected the field `shareId` to be a primitive type in the JSON string but got " + data['shareId']);
        }

        return true;
    }


}



/**
 * Current stage of the update operation.
 * @member {module:model/JobProperties.CurrentStageEnum} currentStage
 */
JobProperties.prototype['currentStage'] = undefined;

/**
 * @member {module:model/UpdateDownloadProgress} downloadProgress
 */
JobProperties.prototype['downloadProgress'] = undefined;

/**
 * Local share/remote container relative path to the error manifest file of the refresh.
 * @member {String} errorManifestFile
 */
JobProperties.prototype['errorManifestFile'] = undefined;

/**
 * If only subfolders need to be refreshed, then the subfolder path inside the share. (The path is empty if there are no subfolders.)
 * @member {String} folder
 */
JobProperties.prototype['folder'] = undefined;

/**
 * @member {module:model/UpdateInstallProgress} installProgress
 */
JobProperties.prototype['installProgress'] = undefined;

/**
 * The type of the job.
 * @member {module:model/JobProperties.JobTypeEnum} jobType
 */
JobProperties.prototype['jobType'] = undefined;

/**
 * ARM ID of the share that was refreshed.
 * @member {String} shareId
 */
JobProperties.prototype['shareId'] = undefined;

/**
 * Total number of errors encountered during the refresh process.
 * @member {Number} totalRefreshErrors
 */
JobProperties.prototype['totalRefreshErrors'] = undefined;





/**
 * Allowed values for the <code>currentStage</code> property.
 * @enum {String}
 * @readonly
 */
JobProperties['CurrentStageEnum'] = {

    /**
     * value: "Unknown"
     * @const
     */
    "Unknown": "Unknown",

    /**
     * value: "Initial"
     * @const
     */
    "Initial": "Initial",

    /**
     * value: "ScanStarted"
     * @const
     */
    "ScanStarted": "ScanStarted",

    /**
     * value: "ScanComplete"
     * @const
     */
    "ScanComplete": "ScanComplete",

    /**
     * value: "ScanFailed"
     * @const
     */
    "ScanFailed": "ScanFailed",

    /**
     * value: "DownloadStarted"
     * @const
     */
    "DownloadStarted": "DownloadStarted",

    /**
     * value: "DownloadComplete"
     * @const
     */
    "DownloadComplete": "DownloadComplete",

    /**
     * value: "DownloadFailed"
     * @const
     */
    "DownloadFailed": "DownloadFailed",

    /**
     * value: "InstallStarted"
     * @const
     */
    "InstallStarted": "InstallStarted",

    /**
     * value: "InstallComplete"
     * @const
     */
    "InstallComplete": "InstallComplete",

    /**
     * value: "InstallFailed"
     * @const
     */
    "InstallFailed": "InstallFailed",

    /**
     * value: "RebootInitiated"
     * @const
     */
    "RebootInitiated": "RebootInitiated",

    /**
     * value: "Success"
     * @const
     */
    "Success": "Success",

    /**
     * value: "Failure"
     * @const
     */
    "Failure": "Failure",

    /**
     * value: "RescanStarted"
     * @const
     */
    "RescanStarted": "RescanStarted",

    /**
     * value: "RescanComplete"
     * @const
     */
    "RescanComplete": "RescanComplete",

    /**
     * value: "RescanFailed"
     * @const
     */
    "RescanFailed": "RescanFailed"
};


/**
 * Allowed values for the <code>jobType</code> property.
 * @enum {String}
 * @readonly
 */
JobProperties['JobTypeEnum'] = {

    /**
     * value: "Invalid"
     * @const
     */
    "Invalid": "Invalid",

    /**
     * value: "ScanForUpdates"
     * @const
     */
    "ScanForUpdates": "ScanForUpdates",

    /**
     * value: "DownloadUpdates"
     * @const
     */
    "DownloadUpdates": "DownloadUpdates",

    /**
     * value: "InstallUpdates"
     * @const
     */
    "InstallUpdates": "InstallUpdates",

    /**
     * value: "RefreshShare"
     * @const
     */
    "RefreshShare": "RefreshShare"
};



export default JobProperties;

