/**
 * DataBoxEdgeManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-07-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDataBoxEdgeDeviceExtendedInfoProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDataBoxEdgeDeviceExtendedInfoProperties::OAIDataBoxEdgeDeviceExtendedInfoProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDataBoxEdgeDeviceExtendedInfoProperties::OAIDataBoxEdgeDeviceExtendedInfoProperties() {
    this->initializeModel();
}

OAIDataBoxEdgeDeviceExtendedInfoProperties::~OAIDataBoxEdgeDeviceExtendedInfoProperties() {}

void OAIDataBoxEdgeDeviceExtendedInfoProperties::initializeModel() {

    m_encryption_key_isSet = false;
    m_encryption_key_isValid = false;

    m_encryption_key_thumbprint_isSet = false;
    m_encryption_key_thumbprint_isValid = false;

    m_resource_key_isSet = false;
    m_resource_key_isValid = false;
}

void OAIDataBoxEdgeDeviceExtendedInfoProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDataBoxEdgeDeviceExtendedInfoProperties::fromJsonObject(QJsonObject json) {

    m_encryption_key_isValid = ::OpenAPI::fromJsonValue(m_encryption_key, json[QString("encryptionKey")]);
    m_encryption_key_isSet = !json[QString("encryptionKey")].isNull() && m_encryption_key_isValid;

    m_encryption_key_thumbprint_isValid = ::OpenAPI::fromJsonValue(m_encryption_key_thumbprint, json[QString("encryptionKeyThumbprint")]);
    m_encryption_key_thumbprint_isSet = !json[QString("encryptionKeyThumbprint")].isNull() && m_encryption_key_thumbprint_isValid;

    m_resource_key_isValid = ::OpenAPI::fromJsonValue(m_resource_key, json[QString("resourceKey")]);
    m_resource_key_isSet = !json[QString("resourceKey")].isNull() && m_resource_key_isValid;
}

QString OAIDataBoxEdgeDeviceExtendedInfoProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDataBoxEdgeDeviceExtendedInfoProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_encryption_key_isSet) {
        obj.insert(QString("encryptionKey"), ::OpenAPI::toJsonValue(m_encryption_key));
    }
    if (m_encryption_key_thumbprint_isSet) {
        obj.insert(QString("encryptionKeyThumbprint"), ::OpenAPI::toJsonValue(m_encryption_key_thumbprint));
    }
    if (m_resource_key_isSet) {
        obj.insert(QString("resourceKey"), ::OpenAPI::toJsonValue(m_resource_key));
    }
    return obj;
}

QString OAIDataBoxEdgeDeviceExtendedInfoProperties::getEncryptionKey() const {
    return m_encryption_key;
}
void OAIDataBoxEdgeDeviceExtendedInfoProperties::setEncryptionKey(const QString &encryption_key) {
    m_encryption_key = encryption_key;
    m_encryption_key_isSet = true;
}

bool OAIDataBoxEdgeDeviceExtendedInfoProperties::is_encryption_key_Set() const{
    return m_encryption_key_isSet;
}

bool OAIDataBoxEdgeDeviceExtendedInfoProperties::is_encryption_key_Valid() const{
    return m_encryption_key_isValid;
}

QString OAIDataBoxEdgeDeviceExtendedInfoProperties::getEncryptionKeyThumbprint() const {
    return m_encryption_key_thumbprint;
}
void OAIDataBoxEdgeDeviceExtendedInfoProperties::setEncryptionKeyThumbprint(const QString &encryption_key_thumbprint) {
    m_encryption_key_thumbprint = encryption_key_thumbprint;
    m_encryption_key_thumbprint_isSet = true;
}

bool OAIDataBoxEdgeDeviceExtendedInfoProperties::is_encryption_key_thumbprint_Set() const{
    return m_encryption_key_thumbprint_isSet;
}

bool OAIDataBoxEdgeDeviceExtendedInfoProperties::is_encryption_key_thumbprint_Valid() const{
    return m_encryption_key_thumbprint_isValid;
}

QString OAIDataBoxEdgeDeviceExtendedInfoProperties::getResourceKey() const {
    return m_resource_key;
}
void OAIDataBoxEdgeDeviceExtendedInfoProperties::setResourceKey(const QString &resource_key) {
    m_resource_key = resource_key;
    m_resource_key_isSet = true;
}

bool OAIDataBoxEdgeDeviceExtendedInfoProperties::is_resource_key_Set() const{
    return m_resource_key_isSet;
}

bool OAIDataBoxEdgeDeviceExtendedInfoProperties::is_resource_key_Valid() const{
    return m_resource_key_isValid;
}

bool OAIDataBoxEdgeDeviceExtendedInfoProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_encryption_key_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_encryption_key_thumbprint_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_key_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDataBoxEdgeDeviceExtendedInfoProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
