# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.asymmetric_encrypted_secret import AsymmetricEncryptedSecret
from openapi_server import util


class SecuritySettingsProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, device_admin_password: AsymmetricEncryptedSecret=None):
        """SecuritySettingsProperties - a model defined in OpenAPI

        :param device_admin_password: The device_admin_password of this SecuritySettingsProperties.
        """
        self.openapi_types = {
            'device_admin_password': AsymmetricEncryptedSecret
        }

        self.attribute_map = {
            'device_admin_password': 'deviceAdminPassword'
        }

        self._device_admin_password = device_admin_password

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SecuritySettingsProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SecuritySettingsProperties of this SecuritySettingsProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def device_admin_password(self):
        """Gets the device_admin_password of this SecuritySettingsProperties.


        :return: The device_admin_password of this SecuritySettingsProperties.
        :rtype: AsymmetricEncryptedSecret
        """
        return self._device_admin_password

    @device_admin_password.setter
    def device_admin_password(self, device_admin_password):
        """Sets the device_admin_password of this SecuritySettingsProperties.


        :param device_admin_password: The device_admin_password of this SecuritySettingsProperties.
        :type device_admin_password: AsymmetricEncryptedSecret
        """
        if device_admin_password is None:
            raise ValueError("Invalid value for `device_admin_password`, must not be `None`")

        self._device_admin_password = device_admin_password
