# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.authentication import Authentication
from openapi_server import util


class IoTDeviceInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, authentication: Authentication=None, device_id: str=None, io_t_host_hub: str=None, io_t_host_hub_id: str=None):
        """IoTDeviceInfo - a model defined in OpenAPI

        :param authentication: The authentication of this IoTDeviceInfo.
        :param device_id: The device_id of this IoTDeviceInfo.
        :param io_t_host_hub: The io_t_host_hub of this IoTDeviceInfo.
        :param io_t_host_hub_id: The io_t_host_hub_id of this IoTDeviceInfo.
        """
        self.openapi_types = {
            'authentication': Authentication,
            'device_id': str,
            'io_t_host_hub': str,
            'io_t_host_hub_id': str
        }

        self.attribute_map = {
            'authentication': 'authentication',
            'device_id': 'deviceId',
            'io_t_host_hub': 'ioTHostHub',
            'io_t_host_hub_id': 'ioTHostHubId'
        }

        self._authentication = authentication
        self._device_id = device_id
        self._io_t_host_hub = io_t_host_hub
        self._io_t_host_hub_id = io_t_host_hub_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IoTDeviceInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IoTDeviceInfo of this IoTDeviceInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def authentication(self):
        """Gets the authentication of this IoTDeviceInfo.


        :return: The authentication of this IoTDeviceInfo.
        :rtype: Authentication
        """
        return self._authentication

    @authentication.setter
    def authentication(self, authentication):
        """Sets the authentication of this IoTDeviceInfo.


        :param authentication: The authentication of this IoTDeviceInfo.
        :type authentication: Authentication
        """

        self._authentication = authentication

    @property
    def device_id(self):
        """Gets the device_id of this IoTDeviceInfo.

        ID of the IoT device/edge device.

        :return: The device_id of this IoTDeviceInfo.
        :rtype: str
        """
        return self._device_id

    @device_id.setter
    def device_id(self, device_id):
        """Sets the device_id of this IoTDeviceInfo.

        ID of the IoT device/edge device.

        :param device_id: The device_id of this IoTDeviceInfo.
        :type device_id: str
        """
        if device_id is None:
            raise ValueError("Invalid value for `device_id`, must not be `None`")

        self._device_id = device_id

    @property
    def io_t_host_hub(self):
        """Gets the io_t_host_hub of this IoTDeviceInfo.

        Host name for the IoT hub associated to the device.

        :return: The io_t_host_hub of this IoTDeviceInfo.
        :rtype: str
        """
        return self._io_t_host_hub

    @io_t_host_hub.setter
    def io_t_host_hub(self, io_t_host_hub):
        """Sets the io_t_host_hub of this IoTDeviceInfo.

        Host name for the IoT hub associated to the device.

        :param io_t_host_hub: The io_t_host_hub of this IoTDeviceInfo.
        :type io_t_host_hub: str
        """
        if io_t_host_hub is None:
            raise ValueError("Invalid value for `io_t_host_hub`, must not be `None`")

        self._io_t_host_hub = io_t_host_hub

    @property
    def io_t_host_hub_id(self):
        """Gets the io_t_host_hub_id of this IoTDeviceInfo.

        Id of the IoT hub associated to the device.

        :return: The io_t_host_hub_id of this IoTDeviceInfo.
        :rtype: str
        """
        return self._io_t_host_hub_id

    @io_t_host_hub_id.setter
    def io_t_host_hub_id(self, io_t_host_hub_id):
        """Sets the io_t_host_hub_id of this IoTDeviceInfo.

        Id of the IoT hub associated to the device.

        :param io_t_host_hub_id: The io_t_host_hub_id of this IoTDeviceInfo.
        :type io_t_host_hub_id: str
        """

        self._io_t_host_hub_id = io_t_host_hub_id
