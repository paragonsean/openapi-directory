# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.asymmetric_encrypted_secret import AsymmetricEncryptedSecret
from openapi_server import util


class SymmetricKey(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, connection_string: AsymmetricEncryptedSecret=None):
        """SymmetricKey - a model defined in OpenAPI

        :param connection_string: The connection_string of this SymmetricKey.
        """
        self.openapi_types = {
            'connection_string': AsymmetricEncryptedSecret
        }

        self.attribute_map = {
            'connection_string': 'connectionString'
        }

        self._connection_string = connection_string

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SymmetricKey':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SymmetricKey of this SymmetricKey.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def connection_string(self):
        """Gets the connection_string of this SymmetricKey.


        :return: The connection_string of this SymmetricKey.
        :rtype: AsymmetricEncryptedSecret
        """
        return self._connection_string

    @connection_string.setter
    def connection_string(self, connection_string):
        """Sets the connection_string of this SymmetricKey.


        :param connection_string: The connection_string of this SymmetricKey.
        :type connection_string: AsymmetricEncryptedSecret
        """

        self._connection_string = connection_string
