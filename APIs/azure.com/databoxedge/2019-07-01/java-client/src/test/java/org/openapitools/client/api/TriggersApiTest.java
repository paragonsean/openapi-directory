/*
 * DataBoxEdgeManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-07-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CloudError;
import org.openapitools.client.model.Trigger;
import org.openapitools.client.model.TriggerList;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TriggersApi
 */
@Disabled
public class TriggersApiTest {

    private final TriggersApi api = new TriggersApi();

    /**
     * Creates or updates a trigger.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void triggersCreateOrUpdateTest() throws ApiException {
        String deviceName = null;
        String name = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String apiVersion = null;
        Trigger trigger = null;
        Trigger response = api.triggersCreateOrUpdate(deviceName, name, subscriptionId, resourceGroupName, apiVersion, trigger);
        // TODO: test validations
    }

    /**
     * Deletes the trigger on the gateway device.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void triggersDeleteTest() throws ApiException {
        String deviceName = null;
        String name = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String apiVersion = null;
        api.triggersDelete(deviceName, name, subscriptionId, resourceGroupName, apiVersion);
        // TODO: test validations
    }

    /**
     * Get a specific trigger by name.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void triggersGetTest() throws ApiException {
        String deviceName = null;
        String name = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String apiVersion = null;
        Trigger response = api.triggersGet(deviceName, name, subscriptionId, resourceGroupName, apiVersion);
        // TODO: test validations
    }

    /**
     * Lists all the triggers configured in the device.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void triggersListByDataBoxEdgeDeviceTest() throws ApiException {
        String deviceName = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String apiVersion = null;
        String $expand = null;
        TriggerList response = api.triggersListByDataBoxEdgeDevice(deviceName, subscriptionId, resourceGroupName, apiVersion, $expand);
        // TODO: test validations
    }

}
