/**
 * SqlManagementClient
 * The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.
 *
 * The version of the OpenAPI document: 2017-10-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBackupShortTermRetentionPolicyProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBackupShortTermRetentionPolicyProperties::OAIBackupShortTermRetentionPolicyProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBackupShortTermRetentionPolicyProperties::OAIBackupShortTermRetentionPolicyProperties() {
    this->initializeModel();
}

OAIBackupShortTermRetentionPolicyProperties::~OAIBackupShortTermRetentionPolicyProperties() {}

void OAIBackupShortTermRetentionPolicyProperties::initializeModel() {

    m_retention_days_isSet = false;
    m_retention_days_isValid = false;
}

void OAIBackupShortTermRetentionPolicyProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBackupShortTermRetentionPolicyProperties::fromJsonObject(QJsonObject json) {

    m_retention_days_isValid = ::OpenAPI::fromJsonValue(m_retention_days, json[QString("retentionDays")]);
    m_retention_days_isSet = !json[QString("retentionDays")].isNull() && m_retention_days_isValid;
}

QString OAIBackupShortTermRetentionPolicyProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBackupShortTermRetentionPolicyProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_retention_days_isSet) {
        obj.insert(QString("retentionDays"), ::OpenAPI::toJsonValue(m_retention_days));
    }
    return obj;
}

qint32 OAIBackupShortTermRetentionPolicyProperties::getRetentionDays() const {
    return m_retention_days;
}
void OAIBackupShortTermRetentionPolicyProperties::setRetentionDays(const qint32 &retention_days) {
    m_retention_days = retention_days;
    m_retention_days_isSet = true;
}

bool OAIBackupShortTermRetentionPolicyProperties::is_retention_days_Set() const{
    return m_retention_days_isSet;
}

bool OAIBackupShortTermRetentionPolicyProperties::is_retention_days_Valid() const{
    return m_retention_days_isValid;
}

bool OAIBackupShortTermRetentionPolicyProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_retention_days_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBackupShortTermRetentionPolicyProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
