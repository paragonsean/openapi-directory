/*
 * SqlManagementClient
 * The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.
 *
 * The version of the OpenAPI document: 2017-10-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.BackupShortTermRetentionPolicy;
import org.openapitools.client.model.BackupShortTermRetentionPolicyListResult;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for BackupShortTermRetentionPoliciesApi
 */
@Disabled
public class BackupShortTermRetentionPoliciesApiTest {

    private final BackupShortTermRetentionPoliciesApi api = new BackupShortTermRetentionPoliciesApi();

    /**
     * Updates a database&#39;s short term retention policy.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void backupShortTermRetentionPoliciesCreateOrUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String serverName = null;
        String databaseName = null;
        String policyName = null;
        String subscriptionId = null;
        String apiVersion = null;
        BackupShortTermRetentionPolicy parameters = null;
        BackupShortTermRetentionPolicy response = api.backupShortTermRetentionPoliciesCreateOrUpdate(resourceGroupName, serverName, databaseName, policyName, subscriptionId, apiVersion, parameters);
        // TODO: test validations
    }

    /**
     * Gets a database&#39;s short term retention policy.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void backupShortTermRetentionPoliciesGetTest() throws ApiException {
        String resourceGroupName = null;
        String serverName = null;
        String databaseName = null;
        String policyName = null;
        String subscriptionId = null;
        String apiVersion = null;
        BackupShortTermRetentionPolicy response = api.backupShortTermRetentionPoliciesGet(resourceGroupName, serverName, databaseName, policyName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets a database&#39;s short term retention policy.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void backupShortTermRetentionPoliciesListByDatabaseTest() throws ApiException {
        String resourceGroupName = null;
        String serverName = null;
        String databaseName = null;
        String subscriptionId = null;
        String apiVersion = null;
        BackupShortTermRetentionPolicyListResult response = api.backupShortTermRetentionPoliciesListByDatabase(resourceGroupName, serverName, databaseName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Updates a database&#39;s short term retention policy.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void backupShortTermRetentionPoliciesUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String serverName = null;
        String databaseName = null;
        String policyName = null;
        String subscriptionId = null;
        String apiVersion = null;
        BackupShortTermRetentionPolicy parameters = null;
        BackupShortTermRetentionPolicy response = api.backupShortTermRetentionPoliciesUpdate(resourceGroupName, serverName, databaseName, policyName, subscriptionId, apiVersion, parameters);
        // TODO: test validations
    }

}
