/**
 * Anomaly Finder Client
 * The Anomaly Finder API detects anomalies automatically in time series data. It supports two functionalities, one is for detecting the whole series with model trained by the timeseries, another is detecting last point with model trained by points before. By using this service, business customers can discover incidents and establish a logic flow for root cause analysis.
 *
 * The version of the OpenAPI document: 2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRequest.h
 *
 * 
 */

#ifndef OAIRequest_H
#define OAIRequest_H

#include <QJsonObject>

#include "OAIPoint.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPoint;

class OAIRequest : public OAIObject {
public:
    OAIRequest();
    OAIRequest(QString json);
    ~OAIRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getCustomInterval() const;
    void setCustomInterval(const qint32 &custom_interval);
    bool is_custom_interval_Set() const;
    bool is_custom_interval_Valid() const;

    QString getGranularity() const;
    void setGranularity(const QString &granularity);
    bool is_granularity_Set() const;
    bool is_granularity_Valid() const;

    float getMaxAnomalyRatio() const;
    void setMaxAnomalyRatio(const float &max_anomaly_ratio);
    bool is_max_anomaly_ratio_Set() const;
    bool is_max_anomaly_ratio_Valid() const;

    qint32 getPeriod() const;
    void setPeriod(const qint32 &period);
    bool is_period_Set() const;
    bool is_period_Valid() const;

    qint32 getSensitivity() const;
    void setSensitivity(const qint32 &sensitivity);
    bool is_sensitivity_Set() const;
    bool is_sensitivity_Valid() const;

    QList<OAIPoint> getSeries() const;
    void setSeries(const QList<OAIPoint> &series);
    bool is_series_Set() const;
    bool is_series_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_custom_interval;
    bool m_custom_interval_isSet;
    bool m_custom_interval_isValid;

    QString m_granularity;
    bool m_granularity_isSet;
    bool m_granularity_isValid;

    float m_max_anomaly_ratio;
    bool m_max_anomaly_ratio_isSet;
    bool m_max_anomaly_ratio_isValid;

    qint32 m_period;
    bool m_period_isSet;
    bool m_period_isValid;

    qint32 m_sensitivity;
    bool m_sensitivity_isSet;
    bool m_sensitivity_isValid;

    QList<OAIPoint> m_series;
    bool m_series_isSet;
    bool m_series_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRequest)

#endif // OAIRequest_H
