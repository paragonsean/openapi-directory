# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ResourceSnapshotData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, content: object=None, timestamp: datetime=None):
        """ResourceSnapshotData - a model defined in OpenAPI

        :param content: The content of this ResourceSnapshotData.
        :param timestamp: The timestamp of this ResourceSnapshotData.
        """
        self.openapi_types = {
            'content': object,
            'timestamp': datetime
        }

        self.attribute_map = {
            'content': 'content',
            'timestamp': 'timestamp'
        }

        self._content = content
        self._timestamp = timestamp

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ResourceSnapshotData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ResourceSnapshotData of this ResourceSnapshotData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def content(self):
        """Gets the content of this ResourceSnapshotData.

        The resource snapshot content (in resourceChangeDetails response only).

        :return: The content of this ResourceSnapshotData.
        :rtype: object
        """
        return self._content

    @content.setter
    def content(self, content):
        """Sets the content of this ResourceSnapshotData.

        The resource snapshot content (in resourceChangeDetails response only).

        :param content: The content of this ResourceSnapshotData.
        :type content: object
        """

        self._content = content

    @property
    def timestamp(self):
        """Gets the timestamp of this ResourceSnapshotData.

        The time when the snapshot was created. The snapshot timestamp provides an approximation as to when a modification to a resource was detected.  There can be a difference between the actual modification time and the detection time.  This is due to differences in how operations that modify a resource are processed, versus how operation that record resource snapshots are processed.

        :return: The timestamp of this ResourceSnapshotData.
        :rtype: datetime
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp):
        """Sets the timestamp of this ResourceSnapshotData.

        The time when the snapshot was created. The snapshot timestamp provides an approximation as to when a modification to a resource was detected.  There can be a difference between the actual modification time and the detection time.  This is due to differences in how operations that modify a resource are processed, versus how operation that record resource snapshots are processed.

        :param timestamp: The timestamp of this ResourceSnapshotData.
        :type timestamp: datetime
        """
        if timestamp is None:
            raise ValueError("Invalid value for `timestamp`, must not be `None`")

        self._timestamp = timestamp
