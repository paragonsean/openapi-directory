# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.resource_change_data import ResourceChangeData
from openapi_server import util


class ResourceChangeList(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, skip_token: object=None, changes: List[ResourceChangeData]=None):
        """ResourceChangeList - a model defined in OpenAPI

        :param skip_token: The skip_token of this ResourceChangeList.
        :param changes: The changes of this ResourceChangeList.
        """
        self.openapi_types = {
            'skip_token': object,
            'changes': List[ResourceChangeData]
        }

        self.attribute_map = {
            'skip_token': '$skipToken',
            'changes': 'changes'
        }

        self._skip_token = skip_token
        self._changes = changes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ResourceChangeList':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ResourceChangeList of this ResourceChangeList.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def skip_token(self):
        """Gets the skip_token of this ResourceChangeList.

        Skip token that encodes the skip information while executing the current request

        :return: The skip_token of this ResourceChangeList.
        :rtype: object
        """
        return self._skip_token

    @skip_token.setter
    def skip_token(self, skip_token):
        """Sets the skip_token of this ResourceChangeList.

        Skip token that encodes the skip information while executing the current request

        :param skip_token: The skip_token of this ResourceChangeList.
        :type skip_token: object
        """

        self._skip_token = skip_token

    @property
    def changes(self):
        """Gets the changes of this ResourceChangeList.

        The pageable value returned by the operation, i.e. a list of changes to the resource.  - The list is ordered from the most recent changes to the least recent changes. - This list will be empty if there were no changes during the requested interval. - The `Before` snapshot timestamp value of the oldest change can be outside of the specified time interval.

        :return: The changes of this ResourceChangeList.
        :rtype: List[ResourceChangeData]
        """
        return self._changes

    @changes.setter
    def changes(self, changes):
        """Sets the changes of this ResourceChangeList.

        The pageable value returned by the operation, i.e. a list of changes to the resource.  - The list is ordered from the most recent changes to the least recent changes. - This list will be empty if there were no changes during the requested interval. - The `Before` snapshot timestamp value of the oldest change can be outside of the specified time interval.

        :param changes: The changes of this ResourceChangeList.
        :type changes: List[ResourceChangeData]
        """

        self._changes = changes
