/**
 * Azure Resource Graph
 * Azure Resource Graph API Reference
 *
 * The version of the OpenAPI document: 2018-09-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIQueryResponse.h
 *
 * Query result.
 */

#ifndef OAIQueryResponse_H
#define OAIQueryResponse_H

#include <QJsonObject>

#include "OAIFacet.h"
#include "OAITable.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITable;
class OAIFacet;

class OAIQueryResponse : public OAIObject {
public:
    OAIQueryResponse();
    OAIQueryResponse(QString json);
    ~OAIQueryResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getSkipToken() const;
    void setSkipToken(const QString &skip_token);
    bool is_skip_token_Set() const;
    bool is_skip_token_Valid() const;

    qint64 getCount() const;
    void setCount(const qint64 &count);
    bool is_count_Set() const;
    bool is_count_Valid() const;

    OAITable getData() const;
    void setData(const OAITable &data);
    bool is_data_Set() const;
    bool is_data_Valid() const;

    QList<OAIFacet> getFacets() const;
    void setFacets(const QList<OAIFacet> &facets);
    bool is_facets_Set() const;
    bool is_facets_Valid() const;

    QString getResultTruncated() const;
    void setResultTruncated(const QString &result_truncated);
    bool is_result_truncated_Set() const;
    bool is_result_truncated_Valid() const;

    qint64 getTotalRecords() const;
    void setTotalRecords(const qint64 &total_records);
    bool is_total_records_Set() const;
    bool is_total_records_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_skip_token;
    bool m_skip_token_isSet;
    bool m_skip_token_isValid;

    qint64 m_count;
    bool m_count_isSet;
    bool m_count_isValid;

    OAITable m_data;
    bool m_data_isSet;
    bool m_data_isValid;

    QList<OAIFacet> m_facets;
    bool m_facets_isSet;
    bool m_facets_isValid;

    QString m_result_truncated;
    bool m_result_truncated_isSet;
    bool m_result_truncated_isValid;

    qint64 m_total_records;
    bool m_total_records_isSet;
    bool m_total_records_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIQueryResponse)

#endif // OAIQueryResponse_H
