/**
 * Azure Resource Graph
 * Azure Resource Graph API Reference
 *
 * The version of the OpenAPI document: 2018-09-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIResourceChangeData.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIResourceChangeData::OAIResourceChangeData(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIResourceChangeData::OAIResourceChangeData() {
    this->initializeModel();
}

OAIResourceChangeData::~OAIResourceChangeData() {}

void OAIResourceChangeData::initializeModel() {

    m_after_snapshot_isSet = false;
    m_after_snapshot_isValid = false;

    m_before_snapshot_isSet = false;
    m_before_snapshot_isValid = false;

    m_change_id_isSet = false;
    m_change_id_isValid = false;
}

void OAIResourceChangeData::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIResourceChangeData::fromJsonObject(QJsonObject json) {

    m_after_snapshot_isValid = ::OpenAPI::fromJsonValue(m_after_snapshot, json[QString("afterSnapshot")]);
    m_after_snapshot_isSet = !json[QString("afterSnapshot")].isNull() && m_after_snapshot_isValid;

    m_before_snapshot_isValid = ::OpenAPI::fromJsonValue(m_before_snapshot, json[QString("beforeSnapshot")]);
    m_before_snapshot_isSet = !json[QString("beforeSnapshot")].isNull() && m_before_snapshot_isValid;

    m_change_id_isValid = ::OpenAPI::fromJsonValue(m_change_id, json[QString("changeId")]);
    m_change_id_isSet = !json[QString("changeId")].isNull() && m_change_id_isValid;
}

QString OAIResourceChangeData::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIResourceChangeData::asJsonObject() const {
    QJsonObject obj;
    if (m_after_snapshot.isSet()) {
        obj.insert(QString("afterSnapshot"), ::OpenAPI::toJsonValue(m_after_snapshot));
    }
    if (m_before_snapshot.isSet()) {
        obj.insert(QString("beforeSnapshot"), ::OpenAPI::toJsonValue(m_before_snapshot));
    }
    if (m_change_id_isSet) {
        obj.insert(QString("changeId"), ::OpenAPI::toJsonValue(m_change_id));
    }
    return obj;
}

OAIResourceSnapshotData OAIResourceChangeData::getAfterSnapshot() const {
    return m_after_snapshot;
}
void OAIResourceChangeData::setAfterSnapshot(const OAIResourceSnapshotData &after_snapshot) {
    m_after_snapshot = after_snapshot;
    m_after_snapshot_isSet = true;
}

bool OAIResourceChangeData::is_after_snapshot_Set() const{
    return m_after_snapshot_isSet;
}

bool OAIResourceChangeData::is_after_snapshot_Valid() const{
    return m_after_snapshot_isValid;
}

OAIResourceSnapshotData OAIResourceChangeData::getBeforeSnapshot() const {
    return m_before_snapshot;
}
void OAIResourceChangeData::setBeforeSnapshot(const OAIResourceSnapshotData &before_snapshot) {
    m_before_snapshot = before_snapshot;
    m_before_snapshot_isSet = true;
}

bool OAIResourceChangeData::is_before_snapshot_Set() const{
    return m_before_snapshot_isSet;
}

bool OAIResourceChangeData::is_before_snapshot_Valid() const{
    return m_before_snapshot_isValid;
}

QString OAIResourceChangeData::getChangeId() const {
    return m_change_id;
}
void OAIResourceChangeData::setChangeId(const QString &change_id) {
    m_change_id = change_id;
    m_change_id_isSet = true;
}

bool OAIResourceChangeData::is_change_id_Set() const{
    return m_change_id_isSet;
}

bool OAIResourceChangeData::is_change_id_Valid() const{
    return m_change_id_isValid;
}

bool OAIResourceChangeData::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_after_snapshot.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_before_snapshot.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_change_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIResourceChangeData::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_after_snapshot_isValid && m_before_snapshot_isValid && m_change_id_isValid && true;
}

} // namespace OpenAPI
