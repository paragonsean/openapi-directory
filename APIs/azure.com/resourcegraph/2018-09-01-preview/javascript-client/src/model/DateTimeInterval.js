/**
 * Azure Resource Graph
 * Azure Resource Graph API Reference
 *
 * The version of the OpenAPI document: 2018-09-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DateTimeInterval model module.
 * @module model/DateTimeInterval
 * @version 2018-09-01-preview
 */
class DateTimeInterval {
    /**
     * Constructs a new <code>DateTimeInterval</code>.
     * An interval in time specifying the date and time for the inclusive start and exclusive end, i.e. &#x60;[start, end)&#x60;.
     * @alias module:model/DateTimeInterval
     * @param end {Date} A datetime indicating the exclusive/open end of the time interval, i.e. `[start, `**`end`**`)`. Specifying an `end` that occurs chronologically before `start` will result in an error.
     * @param start {Date} A datetime indicating the inclusive/closed start of the time interval, i.e. `[`**`start`**`, end)`. Specifying a `start` that occurs chronologically after `end` will result in an error.
     */
    constructor(end, start) { 
        
        DateTimeInterval.initialize(this, end, start);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, end, start) { 
        obj['end'] = end;
        obj['start'] = start;
    }

    /**
     * Constructs a <code>DateTimeInterval</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DateTimeInterval} obj Optional instance to populate.
     * @return {module:model/DateTimeInterval} The populated <code>DateTimeInterval</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DateTimeInterval();

            if (data.hasOwnProperty('end')) {
                obj['end'] = ApiClient.convertToType(data['end'], 'Date');
            }
            if (data.hasOwnProperty('start')) {
                obj['start'] = ApiClient.convertToType(data['start'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DateTimeInterval</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DateTimeInterval</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DateTimeInterval.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }

        return true;
    }


}

DateTimeInterval.RequiredProperties = ["end", "start"];

/**
 * A datetime indicating the exclusive/open end of the time interval, i.e. `[start, `**`end`**`)`. Specifying an `end` that occurs chronologically before `start` will result in an error.
 * @member {Date} end
 */
DateTimeInterval.prototype['end'] = undefined;

/**
 * A datetime indicating the inclusive/closed start of the time interval, i.e. `[`**`start`**`, end)`. Specifying a `start` that occurs chronologically after `end` will result in an error.
 * @member {Date} start
 */
DateTimeInterval.prototype['start'] = undefined;






export default DateTimeInterval;

