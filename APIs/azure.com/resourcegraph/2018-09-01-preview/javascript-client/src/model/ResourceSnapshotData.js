/**
 * Azure Resource Graph
 * Azure Resource Graph API Reference
 *
 * The version of the OpenAPI document: 2018-09-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ResourceSnapshotData model module.
 * @module model/ResourceSnapshotData
 * @version 2018-09-01-preview
 */
class ResourceSnapshotData {
    /**
     * Constructs a new <code>ResourceSnapshotData</code>.
     * Data on a specific resource snapshot.
     * @alias module:model/ResourceSnapshotData
     * @param timestamp {Date} The time when the snapshot was created. The snapshot timestamp provides an approximation as to when a modification to a resource was detected.  There can be a difference between the actual modification time and the detection time.  This is due to differences in how operations that modify a resource are processed, versus how operation that record resource snapshots are processed.
     */
    constructor(timestamp) { 
        
        ResourceSnapshotData.initialize(this, timestamp);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, timestamp) { 
        obj['timestamp'] = timestamp;
    }

    /**
     * Constructs a <code>ResourceSnapshotData</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ResourceSnapshotData} obj Optional instance to populate.
     * @return {module:model/ResourceSnapshotData} The populated <code>ResourceSnapshotData</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ResourceSnapshotData();

            if (data.hasOwnProperty('content')) {
                obj['content'] = ApiClient.convertToType(data['content'], Object);
            }
            if (data.hasOwnProperty('timestamp')) {
                obj['timestamp'] = ApiClient.convertToType(data['timestamp'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ResourceSnapshotData</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ResourceSnapshotData</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ResourceSnapshotData.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }

        return true;
    }


}

ResourceSnapshotData.RequiredProperties = ["timestamp"];

/**
 * The resource snapshot content (in resourceChangeDetails response only).
 * @member {Object} content
 */
ResourceSnapshotData.prototype['content'] = undefined;

/**
 * The time when the snapshot was created. The snapshot timestamp provides an approximation as to when a modification to a resource was detected.  There can be a difference between the actual modification time and the detection time.  This is due to differences in how operations that modify a resource are processed, versus how operation that record resource snapshots are processed.
 * @member {Date} timestamp
 */
ResourceSnapshotData.prototype['timestamp'] = undefined;






export default ResourceSnapshotData;

