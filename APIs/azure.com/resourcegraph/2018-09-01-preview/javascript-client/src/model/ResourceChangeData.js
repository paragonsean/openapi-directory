/**
 * Azure Resource Graph
 * Azure Resource Graph API Reference
 *
 * The version of the OpenAPI document: 2018-09-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ResourceSnapshotData from './ResourceSnapshotData';

/**
 * The ResourceChangeData model module.
 * @module model/ResourceChangeData
 * @version 2018-09-01-preview
 */
class ResourceChangeData {
    /**
     * Constructs a new <code>ResourceChangeData</code>.
     * Data on a specific change, represented by a pair of before and after resource snapshots.
     * @alias module:model/ResourceChangeData
     * @param afterSnapshot {module:model/ResourceSnapshotData} The snapshot after the change.
     * @param beforeSnapshot {module:model/ResourceSnapshotData} The snapshot before the change.
     * @param changeId {String} The change ID. Valid and unique within the specified resource only.
     */
    constructor(afterSnapshot, beforeSnapshot, changeId) { 
        
        ResourceChangeData.initialize(this, afterSnapshot, beforeSnapshot, changeId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, afterSnapshot, beforeSnapshot, changeId) { 
        obj['afterSnapshot'] = afterSnapshot;
        obj['beforeSnapshot'] = beforeSnapshot;
        obj['changeId'] = changeId;
    }

    /**
     * Constructs a <code>ResourceChangeData</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ResourceChangeData} obj Optional instance to populate.
     * @return {module:model/ResourceChangeData} The populated <code>ResourceChangeData</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ResourceChangeData();

            if (data.hasOwnProperty('afterSnapshot')) {
                obj['afterSnapshot'] = ApiClient.convertToType(data['afterSnapshot'], ResourceSnapshotData);
            }
            if (data.hasOwnProperty('beforeSnapshot')) {
                obj['beforeSnapshot'] = ApiClient.convertToType(data['beforeSnapshot'], ResourceSnapshotData);
            }
            if (data.hasOwnProperty('changeId')) {
                obj['changeId'] = ApiClient.convertToType(data['changeId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ResourceChangeData</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ResourceChangeData</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ResourceChangeData.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `afterSnapshot`
        if (data['afterSnapshot']) { // data not null
          ResourceSnapshotData.validateJSON(data['afterSnapshot']);
        }
        // validate the optional field `beforeSnapshot`
        if (data['beforeSnapshot']) { // data not null
          ResourceSnapshotData.validateJSON(data['beforeSnapshot']);
        }
        // ensure the json data is a string
        if (data['changeId'] && !(typeof data['changeId'] === 'string' || data['changeId'] instanceof String)) {
            throw new Error("Expected the field `changeId` to be a primitive type in the JSON string but got " + data['changeId']);
        }

        return true;
    }


}

ResourceChangeData.RequiredProperties = ["afterSnapshot", "beforeSnapshot", "changeId"];

/**
 * The snapshot after the change.
 * @member {module:model/ResourceSnapshotData} afterSnapshot
 */
ResourceChangeData.prototype['afterSnapshot'] = undefined;

/**
 * The snapshot before the change.
 * @member {module:model/ResourceSnapshotData} beforeSnapshot
 */
ResourceChangeData.prototype['beforeSnapshot'] = undefined;

/**
 * The change ID. Valid and unique within the specified resource only.
 * @member {String} changeId
 */
ResourceChangeData.prototype['changeId'] = undefined;






export default ResourceChangeData;

