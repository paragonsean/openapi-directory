/**
 * Azure Resource Graph
 * Azure Resource Graph API Reference
 *
 * The version of the OpenAPI document: 2018-09-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import FacetRequestOptions from './FacetRequestOptions';

/**
 * The FacetRequest model module.
 * @module model/FacetRequest
 * @version 2018-09-01-preview
 */
class FacetRequest {
    /**
     * Constructs a new <code>FacetRequest</code>.
     * A request to compute additional statistics (facets) over the query results.
     * @alias module:model/FacetRequest
     * @param expression {String} The column or list of columns to summarize by
     */
    constructor(expression) { 
        
        FacetRequest.initialize(this, expression);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, expression) { 
        obj['expression'] = expression;
    }

    /**
     * Constructs a <code>FacetRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FacetRequest} obj Optional instance to populate.
     * @return {module:model/FacetRequest} The populated <code>FacetRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FacetRequest();

            if (data.hasOwnProperty('expression')) {
                obj['expression'] = ApiClient.convertToType(data['expression'], 'String');
            }
            if (data.hasOwnProperty('options')) {
                obj['options'] = FacetRequestOptions.constructFromObject(data['options']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FacetRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FacetRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of FacetRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['expression'] && !(typeof data['expression'] === 'string' || data['expression'] instanceof String)) {
            throw new Error("Expected the field `expression` to be a primitive type in the JSON string but got " + data['expression']);
        }
        // validate the optional field `options`
        if (data['options']) { // data not null
          FacetRequestOptions.validateJSON(data['options']);
        }

        return true;
    }


}

FacetRequest.RequiredProperties = ["expression"];

/**
 * The column or list of columns to summarize by
 * @member {String} expression
 */
FacetRequest.prototype['expression'] = undefined;

/**
 * @member {module:model/FacetRequestOptions} options
 */
FacetRequest.prototype['options'] = undefined;






export default FacetRequest;

