/**
 * Azure Resource Graph
 * Azure Resource Graph API Reference
 *
 * The version of the OpenAPI document: 2019-04-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIQueryRequestOptions.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIQueryRequestOptions::OAIQueryRequestOptions(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIQueryRequestOptions::OAIQueryRequestOptions() {
    this->initializeModel();
}

OAIQueryRequestOptions::~OAIQueryRequestOptions() {}

void OAIQueryRequestOptions::initializeModel() {

    m_skip_isSet = false;
    m_skip_isValid = false;

    m_skip_token_isSet = false;
    m_skip_token_isValid = false;

    m_top_isSet = false;
    m_top_isValid = false;

    m_result_format_isSet = false;
    m_result_format_isValid = false;
}

void OAIQueryRequestOptions::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIQueryRequestOptions::fromJsonObject(QJsonObject json) {

    m_skip_isValid = ::OpenAPI::fromJsonValue(m_skip, json[QString("$skip")]);
    m_skip_isSet = !json[QString("$skip")].isNull() && m_skip_isValid;

    m_skip_token_isValid = ::OpenAPI::fromJsonValue(m_skip_token, json[QString("$skipToken")]);
    m_skip_token_isSet = !json[QString("$skipToken")].isNull() && m_skip_token_isValid;

    m_top_isValid = ::OpenAPI::fromJsonValue(m_top, json[QString("$top")]);
    m_top_isSet = !json[QString("$top")].isNull() && m_top_isValid;

    m_result_format_isValid = ::OpenAPI::fromJsonValue(m_result_format, json[QString("resultFormat")]);
    m_result_format_isSet = !json[QString("resultFormat")].isNull() && m_result_format_isValid;
}

QString OAIQueryRequestOptions::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIQueryRequestOptions::asJsonObject() const {
    QJsonObject obj;
    if (m_skip_isSet) {
        obj.insert(QString("$skip"), ::OpenAPI::toJsonValue(m_skip));
    }
    if (m_skip_token_isSet) {
        obj.insert(QString("$skipToken"), ::OpenAPI::toJsonValue(m_skip_token));
    }
    if (m_top_isSet) {
        obj.insert(QString("$top"), ::OpenAPI::toJsonValue(m_top));
    }
    if (m_result_format_isSet) {
        obj.insert(QString("resultFormat"), ::OpenAPI::toJsonValue(m_result_format));
    }
    return obj;
}

qint32 OAIQueryRequestOptions::getSkip() const {
    return m_skip;
}
void OAIQueryRequestOptions::setSkip(const qint32 &skip) {
    m_skip = skip;
    m_skip_isSet = true;
}

bool OAIQueryRequestOptions::is_skip_Set() const{
    return m_skip_isSet;
}

bool OAIQueryRequestOptions::is_skip_Valid() const{
    return m_skip_isValid;
}

QString OAIQueryRequestOptions::getSkipToken() const {
    return m_skip_token;
}
void OAIQueryRequestOptions::setSkipToken(const QString &skip_token) {
    m_skip_token = skip_token;
    m_skip_token_isSet = true;
}

bool OAIQueryRequestOptions::is_skip_token_Set() const{
    return m_skip_token_isSet;
}

bool OAIQueryRequestOptions::is_skip_token_Valid() const{
    return m_skip_token_isValid;
}

qint32 OAIQueryRequestOptions::getTop() const {
    return m_top;
}
void OAIQueryRequestOptions::setTop(const qint32 &top) {
    m_top = top;
    m_top_isSet = true;
}

bool OAIQueryRequestOptions::is_top_Set() const{
    return m_top_isSet;
}

bool OAIQueryRequestOptions::is_top_Valid() const{
    return m_top_isValid;
}

QString OAIQueryRequestOptions::getResultFormat() const {
    return m_result_format;
}
void OAIQueryRequestOptions::setResultFormat(const QString &result_format) {
    m_result_format = result_format;
    m_result_format_isSet = true;
}

bool OAIQueryRequestOptions::is_result_format_Set() const{
    return m_result_format_isSet;
}

bool OAIQueryRequestOptions::is_result_format_Valid() const{
    return m_result_format_isValid;
}

bool OAIQueryRequestOptions::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_skip_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_skip_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_top_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_result_format_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIQueryRequestOptions::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
