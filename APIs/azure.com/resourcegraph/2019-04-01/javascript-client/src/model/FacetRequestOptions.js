/**
 * Azure Resource Graph
 * Azure Resource Graph API Reference
 *
 * The version of the OpenAPI document: 2019-04-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The FacetRequestOptions model module.
 * @module model/FacetRequestOptions
 * @version 2019-04-01
 */
class FacetRequestOptions {
    /**
     * Constructs a new <code>FacetRequestOptions</code>.
     * The options for facet evaluation
     * @alias module:model/FacetRequestOptions
     */
    constructor() { 
        
        FacetRequestOptions.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
        obj['sortOrder'] = 'desc';
    }

    /**
     * Constructs a <code>FacetRequestOptions</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FacetRequestOptions} obj Optional instance to populate.
     * @return {module:model/FacetRequestOptions} The populated <code>FacetRequestOptions</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FacetRequestOptions();

            if (data.hasOwnProperty('$top')) {
                obj['$top'] = ApiClient.convertToType(data['$top'], 'Number');
            }
            if (data.hasOwnProperty('filter')) {
                obj['filter'] = ApiClient.convertToType(data['filter'], 'String');
            }
            if (data.hasOwnProperty('sortBy')) {
                obj['sortBy'] = ApiClient.convertToType(data['sortBy'], 'String');
            }
            if (data.hasOwnProperty('sortOrder')) {
                obj['sortOrder'] = ApiClient.convertToType(data['sortOrder'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FacetRequestOptions</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FacetRequestOptions</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['filter'] && !(typeof data['filter'] === 'string' || data['filter'] instanceof String)) {
            throw new Error("Expected the field `filter` to be a primitive type in the JSON string but got " + data['filter']);
        }
        // ensure the json data is a string
        if (data['sortBy'] && !(typeof data['sortBy'] === 'string' || data['sortBy'] instanceof String)) {
            throw new Error("Expected the field `sortBy` to be a primitive type in the JSON string but got " + data['sortBy']);
        }
        // ensure the json data is a string
        if (data['sortOrder'] && !(typeof data['sortOrder'] === 'string' || data['sortOrder'] instanceof String)) {
            throw new Error("Expected the field `sortOrder` to be a primitive type in the JSON string but got " + data['sortOrder']);
        }

        return true;
    }


}



/**
 * The maximum number of facet rows that should be returned.
 * @member {Number} $top
 */
FacetRequestOptions.prototype['$top'] = undefined;

/**
 * Specifies the filter condition for the 'where' clause which will be run on main query's result, just before the actual faceting.
 * @member {String} filter
 */
FacetRequestOptions.prototype['filter'] = undefined;

/**
 * The column name or query expression to sort on. Defaults to count if not present.
 * @member {String} sortBy
 */
FacetRequestOptions.prototype['sortBy'] = undefined;

/**
 * The sorting order by the selected column (count by default).
 * @member {module:model/FacetRequestOptions.SortOrderEnum} sortOrder
 * @default 'desc'
 */
FacetRequestOptions.prototype['sortOrder'] = 'desc';





/**
 * Allowed values for the <code>sortOrder</code> property.
 * @enum {String}
 * @readonly
 */
FacetRequestOptions['SortOrderEnum'] = {

    /**
     * value: "asc"
     * @const
     */
    "asc": "asc",

    /**
     * value: "desc"
     * @const
     */
    "desc": "desc"
};



export default FacetRequestOptions;

