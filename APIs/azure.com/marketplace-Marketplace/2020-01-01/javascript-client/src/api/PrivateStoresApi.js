/**
 * Marketplace RP Service
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2020-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ErrorResponse from '../model/ErrorResponse';
import Offer from '../model/Offer';
import OfferListResponse from '../model/OfferListResponse';
import PrivateStoreList from '../model/PrivateStoreList';
import PrivateStoreProperties from '../model/PrivateStoreProperties';

/**
* PrivateStores service.
* @module api/PrivateStoresApi
* @version 2020-01-01
*/
export default class PrivateStoresApi {

    /**
    * Constructs a new PrivateStoresApi. 
    * @alias module:api/PrivateStoresApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the privateStoreCreateOrUpdate operation.
     * @callback module:api/PrivateStoresApi~privateStoreCreateOrUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PrivateStoreProperties} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Changes private store properties
     * @param {String} privateStoreId The store ID - must use the tenant ID
     * @param {String} apiVersion The API version to use for the request.
     * @param {Object} opts Optional parameters
     * @param {module:model/PrivateStoreProperties} [payload] 
     * @param {module:api/PrivateStoresApi~privateStoreCreateOrUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PrivateStoreProperties}
     */
    privateStoreCreateOrUpdate(privateStoreId, apiVersion, opts, callback) {
      opts = opts || {};
      let postBody = opts['payload'];
      // verify the required parameter 'privateStoreId' is set
      if (privateStoreId === undefined || privateStoreId === null) {
        throw new Error("Missing the required parameter 'privateStoreId' when calling privateStoreCreateOrUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling privateStoreCreateOrUpdate");
      }

      let pathParams = {
        'PrivateStoreId': privateStoreId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = PrivateStoreProperties;
      return this.apiClient.callApi(
        '/providers/Microsoft.Marketplace/privateStores/{PrivateStoreId}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the privateStoreDelete operation.
     * @callback module:api/PrivateStoresApi~privateStoreDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes the private store. All that is not saved will be lost.
     * @param {String} privateStoreId The store ID - must use the tenant ID
     * @param {String} apiVersion The API version to use for the request.
     * @param {module:api/PrivateStoresApi~privateStoreDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    privateStoreDelete(privateStoreId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'privateStoreId' is set
      if (privateStoreId === undefined || privateStoreId === null) {
        throw new Error("Missing the required parameter 'privateStoreId' when calling privateStoreDelete");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling privateStoreDelete");
      }

      let pathParams = {
        'PrivateStoreId': privateStoreId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/providers/Microsoft.Marketplace/privateStores/{PrivateStoreId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the privateStoreGet operation.
     * @callback module:api/PrivateStoresApi~privateStoreGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PrivateStoreProperties} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get information about the private store
     * @param {String} privateStoreId The store ID - must use the tenant ID
     * @param {String} apiVersion The API version to use for the request.
     * @param {module:api/PrivateStoresApi~privateStoreGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PrivateStoreProperties}
     */
    privateStoreGet(privateStoreId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'privateStoreId' is set
      if (privateStoreId === undefined || privateStoreId === null) {
        throw new Error("Missing the required parameter 'privateStoreId' when calling privateStoreGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling privateStoreGet");
      }

      let pathParams = {
        'PrivateStoreId': privateStoreId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PrivateStoreProperties;
      return this.apiClient.callApi(
        '/providers/Microsoft.Marketplace/privateStores/{PrivateStoreId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the privateStoreList operation.
     * @callback module:api/PrivateStoresApi~privateStoreListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PrivateStoreList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the list of available private stores
     * @param {String} apiVersion The API version to use for the request.
     * @param {module:api/PrivateStoresApi~privateStoreListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PrivateStoreList}
     */
    privateStoreList(apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling privateStoreList");
      }

      let pathParams = {
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PrivateStoreList;
      return this.apiClient.callApi(
        '/providers/Microsoft.Marketplace/privateStores', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the privateStoreOfferCreateOrUpdate operation.
     * @callback module:api/PrivateStoresApi~privateStoreOfferCreateOrUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Offer} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update or add an offer to the default collection of the private store.
     * @param {String} offerId The offer ID to update or delete
     * @param {String} privateStoreId The store ID - must use the tenant ID
     * @param {String} apiVersion The API version to use for the request.
     * @param {Object} opts Optional parameters
     * @param {module:model/Offer} [payload] 
     * @param {module:api/PrivateStoresApi~privateStoreOfferCreateOrUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Offer}
     */
    privateStoreOfferCreateOrUpdate(offerId, privateStoreId, apiVersion, opts, callback) {
      opts = opts || {};
      let postBody = opts['payload'];
      // verify the required parameter 'offerId' is set
      if (offerId === undefined || offerId === null) {
        throw new Error("Missing the required parameter 'offerId' when calling privateStoreOfferCreateOrUpdate");
      }
      // verify the required parameter 'privateStoreId' is set
      if (privateStoreId === undefined || privateStoreId === null) {
        throw new Error("Missing the required parameter 'privateStoreId' when calling privateStoreOfferCreateOrUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling privateStoreOfferCreateOrUpdate");
      }

      let pathParams = {
        'OfferId': offerId,
        'PrivateStoreId': privateStoreId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Offer;
      return this.apiClient.callApi(
        '/providers/Microsoft.Marketplace/privateStores/{PrivateStoreId}/offers/{OfferId}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the privateStoreOfferDelete operation.
     * @callback module:api/PrivateStoresApi~privateStoreOfferDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes an offer from the given private store.
     * @param {String} offerId The offer ID to update or delete
     * @param {String} privateStoreId The store ID - must use the tenant ID
     * @param {String} apiVersion The API version to use for the request.
     * @param {module:api/PrivateStoresApi~privateStoreOfferDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    privateStoreOfferDelete(offerId, privateStoreId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'offerId' is set
      if (offerId === undefined || offerId === null) {
        throw new Error("Missing the required parameter 'offerId' when calling privateStoreOfferDelete");
      }
      // verify the required parameter 'privateStoreId' is set
      if (privateStoreId === undefined || privateStoreId === null) {
        throw new Error("Missing the required parameter 'privateStoreId' when calling privateStoreOfferDelete");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling privateStoreOfferDelete");
      }

      let pathParams = {
        'OfferId': offerId,
        'PrivateStoreId': privateStoreId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = null;
      return this.apiClient.callApi(
        '/providers/Microsoft.Marketplace/privateStores/{PrivateStoreId}/offers/{OfferId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the privateStoreOfferGet operation.
     * @callback module:api/PrivateStoresApi~privateStoreOfferGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Offer} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets information about a specific offer.
     * @param {String} offerId The offer ID to update or delete
     * @param {String} privateStoreId The store ID - must use the tenant ID
     * @param {String} apiVersion The API version to use for the request.
     * @param {module:api/PrivateStoresApi~privateStoreOfferGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Offer}
     */
    privateStoreOfferGet(offerId, privateStoreId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'offerId' is set
      if (offerId === undefined || offerId === null) {
        throw new Error("Missing the required parameter 'offerId' when calling privateStoreOfferGet");
      }
      // verify the required parameter 'privateStoreId' is set
      if (privateStoreId === undefined || privateStoreId === null) {
        throw new Error("Missing the required parameter 'privateStoreId' when calling privateStoreOfferGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling privateStoreOfferGet");
      }

      let pathParams = {
        'OfferId': offerId,
        'PrivateStoreId': privateStoreId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Offer;
      return this.apiClient.callApi(
        '/providers/Microsoft.Marketplace/privateStores/{PrivateStoreId}/offers/{OfferId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the privateStoreOffersList operation.
     * @callback module:api/PrivateStoresApi~privateStoreOffersListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/OfferListResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a list of all private offers in the given private store
     * @param {String} privateStoreId The store ID - must use the tenant ID
     * @param {String} apiVersion The API version to use for the request.
     * @param {module:api/PrivateStoresApi~privateStoreOffersListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/OfferListResponse}
     */
    privateStoreOffersList(privateStoreId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'privateStoreId' is set
      if (privateStoreId === undefined || privateStoreId === null) {
        throw new Error("Missing the required parameter 'privateStoreId' when calling privateStoreOffersList");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling privateStoreOffersList");
      }

      let pathParams = {
        'PrivateStoreId': privateStoreId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = OfferListResponse;
      return this.apiClient.callApi(
        '/providers/Microsoft.Marketplace/privateStores/{PrivateStoreId}/offers', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
