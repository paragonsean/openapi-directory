/**
 * Face Client
 * An API for face detection, verification, and identification.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.FaceClient);
  }
}(this, function(expect, FaceClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new FaceClient.FaceLandmarks();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('FaceLandmarks', function() {
    it('should create an instance of FaceLandmarks', function() {
      // uncomment below and update the code to test FaceLandmarks
      //var instance = new FaceClient.FaceLandmarks();
      //expect(instance).to.be.a(FaceClient.FaceLandmarks);
    });

    it('should have the property eyeLeftBottom (base name: "eyeLeftBottom")', function() {
      // uncomment below and update the code to test the property eyeLeftBottom
      //var instance = new FaceClient.FaceLandmarks();
      //expect(instance).to.be();
    });

    it('should have the property eyeLeftInner (base name: "eyeLeftInner")', function() {
      // uncomment below and update the code to test the property eyeLeftInner
      //var instance = new FaceClient.FaceLandmarks();
      //expect(instance).to.be();
    });

    it('should have the property eyeLeftOuter (base name: "eyeLeftOuter")', function() {
      // uncomment below and update the code to test the property eyeLeftOuter
      //var instance = new FaceClient.FaceLandmarks();
      //expect(instance).to.be();
    });

    it('should have the property eyeLeftTop (base name: "eyeLeftTop")', function() {
      // uncomment below and update the code to test the property eyeLeftTop
      //var instance = new FaceClient.FaceLandmarks();
      //expect(instance).to.be();
    });

    it('should have the property eyeRightBottom (base name: "eyeRightBottom")', function() {
      // uncomment below and update the code to test the property eyeRightBottom
      //var instance = new FaceClient.FaceLandmarks();
      //expect(instance).to.be();
    });

    it('should have the property eyeRightInner (base name: "eyeRightInner")', function() {
      // uncomment below and update the code to test the property eyeRightInner
      //var instance = new FaceClient.FaceLandmarks();
      //expect(instance).to.be();
    });

    it('should have the property eyeRightOuter (base name: "eyeRightOuter")', function() {
      // uncomment below and update the code to test the property eyeRightOuter
      //var instance = new FaceClient.FaceLandmarks();
      //expect(instance).to.be();
    });

    it('should have the property eyeRightTop (base name: "eyeRightTop")', function() {
      // uncomment below and update the code to test the property eyeRightTop
      //var instance = new FaceClient.FaceLandmarks();
      //expect(instance).to.be();
    });

    it('should have the property eyebrowLeftInner (base name: "eyebrowLeftInner")', function() {
      // uncomment below and update the code to test the property eyebrowLeftInner
      //var instance = new FaceClient.FaceLandmarks();
      //expect(instance).to.be();
    });

    it('should have the property eyebrowLeftOuter (base name: "eyebrowLeftOuter")', function() {
      // uncomment below and update the code to test the property eyebrowLeftOuter
      //var instance = new FaceClient.FaceLandmarks();
      //expect(instance).to.be();
    });

    it('should have the property eyebrowRightInner (base name: "eyebrowRightInner")', function() {
      // uncomment below and update the code to test the property eyebrowRightInner
      //var instance = new FaceClient.FaceLandmarks();
      //expect(instance).to.be();
    });

    it('should have the property eyebrowRightOuter (base name: "eyebrowRightOuter")', function() {
      // uncomment below and update the code to test the property eyebrowRightOuter
      //var instance = new FaceClient.FaceLandmarks();
      //expect(instance).to.be();
    });

    it('should have the property mouthLeft (base name: "mouthLeft")', function() {
      // uncomment below and update the code to test the property mouthLeft
      //var instance = new FaceClient.FaceLandmarks();
      //expect(instance).to.be();
    });

    it('should have the property mouthRight (base name: "mouthRight")', function() {
      // uncomment below and update the code to test the property mouthRight
      //var instance = new FaceClient.FaceLandmarks();
      //expect(instance).to.be();
    });

    it('should have the property noseLeftAlarOutTip (base name: "noseLeftAlarOutTip")', function() {
      // uncomment below and update the code to test the property noseLeftAlarOutTip
      //var instance = new FaceClient.FaceLandmarks();
      //expect(instance).to.be();
    });

    it('should have the property noseLeftAlarTop (base name: "noseLeftAlarTop")', function() {
      // uncomment below and update the code to test the property noseLeftAlarTop
      //var instance = new FaceClient.FaceLandmarks();
      //expect(instance).to.be();
    });

    it('should have the property noseRightAlarOutTip (base name: "noseRightAlarOutTip")', function() {
      // uncomment below and update the code to test the property noseRightAlarOutTip
      //var instance = new FaceClient.FaceLandmarks();
      //expect(instance).to.be();
    });

    it('should have the property noseRightAlarTop (base name: "noseRightAlarTop")', function() {
      // uncomment below and update the code to test the property noseRightAlarTop
      //var instance = new FaceClient.FaceLandmarks();
      //expect(instance).to.be();
    });

    it('should have the property noseRootLeft (base name: "noseRootLeft")', function() {
      // uncomment below and update the code to test the property noseRootLeft
      //var instance = new FaceClient.FaceLandmarks();
      //expect(instance).to.be();
    });

    it('should have the property noseRootRight (base name: "noseRootRight")', function() {
      // uncomment below and update the code to test the property noseRootRight
      //var instance = new FaceClient.FaceLandmarks();
      //expect(instance).to.be();
    });

    it('should have the property noseTip (base name: "noseTip")', function() {
      // uncomment below and update the code to test the property noseTip
      //var instance = new FaceClient.FaceLandmarks();
      //expect(instance).to.be();
    });

    it('should have the property pupilLeft (base name: "pupilLeft")', function() {
      // uncomment below and update the code to test the property pupilLeft
      //var instance = new FaceClient.FaceLandmarks();
      //expect(instance).to.be();
    });

    it('should have the property pupilRight (base name: "pupilRight")', function() {
      // uncomment below and update the code to test the property pupilRight
      //var instance = new FaceClient.FaceLandmarks();
      //expect(instance).to.be();
    });

    it('should have the property underLipBottom (base name: "underLipBottom")', function() {
      // uncomment below and update the code to test the property underLipBottom
      //var instance = new FaceClient.FaceLandmarks();
      //expect(instance).to.be();
    });

    it('should have the property underLipTop (base name: "underLipTop")', function() {
      // uncomment below and update the code to test the property underLipTop
      //var instance = new FaceClient.FaceLandmarks();
      //expect(instance).to.be();
    });

    it('should have the property upperLipBottom (base name: "upperLipBottom")', function() {
      // uncomment below and update the code to test the property upperLipBottom
      //var instance = new FaceClient.FaceLandmarks();
      //expect(instance).to.be();
    });

    it('should have the property upperLipTop (base name: "upperLipTop")', function() {
      // uncomment below and update the code to test the property upperLipTop
      //var instance = new FaceClient.FaceLandmarks();
      //expect(instance).to.be();
    });

  });

}));
