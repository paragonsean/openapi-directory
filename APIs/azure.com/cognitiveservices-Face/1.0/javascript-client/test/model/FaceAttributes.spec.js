/**
 * Face Client
 * An API for face detection, verification, and identification.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.FaceClient);
  }
}(this, function(expect, FaceClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new FaceClient.FaceAttributes();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('FaceAttributes', function() {
    it('should create an instance of FaceAttributes', function() {
      // uncomment below and update the code to test FaceAttributes
      //var instance = new FaceClient.FaceAttributes();
      //expect(instance).to.be.a(FaceClient.FaceAttributes);
    });

    it('should have the property accessories (base name: "accessories")', function() {
      // uncomment below and update the code to test the property accessories
      //var instance = new FaceClient.FaceAttributes();
      //expect(instance).to.be();
    });

    it('should have the property age (base name: "age")', function() {
      // uncomment below and update the code to test the property age
      //var instance = new FaceClient.FaceAttributes();
      //expect(instance).to.be();
    });

    it('should have the property blur (base name: "blur")', function() {
      // uncomment below and update the code to test the property blur
      //var instance = new FaceClient.FaceAttributes();
      //expect(instance).to.be();
    });

    it('should have the property emotion (base name: "emotion")', function() {
      // uncomment below and update the code to test the property emotion
      //var instance = new FaceClient.FaceAttributes();
      //expect(instance).to.be();
    });

    it('should have the property exposure (base name: "exposure")', function() {
      // uncomment below and update the code to test the property exposure
      //var instance = new FaceClient.FaceAttributes();
      //expect(instance).to.be();
    });

    it('should have the property facialHair (base name: "facialHair")', function() {
      // uncomment below and update the code to test the property facialHair
      //var instance = new FaceClient.FaceAttributes();
      //expect(instance).to.be();
    });

    it('should have the property gender (base name: "gender")', function() {
      // uncomment below and update the code to test the property gender
      //var instance = new FaceClient.FaceAttributes();
      //expect(instance).to.be();
    });

    it('should have the property glasses (base name: "glasses")', function() {
      // uncomment below and update the code to test the property glasses
      //var instance = new FaceClient.FaceAttributes();
      //expect(instance).to.be();
    });

    it('should have the property hair (base name: "hair")', function() {
      // uncomment below and update the code to test the property hair
      //var instance = new FaceClient.FaceAttributes();
      //expect(instance).to.be();
    });

    it('should have the property headPose (base name: "headPose")', function() {
      // uncomment below and update the code to test the property headPose
      //var instance = new FaceClient.FaceAttributes();
      //expect(instance).to.be();
    });

    it('should have the property makeup (base name: "makeup")', function() {
      // uncomment below and update the code to test the property makeup
      //var instance = new FaceClient.FaceAttributes();
      //expect(instance).to.be();
    });

    it('should have the property noise (base name: "noise")', function() {
      // uncomment below and update the code to test the property noise
      //var instance = new FaceClient.FaceAttributes();
      //expect(instance).to.be();
    });

    it('should have the property occlusion (base name: "occlusion")', function() {
      // uncomment below and update the code to test the property occlusion
      //var instance = new FaceClient.FaceAttributes();
      //expect(instance).to.be();
    });

    it('should have the property smile (base name: "smile")', function() {
      // uncomment below and update the code to test the property smile
      //var instance = new FaceClient.FaceAttributes();
      //expect(instance).to.be();
    });

  });

}));
