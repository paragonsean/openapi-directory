/**
 * Face Client
 * An API for face detection, verification, and identification.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The IdentifyRequest model module.
 * @module model/IdentifyRequest
 * @version 1.0
 */
class IdentifyRequest {
    /**
     * Constructs a new <code>IdentifyRequest</code>.
     * Request body for identify face operation.
     * @alias module:model/IdentifyRequest
     * @param faceIds {Array.<String>} Array of query faces faceIds, created by the Face - Detect. Each of the faces are identified independently. The valid number of faceIds is between [1, 10].
     */
    constructor(faceIds) { 
        
        IdentifyRequest.initialize(this, faceIds);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, faceIds) { 
        obj['faceIds'] = faceIds;
    }

    /**
     * Constructs a <code>IdentifyRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IdentifyRequest} obj Optional instance to populate.
     * @return {module:model/IdentifyRequest} The populated <code>IdentifyRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IdentifyRequest();

            if (data.hasOwnProperty('confidenceThreshold')) {
                obj['confidenceThreshold'] = ApiClient.convertToType(data['confidenceThreshold'], 'Number');
            }
            if (data.hasOwnProperty('faceIds')) {
                obj['faceIds'] = ApiClient.convertToType(data['faceIds'], ['String']);
            }
            if (data.hasOwnProperty('largePersonGroupId')) {
                obj['largePersonGroupId'] = ApiClient.convertToType(data['largePersonGroupId'], 'String');
            }
            if (data.hasOwnProperty('maxNumOfCandidatesReturned')) {
                obj['maxNumOfCandidatesReturned'] = ApiClient.convertToType(data['maxNumOfCandidatesReturned'], 'Number');
            }
            if (data.hasOwnProperty('personGroupId')) {
                obj['personGroupId'] = ApiClient.convertToType(data['personGroupId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IdentifyRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IdentifyRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of IdentifyRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is an array
        if (!Array.isArray(data['faceIds'])) {
            throw new Error("Expected the field `faceIds` to be an array in the JSON data but got " + data['faceIds']);
        }
        // ensure the json data is a string
        if (data['largePersonGroupId'] && !(typeof data['largePersonGroupId'] === 'string' || data['largePersonGroupId'] instanceof String)) {
            throw new Error("Expected the field `largePersonGroupId` to be a primitive type in the JSON string but got " + data['largePersonGroupId']);
        }
        // ensure the json data is a string
        if (data['personGroupId'] && !(typeof data['personGroupId'] === 'string' || data['personGroupId'] instanceof String)) {
            throw new Error("Expected the field `personGroupId` to be a primitive type in the JSON string but got " + data['personGroupId']);
        }

        return true;
    }


}

IdentifyRequest.RequiredProperties = ["faceIds"];

/**
 * A number ranging from 0 to 1 indicating a level of confidence associated with a property.
 * @member {Number} confidenceThreshold
 */
IdentifyRequest.prototype['confidenceThreshold'] = undefined;

/**
 * Array of query faces faceIds, created by the Face - Detect. Each of the faces are identified independently. The valid number of faceIds is between [1, 10].
 * @member {Array.<String>} faceIds
 */
IdentifyRequest.prototype['faceIds'] = undefined;

/**
 * LargePersonGroupId of the target large person group, created by LargePersonGroup - Create. Parameter personGroupId and largePersonGroupId should not be provided at the same time.
 * @member {String} largePersonGroupId
 */
IdentifyRequest.prototype['largePersonGroupId'] = undefined;

/**
 * The range of maxNumOfCandidatesReturned is between 1 and 5 (default is 1).
 * @member {Number} maxNumOfCandidatesReturned
 */
IdentifyRequest.prototype['maxNumOfCandidatesReturned'] = undefined;

/**
 * PersonGroupId of the target person group, created by PersonGroup - Create. Parameter personGroupId and largePersonGroupId should not be provided at the same time.
 * @member {String} personGroupId
 */
IdentifyRequest.prototype['personGroupId'] = undefined;






export default IdentifyRequest;

