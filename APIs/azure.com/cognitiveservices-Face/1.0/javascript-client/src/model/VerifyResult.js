/**
 * Face Client
 * An API for face detection, verification, and identification.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The VerifyResult model module.
 * @module model/VerifyResult
 * @version 1.0
 */
class VerifyResult {
    /**
     * Constructs a new <code>VerifyResult</code>.
     * Result of the verify operation.
     * @alias module:model/VerifyResult
     * @param confidence {Number} A number ranging from 0 to 1 indicating a level of confidence associated with a property.
     * @param isIdentical {Boolean} True if the two faces belong to the same person or the face belongs to the person, otherwise false.
     */
    constructor(confidence, isIdentical) { 
        
        VerifyResult.initialize(this, confidence, isIdentical);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, confidence, isIdentical) { 
        obj['confidence'] = confidence;
        obj['isIdentical'] = isIdentical;
    }

    /**
     * Constructs a <code>VerifyResult</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VerifyResult} obj Optional instance to populate.
     * @return {module:model/VerifyResult} The populated <code>VerifyResult</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VerifyResult();

            if (data.hasOwnProperty('confidence')) {
                obj['confidence'] = ApiClient.convertToType(data['confidence'], 'Number');
            }
            if (data.hasOwnProperty('isIdentical')) {
                obj['isIdentical'] = ApiClient.convertToType(data['isIdentical'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VerifyResult</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VerifyResult</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of VerifyResult.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }

        return true;
    }


}

VerifyResult.RequiredProperties = ["confidence", "isIdentical"];

/**
 * A number ranging from 0 to 1 indicating a level of confidence associated with a property.
 * @member {Number} confidence
 */
VerifyResult.prototype['confidence'] = undefined;

/**
 * True if the two faces belong to the same person or the face belongs to the person, otherwise false.
 * @member {Boolean} isIdentical
 */
VerifyResult.prototype['isIdentical'] = undefined;






export default VerifyResult;

