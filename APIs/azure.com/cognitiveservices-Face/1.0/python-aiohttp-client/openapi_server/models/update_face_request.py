# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateFaceRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, user_data: str=None):
        """UpdateFaceRequest - a model defined in OpenAPI

        :param user_data: The user_data of this UpdateFaceRequest.
        """
        self.openapi_types = {
            'user_data': str
        }

        self.attribute_map = {
            'user_data': 'userData'
        }

        self._user_data = user_data

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateFaceRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateFaceRequest of this UpdateFaceRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def user_data(self):
        """Gets the user_data of this UpdateFaceRequest.

        User-provided data attached to the face. The size limit is 1KB.

        :return: The user_data of this UpdateFaceRequest.
        :rtype: str
        """
        return self._user_data

    @user_data.setter
    def user_data(self, user_data):
        """Sets the user_data of this UpdateFaceRequest.

        User-provided data attached to the face. The size limit is 1KB.

        :param user_data: The user_data of this UpdateFaceRequest.
        :type user_data: str
        """
        if user_data is not None and len(user_data) > 1024:
            raise ValueError("Invalid value for `user_data`, length must be less than or equal to `1024`")

        self._user_data = user_data
