# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Occlusion(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, eye_occluded: bool=None, forehead_occluded: bool=None, mouth_occluded: bool=None):
        """Occlusion - a model defined in OpenAPI

        :param eye_occluded: The eye_occluded of this Occlusion.
        :param forehead_occluded: The forehead_occluded of this Occlusion.
        :param mouth_occluded: The mouth_occluded of this Occlusion.
        """
        self.openapi_types = {
            'eye_occluded': bool,
            'forehead_occluded': bool,
            'mouth_occluded': bool
        }

        self.attribute_map = {
            'eye_occluded': 'eyeOccluded',
            'forehead_occluded': 'foreheadOccluded',
            'mouth_occluded': 'mouthOccluded'
        }

        self._eye_occluded = eye_occluded
        self._forehead_occluded = forehead_occluded
        self._mouth_occluded = mouth_occluded

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Occlusion':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Occlusion of this Occlusion.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def eye_occluded(self):
        """Gets the eye_occluded of this Occlusion.

        A boolean value indicating whether eyes are occluded.

        :return: The eye_occluded of this Occlusion.
        :rtype: bool
        """
        return self._eye_occluded

    @eye_occluded.setter
    def eye_occluded(self, eye_occluded):
        """Sets the eye_occluded of this Occlusion.

        A boolean value indicating whether eyes are occluded.

        :param eye_occluded: The eye_occluded of this Occlusion.
        :type eye_occluded: bool
        """

        self._eye_occluded = eye_occluded

    @property
    def forehead_occluded(self):
        """Gets the forehead_occluded of this Occlusion.

        A boolean value indicating whether forehead is occluded.

        :return: The forehead_occluded of this Occlusion.
        :rtype: bool
        """
        return self._forehead_occluded

    @forehead_occluded.setter
    def forehead_occluded(self, forehead_occluded):
        """Sets the forehead_occluded of this Occlusion.

        A boolean value indicating whether forehead is occluded.

        :param forehead_occluded: The forehead_occluded of this Occlusion.
        :type forehead_occluded: bool
        """

        self._forehead_occluded = forehead_occluded

    @property
    def mouth_occluded(self):
        """Gets the mouth_occluded of this Occlusion.

        A boolean value indicating whether the mouth is occluded.

        :return: The mouth_occluded of this Occlusion.
        :rtype: bool
        """
        return self._mouth_occluded

    @mouth_occluded.setter
    def mouth_occluded(self, mouth_occluded):
        """Sets the mouth_occluded of this Occlusion.

        A boolean value indicating whether the mouth is occluded.

        :param mouth_occluded: The mouth_occluded of this Occlusion.
        :type mouth_occluded: bool
        """

        self._mouth_occluded = mouth_occluded
