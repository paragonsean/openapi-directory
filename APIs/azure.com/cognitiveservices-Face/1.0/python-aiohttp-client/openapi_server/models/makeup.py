# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Makeup(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, eye_makeup: bool=None, lip_makeup: bool=None):
        """Makeup - a model defined in OpenAPI

        :param eye_makeup: The eye_makeup of this Makeup.
        :param lip_makeup: The lip_makeup of this Makeup.
        """
        self.openapi_types = {
            'eye_makeup': bool,
            'lip_makeup': bool
        }

        self.attribute_map = {
            'eye_makeup': 'eyeMakeup',
            'lip_makeup': 'lipMakeup'
        }

        self._eye_makeup = eye_makeup
        self._lip_makeup = lip_makeup

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Makeup':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Makeup of this Makeup.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def eye_makeup(self):
        """Gets the eye_makeup of this Makeup.

        A boolean value describing whether eye makeup is present on a face.

        :return: The eye_makeup of this Makeup.
        :rtype: bool
        """
        return self._eye_makeup

    @eye_makeup.setter
    def eye_makeup(self, eye_makeup):
        """Sets the eye_makeup of this Makeup.

        A boolean value describing whether eye makeup is present on a face.

        :param eye_makeup: The eye_makeup of this Makeup.
        :type eye_makeup: bool
        """

        self._eye_makeup = eye_makeup

    @property
    def lip_makeup(self):
        """Gets the lip_makeup of this Makeup.

        A boolean value describing whether lip makeup is present on a face.

        :return: The lip_makeup of this Makeup.
        :rtype: bool
        """
        return self._lip_makeup

    @lip_makeup.setter
    def lip_makeup(self, lip_makeup):
        """Sets the lip_makeup of this Makeup.

        A boolean value describing whether lip makeup is present on a face.

        :param lip_makeup: The lip_makeup of this Makeup.
        :type lip_makeup: bool
        """

        self._lip_makeup = lip_makeup
