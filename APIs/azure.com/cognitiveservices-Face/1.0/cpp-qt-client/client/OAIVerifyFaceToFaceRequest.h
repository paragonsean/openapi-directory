/**
 * Face Client
 * An API for face detection, verification, and identification.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVerifyFaceToFaceRequest.h
 *
 * Request body for face to face verification.
 */

#ifndef OAIVerifyFaceToFaceRequest_H
#define OAIVerifyFaceToFaceRequest_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIVerifyFaceToFaceRequest : public OAIObject {
public:
    OAIVerifyFaceToFaceRequest();
    OAIVerifyFaceToFaceRequest(QString json);
    ~OAIVerifyFaceToFaceRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getFaceId1() const;
    void setFaceId1(const QString &face_id1);
    bool is_face_id1_Set() const;
    bool is_face_id1_Valid() const;

    QString getFaceId2() const;
    void setFaceId2(const QString &face_id2);
    bool is_face_id2_Set() const;
    bool is_face_id2_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_face_id1;
    bool m_face_id1_isSet;
    bool m_face_id1_isValid;

    QString m_face_id2;
    bool m_face_id2_isSet;
    bool m_face_id2_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVerifyFaceToFaceRequest)

#endif // OAIVerifyFaceToFaceRequest_H
