/**
 * Face Client
 * An API for face detection, verification, and identification.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFaceLandmarks.h
 *
 * A collection of 27-point face landmarks pointing to the important positions of face components.
 */

#ifndef OAIFaceLandmarks_H
#define OAIFaceLandmarks_H

#include <QJsonObject>

#include "OAICoordinate.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICoordinate;

class OAIFaceLandmarks : public OAIObject {
public:
    OAIFaceLandmarks();
    OAIFaceLandmarks(QString json);
    ~OAIFaceLandmarks() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAICoordinate getEyeLeftBottom() const;
    void setEyeLeftBottom(const OAICoordinate &eye_left_bottom);
    bool is_eye_left_bottom_Set() const;
    bool is_eye_left_bottom_Valid() const;

    OAICoordinate getEyeLeftInner() const;
    void setEyeLeftInner(const OAICoordinate &eye_left_inner);
    bool is_eye_left_inner_Set() const;
    bool is_eye_left_inner_Valid() const;

    OAICoordinate getEyeLeftOuter() const;
    void setEyeLeftOuter(const OAICoordinate &eye_left_outer);
    bool is_eye_left_outer_Set() const;
    bool is_eye_left_outer_Valid() const;

    OAICoordinate getEyeLeftTop() const;
    void setEyeLeftTop(const OAICoordinate &eye_left_top);
    bool is_eye_left_top_Set() const;
    bool is_eye_left_top_Valid() const;

    OAICoordinate getEyeRightBottom() const;
    void setEyeRightBottom(const OAICoordinate &eye_right_bottom);
    bool is_eye_right_bottom_Set() const;
    bool is_eye_right_bottom_Valid() const;

    OAICoordinate getEyeRightInner() const;
    void setEyeRightInner(const OAICoordinate &eye_right_inner);
    bool is_eye_right_inner_Set() const;
    bool is_eye_right_inner_Valid() const;

    OAICoordinate getEyeRightOuter() const;
    void setEyeRightOuter(const OAICoordinate &eye_right_outer);
    bool is_eye_right_outer_Set() const;
    bool is_eye_right_outer_Valid() const;

    OAICoordinate getEyeRightTop() const;
    void setEyeRightTop(const OAICoordinate &eye_right_top);
    bool is_eye_right_top_Set() const;
    bool is_eye_right_top_Valid() const;

    OAICoordinate getEyebrowLeftInner() const;
    void setEyebrowLeftInner(const OAICoordinate &eyebrow_left_inner);
    bool is_eyebrow_left_inner_Set() const;
    bool is_eyebrow_left_inner_Valid() const;

    OAICoordinate getEyebrowLeftOuter() const;
    void setEyebrowLeftOuter(const OAICoordinate &eyebrow_left_outer);
    bool is_eyebrow_left_outer_Set() const;
    bool is_eyebrow_left_outer_Valid() const;

    OAICoordinate getEyebrowRightInner() const;
    void setEyebrowRightInner(const OAICoordinate &eyebrow_right_inner);
    bool is_eyebrow_right_inner_Set() const;
    bool is_eyebrow_right_inner_Valid() const;

    OAICoordinate getEyebrowRightOuter() const;
    void setEyebrowRightOuter(const OAICoordinate &eyebrow_right_outer);
    bool is_eyebrow_right_outer_Set() const;
    bool is_eyebrow_right_outer_Valid() const;

    OAICoordinate getMouthLeft() const;
    void setMouthLeft(const OAICoordinate &mouth_left);
    bool is_mouth_left_Set() const;
    bool is_mouth_left_Valid() const;

    OAICoordinate getMouthRight() const;
    void setMouthRight(const OAICoordinate &mouth_right);
    bool is_mouth_right_Set() const;
    bool is_mouth_right_Valid() const;

    OAICoordinate getNoseLeftAlarOutTip() const;
    void setNoseLeftAlarOutTip(const OAICoordinate &nose_left_alar_out_tip);
    bool is_nose_left_alar_out_tip_Set() const;
    bool is_nose_left_alar_out_tip_Valid() const;

    OAICoordinate getNoseLeftAlarTop() const;
    void setNoseLeftAlarTop(const OAICoordinate &nose_left_alar_top);
    bool is_nose_left_alar_top_Set() const;
    bool is_nose_left_alar_top_Valid() const;

    OAICoordinate getNoseRightAlarOutTip() const;
    void setNoseRightAlarOutTip(const OAICoordinate &nose_right_alar_out_tip);
    bool is_nose_right_alar_out_tip_Set() const;
    bool is_nose_right_alar_out_tip_Valid() const;

    OAICoordinate getNoseRightAlarTop() const;
    void setNoseRightAlarTop(const OAICoordinate &nose_right_alar_top);
    bool is_nose_right_alar_top_Set() const;
    bool is_nose_right_alar_top_Valid() const;

    OAICoordinate getNoseRootLeft() const;
    void setNoseRootLeft(const OAICoordinate &nose_root_left);
    bool is_nose_root_left_Set() const;
    bool is_nose_root_left_Valid() const;

    OAICoordinate getNoseRootRight() const;
    void setNoseRootRight(const OAICoordinate &nose_root_right);
    bool is_nose_root_right_Set() const;
    bool is_nose_root_right_Valid() const;

    OAICoordinate getNoseTip() const;
    void setNoseTip(const OAICoordinate &nose_tip);
    bool is_nose_tip_Set() const;
    bool is_nose_tip_Valid() const;

    OAICoordinate getPupilLeft() const;
    void setPupilLeft(const OAICoordinate &pupil_left);
    bool is_pupil_left_Set() const;
    bool is_pupil_left_Valid() const;

    OAICoordinate getPupilRight() const;
    void setPupilRight(const OAICoordinate &pupil_right);
    bool is_pupil_right_Set() const;
    bool is_pupil_right_Valid() const;

    OAICoordinate getUnderLipBottom() const;
    void setUnderLipBottom(const OAICoordinate &under_lip_bottom);
    bool is_under_lip_bottom_Set() const;
    bool is_under_lip_bottom_Valid() const;

    OAICoordinate getUnderLipTop() const;
    void setUnderLipTop(const OAICoordinate &under_lip_top);
    bool is_under_lip_top_Set() const;
    bool is_under_lip_top_Valid() const;

    OAICoordinate getUpperLipBottom() const;
    void setUpperLipBottom(const OAICoordinate &upper_lip_bottom);
    bool is_upper_lip_bottom_Set() const;
    bool is_upper_lip_bottom_Valid() const;

    OAICoordinate getUpperLipTop() const;
    void setUpperLipTop(const OAICoordinate &upper_lip_top);
    bool is_upper_lip_top_Set() const;
    bool is_upper_lip_top_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAICoordinate m_eye_left_bottom;
    bool m_eye_left_bottom_isSet;
    bool m_eye_left_bottom_isValid;

    OAICoordinate m_eye_left_inner;
    bool m_eye_left_inner_isSet;
    bool m_eye_left_inner_isValid;

    OAICoordinate m_eye_left_outer;
    bool m_eye_left_outer_isSet;
    bool m_eye_left_outer_isValid;

    OAICoordinate m_eye_left_top;
    bool m_eye_left_top_isSet;
    bool m_eye_left_top_isValid;

    OAICoordinate m_eye_right_bottom;
    bool m_eye_right_bottom_isSet;
    bool m_eye_right_bottom_isValid;

    OAICoordinate m_eye_right_inner;
    bool m_eye_right_inner_isSet;
    bool m_eye_right_inner_isValid;

    OAICoordinate m_eye_right_outer;
    bool m_eye_right_outer_isSet;
    bool m_eye_right_outer_isValid;

    OAICoordinate m_eye_right_top;
    bool m_eye_right_top_isSet;
    bool m_eye_right_top_isValid;

    OAICoordinate m_eyebrow_left_inner;
    bool m_eyebrow_left_inner_isSet;
    bool m_eyebrow_left_inner_isValid;

    OAICoordinate m_eyebrow_left_outer;
    bool m_eyebrow_left_outer_isSet;
    bool m_eyebrow_left_outer_isValid;

    OAICoordinate m_eyebrow_right_inner;
    bool m_eyebrow_right_inner_isSet;
    bool m_eyebrow_right_inner_isValid;

    OAICoordinate m_eyebrow_right_outer;
    bool m_eyebrow_right_outer_isSet;
    bool m_eyebrow_right_outer_isValid;

    OAICoordinate m_mouth_left;
    bool m_mouth_left_isSet;
    bool m_mouth_left_isValid;

    OAICoordinate m_mouth_right;
    bool m_mouth_right_isSet;
    bool m_mouth_right_isValid;

    OAICoordinate m_nose_left_alar_out_tip;
    bool m_nose_left_alar_out_tip_isSet;
    bool m_nose_left_alar_out_tip_isValid;

    OAICoordinate m_nose_left_alar_top;
    bool m_nose_left_alar_top_isSet;
    bool m_nose_left_alar_top_isValid;

    OAICoordinate m_nose_right_alar_out_tip;
    bool m_nose_right_alar_out_tip_isSet;
    bool m_nose_right_alar_out_tip_isValid;

    OAICoordinate m_nose_right_alar_top;
    bool m_nose_right_alar_top_isSet;
    bool m_nose_right_alar_top_isValid;

    OAICoordinate m_nose_root_left;
    bool m_nose_root_left_isSet;
    bool m_nose_root_left_isValid;

    OAICoordinate m_nose_root_right;
    bool m_nose_root_right_isSet;
    bool m_nose_root_right_isValid;

    OAICoordinate m_nose_tip;
    bool m_nose_tip_isSet;
    bool m_nose_tip_isValid;

    OAICoordinate m_pupil_left;
    bool m_pupil_left_isSet;
    bool m_pupil_left_isValid;

    OAICoordinate m_pupil_right;
    bool m_pupil_right_isSet;
    bool m_pupil_right_isValid;

    OAICoordinate m_under_lip_bottom;
    bool m_under_lip_bottom_isSet;
    bool m_under_lip_bottom_isValid;

    OAICoordinate m_under_lip_top;
    bool m_under_lip_top_isSet;
    bool m_under_lip_top_isValid;

    OAICoordinate m_upper_lip_bottom;
    bool m_upper_lip_bottom_isSet;
    bool m_upper_lip_bottom_isValid;

    OAICoordinate m_upper_lip_top;
    bool m_upper_lip_top_isSet;
    bool m_upper_lip_top_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFaceLandmarks)

#endif // OAIFaceLandmarks_H
