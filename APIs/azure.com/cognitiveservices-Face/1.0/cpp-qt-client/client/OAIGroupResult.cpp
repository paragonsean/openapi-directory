/**
 * Face Client
 * An API for face detection, verification, and identification.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGroupResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGroupResult::OAIGroupResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGroupResult::OAIGroupResult() {
    this->initializeModel();
}

OAIGroupResult::~OAIGroupResult() {}

void OAIGroupResult::initializeModel() {

    m_groups_isSet = false;
    m_groups_isValid = false;

    m_messy_group_isSet = false;
    m_messy_group_isValid = false;
}

void OAIGroupResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGroupResult::fromJsonObject(QJsonObject json) {

    if(json["groups"].isArray()){
        auto arr = json["groups"].toArray();
        m_groups_isValid = true;
        if(arr.count() > 0) {
            for (const QJsonValue jval : arr) {
                QList<QString> item;
                m_groups_isValid &= ::OpenAPI::fromJsonValue(item, jval);
                m_groups_isSet = !jval.isNull() && m_groups_isValid;
                m_groups.push_back(item);
            }
        }
    }

    m_messy_group_isValid = ::OpenAPI::fromJsonValue(m_messy_group, json[QString("messyGroup")]);
    m_messy_group_isSet = !json[QString("messyGroup")].isNull() && m_messy_group_isValid;
}

QString OAIGroupResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGroupResult::asJsonObject() const {
    QJsonObject obj;
    if (m_groups.size() > 0) {
        
        obj.insert(QString("groups"), toJsonValue(m_groups));
    }
    if (m_messy_group.size() > 0) {
        obj.insert(QString("messyGroup"), ::OpenAPI::toJsonValue(m_messy_group));
    }
    return obj;
}

QList<QList<QString>> OAIGroupResult::getGroups() const {
    return m_groups;
}
void OAIGroupResult::setGroups(const QList<QList<QString>> &groups) {
    m_groups = groups;
    m_groups_isSet = true;
}

bool OAIGroupResult::is_groups_Set() const{
    return m_groups_isSet;
}

bool OAIGroupResult::is_groups_Valid() const{
    return m_groups_isValid;
}

QList<QString> OAIGroupResult::getMessyGroup() const {
    return m_messy_group;
}
void OAIGroupResult::setMessyGroup(const QList<QString> &messy_group) {
    m_messy_group = messy_group;
    m_messy_group_isSet = true;
}

bool OAIGroupResult::is_messy_group_Set() const{
    return m_messy_group_isSet;
}

bool OAIGroupResult::is_messy_group_Valid() const{
    return m_messy_group_isValid;
}

bool OAIGroupResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_groups.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_messy_group.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGroupResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_groups_isValid && true;
}

} // namespace OpenAPI
