/**
 * Face Client
 * An API for face detection, verification, and identification.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIIdentifyCandidate.h
 *
 * All possible faces that may qualify.
 */

#ifndef OAIIdentifyCandidate_H
#define OAIIdentifyCandidate_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIIdentifyCandidate : public OAIObject {
public:
    OAIIdentifyCandidate();
    OAIIdentifyCandidate(QString json);
    ~OAIIdentifyCandidate() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getConfidence() const;
    void setConfidence(const double &confidence);
    bool is_confidence_Set() const;
    bool is_confidence_Valid() const;

    QString getPersonId() const;
    void setPersonId(const QString &person_id);
    bool is_person_id_Set() const;
    bool is_person_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_confidence;
    bool m_confidence_isSet;
    bool m_confidence_isValid;

    QString m_person_id;
    bool m_person_id_isSet;
    bool m_person_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIIdentifyCandidate)

#endif // OAIIdentifyCandidate_H
