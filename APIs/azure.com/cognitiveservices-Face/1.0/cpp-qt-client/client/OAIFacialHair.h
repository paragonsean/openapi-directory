/**
 * Face Client
 * An API for face detection, verification, and identification.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFacialHair.h
 *
 * Properties describing facial hair attributes.
 */

#ifndef OAIFacialHair_H
#define OAIFacialHair_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIFacialHair : public OAIObject {
public:
    OAIFacialHair();
    OAIFacialHair(QString json);
    ~OAIFacialHair() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getBeard() const;
    void setBeard(const double &beard);
    bool is_beard_Set() const;
    bool is_beard_Valid() const;

    double getMoustache() const;
    void setMoustache(const double &moustache);
    bool is_moustache_Set() const;
    bool is_moustache_Valid() const;

    double getSideburns() const;
    void setSideburns(const double &sideburns);
    bool is_sideburns_Set() const;
    bool is_sideburns_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_beard;
    bool m_beard_isSet;
    bool m_beard_isValid;

    double m_moustache;
    bool m_moustache_isSet;
    bool m_moustache_isValid;

    double m_sideburns;
    bool m_sideburns_isSet;
    bool m_sideburns_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFacialHair)

#endif // OAIFacialHair_H
