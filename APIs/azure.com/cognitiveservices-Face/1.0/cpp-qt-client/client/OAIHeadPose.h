/**
 * Face Client
 * An API for face detection, verification, and identification.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIHeadPose.h
 *
 * Properties indicating head pose of the face.
 */

#ifndef OAIHeadPose_H
#define OAIHeadPose_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIHeadPose : public OAIObject {
public:
    OAIHeadPose();
    OAIHeadPose(QString json);
    ~OAIHeadPose() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getPitch() const;
    void setPitch(const double &pitch);
    bool is_pitch_Set() const;
    bool is_pitch_Valid() const;

    double getRoll() const;
    void setRoll(const double &roll);
    bool is_roll_Set() const;
    bool is_roll_Valid() const;

    double getYaw() const;
    void setYaw(const double &yaw);
    bool is_yaw_Set() const;
    bool is_yaw_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_pitch;
    bool m_pitch_isSet;
    bool m_pitch_isValid;

    double m_roll;
    bool m_roll_isSet;
    bool m_roll_isValid;

    double m_yaw;
    bool m_yaw_isSet;
    bool m_yaw_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIHeadPose)

#endif // OAIHeadPose_H
