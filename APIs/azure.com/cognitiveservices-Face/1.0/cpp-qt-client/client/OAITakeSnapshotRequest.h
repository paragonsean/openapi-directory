/**
 * Face Client
 * An API for face detection, verification, and identification.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITakeSnapshotRequest.h
 *
 * Request body for taking snapshot operation.
 */

#ifndef OAITakeSnapshotRequest_H
#define OAITakeSnapshotRequest_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAITakeSnapshotRequest : public OAIObject {
public:
    OAITakeSnapshotRequest();
    OAITakeSnapshotRequest(QString json);
    ~OAITakeSnapshotRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getApplyScope() const;
    void setApplyScope(const QList<QString> &apply_scope);
    bool is_apply_scope_Set() const;
    bool is_apply_scope_Valid() const;

    QString getObjectId() const;
    void setObjectId(const QString &object_id);
    bool is_object_id_Set() const;
    bool is_object_id_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getUserData() const;
    void setUserData(const QString &user_data);
    bool is_user_data_Set() const;
    bool is_user_data_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_apply_scope;
    bool m_apply_scope_isSet;
    bool m_apply_scope_isValid;

    QString m_object_id;
    bool m_object_id_isSet;
    bool m_object_id_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_user_data;
    bool m_user_data_isSet;
    bool m_user_data_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITakeSnapshotRequest)

#endif // OAITakeSnapshotRequest_H
