/**
 * Face Client
 * An API for face detection, verification, and identification.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFaceAttributes.h
 *
 * Face Attributes
 */

#ifndef OAIFaceAttributes_H
#define OAIFaceAttributes_H

#include <QJsonObject>

#include "OAIAccessory.h"
#include "OAIBlur.h"
#include "OAIEmotion.h"
#include "OAIExposure.h"
#include "OAIFacialHair.h"
#include "OAIHair.h"
#include "OAIHeadPose.h"
#include "OAIMakeup.h"
#include "OAINoise.h"
#include "OAIOcclusion.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAccessory;
class OAIBlur;
class OAIEmotion;
class OAIExposure;
class OAIFacialHair;
class OAIHair;
class OAIHeadPose;
class OAIMakeup;
class OAINoise;
class OAIOcclusion;

class OAIFaceAttributes : public OAIObject {
public:
    OAIFaceAttributes();
    OAIFaceAttributes(QString json);
    ~OAIFaceAttributes() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIAccessory> getAccessories() const;
    void setAccessories(const QList<OAIAccessory> &accessories);
    bool is_accessories_Set() const;
    bool is_accessories_Valid() const;

    double getAge() const;
    void setAge(const double &age);
    bool is_age_Set() const;
    bool is_age_Valid() const;

    OAIBlur getBlur() const;
    void setBlur(const OAIBlur &blur);
    bool is_blur_Set() const;
    bool is_blur_Valid() const;

    OAIEmotion getEmotion() const;
    void setEmotion(const OAIEmotion &emotion);
    bool is_emotion_Set() const;
    bool is_emotion_Valid() const;

    OAIExposure getExposure() const;
    void setExposure(const OAIExposure &exposure);
    bool is_exposure_Set() const;
    bool is_exposure_Valid() const;

    OAIFacialHair getFacialHair() const;
    void setFacialHair(const OAIFacialHair &facial_hair);
    bool is_facial_hair_Set() const;
    bool is_facial_hair_Valid() const;

    QString getGender() const;
    void setGender(const QString &gender);
    bool is_gender_Set() const;
    bool is_gender_Valid() const;

    QString getGlasses() const;
    void setGlasses(const QString &glasses);
    bool is_glasses_Set() const;
    bool is_glasses_Valid() const;

    OAIHair getHair() const;
    void setHair(const OAIHair &hair);
    bool is_hair_Set() const;
    bool is_hair_Valid() const;

    OAIHeadPose getHeadPose() const;
    void setHeadPose(const OAIHeadPose &head_pose);
    bool is_head_pose_Set() const;
    bool is_head_pose_Valid() const;

    OAIMakeup getMakeup() const;
    void setMakeup(const OAIMakeup &makeup);
    bool is_makeup_Set() const;
    bool is_makeup_Valid() const;

    OAINoise getNoise() const;
    void setNoise(const OAINoise &noise);
    bool is_noise_Set() const;
    bool is_noise_Valid() const;

    OAIOcclusion getOcclusion() const;
    void setOcclusion(const OAIOcclusion &occlusion);
    bool is_occlusion_Set() const;
    bool is_occlusion_Valid() const;

    double getSmile() const;
    void setSmile(const double &smile);
    bool is_smile_Set() const;
    bool is_smile_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIAccessory> m_accessories;
    bool m_accessories_isSet;
    bool m_accessories_isValid;

    double m_age;
    bool m_age_isSet;
    bool m_age_isValid;

    OAIBlur m_blur;
    bool m_blur_isSet;
    bool m_blur_isValid;

    OAIEmotion m_emotion;
    bool m_emotion_isSet;
    bool m_emotion_isValid;

    OAIExposure m_exposure;
    bool m_exposure_isSet;
    bool m_exposure_isValid;

    OAIFacialHair m_facial_hair;
    bool m_facial_hair_isSet;
    bool m_facial_hair_isValid;

    QString m_gender;
    bool m_gender_isSet;
    bool m_gender_isValid;

    QString m_glasses;
    bool m_glasses_isSet;
    bool m_glasses_isValid;

    OAIHair m_hair;
    bool m_hair_isSet;
    bool m_hair_isValid;

    OAIHeadPose m_head_pose;
    bool m_head_pose_isSet;
    bool m_head_pose_isValid;

    OAIMakeup m_makeup;
    bool m_makeup_isSet;
    bool m_makeup_isValid;

    OAINoise m_noise;
    bool m_noise_isSet;
    bool m_noise_isValid;

    OAIOcclusion m_occlusion;
    bool m_occlusion_isSet;
    bool m_occlusion_isValid;

    double m_smile;
    bool m_smile_isSet;
    bool m_smile_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFaceAttributes)

#endif // OAIFaceAttributes_H
