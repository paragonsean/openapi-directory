/**
 * MariaDBManagementClient
 * The Microsoft Azure management API provides create, read, update, and delete functionality for Azure MariaDB resources including servers, databases, firewall rules, VNET rules, security alert policies, log files, encryption keys, active directory administrator and configurations.
 *
 * The version of the OpenAPI document: 2020-01-01-privatepreview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MariaDbManagementClient);
  }
}(this, function(expect, MariaDbManagementClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MariaDbManagementClient.ServerKeysApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ServerKeysApi', function() {
    describe('serverKeysCreateOrUpdate', function() {
      it('should call serverKeysCreateOrUpdate successfully', function(done) {
        //uncomment below and update the code to test serverKeysCreateOrUpdate
        //instance.serverKeysCreateOrUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('serverKeysDelete', function() {
      it('should call serverKeysDelete successfully', function(done) {
        //uncomment below and update the code to test serverKeysDelete
        //instance.serverKeysDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('serverKeysGet', function() {
      it('should call serverKeysGet successfully', function(done) {
        //uncomment below and update the code to test serverKeysGet
        //instance.serverKeysGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('serverKeysListByInstance', function() {
      it('should call serverKeysListByInstance successfully', function(done) {
        //uncomment below and update the code to test serverKeysListByInstance
        //instance.serverKeysListByInstance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
