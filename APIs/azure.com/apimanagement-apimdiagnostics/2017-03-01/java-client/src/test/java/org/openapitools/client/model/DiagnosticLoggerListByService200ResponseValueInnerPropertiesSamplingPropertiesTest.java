/*
 * ApiManagementClient
 * Use these REST APIs for performing operations on Diagnostic entity associated with your Azure API Management deployment. Diagnostics are used to log requests/responses in the APIM proxy.
 *
 * The version of the OpenAPI document: 2017-03-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for DiagnosticLoggerListByService200ResponseValueInnerPropertiesSamplingProperties
 */
public class DiagnosticLoggerListByService200ResponseValueInnerPropertiesSamplingPropertiesTest {
    private final DiagnosticLoggerListByService200ResponseValueInnerPropertiesSamplingProperties model = new DiagnosticLoggerListByService200ResponseValueInnerPropertiesSamplingProperties();

    /**
     * Model tests for DiagnosticLoggerListByService200ResponseValueInnerPropertiesSamplingProperties
     */
    @Test
    public void testDiagnosticLoggerListByService200ResponseValueInnerPropertiesSamplingProperties() {
        // TODO: test DiagnosticLoggerListByService200ResponseValueInnerPropertiesSamplingProperties
    }

    /**
     * Test the property 'evaluationInterval'
     */
    @Test
    public void evaluationIntervalTest() {
        // TODO: test evaluationInterval
    }

    /**
     * Test the property 'initialPercentage'
     */
    @Test
    public void initialPercentageTest() {
        // TODO: test initialPercentage
    }

    /**
     * Test the property 'maxPercentage'
     */
    @Test
    public void maxPercentageTest() {
        // TODO: test maxPercentage
    }

    /**
     * Test the property 'maxTelemetryItemsPerSecond'
     */
    @Test
    public void maxTelemetryItemsPerSecondTest() {
        // TODO: test maxTelemetryItemsPerSecond
    }

    /**
     * Test the property 'minPercentage'
     */
    @Test
    public void minPercentageTest() {
        // TODO: test minPercentage
    }

    /**
     * Test the property 'movingAverageRatio'
     */
    @Test
    public void movingAverageRatioTest() {
        // TODO: test movingAverageRatio
    }

    /**
     * Test the property 'percentage'
     */
    @Test
    public void percentageTest() {
        // TODO: test percentage
    }

    /**
     * Test the property 'percentageDecreaseTimeout'
     */
    @Test
    public void percentageDecreaseTimeoutTest() {
        // TODO: test percentageDecreaseTimeout
    }

    /**
     * Test the property 'percentageIncreaseTimeout'
     */
    @Test
    public void percentageIncreaseTimeoutTest() {
        // TODO: test percentageIncreaseTimeout
    }

    /**
     * Test the property 'samplingType'
     */
    @Test
    public void samplingTypeTest() {
        // TODO: test samplingType
    }

}
