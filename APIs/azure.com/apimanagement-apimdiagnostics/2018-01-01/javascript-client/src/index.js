/**
 * ApiManagementClient
 * Use these REST APIs for performing operations on Diagnostic entity associated with your Azure API Management deployment. Diagnostics are used to log requests/responses in the APIM proxy.
 *
 * The version of the OpenAPI document: 2018-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import DiagnosticCollection from './model/DiagnosticCollection';
import DiagnosticContract from './model/DiagnosticContract';
import DiagnosticContractProperties from './model/DiagnosticContractProperties';
import DiagnosticListByServiceDefaultResponse from './model/DiagnosticListByServiceDefaultResponse';
import DiagnosticListByServiceDefaultResponseError from './model/DiagnosticListByServiceDefaultResponseError';
import DiagnosticListByServiceDefaultResponseErrorDetailsInner from './model/DiagnosticListByServiceDefaultResponseErrorDetailsInner';
import DiagnosticLoggerCreateOrUpdate200Response from './model/DiagnosticLoggerCreateOrUpdate200Response';
import DiagnosticLoggerListByService200Response from './model/DiagnosticLoggerListByService200Response';
import DiagnosticLoggerListByService200ResponseValueInner from './model/DiagnosticLoggerListByService200ResponseValueInner';
import DiagnosticLoggerListByService200ResponseValueInnerProperties from './model/DiagnosticLoggerListByService200ResponseValueInnerProperties';
import DiagnosticLoggersApi from './api/DiagnosticLoggersApi';
import DiagnosticsApi from './api/DiagnosticsApi';


/**
* Use these REST APIs for performing operations on Diagnostic entity associated with your Azure API Management deployment. Diagnostics are used to log requests/responses in the APIM proxy..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var ApiManagementClient = require('index'); // See note below*.
* var xxxSvc = new ApiManagementClient.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new ApiManagementClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new ApiManagementClient.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new ApiManagementClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2018-01-01
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The DiagnosticCollection model constructor.
     * @property {module:model/DiagnosticCollection}
     */
    DiagnosticCollection,

    /**
     * The DiagnosticContract model constructor.
     * @property {module:model/DiagnosticContract}
     */
    DiagnosticContract,

    /**
     * The DiagnosticContractProperties model constructor.
     * @property {module:model/DiagnosticContractProperties}
     */
    DiagnosticContractProperties,

    /**
     * The DiagnosticListByServiceDefaultResponse model constructor.
     * @property {module:model/DiagnosticListByServiceDefaultResponse}
     */
    DiagnosticListByServiceDefaultResponse,

    /**
     * The DiagnosticListByServiceDefaultResponseError model constructor.
     * @property {module:model/DiagnosticListByServiceDefaultResponseError}
     */
    DiagnosticListByServiceDefaultResponseError,

    /**
     * The DiagnosticListByServiceDefaultResponseErrorDetailsInner model constructor.
     * @property {module:model/DiagnosticListByServiceDefaultResponseErrorDetailsInner}
     */
    DiagnosticListByServiceDefaultResponseErrorDetailsInner,

    /**
     * The DiagnosticLoggerCreateOrUpdate200Response model constructor.
     * @property {module:model/DiagnosticLoggerCreateOrUpdate200Response}
     */
    DiagnosticLoggerCreateOrUpdate200Response,

    /**
     * The DiagnosticLoggerListByService200Response model constructor.
     * @property {module:model/DiagnosticLoggerListByService200Response}
     */
    DiagnosticLoggerListByService200Response,

    /**
     * The DiagnosticLoggerListByService200ResponseValueInner model constructor.
     * @property {module:model/DiagnosticLoggerListByService200ResponseValueInner}
     */
    DiagnosticLoggerListByService200ResponseValueInner,

    /**
     * The DiagnosticLoggerListByService200ResponseValueInnerProperties model constructor.
     * @property {module:model/DiagnosticLoggerListByService200ResponseValueInnerProperties}
     */
    DiagnosticLoggerListByService200ResponseValueInnerProperties,

    /**
    * The DiagnosticLoggersApi service constructor.
    * @property {module:api/DiagnosticLoggersApi}
    */
    DiagnosticLoggersApi,

    /**
    * The DiagnosticsApi service constructor.
    * @property {module:api/DiagnosticsApi}
    */
    DiagnosticsApi
};
