# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.encryption import Encryption
from openapi_server.models.identity import Identity
from openapi_server import util


class SBNamespaceProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created_at: datetime=None, encryption: Encryption=None, identity: Identity=None, metric_id: str=None, provisioning_state: str=None, service_bus_endpoint: str=None, updated_at: datetime=None, zone_redundant: bool=None):
        """SBNamespaceProperties - a model defined in OpenAPI

        :param created_at: The created_at of this SBNamespaceProperties.
        :param encryption: The encryption of this SBNamespaceProperties.
        :param identity: The identity of this SBNamespaceProperties.
        :param metric_id: The metric_id of this SBNamespaceProperties.
        :param provisioning_state: The provisioning_state of this SBNamespaceProperties.
        :param service_bus_endpoint: The service_bus_endpoint of this SBNamespaceProperties.
        :param updated_at: The updated_at of this SBNamespaceProperties.
        :param zone_redundant: The zone_redundant of this SBNamespaceProperties.
        """
        self.openapi_types = {
            'created_at': datetime,
            'encryption': Encryption,
            'identity': Identity,
            'metric_id': str,
            'provisioning_state': str,
            'service_bus_endpoint': str,
            'updated_at': datetime,
            'zone_redundant': bool
        }

        self.attribute_map = {
            'created_at': 'createdAt',
            'encryption': 'encryption',
            'identity': 'identity',
            'metric_id': 'metricId',
            'provisioning_state': 'provisioningState',
            'service_bus_endpoint': 'serviceBusEndpoint',
            'updated_at': 'updatedAt',
            'zone_redundant': 'zoneRedundant'
        }

        self._created_at = created_at
        self._encryption = encryption
        self._identity = identity
        self._metric_id = metric_id
        self._provisioning_state = provisioning_state
        self._service_bus_endpoint = service_bus_endpoint
        self._updated_at = updated_at
        self._zone_redundant = zone_redundant

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SBNamespaceProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SBNamespaceProperties of this SBNamespaceProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created_at(self):
        """Gets the created_at of this SBNamespaceProperties.

        The time the namespace was created.

        :return: The created_at of this SBNamespaceProperties.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this SBNamespaceProperties.

        The time the namespace was created.

        :param created_at: The created_at of this SBNamespaceProperties.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def encryption(self):
        """Gets the encryption of this SBNamespaceProperties.


        :return: The encryption of this SBNamespaceProperties.
        :rtype: Encryption
        """
        return self._encryption

    @encryption.setter
    def encryption(self, encryption):
        """Sets the encryption of this SBNamespaceProperties.


        :param encryption: The encryption of this SBNamespaceProperties.
        :type encryption: Encryption
        """

        self._encryption = encryption

    @property
    def identity(self):
        """Gets the identity of this SBNamespaceProperties.


        :return: The identity of this SBNamespaceProperties.
        :rtype: Identity
        """
        return self._identity

    @identity.setter
    def identity(self, identity):
        """Sets the identity of this SBNamespaceProperties.


        :param identity: The identity of this SBNamespaceProperties.
        :type identity: Identity
        """

        self._identity = identity

    @property
    def metric_id(self):
        """Gets the metric_id of this SBNamespaceProperties.

        Identifier for Azure Insights metrics

        :return: The metric_id of this SBNamespaceProperties.
        :rtype: str
        """
        return self._metric_id

    @metric_id.setter
    def metric_id(self, metric_id):
        """Sets the metric_id of this SBNamespaceProperties.

        Identifier for Azure Insights metrics

        :param metric_id: The metric_id of this SBNamespaceProperties.
        :type metric_id: str
        """

        self._metric_id = metric_id

    @property
    def provisioning_state(self):
        """Gets the provisioning_state of this SBNamespaceProperties.

        Provisioning state of the namespace.

        :return: The provisioning_state of this SBNamespaceProperties.
        :rtype: str
        """
        return self._provisioning_state

    @provisioning_state.setter
    def provisioning_state(self, provisioning_state):
        """Sets the provisioning_state of this SBNamespaceProperties.

        Provisioning state of the namespace.

        :param provisioning_state: The provisioning_state of this SBNamespaceProperties.
        :type provisioning_state: str
        """

        self._provisioning_state = provisioning_state

    @property
    def service_bus_endpoint(self):
        """Gets the service_bus_endpoint of this SBNamespaceProperties.

        Endpoint you can use to perform Service Bus operations.

        :return: The service_bus_endpoint of this SBNamespaceProperties.
        :rtype: str
        """
        return self._service_bus_endpoint

    @service_bus_endpoint.setter
    def service_bus_endpoint(self, service_bus_endpoint):
        """Sets the service_bus_endpoint of this SBNamespaceProperties.

        Endpoint you can use to perform Service Bus operations.

        :param service_bus_endpoint: The service_bus_endpoint of this SBNamespaceProperties.
        :type service_bus_endpoint: str
        """

        self._service_bus_endpoint = service_bus_endpoint

    @property
    def updated_at(self):
        """Gets the updated_at of this SBNamespaceProperties.

        The time the namespace was updated.

        :return: The updated_at of this SBNamespaceProperties.
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this SBNamespaceProperties.

        The time the namespace was updated.

        :param updated_at: The updated_at of this SBNamespaceProperties.
        :type updated_at: datetime
        """

        self._updated_at = updated_at

    @property
    def zone_redundant(self):
        """Gets the zone_redundant of this SBNamespaceProperties.

        Enabling this property creates a Premium Service Bus Namespace in regions supported availability zones.

        :return: The zone_redundant of this SBNamespaceProperties.
        :rtype: bool
        """
        return self._zone_redundant

    @zone_redundant.setter
    def zone_redundant(self, zone_redundant):
        """Sets the zone_redundant of this SBNamespaceProperties.

        Enabling this property creates a Premium Service Bus Namespace in regions supported availability zones.

        :param zone_redundant: The zone_redundant of this SBNamespaceProperties.
        :type zone_redundant: bool
        """

        self._zone_redundant = zone_redundant
