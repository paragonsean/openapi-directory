/**
 * ApplicationInsightsManagementClient
 * Azure Application Insights workbook type.
 *
 * The version of the OpenAPI document: 2018-06-17-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Workbook from '../model/Workbook';
import WorkbookError from '../model/WorkbookError';
import WorkbookUpdateParameters from '../model/WorkbookUpdateParameters';
import WorkbooksListResult from '../model/WorkbooksListResult';

/**
* Default service.
* @module api/DefaultApi
* @version 2018-06-17-preview
*/
export default class DefaultApi {

    /**
    * Constructs a new DefaultApi. 
    * @alias module:api/DefaultApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the workbooksCreateOrUpdate operation.
     * @callback module:api/DefaultApi~workbooksCreateOrUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Workbook} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a new workbook.
     * @param {String} subscriptionId The ID of the target subscription.
     * @param {String} resourceGroupName The name of the resource group. The name is case insensitive.
     * @param {String} resourceName The name of the Application Insights component resource.
     * @param {String} sourceId Azure Resource Id that will fetch all related workbooks.
     * @param {String} apiVersion The API version to use for this operation.
     * @param {module:model/Workbook} workbookProperties Properties that need to be specified to create a new workbook.
     * @param {module:api/DefaultApi~workbooksCreateOrUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Workbook}
     */
    workbooksCreateOrUpdate(subscriptionId, resourceGroupName, resourceName, sourceId, apiVersion, workbookProperties, callback) {
      let postBody = workbookProperties;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling workbooksCreateOrUpdate");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling workbooksCreateOrUpdate");
      }
      // verify the required parameter 'resourceName' is set
      if (resourceName === undefined || resourceName === null) {
        throw new Error("Missing the required parameter 'resourceName' when calling workbooksCreateOrUpdate");
      }
      // verify the required parameter 'sourceId' is set
      if (sourceId === undefined || sourceId === null) {
        throw new Error("Missing the required parameter 'sourceId' when calling workbooksCreateOrUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling workbooksCreateOrUpdate");
      }
      // verify the required parameter 'workbookProperties' is set
      if (workbookProperties === undefined || workbookProperties === null) {
        throw new Error("Missing the required parameter 'workbookProperties' when calling workbooksCreateOrUpdate");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'resourceName': resourceName
      };
      let queryParams = {
        'sourceId': sourceId,
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Workbook;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroup/{resourceGroupName}/providers/microsoft.insights/workbooks/{resourceName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the workbooksDelete operation.
     * @callback module:api/DefaultApi~workbooksDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete a workbook.
     * @param {String} subscriptionId The ID of the target subscription.
     * @param {String} resourceGroupName The name of the resource group. The name is case insensitive.
     * @param {String} resourceName The name of the Application Insights component resource.
     * @param {String} apiVersion The API version to use for this operation.
     * @param {module:api/DefaultApi~workbooksDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    workbooksDelete(subscriptionId, resourceGroupName, resourceName, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling workbooksDelete");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling workbooksDelete");
      }
      // verify the required parameter 'resourceName' is set
      if (resourceName === undefined || resourceName === null) {
        throw new Error("Missing the required parameter 'resourceName' when calling workbooksDelete");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling workbooksDelete");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'resourceName': resourceName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroup/{resourceGroupName}/providers/microsoft.insights/workbooks/{resourceName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the workbooksGet operation.
     * @callback module:api/DefaultApi~workbooksGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Workbook} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a single workbook by its resourceName.
     * @param {String} subscriptionId The ID of the target subscription.
     * @param {String} resourceGroupName The name of the resource group. The name is case insensitive.
     * @param {String} resourceName The name of the Application Insights component resource.
     * @param {String} apiVersion The API version to use for this operation.
     * @param {module:api/DefaultApi~workbooksGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Workbook}
     */
    workbooksGet(subscriptionId, resourceGroupName, resourceName, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling workbooksGet");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling workbooksGet");
      }
      // verify the required parameter 'resourceName' is set
      if (resourceName === undefined || resourceName === null) {
        throw new Error("Missing the required parameter 'resourceName' when calling workbooksGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling workbooksGet");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'resourceName': resourceName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Workbook;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroup/{resourceGroupName}/providers/microsoft.insights/workbooks/{resourceName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the workbooksListByResourceGroup operation.
     * @callback module:api/DefaultApi~workbooksListByResourceGroupCallback
     * @param {String} error Error message, if any.
     * @param {module:model/WorkbooksListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get all Workbooks defined within a specified resource group and category.
     * @param {String} subscriptionId The ID of the target subscription.
     * @param {String} resourceGroupName The name of the resource group. The name is case insensitive.
     * @param {module:model/String} category Category of workbook to return.
     * @param {String} sourceId Azure Resource Id that will fetch all related workbooks.
     * @param {String} apiVersion The API version to use for this operation.
     * @param {Object} opts Optional parameters
     * @param {Array.<String>} [tags] Tags presents on each workbook returned.
     * @param {Boolean} [canFetchContent] Flag indicating whether or not to return the full content for each applicable workbook. If false, only return summary content for workbooks.
     * @param {module:api/DefaultApi~workbooksListByResourceGroupCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/WorkbooksListResult}
     */
    workbooksListByResourceGroup(subscriptionId, resourceGroupName, category, sourceId, apiVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling workbooksListByResourceGroup");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling workbooksListByResourceGroup");
      }
      // verify the required parameter 'category' is set
      if (category === undefined || category === null) {
        throw new Error("Missing the required parameter 'category' when calling workbooksListByResourceGroup");
      }
      // verify the required parameter 'sourceId' is set
      if (sourceId === undefined || sourceId === null) {
        throw new Error("Missing the required parameter 'sourceId' when calling workbooksListByResourceGroup");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling workbooksListByResourceGroup");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName
      };
      let queryParams = {
        'category': category,
        'tags': this.apiClient.buildCollectionParam(opts['tags'], 'csv'),
        'sourceId': sourceId,
        'canFetchContent': opts['canFetchContent'],
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = WorkbooksListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroup/{resourceGroupName}/providers/microsoft.insights/workbooks', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the workbooksUpdate operation.
     * @callback module:api/DefaultApi~workbooksUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Workbook} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates a workbook that has already been added.
     * @param {String} subscriptionId The ID of the target subscription.
     * @param {String} resourceGroupName The name of the resource group. The name is case insensitive.
     * @param {String} resourceName The name of the Application Insights component resource.
     * @param {String} sourceId Azure Resource Id that will fetch all related workbooks.
     * @param {String} apiVersion The API version to use for this operation.
     * @param {Object} opts Optional parameters
     * @param {module:model/WorkbookUpdateParameters} [workbookUpdateParameters] Properties that need to be specified to create a new workbook.
     * @param {module:api/DefaultApi~workbooksUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Workbook}
     */
    workbooksUpdate(subscriptionId, resourceGroupName, resourceName, sourceId, apiVersion, opts, callback) {
      opts = opts || {};
      let postBody = opts['workbookUpdateParameters'];
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling workbooksUpdate");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling workbooksUpdate");
      }
      // verify the required parameter 'resourceName' is set
      if (resourceName === undefined || resourceName === null) {
        throw new Error("Missing the required parameter 'resourceName' when calling workbooksUpdate");
      }
      // verify the required parameter 'sourceId' is set
      if (sourceId === undefined || sourceId === null) {
        throw new Error("Missing the required parameter 'sourceId' when calling workbooksUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling workbooksUpdate");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'resourceName': resourceName
      };
      let queryParams = {
        'sourceId': sourceId,
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Workbook;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroup/{resourceGroupName}/providers/microsoft.insights/workbooks/{resourceName}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
