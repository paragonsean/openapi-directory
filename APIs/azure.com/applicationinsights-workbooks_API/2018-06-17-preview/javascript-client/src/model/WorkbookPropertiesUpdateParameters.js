/**
 * ApplicationInsightsManagementClient
 * Azure Application Insights workbook type.
 *
 * The version of the OpenAPI document: 2018-06-17-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The WorkbookPropertiesUpdateParameters model module.
 * @module model/WorkbookPropertiesUpdateParameters
 * @version 2018-06-17-preview
 */
class WorkbookPropertiesUpdateParameters {
    /**
     * Constructs a new <code>WorkbookPropertiesUpdateParameters</code>.
     * Properties that contain a workbook for PATCH operation.
     * @alias module:model/WorkbookPropertiesUpdateParameters
     */
    constructor() { 
        
        WorkbookPropertiesUpdateParameters.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>WorkbookPropertiesUpdateParameters</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WorkbookPropertiesUpdateParameters} obj Optional instance to populate.
     * @return {module:model/WorkbookPropertiesUpdateParameters} The populated <code>WorkbookPropertiesUpdateParameters</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WorkbookPropertiesUpdateParameters();

            if (data.hasOwnProperty('category')) {
                obj['category'] = ApiClient.convertToType(data['category'], 'String');
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('serializedData')) {
                obj['serializedData'] = ApiClient.convertToType(data['serializedData'], 'String');
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>WorkbookPropertiesUpdateParameters</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>WorkbookPropertiesUpdateParameters</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['category'] && !(typeof data['category'] === 'string' || data['category'] instanceof String)) {
            throw new Error("Expected the field `category` to be a primitive type in the JSON string but got " + data['category']);
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // ensure the json data is a string
        if (data['serializedData'] && !(typeof data['serializedData'] === 'string' || data['serializedData'] instanceof String)) {
            throw new Error("Expected the field `serializedData` to be a primitive type in the JSON string but got " + data['serializedData']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['tags'])) {
            throw new Error("Expected the field `tags` to be an array in the JSON data but got " + data['tags']);
        }

        return true;
    }


}



/**
 * Workbook category, as defined by the user at creation time.
 * @member {String} category
 */
WorkbookPropertiesUpdateParameters.prototype['category'] = undefined;

/**
 * The user-defined name (display name) of the workbook.
 * @member {String} displayName
 */
WorkbookPropertiesUpdateParameters.prototype['displayName'] = undefined;

/**
 * Configuration of this particular workbook. Configuration data is a string containing valid JSON
 * @member {String} serializedData
 */
WorkbookPropertiesUpdateParameters.prototype['serializedData'] = undefined;

/**
 * A list of 0 or more tags that are associated with this workbook definition
 * @member {Array.<String>} tags
 */
WorkbookPropertiesUpdateParameters.prototype['tags'] = undefined;






export default WorkbookPropertiesUpdateParameters;

