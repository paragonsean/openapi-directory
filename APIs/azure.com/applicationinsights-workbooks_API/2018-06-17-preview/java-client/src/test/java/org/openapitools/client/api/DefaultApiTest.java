/*
 * ApplicationInsightsManagementClient
 * Azure Application Insights workbook type.
 *
 * The version of the OpenAPI document: 2018-06-17-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Workbook;
import org.openapitools.client.model.WorkbookError;
import org.openapitools.client.model.WorkbookUpdateParameters;
import org.openapitools.client.model.WorkbooksListResult;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Disabled
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    /**
     * Create a new workbook.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void workbooksCreateOrUpdateTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String resourceName = null;
        String sourceId = null;
        String apiVersion = null;
        Workbook workbookProperties = null;
        Workbook response = api.workbooksCreateOrUpdate(subscriptionId, resourceGroupName, resourceName, sourceId, apiVersion, workbookProperties);
        // TODO: test validations
    }

    /**
     * Delete a workbook.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void workbooksDeleteTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String resourceName = null;
        String apiVersion = null;
        api.workbooksDelete(subscriptionId, resourceGroupName, resourceName, apiVersion);
        // TODO: test validations
    }

    /**
     * Get a single workbook by its resourceName.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void workbooksGetTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String resourceName = null;
        String apiVersion = null;
        Workbook response = api.workbooksGet(subscriptionId, resourceGroupName, resourceName, apiVersion);
        // TODO: test validations
    }

    /**
     * Get all Workbooks defined within a specified resource group and category.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void workbooksListByResourceGroupTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String category = null;
        String sourceId = null;
        String apiVersion = null;
        List<String> tags = null;
        Boolean canFetchContent = null;
        WorkbooksListResult response = api.workbooksListByResourceGroup(subscriptionId, resourceGroupName, category, sourceId, apiVersion, tags, canFetchContent);
        // TODO: test validations
    }

    /**
     * Updates a workbook that has already been added.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void workbooksUpdateTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String resourceName = null;
        String sourceId = null;
        String apiVersion = null;
        WorkbookUpdateParameters workbookUpdateParameters = null;
        Workbook response = api.workbooksUpdate(subscriptionId, resourceGroupName, resourceName, sourceId, apiVersion, workbookUpdateParameters);
        // TODO: test validations
    }

}
