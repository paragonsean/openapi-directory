# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class WorkbookPropertiesUpdateParameters(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, category: str=None, display_name: str=None, serialized_data: str=None, tags: List[str]=None):
        """WorkbookPropertiesUpdateParameters - a model defined in OpenAPI

        :param category: The category of this WorkbookPropertiesUpdateParameters.
        :param display_name: The display_name of this WorkbookPropertiesUpdateParameters.
        :param serialized_data: The serialized_data of this WorkbookPropertiesUpdateParameters.
        :param tags: The tags of this WorkbookPropertiesUpdateParameters.
        """
        self.openapi_types = {
            'category': str,
            'display_name': str,
            'serialized_data': str,
            'tags': List[str]
        }

        self.attribute_map = {
            'category': 'category',
            'display_name': 'displayName',
            'serialized_data': 'serializedData',
            'tags': 'tags'
        }

        self._category = category
        self._display_name = display_name
        self._serialized_data = serialized_data
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'WorkbookPropertiesUpdateParameters':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The WorkbookPropertiesUpdateParameters of this WorkbookPropertiesUpdateParameters.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def category(self):
        """Gets the category of this WorkbookPropertiesUpdateParameters.

        Workbook category, as defined by the user at creation time.

        :return: The category of this WorkbookPropertiesUpdateParameters.
        :rtype: str
        """
        return self._category

    @category.setter
    def category(self, category):
        """Sets the category of this WorkbookPropertiesUpdateParameters.

        Workbook category, as defined by the user at creation time.

        :param category: The category of this WorkbookPropertiesUpdateParameters.
        :type category: str
        """

        self._category = category

    @property
    def display_name(self):
        """Gets the display_name of this WorkbookPropertiesUpdateParameters.

        The user-defined name (display name) of the workbook.

        :return: The display_name of this WorkbookPropertiesUpdateParameters.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this WorkbookPropertiesUpdateParameters.

        The user-defined name (display name) of the workbook.

        :param display_name: The display_name of this WorkbookPropertiesUpdateParameters.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def serialized_data(self):
        """Gets the serialized_data of this WorkbookPropertiesUpdateParameters.

        Configuration of this particular workbook. Configuration data is a string containing valid JSON

        :return: The serialized_data of this WorkbookPropertiesUpdateParameters.
        :rtype: str
        """
        return self._serialized_data

    @serialized_data.setter
    def serialized_data(self, serialized_data):
        """Sets the serialized_data of this WorkbookPropertiesUpdateParameters.

        Configuration of this particular workbook. Configuration data is a string containing valid JSON

        :param serialized_data: The serialized_data of this WorkbookPropertiesUpdateParameters.
        :type serialized_data: str
        """

        self._serialized_data = serialized_data

    @property
    def tags(self):
        """Gets the tags of this WorkbookPropertiesUpdateParameters.

        A list of 0 or more tags that are associated with this workbook definition

        :return: The tags of this WorkbookPropertiesUpdateParameters.
        :rtype: List[str]
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this WorkbookPropertiesUpdateParameters.

        A list of 0 or more tags that are associated with this workbook definition

        :param tags: The tags of this WorkbookPropertiesUpdateParameters.
        :type tags: List[str]
        """

        self._tags = tags
