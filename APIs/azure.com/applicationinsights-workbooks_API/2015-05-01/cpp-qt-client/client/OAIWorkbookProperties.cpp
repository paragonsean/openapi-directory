/**
 * ApplicationInsightsManagementClient
 * Azure Application Insights workbook type.
 *
 * The version of the OpenAPI document: 2015-05-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIWorkbookProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIWorkbookProperties::OAIWorkbookProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIWorkbookProperties::OAIWorkbookProperties() {
    this->initializeModel();
}

OAIWorkbookProperties::~OAIWorkbookProperties() {}

void OAIWorkbookProperties::initializeModel() {

    m_category_isSet = false;
    m_category_isValid = false;

    m_kind_isSet = false;
    m_kind_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_serialized_data_isSet = false;
    m_serialized_data_isValid = false;

    m_source_resource_id_isSet = false;
    m_source_resource_id_isValid = false;

    m_tags_isSet = false;
    m_tags_isValid = false;

    m_time_modified_isSet = false;
    m_time_modified_isValid = false;

    m_user_id_isSet = false;
    m_user_id_isValid = false;

    m_version_isSet = false;
    m_version_isValid = false;

    m_workbook_id_isSet = false;
    m_workbook_id_isValid = false;
}

void OAIWorkbookProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIWorkbookProperties::fromJsonObject(QJsonObject json) {

    m_category_isValid = ::OpenAPI::fromJsonValue(m_category, json[QString("category")]);
    m_category_isSet = !json[QString("category")].isNull() && m_category_isValid;

    m_kind_isValid = ::OpenAPI::fromJsonValue(m_kind, json[QString("kind")]);
    m_kind_isSet = !json[QString("kind")].isNull() && m_kind_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_serialized_data_isValid = ::OpenAPI::fromJsonValue(m_serialized_data, json[QString("serializedData")]);
    m_serialized_data_isSet = !json[QString("serializedData")].isNull() && m_serialized_data_isValid;

    m_source_resource_id_isValid = ::OpenAPI::fromJsonValue(m_source_resource_id, json[QString("sourceResourceId")]);
    m_source_resource_id_isSet = !json[QString("sourceResourceId")].isNull() && m_source_resource_id_isValid;

    m_tags_isValid = ::OpenAPI::fromJsonValue(m_tags, json[QString("tags")]);
    m_tags_isSet = !json[QString("tags")].isNull() && m_tags_isValid;

    m_time_modified_isValid = ::OpenAPI::fromJsonValue(m_time_modified, json[QString("timeModified")]);
    m_time_modified_isSet = !json[QString("timeModified")].isNull() && m_time_modified_isValid;

    m_user_id_isValid = ::OpenAPI::fromJsonValue(m_user_id, json[QString("userId")]);
    m_user_id_isSet = !json[QString("userId")].isNull() && m_user_id_isValid;

    m_version_isValid = ::OpenAPI::fromJsonValue(m_version, json[QString("version")]);
    m_version_isSet = !json[QString("version")].isNull() && m_version_isValid;

    m_workbook_id_isValid = ::OpenAPI::fromJsonValue(m_workbook_id, json[QString("workbookId")]);
    m_workbook_id_isSet = !json[QString("workbookId")].isNull() && m_workbook_id_isValid;
}

QString OAIWorkbookProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIWorkbookProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_category_isSet) {
        obj.insert(QString("category"), ::OpenAPI::toJsonValue(m_category));
    }
    if (m_kind_isSet) {
        obj.insert(QString("kind"), ::OpenAPI::toJsonValue(m_kind));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_serialized_data_isSet) {
        obj.insert(QString("serializedData"), ::OpenAPI::toJsonValue(m_serialized_data));
    }
    if (m_source_resource_id_isSet) {
        obj.insert(QString("sourceResourceId"), ::OpenAPI::toJsonValue(m_source_resource_id));
    }
    if (m_tags.size() > 0) {
        obj.insert(QString("tags"), ::OpenAPI::toJsonValue(m_tags));
    }
    if (m_time_modified_isSet) {
        obj.insert(QString("timeModified"), ::OpenAPI::toJsonValue(m_time_modified));
    }
    if (m_user_id_isSet) {
        obj.insert(QString("userId"), ::OpenAPI::toJsonValue(m_user_id));
    }
    if (m_version_isSet) {
        obj.insert(QString("version"), ::OpenAPI::toJsonValue(m_version));
    }
    if (m_workbook_id_isSet) {
        obj.insert(QString("workbookId"), ::OpenAPI::toJsonValue(m_workbook_id));
    }
    return obj;
}

QString OAIWorkbookProperties::getCategory() const {
    return m_category;
}
void OAIWorkbookProperties::setCategory(const QString &category) {
    m_category = category;
    m_category_isSet = true;
}

bool OAIWorkbookProperties::is_category_Set() const{
    return m_category_isSet;
}

bool OAIWorkbookProperties::is_category_Valid() const{
    return m_category_isValid;
}

QString OAIWorkbookProperties::getKind() const {
    return m_kind;
}
void OAIWorkbookProperties::setKind(const QString &kind) {
    m_kind = kind;
    m_kind_isSet = true;
}

bool OAIWorkbookProperties::is_kind_Set() const{
    return m_kind_isSet;
}

bool OAIWorkbookProperties::is_kind_Valid() const{
    return m_kind_isValid;
}

QString OAIWorkbookProperties::getName() const {
    return m_name;
}
void OAIWorkbookProperties::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIWorkbookProperties::is_name_Set() const{
    return m_name_isSet;
}

bool OAIWorkbookProperties::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIWorkbookProperties::getSerializedData() const {
    return m_serialized_data;
}
void OAIWorkbookProperties::setSerializedData(const QString &serialized_data) {
    m_serialized_data = serialized_data;
    m_serialized_data_isSet = true;
}

bool OAIWorkbookProperties::is_serialized_data_Set() const{
    return m_serialized_data_isSet;
}

bool OAIWorkbookProperties::is_serialized_data_Valid() const{
    return m_serialized_data_isValid;
}

QString OAIWorkbookProperties::getSourceResourceId() const {
    return m_source_resource_id;
}
void OAIWorkbookProperties::setSourceResourceId(const QString &source_resource_id) {
    m_source_resource_id = source_resource_id;
    m_source_resource_id_isSet = true;
}

bool OAIWorkbookProperties::is_source_resource_id_Set() const{
    return m_source_resource_id_isSet;
}

bool OAIWorkbookProperties::is_source_resource_id_Valid() const{
    return m_source_resource_id_isValid;
}

QList<QString> OAIWorkbookProperties::getTags() const {
    return m_tags;
}
void OAIWorkbookProperties::setTags(const QList<QString> &tags) {
    m_tags = tags;
    m_tags_isSet = true;
}

bool OAIWorkbookProperties::is_tags_Set() const{
    return m_tags_isSet;
}

bool OAIWorkbookProperties::is_tags_Valid() const{
    return m_tags_isValid;
}

QString OAIWorkbookProperties::getTimeModified() const {
    return m_time_modified;
}
void OAIWorkbookProperties::setTimeModified(const QString &time_modified) {
    m_time_modified = time_modified;
    m_time_modified_isSet = true;
}

bool OAIWorkbookProperties::is_time_modified_Set() const{
    return m_time_modified_isSet;
}

bool OAIWorkbookProperties::is_time_modified_Valid() const{
    return m_time_modified_isValid;
}

QString OAIWorkbookProperties::getUserId() const {
    return m_user_id;
}
void OAIWorkbookProperties::setUserId(const QString &user_id) {
    m_user_id = user_id;
    m_user_id_isSet = true;
}

bool OAIWorkbookProperties::is_user_id_Set() const{
    return m_user_id_isSet;
}

bool OAIWorkbookProperties::is_user_id_Valid() const{
    return m_user_id_isValid;
}

QString OAIWorkbookProperties::getVersion() const {
    return m_version;
}
void OAIWorkbookProperties::setVersion(const QString &version) {
    m_version = version;
    m_version_isSet = true;
}

bool OAIWorkbookProperties::is_version_Set() const{
    return m_version_isSet;
}

bool OAIWorkbookProperties::is_version_Valid() const{
    return m_version_isValid;
}

QString OAIWorkbookProperties::getWorkbookId() const {
    return m_workbook_id;
}
void OAIWorkbookProperties::setWorkbookId(const QString &workbook_id) {
    m_workbook_id = workbook_id;
    m_workbook_id_isSet = true;
}

bool OAIWorkbookProperties::is_workbook_id_Set() const{
    return m_workbook_id_isSet;
}

bool OAIWorkbookProperties::is_workbook_id_Valid() const{
    return m_workbook_id_isValid;
}

bool OAIWorkbookProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_category_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_kind_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_serialized_data_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_source_resource_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tags.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_time_modified_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_version_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_workbook_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIWorkbookProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_category_isValid && m_kind_isValid && m_name_isValid && m_serialized_data_isValid && m_user_id_isValid && m_workbook_id_isValid && true;
}

} // namespace OpenAPI
