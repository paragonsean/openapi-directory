/**
 * PolicyStatesClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-10-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PolicyState from './PolicyState';

/**
 * The PolicyStatesQueryResults model module.
 * @module model/PolicyStatesQueryResults
 * @version 2019-10-01
 */
class PolicyStatesQueryResults {
    /**
     * Constructs a new <code>PolicyStatesQueryResults</code>.
     * Query results.
     * @alias module:model/PolicyStatesQueryResults
     */
    constructor() { 
        
        PolicyStatesQueryResults.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PolicyStatesQueryResults</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PolicyStatesQueryResults} obj Optional instance to populate.
     * @return {module:model/PolicyStatesQueryResults} The populated <code>PolicyStatesQueryResults</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PolicyStatesQueryResults();

            if (data.hasOwnProperty('@odata.context')) {
                obj['@odata.context'] = ApiClient.convertToType(data['@odata.context'], 'String');
            }
            if (data.hasOwnProperty('@odata.count')) {
                obj['@odata.count'] = ApiClient.convertToType(data['@odata.count'], 'Number');
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], [PolicyState]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PolicyStatesQueryResults</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PolicyStatesQueryResults</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['@odata.context'] && !(typeof data['@odata.context'] === 'string' || data['@odata.context'] instanceof String)) {
            throw new Error("Expected the field `@odata.context` to be a primitive type in the JSON string but got " + data['@odata.context']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['value'])) {
            throw new Error("Expected the field `value` to be an array in the JSON data but got " + data['value']);
        }

        return true;
    }


}



/**
 * OData context string; used by OData clients to resolve type information based on metadata.
 * @member {String} @odata.context
 */
PolicyStatesQueryResults.prototype['@odata.context'] = undefined;

/**
 * OData entity count; represents the number of policy state records returned.
 * @member {Number} @odata.count
 */
PolicyStatesQueryResults.prototype['@odata.count'] = undefined;

/**
 * Query results.
 * @member {Array.<module:model/PolicyState>} value
 */
PolicyStatesQueryResults.prototype['value'] = undefined;






export default PolicyStatesQueryResults;

