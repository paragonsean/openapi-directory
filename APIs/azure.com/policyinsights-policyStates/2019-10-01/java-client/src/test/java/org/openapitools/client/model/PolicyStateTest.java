/*
 * PolicyStatesClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-10-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.PolicyEvaluationDetails;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for PolicyState
 */
public class PolicyStateTest {
    private final PolicyState model = new PolicyState();

    /**
     * Model tests for PolicyState
     */
    @Test
    public void testPolicyState() {
        // TODO: test PolicyState
    }

    /**
     * Test the property 'atOdataContext'
     */
    @Test
    public void atOdataContextTest() {
        // TODO: test atOdataContext
    }

    /**
     * Test the property 'atOdataId'
     */
    @Test
    public void atOdataIdTest() {
        // TODO: test atOdataId
    }

    /**
     * Test the property 'complianceState'
     */
    @Test
    public void complianceStateTest() {
        // TODO: test complianceState
    }

    /**
     * Test the property 'effectiveParameters'
     */
    @Test
    public void effectiveParametersTest() {
        // TODO: test effectiveParameters
    }

    /**
     * Test the property 'isCompliant'
     */
    @Test
    public void isCompliantTest() {
        // TODO: test isCompliant
    }

    /**
     * Test the property 'managementGroupIds'
     */
    @Test
    public void managementGroupIdsTest() {
        // TODO: test managementGroupIds
    }

    /**
     * Test the property 'policyAssignmentId'
     */
    @Test
    public void policyAssignmentIdTest() {
        // TODO: test policyAssignmentId
    }

    /**
     * Test the property 'policyAssignmentName'
     */
    @Test
    public void policyAssignmentNameTest() {
        // TODO: test policyAssignmentName
    }

    /**
     * Test the property 'policyAssignmentOwner'
     */
    @Test
    public void policyAssignmentOwnerTest() {
        // TODO: test policyAssignmentOwner
    }

    /**
     * Test the property 'policyAssignmentParameters'
     */
    @Test
    public void policyAssignmentParametersTest() {
        // TODO: test policyAssignmentParameters
    }

    /**
     * Test the property 'policyAssignmentScope'
     */
    @Test
    public void policyAssignmentScopeTest() {
        // TODO: test policyAssignmentScope
    }

    /**
     * Test the property 'policyDefinitionAction'
     */
    @Test
    public void policyDefinitionActionTest() {
        // TODO: test policyDefinitionAction
    }

    /**
     * Test the property 'policyDefinitionCategory'
     */
    @Test
    public void policyDefinitionCategoryTest() {
        // TODO: test policyDefinitionCategory
    }

    /**
     * Test the property 'policyDefinitionGroupNames'
     */
    @Test
    public void policyDefinitionGroupNamesTest() {
        // TODO: test policyDefinitionGroupNames
    }

    /**
     * Test the property 'policyDefinitionId'
     */
    @Test
    public void policyDefinitionIdTest() {
        // TODO: test policyDefinitionId
    }

    /**
     * Test the property 'policyDefinitionName'
     */
    @Test
    public void policyDefinitionNameTest() {
        // TODO: test policyDefinitionName
    }

    /**
     * Test the property 'policyDefinitionReferenceId'
     */
    @Test
    public void policyDefinitionReferenceIdTest() {
        // TODO: test policyDefinitionReferenceId
    }

    /**
     * Test the property 'policyEvaluationDetails'
     */
    @Test
    public void policyEvaluationDetailsTest() {
        // TODO: test policyEvaluationDetails
    }

    /**
     * Test the property 'policySetDefinitionCategory'
     */
    @Test
    public void policySetDefinitionCategoryTest() {
        // TODO: test policySetDefinitionCategory
    }

    /**
     * Test the property 'policySetDefinitionId'
     */
    @Test
    public void policySetDefinitionIdTest() {
        // TODO: test policySetDefinitionId
    }

    /**
     * Test the property 'policySetDefinitionName'
     */
    @Test
    public void policySetDefinitionNameTest() {
        // TODO: test policySetDefinitionName
    }

    /**
     * Test the property 'policySetDefinitionOwner'
     */
    @Test
    public void policySetDefinitionOwnerTest() {
        // TODO: test policySetDefinitionOwner
    }

    /**
     * Test the property 'policySetDefinitionParameters'
     */
    @Test
    public void policySetDefinitionParametersTest() {
        // TODO: test policySetDefinitionParameters
    }

    /**
     * Test the property 'resourceGroup'
     */
    @Test
    public void resourceGroupTest() {
        // TODO: test resourceGroup
    }

    /**
     * Test the property 'resourceId'
     */
    @Test
    public void resourceIdTest() {
        // TODO: test resourceId
    }

    /**
     * Test the property 'resourceLocation'
     */
    @Test
    public void resourceLocationTest() {
        // TODO: test resourceLocation
    }

    /**
     * Test the property 'resourceTags'
     */
    @Test
    public void resourceTagsTest() {
        // TODO: test resourceTags
    }

    /**
     * Test the property 'resourceType'
     */
    @Test
    public void resourceTypeTest() {
        // TODO: test resourceType
    }

    /**
     * Test the property 'subscriptionId'
     */
    @Test
    public void subscriptionIdTest() {
        // TODO: test subscriptionId
    }

    /**
     * Test the property 'timestamp'
     */
    @Test
    public void timestampTest() {
        // TODO: test timestamp
    }

}
