/**
 * PolicyStatesClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-10-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPolicyGroupSummary.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPolicyGroupSummary::OAIPolicyGroupSummary(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPolicyGroupSummary::OAIPolicyGroupSummary() {
    this->initializeModel();
}

OAIPolicyGroupSummary::~OAIPolicyGroupSummary() {}

void OAIPolicyGroupSummary::initializeModel() {

    m_policy_group_name_isSet = false;
    m_policy_group_name_isValid = false;

    m_results_isSet = false;
    m_results_isValid = false;
}

void OAIPolicyGroupSummary::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPolicyGroupSummary::fromJsonObject(QJsonObject json) {

    m_policy_group_name_isValid = ::OpenAPI::fromJsonValue(m_policy_group_name, json[QString("policyGroupName")]);
    m_policy_group_name_isSet = !json[QString("policyGroupName")].isNull() && m_policy_group_name_isValid;

    m_results_isValid = ::OpenAPI::fromJsonValue(m_results, json[QString("results")]);
    m_results_isSet = !json[QString("results")].isNull() && m_results_isValid;
}

QString OAIPolicyGroupSummary::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPolicyGroupSummary::asJsonObject() const {
    QJsonObject obj;
    if (m_policy_group_name_isSet) {
        obj.insert(QString("policyGroupName"), ::OpenAPI::toJsonValue(m_policy_group_name));
    }
    if (m_results.isSet()) {
        obj.insert(QString("results"), ::OpenAPI::toJsonValue(m_results));
    }
    return obj;
}

QString OAIPolicyGroupSummary::getPolicyGroupName() const {
    return m_policy_group_name;
}
void OAIPolicyGroupSummary::setPolicyGroupName(const QString &policy_group_name) {
    m_policy_group_name = policy_group_name;
    m_policy_group_name_isSet = true;
}

bool OAIPolicyGroupSummary::is_policy_group_name_Set() const{
    return m_policy_group_name_isSet;
}

bool OAIPolicyGroupSummary::is_policy_group_name_Valid() const{
    return m_policy_group_name_isValid;
}

OAISummaryResults OAIPolicyGroupSummary::getResults() const {
    return m_results;
}
void OAIPolicyGroupSummary::setResults(const OAISummaryResults &results) {
    m_results = results;
    m_results_isSet = true;
}

bool OAIPolicyGroupSummary::is_results_Set() const{
    return m_results_isSet;
}

bool OAIPolicyGroupSummary::is_results_Valid() const{
    return m_results_isValid;
}

bool OAIPolicyGroupSummary::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_policy_group_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_results.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPolicyGroupSummary::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
