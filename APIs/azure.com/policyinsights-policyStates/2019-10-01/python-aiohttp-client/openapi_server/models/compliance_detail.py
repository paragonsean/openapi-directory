# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ComplianceDetail(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, compliance_state: str=None, count: int=None):
        """ComplianceDetail - a model defined in OpenAPI

        :param compliance_state: The compliance_state of this ComplianceDetail.
        :param count: The count of this ComplianceDetail.
        """
        self.openapi_types = {
            'compliance_state': str,
            'count': int
        }

        self.attribute_map = {
            'compliance_state': 'complianceState',
            'count': 'count'
        }

        self._compliance_state = compliance_state
        self._count = count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ComplianceDetail':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ComplianceDetail of this ComplianceDetail.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def compliance_state(self):
        """Gets the compliance_state of this ComplianceDetail.

        The compliance state.

        :return: The compliance_state of this ComplianceDetail.
        :rtype: str
        """
        return self._compliance_state

    @compliance_state.setter
    def compliance_state(self, compliance_state):
        """Sets the compliance_state of this ComplianceDetail.

        The compliance state.

        :param compliance_state: The compliance_state of this ComplianceDetail.
        :type compliance_state: str
        """

        self._compliance_state = compliance_state

    @property
    def count(self):
        """Gets the count of this ComplianceDetail.

        Summarized count value for this compliance state.

        :return: The count of this ComplianceDetail.
        :rtype: int
        """
        return self._count

    @count.setter
    def count(self, count):
        """Sets the count of this ComplianceDetail.

        Summarized count value for this compliance state.

        :param count: The count of this ComplianceDetail.
        :type count: int
        """

        self._count = count
