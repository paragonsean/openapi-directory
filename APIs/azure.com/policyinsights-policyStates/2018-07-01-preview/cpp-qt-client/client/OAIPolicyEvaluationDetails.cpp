/**
 * PolicyStatesClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-07-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPolicyEvaluationDetails.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPolicyEvaluationDetails::OAIPolicyEvaluationDetails(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPolicyEvaluationDetails::OAIPolicyEvaluationDetails() {
    this->initializeModel();
}

OAIPolicyEvaluationDetails::~OAIPolicyEvaluationDetails() {}

void OAIPolicyEvaluationDetails::initializeModel() {

    m_evaluated_expressions_isSet = false;
    m_evaluated_expressions_isValid = false;

    m_if_not_exists_details_isSet = false;
    m_if_not_exists_details_isValid = false;
}

void OAIPolicyEvaluationDetails::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPolicyEvaluationDetails::fromJsonObject(QJsonObject json) {

    m_evaluated_expressions_isValid = ::OpenAPI::fromJsonValue(m_evaluated_expressions, json[QString("evaluatedExpressions")]);
    m_evaluated_expressions_isSet = !json[QString("evaluatedExpressions")].isNull() && m_evaluated_expressions_isValid;

    m_if_not_exists_details_isValid = ::OpenAPI::fromJsonValue(m_if_not_exists_details, json[QString("ifNotExistsDetails")]);
    m_if_not_exists_details_isSet = !json[QString("ifNotExistsDetails")].isNull() && m_if_not_exists_details_isValid;
}

QString OAIPolicyEvaluationDetails::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPolicyEvaluationDetails::asJsonObject() const {
    QJsonObject obj;
    if (m_evaluated_expressions.size() > 0) {
        obj.insert(QString("evaluatedExpressions"), ::OpenAPI::toJsonValue(m_evaluated_expressions));
    }
    if (m_if_not_exists_details.isSet()) {
        obj.insert(QString("ifNotExistsDetails"), ::OpenAPI::toJsonValue(m_if_not_exists_details));
    }
    return obj;
}

QList<OAIExpressionEvaluationDetails> OAIPolicyEvaluationDetails::getEvaluatedExpressions() const {
    return m_evaluated_expressions;
}
void OAIPolicyEvaluationDetails::setEvaluatedExpressions(const QList<OAIExpressionEvaluationDetails> &evaluated_expressions) {
    m_evaluated_expressions = evaluated_expressions;
    m_evaluated_expressions_isSet = true;
}

bool OAIPolicyEvaluationDetails::is_evaluated_expressions_Set() const{
    return m_evaluated_expressions_isSet;
}

bool OAIPolicyEvaluationDetails::is_evaluated_expressions_Valid() const{
    return m_evaluated_expressions_isValid;
}

OAIIfNotExistsEvaluationDetails OAIPolicyEvaluationDetails::getIfNotExistsDetails() const {
    return m_if_not_exists_details;
}
void OAIPolicyEvaluationDetails::setIfNotExistsDetails(const OAIIfNotExistsEvaluationDetails &if_not_exists_details) {
    m_if_not_exists_details = if_not_exists_details;
    m_if_not_exists_details_isSet = true;
}

bool OAIPolicyEvaluationDetails::is_if_not_exists_details_Set() const{
    return m_if_not_exists_details_isSet;
}

bool OAIPolicyEvaluationDetails::is_if_not_exists_details_Valid() const{
    return m_if_not_exists_details_isValid;
}

bool OAIPolicyEvaluationDetails::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_evaluated_expressions.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_if_not_exists_details.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPolicyEvaluationDetails::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
