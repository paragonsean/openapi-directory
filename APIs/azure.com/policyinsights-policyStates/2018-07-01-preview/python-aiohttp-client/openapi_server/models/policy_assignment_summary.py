# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.policy_definition_summary import PolicyDefinitionSummary
from openapi_server.models.summary_results import SummaryResults
from openapi_server import util


class PolicyAssignmentSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, policy_assignment_id: str=None, policy_definitions: List[PolicyDefinitionSummary]=None, policy_set_definition_id: str=None, results: SummaryResults=None):
        """PolicyAssignmentSummary - a model defined in OpenAPI

        :param policy_assignment_id: The policy_assignment_id of this PolicyAssignmentSummary.
        :param policy_definitions: The policy_definitions of this PolicyAssignmentSummary.
        :param policy_set_definition_id: The policy_set_definition_id of this PolicyAssignmentSummary.
        :param results: The results of this PolicyAssignmentSummary.
        """
        self.openapi_types = {
            'policy_assignment_id': str,
            'policy_definitions': List[PolicyDefinitionSummary],
            'policy_set_definition_id': str,
            'results': SummaryResults
        }

        self.attribute_map = {
            'policy_assignment_id': 'policyAssignmentId',
            'policy_definitions': 'policyDefinitions',
            'policy_set_definition_id': 'policySetDefinitionId',
            'results': 'results'
        }

        self._policy_assignment_id = policy_assignment_id
        self._policy_definitions = policy_definitions
        self._policy_set_definition_id = policy_set_definition_id
        self._results = results

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PolicyAssignmentSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PolicyAssignmentSummary of this PolicyAssignmentSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def policy_assignment_id(self):
        """Gets the policy_assignment_id of this PolicyAssignmentSummary.

        Policy assignment ID.

        :return: The policy_assignment_id of this PolicyAssignmentSummary.
        :rtype: str
        """
        return self._policy_assignment_id

    @policy_assignment_id.setter
    def policy_assignment_id(self, policy_assignment_id):
        """Sets the policy_assignment_id of this PolicyAssignmentSummary.

        Policy assignment ID.

        :param policy_assignment_id: The policy_assignment_id of this PolicyAssignmentSummary.
        :type policy_assignment_id: str
        """

        self._policy_assignment_id = policy_assignment_id

    @property
    def policy_definitions(self):
        """Gets the policy_definitions of this PolicyAssignmentSummary.

        Policy definitions summary.

        :return: The policy_definitions of this PolicyAssignmentSummary.
        :rtype: List[PolicyDefinitionSummary]
        """
        return self._policy_definitions

    @policy_definitions.setter
    def policy_definitions(self, policy_definitions):
        """Sets the policy_definitions of this PolicyAssignmentSummary.

        Policy definitions summary.

        :param policy_definitions: The policy_definitions of this PolicyAssignmentSummary.
        :type policy_definitions: List[PolicyDefinitionSummary]
        """

        self._policy_definitions = policy_definitions

    @property
    def policy_set_definition_id(self):
        """Gets the policy_set_definition_id of this PolicyAssignmentSummary.

        Policy set definition ID, if the policy assignment is for a policy set.

        :return: The policy_set_definition_id of this PolicyAssignmentSummary.
        :rtype: str
        """
        return self._policy_set_definition_id

    @policy_set_definition_id.setter
    def policy_set_definition_id(self, policy_set_definition_id):
        """Sets the policy_set_definition_id of this PolicyAssignmentSummary.

        Policy set definition ID, if the policy assignment is for a policy set.

        :param policy_set_definition_id: The policy_set_definition_id of this PolicyAssignmentSummary.
        :type policy_set_definition_id: str
        """

        self._policy_set_definition_id = policy_set_definition_id

    @property
    def results(self):
        """Gets the results of this PolicyAssignmentSummary.


        :return: The results of this PolicyAssignmentSummary.
        :rtype: SummaryResults
        """
        return self._results

    @results.setter
    def results(self, results):
        """Sets the results of this PolicyAssignmentSummary.


        :param results: The results of this PolicyAssignmentSummary.
        :type results: SummaryResults
        """

        self._results = results
