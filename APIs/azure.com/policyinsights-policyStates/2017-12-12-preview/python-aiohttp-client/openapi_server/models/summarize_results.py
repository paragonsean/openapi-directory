# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.summary import Summary
from openapi_server import util


class SummarizeResults(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, odata_context: str=None, odata_count: int=None, value: List[Summary]=None):
        """SummarizeResults - a model defined in OpenAPI

        :param odata_context: The odata_context of this SummarizeResults.
        :param odata_count: The odata_count of this SummarizeResults.
        :param value: The value of this SummarizeResults.
        """
        self.openapi_types = {
            'odata_context': str,
            'odata_count': int,
            'value': List[Summary]
        }

        self.attribute_map = {
            'odata_context': '@odata.context',
            'odata_count': '@odata.count',
            'value': 'value'
        }

        self._odata_context = odata_context
        self._odata_count = odata_count
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SummarizeResults':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SummarizeResults of this SummarizeResults.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def odata_context(self):
        """Gets the odata_context of this SummarizeResults.

        OData context string; used by OData clients to resolve type information based on metadata.

        :return: The odata_context of this SummarizeResults.
        :rtype: str
        """
        return self._odata_context

    @odata_context.setter
    def odata_context(self, odata_context):
        """Sets the odata_context of this SummarizeResults.

        OData context string; used by OData clients to resolve type information based on metadata.

        :param odata_context: The odata_context of this SummarizeResults.
        :type odata_context: str
        """

        self._odata_context = odata_context

    @property
    def odata_count(self):
        """Gets the odata_count of this SummarizeResults.

        OData entity count; represents the number of summaries returned; always set to 1.

        :return: The odata_count of this SummarizeResults.
        :rtype: int
        """
        return self._odata_count

    @odata_count.setter
    def odata_count(self, odata_count):
        """Sets the odata_count of this SummarizeResults.

        OData entity count; represents the number of summaries returned; always set to 1.

        :param odata_count: The odata_count of this SummarizeResults.
        :type odata_count: int
        """
        if odata_count is not None and odata_count > 1:
            raise ValueError("Invalid value for `odata_count`, must be a value less than or equal to `1`")
        if odata_count is not None and odata_count < 1:
            raise ValueError("Invalid value for `odata_count`, must be a value greater than or equal to `1`")

        self._odata_count = odata_count

    @property
    def value(self):
        """Gets the value of this SummarizeResults.

        Summarize action results.

        :return: The value of this SummarizeResults.
        :rtype: List[Summary]
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this SummarizeResults.

        Summarize action results.

        :param value: The value of this SummarizeResults.
        :type value: List[Summary]
        """

        self._value = value
