/**
 * PolicyStatesClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-12-12-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPolicyDefinitionSummary.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPolicyDefinitionSummary::OAIPolicyDefinitionSummary(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPolicyDefinitionSummary::OAIPolicyDefinitionSummary() {
    this->initializeModel();
}

OAIPolicyDefinitionSummary::~OAIPolicyDefinitionSummary() {}

void OAIPolicyDefinitionSummary::initializeModel() {

    m_effect_isSet = false;
    m_effect_isValid = false;

    m_policy_definition_id_isSet = false;
    m_policy_definition_id_isValid = false;

    m_results_isSet = false;
    m_results_isValid = false;
}

void OAIPolicyDefinitionSummary::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPolicyDefinitionSummary::fromJsonObject(QJsonObject json) {

    m_effect_isValid = ::OpenAPI::fromJsonValue(m_effect, json[QString("effect")]);
    m_effect_isSet = !json[QString("effect")].isNull() && m_effect_isValid;

    m_policy_definition_id_isValid = ::OpenAPI::fromJsonValue(m_policy_definition_id, json[QString("policyDefinitionId")]);
    m_policy_definition_id_isSet = !json[QString("policyDefinitionId")].isNull() && m_policy_definition_id_isValid;

    m_results_isValid = ::OpenAPI::fromJsonValue(m_results, json[QString("results")]);
    m_results_isSet = !json[QString("results")].isNull() && m_results_isValid;
}

QString OAIPolicyDefinitionSummary::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPolicyDefinitionSummary::asJsonObject() const {
    QJsonObject obj;
    if (m_effect_isSet) {
        obj.insert(QString("effect"), ::OpenAPI::toJsonValue(m_effect));
    }
    if (m_policy_definition_id_isSet) {
        obj.insert(QString("policyDefinitionId"), ::OpenAPI::toJsonValue(m_policy_definition_id));
    }
    if (m_results.isSet()) {
        obj.insert(QString("results"), ::OpenAPI::toJsonValue(m_results));
    }
    return obj;
}

QString OAIPolicyDefinitionSummary::getEffect() const {
    return m_effect;
}
void OAIPolicyDefinitionSummary::setEffect(const QString &effect) {
    m_effect = effect;
    m_effect_isSet = true;
}

bool OAIPolicyDefinitionSummary::is_effect_Set() const{
    return m_effect_isSet;
}

bool OAIPolicyDefinitionSummary::is_effect_Valid() const{
    return m_effect_isValid;
}

QString OAIPolicyDefinitionSummary::getPolicyDefinitionId() const {
    return m_policy_definition_id;
}
void OAIPolicyDefinitionSummary::setPolicyDefinitionId(const QString &policy_definition_id) {
    m_policy_definition_id = policy_definition_id;
    m_policy_definition_id_isSet = true;
}

bool OAIPolicyDefinitionSummary::is_policy_definition_id_Set() const{
    return m_policy_definition_id_isSet;
}

bool OAIPolicyDefinitionSummary::is_policy_definition_id_Valid() const{
    return m_policy_definition_id_isValid;
}

OAISummaryResults OAIPolicyDefinitionSummary::getResults() const {
    return m_results;
}
void OAIPolicyDefinitionSummary::setResults(const OAISummaryResults &results) {
    m_results = results;
    m_results_isSet = true;
}

bool OAIPolicyDefinitionSummary::is_results_Set() const{
    return m_results_isSet;
}

bool OAIPolicyDefinitionSummary::is_results_Valid() const{
    return m_results_isValid;
}

bool OAIPolicyDefinitionSummary::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_effect_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_policy_definition_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_results.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPolicyDefinitionSummary::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
