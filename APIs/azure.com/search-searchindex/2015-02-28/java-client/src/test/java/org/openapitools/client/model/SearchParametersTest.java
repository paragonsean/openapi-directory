/*
 * SearchIndexClient
 * Client that can be used to query an Azure Search index and upload, merge, or delete documents.
 *
 * The version of the OpenAPI document: 2015-02-28
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.QueryType;
import org.openapitools.client.model.SearchMode;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for SearchParameters
 */
public class SearchParametersTest {
    private final SearchParameters model = new SearchParameters();

    /**
     * Model tests for SearchParameters
     */
    @Test
    public void testSearchParameters() {
        // TODO: test SearchParameters
    }

    /**
     * Test the property 'filter'
     */
    @Test
    public void filterTest() {
        // TODO: test filter
    }

    /**
     * Test the property 'highlightFields'
     */
    @Test
    public void highlightFieldsTest() {
        // TODO: test highlightFields
    }

    /**
     * Test the property 'highlightPostTag'
     */
    @Test
    public void highlightPostTagTest() {
        // TODO: test highlightPostTag
    }

    /**
     * Test the property 'highlightPreTag'
     */
    @Test
    public void highlightPreTagTest() {
        // TODO: test highlightPreTag
    }

    /**
     * Test the property 'includeTotalResultCount'
     */
    @Test
    public void includeTotalResultCountTest() {
        // TODO: test includeTotalResultCount
    }

    /**
     * Test the property 'minimumCoverage'
     */
    @Test
    public void minimumCoverageTest() {
        // TODO: test minimumCoverage
    }

    /**
     * Test the property 'orderBy'
     */
    @Test
    public void orderByTest() {
        // TODO: test orderBy
    }

    /**
     * Test the property 'queryType'
     */
    @Test
    public void queryTypeTest() {
        // TODO: test queryType
    }

    /**
     * Test the property 'scoringParameters'
     */
    @Test
    public void scoringParametersTest() {
        // TODO: test scoringParameters
    }

    /**
     * Test the property 'scoringProfile'
     */
    @Test
    public void scoringProfileTest() {
        // TODO: test scoringProfile
    }

    /**
     * Test the property 'searchFields'
     */
    @Test
    public void searchFieldsTest() {
        // TODO: test searchFields
    }

    /**
     * Test the property 'searchMode'
     */
    @Test
    public void searchModeTest() {
        // TODO: test searchMode
    }

    /**
     * Test the property 'select'
     */
    @Test
    public void selectTest() {
        // TODO: test select
    }

    /**
     * Test the property 'skip'
     */
    @Test
    public void skipTest() {
        // TODO: test skip
    }

    /**
     * Test the property 'top'
     */
    @Test
    public void topTest() {
        // TODO: test top
    }

}
