/**
 * SearchIndexClient
 * Client that can be used to query an Azure Search index and upload, merge, or delete documents.
 *
 * The version of the OpenAPI document: 2015-02-28
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIIndexActionType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIIndexActionType::OAIIndexActionType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIIndexActionType::OAIIndexActionType() {
    this->initializeModel();
}

OAIIndexActionType::~OAIIndexActionType() {}

void OAIIndexActionType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIIndexActionType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIIndexActionType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("upload", Qt::CaseInsensitive) == 0) {
        m_value = eOAIIndexActionType::UPLOAD;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("merge", Qt::CaseInsensitive) == 0) {
        m_value = eOAIIndexActionType::MERGE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("mergeOrUpload", Qt::CaseInsensitive) == 0) {
        m_value = eOAIIndexActionType::MERGEORUPLOAD;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("delete", Qt::CaseInsensitive) == 0) {
        m_value = eOAIIndexActionType::DELETE;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIIndexActionType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIIndexActionType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIIndexActionType::UPLOAD:
            val = "upload";
            break;
        case eOAIIndexActionType::MERGE:
            val = "merge";
            break;
        case eOAIIndexActionType::MERGEORUPLOAD:
            val = "mergeOrUpload";
            break;
        case eOAIIndexActionType::DELETE:
            val = "delete";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIIndexActionType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIIndexActionType::eOAIIndexActionType OAIIndexActionType::getValue() const {
    return m_value;
}

void OAIIndexActionType::setValue(const OAIIndexActionType::eOAIIndexActionType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIIndexActionType::isSet() const {
    
    return m_value_isSet;
}

bool OAIIndexActionType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
