/**
 * SearchIndexClient
 * Client that can be used to query an Azure Search index and upload, merge, or delete documents.
 *
 * The version of the OpenAPI document: 2016-09-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISuggestParametersPayload.h
 *
 * Parameters for filtering, sorting, fuzzy matching, and other suggestions query behaviors.
 */

#ifndef OAISuggestParametersPayload_H
#define OAISuggestParametersPayload_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISuggestParametersPayload : public OAIObject {
public:
    OAISuggestParametersPayload();
    OAISuggestParametersPayload(QString json);
    ~OAISuggestParametersPayload() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getFilter() const;
    void setFilter(const QString &filter);
    bool is_filter_Set() const;
    bool is_filter_Valid() const;

    bool isFuzzy() const;
    void setFuzzy(const bool &fuzzy);
    bool is_fuzzy_Set() const;
    bool is_fuzzy_Valid() const;

    QString getHighlightPostTag() const;
    void setHighlightPostTag(const QString &highlight_post_tag);
    bool is_highlight_post_tag_Set() const;
    bool is_highlight_post_tag_Valid() const;

    QString getHighlightPreTag() const;
    void setHighlightPreTag(const QString &highlight_pre_tag);
    bool is_highlight_pre_tag_Set() const;
    bool is_highlight_pre_tag_Valid() const;

    double getMinimumCoverage() const;
    void setMinimumCoverage(const double &minimum_coverage);
    bool is_minimum_coverage_Set() const;
    bool is_minimum_coverage_Valid() const;

    QString getOrderby() const;
    void setOrderby(const QString &orderby);
    bool is_orderby_Set() const;
    bool is_orderby_Valid() const;

    QString getSearch() const;
    void setSearch(const QString &search);
    bool is_search_Set() const;
    bool is_search_Valid() const;

    QString getSearchFields() const;
    void setSearchFields(const QString &search_fields);
    bool is_search_fields_Set() const;
    bool is_search_fields_Valid() const;

    QString getSelect() const;
    void setSelect(const QString &select);
    bool is_select_Set() const;
    bool is_select_Valid() const;

    QString getSuggesterName() const;
    void setSuggesterName(const QString &suggester_name);
    bool is_suggester_name_Set() const;
    bool is_suggester_name_Valid() const;

    qint32 getTop() const;
    void setTop(const qint32 &top);
    bool is_top_Set() const;
    bool is_top_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_filter;
    bool m_filter_isSet;
    bool m_filter_isValid;

    bool m_fuzzy;
    bool m_fuzzy_isSet;
    bool m_fuzzy_isValid;

    QString m_highlight_post_tag;
    bool m_highlight_post_tag_isSet;
    bool m_highlight_post_tag_isValid;

    QString m_highlight_pre_tag;
    bool m_highlight_pre_tag_isSet;
    bool m_highlight_pre_tag_isValid;

    double m_minimum_coverage;
    bool m_minimum_coverage_isSet;
    bool m_minimum_coverage_isValid;

    QString m_orderby;
    bool m_orderby_isSet;
    bool m_orderby_isValid;

    QString m_search;
    bool m_search_isSet;
    bool m_search_isValid;

    QString m_search_fields;
    bool m_search_fields_isSet;
    bool m_search_fields_isValid;

    QString m_select;
    bool m_select_isSet;
    bool m_select_isValid;

    QString m_suggester_name;
    bool m_suggester_name_isSet;
    bool m_suggester_name_isValid;

    qint32 m_top;
    bool m_top_isSet;
    bool m_top_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISuggestParametersPayload)

#endif // OAISuggestParametersPayload_H
