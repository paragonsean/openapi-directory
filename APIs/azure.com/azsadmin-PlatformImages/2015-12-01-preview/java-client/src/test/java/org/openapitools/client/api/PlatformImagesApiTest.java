/*
 * Compute Admin Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2015-12-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.PlatformImage;
import org.openapitools.client.model.PlatformImageParameters;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PlatformImagesApi
 */
@Disabled
public class PlatformImagesApiTest {

    private final PlatformImagesApi api = new PlatformImagesApi();

    /**
     * Creates a platform image.
     *
     * Creates a new platform image with given publisher, offer, skus and version.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void platformImagesCreateTest() throws ApiException {
        String subscriptionId = null;
        String location = null;
        String publisher = null;
        String offer = null;
        String sku = null;
        String version = null;
        String apiVersion = null;
        PlatformImageParameters newImage = null;
        PlatformImage response = api.platformImagesCreate(subscriptionId, location, publisher, offer, sku, version, apiVersion, newImage);
        // TODO: test validations
    }

    /**
     * Deletes a platform image matching publisher, offer, skus and version
     *
     * Delete a platform image
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void platformImagesDeleteTest() throws ApiException {
        String subscriptionId = null;
        String location = null;
        String publisher = null;
        String offer = null;
        String sku = null;
        String version = null;
        String apiVersion = null;
        api.platformImagesDelete(subscriptionId, location, publisher, offer, sku, version, apiVersion);
        // TODO: test validations
    }

    /**
     * Returns the requested platform image.
     *
     * Returns the specific platform image matching publisher, offer, skus and version.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void platformImagesGetTest() throws ApiException {
        String subscriptionId = null;
        String location = null;
        String publisher = null;
        String offer = null;
        String sku = null;
        String version = null;
        String apiVersion = null;
        PlatformImage response = api.platformImagesGet(subscriptionId, location, publisher, offer, sku, version, apiVersion);
        // TODO: test validations
    }

    /**
     * Returns all platform images.
     *
     * Returns a list of all platform images.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void platformImagesListTest() throws ApiException {
        String subscriptionId = null;
        String location = null;
        String apiVersion = null;
        List<PlatformImage> response = api.platformImagesList(subscriptionId, location, apiVersion);
        // TODO: test validations
    }

}
