/**
 * MonitorManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-11-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Baseline from './Baseline';

/**
 * The CalculateBaselineResponse model module.
 * @module model/CalculateBaselineResponse
 * @version 2017-11-01-preview
 */
class CalculateBaselineResponse {
    /**
     * Constructs a new <code>CalculateBaselineResponse</code>.
     * The response to a calculate baseline call.
     * @alias module:model/CalculateBaselineResponse
     * @param baseline {Array.<module:model/Baseline>} the baseline values for each sensitivity.
     * @param type {String} the resource type of the baseline resource.
     */
    constructor(baseline, type) { 
        
        CalculateBaselineResponse.initialize(this, baseline, type);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, baseline, type) { 
        obj['baseline'] = baseline;
        obj['type'] = type;
    }

    /**
     * Constructs a <code>CalculateBaselineResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CalculateBaselineResponse} obj Optional instance to populate.
     * @return {module:model/CalculateBaselineResponse} The populated <code>CalculateBaselineResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CalculateBaselineResponse();

            if (data.hasOwnProperty('baseline')) {
                obj['baseline'] = ApiClient.convertToType(data['baseline'], [Baseline]);
            }
            if (data.hasOwnProperty('timestamps')) {
                obj['timestamps'] = ApiClient.convertToType(data['timestamps'], ['Date']);
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CalculateBaselineResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CalculateBaselineResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CalculateBaselineResponse.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['baseline']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['baseline'])) {
                throw new Error("Expected the field `baseline` to be an array in the JSON data but got " + data['baseline']);
            }
            // validate the optional field `baseline` (array)
            for (const item of data['baseline']) {
                Baseline.validateJSON(item);
            };
        }
        // ensure the json data is an array
        if (!Array.isArray(data['timestamps'])) {
            throw new Error("Expected the field `timestamps` to be an array in the JSON data but got " + data['timestamps']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}

CalculateBaselineResponse.RequiredProperties = ["baseline", "type"];

/**
 * the baseline values for each sensitivity.
 * @member {Array.<module:model/Baseline>} baseline
 */
CalculateBaselineResponse.prototype['baseline'] = undefined;

/**
 * the array of timestamps of the baselines.
 * @member {Array.<Date>} timestamps
 */
CalculateBaselineResponse.prototype['timestamps'] = undefined;

/**
 * the resource type of the baseline resource.
 * @member {String} type
 */
CalculateBaselineResponse.prototype['type'] = undefined;






export default CalculateBaselineResponse;

