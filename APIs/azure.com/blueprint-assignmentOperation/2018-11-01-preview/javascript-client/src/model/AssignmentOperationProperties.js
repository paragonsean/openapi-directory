/**
 * BlueprintClient
 * Azure Blueprints Client provides access to blueprint definitions, assignments, and artifacts, and related blueprint operations.
 *
 * The version of the OpenAPI document: 2018-11-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AssignmentDeploymentJob from './AssignmentDeploymentJob';

/**
 * The AssignmentOperationProperties model module.
 * @module model/AssignmentOperationProperties
 * @version 2018-11-01-preview
 */
class AssignmentOperationProperties {
    /**
     * Constructs a new <code>AssignmentOperationProperties</code>.
     * Properties of AssignmentOperation.
     * @alias module:model/AssignmentOperationProperties
     */
    constructor() { 
        
        AssignmentOperationProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AssignmentOperationProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AssignmentOperationProperties} obj Optional instance to populate.
     * @return {module:model/AssignmentOperationProperties} The populated <code>AssignmentOperationProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AssignmentOperationProperties();

            if (data.hasOwnProperty('assignmentState')) {
                obj['assignmentState'] = ApiClient.convertToType(data['assignmentState'], 'String');
            }
            if (data.hasOwnProperty('blueprintVersion')) {
                obj['blueprintVersion'] = ApiClient.convertToType(data['blueprintVersion'], 'String');
            }
            if (data.hasOwnProperty('deployments')) {
                obj['deployments'] = ApiClient.convertToType(data['deployments'], [AssignmentDeploymentJob]);
            }
            if (data.hasOwnProperty('timeCreated')) {
                obj['timeCreated'] = ApiClient.convertToType(data['timeCreated'], 'String');
            }
            if (data.hasOwnProperty('timeFinished')) {
                obj['timeFinished'] = ApiClient.convertToType(data['timeFinished'], 'String');
            }
            if (data.hasOwnProperty('timeStarted')) {
                obj['timeStarted'] = ApiClient.convertToType(data['timeStarted'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AssignmentOperationProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AssignmentOperationProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['assignmentState'] && !(typeof data['assignmentState'] === 'string' || data['assignmentState'] instanceof String)) {
            throw new Error("Expected the field `assignmentState` to be a primitive type in the JSON string but got " + data['assignmentState']);
        }
        // ensure the json data is a string
        if (data['blueprintVersion'] && !(typeof data['blueprintVersion'] === 'string' || data['blueprintVersion'] instanceof String)) {
            throw new Error("Expected the field `blueprintVersion` to be a primitive type in the JSON string but got " + data['blueprintVersion']);
        }
        if (data['deployments']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['deployments'])) {
                throw new Error("Expected the field `deployments` to be an array in the JSON data but got " + data['deployments']);
            }
            // validate the optional field `deployments` (array)
            for (const item of data['deployments']) {
                AssignmentDeploymentJob.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['timeCreated'] && !(typeof data['timeCreated'] === 'string' || data['timeCreated'] instanceof String)) {
            throw new Error("Expected the field `timeCreated` to be a primitive type in the JSON string but got " + data['timeCreated']);
        }
        // ensure the json data is a string
        if (data['timeFinished'] && !(typeof data['timeFinished'] === 'string' || data['timeFinished'] instanceof String)) {
            throw new Error("Expected the field `timeFinished` to be a primitive type in the JSON string but got " + data['timeFinished']);
        }
        // ensure the json data is a string
        if (data['timeStarted'] && !(typeof data['timeStarted'] === 'string' || data['timeStarted'] instanceof String)) {
            throw new Error("Expected the field `timeStarted` to be a primitive type in the JSON string but got " + data['timeStarted']);
        }

        return true;
    }


}



/**
 * State of this blueprint assignment operation.
 * @member {String} assignmentState
 */
AssignmentOperationProperties.prototype['assignmentState'] = undefined;

/**
 * The published version of the blueprint definition used for the blueprint assignment operation.
 * @member {String} blueprintVersion
 */
AssignmentOperationProperties.prototype['blueprintVersion'] = undefined;

/**
 * List of jobs in this blueprint assignment operation.
 * @member {Array.<module:model/AssignmentDeploymentJob>} deployments
 */
AssignmentOperationProperties.prototype['deployments'] = undefined;

/**
 * Create time of this blueprint assignment operation.
 * @member {String} timeCreated
 */
AssignmentOperationProperties.prototype['timeCreated'] = undefined;

/**
 * Finish time of the overall underlying deployments.
 * @member {String} timeFinished
 */
AssignmentOperationProperties.prototype['timeFinished'] = undefined;

/**
 * Start time of the underlying deployment.
 * @member {String} timeStarted
 */
AssignmentOperationProperties.prototype['timeStarted'] = undefined;






export default AssignmentOperationProperties;

