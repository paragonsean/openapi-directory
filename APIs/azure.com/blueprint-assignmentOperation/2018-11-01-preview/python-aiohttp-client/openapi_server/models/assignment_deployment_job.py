# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.assignment_deployment_job_result import AssignmentDeploymentJobResult
from openapi_server import util


class AssignmentDeploymentJob(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, action: str=None, history: List[AssignmentDeploymentJobResult]=None, job_id: str=None, job_state: str=None, kind: str=None, request_uri: str=None, result: AssignmentDeploymentJobResult=None):
        """AssignmentDeploymentJob - a model defined in OpenAPI

        :param action: The action of this AssignmentDeploymentJob.
        :param history: The history of this AssignmentDeploymentJob.
        :param job_id: The job_id of this AssignmentDeploymentJob.
        :param job_state: The job_state of this AssignmentDeploymentJob.
        :param kind: The kind of this AssignmentDeploymentJob.
        :param request_uri: The request_uri of this AssignmentDeploymentJob.
        :param result: The result of this AssignmentDeploymentJob.
        """
        self.openapi_types = {
            'action': str,
            'history': List[AssignmentDeploymentJobResult],
            'job_id': str,
            'job_state': str,
            'kind': str,
            'request_uri': str,
            'result': AssignmentDeploymentJobResult
        }

        self.attribute_map = {
            'action': 'action',
            'history': 'history',
            'job_id': 'jobId',
            'job_state': 'jobState',
            'kind': 'kind',
            'request_uri': 'requestUri',
            'result': 'result'
        }

        self._action = action
        self._history = history
        self._job_id = job_id
        self._job_state = job_state
        self._kind = kind
        self._request_uri = request_uri
        self._result = result

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AssignmentDeploymentJob':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AssignmentDeploymentJob of this AssignmentDeploymentJob.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def action(self):
        """Gets the action of this AssignmentDeploymentJob.

        Name of the action performed in this job.

        :return: The action of this AssignmentDeploymentJob.
        :rtype: str
        """
        return self._action

    @action.setter
    def action(self, action):
        """Sets the action of this AssignmentDeploymentJob.

        Name of the action performed in this job.

        :param action: The action of this AssignmentDeploymentJob.
        :type action: str
        """

        self._action = action

    @property
    def history(self):
        """Gets the history of this AssignmentDeploymentJob.

        Result of this deployment job for each retry.

        :return: The history of this AssignmentDeploymentJob.
        :rtype: List[AssignmentDeploymentJobResult]
        """
        return self._history

    @history.setter
    def history(self, history):
        """Sets the history of this AssignmentDeploymentJob.

        Result of this deployment job for each retry.

        :param history: The history of this AssignmentDeploymentJob.
        :type history: List[AssignmentDeploymentJobResult]
        """

        self._history = history

    @property
    def job_id(self):
        """Gets the job_id of this AssignmentDeploymentJob.

        Id of this job.

        :return: The job_id of this AssignmentDeploymentJob.
        :rtype: str
        """
        return self._job_id

    @job_id.setter
    def job_id(self, job_id):
        """Sets the job_id of this AssignmentDeploymentJob.

        Id of this job.

        :param job_id: The job_id of this AssignmentDeploymentJob.
        :type job_id: str
        """

        self._job_id = job_id

    @property
    def job_state(self):
        """Gets the job_state of this AssignmentDeploymentJob.

        State of this job.

        :return: The job_state of this AssignmentDeploymentJob.
        :rtype: str
        """
        return self._job_state

    @job_state.setter
    def job_state(self, job_state):
        """Sets the job_state of this AssignmentDeploymentJob.

        State of this job.

        :param job_state: The job_state of this AssignmentDeploymentJob.
        :type job_state: str
        """

        self._job_state = job_state

    @property
    def kind(self):
        """Gets the kind of this AssignmentDeploymentJob.

        Kind of job.

        :return: The kind of this AssignmentDeploymentJob.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this AssignmentDeploymentJob.

        Kind of job.

        :param kind: The kind of this AssignmentDeploymentJob.
        :type kind: str
        """

        self._kind = kind

    @property
    def request_uri(self):
        """Gets the request_uri of this AssignmentDeploymentJob.

        Reference to deployment job resource id.

        :return: The request_uri of this AssignmentDeploymentJob.
        :rtype: str
        """
        return self._request_uri

    @request_uri.setter
    def request_uri(self, request_uri):
        """Sets the request_uri of this AssignmentDeploymentJob.

        Reference to deployment job resource id.

        :param request_uri: The request_uri of this AssignmentDeploymentJob.
        :type request_uri: str
        """

        self._request_uri = request_uri

    @property
    def result(self):
        """Gets the result of this AssignmentDeploymentJob.


        :return: The result of this AssignmentDeploymentJob.
        :rtype: AssignmentDeploymentJobResult
        """
        return self._result

    @result.setter
    def result(self, result):
        """Sets the result of this AssignmentDeploymentJob.


        :param result: The result of this AssignmentDeploymentJob.
        :type result: AssignmentDeploymentJobResult
        """

        self._result = result
