/**
 * ApiManagementClient
 * Use these REST APIs to manage Azure API Management deployment.
 *
 * The version of the OpenAPI document: 2016-07-07
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AdditionalRegion from './AdditionalRegion';
import VirtualNetworkConfiguration from './VirtualNetworkConfiguration';

/**
 * The ApiManagementServiceManageDeploymentsParameters model module.
 * @module model/ApiManagementServiceManageDeploymentsParameters
 * @version 2016-07-07
 */
class ApiManagementServiceManageDeploymentsParameters {
    /**
     * Constructs a new <code>ApiManagementServiceManageDeploymentsParameters</code>.
     * Parameters supplied to the ManageDeployments operation.
     * @alias module:model/ApiManagementServiceManageDeploymentsParameters
     * @param location {String} Location of the API Management service Azure data center.
     * @param skuType {module:model/ApiManagementServiceManageDeploymentsParameters.SkuTypeEnum} SKU type of the API Management service.
     */
    constructor(location, skuType) { 
        
        ApiManagementServiceManageDeploymentsParameters.initialize(this, location, skuType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, location, skuType) { 
        obj['location'] = location;
        obj['skuType'] = skuType;
        obj['skuUnitCount'] = 1;
        obj['vpnType'] = 'None';
    }

    /**
     * Constructs a <code>ApiManagementServiceManageDeploymentsParameters</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ApiManagementServiceManageDeploymentsParameters} obj Optional instance to populate.
     * @return {module:model/ApiManagementServiceManageDeploymentsParameters} The populated <code>ApiManagementServiceManageDeploymentsParameters</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ApiManagementServiceManageDeploymentsParameters();

            if (data.hasOwnProperty('additionalLocations')) {
                obj['additionalLocations'] = ApiClient.convertToType(data['additionalLocations'], [AdditionalRegion]);
            }
            if (data.hasOwnProperty('location')) {
                obj['location'] = ApiClient.convertToType(data['location'], 'String');
            }
            if (data.hasOwnProperty('skuType')) {
                obj['skuType'] = ApiClient.convertToType(data['skuType'], 'String');
            }
            if (data.hasOwnProperty('skuUnitCount')) {
                obj['skuUnitCount'] = ApiClient.convertToType(data['skuUnitCount'], 'Number');
            }
            if (data.hasOwnProperty('vpnConfiguration')) {
                obj['vpnConfiguration'] = VirtualNetworkConfiguration.constructFromObject(data['vpnConfiguration']);
            }
            if (data.hasOwnProperty('vpnType')) {
                obj['vpnType'] = ApiClient.convertToType(data['vpnType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ApiManagementServiceManageDeploymentsParameters</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ApiManagementServiceManageDeploymentsParameters</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ApiManagementServiceManageDeploymentsParameters.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['additionalLocations']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['additionalLocations'])) {
                throw new Error("Expected the field `additionalLocations` to be an array in the JSON data but got " + data['additionalLocations']);
            }
            // validate the optional field `additionalLocations` (array)
            for (const item of data['additionalLocations']) {
                AdditionalRegion.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['location'] && !(typeof data['location'] === 'string' || data['location'] instanceof String)) {
            throw new Error("Expected the field `location` to be a primitive type in the JSON string but got " + data['location']);
        }
        // ensure the json data is a string
        if (data['skuType'] && !(typeof data['skuType'] === 'string' || data['skuType'] instanceof String)) {
            throw new Error("Expected the field `skuType` to be a primitive type in the JSON string but got " + data['skuType']);
        }
        // validate the optional field `vpnConfiguration`
        if (data['vpnConfiguration']) { // data not null
          VirtualNetworkConfiguration.validateJSON(data['vpnConfiguration']);
        }
        // ensure the json data is a string
        if (data['vpnType'] && !(typeof data['vpnType'] === 'string' || data['vpnType'] instanceof String)) {
            throw new Error("Expected the field `vpnType` to be a primitive type in the JSON string but got " + data['vpnType']);
        }

        return true;
    }


}

ApiManagementServiceManageDeploymentsParameters.RequiredProperties = ["location", "skuType"];

/**
 * Additional data center locations for the API Management service.
 * @member {Array.<module:model/AdditionalRegion>} additionalLocations
 */
ApiManagementServiceManageDeploymentsParameters.prototype['additionalLocations'] = undefined;

/**
 * Location of the API Management service Azure data center.
 * @member {String} location
 */
ApiManagementServiceManageDeploymentsParameters.prototype['location'] = undefined;

/**
 * SKU type of the API Management service.
 * @member {module:model/ApiManagementServiceManageDeploymentsParameters.SkuTypeEnum} skuType
 */
ApiManagementServiceManageDeploymentsParameters.prototype['skuType'] = undefined;

/**
 * SKU Unit count of the API Management service. Default value is 1.
 * @member {Number} skuUnitCount
 * @default 1
 */
ApiManagementServiceManageDeploymentsParameters.prototype['skuUnitCount'] = 1;

/**
 * @member {module:model/VirtualNetworkConfiguration} vpnConfiguration
 */
ApiManagementServiceManageDeploymentsParameters.prototype['vpnConfiguration'] = undefined;

/**
 * The type of VPN in which API Management service needs to be configured in. None (Default Value) means the API Management service is not part of any Virtual Network, External means the API Management deployment is set up inside a Virtual Network having an Internet Facing Endpoint, and Internal means that the API Management service deployment is set up inside a Virtual Network having an Intranet Facing Endpoint only. When vpnConfiguration is specified, vpnType must be specified.
 * @member {module:model/ApiManagementServiceManageDeploymentsParameters.VpnTypeEnum} vpnType
 * @default 'None'
 */
ApiManagementServiceManageDeploymentsParameters.prototype['vpnType'] = 'None';





/**
 * Allowed values for the <code>skuType</code> property.
 * @enum {String}
 * @readonly
 */
ApiManagementServiceManageDeploymentsParameters['SkuTypeEnum'] = {

    /**
     * value: "Developer"
     * @const
     */
    "Developer": "Developer",

    /**
     * value: "Standard"
     * @const
     */
    "Standard": "Standard",

    /**
     * value: "Premium"
     * @const
     */
    "Premium": "Premium"
};


/**
 * Allowed values for the <code>vpnType</code> property.
 * @enum {String}
 * @readonly
 */
ApiManagementServiceManageDeploymentsParameters['VpnTypeEnum'] = {

    /**
     * value: "None"
     * @const
     */
    "None": "None",

    /**
     * value: "External"
     * @const
     */
    "External": "External",

    /**
     * value: "Internal"
     * @const
     */
    "Internal": "Internal"
};



export default ApiManagementServiceManageDeploymentsParameters;

