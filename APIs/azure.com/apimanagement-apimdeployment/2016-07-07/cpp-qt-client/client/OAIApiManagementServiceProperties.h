/**
 * ApiManagementClient
 * Use these REST APIs to manage Azure API Management deployment.
 *
 * The version of the OpenAPI document: 2016-07-07
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIApiManagementServiceProperties.h
 *
 * Properties of an API Management service resource description.
 */

#ifndef OAIApiManagementServiceProperties_H
#define OAIApiManagementServiceProperties_H

#include <QJsonObject>

#include "OAIAdditionalRegion.h"
#include "OAIHostnameConfiguration.h"
#include "OAIVirtualNetworkConfiguration.h"
#include <QDateTime>
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAdditionalRegion;
class OAIHostnameConfiguration;
class OAIVirtualNetworkConfiguration;

class OAIApiManagementServiceProperties : public OAIObject {
public:
    OAIApiManagementServiceProperties();
    OAIApiManagementServiceProperties(QString json);
    ~OAIApiManagementServiceProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIAdditionalRegion> getAdditionalLocations() const;
    void setAdditionalLocations(const QList<OAIAdditionalRegion> &additional_locations);
    bool is_additional_locations_Set() const;
    bool is_additional_locations_Valid() const;

    QString getAddresserEmail() const;
    void setAddresserEmail(const QString &addresser_email);
    bool is_addresser_email_Set() const;
    bool is_addresser_email_Valid() const;

    QDateTime getCreatedAtUtc() const;
    void setCreatedAtUtc(const QDateTime &created_at_utc);
    bool is_created_at_utc_Set() const;
    bool is_created_at_utc_Valid() const;

    QMap<QString, QString> getCustomProperties() const;
    void setCustomProperties(const QMap<QString, QString> &custom_properties);
    bool is_custom_properties_Set() const;
    bool is_custom_properties_Valid() const;

    QList<OAIHostnameConfiguration> getHostnameConfigurations() const;
    void setHostnameConfigurations(const QList<OAIHostnameConfiguration> &hostname_configurations);
    bool is_hostname_configurations_Set() const;
    bool is_hostname_configurations_Valid() const;

    QString getManagementApiUrl() const;
    void setManagementApiUrl(const QString &management_api_url);
    bool is_management_api_url_Set() const;
    bool is_management_api_url_Valid() const;

    QString getPortalUrl() const;
    void setPortalUrl(const QString &portal_url);
    bool is_portal_url_Set() const;
    bool is_portal_url_Valid() const;

    QString getProvisioningState() const;
    void setProvisioningState(const QString &provisioning_state);
    bool is_provisioning_state_Set() const;
    bool is_provisioning_state_Valid() const;

    QString getPublisherEmail() const;
    void setPublisherEmail(const QString &publisher_email);
    bool is_publisher_email_Set() const;
    bool is_publisher_email_Valid() const;

    QString getPublisherName() const;
    void setPublisherName(const QString &publisher_name);
    bool is_publisher_name_Set() const;
    bool is_publisher_name_Valid() const;

    QString getRuntimeUrl() const;
    void setRuntimeUrl(const QString &runtime_url);
    bool is_runtime_url_Set() const;
    bool is_runtime_url_Valid() const;

    QString getScmUrl() const;
    void setScmUrl(const QString &scm_url);
    bool is_scm_url_Set() const;
    bool is_scm_url_Valid() const;

    QList<QString> getStaticIps() const;
    void setStaticIps(const QList<QString> &static_ips);
    bool is_static_ips_Set() const;
    bool is_static_ips_Valid() const;

    QString getTargetProvisioningState() const;
    void setTargetProvisioningState(const QString &target_provisioning_state);
    bool is_target_provisioning_state_Set() const;
    bool is_target_provisioning_state_Valid() const;

    QString getVpnType() const;
    void setVpnType(const QString &vpn_type);
    bool is_vpn_type_Set() const;
    bool is_vpn_type_Valid() const;

    OAIVirtualNetworkConfiguration getVpnconfiguration() const;
    void setVpnconfiguration(const OAIVirtualNetworkConfiguration &vpnconfiguration);
    bool is_vpnconfiguration_Set() const;
    bool is_vpnconfiguration_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIAdditionalRegion> m_additional_locations;
    bool m_additional_locations_isSet;
    bool m_additional_locations_isValid;

    QString m_addresser_email;
    bool m_addresser_email_isSet;
    bool m_addresser_email_isValid;

    QDateTime m_created_at_utc;
    bool m_created_at_utc_isSet;
    bool m_created_at_utc_isValid;

    QMap<QString, QString> m_custom_properties;
    bool m_custom_properties_isSet;
    bool m_custom_properties_isValid;

    QList<OAIHostnameConfiguration> m_hostname_configurations;
    bool m_hostname_configurations_isSet;
    bool m_hostname_configurations_isValid;

    QString m_management_api_url;
    bool m_management_api_url_isSet;
    bool m_management_api_url_isValid;

    QString m_portal_url;
    bool m_portal_url_isSet;
    bool m_portal_url_isValid;

    QString m_provisioning_state;
    bool m_provisioning_state_isSet;
    bool m_provisioning_state_isValid;

    QString m_publisher_email;
    bool m_publisher_email_isSet;
    bool m_publisher_email_isValid;

    QString m_publisher_name;
    bool m_publisher_name_isSet;
    bool m_publisher_name_isValid;

    QString m_runtime_url;
    bool m_runtime_url_isSet;
    bool m_runtime_url_isValid;

    QString m_scm_url;
    bool m_scm_url_isSet;
    bool m_scm_url_isValid;

    QList<QString> m_static_ips;
    bool m_static_ips_isSet;
    bool m_static_ips_isValid;

    QString m_target_provisioning_state;
    bool m_target_provisioning_state_isSet;
    bool m_target_provisioning_state_isValid;

    QString m_vpn_type;
    bool m_vpn_type_isSet;
    bool m_vpn_type_isValid;

    OAIVirtualNetworkConfiguration m_vpnconfiguration;
    bool m_vpnconfiguration_isSet;
    bool m_vpnconfiguration_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIApiManagementServiceProperties)

#endif // OAIApiManagementServiceProperties_H
