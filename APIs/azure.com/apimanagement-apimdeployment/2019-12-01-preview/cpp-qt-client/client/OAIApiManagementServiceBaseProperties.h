/**
 * ApiManagementClient
 * Use these REST APIs to manage Azure API Management deployment.
 *
 * The version of the OpenAPI document: 2019-12-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIApiManagementServiceBaseProperties.h
 *
 * Base Properties of an API Management service resource description.
 */

#ifndef OAIApiManagementServiceBaseProperties_H
#define OAIApiManagementServiceBaseProperties_H

#include <QJsonObject>

#include "OAIAdditionalLocation.h"
#include "OAIApiVersionConstraint.h"
#include "OAICertificateConfiguration.h"
#include "OAIHostnameConfiguration.h"
#include "OAIVirtualNetworkConfiguration.h"
#include <QDateTime>
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAdditionalLocation;
class OAIApiVersionConstraint;
class OAICertificateConfiguration;
class OAIHostnameConfiguration;
class OAIVirtualNetworkConfiguration;

class OAIApiManagementServiceBaseProperties : public OAIObject {
public:
    OAIApiManagementServiceBaseProperties();
    OAIApiManagementServiceBaseProperties(QString json);
    ~OAIApiManagementServiceBaseProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIAdditionalLocation> getAdditionalLocations() const;
    void setAdditionalLocations(const QList<OAIAdditionalLocation> &additional_locations);
    bool is_additional_locations_Set() const;
    bool is_additional_locations_Valid() const;

    OAIApiVersionConstraint getApiVersionConstraint() const;
    void setApiVersionConstraint(const OAIApiVersionConstraint &api_version_constraint);
    bool is_api_version_constraint_Set() const;
    bool is_api_version_constraint_Valid() const;

    QList<OAICertificateConfiguration> getCertificates() const;
    void setCertificates(const QList<OAICertificateConfiguration> &certificates);
    bool is_certificates_Set() const;
    bool is_certificates_Valid() const;

    QDateTime getCreatedAtUtc() const;
    void setCreatedAtUtc(const QDateTime &created_at_utc);
    bool is_created_at_utc_Set() const;
    bool is_created_at_utc_Valid() const;

    QMap<QString, QString> getCustomProperties() const;
    void setCustomProperties(const QMap<QString, QString> &custom_properties);
    bool is_custom_properties_Set() const;
    bool is_custom_properties_Valid() const;

    QString getDeveloperPortalUrl() const;
    void setDeveloperPortalUrl(const QString &developer_portal_url);
    bool is_developer_portal_url_Set() const;
    bool is_developer_portal_url_Valid() const;

    bool isDisableGateway() const;
    void setDisableGateway(const bool &disable_gateway);
    bool is_disable_gateway_Set() const;
    bool is_disable_gateway_Valid() const;

    bool isEnableClientCertificate() const;
    void setEnableClientCertificate(const bool &enable_client_certificate);
    bool is_enable_client_certificate_Set() const;
    bool is_enable_client_certificate_Valid() const;

    QString getGatewayRegionalUrl() const;
    void setGatewayRegionalUrl(const QString &gateway_regional_url);
    bool is_gateway_regional_url_Set() const;
    bool is_gateway_regional_url_Valid() const;

    QString getGatewayUrl() const;
    void setGatewayUrl(const QString &gateway_url);
    bool is_gateway_url_Set() const;
    bool is_gateway_url_Valid() const;

    QList<OAIHostnameConfiguration> getHostnameConfigurations() const;
    void setHostnameConfigurations(const QList<OAIHostnameConfiguration> &hostname_configurations);
    bool is_hostname_configurations_Set() const;
    bool is_hostname_configurations_Valid() const;

    QString getManagementApiUrl() const;
    void setManagementApiUrl(const QString &management_api_url);
    bool is_management_api_url_Set() const;
    bool is_management_api_url_Valid() const;

    QString getNotificationSenderEmail() const;
    void setNotificationSenderEmail(const QString &notification_sender_email);
    bool is_notification_sender_email_Set() const;
    bool is_notification_sender_email_Valid() const;

    QString getPortalUrl() const;
    void setPortalUrl(const QString &portal_url);
    bool is_portal_url_Set() const;
    bool is_portal_url_Valid() const;

    QList<QString> getPrivateIpAddresses() const;
    void setPrivateIpAddresses(const QList<QString> &private_ip_addresses);
    bool is_private_ip_addresses_Set() const;
    bool is_private_ip_addresses_Valid() const;

    QString getProvisioningState() const;
    void setProvisioningState(const QString &provisioning_state);
    bool is_provisioning_state_Set() const;
    bool is_provisioning_state_Valid() const;

    QList<QString> getPublicIpAddresses() const;
    void setPublicIpAddresses(const QList<QString> &public_ip_addresses);
    bool is_public_ip_addresses_Set() const;
    bool is_public_ip_addresses_Valid() const;

    QString getScmUrl() const;
    void setScmUrl(const QString &scm_url);
    bool is_scm_url_Set() const;
    bool is_scm_url_Valid() const;

    QString getTargetProvisioningState() const;
    void setTargetProvisioningState(const QString &target_provisioning_state);
    bool is_target_provisioning_state_Set() const;
    bool is_target_provisioning_state_Valid() const;

    OAIVirtualNetworkConfiguration getVirtualNetworkConfiguration() const;
    void setVirtualNetworkConfiguration(const OAIVirtualNetworkConfiguration &virtual_network_configuration);
    bool is_virtual_network_configuration_Set() const;
    bool is_virtual_network_configuration_Valid() const;

    QString getVirtualNetworkType() const;
    void setVirtualNetworkType(const QString &virtual_network_type);
    bool is_virtual_network_type_Set() const;
    bool is_virtual_network_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIAdditionalLocation> m_additional_locations;
    bool m_additional_locations_isSet;
    bool m_additional_locations_isValid;

    OAIApiVersionConstraint m_api_version_constraint;
    bool m_api_version_constraint_isSet;
    bool m_api_version_constraint_isValid;

    QList<OAICertificateConfiguration> m_certificates;
    bool m_certificates_isSet;
    bool m_certificates_isValid;

    QDateTime m_created_at_utc;
    bool m_created_at_utc_isSet;
    bool m_created_at_utc_isValid;

    QMap<QString, QString> m_custom_properties;
    bool m_custom_properties_isSet;
    bool m_custom_properties_isValid;

    QString m_developer_portal_url;
    bool m_developer_portal_url_isSet;
    bool m_developer_portal_url_isValid;

    bool m_disable_gateway;
    bool m_disable_gateway_isSet;
    bool m_disable_gateway_isValid;

    bool m_enable_client_certificate;
    bool m_enable_client_certificate_isSet;
    bool m_enable_client_certificate_isValid;

    QString m_gateway_regional_url;
    bool m_gateway_regional_url_isSet;
    bool m_gateway_regional_url_isValid;

    QString m_gateway_url;
    bool m_gateway_url_isSet;
    bool m_gateway_url_isValid;

    QList<OAIHostnameConfiguration> m_hostname_configurations;
    bool m_hostname_configurations_isSet;
    bool m_hostname_configurations_isValid;

    QString m_management_api_url;
    bool m_management_api_url_isSet;
    bool m_management_api_url_isValid;

    QString m_notification_sender_email;
    bool m_notification_sender_email_isSet;
    bool m_notification_sender_email_isValid;

    QString m_portal_url;
    bool m_portal_url_isSet;
    bool m_portal_url_isValid;

    QList<QString> m_private_ip_addresses;
    bool m_private_ip_addresses_isSet;
    bool m_private_ip_addresses_isValid;

    QString m_provisioning_state;
    bool m_provisioning_state_isSet;
    bool m_provisioning_state_isValid;

    QList<QString> m_public_ip_addresses;
    bool m_public_ip_addresses_isSet;
    bool m_public_ip_addresses_isValid;

    QString m_scm_url;
    bool m_scm_url_isSet;
    bool m_scm_url_isValid;

    QString m_target_provisioning_state;
    bool m_target_provisioning_state_isSet;
    bool m_target_provisioning_state_isValid;

    OAIVirtualNetworkConfiguration m_virtual_network_configuration;
    bool m_virtual_network_configuration_isSet;
    bool m_virtual_network_configuration_isValid;

    QString m_virtual_network_type;
    bool m_virtual_network_type_isSet;
    bool m_virtual_network_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIApiManagementServiceBaseProperties)

#endif // OAIApiManagementServiceBaseProperties_H
