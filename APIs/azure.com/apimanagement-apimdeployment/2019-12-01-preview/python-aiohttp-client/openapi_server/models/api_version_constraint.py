# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ApiVersionConstraint(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, min_api_version: str=None):
        """ApiVersionConstraint - a model defined in OpenAPI

        :param min_api_version: The min_api_version of this ApiVersionConstraint.
        """
        self.openapi_types = {
            'min_api_version': str
        }

        self.attribute_map = {
            'min_api_version': 'minApiVersion'
        }

        self._min_api_version = min_api_version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApiVersionConstraint':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ApiVersionConstraint of this ApiVersionConstraint.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def min_api_version(self):
        """Gets the min_api_version of this ApiVersionConstraint.

        Limit control plane API calls to API Management service with version equal to or newer than this value.

        :return: The min_api_version of this ApiVersionConstraint.
        :rtype: str
        """
        return self._min_api_version

    @min_api_version.setter
    def min_api_version(self, min_api_version):
        """Sets the min_api_version of this ApiVersionConstraint.

        Limit control plane API calls to API Management service with version equal to or newer than this value.

        :param min_api_version: The min_api_version of this ApiVersionConstraint.
        :type min_api_version: str
        """

        self._min_api_version = min_api_version
