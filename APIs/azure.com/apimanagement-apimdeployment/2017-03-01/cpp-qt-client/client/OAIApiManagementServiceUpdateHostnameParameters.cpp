/**
 * ApiManagementClient
 * Use these REST APIs to manage Azure API Management deployment.
 *
 * The version of the OpenAPI document: 2017-03-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIApiManagementServiceUpdateHostnameParameters.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIApiManagementServiceUpdateHostnameParameters::OAIApiManagementServiceUpdateHostnameParameters(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIApiManagementServiceUpdateHostnameParameters::OAIApiManagementServiceUpdateHostnameParameters() {
    this->initializeModel();
}

OAIApiManagementServiceUpdateHostnameParameters::~OAIApiManagementServiceUpdateHostnameParameters() {}

void OAIApiManagementServiceUpdateHostnameParameters::initializeModel() {

    m_r_delete_isSet = false;
    m_r_delete_isValid = false;

    m_update_isSet = false;
    m_update_isValid = false;
}

void OAIApiManagementServiceUpdateHostnameParameters::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIApiManagementServiceUpdateHostnameParameters::fromJsonObject(QJsonObject json) {

    m_r_delete_isValid = ::OpenAPI::fromJsonValue(m_r_delete, json[QString("delete")]);
    m_r_delete_isSet = !json[QString("delete")].isNull() && m_r_delete_isValid;

    m_update_isValid = ::OpenAPI::fromJsonValue(m_update, json[QString("update")]);
    m_update_isSet = !json[QString("update")].isNull() && m_update_isValid;
}

QString OAIApiManagementServiceUpdateHostnameParameters::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIApiManagementServiceUpdateHostnameParameters::asJsonObject() const {
    QJsonObject obj;
    if (m_r_delete.size() > 0) {
        obj.insert(QString("delete"), ::OpenAPI::toJsonValue(m_r_delete));
    }
    if (m_update.size() > 0) {
        obj.insert(QString("update"), ::OpenAPI::toJsonValue(m_update));
    }
    return obj;
}

QList<QString> OAIApiManagementServiceUpdateHostnameParameters::getRDelete() const {
    return m_r_delete;
}
void OAIApiManagementServiceUpdateHostnameParameters::setRDelete(const QList<QString> &r_delete) {
    m_r_delete = r_delete;
    m_r_delete_isSet = true;
}

bool OAIApiManagementServiceUpdateHostnameParameters::is_r_delete_Set() const{
    return m_r_delete_isSet;
}

bool OAIApiManagementServiceUpdateHostnameParameters::is_r_delete_Valid() const{
    return m_r_delete_isValid;
}

QList<OAIHostnameConfigurationOld> OAIApiManagementServiceUpdateHostnameParameters::getUpdate() const {
    return m_update;
}
void OAIApiManagementServiceUpdateHostnameParameters::setUpdate(const QList<OAIHostnameConfigurationOld> &update) {
    m_update = update;
    m_update_isSet = true;
}

bool OAIApiManagementServiceUpdateHostnameParameters::is_update_Set() const{
    return m_update_isSet;
}

bool OAIApiManagementServiceUpdateHostnameParameters::is_update_Valid() const{
    return m_update_isValid;
}

bool OAIApiManagementServiceUpdateHostnameParameters::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_r_delete.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_update.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIApiManagementServiceUpdateHostnameParameters::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
