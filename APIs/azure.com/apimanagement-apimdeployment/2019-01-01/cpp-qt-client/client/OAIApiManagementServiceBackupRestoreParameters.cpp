/**
 * ApiManagementClient
 * Use these REST APIs to manage Azure API Management deployment.
 *
 * The version of the OpenAPI document: 2019-01-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIApiManagementServiceBackupRestoreParameters.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIApiManagementServiceBackupRestoreParameters::OAIApiManagementServiceBackupRestoreParameters(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIApiManagementServiceBackupRestoreParameters::OAIApiManagementServiceBackupRestoreParameters() {
    this->initializeModel();
}

OAIApiManagementServiceBackupRestoreParameters::~OAIApiManagementServiceBackupRestoreParameters() {}

void OAIApiManagementServiceBackupRestoreParameters::initializeModel() {

    m_access_key_isSet = false;
    m_access_key_isValid = false;

    m_backup_name_isSet = false;
    m_backup_name_isValid = false;

    m_container_name_isSet = false;
    m_container_name_isValid = false;

    m_storage_account_isSet = false;
    m_storage_account_isValid = false;
}

void OAIApiManagementServiceBackupRestoreParameters::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIApiManagementServiceBackupRestoreParameters::fromJsonObject(QJsonObject json) {

    m_access_key_isValid = ::OpenAPI::fromJsonValue(m_access_key, json[QString("accessKey")]);
    m_access_key_isSet = !json[QString("accessKey")].isNull() && m_access_key_isValid;

    m_backup_name_isValid = ::OpenAPI::fromJsonValue(m_backup_name, json[QString("backupName")]);
    m_backup_name_isSet = !json[QString("backupName")].isNull() && m_backup_name_isValid;

    m_container_name_isValid = ::OpenAPI::fromJsonValue(m_container_name, json[QString("containerName")]);
    m_container_name_isSet = !json[QString("containerName")].isNull() && m_container_name_isValid;

    m_storage_account_isValid = ::OpenAPI::fromJsonValue(m_storage_account, json[QString("storageAccount")]);
    m_storage_account_isSet = !json[QString("storageAccount")].isNull() && m_storage_account_isValid;
}

QString OAIApiManagementServiceBackupRestoreParameters::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIApiManagementServiceBackupRestoreParameters::asJsonObject() const {
    QJsonObject obj;
    if (m_access_key_isSet) {
        obj.insert(QString("accessKey"), ::OpenAPI::toJsonValue(m_access_key));
    }
    if (m_backup_name_isSet) {
        obj.insert(QString("backupName"), ::OpenAPI::toJsonValue(m_backup_name));
    }
    if (m_container_name_isSet) {
        obj.insert(QString("containerName"), ::OpenAPI::toJsonValue(m_container_name));
    }
    if (m_storage_account_isSet) {
        obj.insert(QString("storageAccount"), ::OpenAPI::toJsonValue(m_storage_account));
    }
    return obj;
}

QString OAIApiManagementServiceBackupRestoreParameters::getAccessKey() const {
    return m_access_key;
}
void OAIApiManagementServiceBackupRestoreParameters::setAccessKey(const QString &access_key) {
    m_access_key = access_key;
    m_access_key_isSet = true;
}

bool OAIApiManagementServiceBackupRestoreParameters::is_access_key_Set() const{
    return m_access_key_isSet;
}

bool OAIApiManagementServiceBackupRestoreParameters::is_access_key_Valid() const{
    return m_access_key_isValid;
}

QString OAIApiManagementServiceBackupRestoreParameters::getBackupName() const {
    return m_backup_name;
}
void OAIApiManagementServiceBackupRestoreParameters::setBackupName(const QString &backup_name) {
    m_backup_name = backup_name;
    m_backup_name_isSet = true;
}

bool OAIApiManagementServiceBackupRestoreParameters::is_backup_name_Set() const{
    return m_backup_name_isSet;
}

bool OAIApiManagementServiceBackupRestoreParameters::is_backup_name_Valid() const{
    return m_backup_name_isValid;
}

QString OAIApiManagementServiceBackupRestoreParameters::getContainerName() const {
    return m_container_name;
}
void OAIApiManagementServiceBackupRestoreParameters::setContainerName(const QString &container_name) {
    m_container_name = container_name;
    m_container_name_isSet = true;
}

bool OAIApiManagementServiceBackupRestoreParameters::is_container_name_Set() const{
    return m_container_name_isSet;
}

bool OAIApiManagementServiceBackupRestoreParameters::is_container_name_Valid() const{
    return m_container_name_isValid;
}

QString OAIApiManagementServiceBackupRestoreParameters::getStorageAccount() const {
    return m_storage_account;
}
void OAIApiManagementServiceBackupRestoreParameters::setStorageAccount(const QString &storage_account) {
    m_storage_account = storage_account;
    m_storage_account_isSet = true;
}

bool OAIApiManagementServiceBackupRestoreParameters::is_storage_account_Set() const{
    return m_storage_account_isSet;
}

bool OAIApiManagementServiceBackupRestoreParameters::is_storage_account_Valid() const{
    return m_storage_account_isValid;
}

bool OAIApiManagementServiceBackupRestoreParameters::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_access_key_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_backup_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_container_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_storage_account_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIApiManagementServiceBackupRestoreParameters::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_access_key_isValid && m_backup_name_isValid && m_container_name_isValid && m_storage_account_isValid && true;
}

} // namespace OpenAPI
