/**
 * ApiManagementClient
 * Use these REST APIs to manage Azure API Management deployment.
 *
 * The version of the OpenAPI document: 2018-06-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAdditionalLocation.h
 *
 * Description of an additional API Management resource location.
 */

#ifndef OAIAdditionalLocation_H
#define OAIAdditionalLocation_H

#include <QJsonObject>

#include "OAIApiManagementServiceSkuProperties.h"
#include "OAIVirtualNetworkConfiguration.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIApiManagementServiceSkuProperties;
class OAIVirtualNetworkConfiguration;

class OAIAdditionalLocation : public OAIObject {
public:
    OAIAdditionalLocation();
    OAIAdditionalLocation(QString json);
    ~OAIAdditionalLocation() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getGatewayRegionalUrl() const;
    void setGatewayRegionalUrl(const QString &gateway_regional_url);
    bool is_gateway_regional_url_Set() const;
    bool is_gateway_regional_url_Valid() const;

    QString getLocation() const;
    void setLocation(const QString &location);
    bool is_location_Set() const;
    bool is_location_Valid() const;

    QList<QString> getPrivateIpAddresses() const;
    void setPrivateIpAddresses(const QList<QString> &private_ip_addresses);
    bool is_private_ip_addresses_Set() const;
    bool is_private_ip_addresses_Valid() const;

    QList<QString> getPublicIpAddresses() const;
    void setPublicIpAddresses(const QList<QString> &public_ip_addresses);
    bool is_public_ip_addresses_Set() const;
    bool is_public_ip_addresses_Valid() const;

    OAIApiManagementServiceSkuProperties getSku() const;
    void setSku(const OAIApiManagementServiceSkuProperties &sku);
    bool is_sku_Set() const;
    bool is_sku_Valid() const;

    OAIVirtualNetworkConfiguration getVirtualNetworkConfiguration() const;
    void setVirtualNetworkConfiguration(const OAIVirtualNetworkConfiguration &virtual_network_configuration);
    bool is_virtual_network_configuration_Set() const;
    bool is_virtual_network_configuration_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_gateway_regional_url;
    bool m_gateway_regional_url_isSet;
    bool m_gateway_regional_url_isValid;

    QString m_location;
    bool m_location_isSet;
    bool m_location_isValid;

    QList<QString> m_private_ip_addresses;
    bool m_private_ip_addresses_isSet;
    bool m_private_ip_addresses_isValid;

    QList<QString> m_public_ip_addresses;
    bool m_public_ip_addresses_isSet;
    bool m_public_ip_addresses_isValid;

    OAIApiManagementServiceSkuProperties m_sku;
    bool m_sku_isSet;
    bool m_sku_isValid;

    OAIVirtualNetworkConfiguration m_virtual_network_configuration;
    bool m_virtual_network_configuration_isSet;
    bool m_virtual_network_configuration_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAdditionalLocation)

#endif // OAIAdditionalLocation_H
