/**
 * ApiManagementClient
 * Use these REST APIs to manage Azure API Management deployment.
 *
 * The version of the OpenAPI document: 2016-10-10
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAdditionalRegion.h
 *
 * Description of an additional API Management resource location.
 */

#ifndef OAIAdditionalRegion_H
#define OAIAdditionalRegion_H

#include <QJsonObject>

#include "OAIVirtualNetworkConfiguration.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIVirtualNetworkConfiguration;

class OAIAdditionalRegion : public OAIObject {
public:
    OAIAdditionalRegion();
    OAIAdditionalRegion(QString json);
    ~OAIAdditionalRegion() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getLocation() const;
    void setLocation(const QString &location);
    bool is_location_Set() const;
    bool is_location_Valid() const;

    QString getSkuType() const;
    void setSkuType(const QString &sku_type);
    bool is_sku_type_Set() const;
    bool is_sku_type_Valid() const;

    qint32 getSkuUnitCount() const;
    void setSkuUnitCount(const qint32 &sku_unit_count);
    bool is_sku_unit_count_Set() const;
    bool is_sku_unit_count_Valid() const;

    QList<QString> getStaticIps() const;
    void setStaticIps(const QList<QString> &static_ips);
    bool is_static_ips_Set() const;
    bool is_static_ips_Valid() const;

    OAIVirtualNetworkConfiguration getVpnconfiguration() const;
    void setVpnconfiguration(const OAIVirtualNetworkConfiguration &vpnconfiguration);
    bool is_vpnconfiguration_Set() const;
    bool is_vpnconfiguration_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_location;
    bool m_location_isSet;
    bool m_location_isValid;

    QString m_sku_type;
    bool m_sku_type_isSet;
    bool m_sku_type_isValid;

    qint32 m_sku_unit_count;
    bool m_sku_unit_count_isSet;
    bool m_sku_unit_count_isValid;

    QList<QString> m_static_ips;
    bool m_static_ips_isSet;
    bool m_static_ips_isValid;

    OAIVirtualNetworkConfiguration m_vpnconfiguration;
    bool m_vpnconfiguration_isSet;
    bool m_vpnconfiguration_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAdditionalRegion)

#endif // OAIAdditionalRegion_H
