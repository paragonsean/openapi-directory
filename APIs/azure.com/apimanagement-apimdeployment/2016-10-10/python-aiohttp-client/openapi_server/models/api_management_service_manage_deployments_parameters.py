# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.additional_region import AdditionalRegion
from openapi_server.models.virtual_network_configuration import VirtualNetworkConfiguration
from openapi_server import util


class ApiManagementServiceManageDeploymentsParameters(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, additional_locations: List[AdditionalRegion]=None, location: str=None, sku_type: str=None, sku_unit_count: int=1, vpn_configuration: VirtualNetworkConfiguration=None, vpn_type: str='None'):
        """ApiManagementServiceManageDeploymentsParameters - a model defined in OpenAPI

        :param additional_locations: The additional_locations of this ApiManagementServiceManageDeploymentsParameters.
        :param location: The location of this ApiManagementServiceManageDeploymentsParameters.
        :param sku_type: The sku_type of this ApiManagementServiceManageDeploymentsParameters.
        :param sku_unit_count: The sku_unit_count of this ApiManagementServiceManageDeploymentsParameters.
        :param vpn_configuration: The vpn_configuration of this ApiManagementServiceManageDeploymentsParameters.
        :param vpn_type: The vpn_type of this ApiManagementServiceManageDeploymentsParameters.
        """
        self.openapi_types = {
            'additional_locations': List[AdditionalRegion],
            'location': str,
            'sku_type': str,
            'sku_unit_count': int,
            'vpn_configuration': VirtualNetworkConfiguration,
            'vpn_type': str
        }

        self.attribute_map = {
            'additional_locations': 'additionalLocations',
            'location': 'location',
            'sku_type': 'skuType',
            'sku_unit_count': 'skuUnitCount',
            'vpn_configuration': 'vpnConfiguration',
            'vpn_type': 'vpnType'
        }

        self._additional_locations = additional_locations
        self._location = location
        self._sku_type = sku_type
        self._sku_unit_count = sku_unit_count
        self._vpn_configuration = vpn_configuration
        self._vpn_type = vpn_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApiManagementServiceManageDeploymentsParameters':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ApiManagementServiceManageDeploymentsParameters of this ApiManagementServiceManageDeploymentsParameters.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def additional_locations(self):
        """Gets the additional_locations of this ApiManagementServiceManageDeploymentsParameters.

        Additional data center locations for the API Management service.

        :return: The additional_locations of this ApiManagementServiceManageDeploymentsParameters.
        :rtype: List[AdditionalRegion]
        """
        return self._additional_locations

    @additional_locations.setter
    def additional_locations(self, additional_locations):
        """Sets the additional_locations of this ApiManagementServiceManageDeploymentsParameters.

        Additional data center locations for the API Management service.

        :param additional_locations: The additional_locations of this ApiManagementServiceManageDeploymentsParameters.
        :type additional_locations: List[AdditionalRegion]
        """

        self._additional_locations = additional_locations

    @property
    def location(self):
        """Gets the location of this ApiManagementServiceManageDeploymentsParameters.

        Location of the API Management service Azure data center.

        :return: The location of this ApiManagementServiceManageDeploymentsParameters.
        :rtype: str
        """
        return self._location

    @location.setter
    def location(self, location):
        """Sets the location of this ApiManagementServiceManageDeploymentsParameters.

        Location of the API Management service Azure data center.

        :param location: The location of this ApiManagementServiceManageDeploymentsParameters.
        :type location: str
        """
        if location is None:
            raise ValueError("Invalid value for `location`, must not be `None`")

        self._location = location

    @property
    def sku_type(self):
        """Gets the sku_type of this ApiManagementServiceManageDeploymentsParameters.

        SKU type of the API Management service.

        :return: The sku_type of this ApiManagementServiceManageDeploymentsParameters.
        :rtype: str
        """
        return self._sku_type

    @sku_type.setter
    def sku_type(self, sku_type):
        """Sets the sku_type of this ApiManagementServiceManageDeploymentsParameters.

        SKU type of the API Management service.

        :param sku_type: The sku_type of this ApiManagementServiceManageDeploymentsParameters.
        :type sku_type: str
        """
        allowed_values = ["Developer", "Standard", "Premium"]  # noqa: E501
        if sku_type not in allowed_values:
            raise ValueError(
                "Invalid value for `sku_type` ({0}), must be one of {1}"
                .format(sku_type, allowed_values)
            )

        self._sku_type = sku_type

    @property
    def sku_unit_count(self):
        """Gets the sku_unit_count of this ApiManagementServiceManageDeploymentsParameters.

        SKU Unit count of the API Management service. Default value is 1.

        :return: The sku_unit_count of this ApiManagementServiceManageDeploymentsParameters.
        :rtype: int
        """
        return self._sku_unit_count

    @sku_unit_count.setter
    def sku_unit_count(self, sku_unit_count):
        """Sets the sku_unit_count of this ApiManagementServiceManageDeploymentsParameters.

        SKU Unit count of the API Management service. Default value is 1.

        :param sku_unit_count: The sku_unit_count of this ApiManagementServiceManageDeploymentsParameters.
        :type sku_unit_count: int
        """

        self._sku_unit_count = sku_unit_count

    @property
    def vpn_configuration(self):
        """Gets the vpn_configuration of this ApiManagementServiceManageDeploymentsParameters.


        :return: The vpn_configuration of this ApiManagementServiceManageDeploymentsParameters.
        :rtype: VirtualNetworkConfiguration
        """
        return self._vpn_configuration

    @vpn_configuration.setter
    def vpn_configuration(self, vpn_configuration):
        """Sets the vpn_configuration of this ApiManagementServiceManageDeploymentsParameters.


        :param vpn_configuration: The vpn_configuration of this ApiManagementServiceManageDeploymentsParameters.
        :type vpn_configuration: VirtualNetworkConfiguration
        """

        self._vpn_configuration = vpn_configuration

    @property
    def vpn_type(self):
        """Gets the vpn_type of this ApiManagementServiceManageDeploymentsParameters.

        The type of VPN in which API Management service needs to be configured in. None (Default Value) means the API Management service is not part of any Virtual Network, External means the API Management deployment is set up inside a Virtual Network having an Internet Facing Endpoint, and Internal means that the API Management service deployment is set up inside a Virtual Network having an Intranet Facing Endpoint only. When vpnConfiguration is specified, vpnType must be specified.

        :return: The vpn_type of this ApiManagementServiceManageDeploymentsParameters.
        :rtype: str
        """
        return self._vpn_type

    @vpn_type.setter
    def vpn_type(self, vpn_type):
        """Sets the vpn_type of this ApiManagementServiceManageDeploymentsParameters.

        The type of VPN in which API Management service needs to be configured in. None (Default Value) means the API Management service is not part of any Virtual Network, External means the API Management deployment is set up inside a Virtual Network having an Internet Facing Endpoint, and Internal means that the API Management service deployment is set up inside a Virtual Network having an Intranet Facing Endpoint only. When vpnConfiguration is specified, vpnType must be specified.

        :param vpn_type: The vpn_type of this ApiManagementServiceManageDeploymentsParameters.
        :type vpn_type: str
        """
        allowed_values = ["None", "External", "Internal"]  # noqa: E501
        if vpn_type not in allowed_values:
            raise ValueError(
                "Invalid value for `vpn_type` ({0}), must be one of {1}"
                .format(vpn_type, allowed_values)
            )

        self._vpn_type = vpn_type
