/**
 * ApiManagementClient
 * Use these REST APIs to manage Azure API Management deployment.
 *
 * The version of the OpenAPI document: 2016-10-10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ApiManagementServiceBackupRestoreParameters from '../model/ApiManagementServiceBackupRestoreParameters';
import ApiManagementServiceCheckNameAvailabilityParameters from '../model/ApiManagementServiceCheckNameAvailabilityParameters';
import ApiManagementServiceGetSsoTokenResult from '../model/ApiManagementServiceGetSsoTokenResult';
import ApiManagementServiceListResult from '../model/ApiManagementServiceListResult';
import ApiManagementServiceManageDeploymentsParameters from '../model/ApiManagementServiceManageDeploymentsParameters';
import ApiManagementServiceNameAvailabilityResult from '../model/ApiManagementServiceNameAvailabilityResult';
import ApiManagementServiceResource from '../model/ApiManagementServiceResource';
import ApiManagementServiceUpdateHostnameParameters from '../model/ApiManagementServiceUpdateHostnameParameters';
import ApiManagementServiceUpdateParameters from '../model/ApiManagementServiceUpdateParameters';
import ApiManagementServiceUploadCertificateParameters from '../model/ApiManagementServiceUploadCertificateParameters';
import CertificateInformation from '../model/CertificateInformation';
import ErrorResponse from '../model/ErrorResponse';

/**
* ApiManagementService service.
* @module api/ApiManagementServiceApi
* @version 2016-10-10
*/
export default class ApiManagementServiceApi {

    /**
    * Constructs a new ApiManagementServiceApi. 
    * @alias module:api/ApiManagementServiceApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the apiManagementServicesApplyNetworkConfigurationUpdates operation.
     * @callback module:api/ApiManagementServiceApi~apiManagementServicesApplyNetworkConfigurationUpdatesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApiManagementServiceResource} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates the Microsoft.ApiManagement resource running in the Virtual network to pick the updated network settings.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} serviceName The name of the API Management service.
     * @param {String} apiVersion Version of the API to be used with the client request.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/ApiManagementServiceApi~apiManagementServicesApplyNetworkConfigurationUpdatesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApiManagementServiceResource}
     */
    apiManagementServicesApplyNetworkConfigurationUpdates(resourceGroupName, serviceName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling apiManagementServicesApplyNetworkConfigurationUpdates");
      }
      // verify the required parameter 'serviceName' is set
      if (serviceName === undefined || serviceName === null) {
        throw new Error("Missing the required parameter 'serviceName' when calling apiManagementServicesApplyNetworkConfigurationUpdates");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling apiManagementServicesApplyNetworkConfigurationUpdates");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling apiManagementServicesApplyNetworkConfigurationUpdates");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'serviceName': serviceName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ApiManagementServiceResource;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/applynetworkconfigurationupdates', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiManagementServicesBackup operation.
     * @callback module:api/ApiManagementServiceApi~apiManagementServicesBackupCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApiManagementServiceResource} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a backup of the API Management service to the given Azure Storage Account. This is long running operation and could take several minutes to complete.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} serviceName The name of the API Management service.
     * @param {String} apiVersion Version of the API to be used with the client request.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:model/ApiManagementServiceBackupRestoreParameters} parameters Parameters supplied to the ApiManagementServices_Backup operation.
     * @param {module:api/ApiManagementServiceApi~apiManagementServicesBackupCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApiManagementServiceResource}
     */
    apiManagementServicesBackup(resourceGroupName, serviceName, apiVersion, subscriptionId, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling apiManagementServicesBackup");
      }
      // verify the required parameter 'serviceName' is set
      if (serviceName === undefined || serviceName === null) {
        throw new Error("Missing the required parameter 'serviceName' when calling apiManagementServicesBackup");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling apiManagementServicesBackup");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling apiManagementServicesBackup");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling apiManagementServicesBackup");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'serviceName': serviceName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ApiManagementServiceResource;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backup', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiManagementServicesCheckNameAvailability operation.
     * @callback module:api/ApiManagementServiceApi~apiManagementServicesCheckNameAvailabilityCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApiManagementServiceNameAvailabilityResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Checks availability and correctness of a name for an API Management service.
     * @param {String} apiVersion Version of the API to be used with the client request.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:model/ApiManagementServiceCheckNameAvailabilityParameters} parameters Parameters supplied to the CheckNameAvailability operation.
     * @param {module:api/ApiManagementServiceApi~apiManagementServicesCheckNameAvailabilityCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApiManagementServiceNameAvailabilityResult}
     */
    apiManagementServicesCheckNameAvailability(apiVersion, subscriptionId, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling apiManagementServicesCheckNameAvailability");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling apiManagementServicesCheckNameAvailability");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling apiManagementServicesCheckNameAvailability");
      }

      let pathParams = {
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ApiManagementServiceNameAvailabilityResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.ApiManagement/checkNameAvailability', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiManagementServicesCreateOrUpdate operation.
     * @callback module:api/ApiManagementServiceApi~apiManagementServicesCreateOrUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApiManagementServiceResource} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates or updates an API Management service. This is long running operation and could take several minutes to complete.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} serviceName The name of the API Management service.
     * @param {String} apiVersion Version of the API to be used with the client request.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:model/ApiManagementServiceResource} parameters Parameters supplied to the CreateOrUpdate API Management service operation.
     * @param {module:api/ApiManagementServiceApi~apiManagementServicesCreateOrUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApiManagementServiceResource}
     */
    apiManagementServicesCreateOrUpdate(resourceGroupName, serviceName, apiVersion, subscriptionId, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling apiManagementServicesCreateOrUpdate");
      }
      // verify the required parameter 'serviceName' is set
      if (serviceName === undefined || serviceName === null) {
        throw new Error("Missing the required parameter 'serviceName' when calling apiManagementServicesCreateOrUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling apiManagementServicesCreateOrUpdate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling apiManagementServicesCreateOrUpdate");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling apiManagementServicesCreateOrUpdate");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'serviceName': serviceName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ApiManagementServiceResource;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiManagementServicesDelete operation.
     * @callback module:api/ApiManagementServiceApi~apiManagementServicesDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes an existing API Management service.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} serviceName The name of the API Management service.
     * @param {String} apiVersion Version of the API to be used with the client request.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/ApiManagementServiceApi~apiManagementServicesDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiManagementServicesDelete(resourceGroupName, serviceName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling apiManagementServicesDelete");
      }
      // verify the required parameter 'serviceName' is set
      if (serviceName === undefined || serviceName === null) {
        throw new Error("Missing the required parameter 'serviceName' when calling apiManagementServicesDelete");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling apiManagementServicesDelete");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling apiManagementServicesDelete");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'serviceName': serviceName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiManagementServicesGet operation.
     * @callback module:api/ApiManagementServiceApi~apiManagementServicesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApiManagementServiceResource} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets an API Management service resource description.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} serviceName The name of the API Management service.
     * @param {String} apiVersion Version of the API to be used with the client request.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/ApiManagementServiceApi~apiManagementServicesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApiManagementServiceResource}
     */
    apiManagementServicesGet(resourceGroupName, serviceName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling apiManagementServicesGet");
      }
      // verify the required parameter 'serviceName' is set
      if (serviceName === undefined || serviceName === null) {
        throw new Error("Missing the required parameter 'serviceName' when calling apiManagementServicesGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling apiManagementServicesGet");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling apiManagementServicesGet");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'serviceName': serviceName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ApiManagementServiceResource;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiManagementServicesGetSsoToken operation.
     * @callback module:api/ApiManagementServiceApi~apiManagementServicesGetSsoTokenCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApiManagementServiceGetSsoTokenResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the Single-Sign-On token for the API Management Service which is valid for 5 Minutes.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} serviceName The name of the API Management service.
     * @param {String} apiVersion Version of the API to be used with the client request.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/ApiManagementServiceApi~apiManagementServicesGetSsoTokenCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApiManagementServiceGetSsoTokenResult}
     */
    apiManagementServicesGetSsoToken(resourceGroupName, serviceName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling apiManagementServicesGetSsoToken");
      }
      // verify the required parameter 'serviceName' is set
      if (serviceName === undefined || serviceName === null) {
        throw new Error("Missing the required parameter 'serviceName' when calling apiManagementServicesGetSsoToken");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling apiManagementServicesGetSsoToken");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling apiManagementServicesGetSsoToken");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'serviceName': serviceName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ApiManagementServiceGetSsoTokenResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/getssotoken', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiManagementServicesList operation.
     * @callback module:api/ApiManagementServiceApi~apiManagementServicesListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApiManagementServiceListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists all API Management services within an Azure subscription.
     * @param {String} apiVersion Version of the API to be used with the client request.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/ApiManagementServiceApi~apiManagementServicesListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApiManagementServiceListResult}
     */
    apiManagementServicesList(apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling apiManagementServicesList");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling apiManagementServicesList");
      }

      let pathParams = {
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ApiManagementServiceListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.ApiManagement/service/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiManagementServicesListByResourceGroup operation.
     * @callback module:api/ApiManagementServiceApi~apiManagementServicesListByResourceGroupCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApiManagementServiceListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List all API Management services within a resource group.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} apiVersion Version of the API to be used with the client request.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/ApiManagementServiceApi~apiManagementServicesListByResourceGroupCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApiManagementServiceListResult}
     */
    apiManagementServicesListByResourceGroup(resourceGroupName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling apiManagementServicesListByResourceGroup");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling apiManagementServicesListByResourceGroup");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling apiManagementServicesListByResourceGroup");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ApiManagementServiceListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiManagementServicesManageDeployments operation.
     * @callback module:api/ApiManagementServiceApi~apiManagementServicesManageDeploymentsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApiManagementServiceResource} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Manages deployments of an API Management service. This operation can be used to do the following: Change SKU, Change SKU Units, Change Service Tier (Developer/Standard/Premium) and Manage VPN Configuration. This is a long running operation and can take several minutes to complete.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} serviceName The name of the API Management service.
     * @param {String} apiVersion Version of the API to be used with the client request.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:model/ApiManagementServiceManageDeploymentsParameters} parameters Parameters supplied to the ManageDeployments operation.
     * @param {module:api/ApiManagementServiceApi~apiManagementServicesManageDeploymentsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApiManagementServiceResource}
     */
    apiManagementServicesManageDeployments(resourceGroupName, serviceName, apiVersion, subscriptionId, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling apiManagementServicesManageDeployments");
      }
      // verify the required parameter 'serviceName' is set
      if (serviceName === undefined || serviceName === null) {
        throw new Error("Missing the required parameter 'serviceName' when calling apiManagementServicesManageDeployments");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling apiManagementServicesManageDeployments");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling apiManagementServicesManageDeployments");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling apiManagementServicesManageDeployments");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'serviceName': serviceName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ApiManagementServiceResource;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/managedeployments', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiManagementServicesRestore operation.
     * @callback module:api/ApiManagementServiceApi~apiManagementServicesRestoreCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApiManagementServiceResource} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Restores a backup of an API Management service created using the ApiManagementServices_Backup operation on the current service. This is a long running operation and could take several minutes to complete.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} serviceName The name of the API Management service.
     * @param {String} apiVersion Version of the API to be used with the client request.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:model/ApiManagementServiceBackupRestoreParameters} parameters Parameters supplied to the Restore API Management service from backup operation.
     * @param {module:api/ApiManagementServiceApi~apiManagementServicesRestoreCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApiManagementServiceResource}
     */
    apiManagementServicesRestore(resourceGroupName, serviceName, apiVersion, subscriptionId, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling apiManagementServicesRestore");
      }
      // verify the required parameter 'serviceName' is set
      if (serviceName === undefined || serviceName === null) {
        throw new Error("Missing the required parameter 'serviceName' when calling apiManagementServicesRestore");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling apiManagementServicesRestore");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling apiManagementServicesRestore");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling apiManagementServicesRestore");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'serviceName': serviceName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ApiManagementServiceResource;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/restore', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiManagementServicesUpdate operation.
     * @callback module:api/ApiManagementServiceApi~apiManagementServicesUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApiManagementServiceResource} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates an existing API Management service.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} serviceName The name of the API Management service.
     * @param {String} apiVersion Version of the API to be used with the client request.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:model/ApiManagementServiceUpdateParameters} parameters Parameters supplied to the CreateOrUpdate API Management service operation.
     * @param {module:api/ApiManagementServiceApi~apiManagementServicesUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApiManagementServiceResource}
     */
    apiManagementServicesUpdate(resourceGroupName, serviceName, apiVersion, subscriptionId, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling apiManagementServicesUpdate");
      }
      // verify the required parameter 'serviceName' is set
      if (serviceName === undefined || serviceName === null) {
        throw new Error("Missing the required parameter 'serviceName' when calling apiManagementServicesUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling apiManagementServicesUpdate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling apiManagementServicesUpdate");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling apiManagementServicesUpdate");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'serviceName': serviceName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ApiManagementServiceResource;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiManagementServicesUpdateHostname operation.
     * @callback module:api/ApiManagementServiceApi~apiManagementServicesUpdateHostnameCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApiManagementServiceResource} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates, updates, or deletes the custom hostnames for an API Management service. The custom hostname can be applied to the Proxy and Portal endpoint. This is a long running operation and could take several minutes to complete.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} serviceName The name of the API Management service.
     * @param {String} apiVersion Version of the API to be used with the client request.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:model/ApiManagementServiceUpdateHostnameParameters} parameters Parameters supplied to the UpdateHostname operation.
     * @param {module:api/ApiManagementServiceApi~apiManagementServicesUpdateHostnameCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApiManagementServiceResource}
     */
    apiManagementServicesUpdateHostname(resourceGroupName, serviceName, apiVersion, subscriptionId, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling apiManagementServicesUpdateHostname");
      }
      // verify the required parameter 'serviceName' is set
      if (serviceName === undefined || serviceName === null) {
        throw new Error("Missing the required parameter 'serviceName' when calling apiManagementServicesUpdateHostname");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling apiManagementServicesUpdateHostname");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling apiManagementServicesUpdateHostname");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling apiManagementServicesUpdateHostname");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'serviceName': serviceName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ApiManagementServiceResource;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/updatehostname', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiManagementServicesUploadCertificate operation.
     * @callback module:api/ApiManagementServiceApi~apiManagementServicesUploadCertificateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CertificateInformation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Upload Custom Domain SSL certificate for an API Management service.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} serviceName The name of the API Management service.
     * @param {String} apiVersion Version of the API to be used with the client request.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:model/ApiManagementServiceUploadCertificateParameters} parameters Parameters supplied to the Upload SSL certificate for an API Management service operation.
     * @param {module:api/ApiManagementServiceApi~apiManagementServicesUploadCertificateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CertificateInformation}
     */
    apiManagementServicesUploadCertificate(resourceGroupName, serviceName, apiVersion, subscriptionId, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling apiManagementServicesUploadCertificate");
      }
      // verify the required parameter 'serviceName' is set
      if (serviceName === undefined || serviceName === null) {
        throw new Error("Missing the required parameter 'serviceName' when calling apiManagementServicesUploadCertificate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling apiManagementServicesUploadCertificate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling apiManagementServicesUploadCertificate");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling apiManagementServicesUploadCertificate");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'serviceName': serviceName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CertificateInformation;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/uploadcertificate', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
