/**
 * ApiManagementClient
 * Use these REST APIs to manage Azure API Management deployment.
 *
 * The version of the OpenAPI document: 2018-01-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICertificateConfiguration.h
 *
 * Certificate configuration which consist of non-trusted intermediates and root certificates.
 */

#ifndef OAICertificateConfiguration_H
#define OAICertificateConfiguration_H

#include <QJsonObject>

#include "OAICertificateInformation.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICertificateInformation;

class OAICertificateConfiguration : public OAIObject {
public:
    OAICertificateConfiguration();
    OAICertificateConfiguration(QString json);
    ~OAICertificateConfiguration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAICertificateInformation getCertificate() const;
    void setCertificate(const OAICertificateInformation &certificate);
    bool is_certificate_Set() const;
    bool is_certificate_Valid() const;

    QString getCertificatePassword() const;
    void setCertificatePassword(const QString &certificate_password);
    bool is_certificate_password_Set() const;
    bool is_certificate_password_Valid() const;

    QString getEncodedCertificate() const;
    void setEncodedCertificate(const QString &encoded_certificate);
    bool is_encoded_certificate_Set() const;
    bool is_encoded_certificate_Valid() const;

    QString getStoreName() const;
    void setStoreName(const QString &store_name);
    bool is_store_name_Set() const;
    bool is_store_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAICertificateInformation m_certificate;
    bool m_certificate_isSet;
    bool m_certificate_isValid;

    QString m_certificate_password;
    bool m_certificate_password_isSet;
    bool m_certificate_password_isValid;

    QString m_encoded_certificate;
    bool m_encoded_certificate_isSet;
    bool m_encoded_certificate_isValid;

    QString m_store_name;
    bool m_store_name_isSet;
    bool m_store_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICertificateConfiguration)

#endif // OAICertificateConfiguration_H
