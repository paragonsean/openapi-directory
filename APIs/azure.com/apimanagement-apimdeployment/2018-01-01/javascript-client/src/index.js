/**
 * ApiManagementClient
 * Use these REST APIs to manage Azure API Management deployment.
 *
 * The version of the OpenAPI document: 2018-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AdditionalLocation from './model/AdditionalLocation';
import ApiManagementServiceApplyNetworkConfigurationParameters from './model/ApiManagementServiceApplyNetworkConfigurationParameters';
import ApiManagementServiceBackupRestoreParameters from './model/ApiManagementServiceBackupRestoreParameters';
import ApiManagementServiceBaseProperties from './model/ApiManagementServiceBaseProperties';
import ApiManagementServiceCheckNameAvailabilityParameters from './model/ApiManagementServiceCheckNameAvailabilityParameters';
import ApiManagementServiceGetSsoTokenResult from './model/ApiManagementServiceGetSsoTokenResult';
import ApiManagementServiceIdentity from './model/ApiManagementServiceIdentity';
import ApiManagementServiceListResult from './model/ApiManagementServiceListResult';
import ApiManagementServiceNameAvailabilityResult from './model/ApiManagementServiceNameAvailabilityResult';
import ApiManagementServiceProperties from './model/ApiManagementServiceProperties';
import ApiManagementServiceResource from './model/ApiManagementServiceResource';
import ApiManagementServiceSkuProperties from './model/ApiManagementServiceSkuProperties';
import ApiManagementServiceUpdateHostnameParameters from './model/ApiManagementServiceUpdateHostnameParameters';
import ApiManagementServiceUpdateParameters from './model/ApiManagementServiceUpdateParameters';
import ApiManagementServiceUpdateProperties from './model/ApiManagementServiceUpdateProperties';
import ApiManagementServiceUploadCertificateParameters from './model/ApiManagementServiceUploadCertificateParameters';
import ApimResource from './model/ApimResource';
import CertificateConfiguration from './model/CertificateConfiguration';
import CertificateInformation from './model/CertificateInformation';
import HostnameConfiguration from './model/HostnameConfiguration';
import HostnameConfigurationOld from './model/HostnameConfigurationOld';
import Operation from './model/Operation';
import OperationDisplay from './model/OperationDisplay';
import OperationListResult from './model/OperationListResult';
import ResourceSku from './model/ResourceSku';
import ResourceSkuCapacity from './model/ResourceSkuCapacity';
import ResourceSkuResult from './model/ResourceSkuResult';
import ResourceSkuResults from './model/ResourceSkuResults';
import VirtualNetworkConfiguration from './model/VirtualNetworkConfiguration';
import ApiManagementOperationsApi from './api/ApiManagementOperationsApi';
import ApiManagementServiceApi from './api/ApiManagementServiceApi';
import ApiManagementServiceSkusApi from './api/ApiManagementServiceSkusApi';


/**
* Use these REST APIs to manage Azure API Management deployment..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var ApiManagementClient = require('index'); // See note below*.
* var xxxSvc = new ApiManagementClient.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new ApiManagementClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new ApiManagementClient.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new ApiManagementClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2018-01-01
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AdditionalLocation model constructor.
     * @property {module:model/AdditionalLocation}
     */
    AdditionalLocation,

    /**
     * The ApiManagementServiceApplyNetworkConfigurationParameters model constructor.
     * @property {module:model/ApiManagementServiceApplyNetworkConfigurationParameters}
     */
    ApiManagementServiceApplyNetworkConfigurationParameters,

    /**
     * The ApiManagementServiceBackupRestoreParameters model constructor.
     * @property {module:model/ApiManagementServiceBackupRestoreParameters}
     */
    ApiManagementServiceBackupRestoreParameters,

    /**
     * The ApiManagementServiceBaseProperties model constructor.
     * @property {module:model/ApiManagementServiceBaseProperties}
     */
    ApiManagementServiceBaseProperties,

    /**
     * The ApiManagementServiceCheckNameAvailabilityParameters model constructor.
     * @property {module:model/ApiManagementServiceCheckNameAvailabilityParameters}
     */
    ApiManagementServiceCheckNameAvailabilityParameters,

    /**
     * The ApiManagementServiceGetSsoTokenResult model constructor.
     * @property {module:model/ApiManagementServiceGetSsoTokenResult}
     */
    ApiManagementServiceGetSsoTokenResult,

    /**
     * The ApiManagementServiceIdentity model constructor.
     * @property {module:model/ApiManagementServiceIdentity}
     */
    ApiManagementServiceIdentity,

    /**
     * The ApiManagementServiceListResult model constructor.
     * @property {module:model/ApiManagementServiceListResult}
     */
    ApiManagementServiceListResult,

    /**
     * The ApiManagementServiceNameAvailabilityResult model constructor.
     * @property {module:model/ApiManagementServiceNameAvailabilityResult}
     */
    ApiManagementServiceNameAvailabilityResult,

    /**
     * The ApiManagementServiceProperties model constructor.
     * @property {module:model/ApiManagementServiceProperties}
     */
    ApiManagementServiceProperties,

    /**
     * The ApiManagementServiceResource model constructor.
     * @property {module:model/ApiManagementServiceResource}
     */
    ApiManagementServiceResource,

    /**
     * The ApiManagementServiceSkuProperties model constructor.
     * @property {module:model/ApiManagementServiceSkuProperties}
     */
    ApiManagementServiceSkuProperties,

    /**
     * The ApiManagementServiceUpdateHostnameParameters model constructor.
     * @property {module:model/ApiManagementServiceUpdateHostnameParameters}
     */
    ApiManagementServiceUpdateHostnameParameters,

    /**
     * The ApiManagementServiceUpdateParameters model constructor.
     * @property {module:model/ApiManagementServiceUpdateParameters}
     */
    ApiManagementServiceUpdateParameters,

    /**
     * The ApiManagementServiceUpdateProperties model constructor.
     * @property {module:model/ApiManagementServiceUpdateProperties}
     */
    ApiManagementServiceUpdateProperties,

    /**
     * The ApiManagementServiceUploadCertificateParameters model constructor.
     * @property {module:model/ApiManagementServiceUploadCertificateParameters}
     */
    ApiManagementServiceUploadCertificateParameters,

    /**
     * The ApimResource model constructor.
     * @property {module:model/ApimResource}
     */
    ApimResource,

    /**
     * The CertificateConfiguration model constructor.
     * @property {module:model/CertificateConfiguration}
     */
    CertificateConfiguration,

    /**
     * The CertificateInformation model constructor.
     * @property {module:model/CertificateInformation}
     */
    CertificateInformation,

    /**
     * The HostnameConfiguration model constructor.
     * @property {module:model/HostnameConfiguration}
     */
    HostnameConfiguration,

    /**
     * The HostnameConfigurationOld model constructor.
     * @property {module:model/HostnameConfigurationOld}
     */
    HostnameConfigurationOld,

    /**
     * The Operation model constructor.
     * @property {module:model/Operation}
     */
    Operation,

    /**
     * The OperationDisplay model constructor.
     * @property {module:model/OperationDisplay}
     */
    OperationDisplay,

    /**
     * The OperationListResult model constructor.
     * @property {module:model/OperationListResult}
     */
    OperationListResult,

    /**
     * The ResourceSku model constructor.
     * @property {module:model/ResourceSku}
     */
    ResourceSku,

    /**
     * The ResourceSkuCapacity model constructor.
     * @property {module:model/ResourceSkuCapacity}
     */
    ResourceSkuCapacity,

    /**
     * The ResourceSkuResult model constructor.
     * @property {module:model/ResourceSkuResult}
     */
    ResourceSkuResult,

    /**
     * The ResourceSkuResults model constructor.
     * @property {module:model/ResourceSkuResults}
     */
    ResourceSkuResults,

    /**
     * The VirtualNetworkConfiguration model constructor.
     * @property {module:model/VirtualNetworkConfiguration}
     */
    VirtualNetworkConfiguration,

    /**
    * The ApiManagementOperationsApi service constructor.
    * @property {module:api/ApiManagementOperationsApi}
    */
    ApiManagementOperationsApi,

    /**
    * The ApiManagementServiceApi service constructor.
    * @property {module:api/ApiManagementServiceApi}
    */
    ApiManagementServiceApi,

    /**
    * The ApiManagementServiceSkusApi service constructor.
    * @property {module:api/ApiManagementServiceSkusApi}
    */
    ApiManagementServiceSkusApi
};
