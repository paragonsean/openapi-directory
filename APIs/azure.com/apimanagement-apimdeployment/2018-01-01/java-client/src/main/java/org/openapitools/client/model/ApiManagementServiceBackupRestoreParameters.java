/*
 * ApiManagementClient
 * Use these REST APIs to manage Azure API Management deployment.
 *
 * The version of the OpenAPI document: 2018-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Parameters supplied to the Backup/Restore of an API Management service operation.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:45:37.452190-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ApiManagementServiceBackupRestoreParameters {
  public static final String SERIALIZED_NAME_ACCESS_KEY = "accessKey";
  @SerializedName(SERIALIZED_NAME_ACCESS_KEY)
  private String accessKey;

  public static final String SERIALIZED_NAME_BACKUP_NAME = "backupName";
  @SerializedName(SERIALIZED_NAME_BACKUP_NAME)
  private String backupName;

  public static final String SERIALIZED_NAME_CONTAINER_NAME = "containerName";
  @SerializedName(SERIALIZED_NAME_CONTAINER_NAME)
  private String containerName;

  public static final String SERIALIZED_NAME_STORAGE_ACCOUNT = "storageAccount";
  @SerializedName(SERIALIZED_NAME_STORAGE_ACCOUNT)
  private String storageAccount;

  public ApiManagementServiceBackupRestoreParameters() {
  }

  public ApiManagementServiceBackupRestoreParameters accessKey(String accessKey) {
    this.accessKey = accessKey;
    return this;
  }

  /**
   * Azure Cloud Storage account (used to place/retrieve the backup) access key.
   * @return accessKey
   */
  @javax.annotation.Nonnull
  public String getAccessKey() {
    return accessKey;
  }

  public void setAccessKey(String accessKey) {
    this.accessKey = accessKey;
  }


  public ApiManagementServiceBackupRestoreParameters backupName(String backupName) {
    this.backupName = backupName;
    return this;
  }

  /**
   * The name of the backup file to create.
   * @return backupName
   */
  @javax.annotation.Nonnull
  public String getBackupName() {
    return backupName;
  }

  public void setBackupName(String backupName) {
    this.backupName = backupName;
  }


  public ApiManagementServiceBackupRestoreParameters containerName(String containerName) {
    this.containerName = containerName;
    return this;
  }

  /**
   * Azure Cloud Storage blob container name used to place/retrieve the backup.
   * @return containerName
   */
  @javax.annotation.Nonnull
  public String getContainerName() {
    return containerName;
  }

  public void setContainerName(String containerName) {
    this.containerName = containerName;
  }


  public ApiManagementServiceBackupRestoreParameters storageAccount(String storageAccount) {
    this.storageAccount = storageAccount;
    return this;
  }

  /**
   * Azure Cloud Storage account (used to place/retrieve the backup) name.
   * @return storageAccount
   */
  @javax.annotation.Nonnull
  public String getStorageAccount() {
    return storageAccount;
  }

  public void setStorageAccount(String storageAccount) {
    this.storageAccount = storageAccount;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApiManagementServiceBackupRestoreParameters apiManagementServiceBackupRestoreParameters = (ApiManagementServiceBackupRestoreParameters) o;
    return Objects.equals(this.accessKey, apiManagementServiceBackupRestoreParameters.accessKey) &&
        Objects.equals(this.backupName, apiManagementServiceBackupRestoreParameters.backupName) &&
        Objects.equals(this.containerName, apiManagementServiceBackupRestoreParameters.containerName) &&
        Objects.equals(this.storageAccount, apiManagementServiceBackupRestoreParameters.storageAccount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accessKey, backupName, containerName, storageAccount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApiManagementServiceBackupRestoreParameters {\n");
    sb.append("    accessKey: ").append(toIndentedString(accessKey)).append("\n");
    sb.append("    backupName: ").append(toIndentedString(backupName)).append("\n");
    sb.append("    containerName: ").append(toIndentedString(containerName)).append("\n");
    sb.append("    storageAccount: ").append(toIndentedString(storageAccount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("accessKey");
    openapiFields.add("backupName");
    openapiFields.add("containerName");
    openapiFields.add("storageAccount");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("accessKey");
    openapiRequiredFields.add("backupName");
    openapiRequiredFields.add("containerName");
    openapiRequiredFields.add("storageAccount");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ApiManagementServiceBackupRestoreParameters
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ApiManagementServiceBackupRestoreParameters.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ApiManagementServiceBackupRestoreParameters is not found in the empty JSON string", ApiManagementServiceBackupRestoreParameters.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ApiManagementServiceBackupRestoreParameters.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ApiManagementServiceBackupRestoreParameters` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ApiManagementServiceBackupRestoreParameters.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("accessKey").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `accessKey` to be a primitive type in the JSON string but got `%s`", jsonObj.get("accessKey").toString()));
      }
      if (!jsonObj.get("backupName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `backupName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("backupName").toString()));
      }
      if (!jsonObj.get("containerName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `containerName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("containerName").toString()));
      }
      if (!jsonObj.get("storageAccount").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `storageAccount` to be a primitive type in the JSON string but got `%s`", jsonObj.get("storageAccount").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ApiManagementServiceBackupRestoreParameters.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ApiManagementServiceBackupRestoreParameters' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ApiManagementServiceBackupRestoreParameters> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ApiManagementServiceBackupRestoreParameters.class));

       return (TypeAdapter<T>) new TypeAdapter<ApiManagementServiceBackupRestoreParameters>() {
           @Override
           public void write(JsonWriter out, ApiManagementServiceBackupRestoreParameters value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ApiManagementServiceBackupRestoreParameters read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ApiManagementServiceBackupRestoreParameters given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ApiManagementServiceBackupRestoreParameters
   * @throws IOException if the JSON string is invalid with respect to ApiManagementServiceBackupRestoreParameters
   */
  public static ApiManagementServiceBackupRestoreParameters fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ApiManagementServiceBackupRestoreParameters.class);
  }

  /**
   * Convert an instance of ApiManagementServiceBackupRestoreParameters to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

