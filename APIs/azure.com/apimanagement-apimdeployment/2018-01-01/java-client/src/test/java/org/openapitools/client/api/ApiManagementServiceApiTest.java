/*
 * ApiManagementClient
 * Use these REST APIs to manage Azure API Management deployment.
 *
 * The version of the OpenAPI document: 2018-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ApiManagementServiceApplyNetworkConfigurationParameters;
import org.openapitools.client.model.ApiManagementServiceBackupRestoreParameters;
import org.openapitools.client.model.ApiManagementServiceCheckNameAvailabilityParameters;
import org.openapitools.client.model.ApiManagementServiceGetSsoTokenResult;
import org.openapitools.client.model.ApiManagementServiceListResult;
import org.openapitools.client.model.ApiManagementServiceNameAvailabilityResult;
import org.openapitools.client.model.ApiManagementServiceResource;
import org.openapitools.client.model.ApiManagementServiceUpdateHostnameParameters;
import org.openapitools.client.model.ApiManagementServiceUpdateParameters;
import org.openapitools.client.model.ApiManagementServiceUploadCertificateParameters;
import org.openapitools.client.model.CertificateInformation;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ApiManagementServiceApi
 */
@Disabled
public class ApiManagementServiceApiTest {

    private final ApiManagementServiceApi api = new ApiManagementServiceApi();

    /**
     * Updates the Microsoft.ApiManagement resource running in the Virtual network to pick the updated network settings.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiManagementServiceApplyNetworkConfigurationUpdatesTest() throws ApiException {
        String resourceGroupName = null;
        String serviceName = null;
        String apiVersion = null;
        String subscriptionId = null;
        ApiManagementServiceApplyNetworkConfigurationParameters parameters = null;
        ApiManagementServiceResource response = api.apiManagementServiceApplyNetworkConfigurationUpdates(resourceGroupName, serviceName, apiVersion, subscriptionId, parameters);
        // TODO: test validations
    }

    /**
     * Creates a backup of the API Management service to the given Azure Storage Account. This is long running operation and could take several minutes to complete.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiManagementServiceBackupTest() throws ApiException {
        String resourceGroupName = null;
        String serviceName = null;
        String apiVersion = null;
        String subscriptionId = null;
        ApiManagementServiceBackupRestoreParameters parameters = null;
        ApiManagementServiceResource response = api.apiManagementServiceBackup(resourceGroupName, serviceName, apiVersion, subscriptionId, parameters);
        // TODO: test validations
    }

    /**
     * Checks availability and correctness of a name for an API Management service.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiManagementServiceCheckNameAvailabilityTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        ApiManagementServiceCheckNameAvailabilityParameters parameters = null;
        ApiManagementServiceNameAvailabilityResult response = api.apiManagementServiceCheckNameAvailability(apiVersion, subscriptionId, parameters);
        // TODO: test validations
    }

    /**
     * Creates or updates an API Management service. This is long running operation and could take several minutes to complete.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiManagementServiceCreateOrUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String serviceName = null;
        String apiVersion = null;
        String subscriptionId = null;
        ApiManagementServiceResource parameters = null;
        ApiManagementServiceResource response = api.apiManagementServiceCreateOrUpdate(resourceGroupName, serviceName, apiVersion, subscriptionId, parameters);
        // TODO: test validations
    }

    /**
     * Deletes an existing API Management service.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiManagementServiceDeleteTest() throws ApiException {
        String resourceGroupName = null;
        String serviceName = null;
        String apiVersion = null;
        String subscriptionId = null;
        api.apiManagementServiceDelete(resourceGroupName, serviceName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Gets an API Management service resource description.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiManagementServiceGetTest() throws ApiException {
        String resourceGroupName = null;
        String serviceName = null;
        String apiVersion = null;
        String subscriptionId = null;
        ApiManagementServiceResource response = api.apiManagementServiceGet(resourceGroupName, serviceName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Gets the Single-Sign-On token for the API Management Service which is valid for 5 Minutes.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiManagementServiceGetSsoTokenTest() throws ApiException {
        String resourceGroupName = null;
        String serviceName = null;
        String apiVersion = null;
        String subscriptionId = null;
        ApiManagementServiceGetSsoTokenResult response = api.apiManagementServiceGetSsoToken(resourceGroupName, serviceName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Lists all API Management services within an Azure subscription.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiManagementServiceListTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        ApiManagementServiceListResult response = api.apiManagementServiceList(apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * List all API Management services within a resource group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiManagementServiceListByResourceGroupTest() throws ApiException {
        String resourceGroupName = null;
        String apiVersion = null;
        String subscriptionId = null;
        ApiManagementServiceListResult response = api.apiManagementServiceListByResourceGroup(resourceGroupName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Restores a backup of an API Management service created using the ApiManagementService_Backup operation on the current service. This is a long running operation and could take several minutes to complete.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiManagementServiceRestoreTest() throws ApiException {
        String resourceGroupName = null;
        String serviceName = null;
        String apiVersion = null;
        String subscriptionId = null;
        ApiManagementServiceBackupRestoreParameters parameters = null;
        ApiManagementServiceResource response = api.apiManagementServiceRestore(resourceGroupName, serviceName, apiVersion, subscriptionId, parameters);
        // TODO: test validations
    }

    /**
     * Updates an existing API Management service.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiManagementServiceUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String serviceName = null;
        String apiVersion = null;
        String subscriptionId = null;
        ApiManagementServiceUpdateParameters parameters = null;
        ApiManagementServiceResource response = api.apiManagementServiceUpdate(resourceGroupName, serviceName, apiVersion, subscriptionId, parameters);
        // TODO: test validations
    }

    /**
     * Creates, updates, or deletes the custom hostnames for an API Management service. The custom hostname can be applied to the Proxy and Portal endpoint. This is a long running operation and could take several minutes to complete. This operation will be deprecated in the next version update.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiManagementServiceUpdateHostnameTest() throws ApiException {
        String resourceGroupName = null;
        String serviceName = null;
        String apiVersion = null;
        String subscriptionId = null;
        ApiManagementServiceUpdateHostnameParameters parameters = null;
        ApiManagementServiceResource response = api.apiManagementServiceUpdateHostname(resourceGroupName, serviceName, apiVersion, subscriptionId, parameters);
        // TODO: test validations
    }

    /**
     * Upload Custom Domain SSL certificate for an API Management service. This operation will be deprecated in future releases.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiManagementServiceUploadCertificateTest() throws ApiException {
        String resourceGroupName = null;
        String serviceName = null;
        String apiVersion = null;
        String subscriptionId = null;
        ApiManagementServiceUploadCertificateParameters parameters = null;
        CertificateInformation response = api.apiManagementServiceUploadCertificate(resourceGroupName, serviceName, apiVersion, subscriptionId, parameters);
        // TODO: test validations
    }

}
