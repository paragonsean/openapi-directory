# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.products_download200_response_properties_links_inner import ProductsDownload200ResponsePropertiesLinksInner
from openapi_server import util


class ProductsDownload200ResponseProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, gallery_package_blob_sas_uri: str=None, legal_terms: str=None, links: List[ProductsDownload200ResponsePropertiesLinksInner]=None, privacy_policy: str=None, product_details_properties: object=None, provisioning_state: str=None, vm_extension_type: str=None):
        """ProductsDownload200ResponseProperties - a model defined in OpenAPI

        :param gallery_package_blob_sas_uri: The gallery_package_blob_sas_uri of this ProductsDownload200ResponseProperties.
        :param legal_terms: The legal_terms of this ProductsDownload200ResponseProperties.
        :param links: The links of this ProductsDownload200ResponseProperties.
        :param privacy_policy: The privacy_policy of this ProductsDownload200ResponseProperties.
        :param product_details_properties: The product_details_properties of this ProductsDownload200ResponseProperties.
        :param provisioning_state: The provisioning_state of this ProductsDownload200ResponseProperties.
        :param vm_extension_type: The vm_extension_type of this ProductsDownload200ResponseProperties.
        """
        self.openapi_types = {
            'gallery_package_blob_sas_uri': str,
            'legal_terms': str,
            'links': List[ProductsDownload200ResponsePropertiesLinksInner],
            'privacy_policy': str,
            'product_details_properties': object,
            'provisioning_state': str,
            'vm_extension_type': str
        }

        self.attribute_map = {
            'gallery_package_blob_sas_uri': 'galleryPackageBlobSasUri',
            'legal_terms': 'legalTerms',
            'links': 'links',
            'privacy_policy': 'privacyPolicy',
            'product_details_properties': 'productDetailsProperties',
            'provisioning_state': 'provisioningState',
            'vm_extension_type': 'vmExtensionType'
        }

        self._gallery_package_blob_sas_uri = gallery_package_blob_sas_uri
        self._legal_terms = legal_terms
        self._links = links
        self._privacy_policy = privacy_policy
        self._product_details_properties = product_details_properties
        self._provisioning_state = provisioning_state
        self._vm_extension_type = vm_extension_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProductsDownload200ResponseProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Products_Download_200_response_properties of this ProductsDownload200ResponseProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def gallery_package_blob_sas_uri(self):
        """Gets the gallery_package_blob_sas_uri of this ProductsDownload200ResponseProperties.

        The URI to the .azpkg file that provides information required for showing product in the gallery.

        :return: The gallery_package_blob_sas_uri of this ProductsDownload200ResponseProperties.
        :rtype: str
        """
        return self._gallery_package_blob_sas_uri

    @gallery_package_blob_sas_uri.setter
    def gallery_package_blob_sas_uri(self, gallery_package_blob_sas_uri):
        """Sets the gallery_package_blob_sas_uri of this ProductsDownload200ResponseProperties.

        The URI to the .azpkg file that provides information required for showing product in the gallery.

        :param gallery_package_blob_sas_uri: The gallery_package_blob_sas_uri of this ProductsDownload200ResponseProperties.
        :type gallery_package_blob_sas_uri: str
        """

        self._gallery_package_blob_sas_uri = gallery_package_blob_sas_uri

    @property
    def legal_terms(self):
        """Gets the legal_terms of this ProductsDownload200ResponseProperties.

        Legal terms for the product.

        :return: The legal_terms of this ProductsDownload200ResponseProperties.
        :rtype: str
        """
        return self._legal_terms

    @legal_terms.setter
    def legal_terms(self, legal_terms):
        """Sets the legal_terms of this ProductsDownload200ResponseProperties.

        Legal terms for the product.

        :param legal_terms: The legal_terms of this ProductsDownload200ResponseProperties.
        :type legal_terms: str
        """

        self._legal_terms = legal_terms

    @property
    def links(self):
        """Gets the links of this ProductsDownload200ResponseProperties.

        List of product links.

        :return: The links of this ProductsDownload200ResponseProperties.
        :rtype: List[ProductsDownload200ResponsePropertiesLinksInner]
        """
        return self._links

    @links.setter
    def links(self, links):
        """Sets the links of this ProductsDownload200ResponseProperties.

        List of product links.

        :param links: The links of this ProductsDownload200ResponseProperties.
        :type links: List[ProductsDownload200ResponsePropertiesLinksInner]
        """

        self._links = links

    @property
    def privacy_policy(self):
        """Gets the privacy_policy of this ProductsDownload200ResponseProperties.

        Privacy policy of the product.

        :return: The privacy_policy of this ProductsDownload200ResponseProperties.
        :rtype: str
        """
        return self._privacy_policy

    @privacy_policy.setter
    def privacy_policy(self, privacy_policy):
        """Sets the privacy_policy of this ProductsDownload200ResponseProperties.

        Privacy policy of the product.

        :param privacy_policy: The privacy_policy of this ProductsDownload200ResponseProperties.
        :type privacy_policy: str
        """

        self._privacy_policy = privacy_policy

    @property
    def product_details_properties(self):
        """Gets the product_details_properties of this ProductsDownload200ResponseProperties.

        Product information.

        :return: The product_details_properties of this ProductsDownload200ResponseProperties.
        :rtype: object
        """
        return self._product_details_properties

    @product_details_properties.setter
    def product_details_properties(self, product_details_properties):
        """Sets the product_details_properties of this ProductsDownload200ResponseProperties.

        Product information.

        :param product_details_properties: The product_details_properties of this ProductsDownload200ResponseProperties.
        :type product_details_properties: object
        """

        self._product_details_properties = product_details_properties

    @property
    def provisioning_state(self):
        """Gets the provisioning_state of this ProductsDownload200ResponseProperties.

        The provisioning state of the resource.

        :return: The provisioning_state of this ProductsDownload200ResponseProperties.
        :rtype: str
        """
        return self._provisioning_state

    @provisioning_state.setter
    def provisioning_state(self, provisioning_state):
        """Sets the provisioning_state of this ProductsDownload200ResponseProperties.

        The provisioning state of the resource.

        :param provisioning_state: The provisioning_state of this ProductsDownload200ResponseProperties.
        :type provisioning_state: str
        """
        allowed_values = ["Stopped", "Starting", "Running", "Stopping", "Succeeded", "Downloading"]  # noqa: E501
        if provisioning_state not in allowed_values:
            raise ValueError(
                "Invalid value for `provisioning_state` ({0}), must be one of {1}"
                .format(provisioning_state, allowed_values)
            )

        self._provisioning_state = provisioning_state

    @property
    def vm_extension_type(self):
        """Gets the vm_extension_type of this ProductsDownload200ResponseProperties.

        Extension type of the VM.

        :return: The vm_extension_type of this ProductsDownload200ResponseProperties.
        :rtype: str
        """
        return self._vm_extension_type

    @vm_extension_type.setter
    def vm_extension_type(self, vm_extension_type):
        """Sets the vm_extension_type of this ProductsDownload200ResponseProperties.

        Extension type of the VM.

        :param vm_extension_type: The vm_extension_type of this ProductsDownload200ResponseProperties.
        :type vm_extension_type: str
        """

        self._vm_extension_type = vm_extension_type
