/**
 * AzureBridgeAdminClient
 * AzureBridge Admin Client.
 *
 * The version of the OpenAPI document: 2016-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ProductsDownload200ResponsePropertiesLinksInner from './ProductsDownload200ResponsePropertiesLinksInner';

/**
 * The ProductsDownload200ResponseProperties model module.
 * @module model/ProductsDownload200ResponseProperties
 * @version 2016-01-01
 */
class ProductsDownload200ResponseProperties {
    /**
     * Constructs a new <code>ProductsDownload200ResponseProperties</code>.
     * Properties for aggregate usage.
     * @alias module:model/ProductsDownload200ResponseProperties
     */
    constructor() { 
        
        ProductsDownload200ResponseProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ProductsDownload200ResponseProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProductsDownload200ResponseProperties} obj Optional instance to populate.
     * @return {module:model/ProductsDownload200ResponseProperties} The populated <code>ProductsDownload200ResponseProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProductsDownload200ResponseProperties();

            if (data.hasOwnProperty('galleryPackageBlobSasUri')) {
                obj['galleryPackageBlobSasUri'] = ApiClient.convertToType(data['galleryPackageBlobSasUri'], 'String');
            }
            if (data.hasOwnProperty('legalTerms')) {
                obj['legalTerms'] = ApiClient.convertToType(data['legalTerms'], 'String');
            }
            if (data.hasOwnProperty('links')) {
                obj['links'] = ApiClient.convertToType(data['links'], [ProductsDownload200ResponsePropertiesLinksInner]);
            }
            if (data.hasOwnProperty('privacyPolicy')) {
                obj['privacyPolicy'] = ApiClient.convertToType(data['privacyPolicy'], 'String');
            }
            if (data.hasOwnProperty('productDetailsProperties')) {
                obj['productDetailsProperties'] = ApiClient.convertToType(data['productDetailsProperties'], Object);
            }
            if (data.hasOwnProperty('provisioningState')) {
                obj['provisioningState'] = ApiClient.convertToType(data['provisioningState'], 'String');
            }
            if (data.hasOwnProperty('vmExtensionType')) {
                obj['vmExtensionType'] = ApiClient.convertToType(data['vmExtensionType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ProductsDownload200ResponseProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ProductsDownload200ResponseProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['galleryPackageBlobSasUri'] && !(typeof data['galleryPackageBlobSasUri'] === 'string' || data['galleryPackageBlobSasUri'] instanceof String)) {
            throw new Error("Expected the field `galleryPackageBlobSasUri` to be a primitive type in the JSON string but got " + data['galleryPackageBlobSasUri']);
        }
        // ensure the json data is a string
        if (data['legalTerms'] && !(typeof data['legalTerms'] === 'string' || data['legalTerms'] instanceof String)) {
            throw new Error("Expected the field `legalTerms` to be a primitive type in the JSON string but got " + data['legalTerms']);
        }
        if (data['links']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['links'])) {
                throw new Error("Expected the field `links` to be an array in the JSON data but got " + data['links']);
            }
            // validate the optional field `links` (array)
            for (const item of data['links']) {
                ProductsDownload200ResponsePropertiesLinksInner.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['privacyPolicy'] && !(typeof data['privacyPolicy'] === 'string' || data['privacyPolicy'] instanceof String)) {
            throw new Error("Expected the field `privacyPolicy` to be a primitive type in the JSON string but got " + data['privacyPolicy']);
        }
        // ensure the json data is a string
        if (data['provisioningState'] && !(typeof data['provisioningState'] === 'string' || data['provisioningState'] instanceof String)) {
            throw new Error("Expected the field `provisioningState` to be a primitive type in the JSON string but got " + data['provisioningState']);
        }
        // ensure the json data is a string
        if (data['vmExtensionType'] && !(typeof data['vmExtensionType'] === 'string' || data['vmExtensionType'] instanceof String)) {
            throw new Error("Expected the field `vmExtensionType` to be a primitive type in the JSON string but got " + data['vmExtensionType']);
        }

        return true;
    }


}



/**
 * The URI to the .azpkg file that provides information required for showing product in the gallery.
 * @member {String} galleryPackageBlobSasUri
 */
ProductsDownload200ResponseProperties.prototype['galleryPackageBlobSasUri'] = undefined;

/**
 * Legal terms for the product.
 * @member {String} legalTerms
 */
ProductsDownload200ResponseProperties.prototype['legalTerms'] = undefined;

/**
 * List of product links.
 * @member {Array.<module:model/ProductsDownload200ResponsePropertiesLinksInner>} links
 */
ProductsDownload200ResponseProperties.prototype['links'] = undefined;

/**
 * Privacy policy of the product.
 * @member {String} privacyPolicy
 */
ProductsDownload200ResponseProperties.prototype['privacyPolicy'] = undefined;

/**
 * Product information.
 * @member {Object} productDetailsProperties
 */
ProductsDownload200ResponseProperties.prototype['productDetailsProperties'] = undefined;

/**
 * The provisioning state of the resource.
 * @member {module:model/ProductsDownload200ResponseProperties.ProvisioningStateEnum} provisioningState
 */
ProductsDownload200ResponseProperties.prototype['provisioningState'] = undefined;

/**
 * Extension type of the VM.
 * @member {String} vmExtensionType
 */
ProductsDownload200ResponseProperties.prototype['vmExtensionType'] = undefined;





/**
 * Allowed values for the <code>provisioningState</code> property.
 * @enum {String}
 * @readonly
 */
ProductsDownload200ResponseProperties['ProvisioningStateEnum'] = {

    /**
     * value: "Stopped"
     * @const
     */
    "Stopped": "Stopped",

    /**
     * value: "Starting"
     * @const
     */
    "Starting": "Starting",

    /**
     * value: "Running"
     * @const
     */
    "Running": "Running",

    /**
     * value: "Stopping"
     * @const
     */
    "Stopping": "Stopping",

    /**
     * value: "Succeeded"
     * @const
     */
    "Succeeded": "Succeeded",

    /**
     * value: "Downloading"
     * @const
     */
    "Downloading": "Downloading"
};



export default ProductsDownload200ResponseProperties;

