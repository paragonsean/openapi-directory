/**
 * AzureBridgeAdminClient
 * AzureBridge Admin Client.
 *
 * The version of the OpenAPI document: 2016-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ProductAllOfIconUris model module.
 * @module model/ProductAllOfIconUris
 * @version 2016-01-01
 */
class ProductAllOfIconUris {
    /**
     * Constructs a new <code>ProductAllOfIconUris</code>.
     * Icons for the gallery items.
     * @alias module:model/ProductAllOfIconUris
     */
    constructor() { 
        
        ProductAllOfIconUris.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ProductAllOfIconUris</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProductAllOfIconUris} obj Optional instance to populate.
     * @return {module:model/ProductAllOfIconUris} The populated <code>ProductAllOfIconUris</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProductAllOfIconUris();

            if (data.hasOwnProperty('hero')) {
                obj['hero'] = ApiClient.convertToType(data['hero'], 'String');
            }
            if (data.hasOwnProperty('large')) {
                obj['large'] = ApiClient.convertToType(data['large'], 'String');
            }
            if (data.hasOwnProperty('medium')) {
                obj['medium'] = ApiClient.convertToType(data['medium'], 'String');
            }
            if (data.hasOwnProperty('small')) {
                obj['small'] = ApiClient.convertToType(data['small'], 'String');
            }
            if (data.hasOwnProperty('wide')) {
                obj['wide'] = ApiClient.convertToType(data['wide'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ProductAllOfIconUris</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ProductAllOfIconUris</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['hero'] && !(typeof data['hero'] === 'string' || data['hero'] instanceof String)) {
            throw new Error("Expected the field `hero` to be a primitive type in the JSON string but got " + data['hero']);
        }
        // ensure the json data is a string
        if (data['large'] && !(typeof data['large'] === 'string' || data['large'] instanceof String)) {
            throw new Error("Expected the field `large` to be a primitive type in the JSON string but got " + data['large']);
        }
        // ensure the json data is a string
        if (data['medium'] && !(typeof data['medium'] === 'string' || data['medium'] instanceof String)) {
            throw new Error("Expected the field `medium` to be a primitive type in the JSON string but got " + data['medium']);
        }
        // ensure the json data is a string
        if (data['small'] && !(typeof data['small'] === 'string' || data['small'] instanceof String)) {
            throw new Error("Expected the field `small` to be a primitive type in the JSON string but got " + data['small']);
        }
        // ensure the json data is a string
        if (data['wide'] && !(typeof data['wide'] === 'string' || data['wide'] instanceof String)) {
            throw new Error("Expected the field `wide` to be a primitive type in the JSON string but got " + data['wide']);
        }

        return true;
    }


}



/**
 * The hero (815x290) icon relative path.
 * @member {String} hero
 */
ProductAllOfIconUris.prototype['hero'] = undefined;

/**
 * The large (115x115) icon relative path.
 * @member {String} large
 */
ProductAllOfIconUris.prototype['large'] = undefined;

/**
 * The medium (90x90) icon relative path.
 * @member {String} medium
 */
ProductAllOfIconUris.prototype['medium'] = undefined;

/**
 * The small (40x40) icon relative path.
 * @member {String} small
 */
ProductAllOfIconUris.prototype['small'] = undefined;

/**
 * The wide (255x115) icon relative path.
 * @member {String} wide
 */
ProductAllOfIconUris.prototype['wide'] = undefined;






export default ProductAllOfIconUris;

