/**
 * AzureBridgeAdminClient
 * AzureBridge Admin Client.
 *
 * The version of the OpenAPI document: 2016-01-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIProducts_Download_200_response_properties.h
 *
 * Properties for aggregate usage.
 */

#ifndef OAIProducts_Download_200_response_properties_H
#define OAIProducts_Download_200_response_properties_H

#include <QJsonObject>

#include "OAIObject.h"
#include "OAIProducts_Download_200_response_properties_links_inner.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIProducts_Download_200_response_properties_links_inner;

class OAIProducts_Download_200_response_properties : public OAIObject {
public:
    OAIProducts_Download_200_response_properties();
    OAIProducts_Download_200_response_properties(QString json);
    ~OAIProducts_Download_200_response_properties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getGalleryPackageBlobSasUri() const;
    void setGalleryPackageBlobSasUri(const QString &gallery_package_blob_sas_uri);
    bool is_gallery_package_blob_sas_uri_Set() const;
    bool is_gallery_package_blob_sas_uri_Valid() const;

    QString getLegalTerms() const;
    void setLegalTerms(const QString &legal_terms);
    bool is_legal_terms_Set() const;
    bool is_legal_terms_Valid() const;

    QList<OAIProducts_Download_200_response_properties_links_inner> getLinks() const;
    void setLinks(const QList<OAIProducts_Download_200_response_properties_links_inner> &links);
    bool is_links_Set() const;
    bool is_links_Valid() const;

    QString getPrivacyPolicy() const;
    void setPrivacyPolicy(const QString &privacy_policy);
    bool is_privacy_policy_Set() const;
    bool is_privacy_policy_Valid() const;

    OAIObject getProductDetailsProperties() const;
    void setProductDetailsProperties(const OAIObject &product_details_properties);
    bool is_product_details_properties_Set() const;
    bool is_product_details_properties_Valid() const;

    QString getProvisioningState() const;
    void setProvisioningState(const QString &provisioning_state);
    bool is_provisioning_state_Set() const;
    bool is_provisioning_state_Valid() const;

    QString getVmExtensionType() const;
    void setVmExtensionType(const QString &vm_extension_type);
    bool is_vm_extension_type_Set() const;
    bool is_vm_extension_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_gallery_package_blob_sas_uri;
    bool m_gallery_package_blob_sas_uri_isSet;
    bool m_gallery_package_blob_sas_uri_isValid;

    QString m_legal_terms;
    bool m_legal_terms_isSet;
    bool m_legal_terms_isValid;

    QList<OAIProducts_Download_200_response_properties_links_inner> m_links;
    bool m_links_isSet;
    bool m_links_isValid;

    QString m_privacy_policy;
    bool m_privacy_policy_isSet;
    bool m_privacy_policy_isValid;

    OAIObject m_product_details_properties;
    bool m_product_details_properties_isSet;
    bool m_product_details_properties_isValid;

    QString m_provisioning_state;
    bool m_provisioning_state_isSet;
    bool m_provisioning_state_isValid;

    QString m_vm_extension_type;
    bool m_vm_extension_type_isSet;
    bool m_vm_extension_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIProducts_Download_200_response_properties)

#endif // OAIProducts_Download_200_response_properties_H
