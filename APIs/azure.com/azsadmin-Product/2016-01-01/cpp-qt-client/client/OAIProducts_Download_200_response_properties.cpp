/**
 * AzureBridgeAdminClient
 * AzureBridge Admin Client.
 *
 * The version of the OpenAPI document: 2016-01-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProducts_Download_200_response_properties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProducts_Download_200_response_properties::OAIProducts_Download_200_response_properties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProducts_Download_200_response_properties::OAIProducts_Download_200_response_properties() {
    this->initializeModel();
}

OAIProducts_Download_200_response_properties::~OAIProducts_Download_200_response_properties() {}

void OAIProducts_Download_200_response_properties::initializeModel() {

    m_gallery_package_blob_sas_uri_isSet = false;
    m_gallery_package_blob_sas_uri_isValid = false;

    m_legal_terms_isSet = false;
    m_legal_terms_isValid = false;

    m_links_isSet = false;
    m_links_isValid = false;

    m_privacy_policy_isSet = false;
    m_privacy_policy_isValid = false;

    m_product_details_properties_isSet = false;
    m_product_details_properties_isValid = false;

    m_provisioning_state_isSet = false;
    m_provisioning_state_isValid = false;

    m_vm_extension_type_isSet = false;
    m_vm_extension_type_isValid = false;
}

void OAIProducts_Download_200_response_properties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProducts_Download_200_response_properties::fromJsonObject(QJsonObject json) {

    m_gallery_package_blob_sas_uri_isValid = ::OpenAPI::fromJsonValue(m_gallery_package_blob_sas_uri, json[QString("galleryPackageBlobSasUri")]);
    m_gallery_package_blob_sas_uri_isSet = !json[QString("galleryPackageBlobSasUri")].isNull() && m_gallery_package_blob_sas_uri_isValid;

    m_legal_terms_isValid = ::OpenAPI::fromJsonValue(m_legal_terms, json[QString("legalTerms")]);
    m_legal_terms_isSet = !json[QString("legalTerms")].isNull() && m_legal_terms_isValid;

    m_links_isValid = ::OpenAPI::fromJsonValue(m_links, json[QString("links")]);
    m_links_isSet = !json[QString("links")].isNull() && m_links_isValid;

    m_privacy_policy_isValid = ::OpenAPI::fromJsonValue(m_privacy_policy, json[QString("privacyPolicy")]);
    m_privacy_policy_isSet = !json[QString("privacyPolicy")].isNull() && m_privacy_policy_isValid;

    m_product_details_properties_isValid = ::OpenAPI::fromJsonValue(m_product_details_properties, json[QString("productDetailsProperties")]);
    m_product_details_properties_isSet = !json[QString("productDetailsProperties")].isNull() && m_product_details_properties_isValid;

    m_provisioning_state_isValid = ::OpenAPI::fromJsonValue(m_provisioning_state, json[QString("provisioningState")]);
    m_provisioning_state_isSet = !json[QString("provisioningState")].isNull() && m_provisioning_state_isValid;

    m_vm_extension_type_isValid = ::OpenAPI::fromJsonValue(m_vm_extension_type, json[QString("vmExtensionType")]);
    m_vm_extension_type_isSet = !json[QString("vmExtensionType")].isNull() && m_vm_extension_type_isValid;
}

QString OAIProducts_Download_200_response_properties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProducts_Download_200_response_properties::asJsonObject() const {
    QJsonObject obj;
    if (m_gallery_package_blob_sas_uri_isSet) {
        obj.insert(QString("galleryPackageBlobSasUri"), ::OpenAPI::toJsonValue(m_gallery_package_blob_sas_uri));
    }
    if (m_legal_terms_isSet) {
        obj.insert(QString("legalTerms"), ::OpenAPI::toJsonValue(m_legal_terms));
    }
    if (m_links.size() > 0) {
        obj.insert(QString("links"), ::OpenAPI::toJsonValue(m_links));
    }
    if (m_privacy_policy_isSet) {
        obj.insert(QString("privacyPolicy"), ::OpenAPI::toJsonValue(m_privacy_policy));
    }
    if (m_product_details_properties_isSet) {
        obj.insert(QString("productDetailsProperties"), ::OpenAPI::toJsonValue(m_product_details_properties));
    }
    if (m_provisioning_state_isSet) {
        obj.insert(QString("provisioningState"), ::OpenAPI::toJsonValue(m_provisioning_state));
    }
    if (m_vm_extension_type_isSet) {
        obj.insert(QString("vmExtensionType"), ::OpenAPI::toJsonValue(m_vm_extension_type));
    }
    return obj;
}

QString OAIProducts_Download_200_response_properties::getGalleryPackageBlobSasUri() const {
    return m_gallery_package_blob_sas_uri;
}
void OAIProducts_Download_200_response_properties::setGalleryPackageBlobSasUri(const QString &gallery_package_blob_sas_uri) {
    m_gallery_package_blob_sas_uri = gallery_package_blob_sas_uri;
    m_gallery_package_blob_sas_uri_isSet = true;
}

bool OAIProducts_Download_200_response_properties::is_gallery_package_blob_sas_uri_Set() const{
    return m_gallery_package_blob_sas_uri_isSet;
}

bool OAIProducts_Download_200_response_properties::is_gallery_package_blob_sas_uri_Valid() const{
    return m_gallery_package_blob_sas_uri_isValid;
}

QString OAIProducts_Download_200_response_properties::getLegalTerms() const {
    return m_legal_terms;
}
void OAIProducts_Download_200_response_properties::setLegalTerms(const QString &legal_terms) {
    m_legal_terms = legal_terms;
    m_legal_terms_isSet = true;
}

bool OAIProducts_Download_200_response_properties::is_legal_terms_Set() const{
    return m_legal_terms_isSet;
}

bool OAIProducts_Download_200_response_properties::is_legal_terms_Valid() const{
    return m_legal_terms_isValid;
}

QList<OAIProducts_Download_200_response_properties_links_inner> OAIProducts_Download_200_response_properties::getLinks() const {
    return m_links;
}
void OAIProducts_Download_200_response_properties::setLinks(const QList<OAIProducts_Download_200_response_properties_links_inner> &links) {
    m_links = links;
    m_links_isSet = true;
}

bool OAIProducts_Download_200_response_properties::is_links_Set() const{
    return m_links_isSet;
}

bool OAIProducts_Download_200_response_properties::is_links_Valid() const{
    return m_links_isValid;
}

QString OAIProducts_Download_200_response_properties::getPrivacyPolicy() const {
    return m_privacy_policy;
}
void OAIProducts_Download_200_response_properties::setPrivacyPolicy(const QString &privacy_policy) {
    m_privacy_policy = privacy_policy;
    m_privacy_policy_isSet = true;
}

bool OAIProducts_Download_200_response_properties::is_privacy_policy_Set() const{
    return m_privacy_policy_isSet;
}

bool OAIProducts_Download_200_response_properties::is_privacy_policy_Valid() const{
    return m_privacy_policy_isValid;
}

OAIObject OAIProducts_Download_200_response_properties::getProductDetailsProperties() const {
    return m_product_details_properties;
}
void OAIProducts_Download_200_response_properties::setProductDetailsProperties(const OAIObject &product_details_properties) {
    m_product_details_properties = product_details_properties;
    m_product_details_properties_isSet = true;
}

bool OAIProducts_Download_200_response_properties::is_product_details_properties_Set() const{
    return m_product_details_properties_isSet;
}

bool OAIProducts_Download_200_response_properties::is_product_details_properties_Valid() const{
    return m_product_details_properties_isValid;
}

QString OAIProducts_Download_200_response_properties::getProvisioningState() const {
    return m_provisioning_state;
}
void OAIProducts_Download_200_response_properties::setProvisioningState(const QString &provisioning_state) {
    m_provisioning_state = provisioning_state;
    m_provisioning_state_isSet = true;
}

bool OAIProducts_Download_200_response_properties::is_provisioning_state_Set() const{
    return m_provisioning_state_isSet;
}

bool OAIProducts_Download_200_response_properties::is_provisioning_state_Valid() const{
    return m_provisioning_state_isValid;
}

QString OAIProducts_Download_200_response_properties::getVmExtensionType() const {
    return m_vm_extension_type;
}
void OAIProducts_Download_200_response_properties::setVmExtensionType(const QString &vm_extension_type) {
    m_vm_extension_type = vm_extension_type;
    m_vm_extension_type_isSet = true;
}

bool OAIProducts_Download_200_response_properties::is_vm_extension_type_Set() const{
    return m_vm_extension_type_isSet;
}

bool OAIProducts_Download_200_response_properties::is_vm_extension_type_Valid() const{
    return m_vm_extension_type_isValid;
}

bool OAIProducts_Download_200_response_properties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_gallery_package_blob_sas_uri_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_legal_terms_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_links.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_privacy_policy_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_product_details_properties_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_provisioning_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_vm_extension_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProducts_Download_200_response_properties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
