# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.billing_meters import BillingMeters
from openapi_server.models.disk_billing_meters import DiskBillingMeters
from openapi_server import util


class BillingResources(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, billing_meters: List[BillingMeters]=None, disk_billing_meters: List[DiskBillingMeters]=None, region: str=None):
        """BillingResources - a model defined in OpenAPI

        :param billing_meters: The billing_meters of this BillingResources.
        :param disk_billing_meters: The disk_billing_meters of this BillingResources.
        :param region: The region of this BillingResources.
        """
        self.openapi_types = {
            'billing_meters': List[BillingMeters],
            'disk_billing_meters': List[DiskBillingMeters],
            'region': str
        }

        self.attribute_map = {
            'billing_meters': 'billingMeters',
            'disk_billing_meters': 'diskBillingMeters',
            'region': 'region'
        }

        self._billing_meters = billing_meters
        self._disk_billing_meters = disk_billing_meters
        self._region = region

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BillingResources':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BillingResources of this BillingResources.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def billing_meters(self):
        """Gets the billing_meters of this BillingResources.

        The billing meter information.

        :return: The billing_meters of this BillingResources.
        :rtype: List[BillingMeters]
        """
        return self._billing_meters

    @billing_meters.setter
    def billing_meters(self, billing_meters):
        """Sets the billing_meters of this BillingResources.

        The billing meter information.

        :param billing_meters: The billing_meters of this BillingResources.
        :type billing_meters: List[BillingMeters]
        """

        self._billing_meters = billing_meters

    @property
    def disk_billing_meters(self):
        """Gets the disk_billing_meters of this BillingResources.

        The managed disk billing information.

        :return: The disk_billing_meters of this BillingResources.
        :rtype: List[DiskBillingMeters]
        """
        return self._disk_billing_meters

    @disk_billing_meters.setter
    def disk_billing_meters(self, disk_billing_meters):
        """Sets the disk_billing_meters of this BillingResources.

        The managed disk billing information.

        :param disk_billing_meters: The disk_billing_meters of this BillingResources.
        :type disk_billing_meters: List[DiskBillingMeters]
        """

        self._disk_billing_meters = disk_billing_meters

    @property
    def region(self):
        """Gets the region of this BillingResources.

        The region or location.

        :return: The region of this BillingResources.
        :rtype: str
        """
        return self._region

    @region.setter
    def region(self, region):
        """Sets the region of this BillingResources.

        The region or location.

        :param region: The region of this BillingResources.
        :type region: str
        """

        self._region = region
