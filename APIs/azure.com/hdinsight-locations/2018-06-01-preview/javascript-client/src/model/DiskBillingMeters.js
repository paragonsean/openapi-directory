/**
 * HDInsightManagementClient
 * The HDInsight Management Client.
 *
 * The version of the OpenAPI document: 2018-06-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DiskBillingMeters model module.
 * @module model/DiskBillingMeters
 * @version 2018-06-01-preview
 */
class DiskBillingMeters {
    /**
     * Constructs a new <code>DiskBillingMeters</code>.
     * The disk billing meters.
     * @alias module:model/DiskBillingMeters
     */
    constructor() { 
        
        DiskBillingMeters.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DiskBillingMeters</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DiskBillingMeters} obj Optional instance to populate.
     * @return {module:model/DiskBillingMeters} The populated <code>DiskBillingMeters</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DiskBillingMeters();

            if (data.hasOwnProperty('diskRpMeter')) {
                obj['diskRpMeter'] = ApiClient.convertToType(data['diskRpMeter'], 'String');
            }
            if (data.hasOwnProperty('sku')) {
                obj['sku'] = ApiClient.convertToType(data['sku'], 'String');
            }
            if (data.hasOwnProperty('tier')) {
                obj['tier'] = ApiClient.convertToType(data['tier'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DiskBillingMeters</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DiskBillingMeters</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['diskRpMeter'] && !(typeof data['diskRpMeter'] === 'string' || data['diskRpMeter'] instanceof String)) {
            throw new Error("Expected the field `diskRpMeter` to be a primitive type in the JSON string but got " + data['diskRpMeter']);
        }
        // ensure the json data is a string
        if (data['sku'] && !(typeof data['sku'] === 'string' || data['sku'] instanceof String)) {
            throw new Error("Expected the field `sku` to be a primitive type in the JSON string but got " + data['sku']);
        }
        // ensure the json data is a string
        if (data['tier'] && !(typeof data['tier'] === 'string' || data['tier'] instanceof String)) {
            throw new Error("Expected the field `tier` to be a primitive type in the JSON string but got " + data['tier']);
        }

        return true;
    }


}



/**
 * The managed disk meter guid.
 * @member {String} diskRpMeter
 */
DiskBillingMeters.prototype['diskRpMeter'] = undefined;

/**
 * The managed disk billing sku, P30 or S30.
 * @member {String} sku
 */
DiskBillingMeters.prototype['sku'] = undefined;

/**
 * The managed disk billing tier, Standard or Premium.
 * @member {module:model/DiskBillingMeters.TierEnum} tier
 */
DiskBillingMeters.prototype['tier'] = undefined;





/**
 * Allowed values for the <code>tier</code> property.
 * @enum {String}
 * @readonly
 */
DiskBillingMeters['TierEnum'] = {

    /**
     * value: "Standard"
     * @const
     */
    "Standard": "Standard",

    /**
     * value: "Premium"
     * @const
     */
    "Premium": "Premium"
};



export default DiskBillingMeters;

