/**
 * HDInsightManagementClient
 * The HDInsight Management Client.
 *
 * The version of the OpenAPI document: 2015-03-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBillingResources.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBillingResources::OAIBillingResources(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBillingResources::OAIBillingResources() {
    this->initializeModel();
}

OAIBillingResources::~OAIBillingResources() {}

void OAIBillingResources::initializeModel() {

    m_billing_meters_isSet = false;
    m_billing_meters_isValid = false;

    m_disk_billing_meters_isSet = false;
    m_disk_billing_meters_isValid = false;

    m_region_isSet = false;
    m_region_isValid = false;
}

void OAIBillingResources::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBillingResources::fromJsonObject(QJsonObject json) {

    m_billing_meters_isValid = ::OpenAPI::fromJsonValue(m_billing_meters, json[QString("billingMeters")]);
    m_billing_meters_isSet = !json[QString("billingMeters")].isNull() && m_billing_meters_isValid;

    m_disk_billing_meters_isValid = ::OpenAPI::fromJsonValue(m_disk_billing_meters, json[QString("diskBillingMeters")]);
    m_disk_billing_meters_isSet = !json[QString("diskBillingMeters")].isNull() && m_disk_billing_meters_isValid;

    m_region_isValid = ::OpenAPI::fromJsonValue(m_region, json[QString("region")]);
    m_region_isSet = !json[QString("region")].isNull() && m_region_isValid;
}

QString OAIBillingResources::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBillingResources::asJsonObject() const {
    QJsonObject obj;
    if (m_billing_meters.size() > 0) {
        obj.insert(QString("billingMeters"), ::OpenAPI::toJsonValue(m_billing_meters));
    }
    if (m_disk_billing_meters.size() > 0) {
        obj.insert(QString("diskBillingMeters"), ::OpenAPI::toJsonValue(m_disk_billing_meters));
    }
    if (m_region_isSet) {
        obj.insert(QString("region"), ::OpenAPI::toJsonValue(m_region));
    }
    return obj;
}

QList<OAIBillingMeters> OAIBillingResources::getBillingMeters() const {
    return m_billing_meters;
}
void OAIBillingResources::setBillingMeters(const QList<OAIBillingMeters> &billing_meters) {
    m_billing_meters = billing_meters;
    m_billing_meters_isSet = true;
}

bool OAIBillingResources::is_billing_meters_Set() const{
    return m_billing_meters_isSet;
}

bool OAIBillingResources::is_billing_meters_Valid() const{
    return m_billing_meters_isValid;
}

QList<OAIDiskBillingMeters> OAIBillingResources::getDiskBillingMeters() const {
    return m_disk_billing_meters;
}
void OAIBillingResources::setDiskBillingMeters(const QList<OAIDiskBillingMeters> &disk_billing_meters) {
    m_disk_billing_meters = disk_billing_meters;
    m_disk_billing_meters_isSet = true;
}

bool OAIBillingResources::is_disk_billing_meters_Set() const{
    return m_disk_billing_meters_isSet;
}

bool OAIBillingResources::is_disk_billing_meters_Valid() const{
    return m_disk_billing_meters_isValid;
}

QString OAIBillingResources::getRegion() const {
    return m_region;
}
void OAIBillingResources::setRegion(const QString &region) {
    m_region = region;
    m_region_isSet = true;
}

bool OAIBillingResources::is_region_Set() const{
    return m_region_isSet;
}

bool OAIBillingResources::is_region_Valid() const{
    return m_region_isValid;
}

bool OAIBillingResources::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_billing_meters.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_disk_billing_meters.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_region_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBillingResources::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
