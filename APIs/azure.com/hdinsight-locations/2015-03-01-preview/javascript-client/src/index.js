/**
 * HDInsightManagementClient
 * The HDInsight Management Client.
 *
 * The version of the OpenAPI document: 2015-03-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import BillingMeters from './model/BillingMeters';
import BillingResources from './model/BillingResources';
import BillingResponseListResult from './model/BillingResponseListResult';
import CapabilitiesResult from './model/CapabilitiesResult';
import DiskBillingMeters from './model/DiskBillingMeters';
import LocalizedName from './model/LocalizedName';
import LocationsListBillingSpecsDefaultResponse from './model/LocationsListBillingSpecsDefaultResponse';
import QuotaCapability from './model/QuotaCapability';
import RegionalQuotaCapability from './model/RegionalQuotaCapability';
import RegionsCapability from './model/RegionsCapability';
import Usage from './model/Usage';
import UsagesListResult from './model/UsagesListResult';
import VersionSpec from './model/VersionSpec';
import VersionsCapability from './model/VersionsCapability';
import VmSizeCompatibilityFilter from './model/VmSizeCompatibilityFilter';
import VmSizeCompatibilityFilterV2 from './model/VmSizeCompatibilityFilterV2';
import VmSizesCapability from './model/VmSizesCapability';
import RegionsApi from './api/RegionsApi';


/**
* The HDInsight Management Client..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var HdInsightManagementClient = require('index'); // See note below*.
* var xxxSvc = new HdInsightManagementClient.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new HdInsightManagementClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new HdInsightManagementClient.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new HdInsightManagementClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2015-03-01-preview
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The BillingMeters model constructor.
     * @property {module:model/BillingMeters}
     */
    BillingMeters,

    /**
     * The BillingResources model constructor.
     * @property {module:model/BillingResources}
     */
    BillingResources,

    /**
     * The BillingResponseListResult model constructor.
     * @property {module:model/BillingResponseListResult}
     */
    BillingResponseListResult,

    /**
     * The CapabilitiesResult model constructor.
     * @property {module:model/CapabilitiesResult}
     */
    CapabilitiesResult,

    /**
     * The DiskBillingMeters model constructor.
     * @property {module:model/DiskBillingMeters}
     */
    DiskBillingMeters,

    /**
     * The LocalizedName model constructor.
     * @property {module:model/LocalizedName}
     */
    LocalizedName,

    /**
     * The LocationsListBillingSpecsDefaultResponse model constructor.
     * @property {module:model/LocationsListBillingSpecsDefaultResponse}
     */
    LocationsListBillingSpecsDefaultResponse,

    /**
     * The QuotaCapability model constructor.
     * @property {module:model/QuotaCapability}
     */
    QuotaCapability,

    /**
     * The RegionalQuotaCapability model constructor.
     * @property {module:model/RegionalQuotaCapability}
     */
    RegionalQuotaCapability,

    /**
     * The RegionsCapability model constructor.
     * @property {module:model/RegionsCapability}
     */
    RegionsCapability,

    /**
     * The Usage model constructor.
     * @property {module:model/Usage}
     */
    Usage,

    /**
     * The UsagesListResult model constructor.
     * @property {module:model/UsagesListResult}
     */
    UsagesListResult,

    /**
     * The VersionSpec model constructor.
     * @property {module:model/VersionSpec}
     */
    VersionSpec,

    /**
     * The VersionsCapability model constructor.
     * @property {module:model/VersionsCapability}
     */
    VersionsCapability,

    /**
     * The VmSizeCompatibilityFilter model constructor.
     * @property {module:model/VmSizeCompatibilityFilter}
     */
    VmSizeCompatibilityFilter,

    /**
     * The VmSizeCompatibilityFilterV2 model constructor.
     * @property {module:model/VmSizeCompatibilityFilterV2}
     */
    VmSizeCompatibilityFilterV2,

    /**
     * The VmSizesCapability model constructor.
     * @property {module:model/VmSizesCapability}
     */
    VmSizesCapability,

    /**
    * The RegionsApi service constructor.
    * @property {module:api/RegionsApi}
    */
    RegionsApi
};
