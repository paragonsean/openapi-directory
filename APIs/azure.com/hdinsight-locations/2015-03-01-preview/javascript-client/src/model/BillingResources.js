/**
 * HDInsightManagementClient
 * The HDInsight Management Client.
 *
 * The version of the OpenAPI document: 2015-03-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BillingMeters from './BillingMeters';
import DiskBillingMeters from './DiskBillingMeters';

/**
 * The BillingResources model module.
 * @module model/BillingResources
 * @version 2015-03-01-preview
 */
class BillingResources {
    /**
     * Constructs a new <code>BillingResources</code>.
     * The billing resources.
     * @alias module:model/BillingResources
     */
    constructor() { 
        
        BillingResources.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BillingResources</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BillingResources} obj Optional instance to populate.
     * @return {module:model/BillingResources} The populated <code>BillingResources</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BillingResources();

            if (data.hasOwnProperty('billingMeters')) {
                obj['billingMeters'] = ApiClient.convertToType(data['billingMeters'], [BillingMeters]);
            }
            if (data.hasOwnProperty('diskBillingMeters')) {
                obj['diskBillingMeters'] = ApiClient.convertToType(data['diskBillingMeters'], [DiskBillingMeters]);
            }
            if (data.hasOwnProperty('region')) {
                obj['region'] = ApiClient.convertToType(data['region'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BillingResources</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BillingResources</code>.
     */
    static validateJSON(data) {
        if (data['billingMeters']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['billingMeters'])) {
                throw new Error("Expected the field `billingMeters` to be an array in the JSON data but got " + data['billingMeters']);
            }
            // validate the optional field `billingMeters` (array)
            for (const item of data['billingMeters']) {
                BillingMeters.validateJSON(item);
            };
        }
        if (data['diskBillingMeters']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['diskBillingMeters'])) {
                throw new Error("Expected the field `diskBillingMeters` to be an array in the JSON data but got " + data['diskBillingMeters']);
            }
            // validate the optional field `diskBillingMeters` (array)
            for (const item of data['diskBillingMeters']) {
                DiskBillingMeters.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['region'] && !(typeof data['region'] === 'string' || data['region'] instanceof String)) {
            throw new Error("Expected the field `region` to be a primitive type in the JSON string but got " + data['region']);
        }

        return true;
    }


}



/**
 * The billing meter information.
 * @member {Array.<module:model/BillingMeters>} billingMeters
 */
BillingResources.prototype['billingMeters'] = undefined;

/**
 * The managed disk billing information.
 * @member {Array.<module:model/DiskBillingMeters>} diskBillingMeters
 */
BillingResources.prototype['diskBillingMeters'] = undefined;

/**
 * The region or location.
 * @member {String} region
 */
BillingResources.prototype['region'] = undefined;






export default BillingResources;

