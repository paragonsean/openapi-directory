# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.version_spec import VersionSpec
from openapi_server import util


class VersionsCapability(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, available: List[VersionSpec]=None):
        """VersionsCapability - a model defined in OpenAPI

        :param available: The available of this VersionsCapability.
        """
        self.openapi_types = {
            'available': List[VersionSpec]
        }

        self.attribute_map = {
            'available': 'available'
        }

        self._available = available

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VersionsCapability':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VersionsCapability of this VersionsCapability.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def available(self):
        """Gets the available of this VersionsCapability.

        The list of version capabilities.

        :return: The available of this VersionsCapability.
        :rtype: List[VersionSpec]
        """
        return self._available

    @available.setter
    def available(self, available):
        """Sets the available of this VersionsCapability.

        The list of version capabilities.

        :param available: The available of this VersionsCapability.
        :type available: List[VersionSpec]
        """

        self._available = available
