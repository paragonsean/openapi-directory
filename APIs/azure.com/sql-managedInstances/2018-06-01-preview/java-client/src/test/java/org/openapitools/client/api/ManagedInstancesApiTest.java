/*
 * SqlManagementClient
 * The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.
 *
 * The version of the OpenAPI document: 2018-06-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ManagedInstance;
import org.openapitools.client.model.ManagedInstanceListResult;
import org.openapitools.client.model.ManagedInstanceUpdate;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ManagedInstancesApi
 */
@Disabled
public class ManagedInstancesApiTest {

    private final ManagedInstancesApi api = new ManagedInstancesApi();

    /**
     * Creates or updates a managed instance.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void managedInstancesCreateOrUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String managedInstanceName = null;
        String subscriptionId = null;
        String apiVersion = null;
        ManagedInstance parameters = null;
        ManagedInstance response = api.managedInstancesCreateOrUpdate(resourceGroupName, managedInstanceName, subscriptionId, apiVersion, parameters);
        // TODO: test validations
    }

    /**
     * Deletes a managed instance.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void managedInstancesDeleteTest() throws ApiException {
        String resourceGroupName = null;
        String managedInstanceName = null;
        String subscriptionId = null;
        String apiVersion = null;
        api.managedInstancesDelete(resourceGroupName, managedInstanceName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets a managed instance.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void managedInstancesGetTest() throws ApiException {
        String resourceGroupName = null;
        String managedInstanceName = null;
        String subscriptionId = null;
        String apiVersion = null;
        ManagedInstance response = api.managedInstancesGet(resourceGroupName, managedInstanceName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets a list of all managed instances in the subscription.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void managedInstancesListTest() throws ApiException {
        String subscriptionId = null;
        String apiVersion = null;
        ManagedInstanceListResult response = api.managedInstancesList(subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets a list of all managed instances in an instance pool.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void managedInstancesListByInstancePoolTest() throws ApiException {
        String resourceGroupName = null;
        String instancePoolName = null;
        String subscriptionId = null;
        String apiVersion = null;
        ManagedInstanceListResult response = api.managedInstancesListByInstancePool(resourceGroupName, instancePoolName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets a list of managed instances in a resource group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void managedInstancesListByResourceGroupTest() throws ApiException {
        String resourceGroupName = null;
        String subscriptionId = null;
        String apiVersion = null;
        ManagedInstanceListResult response = api.managedInstancesListByResourceGroup(resourceGroupName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Updates a managed instance.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void managedInstancesUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String managedInstanceName = null;
        String subscriptionId = null;
        String apiVersion = null;
        ManagedInstanceUpdate parameters = null;
        ManagedInstance response = api.managedInstancesUpdate(resourceGroupName, managedInstanceName, subscriptionId, apiVersion, parameters);
        // TODO: test validations
    }

}
