/*
 * SqlManagementClient
 * The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.
 *
 * The version of the OpenAPI document: 2018-06-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ManagedInstanceProperties
 */
public class ManagedInstancePropertiesTest {
    private final ManagedInstanceProperties model = new ManagedInstanceProperties();

    /**
     * Model tests for ManagedInstanceProperties
     */
    @Test
    public void testManagedInstanceProperties() {
        // TODO: test ManagedInstanceProperties
    }

    /**
     * Test the property 'administratorLogin'
     */
    @Test
    public void administratorLoginTest() {
        // TODO: test administratorLogin
    }

    /**
     * Test the property 'administratorLoginPassword'
     */
    @Test
    public void administratorLoginPasswordTest() {
        // TODO: test administratorLoginPassword
    }

    /**
     * Test the property 'collation'
     */
    @Test
    public void collationTest() {
        // TODO: test collation
    }

    /**
     * Test the property 'dnsZone'
     */
    @Test
    public void dnsZoneTest() {
        // TODO: test dnsZone
    }

    /**
     * Test the property 'dnsZonePartner'
     */
    @Test
    public void dnsZonePartnerTest() {
        // TODO: test dnsZonePartner
    }

    /**
     * Test the property 'fullyQualifiedDomainName'
     */
    @Test
    public void fullyQualifiedDomainNameTest() {
        // TODO: test fullyQualifiedDomainName
    }

    /**
     * Test the property 'instancePoolId'
     */
    @Test
    public void instancePoolIdTest() {
        // TODO: test instancePoolId
    }

    /**
     * Test the property 'licenseType'
     */
    @Test
    public void licenseTypeTest() {
        // TODO: test licenseType
    }

    /**
     * Test the property 'managedInstanceCreateMode'
     */
    @Test
    public void managedInstanceCreateModeTest() {
        // TODO: test managedInstanceCreateMode
    }

    /**
     * Test the property 'proxyOverride'
     */
    @Test
    public void proxyOverrideTest() {
        // TODO: test proxyOverride
    }

    /**
     * Test the property 'publicDataEndpointEnabled'
     */
    @Test
    public void publicDataEndpointEnabledTest() {
        // TODO: test publicDataEndpointEnabled
    }

    /**
     * Test the property 'restorePointInTime'
     */
    @Test
    public void restorePointInTimeTest() {
        // TODO: test restorePointInTime
    }

    /**
     * Test the property 'sourceManagedInstanceId'
     */
    @Test
    public void sourceManagedInstanceIdTest() {
        // TODO: test sourceManagedInstanceId
    }

    /**
     * Test the property 'state'
     */
    @Test
    public void stateTest() {
        // TODO: test state
    }

    /**
     * Test the property 'storageSizeInGB'
     */
    @Test
    public void storageSizeInGBTest() {
        // TODO: test storageSizeInGB
    }

    /**
     * Test the property 'subnetId'
     */
    @Test
    public void subnetIdTest() {
        // TODO: test subnetId
    }

    /**
     * Test the property 'timezoneId'
     */
    @Test
    public void timezoneIdTest() {
        // TODO: test timezoneId
    }

    /**
     * Test the property 'vCores'
     */
    @Test
    public void vCoresTest() {
        // TODO: test vCores
    }

}
