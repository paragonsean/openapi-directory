# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.backup_info import BackupInfo
from openapi_server import util


class BackupModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, backup_info: BackupInfo=None):
        """BackupModel - a model defined in OpenAPI

        :param backup_info: The backup_info of this BackupModel.
        """
        self.openapi_types = {
            'backup_info': BackupInfo
        }

        self.attribute_map = {
            'backup_info': 'backupInfo'
        }

        self._backup_info = backup_info

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BackupModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BackupModel of this BackupModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def backup_info(self):
        """Gets the backup_info of this BackupModel.


        :return: The backup_info of this BackupModel.
        :rtype: BackupInfo
        """
        return self._backup_info

    @backup_info.setter
    def backup_info(self, backup_info):
        """Sets the backup_info of this BackupModel.


        :param backup_info: The backup_info of this BackupModel.
        :type backup_info: BackupInfo
        """

        self._backup_info = backup_info
