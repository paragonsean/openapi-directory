/**
 * BackupManagementClient
 * The Admin Backup Management Client.
 *
 * The version of the OpenAPI document: 2018-09-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RestoreOptions model module.
 * @module model/RestoreOptions
 * @version 2018-09-01
 */
class RestoreOptions {
    /**
     * Constructs a new <code>RestoreOptions</code>.
     * Properties for restore options.
     * @alias module:model/RestoreOptions
     */
    constructor() { 
        
        RestoreOptions.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RestoreOptions</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RestoreOptions} obj Optional instance to populate.
     * @return {module:model/RestoreOptions} The populated <code>RestoreOptions</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RestoreOptions();

            if (data.hasOwnProperty('decryptionCertBase64')) {
                obj['decryptionCertBase64'] = ApiClient.convertToType(data['decryptionCertBase64'], 'String');
            }
            if (data.hasOwnProperty('decryptionCertPassword')) {
                obj['decryptionCertPassword'] = ApiClient.convertToType(data['decryptionCertPassword'], 'String');
            }
            if (data.hasOwnProperty('roleName')) {
                obj['roleName'] = ApiClient.convertToType(data['roleName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RestoreOptions</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RestoreOptions</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['decryptionCertBase64'] && !(typeof data['decryptionCertBase64'] === 'string' || data['decryptionCertBase64'] instanceof String)) {
            throw new Error("Expected the field `decryptionCertBase64` to be a primitive type in the JSON string but got " + data['decryptionCertBase64']);
        }
        // ensure the json data is a string
        if (data['decryptionCertPassword'] && !(typeof data['decryptionCertPassword'] === 'string' || data['decryptionCertPassword'] instanceof String)) {
            throw new Error("Expected the field `decryptionCertPassword` to be a primitive type in the JSON string but got " + data['decryptionCertPassword']);
        }
        // ensure the json data is a string
        if (data['roleName'] && !(typeof data['roleName'] === 'string' || data['roleName'] instanceof String)) {
            throw new Error("Expected the field `roleName` to be a primitive type in the JSON string but got " + data['roleName']);
        }

        return true;
    }


}



/**
 * The certificate file raw data in Base64 string. This should be the .pfx file with the private key.
 * @member {String} decryptionCertBase64
 */
RestoreOptions.prototype['decryptionCertBase64'] = undefined;

/**
 * The password for the decryption certificate.
 * @member {String} decryptionCertPassword
 */
RestoreOptions.prototype['decryptionCertPassword'] = undefined;

/**
 * The Azure Stack role name for restore, set it to empty for all infrastructure role
 * @member {String} roleName
 */
RestoreOptions.prototype['roleName'] = undefined;






export default RestoreOptions;

