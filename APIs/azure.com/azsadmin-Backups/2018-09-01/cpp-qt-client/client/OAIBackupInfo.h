/**
 * BackupManagementClient
 * The Admin Backup Management Client.
 *
 * The version of the OpenAPI document: 2018-09-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBackupInfo.h
 *
 * Holds information for a backup.
 */

#ifndef OAIBackupInfo_H
#define OAIBackupInfo_H

#include <QJsonObject>

#include "OAIOperationStatus.h"
#include "OAIRoleOperationStatus.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIRoleOperationStatus;

class OAIBackupInfo : public OAIObject {
public:
    OAIBackupInfo();
    OAIBackupInfo(QString json);
    ~OAIBackupInfo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBackupDataVersion() const;
    void setBackupDataVersion(const QString &backup_data_version);
    bool is_backup_data_version_Set() const;
    bool is_backup_data_version_Valid() const;

    QDateTime getCreatedDateTime() const;
    void setCreatedDateTime(const QDateTime &created_date_time);
    bool is_created_date_time_Set() const;
    bool is_created_date_time_Valid() const;

    QString getDeploymentId() const;
    void setDeploymentId(const QString &deployment_id);
    bool is_deployment_id_Set() const;
    bool is_deployment_id_Valid() const;

    QString getEncryptionCertThumbprint() const;
    void setEncryptionCertThumbprint(const QString &encryption_cert_thumbprint);
    bool is_encryption_cert_thumbprint_Set() const;
    bool is_encryption_cert_thumbprint_Valid() const;

    bool isIsCloudRecoveryReady() const;
    void setIsCloudRecoveryReady(const bool &is_cloud_recovery_ready);
    bool is_is_cloud_recovery_ready_Set() const;
    bool is_is_cloud_recovery_ready_Valid() const;

    QString getOemVersion() const;
    void setOemVersion(const QString &oem_version);
    bool is_oem_version_Set() const;
    bool is_oem_version_Valid() const;

    QList<OAIRoleOperationStatus> getRoleStatus() const;
    void setRoleStatus(const QList<OAIRoleOperationStatus> &role_status);
    bool is_role_status_Set() const;
    bool is_role_status_Valid() const;

    QString getStampVersion() const;
    void setStampVersion(const QString &stamp_version);
    bool is_stamp_version_Set() const;
    bool is_stamp_version_Valid() const;

    OAIOperationStatus getStatus() const;
    void setStatus(const OAIOperationStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getTimeTakenToCreate() const;
    void setTimeTakenToCreate(const QString &time_taken_to_create);
    bool is_time_taken_to_create_Set() const;
    bool is_time_taken_to_create_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_backup_data_version;
    bool m_backup_data_version_isSet;
    bool m_backup_data_version_isValid;

    QDateTime m_created_date_time;
    bool m_created_date_time_isSet;
    bool m_created_date_time_isValid;

    QString m_deployment_id;
    bool m_deployment_id_isSet;
    bool m_deployment_id_isValid;

    QString m_encryption_cert_thumbprint;
    bool m_encryption_cert_thumbprint_isSet;
    bool m_encryption_cert_thumbprint_isValid;

    bool m_is_cloud_recovery_ready;
    bool m_is_cloud_recovery_ready_isSet;
    bool m_is_cloud_recovery_ready_isValid;

    QString m_oem_version;
    bool m_oem_version_isSet;
    bool m_oem_version_isValid;

    QList<OAIRoleOperationStatus> m_role_status;
    bool m_role_status_isSet;
    bool m_role_status_isValid;

    QString m_stamp_version;
    bool m_stamp_version_isSet;
    bool m_stamp_version_isValid;

    OAIOperationStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_time_taken_to_create;
    bool m_time_taken_to_create_isSet;
    bool m_time_taken_to_create_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBackupInfo)

#endif // OAIBackupInfo_H
