# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.operation_status import OperationStatus
from openapi_server.models.role_operation_status import RoleOperationStatus
from openapi_server import util


class BackupInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, backup_data_version: str=None, backup_id: str=None, created_date_time: datetime=None, deployment_id: str=None, oem_version: str=None, role_status: List[RoleOperationStatus]=None, stamp_version: str=None, status: OperationStatus=None, time_taken_to_create: str=None):
        """BackupInfo - a model defined in OpenAPI

        :param backup_data_version: The backup_data_version of this BackupInfo.
        :param backup_id: The backup_id of this BackupInfo.
        :param created_date_time: The created_date_time of this BackupInfo.
        :param deployment_id: The deployment_id of this BackupInfo.
        :param oem_version: The oem_version of this BackupInfo.
        :param role_status: The role_status of this BackupInfo.
        :param stamp_version: The stamp_version of this BackupInfo.
        :param status: The status of this BackupInfo.
        :param time_taken_to_create: The time_taken_to_create of this BackupInfo.
        """
        self.openapi_types = {
            'backup_data_version': str,
            'backup_id': str,
            'created_date_time': datetime,
            'deployment_id': str,
            'oem_version': str,
            'role_status': List[RoleOperationStatus],
            'stamp_version': str,
            'status': OperationStatus,
            'time_taken_to_create': str
        }

        self.attribute_map = {
            'backup_data_version': 'backupDataVersion',
            'backup_id': 'backupId',
            'created_date_time': 'createdDateTime',
            'deployment_id': 'deploymentID',
            'oem_version': 'oemVersion',
            'role_status': 'roleStatus',
            'stamp_version': 'stampVersion',
            'status': 'status',
            'time_taken_to_create': 'timeTakenToCreate'
        }

        self._backup_data_version = backup_data_version
        self._backup_id = backup_id
        self._created_date_time = created_date_time
        self._deployment_id = deployment_id
        self._oem_version = oem_version
        self._role_status = role_status
        self._stamp_version = stamp_version
        self._status = status
        self._time_taken_to_create = time_taken_to_create

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BackupInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BackupInfo of this BackupInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def backup_data_version(self):
        """Gets the backup_data_version of this BackupInfo.

        Version of the backup data.

        :return: The backup_data_version of this BackupInfo.
        :rtype: str
        """
        return self._backup_data_version

    @backup_data_version.setter
    def backup_data_version(self, backup_data_version):
        """Sets the backup_data_version of this BackupInfo.

        Version of the backup data.

        :param backup_data_version: The backup_data_version of this BackupInfo.
        :type backup_data_version: str
        """

        self._backup_data_version = backup_data_version

    @property
    def backup_id(self):
        """Gets the backup_id of this BackupInfo.

        Unique GUID for the backup.

        :return: The backup_id of this BackupInfo.
        :rtype: str
        """
        return self._backup_id

    @backup_id.setter
    def backup_id(self, backup_id):
        """Sets the backup_id of this BackupInfo.

        Unique GUID for the backup.

        :param backup_id: The backup_id of this BackupInfo.
        :type backup_id: str
        """

        self._backup_id = backup_id

    @property
    def created_date_time(self):
        """Gets the created_date_time of this BackupInfo.

        Creation time of the backup.

        :return: The created_date_time of this BackupInfo.
        :rtype: datetime
        """
        return self._created_date_time

    @created_date_time.setter
    def created_date_time(self, created_date_time):
        """Sets the created_date_time of this BackupInfo.

        Creation time of the backup.

        :param created_date_time: The created_date_time of this BackupInfo.
        :type created_date_time: datetime
        """

        self._created_date_time = created_date_time

    @property
    def deployment_id(self):
        """Gets the deployment_id of this BackupInfo.

        Deployment Id of the stamp.

        :return: The deployment_id of this BackupInfo.
        :rtype: str
        """
        return self._deployment_id

    @deployment_id.setter
    def deployment_id(self, deployment_id):
        """Sets the deployment_id of this BackupInfo.

        Deployment Id of the stamp.

        :param deployment_id: The deployment_id of this BackupInfo.
        :type deployment_id: str
        """

        self._deployment_id = deployment_id

    @property
    def oem_version(self):
        """Gets the oem_version of this BackupInfo.

        OEM version.

        :return: The oem_version of this BackupInfo.
        :rtype: str
        """
        return self._oem_version

    @oem_version.setter
    def oem_version(self, oem_version):
        """Sets the oem_version of this BackupInfo.

        OEM version.

        :param oem_version: The oem_version of this BackupInfo.
        :type oem_version: str
        """

        self._oem_version = oem_version

    @property
    def role_status(self):
        """Gets the role_status of this BackupInfo.

        object

        :return: The role_status of this BackupInfo.
        :rtype: List[RoleOperationStatus]
        """
        return self._role_status

    @role_status.setter
    def role_status(self, role_status):
        """Sets the role_status of this BackupInfo.

        object

        :param role_status: The role_status of this BackupInfo.
        :type role_status: List[RoleOperationStatus]
        """

        self._role_status = role_status

    @property
    def stamp_version(self):
        """Gets the stamp_version of this BackupInfo.

        Current version.

        :return: The stamp_version of this BackupInfo.
        :rtype: str
        """
        return self._stamp_version

    @stamp_version.setter
    def stamp_version(self, stamp_version):
        """Sets the stamp_version of this BackupInfo.

        Current version.

        :param stamp_version: The stamp_version of this BackupInfo.
        :type stamp_version: str
        """

        self._stamp_version = stamp_version

    @property
    def status(self):
        """Gets the status of this BackupInfo.


        :return: The status of this BackupInfo.
        :rtype: OperationStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this BackupInfo.


        :param status: The status of this BackupInfo.
        :type status: OperationStatus
        """

        self._status = status

    @property
    def time_taken_to_create(self):
        """Gets the time_taken_to_create of this BackupInfo.

        Duration to create the backup.

        :return: The time_taken_to_create of this BackupInfo.
        :rtype: str
        """
        return self._time_taken_to_create

    @time_taken_to_create.setter
    def time_taken_to_create(self, time_taken_to_create):
        """Sets the time_taken_to_create of this BackupInfo.

        Duration to create the backup.

        :param time_taken_to_create: The time_taken_to_create of this BackupInfo.
        :type time_taken_to_create: str
        """

        self._time_taken_to_create = time_taken_to_create
