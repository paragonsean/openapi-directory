/**
 * BackupManagementClient
 * The Admin Backup Management Client.
 *
 * The version of the OpenAPI document: 2016-05-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import OperationStatus from './OperationStatus';
import RoleOperationStatus from './RoleOperationStatus';

/**
 * The BackupInfo model module.
 * @module model/BackupInfo
 * @version 2016-05-01
 */
class BackupInfo {
    /**
     * Constructs a new <code>BackupInfo</code>.
     * Holds information for a backup.
     * @alias module:model/BackupInfo
     */
    constructor() { 
        
        BackupInfo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BackupInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BackupInfo} obj Optional instance to populate.
     * @return {module:model/BackupInfo} The populated <code>BackupInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BackupInfo();

            if (data.hasOwnProperty('backupDataVersion')) {
                obj['backupDataVersion'] = ApiClient.convertToType(data['backupDataVersion'], 'String');
            }
            if (data.hasOwnProperty('backupId')) {
                obj['backupId'] = ApiClient.convertToType(data['backupId'], 'String');
            }
            if (data.hasOwnProperty('createdDateTime')) {
                obj['createdDateTime'] = ApiClient.convertToType(data['createdDateTime'], 'Date');
            }
            if (data.hasOwnProperty('deploymentID')) {
                obj['deploymentID'] = ApiClient.convertToType(data['deploymentID'], 'String');
            }
            if (data.hasOwnProperty('oemVersion')) {
                obj['oemVersion'] = ApiClient.convertToType(data['oemVersion'], 'String');
            }
            if (data.hasOwnProperty('roleStatus')) {
                obj['roleStatus'] = ApiClient.convertToType(data['roleStatus'], [RoleOperationStatus]);
            }
            if (data.hasOwnProperty('stampVersion')) {
                obj['stampVersion'] = ApiClient.convertToType(data['stampVersion'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = OperationStatus.constructFromObject(data['status']);
            }
            if (data.hasOwnProperty('timeTakenToCreate')) {
                obj['timeTakenToCreate'] = ApiClient.convertToType(data['timeTakenToCreate'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BackupInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BackupInfo</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['backupDataVersion'] && !(typeof data['backupDataVersion'] === 'string' || data['backupDataVersion'] instanceof String)) {
            throw new Error("Expected the field `backupDataVersion` to be a primitive type in the JSON string but got " + data['backupDataVersion']);
        }
        // ensure the json data is a string
        if (data['backupId'] && !(typeof data['backupId'] === 'string' || data['backupId'] instanceof String)) {
            throw new Error("Expected the field `backupId` to be a primitive type in the JSON string but got " + data['backupId']);
        }
        // ensure the json data is a string
        if (data['deploymentID'] && !(typeof data['deploymentID'] === 'string' || data['deploymentID'] instanceof String)) {
            throw new Error("Expected the field `deploymentID` to be a primitive type in the JSON string but got " + data['deploymentID']);
        }
        // ensure the json data is a string
        if (data['oemVersion'] && !(typeof data['oemVersion'] === 'string' || data['oemVersion'] instanceof String)) {
            throw new Error("Expected the field `oemVersion` to be a primitive type in the JSON string but got " + data['oemVersion']);
        }
        if (data['roleStatus']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['roleStatus'])) {
                throw new Error("Expected the field `roleStatus` to be an array in the JSON data but got " + data['roleStatus']);
            }
            // validate the optional field `roleStatus` (array)
            for (const item of data['roleStatus']) {
                RoleOperationStatus.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['stampVersion'] && !(typeof data['stampVersion'] === 'string' || data['stampVersion'] instanceof String)) {
            throw new Error("Expected the field `stampVersion` to be a primitive type in the JSON string but got " + data['stampVersion']);
        }
        // ensure the json data is a string
        if (data['timeTakenToCreate'] && !(typeof data['timeTakenToCreate'] === 'string' || data['timeTakenToCreate'] instanceof String)) {
            throw new Error("Expected the field `timeTakenToCreate` to be a primitive type in the JSON string but got " + data['timeTakenToCreate']);
        }

        return true;
    }


}



/**
 * Version of the backup data.
 * @member {String} backupDataVersion
 */
BackupInfo.prototype['backupDataVersion'] = undefined;

/**
 * Unique GUID for the backup.
 * @member {String} backupId
 */
BackupInfo.prototype['backupId'] = undefined;

/**
 * Creation time of the backup.
 * @member {Date} createdDateTime
 */
BackupInfo.prototype['createdDateTime'] = undefined;

/**
 * Deployment Id of the stamp.
 * @member {String} deploymentID
 */
BackupInfo.prototype['deploymentID'] = undefined;

/**
 * OEM version.
 * @member {String} oemVersion
 */
BackupInfo.prototype['oemVersion'] = undefined;

/**
 * object
 * @member {Array.<module:model/RoleOperationStatus>} roleStatus
 */
BackupInfo.prototype['roleStatus'] = undefined;

/**
 * Current version.
 * @member {String} stampVersion
 */
BackupInfo.prototype['stampVersion'] = undefined;

/**
 * @member {module:model/OperationStatus} status
 */
BackupInfo.prototype['status'] = undefined;

/**
 * Duration to create the backup.
 * @member {String} timeTakenToCreate
 */
BackupInfo.prototype['timeTakenToCreate'] = undefined;






export default BackupInfo;

