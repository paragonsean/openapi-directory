/**
 * BackupManagementClient
 * The Admin Backup Management Client.
 *
 * The version of the OpenAPI document: 2016-05-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Backup from '../model/Backup';
import BackupList from '../model/BackupList';

/**
* Backups service.
* @module api/BackupsApi
* @version 2016-05-01
*/
export default class BackupsApi {

    /**
    * Constructs a new BackupsApi. 
    * @alias module:api/BackupsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the backupsGet operation.
     * @callback module:api/BackupsApi~backupsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Backup} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns a backup from a location based on name.
     * @param {String} subscriptionId Subscription credentials that uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroupName Name of the resource group.
     * @param {String} location Name of the backup location.
     * @param {String} backup Name of the backup.
     * @param {String} apiVersion Client API version.
     * @param {module:api/BackupsApi~backupsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Backup}
     */
    backupsGet(subscriptionId, resourceGroupName, location, backup, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling backupsGet");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling backupsGet");
      }
      // verify the required parameter 'location' is set
      if (location === undefined || location === null) {
        throw new Error("Missing the required parameter 'location' when calling backupsGet");
      }
      // verify the required parameter 'backup' is set
      if (backup === undefined || backup === null) {
        throw new Error("Missing the required parameter 'backup' when calling backupsGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling backupsGet");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'location': location,
        'backup': backup
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Backup;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Backup.Admin/backupLocations/{location}/backups/{backup}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the backupsList operation.
     * @callback module:api/BackupsApi~backupsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BackupList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns a list of backups from a location.
     * @param {String} subscriptionId Subscription credentials that uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroupName Name of the resource group.
     * @param {String} location Name of the backup location.
     * @param {String} apiVersion Client API version.
     * @param {module:api/BackupsApi~backupsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BackupList}
     */
    backupsList(subscriptionId, resourceGroupName, location, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling backupsList");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling backupsList");
      }
      // verify the required parameter 'location' is set
      if (location === undefined || location === null) {
        throw new Error("Missing the required parameter 'location' when calling backupsList");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling backupsList");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'location': location
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = BackupList;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Backup.Admin/backupLocations/{location}/backups', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the backupsRestore operation.
     * @callback module:api/BackupsApi~backupsRestoreCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Restore a backup.
     * @param {String} subscriptionId Subscription credentials that uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} location Name of the backup location.
     * @param {String} resourceGroupName Name of the resource group.
     * @param {String} backup Name of the backup.
     * @param {String} apiVersion Client API version.
     * @param {module:api/BackupsApi~backupsRestoreCallback} callback The callback function, accepting three arguments: error, data, response
     */
    backupsRestore(subscriptionId, location, resourceGroupName, backup, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling backupsRestore");
      }
      // verify the required parameter 'location' is set
      if (location === undefined || location === null) {
        throw new Error("Missing the required parameter 'location' when calling backupsRestore");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling backupsRestore");
      }
      // verify the required parameter 'backup' is set
      if (backup === undefined || backup === null) {
        throw new Error("Missing the required parameter 'backup' when calling backupsRestore");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling backupsRestore");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'location': location,
        'resourceGroupName': resourceGroupName,
        'backup': backup
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Backup.Admin/backupLocations/{location}/backups/{backup}/restore', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
