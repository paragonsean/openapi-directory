/**
 * ContainerServiceClient
 * The Container Service Client.
 *
 * The version of the OpenAPI document: 2019-04-30
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The NetworkProfile model module.
 * @module model/NetworkProfile
 * @version 2019-04-30
 */
class NetworkProfile {
    /**
     * Constructs a new <code>NetworkProfile</code>.
     * Represents the OpenShift networking configuration
     * @alias module:model/NetworkProfile
     */
    constructor() { 
        
        NetworkProfile.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
        obj['vnetCidr'] = '10.0.0.0/8';
    }

    /**
     * Constructs a <code>NetworkProfile</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/NetworkProfile} obj Optional instance to populate.
     * @return {module:model/NetworkProfile} The populated <code>NetworkProfile</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NetworkProfile();

            if (data.hasOwnProperty('peerVnetId')) {
                obj['peerVnetId'] = ApiClient.convertToType(data['peerVnetId'], 'String');
            }
            if (data.hasOwnProperty('vnetCidr')) {
                obj['vnetCidr'] = ApiClient.convertToType(data['vnetCidr'], 'String');
            }
            if (data.hasOwnProperty('vnetId')) {
                obj['vnetId'] = ApiClient.convertToType(data['vnetId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>NetworkProfile</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>NetworkProfile</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['peerVnetId'] && !(typeof data['peerVnetId'] === 'string' || data['peerVnetId'] instanceof String)) {
            throw new Error("Expected the field `peerVnetId` to be a primitive type in the JSON string but got " + data['peerVnetId']);
        }
        // ensure the json data is a string
        if (data['vnetCidr'] && !(typeof data['vnetCidr'] === 'string' || data['vnetCidr'] instanceof String)) {
            throw new Error("Expected the field `vnetCidr` to be a primitive type in the JSON string but got " + data['vnetCidr']);
        }
        // ensure the json data is a string
        if (data['vnetId'] && !(typeof data['vnetId'] === 'string' || data['vnetId'] instanceof String)) {
            throw new Error("Expected the field `vnetId` to be a primitive type in the JSON string but got " + data['vnetId']);
        }

        return true;
    }


}



/**
 * CIDR of the Vnet to peer.
 * @member {String} peerVnetId
 */
NetworkProfile.prototype['peerVnetId'] = undefined;

/**
 * CIDR for the OpenShift Vnet.
 * @member {String} vnetCidr
 * @default '10.0.0.0/8'
 */
NetworkProfile.prototype['vnetCidr'] = '10.0.0.0/8';

/**
 * ID of the Vnet created for OSA cluster.
 * @member {String} vnetId
 */
NetworkProfile.prototype['vnetId'] = undefined;






export default NetworkProfile;

