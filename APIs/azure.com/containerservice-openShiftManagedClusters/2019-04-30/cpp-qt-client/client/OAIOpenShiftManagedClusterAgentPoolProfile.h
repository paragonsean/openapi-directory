/**
 * ContainerServiceClient
 * The Container Service Client.
 *
 * The version of the OpenAPI document: 2019-04-30
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOpenShiftManagedClusterAgentPoolProfile.h
 *
 * Defines the configuration of the OpenShift cluster VMs.
 */

#ifndef OAIOpenShiftManagedClusterAgentPoolProfile_H
#define OAIOpenShiftManagedClusterAgentPoolProfile_H

#include <QJsonObject>

#include "OAIOSType.h"
#include "OAIOpenShiftAgentPoolProfileRole.h"
#include "OAIOpenShiftContainerServiceVMSize.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIOpenShiftManagedClusterAgentPoolProfile : public OAIObject {
public:
    OAIOpenShiftManagedClusterAgentPoolProfile();
    OAIOpenShiftManagedClusterAgentPoolProfile(QString json);
    ~OAIOpenShiftManagedClusterAgentPoolProfile() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getCount() const;
    void setCount(const qint32 &count);
    bool is_count_Set() const;
    bool is_count_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAIOSType getOsType() const;
    void setOsType(const OAIOSType &os_type);
    bool is_os_type_Set() const;
    bool is_os_type_Valid() const;

    OAIOpenShiftAgentPoolProfileRole getRole() const;
    void setRole(const OAIOpenShiftAgentPoolProfileRole &role);
    bool is_role_Set() const;
    bool is_role_Valid() const;

    QString getSubnetCidr() const;
    void setSubnetCidr(const QString &subnet_cidr);
    bool is_subnet_cidr_Set() const;
    bool is_subnet_cidr_Valid() const;

    OAIOpenShiftContainerServiceVMSize getVmSize() const;
    void setVmSize(const OAIOpenShiftContainerServiceVMSize &vm_size);
    bool is_vm_size_Set() const;
    bool is_vm_size_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_count;
    bool m_count_isSet;
    bool m_count_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAIOSType m_os_type;
    bool m_os_type_isSet;
    bool m_os_type_isValid;

    OAIOpenShiftAgentPoolProfileRole m_role;
    bool m_role_isSet;
    bool m_role_isValid;

    QString m_subnet_cidr;
    bool m_subnet_cidr_isSet;
    bool m_subnet_cidr_isValid;

    OAIOpenShiftContainerServiceVMSize m_vm_size;
    bool m_vm_size_isSet;
    bool m_vm_size_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIOpenShiftManagedClusterAgentPoolProfile)

#endif // OAIOpenShiftManagedClusterAgentPoolProfile_H
