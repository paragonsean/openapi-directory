/*
 * ContainerServiceClient
 * The Container Service Client.
 *
 * The version of the OpenAPI document: 2019-09-30-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.CloudError;
import org.openapitools.client.model.OpenShiftManagedCluster;
import org.openapitools.client.model.OpenShiftManagedClusterListResult;
import org.openapitools.client.model.TagsObject;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class OpenShiftManagedClustersApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public OpenShiftManagedClustersApi() {
        this(Configuration.getDefaultApiClient());
    }

    public OpenShiftManagedClustersApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for openShiftManagedClustersCreateOrUpdate
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param resourceName The name of the OpenShift managed cluster resource. (required)
     * @param parameters Parameters supplied to the Create or Update an OpenShift Managed Cluster operation. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Created </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. If the cluster doesn&#39;t exist, 404 (Not found) is returned.If any of the input parameters is wrong, 400(Bad Request) is returned. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call openShiftManagedClustersCreateOrUpdateCall(String apiVersion, String subscriptionId, String resourceGroupName, String resourceName, OpenShiftManagedCluster parameters, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = parameters;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/openShiftManagedClusters/{resourceName}"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "resourceName" + "}", localVarApiClient.escapeString(resourceName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call openShiftManagedClustersCreateOrUpdateValidateBeforeCall(String apiVersion, String subscriptionId, String resourceGroupName, String resourceName, OpenShiftManagedCluster parameters, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling openShiftManagedClustersCreateOrUpdate(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling openShiftManagedClustersCreateOrUpdate(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling openShiftManagedClustersCreateOrUpdate(Async)");
        }

        // verify the required parameter 'resourceName' is set
        if (resourceName == null) {
            throw new ApiException("Missing the required parameter 'resourceName' when calling openShiftManagedClustersCreateOrUpdate(Async)");
        }

        // verify the required parameter 'parameters' is set
        if (parameters == null) {
            throw new ApiException("Missing the required parameter 'parameters' when calling openShiftManagedClustersCreateOrUpdate(Async)");
        }

        return openShiftManagedClustersCreateOrUpdateCall(apiVersion, subscriptionId, resourceGroupName, resourceName, parameters, _callback);

    }

    /**
     * Creates or updates an OpenShift managed cluster.
     * Creates or updates a OpenShift managed cluster with the specified configuration for agents and OpenShift version.
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param resourceName The name of the OpenShift managed cluster resource. (required)
     * @param parameters Parameters supplied to the Create or Update an OpenShift Managed Cluster operation. (required)
     * @return OpenShiftManagedCluster
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Created </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. If the cluster doesn&#39;t exist, 404 (Not found) is returned.If any of the input parameters is wrong, 400(Bad Request) is returned. </td><td>  -  </td></tr>
     </table>
     */
    public OpenShiftManagedCluster openShiftManagedClustersCreateOrUpdate(String apiVersion, String subscriptionId, String resourceGroupName, String resourceName, OpenShiftManagedCluster parameters) throws ApiException {
        ApiResponse<OpenShiftManagedCluster> localVarResp = openShiftManagedClustersCreateOrUpdateWithHttpInfo(apiVersion, subscriptionId, resourceGroupName, resourceName, parameters);
        return localVarResp.getData();
    }

    /**
     * Creates or updates an OpenShift managed cluster.
     * Creates or updates a OpenShift managed cluster with the specified configuration for agents and OpenShift version.
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param resourceName The name of the OpenShift managed cluster resource. (required)
     * @param parameters Parameters supplied to the Create or Update an OpenShift Managed Cluster operation. (required)
     * @return ApiResponse&lt;OpenShiftManagedCluster&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Created </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. If the cluster doesn&#39;t exist, 404 (Not found) is returned.If any of the input parameters is wrong, 400(Bad Request) is returned. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<OpenShiftManagedCluster> openShiftManagedClustersCreateOrUpdateWithHttpInfo(String apiVersion, String subscriptionId, String resourceGroupName, String resourceName, OpenShiftManagedCluster parameters) throws ApiException {
        okhttp3.Call localVarCall = openShiftManagedClustersCreateOrUpdateValidateBeforeCall(apiVersion, subscriptionId, resourceGroupName, resourceName, parameters, null);
        Type localVarReturnType = new TypeToken<OpenShiftManagedCluster>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Creates or updates an OpenShift managed cluster. (asynchronously)
     * Creates or updates a OpenShift managed cluster with the specified configuration for agents and OpenShift version.
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param resourceName The name of the OpenShift managed cluster resource. (required)
     * @param parameters Parameters supplied to the Create or Update an OpenShift Managed Cluster operation. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Created </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. If the cluster doesn&#39;t exist, 404 (Not found) is returned.If any of the input parameters is wrong, 400(Bad Request) is returned. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call openShiftManagedClustersCreateOrUpdateAsync(String apiVersion, String subscriptionId, String resourceGroupName, String resourceName, OpenShiftManagedCluster parameters, final ApiCallback<OpenShiftManagedCluster> _callback) throws ApiException {

        okhttp3.Call localVarCall = openShiftManagedClustersCreateOrUpdateValidateBeforeCall(apiVersion, subscriptionId, resourceGroupName, resourceName, parameters, _callback);
        Type localVarReturnType = new TypeToken<OpenShiftManagedCluster>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for openShiftManagedClustersDelete
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param resourceName The name of the OpenShift managed cluster resource. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> NoContent </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call openShiftManagedClustersDeleteCall(String apiVersion, String subscriptionId, String resourceGroupName, String resourceName, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/openShiftManagedClusters/{resourceName}"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "resourceName" + "}", localVarApiClient.escapeString(resourceName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call openShiftManagedClustersDeleteValidateBeforeCall(String apiVersion, String subscriptionId, String resourceGroupName, String resourceName, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling openShiftManagedClustersDelete(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling openShiftManagedClustersDelete(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling openShiftManagedClustersDelete(Async)");
        }

        // verify the required parameter 'resourceName' is set
        if (resourceName == null) {
            throw new ApiException("Missing the required parameter 'resourceName' when calling openShiftManagedClustersDelete(Async)");
        }

        return openShiftManagedClustersDeleteCall(apiVersion, subscriptionId, resourceGroupName, resourceName, _callback);

    }

    /**
     * Deletes an OpenShift managed cluster.
     * Deletes the OpenShift managed cluster with a specified resource group and name.
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param resourceName The name of the OpenShift managed cluster resource. (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> NoContent </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public void openShiftManagedClustersDelete(String apiVersion, String subscriptionId, String resourceGroupName, String resourceName) throws ApiException {
        openShiftManagedClustersDeleteWithHttpInfo(apiVersion, subscriptionId, resourceGroupName, resourceName);
    }

    /**
     * Deletes an OpenShift managed cluster.
     * Deletes the OpenShift managed cluster with a specified resource group and name.
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param resourceName The name of the OpenShift managed cluster resource. (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> NoContent </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> openShiftManagedClustersDeleteWithHttpInfo(String apiVersion, String subscriptionId, String resourceGroupName, String resourceName) throws ApiException {
        okhttp3.Call localVarCall = openShiftManagedClustersDeleteValidateBeforeCall(apiVersion, subscriptionId, resourceGroupName, resourceName, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     * Deletes an OpenShift managed cluster. (asynchronously)
     * Deletes the OpenShift managed cluster with a specified resource group and name.
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param resourceName The name of the OpenShift managed cluster resource. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> NoContent </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call openShiftManagedClustersDeleteAsync(String apiVersion, String subscriptionId, String resourceGroupName, String resourceName, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = openShiftManagedClustersDeleteValidateBeforeCall(apiVersion, subscriptionId, resourceGroupName, resourceName, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for openShiftManagedClustersGet
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param resourceName The name of the OpenShift managed cluster resource. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. If the cluster doesn&#39;t exist, 404 (Not found) is returned. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call openShiftManagedClustersGetCall(String apiVersion, String subscriptionId, String resourceGroupName, String resourceName, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/openShiftManagedClusters/{resourceName}"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "resourceName" + "}", localVarApiClient.escapeString(resourceName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call openShiftManagedClustersGetValidateBeforeCall(String apiVersion, String subscriptionId, String resourceGroupName, String resourceName, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling openShiftManagedClustersGet(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling openShiftManagedClustersGet(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling openShiftManagedClustersGet(Async)");
        }

        // verify the required parameter 'resourceName' is set
        if (resourceName == null) {
            throw new ApiException("Missing the required parameter 'resourceName' when calling openShiftManagedClustersGet(Async)");
        }

        return openShiftManagedClustersGetCall(apiVersion, subscriptionId, resourceGroupName, resourceName, _callback);

    }

    /**
     * Gets a OpenShift managed cluster.
     * Gets the details of the managed OpenShift cluster with a specified resource group and name.
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param resourceName The name of the OpenShift managed cluster resource. (required)
     * @return OpenShiftManagedCluster
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. If the cluster doesn&#39;t exist, 404 (Not found) is returned. </td><td>  -  </td></tr>
     </table>
     */
    public OpenShiftManagedCluster openShiftManagedClustersGet(String apiVersion, String subscriptionId, String resourceGroupName, String resourceName) throws ApiException {
        ApiResponse<OpenShiftManagedCluster> localVarResp = openShiftManagedClustersGetWithHttpInfo(apiVersion, subscriptionId, resourceGroupName, resourceName);
        return localVarResp.getData();
    }

    /**
     * Gets a OpenShift managed cluster.
     * Gets the details of the managed OpenShift cluster with a specified resource group and name.
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param resourceName The name of the OpenShift managed cluster resource. (required)
     * @return ApiResponse&lt;OpenShiftManagedCluster&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. If the cluster doesn&#39;t exist, 404 (Not found) is returned. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<OpenShiftManagedCluster> openShiftManagedClustersGetWithHttpInfo(String apiVersion, String subscriptionId, String resourceGroupName, String resourceName) throws ApiException {
        okhttp3.Call localVarCall = openShiftManagedClustersGetValidateBeforeCall(apiVersion, subscriptionId, resourceGroupName, resourceName, null);
        Type localVarReturnType = new TypeToken<OpenShiftManagedCluster>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Gets a OpenShift managed cluster. (asynchronously)
     * Gets the details of the managed OpenShift cluster with a specified resource group and name.
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param resourceName The name of the OpenShift managed cluster resource. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. If the cluster doesn&#39;t exist, 404 (Not found) is returned. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call openShiftManagedClustersGetAsync(String apiVersion, String subscriptionId, String resourceGroupName, String resourceName, final ApiCallback<OpenShiftManagedCluster> _callback) throws ApiException {

        okhttp3.Call localVarCall = openShiftManagedClustersGetValidateBeforeCall(apiVersion, subscriptionId, resourceGroupName, resourceName, _callback);
        Type localVarReturnType = new TypeToken<OpenShiftManagedCluster>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for openShiftManagedClustersList
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call openShiftManagedClustersListCall(String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/providers/Microsoft.ContainerService/openShiftManagedClusters"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call openShiftManagedClustersListValidateBeforeCall(String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling openShiftManagedClustersList(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling openShiftManagedClustersList(Async)");
        }

        return openShiftManagedClustersListCall(apiVersion, subscriptionId, _callback);

    }

    /**
     * Gets a list of OpenShift managed clusters in the specified subscription.
     * Gets a list of OpenShift managed clusters in the specified subscription. The operation returns properties of each OpenShift managed cluster.
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @return OpenShiftManagedClusterListResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public OpenShiftManagedClusterListResult openShiftManagedClustersList(String apiVersion, String subscriptionId) throws ApiException {
        ApiResponse<OpenShiftManagedClusterListResult> localVarResp = openShiftManagedClustersListWithHttpInfo(apiVersion, subscriptionId);
        return localVarResp.getData();
    }

    /**
     * Gets a list of OpenShift managed clusters in the specified subscription.
     * Gets a list of OpenShift managed clusters in the specified subscription. The operation returns properties of each OpenShift managed cluster.
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @return ApiResponse&lt;OpenShiftManagedClusterListResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<OpenShiftManagedClusterListResult> openShiftManagedClustersListWithHttpInfo(String apiVersion, String subscriptionId) throws ApiException {
        okhttp3.Call localVarCall = openShiftManagedClustersListValidateBeforeCall(apiVersion, subscriptionId, null);
        Type localVarReturnType = new TypeToken<OpenShiftManagedClusterListResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Gets a list of OpenShift managed clusters in the specified subscription. (asynchronously)
     * Gets a list of OpenShift managed clusters in the specified subscription. The operation returns properties of each OpenShift managed cluster.
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call openShiftManagedClustersListAsync(String apiVersion, String subscriptionId, final ApiCallback<OpenShiftManagedClusterListResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = openShiftManagedClustersListValidateBeforeCall(apiVersion, subscriptionId, _callback);
        Type localVarReturnType = new TypeToken<OpenShiftManagedClusterListResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for openShiftManagedClustersListByResourceGroup
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call openShiftManagedClustersListByResourceGroupCall(String apiVersion, String subscriptionId, String resourceGroupName, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/openShiftManagedClusters"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call openShiftManagedClustersListByResourceGroupValidateBeforeCall(String apiVersion, String subscriptionId, String resourceGroupName, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling openShiftManagedClustersListByResourceGroup(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling openShiftManagedClustersListByResourceGroup(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling openShiftManagedClustersListByResourceGroup(Async)");
        }

        return openShiftManagedClustersListByResourceGroupCall(apiVersion, subscriptionId, resourceGroupName, _callback);

    }

    /**
     * Lists OpenShift managed clusters in the specified subscription and resource group.
     * Lists OpenShift managed clusters in the specified subscription and resource group. The operation returns properties of each OpenShift managed cluster.
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @return OpenShiftManagedClusterListResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public OpenShiftManagedClusterListResult openShiftManagedClustersListByResourceGroup(String apiVersion, String subscriptionId, String resourceGroupName) throws ApiException {
        ApiResponse<OpenShiftManagedClusterListResult> localVarResp = openShiftManagedClustersListByResourceGroupWithHttpInfo(apiVersion, subscriptionId, resourceGroupName);
        return localVarResp.getData();
    }

    /**
     * Lists OpenShift managed clusters in the specified subscription and resource group.
     * Lists OpenShift managed clusters in the specified subscription and resource group. The operation returns properties of each OpenShift managed cluster.
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @return ApiResponse&lt;OpenShiftManagedClusterListResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<OpenShiftManagedClusterListResult> openShiftManagedClustersListByResourceGroupWithHttpInfo(String apiVersion, String subscriptionId, String resourceGroupName) throws ApiException {
        okhttp3.Call localVarCall = openShiftManagedClustersListByResourceGroupValidateBeforeCall(apiVersion, subscriptionId, resourceGroupName, null);
        Type localVarReturnType = new TypeToken<OpenShiftManagedClusterListResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Lists OpenShift managed clusters in the specified subscription and resource group. (asynchronously)
     * Lists OpenShift managed clusters in the specified subscription and resource group. The operation returns properties of each OpenShift managed cluster.
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call openShiftManagedClustersListByResourceGroupAsync(String apiVersion, String subscriptionId, String resourceGroupName, final ApiCallback<OpenShiftManagedClusterListResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = openShiftManagedClustersListByResourceGroupValidateBeforeCall(apiVersion, subscriptionId, resourceGroupName, _callback);
        Type localVarReturnType = new TypeToken<OpenShiftManagedClusterListResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for openShiftManagedClustersUpdateTags
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param resourceName The name of the OpenShift managed cluster resource. (required)
     * @param parameters Parameters supplied to the Update OpenShift Managed Cluster Tags operation. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. If the cluster doesn&#39;t exist, 404 (Not found) is returned. If any of the input parameters is wrong, 400(Bad Request) is returned. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call openShiftManagedClustersUpdateTagsCall(String apiVersion, String subscriptionId, String resourceGroupName, String resourceName, TagsObject parameters, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = parameters;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/openShiftManagedClusters/{resourceName}"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "resourceName" + "}", localVarApiClient.escapeString(resourceName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PATCH", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call openShiftManagedClustersUpdateTagsValidateBeforeCall(String apiVersion, String subscriptionId, String resourceGroupName, String resourceName, TagsObject parameters, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling openShiftManagedClustersUpdateTags(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling openShiftManagedClustersUpdateTags(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling openShiftManagedClustersUpdateTags(Async)");
        }

        // verify the required parameter 'resourceName' is set
        if (resourceName == null) {
            throw new ApiException("Missing the required parameter 'resourceName' when calling openShiftManagedClustersUpdateTags(Async)");
        }

        // verify the required parameter 'parameters' is set
        if (parameters == null) {
            throw new ApiException("Missing the required parameter 'parameters' when calling openShiftManagedClustersUpdateTags(Async)");
        }

        return openShiftManagedClustersUpdateTagsCall(apiVersion, subscriptionId, resourceGroupName, resourceName, parameters, _callback);

    }

    /**
     * Updates tags on an OpenShift managed cluster.
     * Updates an OpenShift managed cluster with the specified tags.
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param resourceName The name of the OpenShift managed cluster resource. (required)
     * @param parameters Parameters supplied to the Update OpenShift Managed Cluster Tags operation. (required)
     * @return OpenShiftManagedCluster
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. If the cluster doesn&#39;t exist, 404 (Not found) is returned. If any of the input parameters is wrong, 400(Bad Request) is returned. </td><td>  -  </td></tr>
     </table>
     */
    public OpenShiftManagedCluster openShiftManagedClustersUpdateTags(String apiVersion, String subscriptionId, String resourceGroupName, String resourceName, TagsObject parameters) throws ApiException {
        ApiResponse<OpenShiftManagedCluster> localVarResp = openShiftManagedClustersUpdateTagsWithHttpInfo(apiVersion, subscriptionId, resourceGroupName, resourceName, parameters);
        return localVarResp.getData();
    }

    /**
     * Updates tags on an OpenShift managed cluster.
     * Updates an OpenShift managed cluster with the specified tags.
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param resourceName The name of the OpenShift managed cluster resource. (required)
     * @param parameters Parameters supplied to the Update OpenShift Managed Cluster Tags operation. (required)
     * @return ApiResponse&lt;OpenShiftManagedCluster&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. If the cluster doesn&#39;t exist, 404 (Not found) is returned. If any of the input parameters is wrong, 400(Bad Request) is returned. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<OpenShiftManagedCluster> openShiftManagedClustersUpdateTagsWithHttpInfo(String apiVersion, String subscriptionId, String resourceGroupName, String resourceName, TagsObject parameters) throws ApiException {
        okhttp3.Call localVarCall = openShiftManagedClustersUpdateTagsValidateBeforeCall(apiVersion, subscriptionId, resourceGroupName, resourceName, parameters, null);
        Type localVarReturnType = new TypeToken<OpenShiftManagedCluster>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Updates tags on an OpenShift managed cluster. (asynchronously)
     * Updates an OpenShift managed cluster with the specified tags.
     * @param apiVersion Client Api Version. (required)
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param resourceName The name of the OpenShift managed cluster resource. (required)
     * @param parameters Parameters supplied to the Update OpenShift Managed Cluster Tags operation. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. If the cluster doesn&#39;t exist, 404 (Not found) is returned. If any of the input parameters is wrong, 400(Bad Request) is returned. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call openShiftManagedClustersUpdateTagsAsync(String apiVersion, String subscriptionId, String resourceGroupName, String resourceName, TagsObject parameters, final ApiCallback<OpenShiftManagedCluster> _callback) throws ApiException {

        okhttp3.Call localVarCall = openShiftManagedClustersUpdateTagsValidateBeforeCall(apiVersion, subscriptionId, resourceGroupName, resourceName, parameters, _callback);
        Type localVarReturnType = new TypeToken<OpenShiftManagedCluster>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
