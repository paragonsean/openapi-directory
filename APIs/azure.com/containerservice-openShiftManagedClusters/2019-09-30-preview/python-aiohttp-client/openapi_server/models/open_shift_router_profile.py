# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class OpenShiftRouterProfile(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, fqdn: str=None, name: str=None, public_subdomain: str=None):
        """OpenShiftRouterProfile - a model defined in OpenAPI

        :param fqdn: The fqdn of this OpenShiftRouterProfile.
        :param name: The name of this OpenShiftRouterProfile.
        :param public_subdomain: The public_subdomain of this OpenShiftRouterProfile.
        """
        self.openapi_types = {
            'fqdn': str,
            'name': str,
            'public_subdomain': str
        }

        self.attribute_map = {
            'fqdn': 'fqdn',
            'name': 'name',
            'public_subdomain': 'publicSubdomain'
        }

        self._fqdn = fqdn
        self._name = name
        self._public_subdomain = public_subdomain

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OpenShiftRouterProfile':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OpenShiftRouterProfile of this OpenShiftRouterProfile.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def fqdn(self):
        """Gets the fqdn of this OpenShiftRouterProfile.

        Auto-allocated FQDN for the OpenShift router.

        :return: The fqdn of this OpenShiftRouterProfile.
        :rtype: str
        """
        return self._fqdn

    @fqdn.setter
    def fqdn(self, fqdn):
        """Sets the fqdn of this OpenShiftRouterProfile.

        Auto-allocated FQDN for the OpenShift router.

        :param fqdn: The fqdn of this OpenShiftRouterProfile.
        :type fqdn: str
        """

        self._fqdn = fqdn

    @property
    def name(self):
        """Gets the name of this OpenShiftRouterProfile.

        Name of the router profile.

        :return: The name of this OpenShiftRouterProfile.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this OpenShiftRouterProfile.

        Name of the router profile.

        :param name: The name of this OpenShiftRouterProfile.
        :type name: str
        """

        self._name = name

    @property
    def public_subdomain(self):
        """Gets the public_subdomain of this OpenShiftRouterProfile.

        DNS subdomain for OpenShift router.

        :return: The public_subdomain of this OpenShiftRouterProfile.
        :rtype: str
        """
        return self._public_subdomain

    @public_subdomain.setter
    def public_subdomain(self, public_subdomain):
        """Sets the public_subdomain of this OpenShiftRouterProfile.

        DNS subdomain for OpenShift router.

        :param public_subdomain: The public_subdomain of this OpenShiftRouterProfile.
        :type public_subdomain: str
        """

        self._public_subdomain = public_subdomain
