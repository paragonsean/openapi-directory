# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.network_profile import NetworkProfile
from openapi_server.models.open_shift_managed_cluster_agent_pool_profile import OpenShiftManagedClusterAgentPoolProfile
from openapi_server.models.open_shift_managed_cluster_auth_profile import OpenShiftManagedClusterAuthProfile
from openapi_server.models.open_shift_managed_cluster_master_pool_profile import OpenShiftManagedClusterMasterPoolProfile
from openapi_server.models.open_shift_managed_cluster_monitor_profile import OpenShiftManagedClusterMonitorProfile
from openapi_server.models.open_shift_router_profile import OpenShiftRouterProfile
from openapi_server import util


class OpenShiftManagedClusterProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, agent_pool_profiles: List[OpenShiftManagedClusterAgentPoolProfile]=None, auth_profile: OpenShiftManagedClusterAuthProfile=None, cluster_version: str=None, fqdn: str=None, master_pool_profile: OpenShiftManagedClusterMasterPoolProfile=None, monitor_profile: OpenShiftManagedClusterMonitorProfile=None, network_profile: NetworkProfile=None, open_shift_version: str=None, provisioning_state: str=None, public_hostname: str=None, router_profiles: List[OpenShiftRouterProfile]=None):
        """OpenShiftManagedClusterProperties - a model defined in OpenAPI

        :param agent_pool_profiles: The agent_pool_profiles of this OpenShiftManagedClusterProperties.
        :param auth_profile: The auth_profile of this OpenShiftManagedClusterProperties.
        :param cluster_version: The cluster_version of this OpenShiftManagedClusterProperties.
        :param fqdn: The fqdn of this OpenShiftManagedClusterProperties.
        :param master_pool_profile: The master_pool_profile of this OpenShiftManagedClusterProperties.
        :param monitor_profile: The monitor_profile of this OpenShiftManagedClusterProperties.
        :param network_profile: The network_profile of this OpenShiftManagedClusterProperties.
        :param open_shift_version: The open_shift_version of this OpenShiftManagedClusterProperties.
        :param provisioning_state: The provisioning_state of this OpenShiftManagedClusterProperties.
        :param public_hostname: The public_hostname of this OpenShiftManagedClusterProperties.
        :param router_profiles: The router_profiles of this OpenShiftManagedClusterProperties.
        """
        self.openapi_types = {
            'agent_pool_profiles': List[OpenShiftManagedClusterAgentPoolProfile],
            'auth_profile': OpenShiftManagedClusterAuthProfile,
            'cluster_version': str,
            'fqdn': str,
            'master_pool_profile': OpenShiftManagedClusterMasterPoolProfile,
            'monitor_profile': OpenShiftManagedClusterMonitorProfile,
            'network_profile': NetworkProfile,
            'open_shift_version': str,
            'provisioning_state': str,
            'public_hostname': str,
            'router_profiles': List[OpenShiftRouterProfile]
        }

        self.attribute_map = {
            'agent_pool_profiles': 'agentPoolProfiles',
            'auth_profile': 'authProfile',
            'cluster_version': 'clusterVersion',
            'fqdn': 'fqdn',
            'master_pool_profile': 'masterPoolProfile',
            'monitor_profile': 'monitorProfile',
            'network_profile': 'networkProfile',
            'open_shift_version': 'openShiftVersion',
            'provisioning_state': 'provisioningState',
            'public_hostname': 'publicHostname',
            'router_profiles': 'routerProfiles'
        }

        self._agent_pool_profiles = agent_pool_profiles
        self._auth_profile = auth_profile
        self._cluster_version = cluster_version
        self._fqdn = fqdn
        self._master_pool_profile = master_pool_profile
        self._monitor_profile = monitor_profile
        self._network_profile = network_profile
        self._open_shift_version = open_shift_version
        self._provisioning_state = provisioning_state
        self._public_hostname = public_hostname
        self._router_profiles = router_profiles

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OpenShiftManagedClusterProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OpenShiftManagedClusterProperties of this OpenShiftManagedClusterProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def agent_pool_profiles(self):
        """Gets the agent_pool_profiles of this OpenShiftManagedClusterProperties.

        Configuration of OpenShift cluster VMs.

        :return: The agent_pool_profiles of this OpenShiftManagedClusterProperties.
        :rtype: List[OpenShiftManagedClusterAgentPoolProfile]
        """
        return self._agent_pool_profiles

    @agent_pool_profiles.setter
    def agent_pool_profiles(self, agent_pool_profiles):
        """Sets the agent_pool_profiles of this OpenShiftManagedClusterProperties.

        Configuration of OpenShift cluster VMs.

        :param agent_pool_profiles: The agent_pool_profiles of this OpenShiftManagedClusterProperties.
        :type agent_pool_profiles: List[OpenShiftManagedClusterAgentPoolProfile]
        """

        self._agent_pool_profiles = agent_pool_profiles

    @property
    def auth_profile(self):
        """Gets the auth_profile of this OpenShiftManagedClusterProperties.


        :return: The auth_profile of this OpenShiftManagedClusterProperties.
        :rtype: OpenShiftManagedClusterAuthProfile
        """
        return self._auth_profile

    @auth_profile.setter
    def auth_profile(self, auth_profile):
        """Sets the auth_profile of this OpenShiftManagedClusterProperties.


        :param auth_profile: The auth_profile of this OpenShiftManagedClusterProperties.
        :type auth_profile: OpenShiftManagedClusterAuthProfile
        """

        self._auth_profile = auth_profile

    @property
    def cluster_version(self):
        """Gets the cluster_version of this OpenShiftManagedClusterProperties.

        Version of OpenShift specified when creating the cluster.

        :return: The cluster_version of this OpenShiftManagedClusterProperties.
        :rtype: str
        """
        return self._cluster_version

    @cluster_version.setter
    def cluster_version(self, cluster_version):
        """Sets the cluster_version of this OpenShiftManagedClusterProperties.

        Version of OpenShift specified when creating the cluster.

        :param cluster_version: The cluster_version of this OpenShiftManagedClusterProperties.
        :type cluster_version: str
        """

        self._cluster_version = cluster_version

    @property
    def fqdn(self):
        """Gets the fqdn of this OpenShiftManagedClusterProperties.

        Service generated FQDN for OpenShift API server loadbalancer internal hostname.

        :return: The fqdn of this OpenShiftManagedClusterProperties.
        :rtype: str
        """
        return self._fqdn

    @fqdn.setter
    def fqdn(self, fqdn):
        """Sets the fqdn of this OpenShiftManagedClusterProperties.

        Service generated FQDN for OpenShift API server loadbalancer internal hostname.

        :param fqdn: The fqdn of this OpenShiftManagedClusterProperties.
        :type fqdn: str
        """

        self._fqdn = fqdn

    @property
    def master_pool_profile(self):
        """Gets the master_pool_profile of this OpenShiftManagedClusterProperties.


        :return: The master_pool_profile of this OpenShiftManagedClusterProperties.
        :rtype: OpenShiftManagedClusterMasterPoolProfile
        """
        return self._master_pool_profile

    @master_pool_profile.setter
    def master_pool_profile(self, master_pool_profile):
        """Sets the master_pool_profile of this OpenShiftManagedClusterProperties.


        :param master_pool_profile: The master_pool_profile of this OpenShiftManagedClusterProperties.
        :type master_pool_profile: OpenShiftManagedClusterMasterPoolProfile
        """

        self._master_pool_profile = master_pool_profile

    @property
    def monitor_profile(self):
        """Gets the monitor_profile of this OpenShiftManagedClusterProperties.


        :return: The monitor_profile of this OpenShiftManagedClusterProperties.
        :rtype: OpenShiftManagedClusterMonitorProfile
        """
        return self._monitor_profile

    @monitor_profile.setter
    def monitor_profile(self, monitor_profile):
        """Sets the monitor_profile of this OpenShiftManagedClusterProperties.


        :param monitor_profile: The monitor_profile of this OpenShiftManagedClusterProperties.
        :type monitor_profile: OpenShiftManagedClusterMonitorProfile
        """

        self._monitor_profile = monitor_profile

    @property
    def network_profile(self):
        """Gets the network_profile of this OpenShiftManagedClusterProperties.


        :return: The network_profile of this OpenShiftManagedClusterProperties.
        :rtype: NetworkProfile
        """
        return self._network_profile

    @network_profile.setter
    def network_profile(self, network_profile):
        """Sets the network_profile of this OpenShiftManagedClusterProperties.


        :param network_profile: The network_profile of this OpenShiftManagedClusterProperties.
        :type network_profile: NetworkProfile
        """

        self._network_profile = network_profile

    @property
    def open_shift_version(self):
        """Gets the open_shift_version of this OpenShiftManagedClusterProperties.

        Version of OpenShift specified when creating the cluster.

        :return: The open_shift_version of this OpenShiftManagedClusterProperties.
        :rtype: str
        """
        return self._open_shift_version

    @open_shift_version.setter
    def open_shift_version(self, open_shift_version):
        """Sets the open_shift_version of this OpenShiftManagedClusterProperties.

        Version of OpenShift specified when creating the cluster.

        :param open_shift_version: The open_shift_version of this OpenShiftManagedClusterProperties.
        :type open_shift_version: str
        """
        if open_shift_version is None:
            raise ValueError("Invalid value for `open_shift_version`, must not be `None`")

        self._open_shift_version = open_shift_version

    @property
    def provisioning_state(self):
        """Gets the provisioning_state of this OpenShiftManagedClusterProperties.

        The current deployment or provisioning state, which only appears in the response.

        :return: The provisioning_state of this OpenShiftManagedClusterProperties.
        :rtype: str
        """
        return self._provisioning_state

    @provisioning_state.setter
    def provisioning_state(self, provisioning_state):
        """Sets the provisioning_state of this OpenShiftManagedClusterProperties.

        The current deployment or provisioning state, which only appears in the response.

        :param provisioning_state: The provisioning_state of this OpenShiftManagedClusterProperties.
        :type provisioning_state: str
        """

        self._provisioning_state = provisioning_state

    @property
    def public_hostname(self):
        """Gets the public_hostname of this OpenShiftManagedClusterProperties.

        Service generated FQDN for OpenShift API server.

        :return: The public_hostname of this OpenShiftManagedClusterProperties.
        :rtype: str
        """
        return self._public_hostname

    @public_hostname.setter
    def public_hostname(self, public_hostname):
        """Sets the public_hostname of this OpenShiftManagedClusterProperties.

        Service generated FQDN for OpenShift API server.

        :param public_hostname: The public_hostname of this OpenShiftManagedClusterProperties.
        :type public_hostname: str
        """

        self._public_hostname = public_hostname

    @property
    def router_profiles(self):
        """Gets the router_profiles of this OpenShiftManagedClusterProperties.

        Configuration for OpenShift router(s).

        :return: The router_profiles of this OpenShiftManagedClusterProperties.
        :rtype: List[OpenShiftRouterProfile]
        """
        return self._router_profiles

    @router_profiles.setter
    def router_profiles(self, router_profiles):
        """Sets the router_profiles of this OpenShiftManagedClusterProperties.

        Configuration for OpenShift router(s).

        :param router_profiles: The router_profiles of this OpenShiftManagedClusterProperties.
        :type router_profiles: List[OpenShiftRouterProfile]
        """

        self._router_profiles = router_profiles
