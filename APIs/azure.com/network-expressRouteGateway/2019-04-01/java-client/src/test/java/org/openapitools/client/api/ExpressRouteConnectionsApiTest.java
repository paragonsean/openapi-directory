/*
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2019-04-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ExpressRouteConnection;
import org.openapitools.client.model.ExpressRouteConnectionList;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ExpressRouteConnectionsApi
 */
@Disabled
public class ExpressRouteConnectionsApiTest {

    private final ExpressRouteConnectionsApi api = new ExpressRouteConnectionsApi();

    /**
     * Creates a connection between an ExpressRoute gateway and an ExpressRoute circuit.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void expressRouteConnectionsCreateOrUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String expressRouteGatewayName = null;
        String connectionName = null;
        String apiVersion = null;
        String subscriptionId = null;
        ExpressRouteConnection putExpressRouteConnectionParameters = null;
        ExpressRouteConnection response = api.expressRouteConnectionsCreateOrUpdate(resourceGroupName, expressRouteGatewayName, connectionName, apiVersion, subscriptionId, putExpressRouteConnectionParameters);
        // TODO: test validations
    }

    /**
     * Deletes a connection to a ExpressRoute circuit.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void expressRouteConnectionsDeleteTest() throws ApiException {
        String resourceGroupName = null;
        String expressRouteGatewayName = null;
        String connectionName = null;
        String apiVersion = null;
        String subscriptionId = null;
        api.expressRouteConnectionsDelete(resourceGroupName, expressRouteGatewayName, connectionName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Gets the specified ExpressRouteConnection.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void expressRouteConnectionsGetTest() throws ApiException {
        String resourceGroupName = null;
        String expressRouteGatewayName = null;
        String connectionName = null;
        String apiVersion = null;
        String subscriptionId = null;
        ExpressRouteConnection response = api.expressRouteConnectionsGet(resourceGroupName, expressRouteGatewayName, connectionName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Lists ExpressRouteConnections.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void expressRouteConnectionsListTest() throws ApiException {
        String resourceGroupName = null;
        String expressRouteGatewayName = null;
        String apiVersion = null;
        String subscriptionId = null;
        ExpressRouteConnectionList response = api.expressRouteConnectionsList(resourceGroupName, expressRouteGatewayName, apiVersion, subscriptionId);
        // TODO: test validations
    }

}
