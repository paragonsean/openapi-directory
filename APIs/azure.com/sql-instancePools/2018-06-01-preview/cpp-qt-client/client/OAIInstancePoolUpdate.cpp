/**
 * SqlManagementClient
 * The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.
 *
 * The version of the OpenAPI document: 2018-06-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIInstancePoolUpdate.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIInstancePoolUpdate::OAIInstancePoolUpdate(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIInstancePoolUpdate::OAIInstancePoolUpdate() {
    this->initializeModel();
}

OAIInstancePoolUpdate::~OAIInstancePoolUpdate() {}

void OAIInstancePoolUpdate::initializeModel() {

    m_tags_isSet = false;
    m_tags_isValid = false;
}

void OAIInstancePoolUpdate::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIInstancePoolUpdate::fromJsonObject(QJsonObject json) {

    m_tags_isValid = ::OpenAPI::fromJsonValue(m_tags, json[QString("tags")]);
    m_tags_isSet = !json[QString("tags")].isNull() && m_tags_isValid;
}

QString OAIInstancePoolUpdate::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIInstancePoolUpdate::asJsonObject() const {
    QJsonObject obj;
    if (m_tags.size() > 0) {
        obj.insert(QString("tags"), ::OpenAPI::toJsonValue(m_tags));
    }
    return obj;
}

QMap<QString, QString> OAIInstancePoolUpdate::getTags() const {
    return m_tags;
}
void OAIInstancePoolUpdate::setTags(const QMap<QString, QString> &tags) {
    m_tags = tags;
    m_tags_isSet = true;
}

bool OAIInstancePoolUpdate::is_tags_Set() const{
    return m_tags_isSet;
}

bool OAIInstancePoolUpdate::is_tags_Valid() const{
    return m_tags_isValid;
}

bool OAIInstancePoolUpdate::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_tags.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIInstancePoolUpdate::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
