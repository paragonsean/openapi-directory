/**
 * DiskResourceProviderClient
 * The Disk Resource Provider Client.
 *
 * The version of the OpenAPI document: 2019-03-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EncryptionSettingsCollection from './EncryptionSettingsCollection';

/**
 * The DiskUpdateProperties model module.
 * @module model/DiskUpdateProperties
 * @version 2019-03-01
 */
class DiskUpdateProperties {
    /**
     * Constructs a new <code>DiskUpdateProperties</code>.
     * Disk resource update properties.
     * @alias module:model/DiskUpdateProperties
     */
    constructor() { 
        
        DiskUpdateProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DiskUpdateProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DiskUpdateProperties} obj Optional instance to populate.
     * @return {module:model/DiskUpdateProperties} The populated <code>DiskUpdateProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DiskUpdateProperties();

            if (data.hasOwnProperty('diskIOPSReadWrite')) {
                obj['diskIOPSReadWrite'] = ApiClient.convertToType(data['diskIOPSReadWrite'], 'Number');
            }
            if (data.hasOwnProperty('diskMBpsReadWrite')) {
                obj['diskMBpsReadWrite'] = ApiClient.convertToType(data['diskMBpsReadWrite'], 'Number');
            }
            if (data.hasOwnProperty('diskSizeGB')) {
                obj['diskSizeGB'] = ApiClient.convertToType(data['diskSizeGB'], 'Number');
            }
            if (data.hasOwnProperty('encryptionSettingsCollection')) {
                obj['encryptionSettingsCollection'] = EncryptionSettingsCollection.constructFromObject(data['encryptionSettingsCollection']);
            }
            if (data.hasOwnProperty('osType')) {
                obj['osType'] = ApiClient.convertToType(data['osType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DiskUpdateProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DiskUpdateProperties</code>.
     */
    static validateJSON(data) {
        // validate the optional field `encryptionSettingsCollection`
        if (data['encryptionSettingsCollection']) { // data not null
          EncryptionSettingsCollection.validateJSON(data['encryptionSettingsCollection']);
        }
        // ensure the json data is a string
        if (data['osType'] && !(typeof data['osType'] === 'string' || data['osType'] instanceof String)) {
            throw new Error("Expected the field `osType` to be a primitive type in the JSON string but got " + data['osType']);
        }

        return true;
    }


}



/**
 * The number of IOPS allowed for this disk; only settable for UltraSSD disks. One operation can transfer between 4k and 256k bytes.
 * @member {Number} diskIOPSReadWrite
 */
DiskUpdateProperties.prototype['diskIOPSReadWrite'] = undefined;

/**
 * The bandwidth allowed for this disk; only settable for UltraSSD disks. MBps means millions of bytes per second - MB here uses the ISO notation, of powers of 10.
 * @member {Number} diskMBpsReadWrite
 */
DiskUpdateProperties.prototype['diskMBpsReadWrite'] = undefined;

/**
 * If creationData.createOption is Empty, this field is mandatory and it indicates the size of the disk to create. If this field is present for updates or creation with other options, it indicates a resize. Resizes are only allowed if the disk is not attached to a running VM, and can only increase the disk's size.
 * @member {Number} diskSizeGB
 */
DiskUpdateProperties.prototype['diskSizeGB'] = undefined;

/**
 * @member {module:model/EncryptionSettingsCollection} encryptionSettingsCollection
 */
DiskUpdateProperties.prototype['encryptionSettingsCollection'] = undefined;

/**
 * the Operating System type.
 * @member {module:model/DiskUpdateProperties.OsTypeEnum} osType
 */
DiskUpdateProperties.prototype['osType'] = undefined;





/**
 * Allowed values for the <code>osType</code> property.
 * @enum {String}
 * @readonly
 */
DiskUpdateProperties['OsTypeEnum'] = {

    /**
     * value: "Windows"
     * @const
     */
    "Windows": "Windows",

    /**
     * value: "Linux"
     * @const
     */
    "Linux": "Linux"
};



export default DiskUpdateProperties;

