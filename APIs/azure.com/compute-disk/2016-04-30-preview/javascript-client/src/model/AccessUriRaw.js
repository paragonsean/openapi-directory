/**
 * DiskResourceProviderClient
 * The Disk Resource Provider Client.
 *
 * The version of the OpenAPI document: 2016-04-30-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AccessUriRaw model module.
 * @module model/AccessUriRaw
 * @version 2016-04-30-preview
 */
class AccessUriRaw {
    /**
     * Constructs a new <code>AccessUriRaw</code>.
     * This object gets &#39;bubbled up&#39; through flattening.
     * @alias module:model/AccessUriRaw
     */
    constructor() { 
        
        AccessUriRaw.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AccessUriRaw</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AccessUriRaw} obj Optional instance to populate.
     * @return {module:model/AccessUriRaw} The populated <code>AccessUriRaw</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AccessUriRaw();

            if (data.hasOwnProperty('accessSAS')) {
                obj['accessSAS'] = ApiClient.convertToType(data['accessSAS'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AccessUriRaw</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AccessUriRaw</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['accessSAS'] && !(typeof data['accessSAS'] === 'string' || data['accessSAS'] instanceof String)) {
            throw new Error("Expected the field `accessSAS` to be a primitive type in the JSON string but got " + data['accessSAS']);
        }

        return true;
    }


}



/**
 * A SAS uri for accessing a disk.
 * @member {String} accessSAS
 */
AccessUriRaw.prototype['accessSAS'] = undefined;






export default AccessUriRaw;

