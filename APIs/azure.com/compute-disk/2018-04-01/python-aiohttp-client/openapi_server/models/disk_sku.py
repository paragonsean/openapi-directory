# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DiskSku(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, tier: str='Standard'):
        """DiskSku - a model defined in OpenAPI

        :param name: The name of this DiskSku.
        :param tier: The tier of this DiskSku.
        """
        self.openapi_types = {
            'name': str,
            'tier': str
        }

        self.attribute_map = {
            'name': 'name',
            'tier': 'tier'
        }

        self._name = name
        self._tier = tier

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DiskSku':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DiskSku of this DiskSku.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this DiskSku.

        The sku name.

        :return: The name of this DiskSku.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this DiskSku.

        The sku name.

        :param name: The name of this DiskSku.
        :type name: str
        """
        allowed_values = ["Standard_LRS", "Premium_LRS", "StandardSSD_LRS"]  # noqa: E501
        if name not in allowed_values:
            raise ValueError(
                "Invalid value for `name` ({0}), must be one of {1}"
                .format(name, allowed_values)
            )

        self._name = name

    @property
    def tier(self):
        """Gets the tier of this DiskSku.

        The sku tier.

        :return: The tier of this DiskSku.
        :rtype: str
        """
        return self._tier

    @tier.setter
    def tier(self, tier):
        """Sets the tier of this DiskSku.

        The sku tier.

        :param tier: The tier of this DiskSku.
        :type tier: str
        """

        self._tier = tier
