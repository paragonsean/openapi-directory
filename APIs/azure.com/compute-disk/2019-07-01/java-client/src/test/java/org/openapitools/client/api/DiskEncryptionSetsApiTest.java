/*
 * DiskResourceProviderClient
 * The Disk Resource Provider Client.
 *
 * The version of the OpenAPI document: 2019-07-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CloudError;
import org.openapitools.client.model.DiskEncryptionSet;
import org.openapitools.client.model.DiskEncryptionSetList;
import org.openapitools.client.model.DiskEncryptionSetUpdate;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DiskEncryptionSetsApi
 */
@Disabled
public class DiskEncryptionSetsApiTest {

    private final DiskEncryptionSetsApi api = new DiskEncryptionSetsApi();

    /**
     * Creates or updates a disk encryption set
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void diskEncryptionSetsCreateOrUpdateTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String diskEncryptionSetName = null;
        String apiVersion = null;
        DiskEncryptionSet diskEncryptionSet = null;
        DiskEncryptionSet response = api.diskEncryptionSetsCreateOrUpdate(subscriptionId, resourceGroupName, diskEncryptionSetName, apiVersion, diskEncryptionSet);
        // TODO: test validations
    }

    /**
     * Deletes a disk encryption set.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void diskEncryptionSetsDeleteTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String diskEncryptionSetName = null;
        String apiVersion = null;
        api.diskEncryptionSetsDelete(subscriptionId, resourceGroupName, diskEncryptionSetName, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets information about a disk encryption set.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void diskEncryptionSetsGetTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String diskEncryptionSetName = null;
        String apiVersion = null;
        DiskEncryptionSet response = api.diskEncryptionSetsGet(subscriptionId, resourceGroupName, diskEncryptionSetName, apiVersion);
        // TODO: test validations
    }

    /**
     * Lists all the disk encryption sets under a subscription.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void diskEncryptionSetsListTest() throws ApiException {
        String subscriptionId = null;
        String apiVersion = null;
        DiskEncryptionSetList response = api.diskEncryptionSetsList(subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Lists all the disk encryption sets under a resource group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void diskEncryptionSetsListByResourceGroupTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String apiVersion = null;
        DiskEncryptionSetList response = api.diskEncryptionSetsListByResourceGroup(subscriptionId, resourceGroupName, apiVersion);
        // TODO: test validations
    }

    /**
     * Updates (patches) a disk encryption set.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void diskEncryptionSetsUpdateTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String diskEncryptionSetName = null;
        String apiVersion = null;
        DiskEncryptionSetUpdate diskEncryptionSet = null;
        DiskEncryptionSet response = api.diskEncryptionSetsUpdate(subscriptionId, resourceGroupName, diskEncryptionSetName, apiVersion, diskEncryptionSet);
        // TODO: test validations
    }

}
