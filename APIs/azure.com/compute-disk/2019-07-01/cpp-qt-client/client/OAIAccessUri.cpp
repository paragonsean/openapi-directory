/**
 * DiskResourceProviderClient
 * The Disk Resource Provider Client.
 *
 * The version of the OpenAPI document: 2019-07-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAccessUri.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAccessUri::OAIAccessUri(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAccessUri::OAIAccessUri() {
    this->initializeModel();
}

OAIAccessUri::~OAIAccessUri() {}

void OAIAccessUri::initializeModel() {

    m_access_sas_isSet = false;
    m_access_sas_isValid = false;
}

void OAIAccessUri::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAccessUri::fromJsonObject(QJsonObject json) {

    m_access_sas_isValid = ::OpenAPI::fromJsonValue(m_access_sas, json[QString("accessSAS")]);
    m_access_sas_isSet = !json[QString("accessSAS")].isNull() && m_access_sas_isValid;
}

QString OAIAccessUri::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAccessUri::asJsonObject() const {
    QJsonObject obj;
    if (m_access_sas_isSet) {
        obj.insert(QString("accessSAS"), ::OpenAPI::toJsonValue(m_access_sas));
    }
    return obj;
}

QString OAIAccessUri::getAccessSas() const {
    return m_access_sas;
}
void OAIAccessUri::setAccessSas(const QString &access_sas) {
    m_access_sas = access_sas;
    m_access_sas_isSet = true;
}

bool OAIAccessUri::is_access_sas_Set() const{
    return m_access_sas_isSet;
}

bool OAIAccessUri::is_access_sas_Valid() const{
    return m_access_sas_isValid;
}

bool OAIAccessUri::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_access_sas_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAccessUri::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
