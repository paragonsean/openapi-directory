/**
 * DiskResourceProviderClient
 * The Disk Resource Provider Client.
 *
 * The version of the OpenAPI document: 2019-07-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEncryption.h
 *
 * Encryption at rest settings for disk or snapshot
 */

#ifndef OAIEncryption_H
#define OAIEncryption_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIEncryption : public OAIObject {
public:
    OAIEncryption();
    OAIEncryption(QString json);
    ~OAIEncryption() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDiskEncryptionSetId() const;
    void setDiskEncryptionSetId(const QString &disk_encryption_set_id);
    bool is_disk_encryption_set_id_Set() const;
    bool is_disk_encryption_set_id_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_disk_encryption_set_id;
    bool m_disk_encryption_set_id_isSet;
    bool m_disk_encryption_set_id_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEncryption)

#endif // OAIEncryption_H
