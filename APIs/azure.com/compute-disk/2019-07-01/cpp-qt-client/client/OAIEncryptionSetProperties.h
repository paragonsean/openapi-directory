/**
 * DiskResourceProviderClient
 * The Disk Resource Provider Client.
 *
 * The version of the OpenAPI document: 2019-07-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEncryptionSetProperties.h
 *
 * 
 */

#ifndef OAIEncryptionSetProperties_H
#define OAIEncryptionSetProperties_H

#include <QJsonObject>

#include "OAIKeyVaultAndKeyReference.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIKeyVaultAndKeyReference;

class OAIEncryptionSetProperties : public OAIObject {
public:
    OAIEncryptionSetProperties();
    OAIEncryptionSetProperties(QString json);
    ~OAIEncryptionSetProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIKeyVaultAndKeyReference getActiveKey() const;
    void setActiveKey(const OAIKeyVaultAndKeyReference &active_key);
    bool is_active_key_Set() const;
    bool is_active_key_Valid() const;

    QList<OAIKeyVaultAndKeyReference> getPreviousKeys() const;
    void setPreviousKeys(const QList<OAIKeyVaultAndKeyReference> &previous_keys);
    bool is_previous_keys_Set() const;
    bool is_previous_keys_Valid() const;

    QString getProvisioningState() const;
    void setProvisioningState(const QString &provisioning_state);
    bool is_provisioning_state_Set() const;
    bool is_provisioning_state_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIKeyVaultAndKeyReference m_active_key;
    bool m_active_key_isSet;
    bool m_active_key_isValid;

    QList<OAIKeyVaultAndKeyReference> m_previous_keys;
    bool m_previous_keys_isSet;
    bool m_previous_keys_isValid;

    QString m_provisioning_state;
    bool m_provisioning_state_isSet;
    bool m_provisioning_state_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEncryptionSetProperties)

#endif // OAIEncryptionSetProperties_H
