/**
 * DiskResourceProviderClient
 * The Disk Resource Provider Client.
 *
 * The version of the OpenAPI document: 2019-07-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIKeyVaultAndSecretReference.h
 *
 * Key Vault Secret Url and vault id of the encryption key 
 */

#ifndef OAIKeyVaultAndSecretReference_H
#define OAIKeyVaultAndSecretReference_H

#include <QJsonObject>

#include "OAISourceVault.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISourceVault;

class OAIKeyVaultAndSecretReference : public OAIObject {
public:
    OAIKeyVaultAndSecretReference();
    OAIKeyVaultAndSecretReference(QString json);
    ~OAIKeyVaultAndSecretReference() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getSecretUrl() const;
    void setSecretUrl(const QString &secret_url);
    bool is_secret_url_Set() const;
    bool is_secret_url_Valid() const;

    OAISourceVault getSourceVault() const;
    void setSourceVault(const OAISourceVault &source_vault);
    bool is_source_vault_Set() const;
    bool is_source_vault_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_secret_url;
    bool m_secret_url_isSet;
    bool m_secret_url_isValid;

    OAISourceVault m_source_vault;
    bool m_source_vault_isSet;
    bool m_source_vault_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIKeyVaultAndSecretReference)

#endif // OAIKeyVaultAndSecretReference_H
