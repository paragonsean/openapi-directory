/**
 * DiskResourceProviderClient
 * The Disk Resource Provider Client.
 *
 * The version of the OpenAPI document: 2019-07-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDiskUpdateProperties.h
 *
 * Disk resource update properties.
 */

#ifndef OAIDiskUpdateProperties_H
#define OAIDiskUpdateProperties_H

#include <QJsonObject>

#include "OAIEncryption.h"
#include "OAIEncryptionSettingsCollection.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIEncryption;
class OAIEncryptionSettingsCollection;

class OAIDiskUpdateProperties : public OAIObject {
public:
    OAIDiskUpdateProperties();
    OAIDiskUpdateProperties(QString json);
    ~OAIDiskUpdateProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint64 getDiskIopsReadWrite() const;
    void setDiskIopsReadWrite(const qint64 &disk_iops_read_write);
    bool is_disk_iops_read_write_Set() const;
    bool is_disk_iops_read_write_Valid() const;

    qint32 getDiskMBpsReadWrite() const;
    void setDiskMBpsReadWrite(const qint32 &disk_m_bps_read_write);
    bool is_disk_m_bps_read_write_Set() const;
    bool is_disk_m_bps_read_write_Valid() const;

    qint32 getDiskSizeGb() const;
    void setDiskSizeGb(const qint32 &disk_size_gb);
    bool is_disk_size_gb_Set() const;
    bool is_disk_size_gb_Valid() const;

    OAIEncryption getEncryption() const;
    void setEncryption(const OAIEncryption &encryption);
    bool is_encryption_Set() const;
    bool is_encryption_Valid() const;

    OAIEncryptionSettingsCollection getEncryptionSettingsCollection() const;
    void setEncryptionSettingsCollection(const OAIEncryptionSettingsCollection &encryption_settings_collection);
    bool is_encryption_settings_collection_Set() const;
    bool is_encryption_settings_collection_Valid() const;

    QString getOsType() const;
    void setOsType(const QString &os_type);
    bool is_os_type_Set() const;
    bool is_os_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint64 m_disk_iops_read_write;
    bool m_disk_iops_read_write_isSet;
    bool m_disk_iops_read_write_isValid;

    qint32 m_disk_m_bps_read_write;
    bool m_disk_m_bps_read_write_isSet;
    bool m_disk_m_bps_read_write_isValid;

    qint32 m_disk_size_gb;
    bool m_disk_size_gb_isSet;
    bool m_disk_size_gb_isValid;

    OAIEncryption m_encryption;
    bool m_encryption_isSet;
    bool m_encryption_isValid;

    OAIEncryptionSettingsCollection m_encryption_settings_collection;
    bool m_encryption_settings_collection_isSet;
    bool m_encryption_settings_collection_isValid;

    QString m_os_type;
    bool m_os_type_isSet;
    bool m_os_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDiskUpdateProperties)

#endif // OAIDiskUpdateProperties_H
