# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.key_vault_and_key_reference import KeyVaultAndKeyReference
from openapi_server.models.key_vault_and_secret_reference import KeyVaultAndSecretReference
from openapi_server import util


class EncryptionSettingsElement(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, disk_encryption_key: KeyVaultAndSecretReference=None, key_encryption_key: KeyVaultAndKeyReference=None):
        """EncryptionSettingsElement - a model defined in OpenAPI

        :param disk_encryption_key: The disk_encryption_key of this EncryptionSettingsElement.
        :param key_encryption_key: The key_encryption_key of this EncryptionSettingsElement.
        """
        self.openapi_types = {
            'disk_encryption_key': KeyVaultAndSecretReference,
            'key_encryption_key': KeyVaultAndKeyReference
        }

        self.attribute_map = {
            'disk_encryption_key': 'diskEncryptionKey',
            'key_encryption_key': 'keyEncryptionKey'
        }

        self._disk_encryption_key = disk_encryption_key
        self._key_encryption_key = key_encryption_key

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EncryptionSettingsElement':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EncryptionSettingsElement of this EncryptionSettingsElement.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def disk_encryption_key(self):
        """Gets the disk_encryption_key of this EncryptionSettingsElement.


        :return: The disk_encryption_key of this EncryptionSettingsElement.
        :rtype: KeyVaultAndSecretReference
        """
        return self._disk_encryption_key

    @disk_encryption_key.setter
    def disk_encryption_key(self, disk_encryption_key):
        """Sets the disk_encryption_key of this EncryptionSettingsElement.


        :param disk_encryption_key: The disk_encryption_key of this EncryptionSettingsElement.
        :type disk_encryption_key: KeyVaultAndSecretReference
        """

        self._disk_encryption_key = disk_encryption_key

    @property
    def key_encryption_key(self):
        """Gets the key_encryption_key of this EncryptionSettingsElement.


        :return: The key_encryption_key of this EncryptionSettingsElement.
        :rtype: KeyVaultAndKeyReference
        """
        return self._key_encryption_key

    @key_encryption_key.setter
    def key_encryption_key(self, key_encryption_key):
        """Sets the key_encryption_key of this EncryptionSettingsElement.


        :param key_encryption_key: The key_encryption_key of this EncryptionSettingsElement.
        :type key_encryption_key: KeyVaultAndKeyReference
        """

        self._key_encryption_key = key_encryption_key
