/**
 * DiskResourceProviderClient
 * The Disk Resource Provider Client.
 *
 * The version of the OpenAPI document: 2018-09-30
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreationData from './CreationData';
import EncryptionSettingsCollection from './EncryptionSettingsCollection';

/**
 * The SnapshotProperties model module.
 * @module model/SnapshotProperties
 * @version 2018-09-30
 */
class SnapshotProperties {
    /**
     * Constructs a new <code>SnapshotProperties</code>.
     * Snapshot resource properties.
     * @alias module:model/SnapshotProperties
     * @param creationData {module:model/CreationData} 
     */
    constructor(creationData) { 
        
        SnapshotProperties.initialize(this, creationData);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, creationData) { 
        obj['creationData'] = creationData;
    }

    /**
     * Constructs a <code>SnapshotProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SnapshotProperties} obj Optional instance to populate.
     * @return {module:model/SnapshotProperties} The populated <code>SnapshotProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SnapshotProperties();

            if (data.hasOwnProperty('creationData')) {
                obj['creationData'] = CreationData.constructFromObject(data['creationData']);
            }
            if (data.hasOwnProperty('diskSizeGB')) {
                obj['diskSizeGB'] = ApiClient.convertToType(data['diskSizeGB'], 'Number');
            }
            if (data.hasOwnProperty('encryptionSettingsCollection')) {
                obj['encryptionSettingsCollection'] = EncryptionSettingsCollection.constructFromObject(data['encryptionSettingsCollection']);
            }
            if (data.hasOwnProperty('hyperVGeneration')) {
                obj['hyperVGeneration'] = ApiClient.convertToType(data['hyperVGeneration'], 'String');
            }
            if (data.hasOwnProperty('osType')) {
                obj['osType'] = ApiClient.convertToType(data['osType'], 'String');
            }
            if (data.hasOwnProperty('provisioningState')) {
                obj['provisioningState'] = ApiClient.convertToType(data['provisioningState'], 'String');
            }
            if (data.hasOwnProperty('timeCreated')) {
                obj['timeCreated'] = ApiClient.convertToType(data['timeCreated'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SnapshotProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SnapshotProperties</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SnapshotProperties.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `creationData`
        if (data['creationData']) { // data not null
          CreationData.validateJSON(data['creationData']);
        }
        // validate the optional field `encryptionSettingsCollection`
        if (data['encryptionSettingsCollection']) { // data not null
          EncryptionSettingsCollection.validateJSON(data['encryptionSettingsCollection']);
        }
        // ensure the json data is a string
        if (data['hyperVGeneration'] && !(typeof data['hyperVGeneration'] === 'string' || data['hyperVGeneration'] instanceof String)) {
            throw new Error("Expected the field `hyperVGeneration` to be a primitive type in the JSON string but got " + data['hyperVGeneration']);
        }
        // ensure the json data is a string
        if (data['osType'] && !(typeof data['osType'] === 'string' || data['osType'] instanceof String)) {
            throw new Error("Expected the field `osType` to be a primitive type in the JSON string but got " + data['osType']);
        }
        // ensure the json data is a string
        if (data['provisioningState'] && !(typeof data['provisioningState'] === 'string' || data['provisioningState'] instanceof String)) {
            throw new Error("Expected the field `provisioningState` to be a primitive type in the JSON string but got " + data['provisioningState']);
        }

        return true;
    }


}

SnapshotProperties.RequiredProperties = ["creationData"];

/**
 * @member {module:model/CreationData} creationData
 */
SnapshotProperties.prototype['creationData'] = undefined;

/**
 * If creationData.createOption is Empty, this field is mandatory and it indicates the size of the VHD to create. If this field is present for updates or creation with other options, it indicates a resize. Resizes are only allowed if the disk is not attached to a running VM, and can only increase the disk's size.
 * @member {Number} diskSizeGB
 */
SnapshotProperties.prototype['diskSizeGB'] = undefined;

/**
 * @member {module:model/EncryptionSettingsCollection} encryptionSettingsCollection
 */
SnapshotProperties.prototype['encryptionSettingsCollection'] = undefined;

/**
 * The hypervisor generation of the Virtual Machine. Applicable to OS disks only.
 * @member {module:model/SnapshotProperties.HyperVGenerationEnum} hyperVGeneration
 */
SnapshotProperties.prototype['hyperVGeneration'] = undefined;

/**
 * The Operating System type.
 * @member {module:model/SnapshotProperties.OsTypeEnum} osType
 */
SnapshotProperties.prototype['osType'] = undefined;

/**
 * The disk provisioning state.
 * @member {String} provisioningState
 */
SnapshotProperties.prototype['provisioningState'] = undefined;

/**
 * The time when the disk was created.
 * @member {Date} timeCreated
 */
SnapshotProperties.prototype['timeCreated'] = undefined;





/**
 * Allowed values for the <code>hyperVGeneration</code> property.
 * @enum {String}
 * @readonly
 */
SnapshotProperties['HyperVGenerationEnum'] = {

    /**
     * value: "V1"
     * @const
     */
    "V1": "V1",

    /**
     * value: "V2"
     * @const
     */
    "V2": "V2"
};


/**
 * Allowed values for the <code>osType</code> property.
 * @enum {String}
 * @readonly
 */
SnapshotProperties['OsTypeEnum'] = {

    /**
     * value: "Windows"
     * @const
     */
    "Windows": "Windows",

    /**
     * value: "Linux"
     * @const
     */
    "Linux": "Linux"
};



export default SnapshotProperties;

