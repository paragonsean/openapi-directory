/*
 * DiskResourceProviderClient
 * The Disk Resource Provider Client.
 *
 * The version of the OpenAPI document: 2018-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AccessUri;
import org.openapitools.client.model.GrantAccessData;
import org.openapitools.client.model.Snapshot;
import org.openapitools.client.model.SnapshotList;
import org.openapitools.client.model.SnapshotUpdate;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SnapshotsApi
 */
@Disabled
public class SnapshotsApiTest {

    private final SnapshotsApi api = new SnapshotsApi();

    /**
     * Creates or updates a snapshot.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void snapshotsCreateOrUpdateTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String snapshotName = null;
        String apiVersion = null;
        Snapshot snapshot = null;
        Snapshot response = api.snapshotsCreateOrUpdate(subscriptionId, resourceGroupName, snapshotName, apiVersion, snapshot);
        // TODO: test validations
    }

    /**
     * Deletes a snapshot.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void snapshotsDeleteTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String snapshotName = null;
        String apiVersion = null;
        api.snapshotsDelete(subscriptionId, resourceGroupName, snapshotName, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets information about a snapshot.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void snapshotsGetTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String snapshotName = null;
        String apiVersion = null;
        Snapshot response = api.snapshotsGet(subscriptionId, resourceGroupName, snapshotName, apiVersion);
        // TODO: test validations
    }

    /**
     * Grants access to a snapshot.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void snapshotsGrantAccessTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String snapshotName = null;
        String apiVersion = null;
        GrantAccessData grantAccessData = null;
        AccessUri response = api.snapshotsGrantAccess(subscriptionId, resourceGroupName, snapshotName, apiVersion, grantAccessData);
        // TODO: test validations
    }

    /**
     * Lists snapshots under a subscription.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void snapshotsListTest() throws ApiException {
        String subscriptionId = null;
        String apiVersion = null;
        SnapshotList response = api.snapshotsList(subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Lists snapshots under a resource group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void snapshotsListByResourceGroupTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String apiVersion = null;
        SnapshotList response = api.snapshotsListByResourceGroup(subscriptionId, resourceGroupName, apiVersion);
        // TODO: test validations
    }

    /**
     * Revokes access to a snapshot.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void snapshotsRevokeAccessTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String snapshotName = null;
        String apiVersion = null;
        api.snapshotsRevokeAccess(subscriptionId, resourceGroupName, snapshotName, apiVersion);
        // TODO: test validations
    }

    /**
     * Updates (patches) a snapshot.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void snapshotsUpdateTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String snapshotName = null;
        String apiVersion = null;
        SnapshotUpdate snapshot = null;
        Snapshot response = api.snapshotsUpdate(subscriptionId, resourceGroupName, snapshotName, apiVersion, snapshot);
        // TODO: test validations
    }

}
