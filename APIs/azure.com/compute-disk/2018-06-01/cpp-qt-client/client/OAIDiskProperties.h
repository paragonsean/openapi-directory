/**
 * DiskResourceProviderClient
 * The Disk Resource Provider Client.
 *
 * The version of the OpenAPI document: 2018-06-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDiskProperties.h
 *
 * Disk resource properties.
 */

#ifndef OAIDiskProperties_H
#define OAIDiskProperties_H

#include <QJsonObject>

#include "OAICreationData.h"
#include "OAIEncryptionSettings.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreationData;
class OAIEncryptionSettings;

class OAIDiskProperties : public OAIObject {
public:
    OAIDiskProperties();
    OAIDiskProperties(QString json);
    ~OAIDiskProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAICreationData getCreationData() const;
    void setCreationData(const OAICreationData &creation_data);
    bool is_creation_data_Set() const;
    bool is_creation_data_Valid() const;

    qint64 getDiskIopsReadWrite() const;
    void setDiskIopsReadWrite(const qint64 &disk_iops_read_write);
    bool is_disk_iops_read_write_Set() const;
    bool is_disk_iops_read_write_Valid() const;

    qint32 getDiskMBpsReadWrite() const;
    void setDiskMBpsReadWrite(const qint32 &disk_m_bps_read_write);
    bool is_disk_m_bps_read_write_Set() const;
    bool is_disk_m_bps_read_write_Valid() const;

    qint32 getDiskSizeGb() const;
    void setDiskSizeGb(const qint32 &disk_size_gb);
    bool is_disk_size_gb_Set() const;
    bool is_disk_size_gb_Valid() const;

    OAIEncryptionSettings getEncryptionSettings() const;
    void setEncryptionSettings(const OAIEncryptionSettings &encryption_settings);
    bool is_encryption_settings_Set() const;
    bool is_encryption_settings_Valid() const;

    QString getOsType() const;
    void setOsType(const QString &os_type);
    bool is_os_type_Set() const;
    bool is_os_type_Valid() const;

    QString getProvisioningState() const;
    void setProvisioningState(const QString &provisioning_state);
    bool is_provisioning_state_Set() const;
    bool is_provisioning_state_Valid() const;

    QDateTime getTimeCreated() const;
    void setTimeCreated(const QDateTime &time_created);
    bool is_time_created_Set() const;
    bool is_time_created_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAICreationData m_creation_data;
    bool m_creation_data_isSet;
    bool m_creation_data_isValid;

    qint64 m_disk_iops_read_write;
    bool m_disk_iops_read_write_isSet;
    bool m_disk_iops_read_write_isValid;

    qint32 m_disk_m_bps_read_write;
    bool m_disk_m_bps_read_write_isSet;
    bool m_disk_m_bps_read_write_isValid;

    qint32 m_disk_size_gb;
    bool m_disk_size_gb_isSet;
    bool m_disk_size_gb_isValid;

    OAIEncryptionSettings m_encryption_settings;
    bool m_encryption_settings_isSet;
    bool m_encryption_settings_isValid;

    QString m_os_type;
    bool m_os_type_isSet;
    bool m_os_type_isValid;

    QString m_provisioning_state;
    bool m_provisioning_state_isSet;
    bool m_provisioning_state_isValid;

    QDateTime m_time_created;
    bool m_time_created_isSet;
    bool m_time_created_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDiskProperties)

#endif // OAIDiskProperties_H
