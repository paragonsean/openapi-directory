/**
 * EventHubManagementClient
 * Azure Event Hubs client
 *
 * The version of the OpenAPI document: 2014-09-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIConsumerGroupProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIConsumerGroupProperties::OAIConsumerGroupProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIConsumerGroupProperties::OAIConsumerGroupProperties() {
    this->initializeModel();
}

OAIConsumerGroupProperties::~OAIConsumerGroupProperties() {}

void OAIConsumerGroupProperties::initializeModel() {

    m_created_at_isSet = false;
    m_created_at_isValid = false;

    m_event_hub_path_isSet = false;
    m_event_hub_path_isValid = false;

    m_updated_at_isSet = false;
    m_updated_at_isValid = false;

    m_user_metadata_isSet = false;
    m_user_metadata_isValid = false;
}

void OAIConsumerGroupProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIConsumerGroupProperties::fromJsonObject(QJsonObject json) {

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("createdAt")]);
    m_created_at_isSet = !json[QString("createdAt")].isNull() && m_created_at_isValid;

    m_event_hub_path_isValid = ::OpenAPI::fromJsonValue(m_event_hub_path, json[QString("eventHubPath")]);
    m_event_hub_path_isSet = !json[QString("eventHubPath")].isNull() && m_event_hub_path_isValid;

    m_updated_at_isValid = ::OpenAPI::fromJsonValue(m_updated_at, json[QString("updatedAt")]);
    m_updated_at_isSet = !json[QString("updatedAt")].isNull() && m_updated_at_isValid;

    m_user_metadata_isValid = ::OpenAPI::fromJsonValue(m_user_metadata, json[QString("userMetadata")]);
    m_user_metadata_isSet = !json[QString("userMetadata")].isNull() && m_user_metadata_isValid;
}

QString OAIConsumerGroupProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIConsumerGroupProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_created_at_isSet) {
        obj.insert(QString("createdAt"), ::OpenAPI::toJsonValue(m_created_at));
    }
    if (m_event_hub_path_isSet) {
        obj.insert(QString("eventHubPath"), ::OpenAPI::toJsonValue(m_event_hub_path));
    }
    if (m_updated_at_isSet) {
        obj.insert(QString("updatedAt"), ::OpenAPI::toJsonValue(m_updated_at));
    }
    if (m_user_metadata_isSet) {
        obj.insert(QString("userMetadata"), ::OpenAPI::toJsonValue(m_user_metadata));
    }
    return obj;
}

QDateTime OAIConsumerGroupProperties::getCreatedAt() const {
    return m_created_at;
}
void OAIConsumerGroupProperties::setCreatedAt(const QDateTime &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAIConsumerGroupProperties::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAIConsumerGroupProperties::is_created_at_Valid() const{
    return m_created_at_isValid;
}

QString OAIConsumerGroupProperties::getEventHubPath() const {
    return m_event_hub_path;
}
void OAIConsumerGroupProperties::setEventHubPath(const QString &event_hub_path) {
    m_event_hub_path = event_hub_path;
    m_event_hub_path_isSet = true;
}

bool OAIConsumerGroupProperties::is_event_hub_path_Set() const{
    return m_event_hub_path_isSet;
}

bool OAIConsumerGroupProperties::is_event_hub_path_Valid() const{
    return m_event_hub_path_isValid;
}

QDateTime OAIConsumerGroupProperties::getUpdatedAt() const {
    return m_updated_at;
}
void OAIConsumerGroupProperties::setUpdatedAt(const QDateTime &updated_at) {
    m_updated_at = updated_at;
    m_updated_at_isSet = true;
}

bool OAIConsumerGroupProperties::is_updated_at_Set() const{
    return m_updated_at_isSet;
}

bool OAIConsumerGroupProperties::is_updated_at_Valid() const{
    return m_updated_at_isValid;
}

QString OAIConsumerGroupProperties::getUserMetadata() const {
    return m_user_metadata;
}
void OAIConsumerGroupProperties::setUserMetadata(const QString &user_metadata) {
    m_user_metadata = user_metadata;
    m_user_metadata_isSet = true;
}

bool OAIConsumerGroupProperties::is_user_metadata_Set() const{
    return m_user_metadata_isSet;
}

bool OAIConsumerGroupProperties::is_user_metadata_Valid() const{
    return m_user_metadata_isValid;
}

bool OAIConsumerGroupProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_event_hub_path_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_updated_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_metadata_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIConsumerGroupProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
