/**
 * EventHubManagementClient
 * Azure Event Hubs client
 *
 * The version of the OpenAPI document: 2014-09-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The EventHubProperties model module.
 * @module model/EventHubProperties
 * @version 2014-09-01
 */
class EventHubProperties {
    /**
     * Constructs a new <code>EventHubProperties</code>.
     * Properties supplied to the Create Or Update Event Hub operation.
     * @alias module:model/EventHubProperties
     */
    constructor() { 
        
        EventHubProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EventHubProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EventHubProperties} obj Optional instance to populate.
     * @return {module:model/EventHubProperties} The populated <code>EventHubProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EventHubProperties();

            if (data.hasOwnProperty('createdAt')) {
                obj['createdAt'] = ApiClient.convertToType(data['createdAt'], 'Date');
            }
            if (data.hasOwnProperty('messageRetentionInDays')) {
                obj['messageRetentionInDays'] = ApiClient.convertToType(data['messageRetentionInDays'], 'Number');
            }
            if (data.hasOwnProperty('partitionCount')) {
                obj['partitionCount'] = ApiClient.convertToType(data['partitionCount'], 'Number');
            }
            if (data.hasOwnProperty('partitionIds')) {
                obj['partitionIds'] = ApiClient.convertToType(data['partitionIds'], ['String']);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('updatedAt')) {
                obj['updatedAt'] = ApiClient.convertToType(data['updatedAt'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EventHubProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EventHubProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['partitionIds'])) {
            throw new Error("Expected the field `partitionIds` to be an array in the JSON data but got " + data['partitionIds']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }

        return true;
    }


}



/**
 * Exact time the Event Hub was created.
 * @member {Date} createdAt
 */
EventHubProperties.prototype['createdAt'] = undefined;

/**
 * Number of days to retain the events for this Event Hub.
 * @member {Number} messageRetentionInDays
 */
EventHubProperties.prototype['messageRetentionInDays'] = undefined;

/**
 * Number of partitions created for the Event Hub.
 * @member {Number} partitionCount
 */
EventHubProperties.prototype['partitionCount'] = undefined;

/**
 * Current number of shards on the Event Hub.
 * @member {Array.<String>} partitionIds
 */
EventHubProperties.prototype['partitionIds'] = undefined;

/**
 * Enumerates the possible values for the status of the Event Hub.
 * @member {module:model/EventHubProperties.StatusEnum} status
 */
EventHubProperties.prototype['status'] = undefined;

/**
 * The exact time the message was updated.
 * @member {Date} updatedAt
 */
EventHubProperties.prototype['updatedAt'] = undefined;





/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
EventHubProperties['StatusEnum'] = {

    /**
     * value: "Active"
     * @const
     */
    "Active": "Active",

    /**
     * value: "Disabled"
     * @const
     */
    "Disabled": "Disabled",

    /**
     * value: "Restoring"
     * @const
     */
    "Restoring": "Restoring",

    /**
     * value: "SendDisabled"
     * @const
     */
    "SendDisabled": "SendDisabled",

    /**
     * value: "ReceiveDisabled"
     * @const
     */
    "ReceiveDisabled": "ReceiveDisabled",

    /**
     * value: "Creating"
     * @const
     */
    "Creating": "Creating",

    /**
     * value: "Deleting"
     * @const
     */
    "Deleting": "Deleting",

    /**
     * value: "Renaming"
     * @const
     */
    "Renaming": "Renaming",

    /**
     * value: "Unknown"
     * @const
     */
    "Unknown": "Unknown"
};



export default EventHubProperties;

