/**
 * EventHubManagementClient
 * Azure Event Hubs client
 *
 * The version of the OpenAPI document: 2014-09-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SharedAccessAuthorizationRulePostProperties model module.
 * @module model/SharedAccessAuthorizationRulePostProperties
 * @version 2014-09-01
 */
class SharedAccessAuthorizationRulePostProperties {
    /**
     * Constructs a new <code>SharedAccessAuthorizationRulePostProperties</code>.
     * AuthorizationRule properties.
     * @alias module:model/SharedAccessAuthorizationRulePostProperties
     * @param rights {Array.<module:model/SharedAccessAuthorizationRulePostProperties.RightsEnum>} The rights associated with the rule.
     */
    constructor(rights) { 
        
        SharedAccessAuthorizationRulePostProperties.initialize(this, rights);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, rights) { 
        obj['rights'] = rights;
    }

    /**
     * Constructs a <code>SharedAccessAuthorizationRulePostProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SharedAccessAuthorizationRulePostProperties} obj Optional instance to populate.
     * @return {module:model/SharedAccessAuthorizationRulePostProperties} The populated <code>SharedAccessAuthorizationRulePostProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SharedAccessAuthorizationRulePostProperties();

            if (data.hasOwnProperty('claimType')) {
                obj['claimType'] = ApiClient.convertToType(data['claimType'], 'String');
            }
            if (data.hasOwnProperty('claimValue')) {
                obj['claimValue'] = ApiClient.convertToType(data['claimValue'], 'String');
            }
            if (data.hasOwnProperty('createdTime')) {
                obj['createdTime'] = ApiClient.convertToType(data['createdTime'], 'Date');
            }
            if (data.hasOwnProperty('keyName')) {
                obj['keyName'] = ApiClient.convertToType(data['keyName'], 'String');
            }
            if (data.hasOwnProperty('modifiedTime')) {
                obj['modifiedTime'] = ApiClient.convertToType(data['modifiedTime'], 'Date');
            }
            if (data.hasOwnProperty('primaryKey')) {
                obj['primaryKey'] = ApiClient.convertToType(data['primaryKey'], 'String');
            }
            if (data.hasOwnProperty('rights')) {
                obj['rights'] = ApiClient.convertToType(data['rights'], ['String']);
            }
            if (data.hasOwnProperty('secondaryKey')) {
                obj['secondaryKey'] = ApiClient.convertToType(data['secondaryKey'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SharedAccessAuthorizationRulePostProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SharedAccessAuthorizationRulePostProperties</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SharedAccessAuthorizationRulePostProperties.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['claimType'] && !(typeof data['claimType'] === 'string' || data['claimType'] instanceof String)) {
            throw new Error("Expected the field `claimType` to be a primitive type in the JSON string but got " + data['claimType']);
        }
        // ensure the json data is a string
        if (data['claimValue'] && !(typeof data['claimValue'] === 'string' || data['claimValue'] instanceof String)) {
            throw new Error("Expected the field `claimValue` to be a primitive type in the JSON string but got " + data['claimValue']);
        }
        // ensure the json data is a string
        if (data['keyName'] && !(typeof data['keyName'] === 'string' || data['keyName'] instanceof String)) {
            throw new Error("Expected the field `keyName` to be a primitive type in the JSON string but got " + data['keyName']);
        }
        // ensure the json data is a string
        if (data['primaryKey'] && !(typeof data['primaryKey'] === 'string' || data['primaryKey'] instanceof String)) {
            throw new Error("Expected the field `primaryKey` to be a primitive type in the JSON string but got " + data['primaryKey']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['rights'])) {
            throw new Error("Expected the field `rights` to be an array in the JSON data but got " + data['rights']);
        }
        // ensure the json data is a string
        if (data['secondaryKey'] && !(typeof data['secondaryKey'] === 'string' || data['secondaryKey'] instanceof String)) {
            throw new Error("Expected the field `secondaryKey` to be a primitive type in the JSON string but got " + data['secondaryKey']);
        }

        return true;
    }


}

SharedAccessAuthorizationRulePostProperties.RequiredProperties = ["rights"];

/**
 * A string that describes Claim Type for authorization rule.
 * @member {String} claimType
 */
SharedAccessAuthorizationRulePostProperties.prototype['claimType'] = undefined;

/**
 * A string that describes Claim Value of authorization rule.
 * @member {String} claimValue
 */
SharedAccessAuthorizationRulePostProperties.prototype['claimValue'] = undefined;

/**
 * The time the namespace was created.
 * @member {Date} createdTime
 */
SharedAccessAuthorizationRulePostProperties.prototype['createdTime'] = undefined;

/**
 * A string that describes the Key Name of authorization rule.
 * @member {String} keyName
 */
SharedAccessAuthorizationRulePostProperties.prototype['keyName'] = undefined;

/**
 * The time the namespace was updated.
 * @member {Date} modifiedTime
 */
SharedAccessAuthorizationRulePostProperties.prototype['modifiedTime'] = undefined;

/**
 * A base64-encoded 256-bit primary key for signing and validating the SAS token.
 * @member {String} primaryKey
 */
SharedAccessAuthorizationRulePostProperties.prototype['primaryKey'] = undefined;

/**
 * The rights associated with the rule.
 * @member {Array.<module:model/SharedAccessAuthorizationRulePostProperties.RightsEnum>} rights
 */
SharedAccessAuthorizationRulePostProperties.prototype['rights'] = undefined;

/**
 * A base64-encoded 256-bit primary key for signing and validating the SAS token.
 * @member {String} secondaryKey
 */
SharedAccessAuthorizationRulePostProperties.prototype['secondaryKey'] = undefined;





/**
 * Allowed values for the <code>rights</code> property.
 * @enum {String}
 * @readonly
 */
SharedAccessAuthorizationRulePostProperties['RightsEnum'] = {

    /**
     * value: "Manage"
     * @const
     */
    "Manage": "Manage",

    /**
     * value: "Send"
     * @const
     */
    "Send": "Send",

    /**
     * value: "Listen"
     * @const
     */
    "Listen": "Listen"
};



export default SharedAccessAuthorizationRulePostProperties;

