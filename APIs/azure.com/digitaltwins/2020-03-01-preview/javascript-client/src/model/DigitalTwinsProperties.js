/**
 * AzureDigitalTwinsManagementClient
 * Azure Digital Twins Client for managing DigitalTwinsInstance
 *
 * The version of the OpenAPI document: 2020-03-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DigitalTwinsProperties model module.
 * @module model/DigitalTwinsProperties
 * @version 2020-03-01-preview
 */
class DigitalTwinsProperties {
    /**
     * Constructs a new <code>DigitalTwinsProperties</code>.
     * The properties of a DigitalTwinsInstance.
     * @alias module:model/DigitalTwinsProperties
     */
    constructor() { 
        
        DigitalTwinsProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DigitalTwinsProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DigitalTwinsProperties} obj Optional instance to populate.
     * @return {module:model/DigitalTwinsProperties} The populated <code>DigitalTwinsProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DigitalTwinsProperties();

            if (data.hasOwnProperty('createdTime')) {
                obj['createdTime'] = ApiClient.convertToType(data['createdTime'], 'Date');
            }
            if (data.hasOwnProperty('hostName')) {
                obj['hostName'] = ApiClient.convertToType(data['hostName'], 'String');
            }
            if (data.hasOwnProperty('lastUpdatedTime')) {
                obj['lastUpdatedTime'] = ApiClient.convertToType(data['lastUpdatedTime'], 'Date');
            }
            if (data.hasOwnProperty('provisioningState')) {
                obj['provisioningState'] = ApiClient.convertToType(data['provisioningState'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DigitalTwinsProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DigitalTwinsProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['hostName'] && !(typeof data['hostName'] === 'string' || data['hostName'] instanceof String)) {
            throw new Error("Expected the field `hostName` to be a primitive type in the JSON string but got " + data['hostName']);
        }
        // ensure the json data is a string
        if (data['provisioningState'] && !(typeof data['provisioningState'] === 'string' || data['provisioningState'] instanceof String)) {
            throw new Error("Expected the field `provisioningState` to be a primitive type in the JSON string but got " + data['provisioningState']);
        }

        return true;
    }


}



/**
 * Time when DigitalTwinsInstance was created.
 * @member {Date} createdTime
 */
DigitalTwinsProperties.prototype['createdTime'] = undefined;

/**
 * Api endpoint to work with DigitalTwinsInstance.
 * @member {String} hostName
 */
DigitalTwinsProperties.prototype['hostName'] = undefined;

/**
 * Time when DigitalTwinsInstance was created.
 * @member {Date} lastUpdatedTime
 */
DigitalTwinsProperties.prototype['lastUpdatedTime'] = undefined;

/**
 * The provisioning state.
 * @member {module:model/DigitalTwinsProperties.ProvisioningStateEnum} provisioningState
 */
DigitalTwinsProperties.prototype['provisioningState'] = undefined;





/**
 * Allowed values for the <code>provisioningState</code> property.
 * @enum {String}
 * @readonly
 */
DigitalTwinsProperties['ProvisioningStateEnum'] = {

    /**
     * value: "Provisioning"
     * @const
     */
    "Provisioning": "Provisioning",

    /**
     * value: "Deleting"
     * @const
     */
    "Deleting": "Deleting",

    /**
     * value: "Succeeded"
     * @const
     */
    "Succeeded": "Succeeded",

    /**
     * value: "Failed"
     * @const
     */
    "Failed": "Failed",

    /**
     * value: "Canceled"
     * @const
     */
    "Canceled": "Canceled"
};



export default DigitalTwinsProperties;

