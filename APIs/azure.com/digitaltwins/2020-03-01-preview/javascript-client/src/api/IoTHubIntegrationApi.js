/**
 * AzureDigitalTwinsManagementClient
 * Azure Digital Twins Client for managing DigitalTwinsInstance
 *
 * The version of the OpenAPI document: 2020-03-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import DigitalTwinsIntegrationResourceListResult from '../model/DigitalTwinsIntegrationResourceListResult';
import ErrorResponse from '../model/ErrorResponse';
import IntegrationResource from '../model/IntegrationResource';

/**
* IoTHubIntegration service.
* @module api/IoTHubIntegrationApi
* @version 2020-03-01-preview
*/
export default class IoTHubIntegrationApi {

    /**
    * Constructs a new IoTHubIntegrationApi. 
    * @alias module:api/IoTHubIntegrationApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the digitalTwinsIoTHubsList operation.
     * @callback module:api/IoTHubIntegrationApi~digitalTwinsIoTHubsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DigitalTwinsIntegrationResourceListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get DigitalTwinsInstance IoTHubs.
     * @param {module:model/String} apiVersion Version of the DigitalTwinsInstance Management API.
     * @param {String} subscriptionId The subscription identifier.
     * @param {String} resourceGroupName The name of the resource group that contains the DigitalTwinsInstance.
     * @param {String} resourceName The name of the DigitalTwinsInstance.
     * @param {module:api/IoTHubIntegrationApi~digitalTwinsIoTHubsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DigitalTwinsIntegrationResourceListResult}
     */
    digitalTwinsIoTHubsList(apiVersion, subscriptionId, resourceGroupName, resourceName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling digitalTwinsIoTHubsList");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling digitalTwinsIoTHubsList");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling digitalTwinsIoTHubsList");
      }
      // verify the required parameter 'resourceName' is set
      if (resourceName === undefined || resourceName === null) {
        throw new Error("Missing the required parameter 'resourceName' when calling digitalTwinsIoTHubsList");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'resourceName': resourceName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DigitalTwinsIntegrationResourceListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DigitalTwins/digitalTwinsInstances/{resourceName}/integrationResources', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the ioTHubCreateOrUpdate operation.
     * @callback module:api/IoTHubIntegrationApi~ioTHubCreateOrUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/IntegrationResource} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates or Updates an IoTHub Integration with DigitalTwinsInstances.
     * @param {String} scope The scope of the Digital Twins Integration. The scope has to be an IoTHub resource. For example, /{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IoTHubs/{resourceName}.
     * @param {String} integrationResourceName Name of IoTHub and DigitalTwinsInstance integration instance.
     * @param {module:model/IntegrationResource} iotHubDescription The IoTHub metadata.
     * @param {module:api/IoTHubIntegrationApi~ioTHubCreateOrUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/IntegrationResource}
     */
    ioTHubCreateOrUpdate(scope, integrationResourceName, iotHubDescription, callback) {
      let postBody = iotHubDescription;
      // verify the required parameter 'scope' is set
      if (scope === undefined || scope === null) {
        throw new Error("Missing the required parameter 'scope' when calling ioTHubCreateOrUpdate");
      }
      // verify the required parameter 'integrationResourceName' is set
      if (integrationResourceName === undefined || integrationResourceName === null) {
        throw new Error("Missing the required parameter 'integrationResourceName' when calling ioTHubCreateOrUpdate");
      }
      // verify the required parameter 'iotHubDescription' is set
      if (iotHubDescription === undefined || iotHubDescription === null) {
        throw new Error("Missing the required parameter 'iotHubDescription' when calling ioTHubCreateOrUpdate");
      }

      let pathParams = {
        'scope': scope,
        'integrationResourceName': integrationResourceName
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = IntegrationResource;
      return this.apiClient.callApi(
        '/{scope}/providers/Microsoft.DigitalTwins/integrationResources/{integrationResourceName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the ioTHubDelete operation.
     * @callback module:api/IoTHubIntegrationApi~ioTHubDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes a DigitalTwinsInstance link with IoTHub.
     * @param {String} scope The scope of the Digital Twins Integration. The scope has to be an IoTHub resource. For example, /{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IoTHubs/{resourceName}.
     * @param {String} integrationResourceName Name of IoTHub and DigitalTwinsInstance integration instance.
     * @param {module:api/IoTHubIntegrationApi~ioTHubDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    ioTHubDelete(scope, integrationResourceName, callback) {
      let postBody = null;
      // verify the required parameter 'scope' is set
      if (scope === undefined || scope === null) {
        throw new Error("Missing the required parameter 'scope' when calling ioTHubDelete");
      }
      // verify the required parameter 'integrationResourceName' is set
      if (integrationResourceName === undefined || integrationResourceName === null) {
        throw new Error("Missing the required parameter 'integrationResourceName' when calling ioTHubDelete");
      }

      let pathParams = {
        'scope': scope,
        'integrationResourceName': integrationResourceName
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/{scope}/providers/Microsoft.DigitalTwins/integrationResources/{integrationResourceName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the ioTHubGet operation.
     * @callback module:api/IoTHubIntegrationApi~ioTHubGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/IntegrationResource} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets properties of an IoTHub Integration.
     * @param {String} scope The scope of the Digital Twins Integration. The scope has to be an IoTHub resource. For example, /{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IoTHubs/{resourceName}.
     * @param {String} integrationResourceName Name of IoTHub and DigitalTwinsInstance integration instance.
     * @param {module:api/IoTHubIntegrationApi~ioTHubGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/IntegrationResource}
     */
    ioTHubGet(scope, integrationResourceName, callback) {
      let postBody = null;
      // verify the required parameter 'scope' is set
      if (scope === undefined || scope === null) {
        throw new Error("Missing the required parameter 'scope' when calling ioTHubGet");
      }
      // verify the required parameter 'integrationResourceName' is set
      if (integrationResourceName === undefined || integrationResourceName === null) {
        throw new Error("Missing the required parameter 'integrationResourceName' when calling ioTHubGet");
      }

      let pathParams = {
        'scope': scope,
        'integrationResourceName': integrationResourceName
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = IntegrationResource;
      return this.apiClient.callApi(
        '/{scope}/providers/Microsoft.DigitalTwins/integrationResources/{integrationResourceName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
