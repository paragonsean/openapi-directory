/**
 * AzureDigitalTwinsManagementClient
 * Azure Digital Twins Client for managing DigitalTwinsInstance
 *
 * The version of the OpenAPI document: 2020-03-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import DigitalTwinsEndpointResource from '../model/DigitalTwinsEndpointResource';
import DigitalTwinsEndpointResourceListResult from '../model/DigitalTwinsEndpointResourceListResult';
import ErrorResponse from '../model/ErrorResponse';

/**
* Endpoints service.
* @module api/EndpointsApi
* @version 2020-03-01-preview
*/
export default class EndpointsApi {

    /**
    * Constructs a new EndpointsApi. 
    * @alias module:api/EndpointsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the digitalTwinsEndpointCreateOrUpdate operation.
     * @callback module:api/EndpointsApi~digitalTwinsEndpointCreateOrUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DigitalTwinsEndpointResource} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create or update DigitalTwinsInstance endpoint.
     * @param {module:model/String} apiVersion Version of the DigitalTwinsInstance Management API.
     * @param {String} subscriptionId The subscription identifier.
     * @param {String} resourceGroupName The name of the resource group that contains the DigitalTwinsInstance.
     * @param {String} resourceName The name of the DigitalTwinsInstance.
     * @param {String} endpointName Name of Endpoint Resource.
     * @param {module:model/DigitalTwinsEndpointResource} endpointDescription The DigitalTwinsInstance endpoint metadata and security metadata.
     * @param {module:api/EndpointsApi~digitalTwinsEndpointCreateOrUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DigitalTwinsEndpointResource}
     */
    digitalTwinsEndpointCreateOrUpdate(apiVersion, subscriptionId, resourceGroupName, resourceName, endpointName, endpointDescription, callback) {
      let postBody = endpointDescription;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling digitalTwinsEndpointCreateOrUpdate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling digitalTwinsEndpointCreateOrUpdate");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling digitalTwinsEndpointCreateOrUpdate");
      }
      // verify the required parameter 'resourceName' is set
      if (resourceName === undefined || resourceName === null) {
        throw new Error("Missing the required parameter 'resourceName' when calling digitalTwinsEndpointCreateOrUpdate");
      }
      // verify the required parameter 'endpointName' is set
      if (endpointName === undefined || endpointName === null) {
        throw new Error("Missing the required parameter 'endpointName' when calling digitalTwinsEndpointCreateOrUpdate");
      }
      // verify the required parameter 'endpointDescription' is set
      if (endpointDescription === undefined || endpointDescription === null) {
        throw new Error("Missing the required parameter 'endpointDescription' when calling digitalTwinsEndpointCreateOrUpdate");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'resourceName': resourceName,
        'endpointName': endpointName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = DigitalTwinsEndpointResource;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DigitalTwins/digitalTwinsInstances/{resourceName}/endpoints/{endpointName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the digitalTwinsEndpointDelete operation.
     * @callback module:api/EndpointsApi~digitalTwinsEndpointDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete a DigitalTwinsInstance endpoint.
     * @param {module:model/String} apiVersion Version of the DigitalTwinsInstance Management API.
     * @param {String} subscriptionId The subscription identifier.
     * @param {String} resourceGroupName The name of the resource group that contains the DigitalTwinsInstance.
     * @param {String} resourceName The name of the DigitalTwinsInstance.
     * @param {String} endpointName Name of Endpoint Resource.
     * @param {module:api/EndpointsApi~digitalTwinsEndpointDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    digitalTwinsEndpointDelete(apiVersion, subscriptionId, resourceGroupName, resourceName, endpointName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling digitalTwinsEndpointDelete");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling digitalTwinsEndpointDelete");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling digitalTwinsEndpointDelete");
      }
      // verify the required parameter 'resourceName' is set
      if (resourceName === undefined || resourceName === null) {
        throw new Error("Missing the required parameter 'resourceName' when calling digitalTwinsEndpointDelete");
      }
      // verify the required parameter 'endpointName' is set
      if (endpointName === undefined || endpointName === null) {
        throw new Error("Missing the required parameter 'endpointName' when calling digitalTwinsEndpointDelete");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'resourceName': resourceName,
        'endpointName': endpointName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DigitalTwins/digitalTwinsInstances/{resourceName}/endpoints/{endpointName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the digitalTwinsEndpointGet operation.
     * @callback module:api/EndpointsApi~digitalTwinsEndpointGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DigitalTwinsEndpointResource} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get DigitalTwinsInstances Endpoint.
     * @param {module:model/String} apiVersion Version of the DigitalTwinsInstance Management API.
     * @param {String} subscriptionId The subscription identifier.
     * @param {String} resourceGroupName The name of the resource group that contains the DigitalTwinsInstance.
     * @param {String} resourceName The name of the DigitalTwinsInstance.
     * @param {String} endpointName Name of Endpoint Resource.
     * @param {module:api/EndpointsApi~digitalTwinsEndpointGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DigitalTwinsEndpointResource}
     */
    digitalTwinsEndpointGet(apiVersion, subscriptionId, resourceGroupName, resourceName, endpointName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling digitalTwinsEndpointGet");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling digitalTwinsEndpointGet");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling digitalTwinsEndpointGet");
      }
      // verify the required parameter 'resourceName' is set
      if (resourceName === undefined || resourceName === null) {
        throw new Error("Missing the required parameter 'resourceName' when calling digitalTwinsEndpointGet");
      }
      // verify the required parameter 'endpointName' is set
      if (endpointName === undefined || endpointName === null) {
        throw new Error("Missing the required parameter 'endpointName' when calling digitalTwinsEndpointGet");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'resourceName': resourceName,
        'endpointName': endpointName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DigitalTwinsEndpointResource;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DigitalTwins/digitalTwinsInstances/{resourceName}/endpoints/{endpointName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the digitalTwinsEndpointList operation.
     * @callback module:api/EndpointsApi~digitalTwinsEndpointListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DigitalTwinsEndpointResourceListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get DigitalTwinsInstance Endpoints.
     * @param {module:model/String} apiVersion Version of the DigitalTwinsInstance Management API.
     * @param {String} subscriptionId The subscription identifier.
     * @param {String} resourceGroupName The name of the resource group that contains the DigitalTwinsInstance.
     * @param {String} resourceName The name of the DigitalTwinsInstance.
     * @param {module:api/EndpointsApi~digitalTwinsEndpointListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DigitalTwinsEndpointResourceListResult}
     */
    digitalTwinsEndpointList(apiVersion, subscriptionId, resourceGroupName, resourceName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling digitalTwinsEndpointList");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling digitalTwinsEndpointList");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling digitalTwinsEndpointList");
      }
      // verify the required parameter 'resourceName' is set
      if (resourceName === undefined || resourceName === null) {
        throw new Error("Missing the required parameter 'resourceName' when calling digitalTwinsEndpointList");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'resourceName': resourceName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DigitalTwinsEndpointResourceListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DigitalTwins/digitalTwinsInstances/{resourceName}/endpoints', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
