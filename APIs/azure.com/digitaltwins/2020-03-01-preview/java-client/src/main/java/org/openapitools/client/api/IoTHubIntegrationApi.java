/*
 * AzureDigitalTwinsManagementClient
 * Azure Digital Twins Client for managing DigitalTwinsInstance
 *
 * The version of the OpenAPI document: 2020-03-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.DigitalTwinsIntegrationResourceListResult;
import org.openapitools.client.model.ErrorResponse;
import org.openapitools.client.model.IntegrationResource;
import java.util.UUID;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class IoTHubIntegrationApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public IoTHubIntegrationApi() {
        this(Configuration.getDefaultApiClient());
    }

    public IoTHubIntegrationApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for digitalTwinsIoTHubsList
     * @param apiVersion Version of the DigitalTwinsInstance Management API. (required)
     * @param subscriptionId The subscription identifier. (required)
     * @param resourceGroupName The name of the resource group that contains the DigitalTwinsInstance. (required)
     * @param resourceName The name of the DigitalTwinsInstance. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The body contains all the non-security properties of the DigitalTwinsInstance. Security-related properties are set to null. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call digitalTwinsIoTHubsListCall(String apiVersion, UUID subscriptionId, String resourceGroupName, String resourceName, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DigitalTwins/digitalTwinsInstances/{resourceName}/integrationResources"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "resourceName" + "}", localVarApiClient.escapeString(resourceName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call digitalTwinsIoTHubsListValidateBeforeCall(String apiVersion, UUID subscriptionId, String resourceGroupName, String resourceName, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling digitalTwinsIoTHubsList(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling digitalTwinsIoTHubsList(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling digitalTwinsIoTHubsList(Async)");
        }

        // verify the required parameter 'resourceName' is set
        if (resourceName == null) {
            throw new ApiException("Missing the required parameter 'resourceName' when calling digitalTwinsIoTHubsList(Async)");
        }

        return digitalTwinsIoTHubsListCall(apiVersion, subscriptionId, resourceGroupName, resourceName, _callback);

    }

    /**
     * 
     * Get DigitalTwinsInstance IoTHubs.
     * @param apiVersion Version of the DigitalTwinsInstance Management API. (required)
     * @param subscriptionId The subscription identifier. (required)
     * @param resourceGroupName The name of the resource group that contains the DigitalTwinsInstance. (required)
     * @param resourceName The name of the DigitalTwinsInstance. (required)
     * @return DigitalTwinsIntegrationResourceListResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The body contains all the non-security properties of the DigitalTwinsInstance. Security-related properties are set to null. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public DigitalTwinsIntegrationResourceListResult digitalTwinsIoTHubsList(String apiVersion, UUID subscriptionId, String resourceGroupName, String resourceName) throws ApiException {
        ApiResponse<DigitalTwinsIntegrationResourceListResult> localVarResp = digitalTwinsIoTHubsListWithHttpInfo(apiVersion, subscriptionId, resourceGroupName, resourceName);
        return localVarResp.getData();
    }

    /**
     * 
     * Get DigitalTwinsInstance IoTHubs.
     * @param apiVersion Version of the DigitalTwinsInstance Management API. (required)
     * @param subscriptionId The subscription identifier. (required)
     * @param resourceGroupName The name of the resource group that contains the DigitalTwinsInstance. (required)
     * @param resourceName The name of the DigitalTwinsInstance. (required)
     * @return ApiResponse&lt;DigitalTwinsIntegrationResourceListResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The body contains all the non-security properties of the DigitalTwinsInstance. Security-related properties are set to null. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DigitalTwinsIntegrationResourceListResult> digitalTwinsIoTHubsListWithHttpInfo(String apiVersion, UUID subscriptionId, String resourceGroupName, String resourceName) throws ApiException {
        okhttp3.Call localVarCall = digitalTwinsIoTHubsListValidateBeforeCall(apiVersion, subscriptionId, resourceGroupName, resourceName, null);
        Type localVarReturnType = new TypeToken<DigitalTwinsIntegrationResourceListResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Get DigitalTwinsInstance IoTHubs.
     * @param apiVersion Version of the DigitalTwinsInstance Management API. (required)
     * @param subscriptionId The subscription identifier. (required)
     * @param resourceGroupName The name of the resource group that contains the DigitalTwinsInstance. (required)
     * @param resourceName The name of the DigitalTwinsInstance. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The body contains all the non-security properties of the DigitalTwinsInstance. Security-related properties are set to null. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call digitalTwinsIoTHubsListAsync(String apiVersion, UUID subscriptionId, String resourceGroupName, String resourceName, final ApiCallback<DigitalTwinsIntegrationResourceListResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = digitalTwinsIoTHubsListValidateBeforeCall(apiVersion, subscriptionId, resourceGroupName, resourceName, _callback);
        Type localVarReturnType = new TypeToken<DigitalTwinsIntegrationResourceListResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for ioTHubCreateOrUpdate
     * @param scope The scope of the Digital Twins Integration. The scope has to be an IoTHub resource. For example, /{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IoTHubs/{resourceName}. (required)
     * @param integrationResourceName Name of IoTHub and DigitalTwinsInstance integration instance. (required)
     * @param iotHubDescription The IoTHub metadata. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> This is an asynchronous operation. The body contains metadata about IoTHub and DigitalTwinsInstance Integration. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call ioTHubCreateOrUpdateCall(String scope, String integrationResourceName, IntegrationResource iotHubDescription, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = iotHubDescription;

        // create path and map variables
        String localVarPath = "/{scope}/providers/Microsoft.DigitalTwins/integrationResources/{integrationResourceName}"
            .replace("{" + "scope" + "}", localVarApiClient.escapeString(scope.toString()))
            .replace("{" + "integrationResourceName" + "}", localVarApiClient.escapeString(integrationResourceName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call ioTHubCreateOrUpdateValidateBeforeCall(String scope, String integrationResourceName, IntegrationResource iotHubDescription, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'scope' is set
        if (scope == null) {
            throw new ApiException("Missing the required parameter 'scope' when calling ioTHubCreateOrUpdate(Async)");
        }

        // verify the required parameter 'integrationResourceName' is set
        if (integrationResourceName == null) {
            throw new ApiException("Missing the required parameter 'integrationResourceName' when calling ioTHubCreateOrUpdate(Async)");
        }

        // verify the required parameter 'iotHubDescription' is set
        if (iotHubDescription == null) {
            throw new ApiException("Missing the required parameter 'iotHubDescription' when calling ioTHubCreateOrUpdate(Async)");
        }

        return ioTHubCreateOrUpdateCall(scope, integrationResourceName, iotHubDescription, _callback);

    }

    /**
     * 
     * Creates or Updates an IoTHub Integration with DigitalTwinsInstances.
     * @param scope The scope of the Digital Twins Integration. The scope has to be an IoTHub resource. For example, /{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IoTHubs/{resourceName}. (required)
     * @param integrationResourceName Name of IoTHub and DigitalTwinsInstance integration instance. (required)
     * @param iotHubDescription The IoTHub metadata. (required)
     * @return IntegrationResource
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> This is an asynchronous operation. The body contains metadata about IoTHub and DigitalTwinsInstance Integration. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public IntegrationResource ioTHubCreateOrUpdate(String scope, String integrationResourceName, IntegrationResource iotHubDescription) throws ApiException {
        ApiResponse<IntegrationResource> localVarResp = ioTHubCreateOrUpdateWithHttpInfo(scope, integrationResourceName, iotHubDescription);
        return localVarResp.getData();
    }

    /**
     * 
     * Creates or Updates an IoTHub Integration with DigitalTwinsInstances.
     * @param scope The scope of the Digital Twins Integration. The scope has to be an IoTHub resource. For example, /{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IoTHubs/{resourceName}. (required)
     * @param integrationResourceName Name of IoTHub and DigitalTwinsInstance integration instance. (required)
     * @param iotHubDescription The IoTHub metadata. (required)
     * @return ApiResponse&lt;IntegrationResource&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> This is an asynchronous operation. The body contains metadata about IoTHub and DigitalTwinsInstance Integration. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<IntegrationResource> ioTHubCreateOrUpdateWithHttpInfo(String scope, String integrationResourceName, IntegrationResource iotHubDescription) throws ApiException {
        okhttp3.Call localVarCall = ioTHubCreateOrUpdateValidateBeforeCall(scope, integrationResourceName, iotHubDescription, null);
        Type localVarReturnType = new TypeToken<IntegrationResource>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Creates or Updates an IoTHub Integration with DigitalTwinsInstances.
     * @param scope The scope of the Digital Twins Integration. The scope has to be an IoTHub resource. For example, /{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IoTHubs/{resourceName}. (required)
     * @param integrationResourceName Name of IoTHub and DigitalTwinsInstance integration instance. (required)
     * @param iotHubDescription The IoTHub metadata. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> This is an asynchronous operation. The body contains metadata about IoTHub and DigitalTwinsInstance Integration. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call ioTHubCreateOrUpdateAsync(String scope, String integrationResourceName, IntegrationResource iotHubDescription, final ApiCallback<IntegrationResource> _callback) throws ApiException {

        okhttp3.Call localVarCall = ioTHubCreateOrUpdateValidateBeforeCall(scope, integrationResourceName, iotHubDescription, _callback);
        Type localVarReturnType = new TypeToken<IntegrationResource>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for ioTHubDelete
     * @param scope The scope of the Digital Twins Integration. The scope has to be an IoTHub resource. For example, /{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IoTHubs/{resourceName}. (required)
     * @param integrationResourceName Name of IoTHub and DigitalTwinsInstance integration instance. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. DigitalTwinsInstance IoTHub link has been Deleted. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted. Response includes a Location header which points to the DigitalTwins and IoTHub Integration resource. </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> NoContent. DigitalTwinsInstance IoTHub link does not exist. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call ioTHubDeleteCall(String scope, String integrationResourceName, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/{scope}/providers/Microsoft.DigitalTwins/integrationResources/{integrationResourceName}"
            .replace("{" + "scope" + "}", localVarApiClient.escapeString(scope.toString()))
            .replace("{" + "integrationResourceName" + "}", localVarApiClient.escapeString(integrationResourceName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call ioTHubDeleteValidateBeforeCall(String scope, String integrationResourceName, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'scope' is set
        if (scope == null) {
            throw new ApiException("Missing the required parameter 'scope' when calling ioTHubDelete(Async)");
        }

        // verify the required parameter 'integrationResourceName' is set
        if (integrationResourceName == null) {
            throw new ApiException("Missing the required parameter 'integrationResourceName' when calling ioTHubDelete(Async)");
        }

        return ioTHubDeleteCall(scope, integrationResourceName, _callback);

    }

    /**
     * 
     * Deletes a DigitalTwinsInstance link with IoTHub.
     * @param scope The scope of the Digital Twins Integration. The scope has to be an IoTHub resource. For example, /{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IoTHubs/{resourceName}. (required)
     * @param integrationResourceName Name of IoTHub and DigitalTwinsInstance integration instance. (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. DigitalTwinsInstance IoTHub link has been Deleted. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted. Response includes a Location header which points to the DigitalTwins and IoTHub Integration resource. </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> NoContent. DigitalTwinsInstance IoTHub link does not exist. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public void ioTHubDelete(String scope, String integrationResourceName) throws ApiException {
        ioTHubDeleteWithHttpInfo(scope, integrationResourceName);
    }

    /**
     * 
     * Deletes a DigitalTwinsInstance link with IoTHub.
     * @param scope The scope of the Digital Twins Integration. The scope has to be an IoTHub resource. For example, /{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IoTHubs/{resourceName}. (required)
     * @param integrationResourceName Name of IoTHub and DigitalTwinsInstance integration instance. (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. DigitalTwinsInstance IoTHub link has been Deleted. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted. Response includes a Location header which points to the DigitalTwins and IoTHub Integration resource. </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> NoContent. DigitalTwinsInstance IoTHub link does not exist. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> ioTHubDeleteWithHttpInfo(String scope, String integrationResourceName) throws ApiException {
        okhttp3.Call localVarCall = ioTHubDeleteValidateBeforeCall(scope, integrationResourceName, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     *  (asynchronously)
     * Deletes a DigitalTwinsInstance link with IoTHub.
     * @param scope The scope of the Digital Twins Integration. The scope has to be an IoTHub resource. For example, /{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IoTHubs/{resourceName}. (required)
     * @param integrationResourceName Name of IoTHub and DigitalTwinsInstance integration instance. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. DigitalTwinsInstance IoTHub link has been Deleted. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted. Response includes a Location header which points to the DigitalTwins and IoTHub Integration resource. </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> NoContent. DigitalTwinsInstance IoTHub link does not exist. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call ioTHubDeleteAsync(String scope, String integrationResourceName, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = ioTHubDeleteValidateBeforeCall(scope, integrationResourceName, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for ioTHubGet
     * @param scope The scope of the Digital Twins Integration. The scope has to be an IoTHub resource. For example, /{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IoTHubs/{resourceName}. (required)
     * @param integrationResourceName Name of IoTHub and DigitalTwinsInstance integration instance. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> This is a synchronous operation. The body contains metadata about IoTHub and DigitalTwinsInstance Integration. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call ioTHubGetCall(String scope, String integrationResourceName, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/{scope}/providers/Microsoft.DigitalTwins/integrationResources/{integrationResourceName}"
            .replace("{" + "scope" + "}", localVarApiClient.escapeString(scope.toString()))
            .replace("{" + "integrationResourceName" + "}", localVarApiClient.escapeString(integrationResourceName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call ioTHubGetValidateBeforeCall(String scope, String integrationResourceName, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'scope' is set
        if (scope == null) {
            throw new ApiException("Missing the required parameter 'scope' when calling ioTHubGet(Async)");
        }

        // verify the required parameter 'integrationResourceName' is set
        if (integrationResourceName == null) {
            throw new ApiException("Missing the required parameter 'integrationResourceName' when calling ioTHubGet(Async)");
        }

        return ioTHubGetCall(scope, integrationResourceName, _callback);

    }

    /**
     * 
     * Gets properties of an IoTHub Integration.
     * @param scope The scope of the Digital Twins Integration. The scope has to be an IoTHub resource. For example, /{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IoTHubs/{resourceName}. (required)
     * @param integrationResourceName Name of IoTHub and DigitalTwinsInstance integration instance. (required)
     * @return IntegrationResource
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> This is a synchronous operation. The body contains metadata about IoTHub and DigitalTwinsInstance Integration. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public IntegrationResource ioTHubGet(String scope, String integrationResourceName) throws ApiException {
        ApiResponse<IntegrationResource> localVarResp = ioTHubGetWithHttpInfo(scope, integrationResourceName);
        return localVarResp.getData();
    }

    /**
     * 
     * Gets properties of an IoTHub Integration.
     * @param scope The scope of the Digital Twins Integration. The scope has to be an IoTHub resource. For example, /{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IoTHubs/{resourceName}. (required)
     * @param integrationResourceName Name of IoTHub and DigitalTwinsInstance integration instance. (required)
     * @return ApiResponse&lt;IntegrationResource&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> This is a synchronous operation. The body contains metadata about IoTHub and DigitalTwinsInstance Integration. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<IntegrationResource> ioTHubGetWithHttpInfo(String scope, String integrationResourceName) throws ApiException {
        okhttp3.Call localVarCall = ioTHubGetValidateBeforeCall(scope, integrationResourceName, null);
        Type localVarReturnType = new TypeToken<IntegrationResource>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Gets properties of an IoTHub Integration.
     * @param scope The scope of the Digital Twins Integration. The scope has to be an IoTHub resource. For example, /{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IoTHubs/{resourceName}. (required)
     * @param integrationResourceName Name of IoTHub and DigitalTwinsInstance integration instance. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> This is a synchronous operation. The body contains metadata about IoTHub and DigitalTwinsInstance Integration. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call ioTHubGetAsync(String scope, String integrationResourceName, final ApiCallback<IntegrationResource> _callback) throws ApiException {

        okhttp3.Call localVarCall = ioTHubGetValidateBeforeCall(scope, integrationResourceName, _callback);
        Type localVarReturnType = new TypeToken<IntegrationResource>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
