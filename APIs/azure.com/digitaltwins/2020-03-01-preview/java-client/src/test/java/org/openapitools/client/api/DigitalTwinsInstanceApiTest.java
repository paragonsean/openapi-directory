/*
 * AzureDigitalTwinsManagementClient
 * Azure Digital Twins Client for managing DigitalTwinsInstance
 *
 * The version of the OpenAPI document: 2020-03-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.DigitalTwinsDescription;
import org.openapitools.client.model.DigitalTwinsDescriptionListResult;
import org.openapitools.client.model.DigitalTwinsPatchDescription;
import org.openapitools.client.model.ErrorResponse;
import java.util.UUID;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DigitalTwinsInstanceApi
 */
@Disabled
public class DigitalTwinsInstanceApiTest {

    private final DigitalTwinsInstanceApi api = new DigitalTwinsInstanceApi();

    /**
     * Create or update the metadata of a DigitalTwinsInstance. The usual pattern to modify a property is to retrieve the DigitalTwinsInstance and security metadata, and then combine them with the modified values in a new body to update the DigitalTwinsInstance.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void digitalTwinsCreateOrUpdateTest() throws ApiException {
        String apiVersion = null;
        UUID subscriptionId = null;
        String resourceGroupName = null;
        String resourceName = null;
        DigitalTwinsDescription digitalTwinsCreate = null;
        DigitalTwinsDescription response = api.digitalTwinsCreateOrUpdate(apiVersion, subscriptionId, resourceGroupName, resourceName, digitalTwinsCreate);
        // TODO: test validations
    }

    /**
     * Delete a DigitalTwinsInstance.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void digitalTwinsDeleteTest() throws ApiException {
        String apiVersion = null;
        UUID subscriptionId = null;
        String resourceGroupName = null;
        String resourceName = null;
        api.digitalTwinsDelete(apiVersion, subscriptionId, resourceGroupName, resourceName);
        // TODO: test validations
    }

    /**
     * Get DigitalTwinsInstances resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void digitalTwinsGetTest() throws ApiException {
        String apiVersion = null;
        UUID subscriptionId = null;
        String resourceGroupName = null;
        String resourceName = null;
        DigitalTwinsDescription response = api.digitalTwinsGet(apiVersion, subscriptionId, resourceGroupName, resourceName);
        // TODO: test validations
    }

    /**
     * Get all the DigitalTwinsInstances in a subscription.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void digitalTwinsListTest() throws ApiException {
        String apiVersion = null;
        UUID subscriptionId = null;
        DigitalTwinsDescriptionListResult response = api.digitalTwinsList(apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Get all the DigitalTwinsInstances in a resource group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void digitalTwinsListByResourceGroupTest() throws ApiException {
        String apiVersion = null;
        UUID subscriptionId = null;
        String resourceGroupName = null;
        DigitalTwinsDescriptionListResult response = api.digitalTwinsListByResourceGroup(apiVersion, subscriptionId, resourceGroupName);
        // TODO: test validations
    }

    /**
     * Update metadata of DigitalTwinsInstance.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void digitalTwinsUpdateTest() throws ApiException {
        String apiVersion = null;
        UUID subscriptionId = null;
        String resourceGroupName = null;
        String resourceName = null;
        DigitalTwinsPatchDescription digitalTwinsPatchDescription = null;
        DigitalTwinsDescription response = api.digitalTwinsUpdate(apiVersion, subscriptionId, resourceGroupName, resourceName, digitalTwinsPatchDescription);
        // TODO: test validations
    }

}
