/*
 * AzureDigitalTwinsManagementClient
 * Azure Digital Twins Client for managing DigitalTwinsInstance
 *
 * The version of the OpenAPI document: 2020-03-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.DigitalTwinsEndpointResource;
import org.openapitools.client.model.DigitalTwinsEndpointResourceListResult;
import org.openapitools.client.model.ErrorResponse;
import java.util.UUID;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for EndpointsApi
 */
@Disabled
public class EndpointsApiTest {

    private final EndpointsApi api = new EndpointsApi();

    /**
     * Create or update DigitalTwinsInstance endpoint.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void digitalTwinsEndpointCreateOrUpdateTest() throws ApiException {
        String apiVersion = null;
        UUID subscriptionId = null;
        String resourceGroupName = null;
        String resourceName = null;
        String endpointName = null;
        DigitalTwinsEndpointResource endpointDescription = null;
        DigitalTwinsEndpointResource response = api.digitalTwinsEndpointCreateOrUpdate(apiVersion, subscriptionId, resourceGroupName, resourceName, endpointName, endpointDescription);
        // TODO: test validations
    }

    /**
     * Delete a DigitalTwinsInstance endpoint.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void digitalTwinsEndpointDeleteTest() throws ApiException {
        String apiVersion = null;
        UUID subscriptionId = null;
        String resourceGroupName = null;
        String resourceName = null;
        String endpointName = null;
        api.digitalTwinsEndpointDelete(apiVersion, subscriptionId, resourceGroupName, resourceName, endpointName);
        // TODO: test validations
    }

    /**
     * Get DigitalTwinsInstances Endpoint.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void digitalTwinsEndpointGetTest() throws ApiException {
        String apiVersion = null;
        UUID subscriptionId = null;
        String resourceGroupName = null;
        String resourceName = null;
        String endpointName = null;
        DigitalTwinsEndpointResource response = api.digitalTwinsEndpointGet(apiVersion, subscriptionId, resourceGroupName, resourceName, endpointName);
        // TODO: test validations
    }

    /**
     * Get DigitalTwinsInstance Endpoints.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void digitalTwinsEndpointListTest() throws ApiException {
        String apiVersion = null;
        UUID subscriptionId = null;
        String resourceGroupName = null;
        String resourceName = null;
        DigitalTwinsEndpointResourceListResult response = api.digitalTwinsEndpointList(apiVersion, subscriptionId, resourceGroupName, resourceName);
        // TODO: test validations
    }

}
