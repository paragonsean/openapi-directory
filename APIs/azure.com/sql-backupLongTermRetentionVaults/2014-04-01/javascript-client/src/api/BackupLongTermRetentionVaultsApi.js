/**
 * Azure SQL Server Backup Long Term Retention Vault
 * Provides read and update functionality for Azure SQL Server backup long term retention vault
 *
 * The version of the OpenAPI document: 2014-04-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import BackupLongTermRetentionVault from '../model/BackupLongTermRetentionVault';
import BackupLongTermRetentionVaultListResult from '../model/BackupLongTermRetentionVaultListResult';

/**
* BackupLongTermRetentionVaults service.
* @module api/BackupLongTermRetentionVaultsApi
* @version 2014-04-01
*/
export default class BackupLongTermRetentionVaultsApi {

    /**
    * Constructs a new BackupLongTermRetentionVaultsApi. 
    * @alias module:api/BackupLongTermRetentionVaultsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the backupLongTermRetentionVaultsCreateOrUpdate operation.
     * @callback module:api/BackupLongTermRetentionVaultsApi~backupLongTermRetentionVaultsCreateOrUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BackupLongTermRetentionVault} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates a server backup long term retention vault
     * @param {String} apiVersion The API version to use for the request.
     * @param {String} subscriptionId The subscription ID that identifies an Azure subscription.
     * @param {String} resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     * @param {String} serverName The name of the server.
     * @param {module:model/String} backupLongTermRetentionVaultName The name of the backup long term retention vault
     * @param {module:model/BackupLongTermRetentionVault} parameters The required parameters to update a backup long term retention vault
     * @param {module:api/BackupLongTermRetentionVaultsApi~backupLongTermRetentionVaultsCreateOrUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BackupLongTermRetentionVault}
     */
    backupLongTermRetentionVaultsCreateOrUpdate(apiVersion, subscriptionId, resourceGroupName, serverName, backupLongTermRetentionVaultName, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling backupLongTermRetentionVaultsCreateOrUpdate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling backupLongTermRetentionVaultsCreateOrUpdate");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling backupLongTermRetentionVaultsCreateOrUpdate");
      }
      // verify the required parameter 'serverName' is set
      if (serverName === undefined || serverName === null) {
        throw new Error("Missing the required parameter 'serverName' when calling backupLongTermRetentionVaultsCreateOrUpdate");
      }
      // verify the required parameter 'backupLongTermRetentionVaultName' is set
      if (backupLongTermRetentionVaultName === undefined || backupLongTermRetentionVaultName === null) {
        throw new Error("Missing the required parameter 'backupLongTermRetentionVaultName' when calling backupLongTermRetentionVaultsCreateOrUpdate");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling backupLongTermRetentionVaultsCreateOrUpdate");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'serverName': serverName,
        'backupLongTermRetentionVaultName': backupLongTermRetentionVaultName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = BackupLongTermRetentionVault;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/backupLongTermRetentionVaults/{backupLongTermRetentionVaultName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the backupLongTermRetentionVaultsGet operation.
     * @callback module:api/BackupLongTermRetentionVaultsApi~backupLongTermRetentionVaultsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BackupLongTermRetentionVault} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets a server backup long term retention vault
     * @param {String} apiVersion The API version to use for the request.
     * @param {String} subscriptionId The subscription ID that identifies an Azure subscription.
     * @param {String} resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     * @param {String} serverName The name of the server.
     * @param {module:model/String} backupLongTermRetentionVaultName The name of the Azure SQL Server backup LongTermRetention vault
     * @param {module:api/BackupLongTermRetentionVaultsApi~backupLongTermRetentionVaultsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BackupLongTermRetentionVault}
     */
    backupLongTermRetentionVaultsGet(apiVersion, subscriptionId, resourceGroupName, serverName, backupLongTermRetentionVaultName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling backupLongTermRetentionVaultsGet");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling backupLongTermRetentionVaultsGet");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling backupLongTermRetentionVaultsGet");
      }
      // verify the required parameter 'serverName' is set
      if (serverName === undefined || serverName === null) {
        throw new Error("Missing the required parameter 'serverName' when calling backupLongTermRetentionVaultsGet");
      }
      // verify the required parameter 'backupLongTermRetentionVaultName' is set
      if (backupLongTermRetentionVaultName === undefined || backupLongTermRetentionVaultName === null) {
        throw new Error("Missing the required parameter 'backupLongTermRetentionVaultName' when calling backupLongTermRetentionVaultsGet");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'serverName': serverName,
        'backupLongTermRetentionVaultName': backupLongTermRetentionVaultName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = BackupLongTermRetentionVault;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/backupLongTermRetentionVaults/{backupLongTermRetentionVaultName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the backupLongTermRetentionVaultsListByServer operation.
     * @callback module:api/BackupLongTermRetentionVaultsApi~backupLongTermRetentionVaultsListByServerCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BackupLongTermRetentionVaultListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets server backup long term retention vaults in a server
     * @param {String} apiVersion The API version to use for the request.
     * @param {String} subscriptionId The subscription ID that identifies an Azure subscription.
     * @param {String} resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     * @param {String} serverName The name of the server.
     * @param {module:api/BackupLongTermRetentionVaultsApi~backupLongTermRetentionVaultsListByServerCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BackupLongTermRetentionVaultListResult}
     */
    backupLongTermRetentionVaultsListByServer(apiVersion, subscriptionId, resourceGroupName, serverName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling backupLongTermRetentionVaultsListByServer");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling backupLongTermRetentionVaultsListByServer");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling backupLongTermRetentionVaultsListByServer");
      }
      // verify the required parameter 'serverName' is set
      if (serverName === undefined || serverName === null) {
        throw new Error("Missing the required parameter 'serverName' when calling backupLongTermRetentionVaultsListByServer");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'serverName': serverName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = BackupLongTermRetentionVaultListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/backupLongTermRetentionVaults', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
