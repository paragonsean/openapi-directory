/**
 * HDInsightManagementClient
 * The HDInsight Management Client.
 *
 * The version of the OpenAPI document: 2015-03-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIVersionSpec.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIVersionSpec::OAIVersionSpec(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIVersionSpec::OAIVersionSpec() {
    this->initializeModel();
}

OAIVersionSpec::~OAIVersionSpec() {}

void OAIVersionSpec::initializeModel() {

    m_component_versions_isSet = false;
    m_component_versions_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_friendly_name_isSet = false;
    m_friendly_name_isValid = false;

    m_is_default_isSet = false;
    m_is_default_isValid = false;
}

void OAIVersionSpec::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIVersionSpec::fromJsonObject(QJsonObject json) {

    m_component_versions_isValid = ::OpenAPI::fromJsonValue(m_component_versions, json[QString("componentVersions")]);
    m_component_versions_isSet = !json[QString("componentVersions")].isNull() && m_component_versions_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_friendly_name_isValid = ::OpenAPI::fromJsonValue(m_friendly_name, json[QString("friendlyName")]);
    m_friendly_name_isSet = !json[QString("friendlyName")].isNull() && m_friendly_name_isValid;

    m_is_default_isValid = ::OpenAPI::fromJsonValue(m_is_default, json[QString("isDefault")]);
    m_is_default_isSet = !json[QString("isDefault")].isNull() && m_is_default_isValid;
}

QString OAIVersionSpec::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIVersionSpec::asJsonObject() const {
    QJsonObject obj;
    if (m_component_versions.size() > 0) {
        obj.insert(QString("componentVersions"), ::OpenAPI::toJsonValue(m_component_versions));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_friendly_name_isSet) {
        obj.insert(QString("friendlyName"), ::OpenAPI::toJsonValue(m_friendly_name));
    }
    if (m_is_default_isSet) {
        obj.insert(QString("isDefault"), ::OpenAPI::toJsonValue(m_is_default));
    }
    return obj;
}

QMap<QString, QString> OAIVersionSpec::getComponentVersions() const {
    return m_component_versions;
}
void OAIVersionSpec::setComponentVersions(const QMap<QString, QString> &component_versions) {
    m_component_versions = component_versions;
    m_component_versions_isSet = true;
}

bool OAIVersionSpec::is_component_versions_Set() const{
    return m_component_versions_isSet;
}

bool OAIVersionSpec::is_component_versions_Valid() const{
    return m_component_versions_isValid;
}

QString OAIVersionSpec::getDisplayName() const {
    return m_display_name;
}
void OAIVersionSpec::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIVersionSpec::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIVersionSpec::is_display_name_Valid() const{
    return m_display_name_isValid;
}

QString OAIVersionSpec::getFriendlyName() const {
    return m_friendly_name;
}
void OAIVersionSpec::setFriendlyName(const QString &friendly_name) {
    m_friendly_name = friendly_name;
    m_friendly_name_isSet = true;
}

bool OAIVersionSpec::is_friendly_name_Set() const{
    return m_friendly_name_isSet;
}

bool OAIVersionSpec::is_friendly_name_Valid() const{
    return m_friendly_name_isValid;
}

QString OAIVersionSpec::getIsDefault() const {
    return m_is_default;
}
void OAIVersionSpec::setIsDefault(const QString &is_default) {
    m_is_default = is_default;
    m_is_default_isSet = true;
}

bool OAIVersionSpec::is_is_default_Set() const{
    return m_is_default_isSet;
}

bool OAIVersionSpec::is_is_default_Valid() const{
    return m_is_default_isValid;
}

bool OAIVersionSpec::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_component_versions.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_friendly_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_default_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIVersionSpec::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
