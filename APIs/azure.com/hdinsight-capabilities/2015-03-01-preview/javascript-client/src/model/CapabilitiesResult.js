/**
 * HDInsightManagementClient
 * The HDInsight Management Client.
 *
 * The version of the OpenAPI document: 2015-03-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import QuotaCapability from './QuotaCapability';
import RegionsCapability from './RegionsCapability';
import VersionsCapability from './VersionsCapability';
import VmSizeCompatibilityFilter from './VmSizeCompatibilityFilter';
import VmSizesCapability from './VmSizesCapability';

/**
 * The CapabilitiesResult model module.
 * @module model/CapabilitiesResult
 * @version 2015-03-01-preview
 */
class CapabilitiesResult {
    /**
     * Constructs a new <code>CapabilitiesResult</code>.
     * The Get Capabilities operation response.
     * @alias module:model/CapabilitiesResult
     */
    constructor() { 
        
        CapabilitiesResult.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CapabilitiesResult</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CapabilitiesResult} obj Optional instance to populate.
     * @return {module:model/CapabilitiesResult} The populated <code>CapabilitiesResult</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CapabilitiesResult();

            if (data.hasOwnProperty('features')) {
                obj['features'] = ApiClient.convertToType(data['features'], ['String']);
            }
            if (data.hasOwnProperty('quota')) {
                obj['quota'] = QuotaCapability.constructFromObject(data['quota']);
            }
            if (data.hasOwnProperty('regions')) {
                obj['regions'] = ApiClient.convertToType(data['regions'], {'String': RegionsCapability});
            }
            if (data.hasOwnProperty('versions')) {
                obj['versions'] = ApiClient.convertToType(data['versions'], {'String': VersionsCapability});
            }
            if (data.hasOwnProperty('vmSize_filters')) {
                obj['vmSize_filters'] = ApiClient.convertToType(data['vmSize_filters'], [VmSizeCompatibilityFilter]);
            }
            if (data.hasOwnProperty('vmSizes')) {
                obj['vmSizes'] = ApiClient.convertToType(data['vmSizes'], {'String': VmSizesCapability});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CapabilitiesResult</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CapabilitiesResult</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['features'])) {
            throw new Error("Expected the field `features` to be an array in the JSON data but got " + data['features']);
        }
        // validate the optional field `quota`
        if (data['quota']) { // data not null
          QuotaCapability.validateJSON(data['quota']);
        }
        if (data['vmSize_filters']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['vmSize_filters'])) {
                throw new Error("Expected the field `vmSize_filters` to be an array in the JSON data but got " + data['vmSize_filters']);
            }
            // validate the optional field `vmSize_filters` (array)
            for (const item of data['vmSize_filters']) {
                VmSizeCompatibilityFilter.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * The capabilty features.
 * @member {Array.<String>} features
 */
CapabilitiesResult.prototype['features'] = undefined;

/**
 * @member {module:model/QuotaCapability} quota
 */
CapabilitiesResult.prototype['quota'] = undefined;

/**
 * The virtual machine size compatibilty features.
 * @member {Object.<String, module:model/RegionsCapability>} regions
 */
CapabilitiesResult.prototype['regions'] = undefined;

/**
 * The version capability.
 * @member {Object.<String, module:model/VersionsCapability>} versions
 */
CapabilitiesResult.prototype['versions'] = undefined;

/**
 * The virtual machine size compatibilty filters.
 * @member {Array.<module:model/VmSizeCompatibilityFilter>} vmSize_filters
 */
CapabilitiesResult.prototype['vmSize_filters'] = undefined;

/**
 * The virtual machine sizes.
 * @member {Object.<String, module:model/VmSizesCapability>} vmSizes
 */
CapabilitiesResult.prototype['vmSizes'] = undefined;






export default CapabilitiesResult;

