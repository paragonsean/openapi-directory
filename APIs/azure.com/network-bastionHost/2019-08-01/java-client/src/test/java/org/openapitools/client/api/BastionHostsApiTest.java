/*
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2019-08-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.BastionHost;
import org.openapitools.client.model.BastionHostListResult;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for BastionHostsApi
 */
@Disabled
public class BastionHostsApiTest {

    private final BastionHostsApi api = new BastionHostsApi();

    /**
     * Creates or updates the specified Bastion Host.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void bastionHostsCreateOrUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String bastionHostName = null;
        String apiVersion = null;
        String subscriptionId = null;
        BastionHost parameters = null;
        BastionHost response = api.bastionHostsCreateOrUpdate(resourceGroupName, bastionHostName, apiVersion, subscriptionId, parameters);
        // TODO: test validations
    }

    /**
     * Deletes the specified Bastion Host.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void bastionHostsDeleteTest() throws ApiException {
        String resourceGroupName = null;
        String bastionHostName = null;
        String apiVersion = null;
        String subscriptionId = null;
        api.bastionHostsDelete(resourceGroupName, bastionHostName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Gets the specified Bastion Host.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void bastionHostsGetTest() throws ApiException {
        String resourceGroupName = null;
        String bastionHostName = null;
        String apiVersion = null;
        String subscriptionId = null;
        BastionHost response = api.bastionHostsGet(resourceGroupName, bastionHostName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Lists all Bastion Hosts in a subscription.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void bastionHostsListTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        BastionHostListResult response = api.bastionHostsList(apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Lists all Bastion Hosts in a resource group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void bastionHostsListByResourceGroupTest() throws ApiException {
        String resourceGroupName = null;
        String apiVersion = null;
        String subscriptionId = null;
        BastionHostListResult response = api.bastionHostsListByResourceGroup(resourceGroupName, apiVersion, subscriptionId);
        // TODO: test validations
    }

}
