# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ScaleOutScaleUnitParameters(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bmc_ipv4_address: str=None, computer_name: str=None):
        """ScaleOutScaleUnitParameters - a model defined in OpenAPI

        :param bmc_ipv4_address: The bmc_ipv4_address of this ScaleOutScaleUnitParameters.
        :param computer_name: The computer_name of this ScaleOutScaleUnitParameters.
        """
        self.openapi_types = {
            'bmc_ipv4_address': str,
            'computer_name': str
        }

        self.attribute_map = {
            'bmc_ipv4_address': 'bmcIpv4Address',
            'computer_name': 'computerName'
        }

        self._bmc_ipv4_address = bmc_ipv4_address
        self._computer_name = computer_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ScaleOutScaleUnitParameters':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ScaleOutScaleUnitParameters of this ScaleOutScaleUnitParameters.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bmc_ipv4_address(self):
        """Gets the bmc_ipv4_address of this ScaleOutScaleUnitParameters.

        BMC address of the physical machine.

        :return: The bmc_ipv4_address of this ScaleOutScaleUnitParameters.
        :rtype: str
        """
        return self._bmc_ipv4_address

    @bmc_ipv4_address.setter
    def bmc_ipv4_address(self, bmc_ipv4_address):
        """Sets the bmc_ipv4_address of this ScaleOutScaleUnitParameters.

        BMC address of the physical machine.

        :param bmc_ipv4_address: The bmc_ipv4_address of this ScaleOutScaleUnitParameters.
        :type bmc_ipv4_address: str
        """

        self._bmc_ipv4_address = bmc_ipv4_address

    @property
    def computer_name(self):
        """Gets the computer_name of this ScaleOutScaleUnitParameters.

        Computer name of the physical machine.

        :return: The computer_name of this ScaleOutScaleUnitParameters.
        :rtype: str
        """
        return self._computer_name

    @computer_name.setter
    def computer_name(self, computer_name):
        """Sets the computer_name of this ScaleOutScaleUnitParameters.

        Computer name of the physical machine.

        :param computer_name: The computer_name of this ScaleOutScaleUnitParameters.
        :type computer_name: str
        """

        self._computer_name = computer_name
