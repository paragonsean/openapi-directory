/**
 * FabricAdminClient
 * Scale unit operation endpoints and objects.
 *
 * The version of the OpenAPI document: 2016-05-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateFromJsonScaleUnitParametersList.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateFromJsonScaleUnitParametersList::OAICreateFromJsonScaleUnitParametersList(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateFromJsonScaleUnitParametersList::OAICreateFromJsonScaleUnitParametersList() {
    this->initializeModel();
}

OAICreateFromJsonScaleUnitParametersList::~OAICreateFromJsonScaleUnitParametersList() {}

void OAICreateFromJsonScaleUnitParametersList::initializeModel() {

    m_cluster_name_isSet = false;
    m_cluster_name_isValid = false;

    m_infrastructure_network_isSet = false;
    m_infrastructure_network_isValid = false;

    m_net_qos_priority_isSet = false;
    m_net_qos_priority_isValid = false;

    m_physical_nodes_isSet = false;
    m_physical_nodes_isValid = false;

    m_software_bgp_asn_isSet = false;
    m_software_bgp_asn_isValid = false;

    m_storage_network_isSet = false;
    m_storage_network_isValid = false;

    m_tor_switch_bgp_asn_isSet = false;
    m_tor_switch_bgp_asn_isValid = false;

    m_tor_switch_bgp_peer_ip_isSet = false;
    m_tor_switch_bgp_peer_ip_isValid = false;
}

void OAICreateFromJsonScaleUnitParametersList::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateFromJsonScaleUnitParametersList::fromJsonObject(QJsonObject json) {

    m_cluster_name_isValid = ::OpenAPI::fromJsonValue(m_cluster_name, json[QString("clusterName")]);
    m_cluster_name_isSet = !json[QString("clusterName")].isNull() && m_cluster_name_isValid;

    m_infrastructure_network_isValid = ::OpenAPI::fromJsonValue(m_infrastructure_network, json[QString("infrastructureNetwork")]);
    m_infrastructure_network_isSet = !json[QString("infrastructureNetwork")].isNull() && m_infrastructure_network_isValid;

    m_net_qos_priority_isValid = ::OpenAPI::fromJsonValue(m_net_qos_priority, json[QString("netQosPriority")]);
    m_net_qos_priority_isSet = !json[QString("netQosPriority")].isNull() && m_net_qos_priority_isValid;

    m_physical_nodes_isValid = ::OpenAPI::fromJsonValue(m_physical_nodes, json[QString("physicalNodes")]);
    m_physical_nodes_isSet = !json[QString("physicalNodes")].isNull() && m_physical_nodes_isValid;

    m_software_bgp_asn_isValid = ::OpenAPI::fromJsonValue(m_software_bgp_asn, json[QString("softwareBgpAsn")]);
    m_software_bgp_asn_isSet = !json[QString("softwareBgpAsn")].isNull() && m_software_bgp_asn_isValid;

    m_storage_network_isValid = ::OpenAPI::fromJsonValue(m_storage_network, json[QString("storageNetwork")]);
    m_storage_network_isSet = !json[QString("storageNetwork")].isNull() && m_storage_network_isValid;

    m_tor_switch_bgp_asn_isValid = ::OpenAPI::fromJsonValue(m_tor_switch_bgp_asn, json[QString("torSwitchBgpAsn")]);
    m_tor_switch_bgp_asn_isSet = !json[QString("torSwitchBgpAsn")].isNull() && m_tor_switch_bgp_asn_isValid;

    m_tor_switch_bgp_peer_ip_isValid = ::OpenAPI::fromJsonValue(m_tor_switch_bgp_peer_ip, json[QString("torSwitchBgpPeerIp")]);
    m_tor_switch_bgp_peer_ip_isSet = !json[QString("torSwitchBgpPeerIp")].isNull() && m_tor_switch_bgp_peer_ip_isValid;
}

QString OAICreateFromJsonScaleUnitParametersList::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateFromJsonScaleUnitParametersList::asJsonObject() const {
    QJsonObject obj;
    if (m_cluster_name_isSet) {
        obj.insert(QString("clusterName"), ::OpenAPI::toJsonValue(m_cluster_name));
    }
    if (m_infrastructure_network.isSet()) {
        obj.insert(QString("infrastructureNetwork"), ::OpenAPI::toJsonValue(m_infrastructure_network));
    }
    if (m_net_qos_priority_isSet) {
        obj.insert(QString("netQosPriority"), ::OpenAPI::toJsonValue(m_net_qos_priority));
    }
    if (m_physical_nodes.size() > 0) {
        obj.insert(QString("physicalNodes"), ::OpenAPI::toJsonValue(m_physical_nodes));
    }
    if (m_software_bgp_asn_isSet) {
        obj.insert(QString("softwareBgpAsn"), ::OpenAPI::toJsonValue(m_software_bgp_asn));
    }
    if (m_storage_network.isSet()) {
        obj.insert(QString("storageNetwork"), ::OpenAPI::toJsonValue(m_storage_network));
    }
    if (m_tor_switch_bgp_asn_isSet) {
        obj.insert(QString("torSwitchBgpAsn"), ::OpenAPI::toJsonValue(m_tor_switch_bgp_asn));
    }
    if (m_tor_switch_bgp_peer_ip.size() > 0) {
        obj.insert(QString("torSwitchBgpPeerIp"), ::OpenAPI::toJsonValue(m_tor_switch_bgp_peer_ip));
    }
    return obj;
}

QString OAICreateFromJsonScaleUnitParametersList::getClusterName() const {
    return m_cluster_name;
}
void OAICreateFromJsonScaleUnitParametersList::setClusterName(const QString &cluster_name) {
    m_cluster_name = cluster_name;
    m_cluster_name_isSet = true;
}

bool OAICreateFromJsonScaleUnitParametersList::is_cluster_name_Set() const{
    return m_cluster_name_isSet;
}

bool OAICreateFromJsonScaleUnitParametersList::is_cluster_name_Valid() const{
    return m_cluster_name_isValid;
}

OAINetworkDefinitionParameter OAICreateFromJsonScaleUnitParametersList::getInfrastructureNetwork() const {
    return m_infrastructure_network;
}
void OAICreateFromJsonScaleUnitParametersList::setInfrastructureNetwork(const OAINetworkDefinitionParameter &infrastructure_network) {
    m_infrastructure_network = infrastructure_network;
    m_infrastructure_network_isSet = true;
}

bool OAICreateFromJsonScaleUnitParametersList::is_infrastructure_network_Set() const{
    return m_infrastructure_network_isSet;
}

bool OAICreateFromJsonScaleUnitParametersList::is_infrastructure_network_Valid() const{
    return m_infrastructure_network_isValid;
}

qint32 OAICreateFromJsonScaleUnitParametersList::getNetQosPriority() const {
    return m_net_qos_priority;
}
void OAICreateFromJsonScaleUnitParametersList::setNetQosPriority(const qint32 &net_qos_priority) {
    m_net_qos_priority = net_qos_priority;
    m_net_qos_priority_isSet = true;
}

bool OAICreateFromJsonScaleUnitParametersList::is_net_qos_priority_Set() const{
    return m_net_qos_priority_isSet;
}

bool OAICreateFromJsonScaleUnitParametersList::is_net_qos_priority_Valid() const{
    return m_net_qos_priority_isValid;
}

QList<OAIDeploymentJsonPhysicalNodeParameters> OAICreateFromJsonScaleUnitParametersList::getPhysicalNodes() const {
    return m_physical_nodes;
}
void OAICreateFromJsonScaleUnitParametersList::setPhysicalNodes(const QList<OAIDeploymentJsonPhysicalNodeParameters> &physical_nodes) {
    m_physical_nodes = physical_nodes;
    m_physical_nodes_isSet = true;
}

bool OAICreateFromJsonScaleUnitParametersList::is_physical_nodes_Set() const{
    return m_physical_nodes_isSet;
}

bool OAICreateFromJsonScaleUnitParametersList::is_physical_nodes_Valid() const{
    return m_physical_nodes_isValid;
}

QString OAICreateFromJsonScaleUnitParametersList::getSoftwareBgpAsn() const {
    return m_software_bgp_asn;
}
void OAICreateFromJsonScaleUnitParametersList::setSoftwareBgpAsn(const QString &software_bgp_asn) {
    m_software_bgp_asn = software_bgp_asn;
    m_software_bgp_asn_isSet = true;
}

bool OAICreateFromJsonScaleUnitParametersList::is_software_bgp_asn_Set() const{
    return m_software_bgp_asn_isSet;
}

bool OAICreateFromJsonScaleUnitParametersList::is_software_bgp_asn_Valid() const{
    return m_software_bgp_asn_isValid;
}

OAINetworkDefinitionParameter OAICreateFromJsonScaleUnitParametersList::getStorageNetwork() const {
    return m_storage_network;
}
void OAICreateFromJsonScaleUnitParametersList::setStorageNetwork(const OAINetworkDefinitionParameter &storage_network) {
    m_storage_network = storage_network;
    m_storage_network_isSet = true;
}

bool OAICreateFromJsonScaleUnitParametersList::is_storage_network_Set() const{
    return m_storage_network_isSet;
}

bool OAICreateFromJsonScaleUnitParametersList::is_storage_network_Valid() const{
    return m_storage_network_isValid;
}

QString OAICreateFromJsonScaleUnitParametersList::getTorSwitchBgpAsn() const {
    return m_tor_switch_bgp_asn;
}
void OAICreateFromJsonScaleUnitParametersList::setTorSwitchBgpAsn(const QString &tor_switch_bgp_asn) {
    m_tor_switch_bgp_asn = tor_switch_bgp_asn;
    m_tor_switch_bgp_asn_isSet = true;
}

bool OAICreateFromJsonScaleUnitParametersList::is_tor_switch_bgp_asn_Set() const{
    return m_tor_switch_bgp_asn_isSet;
}

bool OAICreateFromJsonScaleUnitParametersList::is_tor_switch_bgp_asn_Valid() const{
    return m_tor_switch_bgp_asn_isValid;
}

QList<QString> OAICreateFromJsonScaleUnitParametersList::getTorSwitchBgpPeerIp() const {
    return m_tor_switch_bgp_peer_ip;
}
void OAICreateFromJsonScaleUnitParametersList::setTorSwitchBgpPeerIp(const QList<QString> &tor_switch_bgp_peer_ip) {
    m_tor_switch_bgp_peer_ip = tor_switch_bgp_peer_ip;
    m_tor_switch_bgp_peer_ip_isSet = true;
}

bool OAICreateFromJsonScaleUnitParametersList::is_tor_switch_bgp_peer_ip_Set() const{
    return m_tor_switch_bgp_peer_ip_isSet;
}

bool OAICreateFromJsonScaleUnitParametersList::is_tor_switch_bgp_peer_ip_Valid() const{
    return m_tor_switch_bgp_peer_ip_isValid;
}

bool OAICreateFromJsonScaleUnitParametersList::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_cluster_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_infrastructure_network.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_net_qos_priority_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_physical_nodes.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_software_bgp_asn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_storage_network.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_tor_switch_bgp_asn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tor_switch_bgp_peer_ip.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateFromJsonScaleUnitParametersList::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
