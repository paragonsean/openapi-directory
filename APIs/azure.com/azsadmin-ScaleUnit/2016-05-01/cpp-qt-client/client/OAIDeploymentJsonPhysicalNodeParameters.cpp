/**
 * FabricAdminClient
 * Scale unit operation endpoints and objects.
 *
 * The version of the OpenAPI document: 2016-05-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDeploymentJsonPhysicalNodeParameters.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDeploymentJsonPhysicalNodeParameters::OAIDeploymentJsonPhysicalNodeParameters(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDeploymentJsonPhysicalNodeParameters::OAIDeploymentJsonPhysicalNodeParameters() {
    this->initializeModel();
}

OAIDeploymentJsonPhysicalNodeParameters::~OAIDeploymentJsonPhysicalNodeParameters() {}

void OAIDeploymentJsonPhysicalNodeParameters::initializeModel() {

    m_bmc_ip_address_isSet = false;
    m_bmc_ip_address_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;
}

void OAIDeploymentJsonPhysicalNodeParameters::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDeploymentJsonPhysicalNodeParameters::fromJsonObject(QJsonObject json) {

    m_bmc_ip_address_isValid = ::OpenAPI::fromJsonValue(m_bmc_ip_address, json[QString("bmcIpAddress")]);
    m_bmc_ip_address_isSet = !json[QString("bmcIpAddress")].isNull() && m_bmc_ip_address_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;
}

QString OAIDeploymentJsonPhysicalNodeParameters::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDeploymentJsonPhysicalNodeParameters::asJsonObject() const {
    QJsonObject obj;
    if (m_bmc_ip_address_isSet) {
        obj.insert(QString("bmcIpAddress"), ::OpenAPI::toJsonValue(m_bmc_ip_address));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    return obj;
}

QString OAIDeploymentJsonPhysicalNodeParameters::getBmcIpAddress() const {
    return m_bmc_ip_address;
}
void OAIDeploymentJsonPhysicalNodeParameters::setBmcIpAddress(const QString &bmc_ip_address) {
    m_bmc_ip_address = bmc_ip_address;
    m_bmc_ip_address_isSet = true;
}

bool OAIDeploymentJsonPhysicalNodeParameters::is_bmc_ip_address_Set() const{
    return m_bmc_ip_address_isSet;
}

bool OAIDeploymentJsonPhysicalNodeParameters::is_bmc_ip_address_Valid() const{
    return m_bmc_ip_address_isValid;
}

QString OAIDeploymentJsonPhysicalNodeParameters::getName() const {
    return m_name;
}
void OAIDeploymentJsonPhysicalNodeParameters::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIDeploymentJsonPhysicalNodeParameters::is_name_Set() const{
    return m_name_isSet;
}

bool OAIDeploymentJsonPhysicalNodeParameters::is_name_Valid() const{
    return m_name_isValid;
}

bool OAIDeploymentJsonPhysicalNodeParameters::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_bmc_ip_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDeploymentJsonPhysicalNodeParameters::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
