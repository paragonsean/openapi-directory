/**
 * FabricAdminClient
 * Scale unit operation endpoints and objects.
 *
 * The version of the OpenAPI document: 2016-05-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIScaleOutScaleUnitParametersList.h
 *
 * A list of input data that allows for adding a set of scale unit nodes.
 */

#ifndef OAIScaleOutScaleUnitParametersList_H
#define OAIScaleOutScaleUnitParametersList_H

#include <QJsonObject>

#include "OAIScaleOutScaleUnitParameters.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIScaleOutScaleUnitParameters;

class OAIScaleOutScaleUnitParametersList : public OAIObject {
public:
    OAIScaleOutScaleUnitParametersList();
    OAIScaleOutScaleUnitParametersList(QString json);
    ~OAIScaleOutScaleUnitParametersList() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAwaitStorageConvergence() const;
    void setAwaitStorageConvergence(const bool &await_storage_convergence);
    bool is_await_storage_convergence_Set() const;
    bool is_await_storage_convergence_Valid() const;

    QList<OAIScaleOutScaleUnitParameters> getNodeList() const;
    void setNodeList(const QList<OAIScaleOutScaleUnitParameters> &node_list);
    bool is_node_list_Set() const;
    bool is_node_list_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_await_storage_convergence;
    bool m_await_storage_convergence_isSet;
    bool m_await_storage_convergence_isValid;

    QList<OAIScaleOutScaleUnitParameters> m_node_list;
    bool m_node_list_isSet;
    bool m_node_list_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIScaleOutScaleUnitParametersList)

#endif // OAIScaleOutScaleUnitParametersList_H
