/*
 * FabricAdminClient
 * Scale unit operation endpoints and objects.
 *
 * The version of the OpenAPI document: 2016-05-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.CreateFromJsonScaleUnitParametersList;
import org.openapitools.client.model.ScaleOutScaleUnitParametersList;
import org.openapitools.client.model.ScaleUnit;
import org.openapitools.client.model.ScaleUnitList;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ScaleUnitsApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public ScaleUnitsApi() {
        this(Configuration.getDefaultApiClient());
    }

    public ScaleUnitsApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for scaleUnitsCreateFromJson
     * @param subscriptionId Subscription credentials that uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName Name of the resource group. (required)
     * @param location Location of the resource. (required)
     * @param scaleUnit Name of the scale units. (required)
     * @param apiVersion Client API Version. (required)
     * @param creationData A list of input data that allows for creating the new scale unit. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> ACCEPTED </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call scaleUnitsCreateFromJsonCall(String subscriptionId, String resourceGroupName, String location, String scaleUnit, String apiVersion, CreateFromJsonScaleUnitParametersList creationData, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = creationData;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Fabric.Admin/fabricLocations/{location}/scaleUnits/{scaleUnit}/createFromJson"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "location" + "}", localVarApiClient.escapeString(location.toString()))
            .replace("{" + "scaleUnit" + "}", localVarApiClient.escapeString(scaleUnit.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call scaleUnitsCreateFromJsonValidateBeforeCall(String subscriptionId, String resourceGroupName, String location, String scaleUnit, String apiVersion, CreateFromJsonScaleUnitParametersList creationData, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling scaleUnitsCreateFromJson(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling scaleUnitsCreateFromJson(Async)");
        }

        // verify the required parameter 'location' is set
        if (location == null) {
            throw new ApiException("Missing the required parameter 'location' when calling scaleUnitsCreateFromJson(Async)");
        }

        // verify the required parameter 'scaleUnit' is set
        if (scaleUnit == null) {
            throw new ApiException("Missing the required parameter 'scaleUnit' when calling scaleUnitsCreateFromJson(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling scaleUnitsCreateFromJson(Async)");
        }

        // verify the required parameter 'creationData' is set
        if (creationData == null) {
            throw new ApiException("Missing the required parameter 'creationData' when calling scaleUnitsCreateFromJson(Async)");
        }

        return scaleUnitsCreateFromJsonCall(subscriptionId, resourceGroupName, location, scaleUnit, apiVersion, creationData, _callback);

    }

    /**
     * 
     * Add a new scale unit.
     * @param subscriptionId Subscription credentials that uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName Name of the resource group. (required)
     * @param location Location of the resource. (required)
     * @param scaleUnit Name of the scale units. (required)
     * @param apiVersion Client API Version. (required)
     * @param creationData A list of input data that allows for creating the new scale unit. (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> ACCEPTED </td><td>  -  </td></tr>
     </table>
     */
    public void scaleUnitsCreateFromJson(String subscriptionId, String resourceGroupName, String location, String scaleUnit, String apiVersion, CreateFromJsonScaleUnitParametersList creationData) throws ApiException {
        scaleUnitsCreateFromJsonWithHttpInfo(subscriptionId, resourceGroupName, location, scaleUnit, apiVersion, creationData);
    }

    /**
     * 
     * Add a new scale unit.
     * @param subscriptionId Subscription credentials that uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName Name of the resource group. (required)
     * @param location Location of the resource. (required)
     * @param scaleUnit Name of the scale units. (required)
     * @param apiVersion Client API Version. (required)
     * @param creationData A list of input data that allows for creating the new scale unit. (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> ACCEPTED </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> scaleUnitsCreateFromJsonWithHttpInfo(String subscriptionId, String resourceGroupName, String location, String scaleUnit, String apiVersion, CreateFromJsonScaleUnitParametersList creationData) throws ApiException {
        okhttp3.Call localVarCall = scaleUnitsCreateFromJsonValidateBeforeCall(subscriptionId, resourceGroupName, location, scaleUnit, apiVersion, creationData, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     *  (asynchronously)
     * Add a new scale unit.
     * @param subscriptionId Subscription credentials that uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName Name of the resource group. (required)
     * @param location Location of the resource. (required)
     * @param scaleUnit Name of the scale units. (required)
     * @param apiVersion Client API Version. (required)
     * @param creationData A list of input data that allows for creating the new scale unit. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> ACCEPTED </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call scaleUnitsCreateFromJsonAsync(String subscriptionId, String resourceGroupName, String location, String scaleUnit, String apiVersion, CreateFromJsonScaleUnitParametersList creationData, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = scaleUnitsCreateFromJsonValidateBeforeCall(subscriptionId, resourceGroupName, location, scaleUnit, apiVersion, creationData, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for scaleUnitsGet
     * @param subscriptionId Subscription credentials that uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName Name of the resource group. (required)
     * @param location Location of the resource. (required)
     * @param scaleUnit Name of the scale units. (required)
     * @param apiVersion Client API Version. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> NOT FOUND </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call scaleUnitsGetCall(String subscriptionId, String resourceGroupName, String location, String scaleUnit, String apiVersion, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Fabric.Admin/fabricLocations/{location}/scaleUnits/{scaleUnit}"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "location" + "}", localVarApiClient.escapeString(location.toString()))
            .replace("{" + "scaleUnit" + "}", localVarApiClient.escapeString(scaleUnit.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call scaleUnitsGetValidateBeforeCall(String subscriptionId, String resourceGroupName, String location, String scaleUnit, String apiVersion, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling scaleUnitsGet(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling scaleUnitsGet(Async)");
        }

        // verify the required parameter 'location' is set
        if (location == null) {
            throw new ApiException("Missing the required parameter 'location' when calling scaleUnitsGet(Async)");
        }

        // verify the required parameter 'scaleUnit' is set
        if (scaleUnit == null) {
            throw new ApiException("Missing the required parameter 'scaleUnit' when calling scaleUnitsGet(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling scaleUnitsGet(Async)");
        }

        return scaleUnitsGetCall(subscriptionId, resourceGroupName, location, scaleUnit, apiVersion, _callback);

    }

    /**
     * 
     * Returns the requested scale unit.
     * @param subscriptionId Subscription credentials that uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName Name of the resource group. (required)
     * @param location Location of the resource. (required)
     * @param scaleUnit Name of the scale units. (required)
     * @param apiVersion Client API Version. (required)
     * @return ScaleUnit
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> NOT FOUND </td><td>  -  </td></tr>
     </table>
     */
    public ScaleUnit scaleUnitsGet(String subscriptionId, String resourceGroupName, String location, String scaleUnit, String apiVersion) throws ApiException {
        ApiResponse<ScaleUnit> localVarResp = scaleUnitsGetWithHttpInfo(subscriptionId, resourceGroupName, location, scaleUnit, apiVersion);
        return localVarResp.getData();
    }

    /**
     * 
     * Returns the requested scale unit.
     * @param subscriptionId Subscription credentials that uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName Name of the resource group. (required)
     * @param location Location of the resource. (required)
     * @param scaleUnit Name of the scale units. (required)
     * @param apiVersion Client API Version. (required)
     * @return ApiResponse&lt;ScaleUnit&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> NOT FOUND </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ScaleUnit> scaleUnitsGetWithHttpInfo(String subscriptionId, String resourceGroupName, String location, String scaleUnit, String apiVersion) throws ApiException {
        okhttp3.Call localVarCall = scaleUnitsGetValidateBeforeCall(subscriptionId, resourceGroupName, location, scaleUnit, apiVersion, null);
        Type localVarReturnType = new TypeToken<ScaleUnit>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Returns the requested scale unit.
     * @param subscriptionId Subscription credentials that uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName Name of the resource group. (required)
     * @param location Location of the resource. (required)
     * @param scaleUnit Name of the scale units. (required)
     * @param apiVersion Client API Version. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> NOT FOUND </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call scaleUnitsGetAsync(String subscriptionId, String resourceGroupName, String location, String scaleUnit, String apiVersion, final ApiCallback<ScaleUnit> _callback) throws ApiException {

        okhttp3.Call localVarCall = scaleUnitsGetValidateBeforeCall(subscriptionId, resourceGroupName, location, scaleUnit, apiVersion, _callback);
        Type localVarReturnType = new TypeToken<ScaleUnit>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for scaleUnitsList
     * @param subscriptionId Subscription credentials that uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName Name of the resource group. (required)
     * @param location Location of the resource. (required)
     * @param apiVersion Client API Version. (required)
     * @param $filter OData filter parameter. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> NOT FOUND </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call scaleUnitsListCall(String subscriptionId, String resourceGroupName, String location, String apiVersion, String $filter, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Fabric.Admin/fabricLocations/{location}/scaleUnits"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "location" + "}", localVarApiClient.escapeString(location.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        if ($filter != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$filter", $filter));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call scaleUnitsListValidateBeforeCall(String subscriptionId, String resourceGroupName, String location, String apiVersion, String $filter, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling scaleUnitsList(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling scaleUnitsList(Async)");
        }

        // verify the required parameter 'location' is set
        if (location == null) {
            throw new ApiException("Missing the required parameter 'location' when calling scaleUnitsList(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling scaleUnitsList(Async)");
        }

        return scaleUnitsListCall(subscriptionId, resourceGroupName, location, apiVersion, $filter, _callback);

    }

    /**
     * 
     * Returns a list of all scale units at a location.
     * @param subscriptionId Subscription credentials that uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName Name of the resource group. (required)
     * @param location Location of the resource. (required)
     * @param apiVersion Client API Version. (required)
     * @param $filter OData filter parameter. (optional)
     * @return ScaleUnitList
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> NOT FOUND </td><td>  -  </td></tr>
     </table>
     */
    public ScaleUnitList scaleUnitsList(String subscriptionId, String resourceGroupName, String location, String apiVersion, String $filter) throws ApiException {
        ApiResponse<ScaleUnitList> localVarResp = scaleUnitsListWithHttpInfo(subscriptionId, resourceGroupName, location, apiVersion, $filter);
        return localVarResp.getData();
    }

    /**
     * 
     * Returns a list of all scale units at a location.
     * @param subscriptionId Subscription credentials that uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName Name of the resource group. (required)
     * @param location Location of the resource. (required)
     * @param apiVersion Client API Version. (required)
     * @param $filter OData filter parameter. (optional)
     * @return ApiResponse&lt;ScaleUnitList&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> NOT FOUND </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ScaleUnitList> scaleUnitsListWithHttpInfo(String subscriptionId, String resourceGroupName, String location, String apiVersion, String $filter) throws ApiException {
        okhttp3.Call localVarCall = scaleUnitsListValidateBeforeCall(subscriptionId, resourceGroupName, location, apiVersion, $filter, null);
        Type localVarReturnType = new TypeToken<ScaleUnitList>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Returns a list of all scale units at a location.
     * @param subscriptionId Subscription credentials that uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName Name of the resource group. (required)
     * @param location Location of the resource. (required)
     * @param apiVersion Client API Version. (required)
     * @param $filter OData filter parameter. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> NOT FOUND </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call scaleUnitsListAsync(String subscriptionId, String resourceGroupName, String location, String apiVersion, String $filter, final ApiCallback<ScaleUnitList> _callback) throws ApiException {

        okhttp3.Call localVarCall = scaleUnitsListValidateBeforeCall(subscriptionId, resourceGroupName, location, apiVersion, $filter, _callback);
        Type localVarReturnType = new TypeToken<ScaleUnitList>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for scaleUnitsScaleOut
     * @param subscriptionId Subscription credentials that uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName Name of the resource group. (required)
     * @param location Location of the resource. (required)
     * @param scaleUnit Name of the scale units. (required)
     * @param apiVersion Client API Version. (required)
     * @param scaleUnitNodeParameters A list of input data that allows for adding a set of scale unit nodes. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> ACCEPTED </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call scaleUnitsScaleOutCall(String subscriptionId, String resourceGroupName, String location, String scaleUnit, String apiVersion, ScaleOutScaleUnitParametersList scaleUnitNodeParameters, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = scaleUnitNodeParameters;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Fabric.Admin/fabricLocations/{location}/scaleUnits/{scaleUnit}/scaleOut"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "location" + "}", localVarApiClient.escapeString(location.toString()))
            .replace("{" + "scaleUnit" + "}", localVarApiClient.escapeString(scaleUnit.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call scaleUnitsScaleOutValidateBeforeCall(String subscriptionId, String resourceGroupName, String location, String scaleUnit, String apiVersion, ScaleOutScaleUnitParametersList scaleUnitNodeParameters, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling scaleUnitsScaleOut(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling scaleUnitsScaleOut(Async)");
        }

        // verify the required parameter 'location' is set
        if (location == null) {
            throw new ApiException("Missing the required parameter 'location' when calling scaleUnitsScaleOut(Async)");
        }

        // verify the required parameter 'scaleUnit' is set
        if (scaleUnit == null) {
            throw new ApiException("Missing the required parameter 'scaleUnit' when calling scaleUnitsScaleOut(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling scaleUnitsScaleOut(Async)");
        }

        // verify the required parameter 'scaleUnitNodeParameters' is set
        if (scaleUnitNodeParameters == null) {
            throw new ApiException("Missing the required parameter 'scaleUnitNodeParameters' when calling scaleUnitsScaleOut(Async)");
        }

        return scaleUnitsScaleOutCall(subscriptionId, resourceGroupName, location, scaleUnit, apiVersion, scaleUnitNodeParameters, _callback);

    }

    /**
     * 
     * Scales out a scale unit.
     * @param subscriptionId Subscription credentials that uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName Name of the resource group. (required)
     * @param location Location of the resource. (required)
     * @param scaleUnit Name of the scale units. (required)
     * @param apiVersion Client API Version. (required)
     * @param scaleUnitNodeParameters A list of input data that allows for adding a set of scale unit nodes. (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> ACCEPTED </td><td>  -  </td></tr>
     </table>
     */
    public void scaleUnitsScaleOut(String subscriptionId, String resourceGroupName, String location, String scaleUnit, String apiVersion, ScaleOutScaleUnitParametersList scaleUnitNodeParameters) throws ApiException {
        scaleUnitsScaleOutWithHttpInfo(subscriptionId, resourceGroupName, location, scaleUnit, apiVersion, scaleUnitNodeParameters);
    }

    /**
     * 
     * Scales out a scale unit.
     * @param subscriptionId Subscription credentials that uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName Name of the resource group. (required)
     * @param location Location of the resource. (required)
     * @param scaleUnit Name of the scale units. (required)
     * @param apiVersion Client API Version. (required)
     * @param scaleUnitNodeParameters A list of input data that allows for adding a set of scale unit nodes. (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> ACCEPTED </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> scaleUnitsScaleOutWithHttpInfo(String subscriptionId, String resourceGroupName, String location, String scaleUnit, String apiVersion, ScaleOutScaleUnitParametersList scaleUnitNodeParameters) throws ApiException {
        okhttp3.Call localVarCall = scaleUnitsScaleOutValidateBeforeCall(subscriptionId, resourceGroupName, location, scaleUnit, apiVersion, scaleUnitNodeParameters, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     *  (asynchronously)
     * Scales out a scale unit.
     * @param subscriptionId Subscription credentials that uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName Name of the resource group. (required)
     * @param location Location of the resource. (required)
     * @param scaleUnit Name of the scale units. (required)
     * @param apiVersion Client API Version. (required)
     * @param scaleUnitNodeParameters A list of input data that allows for adding a set of scale unit nodes. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> ACCEPTED </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call scaleUnitsScaleOutAsync(String subscriptionId, String resourceGroupName, String location, String scaleUnit, String apiVersion, ScaleOutScaleUnitParametersList scaleUnitNodeParameters, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = scaleUnitsScaleOutValidateBeforeCall(subscriptionId, resourceGroupName, location, scaleUnit, apiVersion, scaleUnitNodeParameters, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
}
