# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DnsNameAvailabilityResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, available: bool=None):
        """DnsNameAvailabilityResult - a model defined in OpenAPI

        :param available: The available of this DnsNameAvailabilityResult.
        """
        self.openapi_types = {
            'available': bool
        }

        self.attribute_map = {
            'available': 'available'
        }

        self._available = available

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DnsNameAvailabilityResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DnsNameAvailabilityResult of this DnsNameAvailabilityResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def available(self):
        """Gets the available of this DnsNameAvailabilityResult.

        Domain availability (True/False).

        :return: The available of this DnsNameAvailabilityResult.
        :rtype: bool
        """
        return self._available

    @available.setter
    def available(self, available):
        """Sets the available of this DnsNameAvailabilityResult.

        Domain availability (True/False).

        :param available: The available of this DnsNameAvailabilityResult.
        :type available: bool
        """

        self._available = available
