/*
 * SqlManagementClient
 * The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.
 *
 * The version of the OpenAPI document: 2017-03-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ManagedInstanceAdministrator;
import org.openapitools.client.model.ManagedInstanceAdministratorListResult;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ManagedInstanceAdministratorsApi
 */
@Disabled
public class ManagedInstanceAdministratorsApiTest {

    private final ManagedInstanceAdministratorsApi api = new ManagedInstanceAdministratorsApi();

    /**
     * Creates or updates a managed instance administrator.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void managedInstanceAdministratorsCreateOrUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String managedInstanceName = null;
        String administratorName = null;
        String subscriptionId = null;
        String apiVersion = null;
        ManagedInstanceAdministrator parameters = null;
        ManagedInstanceAdministrator response = api.managedInstanceAdministratorsCreateOrUpdate(resourceGroupName, managedInstanceName, administratorName, subscriptionId, apiVersion, parameters);
        // TODO: test validations
    }

    /**
     * Deletes a managed instance administrator.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void managedInstanceAdministratorsDeleteTest() throws ApiException {
        String resourceGroupName = null;
        String managedInstanceName = null;
        String administratorName = null;
        String subscriptionId = null;
        String apiVersion = null;
        api.managedInstanceAdministratorsDelete(resourceGroupName, managedInstanceName, administratorName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets a managed instance administrator.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void managedInstanceAdministratorsGetTest() throws ApiException {
        String resourceGroupName = null;
        String managedInstanceName = null;
        String administratorName = null;
        String subscriptionId = null;
        String apiVersion = null;
        ManagedInstanceAdministrator response = api.managedInstanceAdministratorsGet(resourceGroupName, managedInstanceName, administratorName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets a list of managed instance administrators.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void managedInstanceAdministratorsListByInstanceTest() throws ApiException {
        String resourceGroupName = null;
        String managedInstanceName = null;
        String subscriptionId = null;
        String apiVersion = null;
        ManagedInstanceAdministratorListResult response = api.managedInstanceAdministratorsListByInstance(resourceGroupName, managedInstanceName, subscriptionId, apiVersion);
        // TODO: test validations
    }

}
