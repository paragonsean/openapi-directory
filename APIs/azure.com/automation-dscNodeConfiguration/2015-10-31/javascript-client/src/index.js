/**
 * AutomationManagement
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2015-10-31
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import ContentHash from './model/ContentHash';
import ContentSource from './model/ContentSource';
import DscConfigurationAssociationProperty from './model/DscConfigurationAssociationProperty';
import DscNodeConfiguration from './model/DscNodeConfiguration';
import DscNodeConfigurationCreateOrUpdateParameters from './model/DscNodeConfigurationCreateOrUpdateParameters';
import DscNodeConfigurationListByAutomationAccountDefaultResponse from './model/DscNodeConfigurationListByAutomationAccountDefaultResponse';
import DscNodeConfigurationListResult from './model/DscNodeConfigurationListResult';
import DscNodeConfigurationApi from './api/DscNodeConfigurationApi';


/**
* JS API client generated by OpenAPI Generator.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var AutomationManagement = require('index'); // See note below*.
* var xxxSvc = new AutomationManagement.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new AutomationManagement.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new AutomationManagement.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new AutomationManagement.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2015-10-31
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The ContentHash model constructor.
     * @property {module:model/ContentHash}
     */
    ContentHash,

    /**
     * The ContentSource model constructor.
     * @property {module:model/ContentSource}
     */
    ContentSource,

    /**
     * The DscConfigurationAssociationProperty model constructor.
     * @property {module:model/DscConfigurationAssociationProperty}
     */
    DscConfigurationAssociationProperty,

    /**
     * The DscNodeConfiguration model constructor.
     * @property {module:model/DscNodeConfiguration}
     */
    DscNodeConfiguration,

    /**
     * The DscNodeConfigurationCreateOrUpdateParameters model constructor.
     * @property {module:model/DscNodeConfigurationCreateOrUpdateParameters}
     */
    DscNodeConfigurationCreateOrUpdateParameters,

    /**
     * The DscNodeConfigurationListByAutomationAccountDefaultResponse model constructor.
     * @property {module:model/DscNodeConfigurationListByAutomationAccountDefaultResponse}
     */
    DscNodeConfigurationListByAutomationAccountDefaultResponse,

    /**
     * The DscNodeConfigurationListResult model constructor.
     * @property {module:model/DscNodeConfigurationListResult}
     */
    DscNodeConfigurationListResult,

    /**
    * The DscNodeConfigurationApi service constructor.
    * @property {module:api/DscNodeConfigurationApi}
    */
    DscNodeConfigurationApi
};
