/*
 * AutomationManagement
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2015-10-31
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.DscNodeConfiguration;
import org.openapitools.client.model.DscNodeConfigurationCreateOrUpdateParameters;
import org.openapitools.client.model.DscNodeConfigurationListByAutomationAccountDefaultResponse;
import org.openapitools.client.model.DscNodeConfigurationListResult;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DscNodeConfigurationApi
 */
@Disabled
public class DscNodeConfigurationApiTest {

    private final DscNodeConfigurationApi api = new DscNodeConfigurationApi();

    /**
     * Create the node configuration identified by node configuration name.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dscNodeConfigurationCreateOrUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String automationAccountName = null;
        String nodeConfigurationName = null;
        String subscriptionId = null;
        String apiVersion = null;
        DscNodeConfigurationCreateOrUpdateParameters parameters = null;
        DscNodeConfiguration response = api.dscNodeConfigurationCreateOrUpdate(resourceGroupName, automationAccountName, nodeConfigurationName, subscriptionId, apiVersion, parameters);
        // TODO: test validations
    }

    /**
     * Delete the Dsc node configurations by node configuration.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dscNodeConfigurationDeleteTest() throws ApiException {
        String resourceGroupName = null;
        String automationAccountName = null;
        String nodeConfigurationName = null;
        String subscriptionId = null;
        String apiVersion = null;
        api.dscNodeConfigurationDelete(resourceGroupName, automationAccountName, nodeConfigurationName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Retrieve the Dsc node configurations by node configuration.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dscNodeConfigurationGetTest() throws ApiException {
        String resourceGroupName = null;
        String automationAccountName = null;
        String nodeConfigurationName = null;
        String subscriptionId = null;
        String apiVersion = null;
        DscNodeConfiguration response = api.dscNodeConfigurationGet(resourceGroupName, automationAccountName, nodeConfigurationName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Retrieve a list of dsc node configurations.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dscNodeConfigurationListByAutomationAccountTest() throws ApiException {
        String resourceGroupName = null;
        String automationAccountName = null;
        String subscriptionId = null;
        String apiVersion = null;
        String $filter = null;
        DscNodeConfigurationListResult response = api.dscNodeConfigurationListByAutomationAccount(resourceGroupName, automationAccountName, subscriptionId, apiVersion, $filter);
        // TODO: test validations
    }

}
