/*
 * KeyVaultManagementClient
 * The Azure management API provides a RESTful set of web services that interact with Azure Key Vault.
 *
 * The version of the OpenAPI document: 2019-09-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Secret;
import org.openapitools.client.model.SecretCreateOrUpdateParameters;
import org.openapitools.client.model.SecretListResult;
import org.openapitools.client.model.SecretPatchParameters;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SecretsApi
 */
@Disabled
public class SecretsApiTest {

    private final SecretsApi api = new SecretsApi();

    /**
     * Create or update a secret in a key vault in the specified subscription.  NOTE: This API is intended for internal use in ARM deployments. Users should use the data-plane REST service for interaction with vault secrets.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void secretsCreateOrUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String vaultName = null;
        String secretName = null;
        String apiVersion = null;
        String subscriptionId = null;
        SecretCreateOrUpdateParameters parameters = null;
        Secret response = api.secretsCreateOrUpdate(resourceGroupName, vaultName, secretName, apiVersion, subscriptionId, parameters);
        // TODO: test validations
    }

    /**
     * Gets the specified secret.  NOTE: This API is intended for internal use in ARM deployments. Users should use the data-plane REST service for interaction with vault secrets.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void secretsGetTest() throws ApiException {
        String resourceGroupName = null;
        String vaultName = null;
        String secretName = null;
        String apiVersion = null;
        String subscriptionId = null;
        Secret response = api.secretsGet(resourceGroupName, vaultName, secretName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * The List operation gets information about the secrets in a vault.  NOTE: This API is intended for internal use in ARM deployments. Users should use the data-plane REST service for interaction with vault secrets.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void secretsListTest() throws ApiException {
        String resourceGroupName = null;
        String vaultName = null;
        String apiVersion = null;
        String subscriptionId = null;
        Integer $top = null;
        SecretListResult response = api.secretsList(resourceGroupName, vaultName, apiVersion, subscriptionId, $top);
        // TODO: test validations
    }

    /**
     * Update a secret in the specified subscription.  NOTE: This API is intended for internal use in ARM deployments.  Users should use the data-plane REST service for interaction with vault secrets.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void secretsUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String vaultName = null;
        String secretName = null;
        String apiVersion = null;
        String subscriptionId = null;
        SecretPatchParameters parameters = null;
        Secret response = api.secretsUpdate(resourceGroupName, vaultName, secretName, apiVersion, subscriptionId, parameters);
        // TODO: test validations
    }

}
