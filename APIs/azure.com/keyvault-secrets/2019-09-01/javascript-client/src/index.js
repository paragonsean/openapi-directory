/**
 * KeyVaultManagementClient
 * The Azure management API provides a RESTful set of web services that interact with Azure Key Vault.
 *
 * The version of the OpenAPI document: 2019-09-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Attributes from './model/Attributes';
import Secret from './model/Secret';
import SecretAttributes from './model/SecretAttributes';
import SecretCreateOrUpdateParameters from './model/SecretCreateOrUpdateParameters';
import SecretListResult from './model/SecretListResult';
import SecretPatchParameters from './model/SecretPatchParameters';
import SecretPatchProperties from './model/SecretPatchProperties';
import SecretProperties from './model/SecretProperties';
import SecretsApi from './api/SecretsApi';


/**
* The Azure management API provides a RESTful set of web services that interact with Azure Key Vault..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var KeyVaultManagementClient = require('index'); // See note below*.
* var xxxSvc = new KeyVaultManagementClient.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new KeyVaultManagementClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new KeyVaultManagementClient.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new KeyVaultManagementClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2019-09-01
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Attributes model constructor.
     * @property {module:model/Attributes}
     */
    Attributes,

    /**
     * The Secret model constructor.
     * @property {module:model/Secret}
     */
    Secret,

    /**
     * The SecretAttributes model constructor.
     * @property {module:model/SecretAttributes}
     */
    SecretAttributes,

    /**
     * The SecretCreateOrUpdateParameters model constructor.
     * @property {module:model/SecretCreateOrUpdateParameters}
     */
    SecretCreateOrUpdateParameters,

    /**
     * The SecretListResult model constructor.
     * @property {module:model/SecretListResult}
     */
    SecretListResult,

    /**
     * The SecretPatchParameters model constructor.
     * @property {module:model/SecretPatchParameters}
     */
    SecretPatchParameters,

    /**
     * The SecretPatchProperties model constructor.
     * @property {module:model/SecretPatchProperties}
     */
    SecretPatchProperties,

    /**
     * The SecretProperties model constructor.
     * @property {module:model/SecretProperties}
     */
    SecretProperties,

    /**
    * The SecretsApi service constructor.
    * @property {module:api/SecretsApi}
    */
    SecretsApi
};
