/**
 * KeyVaultManagementClient
 * The Azure management API provides a RESTful set of web services that interact with Azure Key Vault.
 *
 * The version of the OpenAPI document: 2019-09-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Attributes from './Attributes';

/**
 * The SecretAttributes model module.
 * @module model/SecretAttributes
 * @version 2019-09-01
 */
class SecretAttributes {
    /**
     * Constructs a new <code>SecretAttributes</code>.
     * The secret management attributes.
     * @alias module:model/SecretAttributes
     * @implements module:model/Attributes
     */
    constructor() { 
        Attributes.initialize(this);
        SecretAttributes.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SecretAttributes</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SecretAttributes} obj Optional instance to populate.
     * @return {module:model/SecretAttributes} The populated <code>SecretAttributes</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SecretAttributes();
            Attributes.constructFromObject(data, obj);

            if (data.hasOwnProperty('created')) {
                obj['created'] = ApiClient.convertToType(data['created'], 'Number');
            }
            if (data.hasOwnProperty('enabled')) {
                obj['enabled'] = ApiClient.convertToType(data['enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('exp')) {
                obj['exp'] = ApiClient.convertToType(data['exp'], 'Number');
            }
            if (data.hasOwnProperty('nbf')) {
                obj['nbf'] = ApiClient.convertToType(data['nbf'], 'Number');
            }
            if (data.hasOwnProperty('updated')) {
                obj['updated'] = ApiClient.convertToType(data['updated'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SecretAttributes</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SecretAttributes</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * Creation time in seconds since 1970-01-01T00:00:00Z.
 * @member {Number} created
 */
SecretAttributes.prototype['created'] = undefined;

/**
 * Determines whether the object is enabled.
 * @member {Boolean} enabled
 */
SecretAttributes.prototype['enabled'] = undefined;

/**
 * Expiry date in seconds since 1970-01-01T00:00:00Z.
 * @member {Number} exp
 */
SecretAttributes.prototype['exp'] = undefined;

/**
 * Not before date in seconds since 1970-01-01T00:00:00Z.
 * @member {Number} nbf
 */
SecretAttributes.prototype['nbf'] = undefined;

/**
 * Last updated time in seconds since 1970-01-01T00:00:00Z.
 * @member {Number} updated
 */
SecretAttributes.prototype['updated'] = undefined;


// Implement Attributes interface:
/**
 * Creation time in seconds since 1970-01-01T00:00:00Z.
 * @member {Number} created
 */
Attributes.prototype['created'] = undefined;
/**
 * Determines whether the object is enabled.
 * @member {Boolean} enabled
 */
Attributes.prototype['enabled'] = undefined;
/**
 * Expiry date in seconds since 1970-01-01T00:00:00Z.
 * @member {Number} exp
 */
Attributes.prototype['exp'] = undefined;
/**
 * Not before date in seconds since 1970-01-01T00:00:00Z.
 * @member {Number} nbf
 */
Attributes.prototype['nbf'] = undefined;
/**
 * Last updated time in seconds since 1970-01-01T00:00:00Z.
 * @member {Number} updated
 */
Attributes.prototype['updated'] = undefined;




export default SecretAttributes;

