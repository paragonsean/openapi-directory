# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.secret_attributes import SecretAttributes
from openapi_server import util


class SecretProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, attributes: SecretAttributes=None, content_type: str=None, secret_uri: str=None, secret_uri_with_version: str=None, value: str=None):
        """SecretProperties - a model defined in OpenAPI

        :param attributes: The attributes of this SecretProperties.
        :param content_type: The content_type of this SecretProperties.
        :param secret_uri: The secret_uri of this SecretProperties.
        :param secret_uri_with_version: The secret_uri_with_version of this SecretProperties.
        :param value: The value of this SecretProperties.
        """
        self.openapi_types = {
            'attributes': SecretAttributes,
            'content_type': str,
            'secret_uri': str,
            'secret_uri_with_version': str,
            'value': str
        }

        self.attribute_map = {
            'attributes': 'attributes',
            'content_type': 'contentType',
            'secret_uri': 'secretUri',
            'secret_uri_with_version': 'secretUriWithVersion',
            'value': 'value'
        }

        self._attributes = attributes
        self._content_type = content_type
        self._secret_uri = secret_uri
        self._secret_uri_with_version = secret_uri_with_version
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SecretProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SecretProperties of this SecretProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def attributes(self):
        """Gets the attributes of this SecretProperties.


        :return: The attributes of this SecretProperties.
        :rtype: SecretAttributes
        """
        return self._attributes

    @attributes.setter
    def attributes(self, attributes):
        """Sets the attributes of this SecretProperties.


        :param attributes: The attributes of this SecretProperties.
        :type attributes: SecretAttributes
        """

        self._attributes = attributes

    @property
    def content_type(self):
        """Gets the content_type of this SecretProperties.

        The content type of the secret.

        :return: The content_type of this SecretProperties.
        :rtype: str
        """
        return self._content_type

    @content_type.setter
    def content_type(self, content_type):
        """Sets the content_type of this SecretProperties.

        The content type of the secret.

        :param content_type: The content_type of this SecretProperties.
        :type content_type: str
        """

        self._content_type = content_type

    @property
    def secret_uri(self):
        """Gets the secret_uri of this SecretProperties.

        The URI to retrieve the current version of the secret.

        :return: The secret_uri of this SecretProperties.
        :rtype: str
        """
        return self._secret_uri

    @secret_uri.setter
    def secret_uri(self, secret_uri):
        """Sets the secret_uri of this SecretProperties.

        The URI to retrieve the current version of the secret.

        :param secret_uri: The secret_uri of this SecretProperties.
        :type secret_uri: str
        """

        self._secret_uri = secret_uri

    @property
    def secret_uri_with_version(self):
        """Gets the secret_uri_with_version of this SecretProperties.

        The URI to retrieve the specific version of the secret.

        :return: The secret_uri_with_version of this SecretProperties.
        :rtype: str
        """
        return self._secret_uri_with_version

    @secret_uri_with_version.setter
    def secret_uri_with_version(self, secret_uri_with_version):
        """Sets the secret_uri_with_version of this SecretProperties.

        The URI to retrieve the specific version of the secret.

        :param secret_uri_with_version: The secret_uri_with_version of this SecretProperties.
        :type secret_uri_with_version: str
        """

        self._secret_uri_with_version = secret_uri_with_version

    @property
    def value(self):
        """Gets the value of this SecretProperties.

        The value of the secret. NOTE: 'value' will never be returned from the service, as APIs using this model are is intended for internal use in ARM deployments. Users should use the data-plane REST service for interaction with vault secrets.

        :return: The value of this SecretProperties.
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this SecretProperties.

        The value of the secret. NOTE: 'value' will never be returned from the service, as APIs using this model are is intended for internal use in ARM deployments. Users should use the data-plane REST service for interaction with vault secrets.

        :param value: The value of this SecretProperties.
        :type value: str
        """

        self._value = value
