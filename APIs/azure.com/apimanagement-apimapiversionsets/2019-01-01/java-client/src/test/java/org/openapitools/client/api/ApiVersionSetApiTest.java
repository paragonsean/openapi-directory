/*
 * ApiManagementClient
 * Use these REST APIs for performing operations on the ApiVersionSet entity associated with your Azure API Management deployment. Using this entity you create and manage API Version Sets that are used to group APIs for consistent versioning.
 *
 * The version of the OpenAPI document: 2019-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ApiVersionSetGet200Response;
import org.openapitools.client.model.ApiVersionSetListByService200Response;
import org.openapitools.client.model.ApiVersionSetListByServiceDefaultResponse;
import org.openapitools.client.model.ApiVersionSetUpdateRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ApiVersionSetApi
 */
@Disabled
public class ApiVersionSetApiTest {

    private final ApiVersionSetApi api = new ApiVersionSetApi();

    /**
     * Creates or Updates a Api Version Set.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiVersionSetCreateOrUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String serviceName = null;
        String versionSetId = null;
        String apiVersion = null;
        String subscriptionId = null;
        ApiVersionSetGet200Response parameters = null;
        String ifMatch = null;
        ApiVersionSetGet200Response response = api.apiVersionSetCreateOrUpdate(resourceGroupName, serviceName, versionSetId, apiVersion, subscriptionId, parameters, ifMatch);
        // TODO: test validations
    }

    /**
     * Gets the details of the Api Version Set specified by its identifier.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiVersionSetGetTest() throws ApiException {
        String resourceGroupName = null;
        String serviceName = null;
        String versionSetId = null;
        String apiVersion = null;
        String subscriptionId = null;
        ApiVersionSetGet200Response response = api.apiVersionSetGet(resourceGroupName, serviceName, versionSetId, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Gets the entity state (Etag) version of the Api Version Set specified by its identifier.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiVersionSetGetEntityTagTest() throws ApiException {
        String resourceGroupName = null;
        String serviceName = null;
        String versionSetId = null;
        String apiVersion = null;
        String subscriptionId = null;
        api.apiVersionSetGetEntityTag(resourceGroupName, serviceName, versionSetId, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Lists a collection of API Version Sets in the specified service instance.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiVersionSetListByServiceTest() throws ApiException {
        String resourceGroupName = null;
        String serviceName = null;
        String apiVersion = null;
        String subscriptionId = null;
        String $filter = null;
        Integer $top = null;
        Integer $skip = null;
        ApiVersionSetListByService200Response response = api.apiVersionSetListByService(resourceGroupName, serviceName, apiVersion, subscriptionId, $filter, $top, $skip);
        // TODO: test validations
    }

    /**
     * Updates the details of the Api VersionSet specified by its identifier.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiVersionSetUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String serviceName = null;
        String versionSetId = null;
        String ifMatch = null;
        String apiVersion = null;
        String subscriptionId = null;
        ApiVersionSetUpdateRequest parameters = null;
        api.apiVersionSetUpdate(resourceGroupName, serviceName, versionSetId, ifMatch, apiVersion, subscriptionId, parameters);
        // TODO: test validations
    }

}
