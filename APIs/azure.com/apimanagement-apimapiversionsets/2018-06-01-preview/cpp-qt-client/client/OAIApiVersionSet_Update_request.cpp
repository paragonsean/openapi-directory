/**
 * ApiManagementClient
 * Use these REST APIs for performing operations on the ApiVersionSet entity associated with your Azure API Management deployment. Using this entity you create and manage API Version Sets that are used to group APIs for consistent versioning.
 *
 * The version of the OpenAPI document: 2018-06-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIApiVersionSet_Update_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIApiVersionSet_Update_request::OAIApiVersionSet_Update_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIApiVersionSet_Update_request::OAIApiVersionSet_Update_request() {
    this->initializeModel();
}

OAIApiVersionSet_Update_request::~OAIApiVersionSet_Update_request() {}

void OAIApiVersionSet_Update_request::initializeModel() {

    m_properties_isSet = false;
    m_properties_isValid = false;
}

void OAIApiVersionSet_Update_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIApiVersionSet_Update_request::fromJsonObject(QJsonObject json) {

    m_properties_isValid = ::OpenAPI::fromJsonValue(m_properties, json[QString("properties")]);
    m_properties_isSet = !json[QString("properties")].isNull() && m_properties_isValid;
}

QString OAIApiVersionSet_Update_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIApiVersionSet_Update_request::asJsonObject() const {
    QJsonObject obj;
    if (m_properties.isSet()) {
        obj.insert(QString("properties"), ::OpenAPI::toJsonValue(m_properties));
    }
    return obj;
}

OAIApiVersionSet_Update_request_properties OAIApiVersionSet_Update_request::getProperties() const {
    return m_properties;
}
void OAIApiVersionSet_Update_request::setProperties(const OAIApiVersionSet_Update_request_properties &properties) {
    m_properties = properties;
    m_properties_isSet = true;
}

bool OAIApiVersionSet_Update_request::is_properties_Set() const{
    return m_properties_isSet;
}

bool OAIApiVersionSet_Update_request::is_properties_Valid() const{
    return m_properties_isValid;
}

bool OAIApiVersionSet_Update_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_properties.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIApiVersionSet_Update_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
