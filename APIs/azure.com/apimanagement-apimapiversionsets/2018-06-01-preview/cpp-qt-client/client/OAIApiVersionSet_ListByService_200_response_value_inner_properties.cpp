/**
 * ApiManagementClient
 * Use these REST APIs for performing operations on the ApiVersionSet entity associated with your Azure API Management deployment. Using this entity you create and manage API Version Sets that are used to group APIs for consistent versioning.
 *
 * The version of the OpenAPI document: 2018-06-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIApiVersionSet_ListByService_200_response_value_inner_properties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIApiVersionSet_ListByService_200_response_value_inner_properties::OAIApiVersionSet_ListByService_200_response_value_inner_properties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIApiVersionSet_ListByService_200_response_value_inner_properties::OAIApiVersionSet_ListByService_200_response_value_inner_properties() {
    this->initializeModel();
}

OAIApiVersionSet_ListByService_200_response_value_inner_properties::~OAIApiVersionSet_ListByService_200_response_value_inner_properties() {}

void OAIApiVersionSet_ListByService_200_response_value_inner_properties::initializeModel() {

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_versioning_scheme_isSet = false;
    m_versioning_scheme_isValid = false;
}

void OAIApiVersionSet_ListByService_200_response_value_inner_properties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIApiVersionSet_ListByService_200_response_value_inner_properties::fromJsonObject(QJsonObject json) {

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_versioning_scheme_isValid = ::OpenAPI::fromJsonValue(m_versioning_scheme, json[QString("versioningScheme")]);
    m_versioning_scheme_isSet = !json[QString("versioningScheme")].isNull() && m_versioning_scheme_isValid;
}

QString OAIApiVersionSet_ListByService_200_response_value_inner_properties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIApiVersionSet_ListByService_200_response_value_inner_properties::asJsonObject() const {
    QJsonObject obj;
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_versioning_scheme_isSet) {
        obj.insert(QString("versioningScheme"), ::OpenAPI::toJsonValue(m_versioning_scheme));
    }
    return obj;
}

QString OAIApiVersionSet_ListByService_200_response_value_inner_properties::getDisplayName() const {
    return m_display_name;
}
void OAIApiVersionSet_ListByService_200_response_value_inner_properties::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIApiVersionSet_ListByService_200_response_value_inner_properties::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIApiVersionSet_ListByService_200_response_value_inner_properties::is_display_name_Valid() const{
    return m_display_name_isValid;
}

QString OAIApiVersionSet_ListByService_200_response_value_inner_properties::getVersioningScheme() const {
    return m_versioning_scheme;
}
void OAIApiVersionSet_ListByService_200_response_value_inner_properties::setVersioningScheme(const QString &versioning_scheme) {
    m_versioning_scheme = versioning_scheme;
    m_versioning_scheme_isSet = true;
}

bool OAIApiVersionSet_ListByService_200_response_value_inner_properties::is_versioning_scheme_Set() const{
    return m_versioning_scheme_isSet;
}

bool OAIApiVersionSet_ListByService_200_response_value_inner_properties::is_versioning_scheme_Valid() const{
    return m_versioning_scheme_isValid;
}

bool OAIApiVersionSet_ListByService_200_response_value_inner_properties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_versioning_scheme_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIApiVersionSet_ListByService_200_response_value_inner_properties::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_display_name_isValid && m_versioning_scheme_isValid && true;
}

} // namespace OpenAPI
