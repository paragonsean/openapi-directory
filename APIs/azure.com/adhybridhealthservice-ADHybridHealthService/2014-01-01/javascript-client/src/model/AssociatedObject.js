/**
 * ADHybridHealthService
 * REST APIs for Azure Active Directory Connect Health
 *
 * The version of the OpenAPI document: 2014-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AssociatedObject model module.
 * @module model/AssociatedObject
 * @version 2014-01-01
 */
class AssociatedObject {
    /**
     * Constructs a new <code>AssociatedObject</code>.
     * Object that hold sync object details.
     * @alias module:model/AssociatedObject
     */
    constructor() { 
        
        AssociatedObject.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AssociatedObject</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AssociatedObject} obj Optional instance to populate.
     * @return {module:model/AssociatedObject} The populated <code>AssociatedObject</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AssociatedObject();

            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('distinguishedName')) {
                obj['distinguishedName'] = ApiClient.convertToType(data['distinguishedName'], 'String');
            }
            if (data.hasOwnProperty('lastDirSyncTime')) {
                obj['lastDirSyncTime'] = ApiClient.convertToType(data['lastDirSyncTime'], 'Date');
            }
            if (data.hasOwnProperty('mail')) {
                obj['mail'] = ApiClient.convertToType(data['mail'], 'String');
            }
            if (data.hasOwnProperty('objectGuid')) {
                obj['objectGuid'] = ApiClient.convertToType(data['objectGuid'], 'String');
            }
            if (data.hasOwnProperty('objectType')) {
                obj['objectType'] = ApiClient.convertToType(data['objectType'], 'String');
            }
            if (data.hasOwnProperty('onpremisesUserPrincipalName')) {
                obj['onpremisesUserPrincipalName'] = ApiClient.convertToType(data['onpremisesUserPrincipalName'], 'String');
            }
            if (data.hasOwnProperty('proxyAddresses')) {
                obj['proxyAddresses'] = ApiClient.convertToType(data['proxyAddresses'], 'String');
            }
            if (data.hasOwnProperty('sourceAnchor')) {
                obj['sourceAnchor'] = ApiClient.convertToType(data['sourceAnchor'], 'String');
            }
            if (data.hasOwnProperty('sourceOfAuthority')) {
                obj['sourceOfAuthority'] = ApiClient.convertToType(data['sourceOfAuthority'], 'String');
            }
            if (data.hasOwnProperty('timeOccurred')) {
                obj['timeOccurred'] = ApiClient.convertToType(data['timeOccurred'], 'Date');
            }
            if (data.hasOwnProperty('userPrincipalName')) {
                obj['userPrincipalName'] = ApiClient.convertToType(data['userPrincipalName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AssociatedObject</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AssociatedObject</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // ensure the json data is a string
        if (data['distinguishedName'] && !(typeof data['distinguishedName'] === 'string' || data['distinguishedName'] instanceof String)) {
            throw new Error("Expected the field `distinguishedName` to be a primitive type in the JSON string but got " + data['distinguishedName']);
        }
        // ensure the json data is a string
        if (data['mail'] && !(typeof data['mail'] === 'string' || data['mail'] instanceof String)) {
            throw new Error("Expected the field `mail` to be a primitive type in the JSON string but got " + data['mail']);
        }
        // ensure the json data is a string
        if (data['objectGuid'] && !(typeof data['objectGuid'] === 'string' || data['objectGuid'] instanceof String)) {
            throw new Error("Expected the field `objectGuid` to be a primitive type in the JSON string but got " + data['objectGuid']);
        }
        // ensure the json data is a string
        if (data['objectType'] && !(typeof data['objectType'] === 'string' || data['objectType'] instanceof String)) {
            throw new Error("Expected the field `objectType` to be a primitive type in the JSON string but got " + data['objectType']);
        }
        // ensure the json data is a string
        if (data['onpremisesUserPrincipalName'] && !(typeof data['onpremisesUserPrincipalName'] === 'string' || data['onpremisesUserPrincipalName'] instanceof String)) {
            throw new Error("Expected the field `onpremisesUserPrincipalName` to be a primitive type in the JSON string but got " + data['onpremisesUserPrincipalName']);
        }
        // ensure the json data is a string
        if (data['proxyAddresses'] && !(typeof data['proxyAddresses'] === 'string' || data['proxyAddresses'] instanceof String)) {
            throw new Error("Expected the field `proxyAddresses` to be a primitive type in the JSON string but got " + data['proxyAddresses']);
        }
        // ensure the json data is a string
        if (data['sourceAnchor'] && !(typeof data['sourceAnchor'] === 'string' || data['sourceAnchor'] instanceof String)) {
            throw new Error("Expected the field `sourceAnchor` to be a primitive type in the JSON string but got " + data['sourceAnchor']);
        }
        // ensure the json data is a string
        if (data['sourceOfAuthority'] && !(typeof data['sourceOfAuthority'] === 'string' || data['sourceOfAuthority'] instanceof String)) {
            throw new Error("Expected the field `sourceOfAuthority` to be a primitive type in the JSON string but got " + data['sourceOfAuthority']);
        }
        // ensure the json data is a string
        if (data['userPrincipalName'] && !(typeof data['userPrincipalName'] === 'string' || data['userPrincipalName'] instanceof String)) {
            throw new Error("Expected the field `userPrincipalName` to be a primitive type in the JSON string but got " + data['userPrincipalName']);
        }

        return true;
    }


}



/**
 * The display name of the object.
 * @member {String} displayName
 */
AssociatedObject.prototype['displayName'] = undefined;

/**
 * The distinguished name of the object.
 * @member {String} distinguishedName
 */
AssociatedObject.prototype['distinguishedName'] = undefined;

/**
 * The last dirSync time.
 * @member {Date} lastDirSyncTime
 */
AssociatedObject.prototype['lastDirSyncTime'] = undefined;

/**
 * The email of the object.
 * @member {String} mail
 */
AssociatedObject.prototype['mail'] = undefined;

/**
 * The object guid.
 * @member {String} objectGuid
 */
AssociatedObject.prototype['objectGuid'] = undefined;

/**
 * The object type.
 * @member {String} objectType
 */
AssociatedObject.prototype['objectType'] = undefined;

/**
 * The On-premises UPN.
 * @member {String} onpremisesUserPrincipalName
 */
AssociatedObject.prototype['onpremisesUserPrincipalName'] = undefined;

/**
 * The proxy addresses.
 * @member {String} proxyAddresses
 */
AssociatedObject.prototype['proxyAddresses'] = undefined;

/**
 * The source anchor.
 * @member {String} sourceAnchor
 */
AssociatedObject.prototype['sourceAnchor'] = undefined;

/**
 * The source of authority.
 * @member {String} sourceOfAuthority
 */
AssociatedObject.prototype['sourceOfAuthority'] = undefined;

/**
 *  The time of the error.
 * @member {Date} timeOccurred
 */
AssociatedObject.prototype['timeOccurred'] = undefined;

/**
 *  The UPN.
 * @member {String} userPrincipalName
 */
AssociatedObject.prototype['userPrincipalName'] = undefined;






export default AssociatedObject;

