/**
 * ADHybridHealthService
 * REST APIs for Azure Active Directory Connect Health
 *
 * The version of the OpenAPI document: 2014-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ReplicationStatus model module.
 * @module model/ReplicationStatus
 * @version 2014-01-01
 */
class ReplicationStatus {
    /**
     * Constructs a new <code>ReplicationStatus</code>.
     *  Replication summary for a domain controller.
     * @alias module:model/ReplicationStatus
     */
    constructor() { 
        
        ReplicationStatus.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ReplicationStatus</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ReplicationStatus} obj Optional instance to populate.
     * @return {module:model/ReplicationStatus} The populated <code>ReplicationStatus</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ReplicationStatus();

            if (data.hasOwnProperty('errorDcCount')) {
                obj['errorDcCount'] = ApiClient.convertToType(data['errorDcCount'], 'Number');
            }
            if (data.hasOwnProperty('forestName')) {
                obj['forestName'] = ApiClient.convertToType(data['forestName'], 'String');
            }
            if (data.hasOwnProperty('totalDcCount')) {
                obj['totalDcCount'] = ApiClient.convertToType(data['totalDcCount'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ReplicationStatus</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ReplicationStatus</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['forestName'] && !(typeof data['forestName'] === 'string' || data['forestName'] instanceof String)) {
            throw new Error("Expected the field `forestName` to be a primitive type in the JSON string but got " + data['forestName']);
        }

        return true;
    }


}



/**
 * The total number of domain controllers with error in a given forest.
 * @member {Number} errorDcCount
 */
ReplicationStatus.prototype['errorDcCount'] = undefined;

/**
 * The forest name.
 * @member {String} forestName
 */
ReplicationStatus.prototype['forestName'] = undefined;

/**
 * The total number of domain controllers for a given forest.
 * @member {Number} totalDcCount
 */
ReplicationStatus.prototype['totalDcCount'] = undefined;






export default ReplicationStatus;

