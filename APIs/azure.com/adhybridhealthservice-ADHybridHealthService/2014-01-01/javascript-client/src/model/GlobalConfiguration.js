/**
 * ADHybridHealthService
 * REST APIs for Azure Active Directory Connect Health
 *
 * The version of the OpenAPI document: 2014-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Item from './Item';

/**
 * The GlobalConfiguration model module.
 * @module model/GlobalConfiguration
 * @version 2014-01-01
 */
class GlobalConfiguration {
    /**
     * Constructs a new <code>GlobalConfiguration</code>.
     * The global configuration settings.
     * @alias module:model/GlobalConfiguration
     */
    constructor() { 
        
        GlobalConfiguration.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GlobalConfiguration</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GlobalConfiguration} obj Optional instance to populate.
     * @return {module:model/GlobalConfiguration} The populated <code>GlobalConfiguration</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GlobalConfiguration();

            if (data.hasOwnProperty('featureSet')) {
                obj['featureSet'] = ApiClient.convertToType(data['featureSet'], [Item]);
            }
            if (data.hasOwnProperty('numSavedPwdEvent')) {
                obj['numSavedPwdEvent'] = ApiClient.convertToType(data['numSavedPwdEvent'], 'Number');
            }
            if (data.hasOwnProperty('passwordSyncEnabled')) {
                obj['passwordSyncEnabled'] = ApiClient.convertToType(data['passwordSyncEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('schemaXml')) {
                obj['schemaXml'] = ApiClient.convertToType(data['schemaXml'], 'String');
            }
            if (data.hasOwnProperty('version')) {
                obj['version'] = ApiClient.convertToType(data['version'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GlobalConfiguration</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GlobalConfiguration</code>.
     */
    static validateJSON(data) {
        if (data['featureSet']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['featureSet'])) {
                throw new Error("Expected the field `featureSet` to be an array in the JSON data but got " + data['featureSet']);
            }
            // validate the optional field `featureSet` (array)
            for (const item of data['featureSet']) {
                Item.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['schemaXml'] && !(typeof data['schemaXml'] === 'string' || data['schemaXml'] instanceof String)) {
            throw new Error("Expected the field `schemaXml` to be a primitive type in the JSON string but got " + data['schemaXml']);
        }

        return true;
    }


}



/**
 * The list of additional feature sets.
 * @member {Array.<module:model/Item>} featureSet
 */
GlobalConfiguration.prototype['featureSet'] = undefined;

/**
 * The number of saved password events.
 * @member {Number} numSavedPwdEvent
 */
GlobalConfiguration.prototype['numSavedPwdEvent'] = undefined;

/**
 * Indicates if password sync is enabled or not.
 * @member {Boolean} passwordSyncEnabled
 */
GlobalConfiguration.prototype['passwordSyncEnabled'] = undefined;

/**
 * The schema for the configuration.
 * @member {String} schemaXml
 */
GlobalConfiguration.prototype['schemaXml'] = undefined;

/**
 * The version for the global configuration.
 * @member {Number} version
 */
GlobalConfiguration.prototype['version'] = undefined;






export default GlobalConfiguration;

