/**
 * ADHybridHealthService
 * REST APIs for Azure Active Directory Connect Health
 *
 * The version of the OpenAPI document: 2014-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UserPreference model module.
 * @module model/UserPreference
 * @version 2014-01-01
 */
class UserPreference {
    /**
     * Constructs a new <code>UserPreference</code>.
     *  The user preference for a given feature.
     * @alias module:model/UserPreference
     */
    constructor() { 
        
        UserPreference.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UserPreference</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UserPreference} obj Optional instance to populate.
     * @return {module:model/UserPreference} The populated <code>UserPreference</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UserPreference();

            if (data.hasOwnProperty('metricNames')) {
                obj['metricNames'] = ApiClient.convertToType(data['metricNames'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UserPreference</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UserPreference</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['metricNames'])) {
            throw new Error("Expected the field `metricNames` to be an array in the JSON data but got " + data['metricNames']);
        }

        return true;
    }


}



/**
 * The name of the metric.
 * @member {Array.<String>} metricNames
 */
UserPreference.prototype['metricNames'] = undefined;






export default UserPreference;

