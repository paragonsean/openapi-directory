/**
 * ADHybridHealthService
 * REST APIs for Azure Active Directory Connect Health
 *
 * The version of the OpenAPI document: 2014-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Tenant model module.
 * @module model/Tenant
 * @version 2014-01-01
 */
class Tenant {
    /**
     * Constructs a new <code>Tenant</code>.
     * The details of the onboarded tenant.
     * @alias module:model/Tenant
     */
    constructor() { 
        
        Tenant.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Tenant</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Tenant} obj Optional instance to populate.
     * @return {module:model/Tenant} The populated <code>Tenant</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Tenant();

            if (data.hasOwnProperty('aadLicense')) {
                obj['aadLicense'] = ApiClient.convertToType(data['aadLicense'], 'String');
            }
            if (data.hasOwnProperty('aadPremium')) {
                obj['aadPremium'] = ApiClient.convertToType(data['aadPremium'], 'Boolean');
            }
            if (data.hasOwnProperty('agentAutoUpdate')) {
                obj['agentAutoUpdate'] = ApiClient.convertToType(data['agentAutoUpdate'], 'Boolean');
            }
            if (data.hasOwnProperty('alertSuppressionTimeInMins')) {
                obj['alertSuppressionTimeInMins'] = ApiClient.convertToType(data['alertSuppressionTimeInMins'], 'Number');
            }
            if (data.hasOwnProperty('consentedToMicrosoftDevOps')) {
                obj['consentedToMicrosoftDevOps'] = ApiClient.convertToType(data['consentedToMicrosoftDevOps'], 'Boolean');
            }
            if (data.hasOwnProperty('countryLetterCode')) {
                obj['countryLetterCode'] = ApiClient.convertToType(data['countryLetterCode'], 'String');
            }
            if (data.hasOwnProperty('createdDate')) {
                obj['createdDate'] = ApiClient.convertToType(data['createdDate'], 'Date');
            }
            if (data.hasOwnProperty('devOpsTtl')) {
                obj['devOpsTtl'] = ApiClient.convertToType(data['devOpsTtl'], 'Date');
            }
            if (data.hasOwnProperty('disabled')) {
                obj['disabled'] = ApiClient.convertToType(data['disabled'], 'Boolean');
            }
            if (data.hasOwnProperty('disabledReason')) {
                obj['disabledReason'] = ApiClient.convertToType(data['disabledReason'], 'Number');
            }
            if (data.hasOwnProperty('globalAdminsEmail')) {
                obj['globalAdminsEmail'] = ApiClient.convertToType(data['globalAdminsEmail'], ['String']);
            }
            if (data.hasOwnProperty('initialDomain')) {
                obj['initialDomain'] = ApiClient.convertToType(data['initialDomain'], 'String');
            }
            if (data.hasOwnProperty('lastDisabled')) {
                obj['lastDisabled'] = ApiClient.convertToType(data['lastDisabled'], 'Date');
            }
            if (data.hasOwnProperty('lastVerified')) {
                obj['lastVerified'] = ApiClient.convertToType(data['lastVerified'], 'Date');
            }
            if (data.hasOwnProperty('onboarded')) {
                obj['onboarded'] = ApiClient.convertToType(data['onboarded'], 'Boolean');
            }
            if (data.hasOwnProperty('onboardingAllowed')) {
                obj['onboardingAllowed'] = ApiClient.convertToType(data['onboardingAllowed'], 'Boolean');
            }
            if (data.hasOwnProperty('pksCertificate')) {
                obj['pksCertificate'] = ApiClient.convertToType(data['pksCertificate'], Object);
            }
            if (data.hasOwnProperty('privatePreviewTenant')) {
                obj['privatePreviewTenant'] = ApiClient.convertToType(data['privatePreviewTenant'], 'Boolean');
            }
            if (data.hasOwnProperty('tenantId')) {
                obj['tenantId'] = ApiClient.convertToType(data['tenantId'], 'String');
            }
            if (data.hasOwnProperty('tenantInQuarantine')) {
                obj['tenantInQuarantine'] = ApiClient.convertToType(data['tenantInQuarantine'], 'Boolean');
            }
            if (data.hasOwnProperty('tenantName')) {
                obj['tenantName'] = ApiClient.convertToType(data['tenantName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Tenant</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Tenant</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['aadLicense'] && !(typeof data['aadLicense'] === 'string' || data['aadLicense'] instanceof String)) {
            throw new Error("Expected the field `aadLicense` to be a primitive type in the JSON string but got " + data['aadLicense']);
        }
        // ensure the json data is a string
        if (data['countryLetterCode'] && !(typeof data['countryLetterCode'] === 'string' || data['countryLetterCode'] instanceof String)) {
            throw new Error("Expected the field `countryLetterCode` to be a primitive type in the JSON string but got " + data['countryLetterCode']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['globalAdminsEmail'])) {
            throw new Error("Expected the field `globalAdminsEmail` to be an array in the JSON data but got " + data['globalAdminsEmail']);
        }
        // ensure the json data is a string
        if (data['initialDomain'] && !(typeof data['initialDomain'] === 'string' || data['initialDomain'] instanceof String)) {
            throw new Error("Expected the field `initialDomain` to be a primitive type in the JSON string but got " + data['initialDomain']);
        }
        // ensure the json data is a string
        if (data['tenantId'] && !(typeof data['tenantId'] === 'string' || data['tenantId'] instanceof String)) {
            throw new Error("Expected the field `tenantId` to be a primitive type in the JSON string but got " + data['tenantId']);
        }
        // ensure the json data is a string
        if (data['tenantName'] && !(typeof data['tenantName'] === 'string' || data['tenantName'] instanceof String)) {
            throw new Error("Expected the field `tenantName` to be a primitive type in the JSON string but got " + data['tenantName']);
        }

        return true;
    }


}



/**
 * The Azure Active Directory license of the tenant.
 * @member {String} aadLicense
 */
Tenant.prototype['aadLicense'] = undefined;

/**
 * Indicate if the tenant has Azure Active Directory Premium license or not.
 * @member {Boolean} aadPremium
 */
Tenant.prototype['aadPremium'] = undefined;

/**
 * Indicates if the tenant is configured to automatically receive updates for Azure Active Directory Connect Health client side features.
 * @member {Boolean} agentAutoUpdate
 */
Tenant.prototype['agentAutoUpdate'] = undefined;

/**
 * The time in minutes after which an alert will be auto-suppressed.
 * @member {Number} alertSuppressionTimeInMins
 */
Tenant.prototype['alertSuppressionTimeInMins'] = undefined;

/**
 * Indicates if the tenant data can be seen by Microsoft through Azure portal.
 * @member {Boolean} consentedToMicrosoftDevOps
 */
Tenant.prototype['consentedToMicrosoftDevOps'] = undefined;

/**
 * The country letter code of the tenant.
 * @member {String} countryLetterCode
 */
Tenant.prototype['countryLetterCode'] = undefined;

/**
 * The date, in UTC, when the tenant was onboarded to Azure Active Directory Connect Health.
 * @member {Date} createdDate
 */
Tenant.prototype['createdDate'] = undefined;

/**
 * The date and time, in UTC, till when the tenant data can be seen by Microsoft through Azure portal.
 * @member {Date} devOpsTtl
 */
Tenant.prototype['devOpsTtl'] = undefined;

/**
 * Indicates if the tenant is disabled in Azure Active Directory Connect Health.
 * @member {Boolean} disabled
 */
Tenant.prototype['disabled'] = undefined;

/**
 * The reason due to which the tenant was disabled in Azure Active Directory Connect Health.
 * @member {Number} disabledReason
 */
Tenant.prototype['disabledReason'] = undefined;

/**
 * The list of global administrators for the tenant.
 * @member {Array.<String>} globalAdminsEmail
 */
Tenant.prototype['globalAdminsEmail'] = undefined;

/**
 * The initial domain of the tenant.
 * @member {String} initialDomain
 */
Tenant.prototype['initialDomain'] = undefined;

/**
 * The date and time, in UTC, when the tenant was last disabled in Azure Active Directory Connect Health.
 * @member {Date} lastDisabled
 */
Tenant.prototype['lastDisabled'] = undefined;

/**
 * The date and time, in UTC, when the tenant onboarding status in Azure Active Directory Connect Health was last verified.
 * @member {Date} lastVerified
 */
Tenant.prototype['lastVerified'] = undefined;

/**
 * Indicates if the tenant is already onboarded to Azure Active Directory Connect Health.
 * @member {Boolean} onboarded
 */
Tenant.prototype['onboarded'] = undefined;

/**
 * Indicates if the tenant is allowed to  onboard to Azure Active Directory Connect Health.
 * @member {Boolean} onboardingAllowed
 */
Tenant.prototype['onboardingAllowed'] = undefined;

/**
 * The certificate associated with the tenant to onboard data to Azure Active Directory Connect Health.
 * @member {Object} pksCertificate
 */
Tenant.prototype['pksCertificate'] = undefined;

/**
 * Indicates if the tenant has signed up for private preview of Azure Active Directory Connect Health features.
 * @member {Boolean} privatePreviewTenant
 */
Tenant.prototype['privatePreviewTenant'] = undefined;

/**
 * The Id of the tenant.
 * @member {String} tenantId
 */
Tenant.prototype['tenantId'] = undefined;

/**
 * Indicates if data collection for this tenant is disabled or not.
 * @member {Boolean} tenantInQuarantine
 */
Tenant.prototype['tenantInQuarantine'] = undefined;

/**
 * The name of the tenant.
 * @member {String} tenantName
 */
Tenant.prototype['tenantName'] = undefined;






export default Tenant;

