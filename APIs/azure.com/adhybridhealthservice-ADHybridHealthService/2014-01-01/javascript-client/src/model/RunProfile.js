/**
 * ADHybridHealthService
 * REST APIs for Azure Active Directory Connect Health
 *
 * The version of the OpenAPI document: 2014-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import RunStep from './RunStep';

/**
 * The RunProfile model module.
 * @module model/RunProfile
 * @version 2014-01-01
 */
class RunProfile {
    /**
     * Constructs a new <code>RunProfile</code>.
     * Describes the run profile.
     * @alias module:model/RunProfile
     */
    constructor() { 
        
        RunProfile.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RunProfile</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RunProfile} obj Optional instance to populate.
     * @return {module:model/RunProfile} The populated <code>RunProfile</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RunProfile();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('runSteps')) {
                obj['runSteps'] = ApiClient.convertToType(data['runSteps'], [RunStep]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RunProfile</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RunProfile</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        if (data['runSteps']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['runSteps'])) {
                throw new Error("Expected the field `runSteps` to be an array in the JSON data but got " + data['runSteps']);
            }
            // validate the optional field `runSteps` (array)
            for (const item of data['runSteps']) {
                RunStep.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * The run profile Id.
 * @member {String} id
 */
RunProfile.prototype['id'] = undefined;

/**
 * The run profile name
 * @member {String} name
 */
RunProfile.prototype['name'] = undefined;

/**
 * The run steps of the run profile.
 * @member {Array.<module:model/RunStep>} runSteps
 */
RunProfile.prototype['runSteps'] = undefined;






export default RunProfile;

