/**
 * ADHybridHealthService
 * REST APIs for Azure Active Directory Connect Health
 *
 * The version of the OpenAPI document: 2014-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The TabularExportError model module.
 * @module model/TabularExportError
 * @version 2014-01-01
 */
class TabularExportError {
    /**
     * Constructs a new <code>TabularExportError</code>.
     * The details for export error.
     * @alias module:model/TabularExportError
     */
    constructor() { 
        
        TabularExportError.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TabularExportError</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TabularExportError} obj Optional instance to populate.
     * @return {module:model/TabularExportError} The populated <code>TabularExportError</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TabularExportError();

            if (data.hasOwnProperty('mergedEntityId')) {
                obj['mergedEntityId'] = ApiClient.convertToType(data['mergedEntityId'], 'String');
            }
            if (data.hasOwnProperty('serviceId')) {
                obj['serviceId'] = ApiClient.convertToType(data['serviceId'], 'String');
            }
            if (data.hasOwnProperty('serviceMemberId')) {
                obj['serviceMemberId'] = ApiClient.convertToType(data['serviceMemberId'], 'String');
            }
            if (data.hasOwnProperty('tabularExportErrorData')) {
                obj['tabularExportErrorData'] = ApiClient.convertToType(data['tabularExportErrorData'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TabularExportError</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TabularExportError</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['mergedEntityId'] && !(typeof data['mergedEntityId'] === 'string' || data['mergedEntityId'] instanceof String)) {
            throw new Error("Expected the field `mergedEntityId` to be a primitive type in the JSON string but got " + data['mergedEntityId']);
        }
        // ensure the json data is a string
        if (data['serviceId'] && !(typeof data['serviceId'] === 'string' || data['serviceId'] instanceof String)) {
            throw new Error("Expected the field `serviceId` to be a primitive type in the JSON string but got " + data['serviceId']);
        }
        // ensure the json data is a string
        if (data['serviceMemberId'] && !(typeof data['serviceMemberId'] === 'string' || data['serviceMemberId'] instanceof String)) {
            throw new Error("Expected the field `serviceMemberId` to be a primitive type in the JSON string but got " + data['serviceMemberId']);
        }
        // ensure the json data is a string
        if (data['tabularExportErrorData'] && !(typeof data['tabularExportErrorData'] === 'string' || data['tabularExportErrorData'] instanceof String)) {
            throw new Error("Expected the field `tabularExportErrorData` to be a primitive type in the JSON string but got " + data['tabularExportErrorData']);
        }

        return true;
    }


}



/**
 * The merged entity Id.
 * @member {String} mergedEntityId
 */
TabularExportError.prototype['mergedEntityId'] = undefined;

/**
 * The service Id.
 * @member {String} serviceId
 */
TabularExportError.prototype['serviceId'] = undefined;

/**
 * The server Id.
 * @member {String} serviceMemberId
 */
TabularExportError.prototype['serviceMemberId'] = undefined;

/**
 * The export error data.
 * @member {String} tabularExportErrorData
 */
TabularExportError.prototype['tabularExportErrorData'] = undefined;






export default TabularExportError;

