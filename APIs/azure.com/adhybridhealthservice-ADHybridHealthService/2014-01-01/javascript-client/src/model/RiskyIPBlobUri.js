/**
 * ADHybridHealthService
 * REST APIs for Azure Active Directory Connect Health
 *
 * The version of the OpenAPI document: 2014-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RiskyIPBlobUri model module.
 * @module model/RiskyIPBlobUri
 * @version 2014-01-01
 */
class RiskyIPBlobUri {
    /**
     * Constructs a new <code>RiskyIPBlobUri</code>.
     * The blob uri pointing to Risky IP Report.
     * @alias module:model/RiskyIPBlobUri
     */
    constructor() { 
        
        RiskyIPBlobUri.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RiskyIPBlobUri</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RiskyIPBlobUri} obj Optional instance to populate.
     * @return {module:model/RiskyIPBlobUri} The populated <code>RiskyIPBlobUri</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RiskyIPBlobUri();

            if (data.hasOwnProperty('blobCreateDateTime')) {
                obj['blobCreateDateTime'] = ApiClient.convertToType(data['blobCreateDateTime'], 'Date');
            }
            if (data.hasOwnProperty('jobCompletionTime')) {
                obj['jobCompletionTime'] = ApiClient.convertToType(data['jobCompletionTime'], 'Date');
            }
            if (data.hasOwnProperty('resultSasUri')) {
                obj['resultSasUri'] = ApiClient.convertToType(data['resultSasUri'], 'String');
            }
            if (data.hasOwnProperty('serviceId')) {
                obj['serviceId'] = ApiClient.convertToType(data['serviceId'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('tenantId')) {
                obj['tenantId'] = ApiClient.convertToType(data['tenantId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RiskyIPBlobUri</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RiskyIPBlobUri</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['resultSasUri'] && !(typeof data['resultSasUri'] === 'string' || data['resultSasUri'] instanceof String)) {
            throw new Error("Expected the field `resultSasUri` to be a primitive type in the JSON string but got " + data['resultSasUri']);
        }
        // ensure the json data is a string
        if (data['serviceId'] && !(typeof data['serviceId'] === 'string' || data['serviceId'] instanceof String)) {
            throw new Error("Expected the field `serviceId` to be a primitive type in the JSON string but got " + data['serviceId']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // ensure the json data is a string
        if (data['tenantId'] && !(typeof data['tenantId'] === 'string' || data['tenantId'] instanceof String)) {
            throw new Error("Expected the field `tenantId` to be a primitive type in the JSON string but got " + data['tenantId']);
        }

        return true;
    }


}



/**
 * Time at which the new Risky IP report was requested.
 * @member {Date} blobCreateDateTime
 */
RiskyIPBlobUri.prototype['blobCreateDateTime'] = undefined;

/**
 * Time at which the blob creation job for the new Risky IP report was completed.
 * @member {Date} jobCompletionTime
 */
RiskyIPBlobUri.prototype['jobCompletionTime'] = undefined;

/**
 * The blob uri for the report.
 * @member {String} resultSasUri
 */
RiskyIPBlobUri.prototype['resultSasUri'] = undefined;

/**
 * The service id for whom the report belongs to.
 * @member {String} serviceId
 */
RiskyIPBlobUri.prototype['serviceId'] = undefined;

/**
 * Status of the Risky IP report generation.
 * @member {String} status
 */
RiskyIPBlobUri.prototype['status'] = undefined;

/**
 * The tenant id for whom the report belongs to.
 * @member {String} tenantId
 */
RiskyIPBlobUri.prototype['tenantId'] = undefined;






export default RiskyIPBlobUri;

