/**
 * ADHybridHealthService
 * REST APIs for Azure Active Directory Connect Health
 *
 * The version of the OpenAPI document: 2014-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Credential model module.
 * @module model/Credential
 * @version 2014-01-01
 */
class Credential {
    /**
     * Constructs a new <code>Credential</code>.
     * The credential for a given server.
     * @alias module:model/Credential
     */
    constructor() { 
        
        Credential.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Credential</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Credential} obj Optional instance to populate.
     * @return {module:model/Credential} The populated <code>Credential</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Credential();

            if (data.hasOwnProperty('credentialData')) {
                obj['credentialData'] = ApiClient.convertToType(data['credentialData'], ['String']);
            }
            if (data.hasOwnProperty('identifier')) {
                obj['identifier'] = ApiClient.convertToType(data['identifier'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Credential</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Credential</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['credentialData'])) {
            throw new Error("Expected the field `credentialData` to be an array in the JSON data but got " + data['credentialData']);
        }
        // ensure the json data is a string
        if (data['identifier'] && !(typeof data['identifier'] === 'string' || data['identifier'] instanceof String)) {
            throw new Error("Expected the field `identifier` to be a primitive type in the JSON string but got " + data['identifier']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}



/**
 * The credential data.
 * @member {Array.<String>} credentialData
 */
Credential.prototype['credentialData'] = undefined;

/**
 * The credential identifier.
 * @member {String} identifier
 */
Credential.prototype['identifier'] = undefined;

/**
 * The type of credential.
 * @member {String} type
 */
Credential.prototype['type'] = undefined;






export default Credential;

