/**
 * ADHybridHealthService
 * REST APIs for Azure Active Directory Connect Health
 *
 * The version of the OpenAPI document: 2014-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ExportError model module.
 * @module model/ExportError
 * @version 2014-01-01
 */
class ExportError {
    /**
     * Constructs a new <code>ExportError</code>.
     * The export error details.
     * @alias module:model/ExportError
     */
    constructor() { 
        
        ExportError.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ExportError</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ExportError} obj Optional instance to populate.
     * @return {module:model/ExportError} The populated <code>ExportError</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ExportError();

            if (data.hasOwnProperty('aadDisplayName')) {
                obj['aadDisplayName'] = ApiClient.convertToType(data['aadDisplayName'], 'String');
            }
            if (data.hasOwnProperty('aadDistinguishedName')) {
                obj['aadDistinguishedName'] = ApiClient.convertToType(data['aadDistinguishedName'], 'String');
            }
            if (data.hasOwnProperty('aadMail')) {
                obj['aadMail'] = ApiClient.convertToType(data['aadMail'], 'String');
            }
            if (data.hasOwnProperty('aadObjectGuid')) {
                obj['aadObjectGuid'] = ApiClient.convertToType(data['aadObjectGuid'], 'String');
            }
            if (data.hasOwnProperty('aadObjectType')) {
                obj['aadObjectType'] = ApiClient.convertToType(data['aadObjectType'], 'String');
            }
            if (data.hasOwnProperty('aadSourceOfAuthority')) {
                obj['aadSourceOfAuthority'] = ApiClient.convertToType(data['aadSourceOfAuthority'], 'String');
            }
            if (data.hasOwnProperty('aadUserPrincipalName')) {
                obj['aadUserPrincipalName'] = ApiClient.convertToType(data['aadUserPrincipalName'], 'String');
            }
            if (data.hasOwnProperty('adDisplayName')) {
                obj['adDisplayName'] = ApiClient.convertToType(data['adDisplayName'], 'String');
            }
            if (data.hasOwnProperty('adDistinguishedName')) {
                obj['adDistinguishedName'] = ApiClient.convertToType(data['adDistinguishedName'], 'String');
            }
            if (data.hasOwnProperty('adMail')) {
                obj['adMail'] = ApiClient.convertToType(data['adMail'], 'String');
            }
            if (data.hasOwnProperty('adObjectGuid')) {
                obj['adObjectGuid'] = ApiClient.convertToType(data['adObjectGuid'], 'String');
            }
            if (data.hasOwnProperty('adObjectType')) {
                obj['adObjectType'] = ApiClient.convertToType(data['adObjectType'], 'String');
            }
            if (data.hasOwnProperty('adSourceAnchor')) {
                obj['adSourceAnchor'] = ApiClient.convertToType(data['adSourceAnchor'], 'String');
            }
            if (data.hasOwnProperty('adSourceOfAuthority')) {
                obj['adSourceOfAuthority'] = ApiClient.convertToType(data['adSourceOfAuthority'], 'String');
            }
            if (data.hasOwnProperty('adUserPrincipalName')) {
                obj['adUserPrincipalName'] = ApiClient.convertToType(data['adUserPrincipalName'], 'String');
            }
            if (data.hasOwnProperty('attributeMultiValue')) {
                obj['attributeMultiValue'] = ApiClient.convertToType(data['attributeMultiValue'], 'Boolean');
            }
            if (data.hasOwnProperty('attributeName')) {
                obj['attributeName'] = ApiClient.convertToType(data['attributeName'], 'String');
            }
            if (data.hasOwnProperty('attributeValue')) {
                obj['attributeValue'] = ApiClient.convertToType(data['attributeValue'], 'String');
            }
            if (data.hasOwnProperty('cloudAnchor')) {
                obj['cloudAnchor'] = ApiClient.convertToType(data['cloudAnchor'], 'String');
            }
            if (data.hasOwnProperty('connectorId')) {
                obj['connectorId'] = ApiClient.convertToType(data['connectorId'], 'String');
            }
            if (data.hasOwnProperty('csObjectId')) {
                obj['csObjectId'] = ApiClient.convertToType(data['csObjectId'], 'String');
            }
            if (data.hasOwnProperty('dn')) {
                obj['dn'] = ApiClient.convertToType(data['dn'], 'String');
            }
            if (data.hasOwnProperty('errorCode')) {
                obj['errorCode'] = ApiClient.convertToType(data['errorCode'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('lastDirSyncTime')) {
                obj['lastDirSyncTime'] = ApiClient.convertToType(data['lastDirSyncTime'], 'Date');
            }
            if (data.hasOwnProperty('maxLimit')) {
                obj['maxLimit'] = ApiClient.convertToType(data['maxLimit'], 'String');
            }
            if (data.hasOwnProperty('message')) {
                obj['message'] = ApiClient.convertToType(data['message'], 'String');
            }
            if (data.hasOwnProperty('minLimit')) {
                obj['minLimit'] = ApiClient.convertToType(data['minLimit'], 'String');
            }
            if (data.hasOwnProperty('modifiedAttributeValue')) {
                obj['modifiedAttributeValue'] = ApiClient.convertToType(data['modifiedAttributeValue'], 'String');
            }
            if (data.hasOwnProperty('objectIdConflict')) {
                obj['objectIdConflict'] = ApiClient.convertToType(data['objectIdConflict'], 'String');
            }
            if (data.hasOwnProperty('retryCount')) {
                obj['retryCount'] = ApiClient.convertToType(data['retryCount'], 'Number');
            }
            if (data.hasOwnProperty('runStepResultId')) {
                obj['runStepResultId'] = ApiClient.convertToType(data['runStepResultId'], 'String');
            }
            if (data.hasOwnProperty('samAccountName')) {
                obj['samAccountName'] = ApiClient.convertToType(data['samAccountName'], 'String');
            }
            if (data.hasOwnProperty('serverErrorDetail')) {
                obj['serverErrorDetail'] = ApiClient.convertToType(data['serverErrorDetail'], 'String');
            }
            if (data.hasOwnProperty('timeFirstOccured')) {
                obj['timeFirstOccured'] = ApiClient.convertToType(data['timeFirstOccured'], 'Date');
            }
            if (data.hasOwnProperty('timeOccured')) {
                obj['timeOccured'] = ApiClient.convertToType(data['timeOccured'], 'Date');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ExportError</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ExportError</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['aadDisplayName'] && !(typeof data['aadDisplayName'] === 'string' || data['aadDisplayName'] instanceof String)) {
            throw new Error("Expected the field `aadDisplayName` to be a primitive type in the JSON string but got " + data['aadDisplayName']);
        }
        // ensure the json data is a string
        if (data['aadDistinguishedName'] && !(typeof data['aadDistinguishedName'] === 'string' || data['aadDistinguishedName'] instanceof String)) {
            throw new Error("Expected the field `aadDistinguishedName` to be a primitive type in the JSON string but got " + data['aadDistinguishedName']);
        }
        // ensure the json data is a string
        if (data['aadMail'] && !(typeof data['aadMail'] === 'string' || data['aadMail'] instanceof String)) {
            throw new Error("Expected the field `aadMail` to be a primitive type in the JSON string but got " + data['aadMail']);
        }
        // ensure the json data is a string
        if (data['aadObjectGuid'] && !(typeof data['aadObjectGuid'] === 'string' || data['aadObjectGuid'] instanceof String)) {
            throw new Error("Expected the field `aadObjectGuid` to be a primitive type in the JSON string but got " + data['aadObjectGuid']);
        }
        // ensure the json data is a string
        if (data['aadObjectType'] && !(typeof data['aadObjectType'] === 'string' || data['aadObjectType'] instanceof String)) {
            throw new Error("Expected the field `aadObjectType` to be a primitive type in the JSON string but got " + data['aadObjectType']);
        }
        // ensure the json data is a string
        if (data['aadSourceOfAuthority'] && !(typeof data['aadSourceOfAuthority'] === 'string' || data['aadSourceOfAuthority'] instanceof String)) {
            throw new Error("Expected the field `aadSourceOfAuthority` to be a primitive type in the JSON string but got " + data['aadSourceOfAuthority']);
        }
        // ensure the json data is a string
        if (data['aadUserPrincipalName'] && !(typeof data['aadUserPrincipalName'] === 'string' || data['aadUserPrincipalName'] instanceof String)) {
            throw new Error("Expected the field `aadUserPrincipalName` to be a primitive type in the JSON string but got " + data['aadUserPrincipalName']);
        }
        // ensure the json data is a string
        if (data['adDisplayName'] && !(typeof data['adDisplayName'] === 'string' || data['adDisplayName'] instanceof String)) {
            throw new Error("Expected the field `adDisplayName` to be a primitive type in the JSON string but got " + data['adDisplayName']);
        }
        // ensure the json data is a string
        if (data['adDistinguishedName'] && !(typeof data['adDistinguishedName'] === 'string' || data['adDistinguishedName'] instanceof String)) {
            throw new Error("Expected the field `adDistinguishedName` to be a primitive type in the JSON string but got " + data['adDistinguishedName']);
        }
        // ensure the json data is a string
        if (data['adMail'] && !(typeof data['adMail'] === 'string' || data['adMail'] instanceof String)) {
            throw new Error("Expected the field `adMail` to be a primitive type in the JSON string but got " + data['adMail']);
        }
        // ensure the json data is a string
        if (data['adObjectGuid'] && !(typeof data['adObjectGuid'] === 'string' || data['adObjectGuid'] instanceof String)) {
            throw new Error("Expected the field `adObjectGuid` to be a primitive type in the JSON string but got " + data['adObjectGuid']);
        }
        // ensure the json data is a string
        if (data['adObjectType'] && !(typeof data['adObjectType'] === 'string' || data['adObjectType'] instanceof String)) {
            throw new Error("Expected the field `adObjectType` to be a primitive type in the JSON string but got " + data['adObjectType']);
        }
        // ensure the json data is a string
        if (data['adSourceAnchor'] && !(typeof data['adSourceAnchor'] === 'string' || data['adSourceAnchor'] instanceof String)) {
            throw new Error("Expected the field `adSourceAnchor` to be a primitive type in the JSON string but got " + data['adSourceAnchor']);
        }
        // ensure the json data is a string
        if (data['adSourceOfAuthority'] && !(typeof data['adSourceOfAuthority'] === 'string' || data['adSourceOfAuthority'] instanceof String)) {
            throw new Error("Expected the field `adSourceOfAuthority` to be a primitive type in the JSON string but got " + data['adSourceOfAuthority']);
        }
        // ensure the json data is a string
        if (data['adUserPrincipalName'] && !(typeof data['adUserPrincipalName'] === 'string' || data['adUserPrincipalName'] instanceof String)) {
            throw new Error("Expected the field `adUserPrincipalName` to be a primitive type in the JSON string but got " + data['adUserPrincipalName']);
        }
        // ensure the json data is a string
        if (data['attributeName'] && !(typeof data['attributeName'] === 'string' || data['attributeName'] instanceof String)) {
            throw new Error("Expected the field `attributeName` to be a primitive type in the JSON string but got " + data['attributeName']);
        }
        // ensure the json data is a string
        if (data['attributeValue'] && !(typeof data['attributeValue'] === 'string' || data['attributeValue'] instanceof String)) {
            throw new Error("Expected the field `attributeValue` to be a primitive type in the JSON string but got " + data['attributeValue']);
        }
        // ensure the json data is a string
        if (data['cloudAnchor'] && !(typeof data['cloudAnchor'] === 'string' || data['cloudAnchor'] instanceof String)) {
            throw new Error("Expected the field `cloudAnchor` to be a primitive type in the JSON string but got " + data['cloudAnchor']);
        }
        // ensure the json data is a string
        if (data['connectorId'] && !(typeof data['connectorId'] === 'string' || data['connectorId'] instanceof String)) {
            throw new Error("Expected the field `connectorId` to be a primitive type in the JSON string but got " + data['connectorId']);
        }
        // ensure the json data is a string
        if (data['csObjectId'] && !(typeof data['csObjectId'] === 'string' || data['csObjectId'] instanceof String)) {
            throw new Error("Expected the field `csObjectId` to be a primitive type in the JSON string but got " + data['csObjectId']);
        }
        // ensure the json data is a string
        if (data['dn'] && !(typeof data['dn'] === 'string' || data['dn'] instanceof String)) {
            throw new Error("Expected the field `dn` to be a primitive type in the JSON string but got " + data['dn']);
        }
        // ensure the json data is a string
        if (data['errorCode'] && !(typeof data['errorCode'] === 'string' || data['errorCode'] instanceof String)) {
            throw new Error("Expected the field `errorCode` to be a primitive type in the JSON string but got " + data['errorCode']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['maxLimit'] && !(typeof data['maxLimit'] === 'string' || data['maxLimit'] instanceof String)) {
            throw new Error("Expected the field `maxLimit` to be a primitive type in the JSON string but got " + data['maxLimit']);
        }
        // ensure the json data is a string
        if (data['message'] && !(typeof data['message'] === 'string' || data['message'] instanceof String)) {
            throw new Error("Expected the field `message` to be a primitive type in the JSON string but got " + data['message']);
        }
        // ensure the json data is a string
        if (data['minLimit'] && !(typeof data['minLimit'] === 'string' || data['minLimit'] instanceof String)) {
            throw new Error("Expected the field `minLimit` to be a primitive type in the JSON string but got " + data['minLimit']);
        }
        // ensure the json data is a string
        if (data['modifiedAttributeValue'] && !(typeof data['modifiedAttributeValue'] === 'string' || data['modifiedAttributeValue'] instanceof String)) {
            throw new Error("Expected the field `modifiedAttributeValue` to be a primitive type in the JSON string but got " + data['modifiedAttributeValue']);
        }
        // ensure the json data is a string
        if (data['objectIdConflict'] && !(typeof data['objectIdConflict'] === 'string' || data['objectIdConflict'] instanceof String)) {
            throw new Error("Expected the field `objectIdConflict` to be a primitive type in the JSON string but got " + data['objectIdConflict']);
        }
        // ensure the json data is a string
        if (data['runStepResultId'] && !(typeof data['runStepResultId'] === 'string' || data['runStepResultId'] instanceof String)) {
            throw new Error("Expected the field `runStepResultId` to be a primitive type in the JSON string but got " + data['runStepResultId']);
        }
        // ensure the json data is a string
        if (data['samAccountName'] && !(typeof data['samAccountName'] === 'string' || data['samAccountName'] instanceof String)) {
            throw new Error("Expected the field `samAccountName` to be a primitive type in the JSON string but got " + data['samAccountName']);
        }
        // ensure the json data is a string
        if (data['serverErrorDetail'] && !(typeof data['serverErrorDetail'] === 'string' || data['serverErrorDetail'] instanceof String)) {
            throw new Error("Expected the field `serverErrorDetail` to be a primitive type in the JSON string but got " + data['serverErrorDetail']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}



/**
 * The AAD side display name
 * @member {String} aadDisplayName
 */
ExportError.prototype['aadDisplayName'] = undefined;

/**
 * The AAD side distinguished name for the object.
 * @member {String} aadDistinguishedName
 */
ExportError.prototype['aadDistinguishedName'] = undefined;

/**
 * The AAD side email for the object.
 * @member {String} aadMail
 */
ExportError.prototype['aadMail'] = undefined;

/**
 * The AAD side object guid.
 * @member {String} aadObjectGuid
 */
ExportError.prototype['aadObjectGuid'] = undefined;

/**
 * The AAD side object type.
 * @member {String} aadObjectType
 */
ExportError.prototype['aadObjectType'] = undefined;

/**
 * The AAD side source of authority for the object.
 * @member {String} aadSourceOfAuthority
 */
ExportError.prototype['aadSourceOfAuthority'] = undefined;

/**
 * The AAD side user principal name.
 * @member {String} aadUserPrincipalName
 */
ExportError.prototype['aadUserPrincipalName'] = undefined;

/**
 * The display name for the AD object.
 * @member {String} adDisplayName
 */
ExportError.prototype['adDisplayName'] = undefined;

/**
 * The distinguished name for the AD object.
 * @member {String} adDistinguishedName
 */
ExportError.prototype['adDistinguishedName'] = undefined;

/**
 * The email for the AD object.
 * @member {String} adMail
 */
ExportError.prototype['adMail'] = undefined;

/**
 * The AD object guid.
 * @member {String} adObjectGuid
 */
ExportError.prototype['adObjectGuid'] = undefined;

/**
 * The AD object type
 * @member {String} adObjectType
 */
ExportError.prototype['adObjectType'] = undefined;

/**
 * The AD source anchor.
 * @member {String} adSourceAnchor
 */
ExportError.prototype['adSourceAnchor'] = undefined;

/**
 * The source of authority for the AD object.
 * @member {String} adSourceOfAuthority
 */
ExportError.prototype['adSourceOfAuthority'] = undefined;

/**
 * The user principal name for the AD object.
 * @member {String} adUserPrincipalName
 */
ExportError.prototype['adUserPrincipalName'] = undefined;

/**
 * Indicates if the attribute is multi valued or not.
 * @member {Boolean} attributeMultiValue
 */
ExportError.prototype['attributeMultiValue'] = undefined;

/**
 * The attribute name.
 * @member {String} attributeName
 */
ExportError.prototype['attributeName'] = undefined;

/**
 * The attribute value.
 * @member {String} attributeValue
 */
ExportError.prototype['attributeValue'] = undefined;

/**
 * The name of the cloud anchor.
 * @member {String} cloudAnchor
 */
ExportError.prototype['cloudAnchor'] = undefined;

/**
 * The connector Id.
 * @member {String} connectorId
 */
ExportError.prototype['connectorId'] = undefined;

/**
 * The cloud object Id.
 * @member {String} csObjectId
 */
ExportError.prototype['csObjectId'] = undefined;

/**
 * The distinguished name.
 * @member {String} dn
 */
ExportError.prototype['dn'] = undefined;

/**
 * The error code.
 * @member {String} errorCode
 */
ExportError.prototype['errorCode'] = undefined;

/**
 * The error Id.
 * @member {String} id
 */
ExportError.prototype['id'] = undefined;

/**
 * The date and time of last sync run.
 * @member {Date} lastDirSyncTime
 */
ExportError.prototype['lastDirSyncTime'] = undefined;

/**
 * The maximum limit.
 * @member {String} maxLimit
 */
ExportError.prototype['maxLimit'] = undefined;

/**
 * The export error message.
 * @member {String} message
 */
ExportError.prototype['message'] = undefined;

/**
 * The minimum limit.
 * @member {String} minLimit
 */
ExportError.prototype['minLimit'] = undefined;

/**
 * The modified attribute value.
 * @member {String} modifiedAttributeValue
 */
ExportError.prototype['modifiedAttributeValue'] = undefined;

/**
 * The object Id with which there was an attribute conflict.
 * @member {String} objectIdConflict
 */
ExportError.prototype['objectIdConflict'] = undefined;

/**
 * The retry count.
 * @member {Number} retryCount
 */
ExportError.prototype['retryCount'] = undefined;

/**
 * The run step result Id.
 * @member {String} runStepResultId
 */
ExportError.prototype['runStepResultId'] = undefined;

/**
 * The SAM account name.
 * @member {String} samAccountName
 */
ExportError.prototype['samAccountName'] = undefined;

/**
 * The server error detail.
 * @member {String} serverErrorDetail
 */
ExportError.prototype['serverErrorDetail'] = undefined;

/**
 * The date and time when the export error first occurred.
 * @member {Date} timeFirstOccured
 */
ExportError.prototype['timeFirstOccured'] = undefined;

/**
 * The date and time of occurrence.
 * @member {Date} timeOccured
 */
ExportError.prototype['timeOccured'] = undefined;

/**
 * The type of error.
 * @member {String} type
 */
ExportError.prototype['type'] = undefined;






export default ExportError;

