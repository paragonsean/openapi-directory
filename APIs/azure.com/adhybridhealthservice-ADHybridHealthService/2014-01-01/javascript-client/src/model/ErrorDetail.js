/**
 * ADHybridHealthService
 * REST APIs for Azure Active Directory Connect Health
 *
 * The version of the OpenAPI document: 2014-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MergedExportError from './MergedExportError';
import ObjectWithSyncError from './ObjectWithSyncError';

/**
 * The ErrorDetail model module.
 * @module model/ErrorDetail
 * @version 2014-01-01
 */
class ErrorDetail {
    /**
     * Constructs a new <code>ErrorDetail</code>.
     * The error details.
     * @alias module:model/ErrorDetail
     */
    constructor() { 
        
        ErrorDetail.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ErrorDetail</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ErrorDetail} obj Optional instance to populate.
     * @return {module:model/ErrorDetail} The populated <code>ErrorDetail</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ErrorDetail();

            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('detail')) {
                obj['detail'] = ApiClient.convertToType(data['detail'], 'String');
            }
            if (data.hasOwnProperty('kbUrl')) {
                obj['kbUrl'] = ApiClient.convertToType(data['kbUrl'], 'String');
            }
            if (data.hasOwnProperty('objectWithSyncError')) {
                obj['objectWithSyncError'] = MergedExportError.constructFromObject(data['objectWithSyncError']);
            }
            if (data.hasOwnProperty('objectsWithSyncError')) {
                obj['objectsWithSyncError'] = ObjectWithSyncError.constructFromObject(data['objectsWithSyncError']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ErrorDetail</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ErrorDetail</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['detail'] && !(typeof data['detail'] === 'string' || data['detail'] instanceof String)) {
            throw new Error("Expected the field `detail` to be a primitive type in the JSON string but got " + data['detail']);
        }
        // ensure the json data is a string
        if (data['kbUrl'] && !(typeof data['kbUrl'] === 'string' || data['kbUrl'] instanceof String)) {
            throw new Error("Expected the field `kbUrl` to be a primitive type in the JSON string but got " + data['kbUrl']);
        }
        // validate the optional field `objectWithSyncError`
        if (data['objectWithSyncError']) { // data not null
          MergedExportError.validateJSON(data['objectWithSyncError']);
        }
        // validate the optional field `objectsWithSyncError`
        if (data['objectsWithSyncError']) { // data not null
          ObjectWithSyncError.validateJSON(data['objectsWithSyncError']);
        }

        return true;
    }


}



/**
 * The error description.
 * @member {String} description
 */
ErrorDetail.prototype['description'] = undefined;

/**
 * Additional details related to the error.
 * @member {String} detail
 */
ErrorDetail.prototype['detail'] = undefined;

/**
 * The knowledge base article url which contains more information about the error.
 * @member {String} kbUrl
 */
ErrorDetail.prototype['kbUrl'] = undefined;

/**
 * @member {module:model/MergedExportError} objectWithSyncError
 */
ErrorDetail.prototype['objectWithSyncError'] = undefined;

/**
 * @member {module:model/ObjectWithSyncError} objectsWithSyncError
 */
ErrorDetail.prototype['objectsWithSyncError'] = undefined;






export default ErrorDetail;

