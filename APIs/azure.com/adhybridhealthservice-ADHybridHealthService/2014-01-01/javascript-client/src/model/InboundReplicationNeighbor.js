/**
 * ADHybridHealthService
 * REST APIs for Azure Active Directory Connect Health
 *
 * The version of the OpenAPI document: 2014-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The InboundReplicationNeighbor model module.
 * @module model/InboundReplicationNeighbor
 * @version 2014-01-01
 */
class InboundReplicationNeighbor {
    /**
     * Constructs a new <code>InboundReplicationNeighbor</code>.
     * The replication summary for the domain controller inbound neighbor.
     * @alias module:model/InboundReplicationNeighbor
     */
    constructor() { 
        
        InboundReplicationNeighbor.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InboundReplicationNeighbor</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InboundReplicationNeighbor} obj Optional instance to populate.
     * @return {module:model/InboundReplicationNeighbor} The populated <code>InboundReplicationNeighbor</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InboundReplicationNeighbor();

            if (data.hasOwnProperty('additionalInfo')) {
                obj['additionalInfo'] = ApiClient.convertToType(data['additionalInfo'], 'String');
            }
            if (data.hasOwnProperty('consecutiveFailureCount')) {
                obj['consecutiveFailureCount'] = ApiClient.convertToType(data['consecutiveFailureCount'], 'Number');
            }
            if (data.hasOwnProperty('errorDescription')) {
                obj['errorDescription'] = ApiClient.convertToType(data['errorDescription'], 'String');
            }
            if (data.hasOwnProperty('errorTitle')) {
                obj['errorTitle'] = ApiClient.convertToType(data['errorTitle'], 'String');
            }
            if (data.hasOwnProperty('fixDetails')) {
                obj['fixDetails'] = ApiClient.convertToType(data['fixDetails'], 'String');
            }
            if (data.hasOwnProperty('fixLink')) {
                obj['fixLink'] = ApiClient.convertToType(data['fixLink'], 'String');
            }
            if (data.hasOwnProperty('lastAttemptedSync')) {
                obj['lastAttemptedSync'] = ApiClient.convertToType(data['lastAttemptedSync'], 'Date');
            }
            if (data.hasOwnProperty('lastErrorCode')) {
                obj['lastErrorCode'] = ApiClient.convertToType(data['lastErrorCode'], 'Number');
            }
            if (data.hasOwnProperty('lastErrorMessage')) {
                obj['lastErrorMessage'] = ApiClient.convertToType(data['lastErrorMessage'], 'String');
            }
            if (data.hasOwnProperty('lastSuccessfulSync')) {
                obj['lastSuccessfulSync'] = ApiClient.convertToType(data['lastSuccessfulSync'], 'Date');
            }
            if (data.hasOwnProperty('namingContext')) {
                obj['namingContext'] = ApiClient.convertToType(data['namingContext'], 'String');
            }
            if (data.hasOwnProperty('sourceDomainController')) {
                obj['sourceDomainController'] = ApiClient.convertToType(data['sourceDomainController'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InboundReplicationNeighbor</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InboundReplicationNeighbor</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['additionalInfo'] && !(typeof data['additionalInfo'] === 'string' || data['additionalInfo'] instanceof String)) {
            throw new Error("Expected the field `additionalInfo` to be a primitive type in the JSON string but got " + data['additionalInfo']);
        }
        // ensure the json data is a string
        if (data['errorDescription'] && !(typeof data['errorDescription'] === 'string' || data['errorDescription'] instanceof String)) {
            throw new Error("Expected the field `errorDescription` to be a primitive type in the JSON string but got " + data['errorDescription']);
        }
        // ensure the json data is a string
        if (data['errorTitle'] && !(typeof data['errorTitle'] === 'string' || data['errorTitle'] instanceof String)) {
            throw new Error("Expected the field `errorTitle` to be a primitive type in the JSON string but got " + data['errorTitle']);
        }
        // ensure the json data is a string
        if (data['fixDetails'] && !(typeof data['fixDetails'] === 'string' || data['fixDetails'] instanceof String)) {
            throw new Error("Expected the field `fixDetails` to be a primitive type in the JSON string but got " + data['fixDetails']);
        }
        // ensure the json data is a string
        if (data['fixLink'] && !(typeof data['fixLink'] === 'string' || data['fixLink'] instanceof String)) {
            throw new Error("Expected the field `fixLink` to be a primitive type in the JSON string but got " + data['fixLink']);
        }
        // ensure the json data is a string
        if (data['lastErrorMessage'] && !(typeof data['lastErrorMessage'] === 'string' || data['lastErrorMessage'] instanceof String)) {
            throw new Error("Expected the field `lastErrorMessage` to be a primitive type in the JSON string but got " + data['lastErrorMessage']);
        }
        // ensure the json data is a string
        if (data['namingContext'] && !(typeof data['namingContext'] === 'string' || data['namingContext'] instanceof String)) {
            throw new Error("Expected the field `namingContext` to be a primitive type in the JSON string but got " + data['namingContext']);
        }
        // ensure the json data is a string
        if (data['sourceDomainController'] && !(typeof data['sourceDomainController'] === 'string' || data['sourceDomainController'] instanceof String)) {
            throw new Error("Expected the field `sourceDomainController` to be a primitive type in the JSON string but got " + data['sourceDomainController']);
        }

        return true;
    }


}



/**
 * The additional details.
 * @member {String} additionalInfo
 */
InboundReplicationNeighbor.prototype['additionalInfo'] = undefined;

/**
 * The number of consecutive failure counts.
 * @member {Number} consecutiveFailureCount
 */
InboundReplicationNeighbor.prototype['consecutiveFailureCount'] = undefined;

/**
 * The error description.
 * @member {String} errorDescription
 */
InboundReplicationNeighbor.prototype['errorDescription'] = undefined;

/**
 * The error title.
 * @member {String} errorTitle
 */
InboundReplicationNeighbor.prototype['errorTitle'] = undefined;

/**
 * The details of the fix.
 * @member {String} fixDetails
 */
InboundReplicationNeighbor.prototype['fixDetails'] = undefined;

/**
 * The link for the fix of the error.
 * @member {String} fixLink
 */
InboundReplicationNeighbor.prototype['fixLink'] = undefined;

/**
 * The last time a sync was attempted on the domain controller.
 * @member {Date} lastAttemptedSync
 */
InboundReplicationNeighbor.prototype['lastAttemptedSync'] = undefined;

/**
 * The last error code.
 * @member {Number} lastErrorCode
 */
InboundReplicationNeighbor.prototype['lastErrorCode'] = undefined;

/**
 * The error message of the last error.
 * @member {String} lastErrorMessage
 */
InboundReplicationNeighbor.prototype['lastErrorMessage'] = undefined;

/**
 * The last time when a successful sync happened.
 * @member {Date} lastSuccessfulSync
 */
InboundReplicationNeighbor.prototype['lastSuccessfulSync'] = undefined;

/**
 * The naming context.
 * @member {String} namingContext
 */
InboundReplicationNeighbor.prototype['namingContext'] = undefined;

/**
 * The name of the source domain controller.
 * @member {String} sourceDomainController
 */
InboundReplicationNeighbor.prototype['sourceDomainController'] = undefined;

/**
 * The health status for the domain controller
 * @member {Number} status
 */
InboundReplicationNeighbor.prototype['status'] = undefined;






export default InboundReplicationNeighbor;

