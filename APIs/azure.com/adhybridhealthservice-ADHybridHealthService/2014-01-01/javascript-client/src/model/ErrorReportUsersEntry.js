/**
 * ADHybridHealthService
 * REST APIs for Azure Active Directory Connect Health
 *
 * The version of the OpenAPI document: 2014-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ErrorReportUsersEntry model module.
 * @module model/ErrorReportUsersEntry
 * @version 2014-01-01
 */
class ErrorReportUsersEntry {
    /**
     * Constructs a new <code>ErrorReportUsersEntry</code>.
     * The bad password login attempt details.
     * @alias module:model/ErrorReportUsersEntry
     */
    constructor() { 
        
        ErrorReportUsersEntry.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ErrorReportUsersEntry</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ErrorReportUsersEntry} obj Optional instance to populate.
     * @return {module:model/ErrorReportUsersEntry} The populated <code>ErrorReportUsersEntry</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ErrorReportUsersEntry();

            if (data.hasOwnProperty('ipAddress')) {
                obj['ipAddress'] = ApiClient.convertToType(data['ipAddress'], 'String');
            }
            if (data.hasOwnProperty('lastUpdated')) {
                obj['lastUpdated'] = ApiClient.convertToType(data['lastUpdated'], 'Date');
            }
            if (data.hasOwnProperty('totalErrorAttempts')) {
                obj['totalErrorAttempts'] = ApiClient.convertToType(data['totalErrorAttempts'], 'Number');
            }
            if (data.hasOwnProperty('uniqueIpAddresses')) {
                obj['uniqueIpAddresses'] = ApiClient.convertToType(data['uniqueIpAddresses'], 'String');
            }
            if (data.hasOwnProperty('userId')) {
                obj['userId'] = ApiClient.convertToType(data['userId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ErrorReportUsersEntry</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ErrorReportUsersEntry</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['ipAddress'] && !(typeof data['ipAddress'] === 'string' || data['ipAddress'] instanceof String)) {
            throw new Error("Expected the field `ipAddress` to be a primitive type in the JSON string but got " + data['ipAddress']);
        }
        // ensure the json data is a string
        if (data['uniqueIpAddresses'] && !(typeof data['uniqueIpAddresses'] === 'string' || data['uniqueIpAddresses'] instanceof String)) {
            throw new Error("Expected the field `uniqueIpAddresses` to be a primitive type in the JSON string but got " + data['uniqueIpAddresses']);
        }
        // ensure the json data is a string
        if (data['userId'] && !(typeof data['userId'] === 'string' || data['userId'] instanceof String)) {
            throw new Error("Expected the field `userId` to be a primitive type in the JSON string but got " + data['userId']);
        }

        return true;
    }


}



/**
 * The Ip address corresponding to the last error event.
 * @member {String} ipAddress
 */
ErrorReportUsersEntry.prototype['ipAddress'] = undefined;

/**
 * The date and time when the last error event was logged.
 * @member {Date} lastUpdated
 */
ErrorReportUsersEntry.prototype['lastUpdated'] = undefined;

/**
 * The total count of specific error events.
 * @member {Number} totalErrorAttempts
 */
ErrorReportUsersEntry.prototype['totalErrorAttempts'] = undefined;

/**
 * The list of unique IP addresses.
 * @member {String} uniqueIpAddresses
 */
ErrorReportUsersEntry.prototype['uniqueIpAddresses'] = undefined;

/**
 * The user ID value.
 * @member {String} userId
 */
ErrorReportUsersEntry.prototype['userId'] = undefined;






export default ErrorReportUsersEntry;

