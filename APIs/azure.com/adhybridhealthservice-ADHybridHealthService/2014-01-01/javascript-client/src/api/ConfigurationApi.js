/**
 * ADHybridHealthService
 * REST APIs for Azure Active Directory Connect Health
 *
 * The version of the OpenAPI document: 2014-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Tenant from '../model/Tenant';

/**
* Configuration service.
* @module api/ConfigurationApi
* @version 2014-01-01
*/
export default class ConfigurationApi {

    /**
    * Constructs a new ConfigurationApi. 
    * @alias module:api/ConfigurationApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the configurationAdd operation.
     * @callback module:api/ConfigurationApi~configurationAddCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Tenant} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Onboards a tenant in Azure Active Directory Connect Health.
     * @param {String} apiVersion The version of the API to be used with the client request.
     * @param {module:api/ConfigurationApi~configurationAddCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Tenant}
     */
    configurationAdd(apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling configurationAdd");
      }

      let pathParams = {
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Tenant;
      return this.apiClient.callApi(
        '/providers/Microsoft.ADHybridHealthService/configuration', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the configurationGet operation.
     * @callback module:api/ConfigurationApi~configurationGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Tenant} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the details of a tenant onboarded to Azure Active Directory Connect Health.
     * @param {String} apiVersion The version of the API to be used with the client request.
     * @param {module:api/ConfigurationApi~configurationGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Tenant}
     */
    configurationGet(apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling configurationGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Tenant;
      return this.apiClient.callApi(
        '/providers/Microsoft.ADHybridHealthService/configuration', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the configurationUpdate operation.
     * @callback module:api/ConfigurationApi~configurationUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Tenant} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates tenant properties for tenants onboarded to Azure Active Directory Connect Health.
     * @param {String} apiVersion The version of the API to be used with the client request.
     * @param {module:model/Tenant} tenant The tenant object with the properties set to the updated value.
     * @param {module:api/ConfigurationApi~configurationUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Tenant}
     */
    configurationUpdate(apiVersion, tenant, callback) {
      let postBody = tenant;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling configurationUpdate");
      }
      // verify the required parameter 'tenant' is set
      if (tenant === undefined || tenant === null) {
        throw new Error("Missing the required parameter 'tenant' when calling configurationUpdate");
      }

      let pathParams = {
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Tenant;
      return this.apiClient.callApi(
        '/providers/Microsoft.ADHybridHealthService/configuration', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
