/**
 * ADHybridHealthService
 * REST APIs for Azure Active Directory Connect Health
 *
 * The version of the OpenAPI document: 2014-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Connectors from '../model/Connectors';
import Credentials from '../model/Credentials';
import DataFreshnessDetails from '../model/DataFreshnessDetails';
import ExportStatuses from '../model/ExportStatuses';
import GlobalConfigurations from '../model/GlobalConfigurations';
import ServiceConfiguration from '../model/ServiceConfiguration';
import ServiceMember from '../model/ServiceMember';
import ServiceMembers from '../model/ServiceMembers';

/**
* ServiceMembers service.
* @module api/ServiceMembersApi
* @version 2014-01-01
*/
export default class ServiceMembersApi {

    /**
    * Constructs a new ServiceMembersApi. 
    * @alias module:api/ServiceMembersApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the serviceMembersAdd operation.
     * @callback module:api/ServiceMembersApi~serviceMembersAddCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ServiceMember} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Onboards  a server, for a given service, to Azure Active Directory Connect Health Service.
     * @param {String} serviceName The name of the service under which the server is to be onboarded.
     * @param {String} apiVersion The version of the API to be used with the client request.
     * @param {module:model/ServiceMember} serviceMember The server object.
     * @param {module:api/ServiceMembersApi~serviceMembersAddCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ServiceMember}
     */
    serviceMembersAdd(serviceName, apiVersion, serviceMember, callback) {
      let postBody = serviceMember;
      // verify the required parameter 'serviceName' is set
      if (serviceName === undefined || serviceName === null) {
        throw new Error("Missing the required parameter 'serviceName' when calling serviceMembersAdd");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling serviceMembersAdd");
      }
      // verify the required parameter 'serviceMember' is set
      if (serviceMember === undefined || serviceMember === null) {
        throw new Error("Missing the required parameter 'serviceMember' when calling serviceMembersAdd");
      }

      let pathParams = {
        'serviceName': serviceName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ServiceMember;
      return this.apiClient.callApi(
        '/providers/Microsoft.ADHybridHealthService/services/{serviceName}/servicemembers', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the serviceMembersDelete operation.
     * @callback module:api/ServiceMembersApi~serviceMembersDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes a server that has been onboarded to Azure Active Directory Connect Health Service.
     * @param {String} serviceName The name of the service.
     * @param {String} serviceMemberId The server Id.
     * @param {String} apiVersion The version of the API to be used with the client request.
     * @param {Object} opts Optional parameters
     * @param {Boolean} [confirm] Indicates if the server will be permanently deleted or disabled. True indicates that the server will be permanently deleted and False indicates that the server will be marked disabled and then deleted after 30 days, if it is not re-registered.
     * @param {module:api/ServiceMembersApi~serviceMembersDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    serviceMembersDelete(serviceName, serviceMemberId, apiVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'serviceName' is set
      if (serviceName === undefined || serviceName === null) {
        throw new Error("Missing the required parameter 'serviceName' when calling serviceMembersDelete");
      }
      // verify the required parameter 'serviceMemberId' is set
      if (serviceMemberId === undefined || serviceMemberId === null) {
        throw new Error("Missing the required parameter 'serviceMemberId' when calling serviceMembersDelete");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling serviceMembersDelete");
      }

      let pathParams = {
        'serviceName': serviceName,
        'serviceMemberId': serviceMemberId
      };
      let queryParams = {
        'confirm': opts['confirm'],
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/providers/Microsoft.ADHybridHealthService/services/{serviceName}/servicemembers/{serviceMemberId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the serviceMembersDeleteData operation.
     * @callback module:api/ServiceMembersApi~serviceMembersDeleteDataCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes the data uploaded by the server to Azure Active Directory Connect Health Service.
     * @param {String} serviceName The name of the service.
     * @param {String} serviceMemberId The server Id.
     * @param {String} apiVersion The version of the API to be used with the client request.
     * @param {module:api/ServiceMembersApi~serviceMembersDeleteDataCallback} callback The callback function, accepting three arguments: error, data, response
     */
    serviceMembersDeleteData(serviceName, serviceMemberId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'serviceName' is set
      if (serviceName === undefined || serviceName === null) {
        throw new Error("Missing the required parameter 'serviceName' when calling serviceMembersDeleteData");
      }
      // verify the required parameter 'serviceMemberId' is set
      if (serviceMemberId === undefined || serviceMemberId === null) {
        throw new Error("Missing the required parameter 'serviceMemberId' when calling serviceMembersDeleteData");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling serviceMembersDeleteData");
      }

      let pathParams = {
        'serviceName': serviceName,
        'serviceMemberId': serviceMemberId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/providers/Microsoft.ADHybridHealthService/services/{serviceName}/servicemembers/{serviceMemberId}/data', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the serviceMembersGet operation.
     * @callback module:api/ServiceMembersApi~serviceMembersGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ServiceMember} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the details of a server, for a given service, that are onboarded to Azure Active Directory Connect Health Service.
     * @param {String} serviceName The name of the service.
     * @param {String} serviceMemberId The server Id.
     * @param {String} apiVersion The version of the API to be used with the client request.
     * @param {module:api/ServiceMembersApi~serviceMembersGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ServiceMember}
     */
    serviceMembersGet(serviceName, serviceMemberId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'serviceName' is set
      if (serviceName === undefined || serviceName === null) {
        throw new Error("Missing the required parameter 'serviceName' when calling serviceMembersGet");
      }
      // verify the required parameter 'serviceMemberId' is set
      if (serviceMemberId === undefined || serviceMemberId === null) {
        throw new Error("Missing the required parameter 'serviceMemberId' when calling serviceMembersGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling serviceMembersGet");
      }

      let pathParams = {
        'serviceName': serviceName,
        'serviceMemberId': serviceMemberId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ServiceMember;
      return this.apiClient.callApi(
        '/providers/Microsoft.ADHybridHealthService/services/{serviceName}/servicemembers/{serviceMemberId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the serviceMembersGetServiceConfiguration operation.
     * @callback module:api/ServiceMembersApi~serviceMembersGetServiceConfigurationCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ServiceConfiguration} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the service configuration.
     * @param {String} serviceName The name of the service.
     * @param {String} serviceMemberId The server Id.
     * @param {String} apiVersion The version of the API to be used with the client request.
     * @param {module:api/ServiceMembersApi~serviceMembersGetServiceConfigurationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ServiceConfiguration}
     */
    serviceMembersGetServiceConfiguration(serviceName, serviceMemberId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'serviceName' is set
      if (serviceName === undefined || serviceName === null) {
        throw new Error("Missing the required parameter 'serviceName' when calling serviceMembersGetServiceConfiguration");
      }
      // verify the required parameter 'serviceMemberId' is set
      if (serviceMemberId === undefined || serviceMemberId === null) {
        throw new Error("Missing the required parameter 'serviceMemberId' when calling serviceMembersGetServiceConfiguration");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling serviceMembersGetServiceConfiguration");
      }

      let pathParams = {
        'serviceName': serviceName,
        'serviceMemberId': serviceMemberId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ServiceConfiguration;
      return this.apiClient.callApi(
        '/providers/Microsoft.ADHybridHealthService/services/{serviceName}/servicemembers/{serviceMemberId}/serviceconfiguration', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the serviceMembersList operation.
     * @callback module:api/ServiceMembersApi~serviceMembersListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ServiceMembers} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the details of the servers, for a given service, that are onboarded to Azure Active Directory Connect Health Service.
     * @param {String} serviceName The name of the service.
     * @param {String} apiVersion The version of the API to be used with the client request.
     * @param {Object} opts Optional parameters
     * @param {String} [filter] The server property filter to apply.
     * @param {String} [dimensionType] The server specific dimension.
     * @param {String} [dimensionSignature] The value of the dimension.
     * @param {module:api/ServiceMembersApi~serviceMembersListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ServiceMembers}
     */
    serviceMembersList(serviceName, apiVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'serviceName' is set
      if (serviceName === undefined || serviceName === null) {
        throw new Error("Missing the required parameter 'serviceName' when calling serviceMembersList");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling serviceMembersList");
      }

      let pathParams = {
        'serviceName': serviceName
      };
      let queryParams = {
        '$filter': opts['filter'],
        'dimensionType': opts['dimensionType'],
        'dimensionSignature': opts['dimensionSignature'],
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ServiceMembers;
      return this.apiClient.callApi(
        '/providers/Microsoft.ADHybridHealthService/services/{serviceName}/servicemembers', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the serviceMembersListConnectors operation.
     * @callback module:api/ServiceMembersApi~serviceMembersListConnectorsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Connectors} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the connector details for a service.
     * @param {String} serviceName The name of the service.
     * @param {String} serviceMemberId The server Id.
     * @param {String} apiVersion The version of the API to be used with the client request.
     * @param {module:api/ServiceMembersApi~serviceMembersListConnectorsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Connectors}
     */
    serviceMembersListConnectors(serviceName, serviceMemberId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'serviceName' is set
      if (serviceName === undefined || serviceName === null) {
        throw new Error("Missing the required parameter 'serviceName' when calling serviceMembersListConnectors");
      }
      // verify the required parameter 'serviceMemberId' is set
      if (serviceMemberId === undefined || serviceMemberId === null) {
        throw new Error("Missing the required parameter 'serviceMemberId' when calling serviceMembersListConnectors");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling serviceMembersListConnectors");
      }

      let pathParams = {
        'serviceName': serviceName,
        'serviceMemberId': serviceMemberId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Connectors;
      return this.apiClient.callApi(
        '/providers/Microsoft.ADHybridHealthService/service/{serviceName}/servicemembers/{serviceMemberId}/connectors', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the serviceMembersListCredentials operation.
     * @callback module:api/ServiceMembersApi~serviceMembersListCredentialsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Credentials} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the credentials of the server which is needed by the agent to connect to Azure Active Directory Connect Health Service.
     * @param {String} serviceName The name of the service.
     * @param {String} serviceMemberId The server Id.
     * @param {String} apiVersion The version of the API to be used with the client request.
     * @param {Object} opts Optional parameters
     * @param {String} [filter] The property filter to apply.
     * @param {module:api/ServiceMembersApi~serviceMembersListCredentialsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Credentials}
     */
    serviceMembersListCredentials(serviceName, serviceMemberId, apiVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'serviceName' is set
      if (serviceName === undefined || serviceName === null) {
        throw new Error("Missing the required parameter 'serviceName' when calling serviceMembersListCredentials");
      }
      // verify the required parameter 'serviceMemberId' is set
      if (serviceMemberId === undefined || serviceMemberId === null) {
        throw new Error("Missing the required parameter 'serviceMemberId' when calling serviceMembersListCredentials");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling serviceMembersListCredentials");
      }

      let pathParams = {
        'serviceName': serviceName,
        'serviceMemberId': serviceMemberId
      };
      let queryParams = {
        '$filter': opts['filter'],
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Credentials;
      return this.apiClient.callApi(
        '/providers/Microsoft.ADHybridHealthService/services/{serviceName}/servicemembers/{serviceMemberId}/credentials', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the serviceMembersListDataFreshness operation.
     * @callback module:api/ServiceMembersApi~serviceMembersListDataFreshnessCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DataFreshnessDetails} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the last time when the server uploaded data to Azure Active Directory Connect Health Service.
     * @param {String} serviceName The name of the service.
     * @param {String} serviceMemberId The server Id.
     * @param {String} apiVersion The version of the API to be used with the client request.
     * @param {module:api/ServiceMembersApi~serviceMembersListDataFreshnessCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DataFreshnessDetails}
     */
    serviceMembersListDataFreshness(serviceName, serviceMemberId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'serviceName' is set
      if (serviceName === undefined || serviceName === null) {
        throw new Error("Missing the required parameter 'serviceName' when calling serviceMembersListDataFreshness");
      }
      // verify the required parameter 'serviceMemberId' is set
      if (serviceMemberId === undefined || serviceMemberId === null) {
        throw new Error("Missing the required parameter 'serviceMemberId' when calling serviceMembersListDataFreshness");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling serviceMembersListDataFreshness");
      }

      let pathParams = {
        'serviceName': serviceName,
        'serviceMemberId': serviceMemberId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DataFreshnessDetails;
      return this.apiClient.callApi(
        '/providers/Microsoft.ADHybridHealthService/services/{serviceName}/servicemembers/{serviceMemberId}/datafreshness', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the serviceMembersListExportStatus operation.
     * @callback module:api/ServiceMembersApi~serviceMembersListExportStatusCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ExportStatuses} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the export status.
     * @param {String} serviceName The name of the service.
     * @param {String} serviceMemberId The server Id.
     * @param {String} apiVersion The version of the API to be used with the client request.
     * @param {module:api/ServiceMembersApi~serviceMembersListExportStatusCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ExportStatuses}
     */
    serviceMembersListExportStatus(serviceName, serviceMemberId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'serviceName' is set
      if (serviceName === undefined || serviceName === null) {
        throw new Error("Missing the required parameter 'serviceName' when calling serviceMembersListExportStatus");
      }
      // verify the required parameter 'serviceMemberId' is set
      if (serviceMemberId === undefined || serviceMemberId === null) {
        throw new Error("Missing the required parameter 'serviceMemberId' when calling serviceMembersListExportStatus");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling serviceMembersListExportStatus");
      }

      let pathParams = {
        'serviceName': serviceName,
        'serviceMemberId': serviceMemberId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ExportStatuses;
      return this.apiClient.callApi(
        '/providers/Microsoft.ADHybridHealthService/services/{serviceName}/servicemembers/{serviceMemberId}/exportstatus', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the serviceMembersListGlobalConfiguration operation.
     * @callback module:api/ServiceMembersApi~serviceMembersListGlobalConfigurationCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GlobalConfigurations} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the global configuration.
     * @param {String} serviceName The name of the service.
     * @param {String} serviceMemberId The server id.
     * @param {String} apiVersion The version of the API to be used with the client request.
     * @param {module:api/ServiceMembersApi~serviceMembersListGlobalConfigurationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GlobalConfigurations}
     */
    serviceMembersListGlobalConfiguration(serviceName, serviceMemberId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'serviceName' is set
      if (serviceName === undefined || serviceName === null) {
        throw new Error("Missing the required parameter 'serviceName' when calling serviceMembersListGlobalConfiguration");
      }
      // verify the required parameter 'serviceMemberId' is set
      if (serviceMemberId === undefined || serviceMemberId === null) {
        throw new Error("Missing the required parameter 'serviceMemberId' when calling serviceMembersListGlobalConfiguration");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling serviceMembersListGlobalConfiguration");
      }

      let pathParams = {
        'serviceName': serviceName,
        'serviceMemberId': serviceMemberId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GlobalConfigurations;
      return this.apiClient.callApi(
        '/providers/Microsoft.ADHybridHealthService/services/{serviceName}/servicemembers/{serviceMemberId}/globalconfiguration', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
