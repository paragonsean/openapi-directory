# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AdditionalInformation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, has_properties: bool=None, properties: object=None, title_name: str=None, title_value: str=None):
        """AdditionalInformation - a model defined in OpenAPI

        :param has_properties: The has_properties of this AdditionalInformation.
        :param properties: The properties of this AdditionalInformation.
        :param title_name: The title_name of this AdditionalInformation.
        :param title_value: The title_value of this AdditionalInformation.
        """
        self.openapi_types = {
            'has_properties': bool,
            'properties': object,
            'title_name': str,
            'title_value': str
        }

        self.attribute_map = {
            'has_properties': 'hasProperties',
            'properties': 'properties',
            'title_name': 'titleName',
            'title_value': 'titleValue'
        }

        self._has_properties = has_properties
        self._properties = properties
        self._title_name = title_name
        self._title_value = title_value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AdditionalInformation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AdditionalInformation of this AdditionalInformation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def has_properties(self):
        """Gets the has_properties of this AdditionalInformation.

        Indicates if properties are present or not.

        :return: The has_properties of this AdditionalInformation.
        :rtype: bool
        """
        return self._has_properties

    @has_properties.setter
    def has_properties(self, has_properties):
        """Sets the has_properties of this AdditionalInformation.

        Indicates if properties are present or not.

        :param has_properties: The has_properties of this AdditionalInformation.
        :type has_properties: bool
        """

        self._has_properties = has_properties

    @property
    def properties(self):
        """Gets the properties of this AdditionalInformation.

        The list of properties which are included in the additional information.

        :return: The properties of this AdditionalInformation.
        :rtype: object
        """
        return self._properties

    @properties.setter
    def properties(self, properties):
        """Sets the properties of this AdditionalInformation.

        The list of properties which are included in the additional information.

        :param properties: The properties of this AdditionalInformation.
        :type properties: object
        """

        self._properties = properties

    @property
    def title_name(self):
        """Gets the title_name of this AdditionalInformation.

        The title name for the property.

        :return: The title_name of this AdditionalInformation.
        :rtype: str
        """
        return self._title_name

    @title_name.setter
    def title_name(self, title_name):
        """Sets the title_name of this AdditionalInformation.

        The title name for the property.

        :param title_name: The title_name of this AdditionalInformation.
        :type title_name: str
        """

        self._title_name = title_name

    @property
    def title_value(self):
        """Gets the title_value of this AdditionalInformation.

        The title value for the property.

        :return: The title_value of this AdditionalInformation.
        :rtype: str
        """
        return self._title_value

    @title_value.setter
    def title_value(self, title_value):
        """Sets the title_value of this AdditionalInformation.

        The title value for the property.

        :param title_value: The title_value of this AdditionalInformation.
        :type title_value: str
        """

        self._title_value = title_value
