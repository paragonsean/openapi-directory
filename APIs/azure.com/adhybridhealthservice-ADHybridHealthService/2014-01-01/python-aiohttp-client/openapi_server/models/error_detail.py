# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.merged_export_error import MergedExportError
from openapi_server.models.object_with_sync_error import ObjectWithSyncError
from openapi_server import util


class ErrorDetail(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, detail: str=None, kb_url: str=None, object_with_sync_error: MergedExportError=None, objects_with_sync_error: ObjectWithSyncError=None):
        """ErrorDetail - a model defined in OpenAPI

        :param description: The description of this ErrorDetail.
        :param detail: The detail of this ErrorDetail.
        :param kb_url: The kb_url of this ErrorDetail.
        :param object_with_sync_error: The object_with_sync_error of this ErrorDetail.
        :param objects_with_sync_error: The objects_with_sync_error of this ErrorDetail.
        """
        self.openapi_types = {
            'description': str,
            'detail': str,
            'kb_url': str,
            'object_with_sync_error': MergedExportError,
            'objects_with_sync_error': ObjectWithSyncError
        }

        self.attribute_map = {
            'description': 'description',
            'detail': 'detail',
            'kb_url': 'kbUrl',
            'object_with_sync_error': 'objectWithSyncError',
            'objects_with_sync_error': 'objectsWithSyncError'
        }

        self._description = description
        self._detail = detail
        self._kb_url = kb_url
        self._object_with_sync_error = object_with_sync_error
        self._objects_with_sync_error = objects_with_sync_error

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ErrorDetail':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ErrorDetail of this ErrorDetail.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this ErrorDetail.

        The error description.

        :return: The description of this ErrorDetail.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this ErrorDetail.

        The error description.

        :param description: The description of this ErrorDetail.
        :type description: str
        """

        self._description = description

    @property
    def detail(self):
        """Gets the detail of this ErrorDetail.

        Additional details related to the error.

        :return: The detail of this ErrorDetail.
        :rtype: str
        """
        return self._detail

    @detail.setter
    def detail(self, detail):
        """Sets the detail of this ErrorDetail.

        Additional details related to the error.

        :param detail: The detail of this ErrorDetail.
        :type detail: str
        """

        self._detail = detail

    @property
    def kb_url(self):
        """Gets the kb_url of this ErrorDetail.

        The knowledge base article url which contains more information about the error.

        :return: The kb_url of this ErrorDetail.
        :rtype: str
        """
        return self._kb_url

    @kb_url.setter
    def kb_url(self, kb_url):
        """Sets the kb_url of this ErrorDetail.

        The knowledge base article url which contains more information about the error.

        :param kb_url: The kb_url of this ErrorDetail.
        :type kb_url: str
        """

        self._kb_url = kb_url

    @property
    def object_with_sync_error(self):
        """Gets the object_with_sync_error of this ErrorDetail.


        :return: The object_with_sync_error of this ErrorDetail.
        :rtype: MergedExportError
        """
        return self._object_with_sync_error

    @object_with_sync_error.setter
    def object_with_sync_error(self, object_with_sync_error):
        """Sets the object_with_sync_error of this ErrorDetail.


        :param object_with_sync_error: The object_with_sync_error of this ErrorDetail.
        :type object_with_sync_error: MergedExportError
        """

        self._object_with_sync_error = object_with_sync_error

    @property
    def objects_with_sync_error(self):
        """Gets the objects_with_sync_error of this ErrorDetail.


        :return: The objects_with_sync_error of this ErrorDetail.
        :rtype: ObjectWithSyncError
        """
        return self._objects_with_sync_error

    @objects_with_sync_error.setter
    def objects_with_sync_error(self, objects_with_sync_error):
        """Sets the objects_with_sync_error of this ErrorDetail.


        :param objects_with_sync_error: The objects_with_sync_error of this ErrorDetail.
        :type objects_with_sync_error: ObjectWithSyncError
        """

        self._objects_with_sync_error = objects_with_sync_error
