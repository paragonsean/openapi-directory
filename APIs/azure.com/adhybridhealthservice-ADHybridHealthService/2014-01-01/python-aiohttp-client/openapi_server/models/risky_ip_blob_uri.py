# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RiskyIPBlobUri(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, blob_create_date_time: datetime=None, job_completion_time: datetime=None, result_sas_uri: str=None, service_id: str=None, status: str=None, tenant_id: str=None):
        """RiskyIPBlobUri - a model defined in OpenAPI

        :param blob_create_date_time: The blob_create_date_time of this RiskyIPBlobUri.
        :param job_completion_time: The job_completion_time of this RiskyIPBlobUri.
        :param result_sas_uri: The result_sas_uri of this RiskyIPBlobUri.
        :param service_id: The service_id of this RiskyIPBlobUri.
        :param status: The status of this RiskyIPBlobUri.
        :param tenant_id: The tenant_id of this RiskyIPBlobUri.
        """
        self.openapi_types = {
            'blob_create_date_time': datetime,
            'job_completion_time': datetime,
            'result_sas_uri': str,
            'service_id': str,
            'status': str,
            'tenant_id': str
        }

        self.attribute_map = {
            'blob_create_date_time': 'blobCreateDateTime',
            'job_completion_time': 'jobCompletionTime',
            'result_sas_uri': 'resultSasUri',
            'service_id': 'serviceId',
            'status': 'status',
            'tenant_id': 'tenantId'
        }

        self._blob_create_date_time = blob_create_date_time
        self._job_completion_time = job_completion_time
        self._result_sas_uri = result_sas_uri
        self._service_id = service_id
        self._status = status
        self._tenant_id = tenant_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RiskyIPBlobUri':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RiskyIPBlobUri of this RiskyIPBlobUri.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def blob_create_date_time(self):
        """Gets the blob_create_date_time of this RiskyIPBlobUri.

        Time at which the new Risky IP report was requested.

        :return: The blob_create_date_time of this RiskyIPBlobUri.
        :rtype: datetime
        """
        return self._blob_create_date_time

    @blob_create_date_time.setter
    def blob_create_date_time(self, blob_create_date_time):
        """Sets the blob_create_date_time of this RiskyIPBlobUri.

        Time at which the new Risky IP report was requested.

        :param blob_create_date_time: The blob_create_date_time of this RiskyIPBlobUri.
        :type blob_create_date_time: datetime
        """

        self._blob_create_date_time = blob_create_date_time

    @property
    def job_completion_time(self):
        """Gets the job_completion_time of this RiskyIPBlobUri.

        Time at which the blob creation job for the new Risky IP report was completed.

        :return: The job_completion_time of this RiskyIPBlobUri.
        :rtype: datetime
        """
        return self._job_completion_time

    @job_completion_time.setter
    def job_completion_time(self, job_completion_time):
        """Sets the job_completion_time of this RiskyIPBlobUri.

        Time at which the blob creation job for the new Risky IP report was completed.

        :param job_completion_time: The job_completion_time of this RiskyIPBlobUri.
        :type job_completion_time: datetime
        """

        self._job_completion_time = job_completion_time

    @property
    def result_sas_uri(self):
        """Gets the result_sas_uri of this RiskyIPBlobUri.

        The blob uri for the report.

        :return: The result_sas_uri of this RiskyIPBlobUri.
        :rtype: str
        """
        return self._result_sas_uri

    @result_sas_uri.setter
    def result_sas_uri(self, result_sas_uri):
        """Sets the result_sas_uri of this RiskyIPBlobUri.

        The blob uri for the report.

        :param result_sas_uri: The result_sas_uri of this RiskyIPBlobUri.
        :type result_sas_uri: str
        """

        self._result_sas_uri = result_sas_uri

    @property
    def service_id(self):
        """Gets the service_id of this RiskyIPBlobUri.

        The service id for whom the report belongs to.

        :return: The service_id of this RiskyIPBlobUri.
        :rtype: str
        """
        return self._service_id

    @service_id.setter
    def service_id(self, service_id):
        """Sets the service_id of this RiskyIPBlobUri.

        The service id for whom the report belongs to.

        :param service_id: The service_id of this RiskyIPBlobUri.
        :type service_id: str
        """

        self._service_id = service_id

    @property
    def status(self):
        """Gets the status of this RiskyIPBlobUri.

        Status of the Risky IP report generation.

        :return: The status of this RiskyIPBlobUri.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this RiskyIPBlobUri.

        Status of the Risky IP report generation.

        :param status: The status of this RiskyIPBlobUri.
        :type status: str
        """

        self._status = status

    @property
    def tenant_id(self):
        """Gets the tenant_id of this RiskyIPBlobUri.

        The tenant id for whom the report belongs to.

        :return: The tenant_id of this RiskyIPBlobUri.
        :rtype: str
        """
        return self._tenant_id

    @tenant_id.setter
    def tenant_id(self, tenant_id):
        """Sets the tenant_id of this RiskyIPBlobUri.

        The tenant id for whom the report belongs to.

        :param tenant_id: The tenant_id of this RiskyIPBlobUri.
        :type tenant_id: str
        """

        self._tenant_id = tenant_id
