# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ServiceProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, active_alerts: int=None, additional_information: str=None, created_date: datetime=None, custom_notification_emails: List[str]=None, disabled: bool=None, display_name: str=None, health: str=None, id: str=None, last_disabled: datetime=None, last_updated: datetime=None, monitoring_configurations_computed: object=None, monitoring_configurations_customized: object=None, notification_email_enabled: bool=None, notification_email_enabled_for_global_admins: bool=None, notification_emails: List[str]=None, notification_emails_enabled_for_global_admins: bool=None, original_disabled_state: bool=None, resolved_alerts: int=None, service_id: str=None, service_name: str=None, signature: str=None, simple_properties: object=None, tenant_id: str=None, type: str=None):
        """ServiceProperties - a model defined in OpenAPI

        :param active_alerts: The active_alerts of this ServiceProperties.
        :param additional_information: The additional_information of this ServiceProperties.
        :param created_date: The created_date of this ServiceProperties.
        :param custom_notification_emails: The custom_notification_emails of this ServiceProperties.
        :param disabled: The disabled of this ServiceProperties.
        :param display_name: The display_name of this ServiceProperties.
        :param health: The health of this ServiceProperties.
        :param id: The id of this ServiceProperties.
        :param last_disabled: The last_disabled of this ServiceProperties.
        :param last_updated: The last_updated of this ServiceProperties.
        :param monitoring_configurations_computed: The monitoring_configurations_computed of this ServiceProperties.
        :param monitoring_configurations_customized: The monitoring_configurations_customized of this ServiceProperties.
        :param notification_email_enabled: The notification_email_enabled of this ServiceProperties.
        :param notification_email_enabled_for_global_admins: The notification_email_enabled_for_global_admins of this ServiceProperties.
        :param notification_emails: The notification_emails of this ServiceProperties.
        :param notification_emails_enabled_for_global_admins: The notification_emails_enabled_for_global_admins of this ServiceProperties.
        :param original_disabled_state: The original_disabled_state of this ServiceProperties.
        :param resolved_alerts: The resolved_alerts of this ServiceProperties.
        :param service_id: The service_id of this ServiceProperties.
        :param service_name: The service_name of this ServiceProperties.
        :param signature: The signature of this ServiceProperties.
        :param simple_properties: The simple_properties of this ServiceProperties.
        :param tenant_id: The tenant_id of this ServiceProperties.
        :param type: The type of this ServiceProperties.
        """
        self.openapi_types = {
            'active_alerts': int,
            'additional_information': str,
            'created_date': datetime,
            'custom_notification_emails': List[str],
            'disabled': bool,
            'display_name': str,
            'health': str,
            'id': str,
            'last_disabled': datetime,
            'last_updated': datetime,
            'monitoring_configurations_computed': object,
            'monitoring_configurations_customized': object,
            'notification_email_enabled': bool,
            'notification_email_enabled_for_global_admins': bool,
            'notification_emails': List[str],
            'notification_emails_enabled_for_global_admins': bool,
            'original_disabled_state': bool,
            'resolved_alerts': int,
            'service_id': str,
            'service_name': str,
            'signature': str,
            'simple_properties': object,
            'tenant_id': str,
            'type': str
        }

        self.attribute_map = {
            'active_alerts': 'activeAlerts',
            'additional_information': 'additionalInformation',
            'created_date': 'createdDate',
            'custom_notification_emails': 'customNotificationEmails',
            'disabled': 'disabled',
            'display_name': 'displayName',
            'health': 'health',
            'id': 'id',
            'last_disabled': 'lastDisabled',
            'last_updated': 'lastUpdated',
            'monitoring_configurations_computed': 'monitoringConfigurationsComputed',
            'monitoring_configurations_customized': 'monitoringConfigurationsCustomized',
            'notification_email_enabled': 'notificationEmailEnabled',
            'notification_email_enabled_for_global_admins': 'notificationEmailEnabledForGlobalAdmins',
            'notification_emails': 'notificationEmails',
            'notification_emails_enabled_for_global_admins': 'notificationEmailsEnabledForGlobalAdmins',
            'original_disabled_state': 'originalDisabledState',
            'resolved_alerts': 'resolvedAlerts',
            'service_id': 'serviceId',
            'service_name': 'serviceName',
            'signature': 'signature',
            'simple_properties': 'simpleProperties',
            'tenant_id': 'tenantId',
            'type': 'type'
        }

        self._active_alerts = active_alerts
        self._additional_information = additional_information
        self._created_date = created_date
        self._custom_notification_emails = custom_notification_emails
        self._disabled = disabled
        self._display_name = display_name
        self._health = health
        self._id = id
        self._last_disabled = last_disabled
        self._last_updated = last_updated
        self._monitoring_configurations_computed = monitoring_configurations_computed
        self._monitoring_configurations_customized = monitoring_configurations_customized
        self._notification_email_enabled = notification_email_enabled
        self._notification_email_enabled_for_global_admins = notification_email_enabled_for_global_admins
        self._notification_emails = notification_emails
        self._notification_emails_enabled_for_global_admins = notification_emails_enabled_for_global_admins
        self._original_disabled_state = original_disabled_state
        self._resolved_alerts = resolved_alerts
        self._service_id = service_id
        self._service_name = service_name
        self._signature = signature
        self._simple_properties = simple_properties
        self._tenant_id = tenant_id
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ServiceProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ServiceProperties of this ServiceProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def active_alerts(self):
        """Gets the active_alerts of this ServiceProperties.

        The count of alerts that are currently active for the service.

        :return: The active_alerts of this ServiceProperties.
        :rtype: int
        """
        return self._active_alerts

    @active_alerts.setter
    def active_alerts(self, active_alerts):
        """Sets the active_alerts of this ServiceProperties.

        The count of alerts that are currently active for the service.

        :param active_alerts: The active_alerts of this ServiceProperties.
        :type active_alerts: int
        """

        self._active_alerts = active_alerts

    @property
    def additional_information(self):
        """Gets the additional_information of this ServiceProperties.

        The additional information related to the service.

        :return: The additional_information of this ServiceProperties.
        :rtype: str
        """
        return self._additional_information

    @additional_information.setter
    def additional_information(self, additional_information):
        """Sets the additional_information of this ServiceProperties.

        The additional information related to the service.

        :param additional_information: The additional_information of this ServiceProperties.
        :type additional_information: str
        """

        self._additional_information = additional_information

    @property
    def created_date(self):
        """Gets the created_date of this ServiceProperties.

        The date and time, in UTC, when the service was onboarded to Azure Active Directory Connect Health.

        :return: The created_date of this ServiceProperties.
        :rtype: datetime
        """
        return self._created_date

    @created_date.setter
    def created_date(self, created_date):
        """Sets the created_date of this ServiceProperties.

        The date and time, in UTC, when the service was onboarded to Azure Active Directory Connect Health.

        :param created_date: The created_date of this ServiceProperties.
        :type created_date: datetime
        """

        self._created_date = created_date

    @property
    def custom_notification_emails(self):
        """Gets the custom_notification_emails of this ServiceProperties.

        The list of additional emails that are configured to receive notifications about the service.

        :return: The custom_notification_emails of this ServiceProperties.
        :rtype: List[str]
        """
        return self._custom_notification_emails

    @custom_notification_emails.setter
    def custom_notification_emails(self, custom_notification_emails):
        """Sets the custom_notification_emails of this ServiceProperties.

        The list of additional emails that are configured to receive notifications about the service.

        :param custom_notification_emails: The custom_notification_emails of this ServiceProperties.
        :type custom_notification_emails: List[str]
        """

        self._custom_notification_emails = custom_notification_emails

    @property
    def disabled(self):
        """Gets the disabled of this ServiceProperties.

        Indicates if the service is disabled or not.

        :return: The disabled of this ServiceProperties.
        :rtype: bool
        """
        return self._disabled

    @disabled.setter
    def disabled(self, disabled):
        """Sets the disabled of this ServiceProperties.

        Indicates if the service is disabled or not.

        :param disabled: The disabled of this ServiceProperties.
        :type disabled: bool
        """

        self._disabled = disabled

    @property
    def display_name(self):
        """Gets the display_name of this ServiceProperties.

        The display name of the service.

        :return: The display_name of this ServiceProperties.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this ServiceProperties.

        The display name of the service.

        :param display_name: The display_name of this ServiceProperties.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def health(self):
        """Gets the health of this ServiceProperties.

        The health of the service.

        :return: The health of this ServiceProperties.
        :rtype: str
        """
        return self._health

    @health.setter
    def health(self, health):
        """Sets the health of this ServiceProperties.

        The health of the service.

        :param health: The health of this ServiceProperties.
        :type health: str
        """

        self._health = health

    @property
    def id(self):
        """Gets the id of this ServiceProperties.

        The id of the service.

        :return: The id of this ServiceProperties.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ServiceProperties.

        The id of the service.

        :param id: The id of this ServiceProperties.
        :type id: str
        """

        self._id = id

    @property
    def last_disabled(self):
        """Gets the last_disabled of this ServiceProperties.

        The date and time, in UTC, when the service was last disabled.

        :return: The last_disabled of this ServiceProperties.
        :rtype: datetime
        """
        return self._last_disabled

    @last_disabled.setter
    def last_disabled(self, last_disabled):
        """Sets the last_disabled of this ServiceProperties.

        The date and time, in UTC, when the service was last disabled.

        :param last_disabled: The last_disabled of this ServiceProperties.
        :type last_disabled: datetime
        """

        self._last_disabled = last_disabled

    @property
    def last_updated(self):
        """Gets the last_updated of this ServiceProperties.

        The date or time , in UTC, when the service properties were last updated.

        :return: The last_updated of this ServiceProperties.
        :rtype: datetime
        """
        return self._last_updated

    @last_updated.setter
    def last_updated(self, last_updated):
        """Sets the last_updated of this ServiceProperties.

        The date or time , in UTC, when the service properties were last updated.

        :param last_updated: The last_updated of this ServiceProperties.
        :type last_updated: datetime
        """

        self._last_updated = last_updated

    @property
    def monitoring_configurations_computed(self):
        """Gets the monitoring_configurations_computed of this ServiceProperties.

        The monitoring configuration of the service which determines what activities are monitored by Azure Active Directory Connect Health.

        :return: The monitoring_configurations_computed of this ServiceProperties.
        :rtype: object
        """
        return self._monitoring_configurations_computed

    @monitoring_configurations_computed.setter
    def monitoring_configurations_computed(self, monitoring_configurations_computed):
        """Sets the monitoring_configurations_computed of this ServiceProperties.

        The monitoring configuration of the service which determines what activities are monitored by Azure Active Directory Connect Health.

        :param monitoring_configurations_computed: The monitoring_configurations_computed of this ServiceProperties.
        :type monitoring_configurations_computed: object
        """

        self._monitoring_configurations_computed = monitoring_configurations_computed

    @property
    def monitoring_configurations_customized(self):
        """Gets the monitoring_configurations_customized of this ServiceProperties.

        The customized monitoring configuration of the service which determines what activities are monitored by Azure Active Directory Connect Health.

        :return: The monitoring_configurations_customized of this ServiceProperties.
        :rtype: object
        """
        return self._monitoring_configurations_customized

    @monitoring_configurations_customized.setter
    def monitoring_configurations_customized(self, monitoring_configurations_customized):
        """Sets the monitoring_configurations_customized of this ServiceProperties.

        The customized monitoring configuration of the service which determines what activities are monitored by Azure Active Directory Connect Health.

        :param monitoring_configurations_customized: The monitoring_configurations_customized of this ServiceProperties.
        :type monitoring_configurations_customized: object
        """

        self._monitoring_configurations_customized = monitoring_configurations_customized

    @property
    def notification_email_enabled(self):
        """Gets the notification_email_enabled of this ServiceProperties.

        Indicates if email notification is enabled or not.

        :return: The notification_email_enabled of this ServiceProperties.
        :rtype: bool
        """
        return self._notification_email_enabled

    @notification_email_enabled.setter
    def notification_email_enabled(self, notification_email_enabled):
        """Sets the notification_email_enabled of this ServiceProperties.

        Indicates if email notification is enabled or not.

        :param notification_email_enabled: The notification_email_enabled of this ServiceProperties.
        :type notification_email_enabled: bool
        """

        self._notification_email_enabled = notification_email_enabled

    @property
    def notification_email_enabled_for_global_admins(self):
        """Gets the notification_email_enabled_for_global_admins of this ServiceProperties.

        Indicates if email notification is enabled for global administrators of the tenant.

        :return: The notification_email_enabled_for_global_admins of this ServiceProperties.
        :rtype: bool
        """
        return self._notification_email_enabled_for_global_admins

    @notification_email_enabled_for_global_admins.setter
    def notification_email_enabled_for_global_admins(self, notification_email_enabled_for_global_admins):
        """Sets the notification_email_enabled_for_global_admins of this ServiceProperties.

        Indicates if email notification is enabled for global administrators of the tenant.

        :param notification_email_enabled_for_global_admins: The notification_email_enabled_for_global_admins of this ServiceProperties.
        :type notification_email_enabled_for_global_admins: bool
        """

        self._notification_email_enabled_for_global_admins = notification_email_enabled_for_global_admins

    @property
    def notification_emails(self):
        """Gets the notification_emails of this ServiceProperties.

        The list of emails to whom service notifications will be sent.

        :return: The notification_emails of this ServiceProperties.
        :rtype: List[str]
        """
        return self._notification_emails

    @notification_emails.setter
    def notification_emails(self, notification_emails):
        """Sets the notification_emails of this ServiceProperties.

        The list of emails to whom service notifications will be sent.

        :param notification_emails: The notification_emails of this ServiceProperties.
        :type notification_emails: List[str]
        """

        self._notification_emails = notification_emails

    @property
    def notification_emails_enabled_for_global_admins(self):
        """Gets the notification_emails_enabled_for_global_admins of this ServiceProperties.

        Indicates if email notification is enabled for global administrators of the tenant.

        :return: The notification_emails_enabled_for_global_admins of this ServiceProperties.
        :rtype: bool
        """
        return self._notification_emails_enabled_for_global_admins

    @notification_emails_enabled_for_global_admins.setter
    def notification_emails_enabled_for_global_admins(self, notification_emails_enabled_for_global_admins):
        """Sets the notification_emails_enabled_for_global_admins of this ServiceProperties.

        Indicates if email notification is enabled for global administrators of the tenant.

        :param notification_emails_enabled_for_global_admins: The notification_emails_enabled_for_global_admins of this ServiceProperties.
        :type notification_emails_enabled_for_global_admins: bool
        """

        self._notification_emails_enabled_for_global_admins = notification_emails_enabled_for_global_admins

    @property
    def original_disabled_state(self):
        """Gets the original_disabled_state of this ServiceProperties.

        Gets the original disable state.

        :return: The original_disabled_state of this ServiceProperties.
        :rtype: bool
        """
        return self._original_disabled_state

    @original_disabled_state.setter
    def original_disabled_state(self, original_disabled_state):
        """Sets the original_disabled_state of this ServiceProperties.

        Gets the original disable state.

        :param original_disabled_state: The original_disabled_state of this ServiceProperties.
        :type original_disabled_state: bool
        """

        self._original_disabled_state = original_disabled_state

    @property
    def resolved_alerts(self):
        """Gets the resolved_alerts of this ServiceProperties.

        The total count of alerts that has been resolved for the service.

        :return: The resolved_alerts of this ServiceProperties.
        :rtype: int
        """
        return self._resolved_alerts

    @resolved_alerts.setter
    def resolved_alerts(self, resolved_alerts):
        """Sets the resolved_alerts of this ServiceProperties.

        The total count of alerts that has been resolved for the service.

        :param resolved_alerts: The resolved_alerts of this ServiceProperties.
        :type resolved_alerts: int
        """

        self._resolved_alerts = resolved_alerts

    @property
    def service_id(self):
        """Gets the service_id of this ServiceProperties.

        The id of the service.

        :return: The service_id of this ServiceProperties.
        :rtype: str
        """
        return self._service_id

    @service_id.setter
    def service_id(self, service_id):
        """Sets the service_id of this ServiceProperties.

        The id of the service.

        :param service_id: The service_id of this ServiceProperties.
        :type service_id: str
        """

        self._service_id = service_id

    @property
    def service_name(self):
        """Gets the service_name of this ServiceProperties.

        The name of the service.

        :return: The service_name of this ServiceProperties.
        :rtype: str
        """
        return self._service_name

    @service_name.setter
    def service_name(self, service_name):
        """Sets the service_name of this ServiceProperties.

        The name of the service.

        :param service_name: The service_name of this ServiceProperties.
        :type service_name: str
        """

        self._service_name = service_name

    @property
    def signature(self):
        """Gets the signature of this ServiceProperties.

        The signature of the service.

        :return: The signature of this ServiceProperties.
        :rtype: str
        """
        return self._signature

    @signature.setter
    def signature(self, signature):
        """Sets the signature of this ServiceProperties.

        The signature of the service.

        :param signature: The signature of this ServiceProperties.
        :type signature: str
        """

        self._signature = signature

    @property
    def simple_properties(self):
        """Gets the simple_properties of this ServiceProperties.

        List of service specific configuration properties.

        :return: The simple_properties of this ServiceProperties.
        :rtype: object
        """
        return self._simple_properties

    @simple_properties.setter
    def simple_properties(self, simple_properties):
        """Sets the simple_properties of this ServiceProperties.

        List of service specific configuration properties.

        :param simple_properties: The simple_properties of this ServiceProperties.
        :type simple_properties: object
        """

        self._simple_properties = simple_properties

    @property
    def tenant_id(self):
        """Gets the tenant_id of this ServiceProperties.

        The id of the tenant to which the service is registered to.

        :return: The tenant_id of this ServiceProperties.
        :rtype: str
        """
        return self._tenant_id

    @tenant_id.setter
    def tenant_id(self, tenant_id):
        """Sets the tenant_id of this ServiceProperties.

        The id of the tenant to which the service is registered to.

        :param tenant_id: The tenant_id of this ServiceProperties.
        :type tenant_id: str
        """

        self._tenant_id = tenant_id

    @property
    def type(self):
        """Gets the type of this ServiceProperties.

        The service type for the services onboarded to Azure Active Directory Connect Health. Depending on whether the service is monitoring, ADFS, Sync or ADDS roles, the service type can either be AdFederationService or AadSyncService or AdDomainService.

        :return: The type of this ServiceProperties.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this ServiceProperties.

        The service type for the services onboarded to Azure Active Directory Connect Health. Depending on whether the service is monitoring, ADFS, Sync or ADDS roles, the service type can either be AdFederationService or AadSyncService or AdDomainService.

        :param type: The type of this ServiceProperties.
        :type type: str
        """

        self._type = type
