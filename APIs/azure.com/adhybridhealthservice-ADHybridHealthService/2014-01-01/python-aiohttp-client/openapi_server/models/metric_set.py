# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MetricSet(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, set_name: str=None, values: List[int]=None):
        """MetricSet - a model defined in OpenAPI

        :param set_name: The set_name of this MetricSet.
        :param values: The values of this MetricSet.
        """
        self.openapi_types = {
            'set_name': str,
            'values': List[int]
        }

        self.attribute_map = {
            'set_name': 'setName',
            'values': 'values'
        }

        self._set_name = set_name
        self._values = values

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MetricSet':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MetricSet of this MetricSet.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def set_name(self):
        """Gets the set_name of this MetricSet.

        The name of the set.

        :return: The set_name of this MetricSet.
        :rtype: str
        """
        return self._set_name

    @set_name.setter
    def set_name(self, set_name):
        """Sets the set_name of this MetricSet.

        The name of the set.

        :param set_name: The set_name of this MetricSet.
        :type set_name: str
        """

        self._set_name = set_name

    @property
    def values(self):
        """Gets the values of this MetricSet.

        The list of the metric values.

        :return: The values of this MetricSet.
        :rtype: List[int]
        """
        return self._values

    @values.setter
    def values(self, values):
        """Sets the values of this MetricSet.

        The list of the metric values.

        :param values: The values of this MetricSet.
        :type values: List[int]
        """

        self._values = values
