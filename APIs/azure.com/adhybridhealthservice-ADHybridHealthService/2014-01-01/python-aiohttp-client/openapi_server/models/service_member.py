# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ServiceMember(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, active_alerts: int=None, additional_information: str=None, created_date: datetime=None, dimensions: object=None, disabled: bool=None, disabled_reason: int=None, installed_qfes: object=None, last_disabled: datetime=None, last_reboot: datetime=None, last_server_reported_monitoring_level_change: datetime=None, last_updated: datetime=None, machine_id: str=None, machine_name: str=None, monitoring_configurations_computed: object=None, monitoring_configurations_customized: object=None, os_name: str=None, os_version: str=None, properties: object=None, recommended_qfes: object=None, resolved_alerts: int=None, role: str=None, server_reported_monitoring_level: str=None, service_id: str=None, service_member_id: str=None, status: str=None, tenant_id: str=None):
        """ServiceMember - a model defined in OpenAPI

        :param active_alerts: The active_alerts of this ServiceMember.
        :param additional_information: The additional_information of this ServiceMember.
        :param created_date: The created_date of this ServiceMember.
        :param dimensions: The dimensions of this ServiceMember.
        :param disabled: The disabled of this ServiceMember.
        :param disabled_reason: The disabled_reason of this ServiceMember.
        :param installed_qfes: The installed_qfes of this ServiceMember.
        :param last_disabled: The last_disabled of this ServiceMember.
        :param last_reboot: The last_reboot of this ServiceMember.
        :param last_server_reported_monitoring_level_change: The last_server_reported_monitoring_level_change of this ServiceMember.
        :param last_updated: The last_updated of this ServiceMember.
        :param machine_id: The machine_id of this ServiceMember.
        :param machine_name: The machine_name of this ServiceMember.
        :param monitoring_configurations_computed: The monitoring_configurations_computed of this ServiceMember.
        :param monitoring_configurations_customized: The monitoring_configurations_customized of this ServiceMember.
        :param os_name: The os_name of this ServiceMember.
        :param os_version: The os_version of this ServiceMember.
        :param properties: The properties of this ServiceMember.
        :param recommended_qfes: The recommended_qfes of this ServiceMember.
        :param resolved_alerts: The resolved_alerts of this ServiceMember.
        :param role: The role of this ServiceMember.
        :param server_reported_monitoring_level: The server_reported_monitoring_level of this ServiceMember.
        :param service_id: The service_id of this ServiceMember.
        :param service_member_id: The service_member_id of this ServiceMember.
        :param status: The status of this ServiceMember.
        :param tenant_id: The tenant_id of this ServiceMember.
        """
        self.openapi_types = {
            'active_alerts': int,
            'additional_information': str,
            'created_date': datetime,
            'dimensions': object,
            'disabled': bool,
            'disabled_reason': int,
            'installed_qfes': object,
            'last_disabled': datetime,
            'last_reboot': datetime,
            'last_server_reported_monitoring_level_change': datetime,
            'last_updated': datetime,
            'machine_id': str,
            'machine_name': str,
            'monitoring_configurations_computed': object,
            'monitoring_configurations_customized': object,
            'os_name': str,
            'os_version': str,
            'properties': object,
            'recommended_qfes': object,
            'resolved_alerts': int,
            'role': str,
            'server_reported_monitoring_level': str,
            'service_id': str,
            'service_member_id': str,
            'status': str,
            'tenant_id': str
        }

        self.attribute_map = {
            'active_alerts': 'activeAlerts',
            'additional_information': 'additionalInformation',
            'created_date': 'createdDate',
            'dimensions': 'dimensions',
            'disabled': 'disabled',
            'disabled_reason': 'disabledReason',
            'installed_qfes': 'installedQfes',
            'last_disabled': 'lastDisabled',
            'last_reboot': 'lastReboot',
            'last_server_reported_monitoring_level_change': 'lastServerReportedMonitoringLevelChange',
            'last_updated': 'lastUpdated',
            'machine_id': 'machineId',
            'machine_name': 'machineName',
            'monitoring_configurations_computed': 'monitoringConfigurationsComputed',
            'monitoring_configurations_customized': 'monitoringConfigurationsCustomized',
            'os_name': 'osName',
            'os_version': 'osVersion',
            'properties': 'properties',
            'recommended_qfes': 'recommendedQfes',
            'resolved_alerts': 'resolvedAlerts',
            'role': 'role',
            'server_reported_monitoring_level': 'serverReportedMonitoringLevel',
            'service_id': 'serviceId',
            'service_member_id': 'serviceMemberId',
            'status': 'status',
            'tenant_id': 'tenantId'
        }

        self._active_alerts = active_alerts
        self._additional_information = additional_information
        self._created_date = created_date
        self._dimensions = dimensions
        self._disabled = disabled
        self._disabled_reason = disabled_reason
        self._installed_qfes = installed_qfes
        self._last_disabled = last_disabled
        self._last_reboot = last_reboot
        self._last_server_reported_monitoring_level_change = last_server_reported_monitoring_level_change
        self._last_updated = last_updated
        self._machine_id = machine_id
        self._machine_name = machine_name
        self._monitoring_configurations_computed = monitoring_configurations_computed
        self._monitoring_configurations_customized = monitoring_configurations_customized
        self._os_name = os_name
        self._os_version = os_version
        self._properties = properties
        self._recommended_qfes = recommended_qfes
        self._resolved_alerts = resolved_alerts
        self._role = role
        self._server_reported_monitoring_level = server_reported_monitoring_level
        self._service_id = service_id
        self._service_member_id = service_member_id
        self._status = status
        self._tenant_id = tenant_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ServiceMember':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ServiceMember of this ServiceMember.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def active_alerts(self):
        """Gets the active_alerts of this ServiceMember.

        The total number of alerts that are currently active for the server.

        :return: The active_alerts of this ServiceMember.
        :rtype: int
        """
        return self._active_alerts

    @active_alerts.setter
    def active_alerts(self, active_alerts):
        """Sets the active_alerts of this ServiceMember.

        The total number of alerts that are currently active for the server.

        :param active_alerts: The active_alerts of this ServiceMember.
        :type active_alerts: int
        """

        self._active_alerts = active_alerts

    @property
    def additional_information(self):
        """Gets the additional_information of this ServiceMember.

        The additional information, if any, for the server.

        :return: The additional_information of this ServiceMember.
        :rtype: str
        """
        return self._additional_information

    @additional_information.setter
    def additional_information(self, additional_information):
        """Sets the additional_information of this ServiceMember.

        The additional information, if any, for the server.

        :param additional_information: The additional_information of this ServiceMember.
        :type additional_information: str
        """

        self._additional_information = additional_information

    @property
    def created_date(self):
        """Gets the created_date of this ServiceMember.

        The date time , in UTC, when the server was onboarded to Azure Active Directory Connect Health.

        :return: The created_date of this ServiceMember.
        :rtype: datetime
        """
        return self._created_date

    @created_date.setter
    def created_date(self, created_date):
        """Sets the created_date of this ServiceMember.

        The date time , in UTC, when the server was onboarded to Azure Active Directory Connect Health.

        :param created_date: The created_date of this ServiceMember.
        :type created_date: datetime
        """

        self._created_date = created_date

    @property
    def dimensions(self):
        """Gets the dimensions of this ServiceMember.

        The server specific configuration related dimensions.

        :return: The dimensions of this ServiceMember.
        :rtype: object
        """
        return self._dimensions

    @dimensions.setter
    def dimensions(self, dimensions):
        """Sets the dimensions of this ServiceMember.

        The server specific configuration related dimensions.

        :param dimensions: The dimensions of this ServiceMember.
        :type dimensions: object
        """

        self._dimensions = dimensions

    @property
    def disabled(self):
        """Gets the disabled of this ServiceMember.

        Indicates if the server is disabled or not. 

        :return: The disabled of this ServiceMember.
        :rtype: bool
        """
        return self._disabled

    @disabled.setter
    def disabled(self, disabled):
        """Sets the disabled of this ServiceMember.

        Indicates if the server is disabled or not. 

        :param disabled: The disabled of this ServiceMember.
        :type disabled: bool
        """

        self._disabled = disabled

    @property
    def disabled_reason(self):
        """Gets the disabled_reason of this ServiceMember.

        The reason for disabling the server.

        :return: The disabled_reason of this ServiceMember.
        :rtype: int
        """
        return self._disabled_reason

    @disabled_reason.setter
    def disabled_reason(self, disabled_reason):
        """Sets the disabled_reason of this ServiceMember.

        The reason for disabling the server.

        :param disabled_reason: The disabled_reason of this ServiceMember.
        :type disabled_reason: int
        """

        self._disabled_reason = disabled_reason

    @property
    def installed_qfes(self):
        """Gets the installed_qfes of this ServiceMember.

        The list of installed QFEs for the server.

        :return: The installed_qfes of this ServiceMember.
        :rtype: object
        """
        return self._installed_qfes

    @installed_qfes.setter
    def installed_qfes(self, installed_qfes):
        """Sets the installed_qfes of this ServiceMember.

        The list of installed QFEs for the server.

        :param installed_qfes: The installed_qfes of this ServiceMember.
        :type installed_qfes: object
        """

        self._installed_qfes = installed_qfes

    @property
    def last_disabled(self):
        """Gets the last_disabled of this ServiceMember.

        The date and time , in UTC, when the server was last disabled.

        :return: The last_disabled of this ServiceMember.
        :rtype: datetime
        """
        return self._last_disabled

    @last_disabled.setter
    def last_disabled(self, last_disabled):
        """Sets the last_disabled of this ServiceMember.

        The date and time , in UTC, when the server was last disabled.

        :param last_disabled: The last_disabled of this ServiceMember.
        :type last_disabled: datetime
        """

        self._last_disabled = last_disabled

    @property
    def last_reboot(self):
        """Gets the last_reboot of this ServiceMember.

        The date and time, in UTC, when the server was last rebooted.

        :return: The last_reboot of this ServiceMember.
        :rtype: datetime
        """
        return self._last_reboot

    @last_reboot.setter
    def last_reboot(self, last_reboot):
        """Sets the last_reboot of this ServiceMember.

        The date and time, in UTC, when the server was last rebooted.

        :param last_reboot: The last_reboot of this ServiceMember.
        :type last_reboot: datetime
        """

        self._last_reboot = last_reboot

    @property
    def last_server_reported_monitoring_level_change(self):
        """Gets the last_server_reported_monitoring_level_change of this ServiceMember.

        The date and time, in UTC, when the server's data monitoring configuration was last changed.

        :return: The last_server_reported_monitoring_level_change of this ServiceMember.
        :rtype: datetime
        """
        return self._last_server_reported_monitoring_level_change

    @last_server_reported_monitoring_level_change.setter
    def last_server_reported_monitoring_level_change(self, last_server_reported_monitoring_level_change):
        """Sets the last_server_reported_monitoring_level_change of this ServiceMember.

        The date and time, in UTC, when the server's data monitoring configuration was last changed.

        :param last_server_reported_monitoring_level_change: The last_server_reported_monitoring_level_change of this ServiceMember.
        :type last_server_reported_monitoring_level_change: datetime
        """

        self._last_server_reported_monitoring_level_change = last_server_reported_monitoring_level_change

    @property
    def last_updated(self):
        """Gets the last_updated of this ServiceMember.

        The date and time, in UTC, when the server properties were last updated.

        :return: The last_updated of this ServiceMember.
        :rtype: datetime
        """
        return self._last_updated

    @last_updated.setter
    def last_updated(self, last_updated):
        """Sets the last_updated of this ServiceMember.

        The date and time, in UTC, when the server properties were last updated.

        :param last_updated: The last_updated of this ServiceMember.
        :type last_updated: datetime
        """

        self._last_updated = last_updated

    @property
    def machine_id(self):
        """Gets the machine_id of this ServiceMember.

        The id of the machine.

        :return: The machine_id of this ServiceMember.
        :rtype: str
        """
        return self._machine_id

    @machine_id.setter
    def machine_id(self, machine_id):
        """Sets the machine_id of this ServiceMember.

        The id of the machine.

        :param machine_id: The machine_id of this ServiceMember.
        :type machine_id: str
        """

        self._machine_id = machine_id

    @property
    def machine_name(self):
        """Gets the machine_name of this ServiceMember.

        The name of the server.

        :return: The machine_name of this ServiceMember.
        :rtype: str
        """
        return self._machine_name

    @machine_name.setter
    def machine_name(self, machine_name):
        """Sets the machine_name of this ServiceMember.

        The name of the server.

        :param machine_name: The machine_name of this ServiceMember.
        :type machine_name: str
        """

        self._machine_name = machine_name

    @property
    def monitoring_configurations_computed(self):
        """Gets the monitoring_configurations_computed of this ServiceMember.

        The monitoring configuration of the server which determines what activities are monitored by Azure Active Directory Connect Health.

        :return: The monitoring_configurations_computed of this ServiceMember.
        :rtype: object
        """
        return self._monitoring_configurations_computed

    @monitoring_configurations_computed.setter
    def monitoring_configurations_computed(self, monitoring_configurations_computed):
        """Sets the monitoring_configurations_computed of this ServiceMember.

        The monitoring configuration of the server which determines what activities are monitored by Azure Active Directory Connect Health.

        :param monitoring_configurations_computed: The monitoring_configurations_computed of this ServiceMember.
        :type monitoring_configurations_computed: object
        """

        self._monitoring_configurations_computed = monitoring_configurations_computed

    @property
    def monitoring_configurations_customized(self):
        """Gets the monitoring_configurations_customized of this ServiceMember.

        The customized monitoring configuration of the server which determines what activities are monitored by Azure Active Directory Connect Health.

        :return: The monitoring_configurations_customized of this ServiceMember.
        :rtype: object
        """
        return self._monitoring_configurations_customized

    @monitoring_configurations_customized.setter
    def monitoring_configurations_customized(self, monitoring_configurations_customized):
        """Sets the monitoring_configurations_customized of this ServiceMember.

        The customized monitoring configuration of the server which determines what activities are monitored by Azure Active Directory Connect Health.

        :param monitoring_configurations_customized: The monitoring_configurations_customized of this ServiceMember.
        :type monitoring_configurations_customized: object
        """

        self._monitoring_configurations_customized = monitoring_configurations_customized

    @property
    def os_name(self):
        """Gets the os_name of this ServiceMember.

        The name of the operating system installed in the machine.

        :return: The os_name of this ServiceMember.
        :rtype: str
        """
        return self._os_name

    @os_name.setter
    def os_name(self, os_name):
        """Sets the os_name of this ServiceMember.

        The name of the operating system installed in the machine.

        :param os_name: The os_name of this ServiceMember.
        :type os_name: str
        """

        self._os_name = os_name

    @property
    def os_version(self):
        """Gets the os_version of this ServiceMember.

        The version of the operating system installed in the machine.

        :return: The os_version of this ServiceMember.
        :rtype: str
        """
        return self._os_version

    @os_version.setter
    def os_version(self, os_version):
        """Sets the os_version of this ServiceMember.

        The version of the operating system installed in the machine.

        :param os_version: The os_version of this ServiceMember.
        :type os_version: str
        """

        self._os_version = os_version

    @property
    def properties(self):
        """Gets the properties of this ServiceMember.

        Server specific properties.

        :return: The properties of this ServiceMember.
        :rtype: object
        """
        return self._properties

    @properties.setter
    def properties(self, properties):
        """Sets the properties of this ServiceMember.

        Server specific properties.

        :param properties: The properties of this ServiceMember.
        :type properties: object
        """

        self._properties = properties

    @property
    def recommended_qfes(self):
        """Gets the recommended_qfes of this ServiceMember.

        The list of recommended hotfixes for the server.

        :return: The recommended_qfes of this ServiceMember.
        :rtype: object
        """
        return self._recommended_qfes

    @recommended_qfes.setter
    def recommended_qfes(self, recommended_qfes):
        """Sets the recommended_qfes of this ServiceMember.

        The list of recommended hotfixes for the server.

        :param recommended_qfes: The recommended_qfes of this ServiceMember.
        :type recommended_qfes: object
        """

        self._recommended_qfes = recommended_qfes

    @property
    def resolved_alerts(self):
        """Gets the resolved_alerts of this ServiceMember.

        The total count of alerts that are resolved for this server.

        :return: The resolved_alerts of this ServiceMember.
        :rtype: int
        """
        return self._resolved_alerts

    @resolved_alerts.setter
    def resolved_alerts(self, resolved_alerts):
        """Sets the resolved_alerts of this ServiceMember.

        The total count of alerts that are resolved for this server.

        :param resolved_alerts: The resolved_alerts of this ServiceMember.
        :type resolved_alerts: int
        """

        self._resolved_alerts = resolved_alerts

    @property
    def role(self):
        """Gets the role of this ServiceMember.

        The service role that is being monitored in the server.

        :return: The role of this ServiceMember.
        :rtype: str
        """
        return self._role

    @role.setter
    def role(self, role):
        """Sets the role of this ServiceMember.

        The service role that is being monitored in the server.

        :param role: The role of this ServiceMember.
        :type role: str
        """

        self._role = role

    @property
    def server_reported_monitoring_level(self):
        """Gets the server_reported_monitoring_level of this ServiceMember.

        The monitoring level reported by the server.

        :return: The server_reported_monitoring_level of this ServiceMember.
        :rtype: str
        """
        return self._server_reported_monitoring_level

    @server_reported_monitoring_level.setter
    def server_reported_monitoring_level(self, server_reported_monitoring_level):
        """Sets the server_reported_monitoring_level of this ServiceMember.

        The monitoring level reported by the server.

        :param server_reported_monitoring_level: The server_reported_monitoring_level of this ServiceMember.
        :type server_reported_monitoring_level: str
        """
        allowed_values = ["Partial", "Full", "Off"]  # noqa: E501
        if server_reported_monitoring_level not in allowed_values:
            raise ValueError(
                "Invalid value for `server_reported_monitoring_level` ({0}), must be one of {1}"
                .format(server_reported_monitoring_level, allowed_values)
            )

        self._server_reported_monitoring_level = server_reported_monitoring_level

    @property
    def service_id(self):
        """Gets the service_id of this ServiceMember.

        The service id to whom this server belongs.

        :return: The service_id of this ServiceMember.
        :rtype: str
        """
        return self._service_id

    @service_id.setter
    def service_id(self, service_id):
        """Sets the service_id of this ServiceMember.

        The service id to whom this server belongs.

        :param service_id: The service_id of this ServiceMember.
        :type service_id: str
        """

        self._service_id = service_id

    @property
    def service_member_id(self):
        """Gets the service_member_id of this ServiceMember.

        The id of the server.

        :return: The service_member_id of this ServiceMember.
        :rtype: str
        """
        return self._service_member_id

    @service_member_id.setter
    def service_member_id(self, service_member_id):
        """Sets the service_member_id of this ServiceMember.

        The id of the server.

        :param service_member_id: The service_member_id of this ServiceMember.
        :type service_member_id: str
        """

        self._service_member_id = service_member_id

    @property
    def status(self):
        """Gets the status of this ServiceMember.

        The health status of the server.

        :return: The status of this ServiceMember.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this ServiceMember.

        The health status of the server.

        :param status: The status of this ServiceMember.
        :type status: str
        """

        self._status = status

    @property
    def tenant_id(self):
        """Gets the tenant_id of this ServiceMember.

        The tenant id to whom this server belongs.

        :return: The tenant_id of this ServiceMember.
        :rtype: str
        """
        return self._tenant_id

    @tenant_id.setter
    def tenant_id(self, tenant_id):
        """Sets the tenant_id of this ServiceMember.

        The tenant id to whom this server belongs.

        :param tenant_id: The tenant_id of this ServiceMember.
        :type tenant_id: str
        """

        self._tenant_id = tenant_id
