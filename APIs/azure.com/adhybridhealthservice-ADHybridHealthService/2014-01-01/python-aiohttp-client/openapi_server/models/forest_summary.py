# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ForestSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, domain_count: int=None, domains: List[str]=None, forest_name: str=None, monitored_dc_count: int=None, site_count: int=None, sites: List[str]=None, total_dc_count: int=None):
        """ForestSummary - a model defined in OpenAPI

        :param domain_count: The domain_count of this ForestSummary.
        :param domains: The domains of this ForestSummary.
        :param forest_name: The forest_name of this ForestSummary.
        :param monitored_dc_count: The monitored_dc_count of this ForestSummary.
        :param site_count: The site_count of this ForestSummary.
        :param sites: The sites of this ForestSummary.
        :param total_dc_count: The total_dc_count of this ForestSummary.
        """
        self.openapi_types = {
            'domain_count': int,
            'domains': List[str],
            'forest_name': str,
            'monitored_dc_count': int,
            'site_count': int,
            'sites': List[str],
            'total_dc_count': int
        }

        self.attribute_map = {
            'domain_count': 'domainCount',
            'domains': 'domains',
            'forest_name': 'forestName',
            'monitored_dc_count': 'monitoredDcCount',
            'site_count': 'siteCount',
            'sites': 'sites',
            'total_dc_count': 'totalDcCount'
        }

        self._domain_count = domain_count
        self._domains = domains
        self._forest_name = forest_name
        self._monitored_dc_count = monitored_dc_count
        self._site_count = site_count
        self._sites = sites
        self._total_dc_count = total_dc_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ForestSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ForestSummary of this ForestSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def domain_count(self):
        """Gets the domain_count of this ForestSummary.

        The domain count.

        :return: The domain_count of this ForestSummary.
        :rtype: int
        """
        return self._domain_count

    @domain_count.setter
    def domain_count(self, domain_count):
        """Sets the domain_count of this ForestSummary.

        The domain count.

        :param domain_count: The domain_count of this ForestSummary.
        :type domain_count: int
        """

        self._domain_count = domain_count

    @property
    def domains(self):
        """Gets the domains of this ForestSummary.

        The list of domain controller names.

        :return: The domains of this ForestSummary.
        :rtype: List[str]
        """
        return self._domains

    @domains.setter
    def domains(self, domains):
        """Sets the domains of this ForestSummary.

        The list of domain controller names.

        :param domains: The domains of this ForestSummary.
        :type domains: List[str]
        """

        self._domains = domains

    @property
    def forest_name(self):
        """Gets the forest_name of this ForestSummary.

        The forest name.

        :return: The forest_name of this ForestSummary.
        :rtype: str
        """
        return self._forest_name

    @forest_name.setter
    def forest_name(self, forest_name):
        """Sets the forest_name of this ForestSummary.

        The forest name.

        :param forest_name: The forest_name of this ForestSummary.
        :type forest_name: str
        """

        self._forest_name = forest_name

    @property
    def monitored_dc_count(self):
        """Gets the monitored_dc_count of this ForestSummary.

        The number of domain controllers that are monitored by Azure Active Directory Connect Health.

        :return: The monitored_dc_count of this ForestSummary.
        :rtype: int
        """
        return self._monitored_dc_count

    @monitored_dc_count.setter
    def monitored_dc_count(self, monitored_dc_count):
        """Sets the monitored_dc_count of this ForestSummary.

        The number of domain controllers that are monitored by Azure Active Directory Connect Health.

        :param monitored_dc_count: The monitored_dc_count of this ForestSummary.
        :type monitored_dc_count: int
        """

        self._monitored_dc_count = monitored_dc_count

    @property
    def site_count(self):
        """Gets the site_count of this ForestSummary.

        The site count.

        :return: The site_count of this ForestSummary.
        :rtype: int
        """
        return self._site_count

    @site_count.setter
    def site_count(self, site_count):
        """Sets the site_count of this ForestSummary.

        The site count.

        :param site_count: The site_count of this ForestSummary.
        :type site_count: int
        """

        self._site_count = site_count

    @property
    def sites(self):
        """Gets the sites of this ForestSummary.

        The list of site names.

        :return: The sites of this ForestSummary.
        :rtype: List[str]
        """
        return self._sites

    @sites.setter
    def sites(self, sites):
        """Sets the sites of this ForestSummary.

        The list of site names.

        :param sites: The sites of this ForestSummary.
        :type sites: List[str]
        """

        self._sites = sites

    @property
    def total_dc_count(self):
        """Gets the total_dc_count of this ForestSummary.

        The total domain controllers.

        :return: The total_dc_count of this ForestSummary.
        :rtype: int
        """
        return self._total_dc_count

    @total_dc_count.setter
    def total_dc_count(self, total_dc_count):
        """Sets the total_dc_count of this ForestSummary.

        The total domain controllers.

        :param total_dc_count: The total_dc_count of this ForestSummary.
        :type total_dc_count: int
        """

        self._total_dc_count = total_dc_count
