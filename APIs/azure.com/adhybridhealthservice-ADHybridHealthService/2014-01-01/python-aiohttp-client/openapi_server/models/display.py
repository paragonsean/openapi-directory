# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Display(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, operation: str=None, provider: str=None):
        """Display - a model defined in OpenAPI

        :param description: The description of this Display.
        :param operation: The operation of this Display.
        :param provider: The provider of this Display.
        """
        self.openapi_types = {
            'description': str,
            'operation': str,
            'provider': str
        }

        self.attribute_map = {
            'description': 'description',
            'operation': 'operation',
            'provider': 'provider'
        }

        self._description = description
        self._operation = operation
        self._provider = provider

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Display':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Display of this Display.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this Display.

         The description for the operation.

        :return: The description of this Display.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this Display.

         The description for the operation.

        :param description: The description of this Display.
        :type description: str
        """

        self._description = description

    @property
    def operation(self):
        """Gets the operation of this Display.

        The details of the operation.

        :return: The operation of this Display.
        :rtype: str
        """
        return self._operation

    @operation.setter
    def operation(self, operation):
        """Sets the operation of this Display.

        The details of the operation.

        :param operation: The operation of this Display.
        :type operation: str
        """

        self._operation = operation

    @property
    def provider(self):
        """Gets the provider of this Display.

        The provider name.

        :return: The provider of this Display.
        :rtype: str
        """
        return self._provider

    @provider.setter
    def provider(self, provider):
        """Sets the provider of this Display.

        The provider name.

        :param provider: The provider of this Display.
        :type provider: str
        """

        self._provider = provider
