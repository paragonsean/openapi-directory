# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ExtensionErrorInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, call_stack: str=None, extension_context: str=None, extension_name: str=None):
        """ExtensionErrorInfo - a model defined in OpenAPI

        :param call_stack: The call_stack of this ExtensionErrorInfo.
        :param extension_context: The extension_context of this ExtensionErrorInfo.
        :param extension_name: The extension_name of this ExtensionErrorInfo.
        """
        self.openapi_types = {
            'call_stack': str,
            'extension_context': str,
            'extension_name': str
        }

        self.attribute_map = {
            'call_stack': 'callStack',
            'extension_context': 'extensionContext',
            'extension_name': 'extensionName'
        }

        self._call_stack = call_stack
        self._extension_context = extension_context
        self._extension_name = extension_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ExtensionErrorInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ExtensionErrorInfo of this ExtensionErrorInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def call_stack(self):
        """Gets the call_stack of this ExtensionErrorInfo.

        The call stack for the error.

        :return: The call_stack of this ExtensionErrorInfo.
        :rtype: str
        """
        return self._call_stack

    @call_stack.setter
    def call_stack(self, call_stack):
        """Sets the call_stack of this ExtensionErrorInfo.

        The call stack for the error.

        :param call_stack: The call_stack of this ExtensionErrorInfo.
        :type call_stack: str
        """

        self._call_stack = call_stack

    @property
    def extension_context(self):
        """Gets the extension_context of this ExtensionErrorInfo.

        The extension context.

        :return: The extension_context of this ExtensionErrorInfo.
        :rtype: str
        """
        return self._extension_context

    @extension_context.setter
    def extension_context(self, extension_context):
        """Sets the extension_context of this ExtensionErrorInfo.

        The extension context.

        :param extension_context: The extension_context of this ExtensionErrorInfo.
        :type extension_context: str
        """

        self._extension_context = extension_context

    @property
    def extension_name(self):
        """Gets the extension_name of this ExtensionErrorInfo.

        The extension name.

        :return: The extension_name of this ExtensionErrorInfo.
        :rtype: str
        """
        return self._extension_name

    @extension_name.setter
    def extension_name(self, extension_name):
        """Sets the extension_name of this ExtensionErrorInfo.

        The extension name.

        :param extension_name: The extension_name of this ExtensionErrorInfo.
        :type extension_name: str
        """

        self._extension_name = extension_name
