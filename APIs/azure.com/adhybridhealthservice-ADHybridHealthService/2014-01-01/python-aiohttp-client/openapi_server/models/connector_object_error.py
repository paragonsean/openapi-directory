# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ConnectorObjectError(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, anchor: str=None, attribute_name: str=None, column_number: int=None, connector_id: str=None, dn: str=None, entry_number: int=None, error_code: str=None, id: str=None, line_number: int=None, message: str=None, run_step_result_id: str=None, server_error_detail: str=None, type: str=None, values: List[str]=None):
        """ConnectorObjectError - a model defined in OpenAPI

        :param anchor: The anchor of this ConnectorObjectError.
        :param attribute_name: The attribute_name of this ConnectorObjectError.
        :param column_number: The column_number of this ConnectorObjectError.
        :param connector_id: The connector_id of this ConnectorObjectError.
        :param dn: The dn of this ConnectorObjectError.
        :param entry_number: The entry_number of this ConnectorObjectError.
        :param error_code: The error_code of this ConnectorObjectError.
        :param id: The id of this ConnectorObjectError.
        :param line_number: The line_number of this ConnectorObjectError.
        :param message: The message of this ConnectorObjectError.
        :param run_step_result_id: The run_step_result_id of this ConnectorObjectError.
        :param server_error_detail: The server_error_detail of this ConnectorObjectError.
        :param type: The type of this ConnectorObjectError.
        :param values: The values of this ConnectorObjectError.
        """
        self.openapi_types = {
            'anchor': str,
            'attribute_name': str,
            'column_number': int,
            'connector_id': str,
            'dn': str,
            'entry_number': int,
            'error_code': str,
            'id': str,
            'line_number': int,
            'message': str,
            'run_step_result_id': str,
            'server_error_detail': str,
            'type': str,
            'values': List[str]
        }

        self.attribute_map = {
            'anchor': 'anchor',
            'attribute_name': 'attributeName',
            'column_number': 'columnNumber',
            'connector_id': 'connectorId',
            'dn': 'dn',
            'entry_number': 'entryNumber',
            'error_code': 'errorCode',
            'id': 'id',
            'line_number': 'lineNumber',
            'message': 'message',
            'run_step_result_id': 'runStepResultId',
            'server_error_detail': 'serverErrorDetail',
            'type': 'type',
            'values': 'values'
        }

        self._anchor = anchor
        self._attribute_name = attribute_name
        self._column_number = column_number
        self._connector_id = connector_id
        self._dn = dn
        self._entry_number = entry_number
        self._error_code = error_code
        self._id = id
        self._line_number = line_number
        self._message = message
        self._run_step_result_id = run_step_result_id
        self._server_error_detail = server_error_detail
        self._type = type
        self._values = values

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ConnectorObjectError':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ConnectorObjectError of this ConnectorObjectError.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def anchor(self):
        """Gets the anchor of this ConnectorObjectError.

        The name for the anchor of the object.

        :return: The anchor of this ConnectorObjectError.
        :rtype: str
        """
        return self._anchor

    @anchor.setter
    def anchor(self, anchor):
        """Sets the anchor of this ConnectorObjectError.

        The name for the anchor of the object.

        :param anchor: The anchor of this ConnectorObjectError.
        :type anchor: str
        """

        self._anchor = anchor

    @property
    def attribute_name(self):
        """Gets the attribute_name of this ConnectorObjectError.

        The attribute name of the object.

        :return: The attribute_name of this ConnectorObjectError.
        :rtype: str
        """
        return self._attribute_name

    @attribute_name.setter
    def attribute_name(self, attribute_name):
        """Sets the attribute_name of this ConnectorObjectError.

        The attribute name of the object.

        :param attribute_name: The attribute_name of this ConnectorObjectError.
        :type attribute_name: str
        """

        self._attribute_name = attribute_name

    @property
    def column_number(self):
        """Gets the column_number of this ConnectorObjectError.

        The column number for the object error.

        :return: The column_number of this ConnectorObjectError.
        :rtype: int
        """
        return self._column_number

    @column_number.setter
    def column_number(self, column_number):
        """Sets the column_number of this ConnectorObjectError.

        The column number for the object error.

        :param column_number: The column_number of this ConnectorObjectError.
        :type column_number: int
        """

        self._column_number = column_number

    @property
    def connector_id(self):
        """Gets the connector_id of this ConnectorObjectError.

        The connector Id.

        :return: The connector_id of this ConnectorObjectError.
        :rtype: str
        """
        return self._connector_id

    @connector_id.setter
    def connector_id(self, connector_id):
        """Sets the connector_id of this ConnectorObjectError.

        The connector Id.

        :param connector_id: The connector_id of this ConnectorObjectError.
        :type connector_id: str
        """

        self._connector_id = connector_id

    @property
    def dn(self):
        """Gets the dn of this ConnectorObjectError.

        The distinguished name of the object.

        :return: The dn of this ConnectorObjectError.
        :rtype: str
        """
        return self._dn

    @dn.setter
    def dn(self, dn):
        """Sets the dn of this ConnectorObjectError.

        The distinguished name of the object.

        :param dn: The dn of this ConnectorObjectError.
        :type dn: str
        """

        self._dn = dn

    @property
    def entry_number(self):
        """Gets the entry_number of this ConnectorObjectError.

        The entry number for object error occurred.

        :return: The entry_number of this ConnectorObjectError.
        :rtype: int
        """
        return self._entry_number

    @entry_number.setter
    def entry_number(self, entry_number):
        """Sets the entry_number of this ConnectorObjectError.

        The entry number for object error occurred.

        :param entry_number: The entry_number of this ConnectorObjectError.
        :type entry_number: int
        """

        self._entry_number = entry_number

    @property
    def error_code(self):
        """Gets the error_code of this ConnectorObjectError.

        The error code.

        :return: The error_code of this ConnectorObjectError.
        :rtype: str
        """
        return self._error_code

    @error_code.setter
    def error_code(self, error_code):
        """Sets the error_code of this ConnectorObjectError.

        The error code.

        :param error_code: The error_code of this ConnectorObjectError.
        :type error_code: str
        """

        self._error_code = error_code

    @property
    def id(self):
        """Gets the id of this ConnectorObjectError.

        The error Id.

        :return: The id of this ConnectorObjectError.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ConnectorObjectError.

        The error Id.

        :param id: The id of this ConnectorObjectError.
        :type id: str
        """

        self._id = id

    @property
    def line_number(self):
        """Gets the line_number of this ConnectorObjectError.

        The line number for the object error.

        :return: The line_number of this ConnectorObjectError.
        :rtype: int
        """
        return self._line_number

    @line_number.setter
    def line_number(self, line_number):
        """Sets the line_number of this ConnectorObjectError.

        The line number for the object error.

        :param line_number: The line_number of this ConnectorObjectError.
        :type line_number: int
        """

        self._line_number = line_number

    @property
    def message(self):
        """Gets the message of this ConnectorObjectError.

        The message for the object error.

        :return: The message of this ConnectorObjectError.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this ConnectorObjectError.

        The message for the object error.

        :param message: The message of this ConnectorObjectError.
        :type message: str
        """

        self._message = message

    @property
    def run_step_result_id(self):
        """Gets the run_step_result_id of this ConnectorObjectError.

        The run step result Id.

        :return: The run_step_result_id of this ConnectorObjectError.
        :rtype: str
        """
        return self._run_step_result_id

    @run_step_result_id.setter
    def run_step_result_id(self, run_step_result_id):
        """Sets the run_step_result_id of this ConnectorObjectError.

        The run step result Id.

        :param run_step_result_id: The run_step_result_id of this ConnectorObjectError.
        :type run_step_result_id: str
        """

        self._run_step_result_id = run_step_result_id

    @property
    def server_error_detail(self):
        """Gets the server_error_detail of this ConnectorObjectError.

        The server side error details.

        :return: The server_error_detail of this ConnectorObjectError.
        :rtype: str
        """
        return self._server_error_detail

    @server_error_detail.setter
    def server_error_detail(self, server_error_detail):
        """Sets the server_error_detail of this ConnectorObjectError.

        The server side error details.

        :param server_error_detail: The server_error_detail of this ConnectorObjectError.
        :type server_error_detail: str
        """

        self._server_error_detail = server_error_detail

    @property
    def type(self):
        """Gets the type of this ConnectorObjectError.

        The type of error.

        :return: The type of this ConnectorObjectError.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this ConnectorObjectError.

        The type of error.

        :param type: The type of this ConnectorObjectError.
        :type type: str
        """

        self._type = type

    @property
    def values(self):
        """Gets the values of this ConnectorObjectError.

        The value corresponding to attribute name.

        :return: The values of this ConnectorObjectError.
        :rtype: List[str]
        """
        return self._values

    @values.setter
    def values(self, values):
        """Sets the values of this ConnectorObjectError.

        The value corresponding to attribute name.

        :param values: The values of this ConnectorObjectError.
        :type values: List[str]
        """

        self._values = values
