# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Hotfix(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, installed_date: datetime=None, kb_name: str=None, link: str=None):
        """Hotfix - a model defined in OpenAPI

        :param installed_date: The installed_date of this Hotfix.
        :param kb_name: The kb_name of this Hotfix.
        :param link: The link of this Hotfix.
        """
        self.openapi_types = {
            'installed_date': datetime,
            'kb_name': str,
            'link': str
        }

        self.attribute_map = {
            'installed_date': 'installedDate',
            'kb_name': 'kbName',
            'link': 'link'
        }

        self._installed_date = installed_date
        self._kb_name = kb_name
        self._link = link

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Hotfix':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Hotfix of this Hotfix.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def installed_date(self):
        """Gets the installed_date of this Hotfix.

        The date and time, in UTC, when the KB was installed in the server.

        :return: The installed_date of this Hotfix.
        :rtype: datetime
        """
        return self._installed_date

    @installed_date.setter
    def installed_date(self, installed_date):
        """Sets the installed_date of this Hotfix.

        The date and time, in UTC, when the KB was installed in the server.

        :param installed_date: The installed_date of this Hotfix.
        :type installed_date: datetime
        """

        self._installed_date = installed_date

    @property
    def kb_name(self):
        """Gets the kb_name of this Hotfix.

        The name of the hotfix KB.

        :return: The kb_name of this Hotfix.
        :rtype: str
        """
        return self._kb_name

    @kb_name.setter
    def kb_name(self, kb_name):
        """Sets the kb_name of this Hotfix.

        The name of the hotfix KB.

        :param kb_name: The kb_name of this Hotfix.
        :type kb_name: str
        """

        self._kb_name = kb_name

    @property
    def link(self):
        """Gets the link of this Hotfix.

        The link to the KB Article.

        :return: The link of this Hotfix.
        :rtype: str
        """
        return self._link

    @link.setter
    def link(self, link):
        """Sets the link of this Hotfix.

        The link to the KB Article.

        :param link: The link of this Hotfix.
        :type link: str
        """

        self._link = link
