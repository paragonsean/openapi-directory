# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AssociatedObject(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, display_name: str=None, distinguished_name: str=None, last_dir_sync_time: datetime=None, mail: str=None, object_guid: str=None, object_type: str=None, onpremises_user_principal_name: str=None, proxy_addresses: str=None, source_anchor: str=None, source_of_authority: str=None, time_occurred: datetime=None, user_principal_name: str=None):
        """AssociatedObject - a model defined in OpenAPI

        :param display_name: The display_name of this AssociatedObject.
        :param distinguished_name: The distinguished_name of this AssociatedObject.
        :param last_dir_sync_time: The last_dir_sync_time of this AssociatedObject.
        :param mail: The mail of this AssociatedObject.
        :param object_guid: The object_guid of this AssociatedObject.
        :param object_type: The object_type of this AssociatedObject.
        :param onpremises_user_principal_name: The onpremises_user_principal_name of this AssociatedObject.
        :param proxy_addresses: The proxy_addresses of this AssociatedObject.
        :param source_anchor: The source_anchor of this AssociatedObject.
        :param source_of_authority: The source_of_authority of this AssociatedObject.
        :param time_occurred: The time_occurred of this AssociatedObject.
        :param user_principal_name: The user_principal_name of this AssociatedObject.
        """
        self.openapi_types = {
            'display_name': str,
            'distinguished_name': str,
            'last_dir_sync_time': datetime,
            'mail': str,
            'object_guid': str,
            'object_type': str,
            'onpremises_user_principal_name': str,
            'proxy_addresses': str,
            'source_anchor': str,
            'source_of_authority': str,
            'time_occurred': datetime,
            'user_principal_name': str
        }

        self.attribute_map = {
            'display_name': 'displayName',
            'distinguished_name': 'distinguishedName',
            'last_dir_sync_time': 'lastDirSyncTime',
            'mail': 'mail',
            'object_guid': 'objectGuid',
            'object_type': 'objectType',
            'onpremises_user_principal_name': 'onpremisesUserPrincipalName',
            'proxy_addresses': 'proxyAddresses',
            'source_anchor': 'sourceAnchor',
            'source_of_authority': 'sourceOfAuthority',
            'time_occurred': 'timeOccurred',
            'user_principal_name': 'userPrincipalName'
        }

        self._display_name = display_name
        self._distinguished_name = distinguished_name
        self._last_dir_sync_time = last_dir_sync_time
        self._mail = mail
        self._object_guid = object_guid
        self._object_type = object_type
        self._onpremises_user_principal_name = onpremises_user_principal_name
        self._proxy_addresses = proxy_addresses
        self._source_anchor = source_anchor
        self._source_of_authority = source_of_authority
        self._time_occurred = time_occurred
        self._user_principal_name = user_principal_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AssociatedObject':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AssociatedObject of this AssociatedObject.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def display_name(self):
        """Gets the display_name of this AssociatedObject.

        The display name of the object.

        :return: The display_name of this AssociatedObject.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this AssociatedObject.

        The display name of the object.

        :param display_name: The display_name of this AssociatedObject.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def distinguished_name(self):
        """Gets the distinguished_name of this AssociatedObject.

        The distinguished name of the object.

        :return: The distinguished_name of this AssociatedObject.
        :rtype: str
        """
        return self._distinguished_name

    @distinguished_name.setter
    def distinguished_name(self, distinguished_name):
        """Sets the distinguished_name of this AssociatedObject.

        The distinguished name of the object.

        :param distinguished_name: The distinguished_name of this AssociatedObject.
        :type distinguished_name: str
        """

        self._distinguished_name = distinguished_name

    @property
    def last_dir_sync_time(self):
        """Gets the last_dir_sync_time of this AssociatedObject.

        The last dirSync time.

        :return: The last_dir_sync_time of this AssociatedObject.
        :rtype: datetime
        """
        return self._last_dir_sync_time

    @last_dir_sync_time.setter
    def last_dir_sync_time(self, last_dir_sync_time):
        """Sets the last_dir_sync_time of this AssociatedObject.

        The last dirSync time.

        :param last_dir_sync_time: The last_dir_sync_time of this AssociatedObject.
        :type last_dir_sync_time: datetime
        """

        self._last_dir_sync_time = last_dir_sync_time

    @property
    def mail(self):
        """Gets the mail of this AssociatedObject.

        The email of the object.

        :return: The mail of this AssociatedObject.
        :rtype: str
        """
        return self._mail

    @mail.setter
    def mail(self, mail):
        """Sets the mail of this AssociatedObject.

        The email of the object.

        :param mail: The mail of this AssociatedObject.
        :type mail: str
        """

        self._mail = mail

    @property
    def object_guid(self):
        """Gets the object_guid of this AssociatedObject.

        The object guid.

        :return: The object_guid of this AssociatedObject.
        :rtype: str
        """
        return self._object_guid

    @object_guid.setter
    def object_guid(self, object_guid):
        """Sets the object_guid of this AssociatedObject.

        The object guid.

        :param object_guid: The object_guid of this AssociatedObject.
        :type object_guid: str
        """

        self._object_guid = object_guid

    @property
    def object_type(self):
        """Gets the object_type of this AssociatedObject.

        The object type.

        :return: The object_type of this AssociatedObject.
        :rtype: str
        """
        return self._object_type

    @object_type.setter
    def object_type(self, object_type):
        """Sets the object_type of this AssociatedObject.

        The object type.

        :param object_type: The object_type of this AssociatedObject.
        :type object_type: str
        """

        self._object_type = object_type

    @property
    def onpremises_user_principal_name(self):
        """Gets the onpremises_user_principal_name of this AssociatedObject.

        The On-premises UPN.

        :return: The onpremises_user_principal_name of this AssociatedObject.
        :rtype: str
        """
        return self._onpremises_user_principal_name

    @onpremises_user_principal_name.setter
    def onpremises_user_principal_name(self, onpremises_user_principal_name):
        """Sets the onpremises_user_principal_name of this AssociatedObject.

        The On-premises UPN.

        :param onpremises_user_principal_name: The onpremises_user_principal_name of this AssociatedObject.
        :type onpremises_user_principal_name: str
        """

        self._onpremises_user_principal_name = onpremises_user_principal_name

    @property
    def proxy_addresses(self):
        """Gets the proxy_addresses of this AssociatedObject.

        The proxy addresses.

        :return: The proxy_addresses of this AssociatedObject.
        :rtype: str
        """
        return self._proxy_addresses

    @proxy_addresses.setter
    def proxy_addresses(self, proxy_addresses):
        """Sets the proxy_addresses of this AssociatedObject.

        The proxy addresses.

        :param proxy_addresses: The proxy_addresses of this AssociatedObject.
        :type proxy_addresses: str
        """

        self._proxy_addresses = proxy_addresses

    @property
    def source_anchor(self):
        """Gets the source_anchor of this AssociatedObject.

        The source anchor.

        :return: The source_anchor of this AssociatedObject.
        :rtype: str
        """
        return self._source_anchor

    @source_anchor.setter
    def source_anchor(self, source_anchor):
        """Sets the source_anchor of this AssociatedObject.

        The source anchor.

        :param source_anchor: The source_anchor of this AssociatedObject.
        :type source_anchor: str
        """

        self._source_anchor = source_anchor

    @property
    def source_of_authority(self):
        """Gets the source_of_authority of this AssociatedObject.

        The source of authority.

        :return: The source_of_authority of this AssociatedObject.
        :rtype: str
        """
        return self._source_of_authority

    @source_of_authority.setter
    def source_of_authority(self, source_of_authority):
        """Sets the source_of_authority of this AssociatedObject.

        The source of authority.

        :param source_of_authority: The source_of_authority of this AssociatedObject.
        :type source_of_authority: str
        """

        self._source_of_authority = source_of_authority

    @property
    def time_occurred(self):
        """Gets the time_occurred of this AssociatedObject.

         The time of the error.

        :return: The time_occurred of this AssociatedObject.
        :rtype: datetime
        """
        return self._time_occurred

    @time_occurred.setter
    def time_occurred(self, time_occurred):
        """Sets the time_occurred of this AssociatedObject.

         The time of the error.

        :param time_occurred: The time_occurred of this AssociatedObject.
        :type time_occurred: datetime
        """

        self._time_occurred = time_occurred

    @property
    def user_principal_name(self):
        """Gets the user_principal_name of this AssociatedObject.

         The UPN.

        :return: The user_principal_name of this AssociatedObject.
        :rtype: str
        """
        return self._user_principal_name

    @user_principal_name.setter
    def user_principal_name(self, user_principal_name):
        """Sets the user_principal_name of this AssociatedObject.

         The UPN.

        :param user_principal_name: The user_principal_name of this AssociatedObject.
        :type user_principal_name: str
        """

        self._user_principal_name = user_principal_name
