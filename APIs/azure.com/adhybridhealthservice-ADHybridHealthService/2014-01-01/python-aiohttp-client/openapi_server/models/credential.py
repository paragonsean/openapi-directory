# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Credential(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, credential_data: List[str]=None, identifier: str=None, type: str=None):
        """Credential - a model defined in OpenAPI

        :param credential_data: The credential_data of this Credential.
        :param identifier: The identifier of this Credential.
        :param type: The type of this Credential.
        """
        self.openapi_types = {
            'credential_data': List[str],
            'identifier': str,
            'type': str
        }

        self.attribute_map = {
            'credential_data': 'credentialData',
            'identifier': 'identifier',
            'type': 'type'
        }

        self._credential_data = credential_data
        self._identifier = identifier
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Credential':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Credential of this Credential.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def credential_data(self):
        """Gets the credential_data of this Credential.

        The credential data.

        :return: The credential_data of this Credential.
        :rtype: List[str]
        """
        return self._credential_data

    @credential_data.setter
    def credential_data(self, credential_data):
        """Sets the credential_data of this Credential.

        The credential data.

        :param credential_data: The credential_data of this Credential.
        :type credential_data: List[str]
        """

        self._credential_data = credential_data

    @property
    def identifier(self):
        """Gets the identifier of this Credential.

        The credential identifier.

        :return: The identifier of this Credential.
        :rtype: str
        """
        return self._identifier

    @identifier.setter
    def identifier(self, identifier):
        """Sets the identifier of this Credential.

        The credential identifier.

        :param identifier: The identifier of this Credential.
        :type identifier: str
        """

        self._identifier = identifier

    @property
    def type(self):
        """Gets the type of this Credential.

        The type of credential.

        :return: The type of this Credential.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this Credential.

        The type of credential.

        :param type: The type of this Credential.
        :type type: str
        """

        self._type = type
