# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ErrorReportUsersEntry(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ip_address: str=None, last_updated: datetime=None, total_error_attempts: int=None, unique_ip_addresses: str=None, user_id: str=None):
        """ErrorReportUsersEntry - a model defined in OpenAPI

        :param ip_address: The ip_address of this ErrorReportUsersEntry.
        :param last_updated: The last_updated of this ErrorReportUsersEntry.
        :param total_error_attempts: The total_error_attempts of this ErrorReportUsersEntry.
        :param unique_ip_addresses: The unique_ip_addresses of this ErrorReportUsersEntry.
        :param user_id: The user_id of this ErrorReportUsersEntry.
        """
        self.openapi_types = {
            'ip_address': str,
            'last_updated': datetime,
            'total_error_attempts': int,
            'unique_ip_addresses': str,
            'user_id': str
        }

        self.attribute_map = {
            'ip_address': 'ipAddress',
            'last_updated': 'lastUpdated',
            'total_error_attempts': 'totalErrorAttempts',
            'unique_ip_addresses': 'uniqueIpAddresses',
            'user_id': 'userId'
        }

        self._ip_address = ip_address
        self._last_updated = last_updated
        self._total_error_attempts = total_error_attempts
        self._unique_ip_addresses = unique_ip_addresses
        self._user_id = user_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ErrorReportUsersEntry':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ErrorReportUsersEntry of this ErrorReportUsersEntry.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ip_address(self):
        """Gets the ip_address of this ErrorReportUsersEntry.

        The Ip address corresponding to the last error event.

        :return: The ip_address of this ErrorReportUsersEntry.
        :rtype: str
        """
        return self._ip_address

    @ip_address.setter
    def ip_address(self, ip_address):
        """Sets the ip_address of this ErrorReportUsersEntry.

        The Ip address corresponding to the last error event.

        :param ip_address: The ip_address of this ErrorReportUsersEntry.
        :type ip_address: str
        """

        self._ip_address = ip_address

    @property
    def last_updated(self):
        """Gets the last_updated of this ErrorReportUsersEntry.

        The date and time when the last error event was logged.

        :return: The last_updated of this ErrorReportUsersEntry.
        :rtype: datetime
        """
        return self._last_updated

    @last_updated.setter
    def last_updated(self, last_updated):
        """Sets the last_updated of this ErrorReportUsersEntry.

        The date and time when the last error event was logged.

        :param last_updated: The last_updated of this ErrorReportUsersEntry.
        :type last_updated: datetime
        """

        self._last_updated = last_updated

    @property
    def total_error_attempts(self):
        """Gets the total_error_attempts of this ErrorReportUsersEntry.

        The total count of specific error events.

        :return: The total_error_attempts of this ErrorReportUsersEntry.
        :rtype: int
        """
        return self._total_error_attempts

    @total_error_attempts.setter
    def total_error_attempts(self, total_error_attempts):
        """Sets the total_error_attempts of this ErrorReportUsersEntry.

        The total count of specific error events.

        :param total_error_attempts: The total_error_attempts of this ErrorReportUsersEntry.
        :type total_error_attempts: int
        """

        self._total_error_attempts = total_error_attempts

    @property
    def unique_ip_addresses(self):
        """Gets the unique_ip_addresses of this ErrorReportUsersEntry.

        The list of unique IP addresses.

        :return: The unique_ip_addresses of this ErrorReportUsersEntry.
        :rtype: str
        """
        return self._unique_ip_addresses

    @unique_ip_addresses.setter
    def unique_ip_addresses(self, unique_ip_addresses):
        """Sets the unique_ip_addresses of this ErrorReportUsersEntry.

        The list of unique IP addresses.

        :param unique_ip_addresses: The unique_ip_addresses of this ErrorReportUsersEntry.
        :type unique_ip_addresses: str
        """

        self._unique_ip_addresses = unique_ip_addresses

    @property
    def user_id(self):
        """Gets the user_id of this ErrorReportUsersEntry.

        The user ID value.

        :return: The user_id of this ErrorReportUsersEntry.
        :rtype: str
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this ErrorReportUsersEntry.

        The user ID value.

        :param user_id: The user_id of this ErrorReportUsersEntry.
        :type user_id: str
        """

        self._user_id = user_id
