# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.attribute_delta import AttributeDelta
from openapi_server import util


class ChangeNotReimportedDelta(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, anchor: str=None, attributes: List[AttributeDelta]=None, dn_attributes: List[AttributeDelta]=None, operation_type: str=None):
        """ChangeNotReimportedDelta - a model defined in OpenAPI

        :param anchor: The anchor of this ChangeNotReimportedDelta.
        :param attributes: The attributes of this ChangeNotReimportedDelta.
        :param dn_attributes: The dn_attributes of this ChangeNotReimportedDelta.
        :param operation_type: The operation_type of this ChangeNotReimportedDelta.
        """
        self.openapi_types = {
            'anchor': str,
            'attributes': List[AttributeDelta],
            'dn_attributes': List[AttributeDelta],
            'operation_type': str
        }

        self.attribute_map = {
            'anchor': 'anchor',
            'attributes': 'attributes',
            'dn_attributes': 'dnAttributes',
            'operation_type': 'operationType'
        }

        self._anchor = anchor
        self._attributes = attributes
        self._dn_attributes = dn_attributes
        self._operation_type = operation_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ChangeNotReimportedDelta':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ChangeNotReimportedDelta of this ChangeNotReimportedDelta.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def anchor(self):
        """Gets the anchor of this ChangeNotReimportedDelta.

        The anchor.

        :return: The anchor of this ChangeNotReimportedDelta.
        :rtype: str
        """
        return self._anchor

    @anchor.setter
    def anchor(self, anchor):
        """Sets the anchor of this ChangeNotReimportedDelta.

        The anchor.

        :param anchor: The anchor of this ChangeNotReimportedDelta.
        :type anchor: str
        """

        self._anchor = anchor

    @property
    def attributes(self):
        """Gets the attributes of this ChangeNotReimportedDelta.

        The attributes.

        :return: The attributes of this ChangeNotReimportedDelta.
        :rtype: List[AttributeDelta]
        """
        return self._attributes

    @attributes.setter
    def attributes(self, attributes):
        """Sets the attributes of this ChangeNotReimportedDelta.

        The attributes.

        :param attributes: The attributes of this ChangeNotReimportedDelta.
        :type attributes: List[AttributeDelta]
        """

        self._attributes = attributes

    @property
    def dn_attributes(self):
        """Gets the dn_attributes of this ChangeNotReimportedDelta.

        The delta attributes for distinguished names.

        :return: The dn_attributes of this ChangeNotReimportedDelta.
        :rtype: List[AttributeDelta]
        """
        return self._dn_attributes

    @dn_attributes.setter
    def dn_attributes(self, dn_attributes):
        """Sets the dn_attributes of this ChangeNotReimportedDelta.

        The delta attributes for distinguished names.

        :param dn_attributes: The dn_attributes of this ChangeNotReimportedDelta.
        :type dn_attributes: List[AttributeDelta]
        """

        self._dn_attributes = dn_attributes

    @property
    def operation_type(self):
        """Gets the operation_type of this ChangeNotReimportedDelta.

        The operation type.

        :return: The operation_type of this ChangeNotReimportedDelta.
        :rtype: str
        """
        return self._operation_type

    @operation_type.setter
    def operation_type(self, operation_type):
        """Sets the operation_type of this ChangeNotReimportedDelta.

        The operation type.

        :param operation_type: The operation_type of this ChangeNotReimportedDelta.
        :type operation_type: str
        """
        allowed_values = ["Undefined", "None", "Add", "Replace", "Update", "Delete", "Obsolete", "DeleteAdd"]  # noqa: E501
        if operation_type not in allowed_values:
            raise ValueError(
                "Invalid value for `operation_type` ({0}), must be one of {1}"
                .format(operation_type, allowed_values)
            )

        self._operation_type = operation_type
