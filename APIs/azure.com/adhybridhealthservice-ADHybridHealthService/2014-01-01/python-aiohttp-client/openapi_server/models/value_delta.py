# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ValueDelta(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, operation_type: str=None, value: str=None):
        """ValueDelta - a model defined in OpenAPI

        :param operation_type: The operation_type of this ValueDelta.
        :param value: The value of this ValueDelta.
        """
        self.openapi_types = {
            'operation_type': str,
            'value': str
        }

        self.attribute_map = {
            'operation_type': 'operationType',
            'value': 'value'
        }

        self._operation_type = operation_type
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ValueDelta':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ValueDelta of this ValueDelta.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def operation_type(self):
        """Gets the operation_type of this ValueDelta.

        The operation type.

        :return: The operation_type of this ValueDelta.
        :rtype: str
        """
        return self._operation_type

    @operation_type.setter
    def operation_type(self, operation_type):
        """Sets the operation_type of this ValueDelta.

        The operation type.

        :param operation_type: The operation_type of this ValueDelta.
        :type operation_type: str
        """
        allowed_values = ["Undefined", "Add", "Update", "Delete"]  # noqa: E501
        if operation_type not in allowed_values:
            raise ValueError(
                "Invalid value for `operation_type` ({0}), must be one of {1}"
                .format(operation_type, allowed_values)
            )

        self._operation_type = operation_type

    @property
    def value(self):
        """Gets the value of this ValueDelta.

        The value of the delta.

        :return: The value of this ValueDelta.
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this ValueDelta.

        The value of the delta.

        :param value: The value of this ValueDelta.
        :type value: str
        """

        self._value = value
