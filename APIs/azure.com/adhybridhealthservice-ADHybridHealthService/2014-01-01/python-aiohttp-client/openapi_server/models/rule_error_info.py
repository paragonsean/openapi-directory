# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.attribute_mapping import AttributeMapping
from openapi_server import util


class RuleErrorInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, attribute_mapping: AttributeMapping=None, connector_id: str=None, connector_name: str=None, cs_object_id: str=None, dn: str=None):
        """RuleErrorInfo - a model defined in OpenAPI

        :param attribute_mapping: The attribute_mapping of this RuleErrorInfo.
        :param connector_id: The connector_id of this RuleErrorInfo.
        :param connector_name: The connector_name of this RuleErrorInfo.
        :param cs_object_id: The cs_object_id of this RuleErrorInfo.
        :param dn: The dn of this RuleErrorInfo.
        """
        self.openapi_types = {
            'attribute_mapping': AttributeMapping,
            'connector_id': str,
            'connector_name': str,
            'cs_object_id': str,
            'dn': str
        }

        self.attribute_map = {
            'attribute_mapping': 'attributeMapping',
            'connector_id': 'connectorId',
            'connector_name': 'connectorName',
            'cs_object_id': 'csObjectId',
            'dn': 'dn'
        }

        self._attribute_mapping = attribute_mapping
        self._connector_id = connector_id
        self._connector_name = connector_name
        self._cs_object_id = cs_object_id
        self._dn = dn

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RuleErrorInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RuleErrorInfo of this RuleErrorInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def attribute_mapping(self):
        """Gets the attribute_mapping of this RuleErrorInfo.


        :return: The attribute_mapping of this RuleErrorInfo.
        :rtype: AttributeMapping
        """
        return self._attribute_mapping

    @attribute_mapping.setter
    def attribute_mapping(self, attribute_mapping):
        """Sets the attribute_mapping of this RuleErrorInfo.


        :param attribute_mapping: The attribute_mapping of this RuleErrorInfo.
        :type attribute_mapping: AttributeMapping
        """

        self._attribute_mapping = attribute_mapping

    @property
    def connector_id(self):
        """Gets the connector_id of this RuleErrorInfo.

        The connector Id.

        :return: The connector_id of this RuleErrorInfo.
        :rtype: str
        """
        return self._connector_id

    @connector_id.setter
    def connector_id(self, connector_id):
        """Sets the connector_id of this RuleErrorInfo.

        The connector Id.

        :param connector_id: The connector_id of this RuleErrorInfo.
        :type connector_id: str
        """

        self._connector_id = connector_id

    @property
    def connector_name(self):
        """Gets the connector_name of this RuleErrorInfo.

        The connector name.

        :return: The connector_name of this RuleErrorInfo.
        :rtype: str
        """
        return self._connector_name

    @connector_name.setter
    def connector_name(self, connector_name):
        """Sets the connector_name of this RuleErrorInfo.

        The connector name.

        :param connector_name: The connector_name of this RuleErrorInfo.
        :type connector_name: str
        """

        self._connector_name = connector_name

    @property
    def cs_object_id(self):
        """Gets the cs_object_id of this RuleErrorInfo.

        The object Id.

        :return: The cs_object_id of this RuleErrorInfo.
        :rtype: str
        """
        return self._cs_object_id

    @cs_object_id.setter
    def cs_object_id(self, cs_object_id):
        """Sets the cs_object_id of this RuleErrorInfo.

        The object Id.

        :param cs_object_id: The cs_object_id of this RuleErrorInfo.
        :type cs_object_id: str
        """

        self._cs_object_id = cs_object_id

    @property
    def dn(self):
        """Gets the dn of this RuleErrorInfo.

        The distinguished name.

        :return: The dn of this RuleErrorInfo.
        :rtype: str
        """
        return self._dn

    @dn.setter
    def dn(self, dn):
        """Sets the dn of this RuleErrorInfo.

        The distinguished name.

        :param dn: The dn of this RuleErrorInfo.
        :type dn: str
        """

        self._dn = dn
