# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Tenant(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, aad_license: str=None, aad_premium: bool=None, agent_auto_update: bool=None, alert_suppression_time_in_mins: int=None, consented_to_microsoft_dev_ops: bool=None, country_letter_code: str=None, created_date: datetime=None, dev_ops_ttl: datetime=None, disabled: bool=None, disabled_reason: int=None, global_admins_email: List[str]=None, initial_domain: str=None, last_disabled: datetime=None, last_verified: datetime=None, onboarded: bool=None, onboarding_allowed: bool=None, pks_certificate: object=None, private_preview_tenant: bool=None, tenant_id: str=None, tenant_in_quarantine: bool=None, tenant_name: str=None):
        """Tenant - a model defined in OpenAPI

        :param aad_license: The aad_license of this Tenant.
        :param aad_premium: The aad_premium of this Tenant.
        :param agent_auto_update: The agent_auto_update of this Tenant.
        :param alert_suppression_time_in_mins: The alert_suppression_time_in_mins of this Tenant.
        :param consented_to_microsoft_dev_ops: The consented_to_microsoft_dev_ops of this Tenant.
        :param country_letter_code: The country_letter_code of this Tenant.
        :param created_date: The created_date of this Tenant.
        :param dev_ops_ttl: The dev_ops_ttl of this Tenant.
        :param disabled: The disabled of this Tenant.
        :param disabled_reason: The disabled_reason of this Tenant.
        :param global_admins_email: The global_admins_email of this Tenant.
        :param initial_domain: The initial_domain of this Tenant.
        :param last_disabled: The last_disabled of this Tenant.
        :param last_verified: The last_verified of this Tenant.
        :param onboarded: The onboarded of this Tenant.
        :param onboarding_allowed: The onboarding_allowed of this Tenant.
        :param pks_certificate: The pks_certificate of this Tenant.
        :param private_preview_tenant: The private_preview_tenant of this Tenant.
        :param tenant_id: The tenant_id of this Tenant.
        :param tenant_in_quarantine: The tenant_in_quarantine of this Tenant.
        :param tenant_name: The tenant_name of this Tenant.
        """
        self.openapi_types = {
            'aad_license': str,
            'aad_premium': bool,
            'agent_auto_update': bool,
            'alert_suppression_time_in_mins': int,
            'consented_to_microsoft_dev_ops': bool,
            'country_letter_code': str,
            'created_date': datetime,
            'dev_ops_ttl': datetime,
            'disabled': bool,
            'disabled_reason': int,
            'global_admins_email': List[str],
            'initial_domain': str,
            'last_disabled': datetime,
            'last_verified': datetime,
            'onboarded': bool,
            'onboarding_allowed': bool,
            'pks_certificate': object,
            'private_preview_tenant': bool,
            'tenant_id': str,
            'tenant_in_quarantine': bool,
            'tenant_name': str
        }

        self.attribute_map = {
            'aad_license': 'aadLicense',
            'aad_premium': 'aadPremium',
            'agent_auto_update': 'agentAutoUpdate',
            'alert_suppression_time_in_mins': 'alertSuppressionTimeInMins',
            'consented_to_microsoft_dev_ops': 'consentedToMicrosoftDevOps',
            'country_letter_code': 'countryLetterCode',
            'created_date': 'createdDate',
            'dev_ops_ttl': 'devOpsTtl',
            'disabled': 'disabled',
            'disabled_reason': 'disabledReason',
            'global_admins_email': 'globalAdminsEmail',
            'initial_domain': 'initialDomain',
            'last_disabled': 'lastDisabled',
            'last_verified': 'lastVerified',
            'onboarded': 'onboarded',
            'onboarding_allowed': 'onboardingAllowed',
            'pks_certificate': 'pksCertificate',
            'private_preview_tenant': 'privatePreviewTenant',
            'tenant_id': 'tenantId',
            'tenant_in_quarantine': 'tenantInQuarantine',
            'tenant_name': 'tenantName'
        }

        self._aad_license = aad_license
        self._aad_premium = aad_premium
        self._agent_auto_update = agent_auto_update
        self._alert_suppression_time_in_mins = alert_suppression_time_in_mins
        self._consented_to_microsoft_dev_ops = consented_to_microsoft_dev_ops
        self._country_letter_code = country_letter_code
        self._created_date = created_date
        self._dev_ops_ttl = dev_ops_ttl
        self._disabled = disabled
        self._disabled_reason = disabled_reason
        self._global_admins_email = global_admins_email
        self._initial_domain = initial_domain
        self._last_disabled = last_disabled
        self._last_verified = last_verified
        self._onboarded = onboarded
        self._onboarding_allowed = onboarding_allowed
        self._pks_certificate = pks_certificate
        self._private_preview_tenant = private_preview_tenant
        self._tenant_id = tenant_id
        self._tenant_in_quarantine = tenant_in_quarantine
        self._tenant_name = tenant_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Tenant':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Tenant of this Tenant.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def aad_license(self):
        """Gets the aad_license of this Tenant.

        The Azure Active Directory license of the tenant.

        :return: The aad_license of this Tenant.
        :rtype: str
        """
        return self._aad_license

    @aad_license.setter
    def aad_license(self, aad_license):
        """Sets the aad_license of this Tenant.

        The Azure Active Directory license of the tenant.

        :param aad_license: The aad_license of this Tenant.
        :type aad_license: str
        """

        self._aad_license = aad_license

    @property
    def aad_premium(self):
        """Gets the aad_premium of this Tenant.

        Indicate if the tenant has Azure Active Directory Premium license or not.

        :return: The aad_premium of this Tenant.
        :rtype: bool
        """
        return self._aad_premium

    @aad_premium.setter
    def aad_premium(self, aad_premium):
        """Sets the aad_premium of this Tenant.

        Indicate if the tenant has Azure Active Directory Premium license or not.

        :param aad_premium: The aad_premium of this Tenant.
        :type aad_premium: bool
        """

        self._aad_premium = aad_premium

    @property
    def agent_auto_update(self):
        """Gets the agent_auto_update of this Tenant.

        Indicates if the tenant is configured to automatically receive updates for Azure Active Directory Connect Health client side features.

        :return: The agent_auto_update of this Tenant.
        :rtype: bool
        """
        return self._agent_auto_update

    @agent_auto_update.setter
    def agent_auto_update(self, agent_auto_update):
        """Sets the agent_auto_update of this Tenant.

        Indicates if the tenant is configured to automatically receive updates for Azure Active Directory Connect Health client side features.

        :param agent_auto_update: The agent_auto_update of this Tenant.
        :type agent_auto_update: bool
        """

        self._agent_auto_update = agent_auto_update

    @property
    def alert_suppression_time_in_mins(self):
        """Gets the alert_suppression_time_in_mins of this Tenant.

        The time in minutes after which an alert will be auto-suppressed.

        :return: The alert_suppression_time_in_mins of this Tenant.
        :rtype: int
        """
        return self._alert_suppression_time_in_mins

    @alert_suppression_time_in_mins.setter
    def alert_suppression_time_in_mins(self, alert_suppression_time_in_mins):
        """Sets the alert_suppression_time_in_mins of this Tenant.

        The time in minutes after which an alert will be auto-suppressed.

        :param alert_suppression_time_in_mins: The alert_suppression_time_in_mins of this Tenant.
        :type alert_suppression_time_in_mins: int
        """

        self._alert_suppression_time_in_mins = alert_suppression_time_in_mins

    @property
    def consented_to_microsoft_dev_ops(self):
        """Gets the consented_to_microsoft_dev_ops of this Tenant.

        Indicates if the tenant data can be seen by Microsoft through Azure portal.

        :return: The consented_to_microsoft_dev_ops of this Tenant.
        :rtype: bool
        """
        return self._consented_to_microsoft_dev_ops

    @consented_to_microsoft_dev_ops.setter
    def consented_to_microsoft_dev_ops(self, consented_to_microsoft_dev_ops):
        """Sets the consented_to_microsoft_dev_ops of this Tenant.

        Indicates if the tenant data can be seen by Microsoft through Azure portal.

        :param consented_to_microsoft_dev_ops: The consented_to_microsoft_dev_ops of this Tenant.
        :type consented_to_microsoft_dev_ops: bool
        """

        self._consented_to_microsoft_dev_ops = consented_to_microsoft_dev_ops

    @property
    def country_letter_code(self):
        """Gets the country_letter_code of this Tenant.

        The country letter code of the tenant.

        :return: The country_letter_code of this Tenant.
        :rtype: str
        """
        return self._country_letter_code

    @country_letter_code.setter
    def country_letter_code(self, country_letter_code):
        """Sets the country_letter_code of this Tenant.

        The country letter code of the tenant.

        :param country_letter_code: The country_letter_code of this Tenant.
        :type country_letter_code: str
        """

        self._country_letter_code = country_letter_code

    @property
    def created_date(self):
        """Gets the created_date of this Tenant.

        The date, in UTC, when the tenant was onboarded to Azure Active Directory Connect Health.

        :return: The created_date of this Tenant.
        :rtype: datetime
        """
        return self._created_date

    @created_date.setter
    def created_date(self, created_date):
        """Sets the created_date of this Tenant.

        The date, in UTC, when the tenant was onboarded to Azure Active Directory Connect Health.

        :param created_date: The created_date of this Tenant.
        :type created_date: datetime
        """

        self._created_date = created_date

    @property
    def dev_ops_ttl(self):
        """Gets the dev_ops_ttl of this Tenant.

        The date and time, in UTC, till when the tenant data can be seen by Microsoft through Azure portal.

        :return: The dev_ops_ttl of this Tenant.
        :rtype: datetime
        """
        return self._dev_ops_ttl

    @dev_ops_ttl.setter
    def dev_ops_ttl(self, dev_ops_ttl):
        """Sets the dev_ops_ttl of this Tenant.

        The date and time, in UTC, till when the tenant data can be seen by Microsoft through Azure portal.

        :param dev_ops_ttl: The dev_ops_ttl of this Tenant.
        :type dev_ops_ttl: datetime
        """

        self._dev_ops_ttl = dev_ops_ttl

    @property
    def disabled(self):
        """Gets the disabled of this Tenant.

        Indicates if the tenant is disabled in Azure Active Directory Connect Health.

        :return: The disabled of this Tenant.
        :rtype: bool
        """
        return self._disabled

    @disabled.setter
    def disabled(self, disabled):
        """Sets the disabled of this Tenant.

        Indicates if the tenant is disabled in Azure Active Directory Connect Health.

        :param disabled: The disabled of this Tenant.
        :type disabled: bool
        """

        self._disabled = disabled

    @property
    def disabled_reason(self):
        """Gets the disabled_reason of this Tenant.

        The reason due to which the tenant was disabled in Azure Active Directory Connect Health.

        :return: The disabled_reason of this Tenant.
        :rtype: int
        """
        return self._disabled_reason

    @disabled_reason.setter
    def disabled_reason(self, disabled_reason):
        """Sets the disabled_reason of this Tenant.

        The reason due to which the tenant was disabled in Azure Active Directory Connect Health.

        :param disabled_reason: The disabled_reason of this Tenant.
        :type disabled_reason: int
        """

        self._disabled_reason = disabled_reason

    @property
    def global_admins_email(self):
        """Gets the global_admins_email of this Tenant.

        The list of global administrators for the tenant.

        :return: The global_admins_email of this Tenant.
        :rtype: List[str]
        """
        return self._global_admins_email

    @global_admins_email.setter
    def global_admins_email(self, global_admins_email):
        """Sets the global_admins_email of this Tenant.

        The list of global administrators for the tenant.

        :param global_admins_email: The global_admins_email of this Tenant.
        :type global_admins_email: List[str]
        """

        self._global_admins_email = global_admins_email

    @property
    def initial_domain(self):
        """Gets the initial_domain of this Tenant.

        The initial domain of the tenant.

        :return: The initial_domain of this Tenant.
        :rtype: str
        """
        return self._initial_domain

    @initial_domain.setter
    def initial_domain(self, initial_domain):
        """Sets the initial_domain of this Tenant.

        The initial domain of the tenant.

        :param initial_domain: The initial_domain of this Tenant.
        :type initial_domain: str
        """

        self._initial_domain = initial_domain

    @property
    def last_disabled(self):
        """Gets the last_disabled of this Tenant.

        The date and time, in UTC, when the tenant was last disabled in Azure Active Directory Connect Health.

        :return: The last_disabled of this Tenant.
        :rtype: datetime
        """
        return self._last_disabled

    @last_disabled.setter
    def last_disabled(self, last_disabled):
        """Sets the last_disabled of this Tenant.

        The date and time, in UTC, when the tenant was last disabled in Azure Active Directory Connect Health.

        :param last_disabled: The last_disabled of this Tenant.
        :type last_disabled: datetime
        """

        self._last_disabled = last_disabled

    @property
    def last_verified(self):
        """Gets the last_verified of this Tenant.

        The date and time, in UTC, when the tenant onboarding status in Azure Active Directory Connect Health was last verified.

        :return: The last_verified of this Tenant.
        :rtype: datetime
        """
        return self._last_verified

    @last_verified.setter
    def last_verified(self, last_verified):
        """Sets the last_verified of this Tenant.

        The date and time, in UTC, when the tenant onboarding status in Azure Active Directory Connect Health was last verified.

        :param last_verified: The last_verified of this Tenant.
        :type last_verified: datetime
        """

        self._last_verified = last_verified

    @property
    def onboarded(self):
        """Gets the onboarded of this Tenant.

        Indicates if the tenant is already onboarded to Azure Active Directory Connect Health.

        :return: The onboarded of this Tenant.
        :rtype: bool
        """
        return self._onboarded

    @onboarded.setter
    def onboarded(self, onboarded):
        """Sets the onboarded of this Tenant.

        Indicates if the tenant is already onboarded to Azure Active Directory Connect Health.

        :param onboarded: The onboarded of this Tenant.
        :type onboarded: bool
        """

        self._onboarded = onboarded

    @property
    def onboarding_allowed(self):
        """Gets the onboarding_allowed of this Tenant.

        Indicates if the tenant is allowed to  onboard to Azure Active Directory Connect Health.

        :return: The onboarding_allowed of this Tenant.
        :rtype: bool
        """
        return self._onboarding_allowed

    @onboarding_allowed.setter
    def onboarding_allowed(self, onboarding_allowed):
        """Sets the onboarding_allowed of this Tenant.

        Indicates if the tenant is allowed to  onboard to Azure Active Directory Connect Health.

        :param onboarding_allowed: The onboarding_allowed of this Tenant.
        :type onboarding_allowed: bool
        """

        self._onboarding_allowed = onboarding_allowed

    @property
    def pks_certificate(self):
        """Gets the pks_certificate of this Tenant.

        The certificate associated with the tenant to onboard data to Azure Active Directory Connect Health.

        :return: The pks_certificate of this Tenant.
        :rtype: object
        """
        return self._pks_certificate

    @pks_certificate.setter
    def pks_certificate(self, pks_certificate):
        """Sets the pks_certificate of this Tenant.

        The certificate associated with the tenant to onboard data to Azure Active Directory Connect Health.

        :param pks_certificate: The pks_certificate of this Tenant.
        :type pks_certificate: object
        """

        self._pks_certificate = pks_certificate

    @property
    def private_preview_tenant(self):
        """Gets the private_preview_tenant of this Tenant.

        Indicates if the tenant has signed up for private preview of Azure Active Directory Connect Health features.

        :return: The private_preview_tenant of this Tenant.
        :rtype: bool
        """
        return self._private_preview_tenant

    @private_preview_tenant.setter
    def private_preview_tenant(self, private_preview_tenant):
        """Sets the private_preview_tenant of this Tenant.

        Indicates if the tenant has signed up for private preview of Azure Active Directory Connect Health features.

        :param private_preview_tenant: The private_preview_tenant of this Tenant.
        :type private_preview_tenant: bool
        """

        self._private_preview_tenant = private_preview_tenant

    @property
    def tenant_id(self):
        """Gets the tenant_id of this Tenant.

        The Id of the tenant.

        :return: The tenant_id of this Tenant.
        :rtype: str
        """
        return self._tenant_id

    @tenant_id.setter
    def tenant_id(self, tenant_id):
        """Sets the tenant_id of this Tenant.

        The Id of the tenant.

        :param tenant_id: The tenant_id of this Tenant.
        :type tenant_id: str
        """

        self._tenant_id = tenant_id

    @property
    def tenant_in_quarantine(self):
        """Gets the tenant_in_quarantine of this Tenant.

        Indicates if data collection for this tenant is disabled or not.

        :return: The tenant_in_quarantine of this Tenant.
        :rtype: bool
        """
        return self._tenant_in_quarantine

    @tenant_in_quarantine.setter
    def tenant_in_quarantine(self, tenant_in_quarantine):
        """Sets the tenant_in_quarantine of this Tenant.

        Indicates if data collection for this tenant is disabled or not.

        :param tenant_in_quarantine: The tenant_in_quarantine of this Tenant.
        :type tenant_in_quarantine: bool
        """

        self._tenant_in_quarantine = tenant_in_quarantine

    @property
    def tenant_name(self):
        """Gets the tenant_name of this Tenant.

        The name of the tenant.

        :return: The tenant_name of this Tenant.
        :rtype: str
        """
        return self._tenant_name

    @tenant_name.setter
    def tenant_name(self, tenant_name):
        """Sets the tenant_name of this Tenant.

        The name of the tenant.

        :param tenant_name: The tenant_name of this Tenant.
        :type tenant_name: str
        """

        self._tenant_name = tenant_name
