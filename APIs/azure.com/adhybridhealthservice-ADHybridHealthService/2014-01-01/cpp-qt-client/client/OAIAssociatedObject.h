/**
 * ADHybridHealthService
 * REST APIs for Azure Active Directory Connect Health
 *
 * The version of the OpenAPI document: 2014-01-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAssociatedObject.h
 *
 * Object that hold sync object details.
 */

#ifndef OAIAssociatedObject_H
#define OAIAssociatedObject_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAssociatedObject : public OAIObject {
public:
    OAIAssociatedObject();
    OAIAssociatedObject(QString json);
    ~OAIAssociatedObject() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    QString getDistinguishedName() const;
    void setDistinguishedName(const QString &distinguished_name);
    bool is_distinguished_name_Set() const;
    bool is_distinguished_name_Valid() const;

    QDateTime getLastDirSyncTime() const;
    void setLastDirSyncTime(const QDateTime &last_dir_sync_time);
    bool is_last_dir_sync_time_Set() const;
    bool is_last_dir_sync_time_Valid() const;

    QString getMail() const;
    void setMail(const QString &mail);
    bool is_mail_Set() const;
    bool is_mail_Valid() const;

    QString getObjectGuid() const;
    void setObjectGuid(const QString &object_guid);
    bool is_object_guid_Set() const;
    bool is_object_guid_Valid() const;

    QString getObjectType() const;
    void setObjectType(const QString &object_type);
    bool is_object_type_Set() const;
    bool is_object_type_Valid() const;

    QString getOnpremisesUserPrincipalName() const;
    void setOnpremisesUserPrincipalName(const QString &onpremises_user_principal_name);
    bool is_onpremises_user_principal_name_Set() const;
    bool is_onpremises_user_principal_name_Valid() const;

    QString getProxyAddresses() const;
    void setProxyAddresses(const QString &proxy_addresses);
    bool is_proxy_addresses_Set() const;
    bool is_proxy_addresses_Valid() const;

    QString getSourceAnchor() const;
    void setSourceAnchor(const QString &source_anchor);
    bool is_source_anchor_Set() const;
    bool is_source_anchor_Valid() const;

    QString getSourceOfAuthority() const;
    void setSourceOfAuthority(const QString &source_of_authority);
    bool is_source_of_authority_Set() const;
    bool is_source_of_authority_Valid() const;

    QDateTime getTimeOccurred() const;
    void setTimeOccurred(const QDateTime &time_occurred);
    bool is_time_occurred_Set() const;
    bool is_time_occurred_Valid() const;

    QString getUserPrincipalName() const;
    void setUserPrincipalName(const QString &user_principal_name);
    bool is_user_principal_name_Set() const;
    bool is_user_principal_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    QString m_distinguished_name;
    bool m_distinguished_name_isSet;
    bool m_distinguished_name_isValid;

    QDateTime m_last_dir_sync_time;
    bool m_last_dir_sync_time_isSet;
    bool m_last_dir_sync_time_isValid;

    QString m_mail;
    bool m_mail_isSet;
    bool m_mail_isValid;

    QString m_object_guid;
    bool m_object_guid_isSet;
    bool m_object_guid_isValid;

    QString m_object_type;
    bool m_object_type_isSet;
    bool m_object_type_isValid;

    QString m_onpremises_user_principal_name;
    bool m_onpremises_user_principal_name_isSet;
    bool m_onpremises_user_principal_name_isValid;

    QString m_proxy_addresses;
    bool m_proxy_addresses_isSet;
    bool m_proxy_addresses_isValid;

    QString m_source_anchor;
    bool m_source_anchor_isSet;
    bool m_source_anchor_isValid;

    QString m_source_of_authority;
    bool m_source_of_authority_isSet;
    bool m_source_of_authority_isValid;

    QDateTime m_time_occurred;
    bool m_time_occurred_isSet;
    bool m_time_occurred_isValid;

    QString m_user_principal_name;
    bool m_user_principal_name_isSet;
    bool m_user_principal_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAssociatedObject)

#endif // OAIAssociatedObject_H
