/**
 * ADHybridHealthService
 * REST APIs for Azure Active Directory Connect Health
 *
 * The version of the OpenAPI document: 2014-01-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRiskyIPBlobUri.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRiskyIPBlobUri::OAIRiskyIPBlobUri(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRiskyIPBlobUri::OAIRiskyIPBlobUri() {
    this->initializeModel();
}

OAIRiskyIPBlobUri::~OAIRiskyIPBlobUri() {}

void OAIRiskyIPBlobUri::initializeModel() {

    m_blob_create_date_time_isSet = false;
    m_blob_create_date_time_isValid = false;

    m_job_completion_time_isSet = false;
    m_job_completion_time_isValid = false;

    m_result_sas_uri_isSet = false;
    m_result_sas_uri_isValid = false;

    m_service_id_isSet = false;
    m_service_id_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_tenant_id_isSet = false;
    m_tenant_id_isValid = false;
}

void OAIRiskyIPBlobUri::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRiskyIPBlobUri::fromJsonObject(QJsonObject json) {

    m_blob_create_date_time_isValid = ::OpenAPI::fromJsonValue(m_blob_create_date_time, json[QString("blobCreateDateTime")]);
    m_blob_create_date_time_isSet = !json[QString("blobCreateDateTime")].isNull() && m_blob_create_date_time_isValid;

    m_job_completion_time_isValid = ::OpenAPI::fromJsonValue(m_job_completion_time, json[QString("jobCompletionTime")]);
    m_job_completion_time_isSet = !json[QString("jobCompletionTime")].isNull() && m_job_completion_time_isValid;

    m_result_sas_uri_isValid = ::OpenAPI::fromJsonValue(m_result_sas_uri, json[QString("resultSasUri")]);
    m_result_sas_uri_isSet = !json[QString("resultSasUri")].isNull() && m_result_sas_uri_isValid;

    m_service_id_isValid = ::OpenAPI::fromJsonValue(m_service_id, json[QString("serviceId")]);
    m_service_id_isSet = !json[QString("serviceId")].isNull() && m_service_id_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_tenant_id_isValid = ::OpenAPI::fromJsonValue(m_tenant_id, json[QString("tenantId")]);
    m_tenant_id_isSet = !json[QString("tenantId")].isNull() && m_tenant_id_isValid;
}

QString OAIRiskyIPBlobUri::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRiskyIPBlobUri::asJsonObject() const {
    QJsonObject obj;
    if (m_blob_create_date_time_isSet) {
        obj.insert(QString("blobCreateDateTime"), ::OpenAPI::toJsonValue(m_blob_create_date_time));
    }
    if (m_job_completion_time_isSet) {
        obj.insert(QString("jobCompletionTime"), ::OpenAPI::toJsonValue(m_job_completion_time));
    }
    if (m_result_sas_uri_isSet) {
        obj.insert(QString("resultSasUri"), ::OpenAPI::toJsonValue(m_result_sas_uri));
    }
    if (m_service_id_isSet) {
        obj.insert(QString("serviceId"), ::OpenAPI::toJsonValue(m_service_id));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_tenant_id_isSet) {
        obj.insert(QString("tenantId"), ::OpenAPI::toJsonValue(m_tenant_id));
    }
    return obj;
}

QDateTime OAIRiskyIPBlobUri::getBlobCreateDateTime() const {
    return m_blob_create_date_time;
}
void OAIRiskyIPBlobUri::setBlobCreateDateTime(const QDateTime &blob_create_date_time) {
    m_blob_create_date_time = blob_create_date_time;
    m_blob_create_date_time_isSet = true;
}

bool OAIRiskyIPBlobUri::is_blob_create_date_time_Set() const{
    return m_blob_create_date_time_isSet;
}

bool OAIRiskyIPBlobUri::is_blob_create_date_time_Valid() const{
    return m_blob_create_date_time_isValid;
}

QDateTime OAIRiskyIPBlobUri::getJobCompletionTime() const {
    return m_job_completion_time;
}
void OAIRiskyIPBlobUri::setJobCompletionTime(const QDateTime &job_completion_time) {
    m_job_completion_time = job_completion_time;
    m_job_completion_time_isSet = true;
}

bool OAIRiskyIPBlobUri::is_job_completion_time_Set() const{
    return m_job_completion_time_isSet;
}

bool OAIRiskyIPBlobUri::is_job_completion_time_Valid() const{
    return m_job_completion_time_isValid;
}

QString OAIRiskyIPBlobUri::getResultSasUri() const {
    return m_result_sas_uri;
}
void OAIRiskyIPBlobUri::setResultSasUri(const QString &result_sas_uri) {
    m_result_sas_uri = result_sas_uri;
    m_result_sas_uri_isSet = true;
}

bool OAIRiskyIPBlobUri::is_result_sas_uri_Set() const{
    return m_result_sas_uri_isSet;
}

bool OAIRiskyIPBlobUri::is_result_sas_uri_Valid() const{
    return m_result_sas_uri_isValid;
}

QString OAIRiskyIPBlobUri::getServiceId() const {
    return m_service_id;
}
void OAIRiskyIPBlobUri::setServiceId(const QString &service_id) {
    m_service_id = service_id;
    m_service_id_isSet = true;
}

bool OAIRiskyIPBlobUri::is_service_id_Set() const{
    return m_service_id_isSet;
}

bool OAIRiskyIPBlobUri::is_service_id_Valid() const{
    return m_service_id_isValid;
}

QString OAIRiskyIPBlobUri::getStatus() const {
    return m_status;
}
void OAIRiskyIPBlobUri::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIRiskyIPBlobUri::is_status_Set() const{
    return m_status_isSet;
}

bool OAIRiskyIPBlobUri::is_status_Valid() const{
    return m_status_isValid;
}

QString OAIRiskyIPBlobUri::getTenantId() const {
    return m_tenant_id;
}
void OAIRiskyIPBlobUri::setTenantId(const QString &tenant_id) {
    m_tenant_id = tenant_id;
    m_tenant_id_isSet = true;
}

bool OAIRiskyIPBlobUri::is_tenant_id_Set() const{
    return m_tenant_id_isSet;
}

bool OAIRiskyIPBlobUri::is_tenant_id_Valid() const{
    return m_tenant_id_isValid;
}

bool OAIRiskyIPBlobUri::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_blob_create_date_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_job_completion_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_result_sas_uri_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_service_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tenant_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRiskyIPBlobUri::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
