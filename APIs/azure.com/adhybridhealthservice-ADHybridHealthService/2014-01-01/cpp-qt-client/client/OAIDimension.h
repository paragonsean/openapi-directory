/**
 * ADHybridHealthService
 * REST APIs for Azure Active Directory Connect Health
 *
 * The version of the OpenAPI document: 2014-01-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDimension.h
 *
 * The connector object error.
 */

#ifndef OAIDimension_H
#define OAIDimension_H

#include <QJsonObject>

#include "OAIObject.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDimension : public OAIObject {
public:
    OAIDimension();
    OAIDimension(QString json);
    ~OAIDimension() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getActiveAlerts() const;
    void setActiveAlerts(const qint32 &active_alerts);
    bool is_active_alerts_Set() const;
    bool is_active_alerts_Valid() const;

    QString getAdditionalInformation() const;
    void setAdditionalInformation(const QString &additional_information);
    bool is_additional_information_Set() const;
    bool is_additional_information_Valid() const;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    QString getHealth() const;
    void setHealth(const QString &health);
    bool is_health_Set() const;
    bool is_health_Valid() const;

    QDateTime getLastUpdated() const;
    void setLastUpdated(const QDateTime &last_updated);
    bool is_last_updated_Set() const;
    bool is_last_updated_Valid() const;

    qint32 getResolvedAlerts() const;
    void setResolvedAlerts(const qint32 &resolved_alerts);
    bool is_resolved_alerts_Set() const;
    bool is_resolved_alerts_Valid() const;

    QString getSignature() const;
    void setSignature(const QString &signature);
    bool is_signature_Set() const;
    bool is_signature_Valid() const;

    OAIObject getSimpleProperties() const;
    void setSimpleProperties(const OAIObject &simple_properties);
    bool is_simple_properties_Set() const;
    bool is_simple_properties_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_active_alerts;
    bool m_active_alerts_isSet;
    bool m_active_alerts_isValid;

    QString m_additional_information;
    bool m_additional_information_isSet;
    bool m_additional_information_isValid;

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    QString m_health;
    bool m_health_isSet;
    bool m_health_isValid;

    QDateTime m_last_updated;
    bool m_last_updated_isSet;
    bool m_last_updated_isValid;

    qint32 m_resolved_alerts;
    bool m_resolved_alerts_isSet;
    bool m_resolved_alerts_isValid;

    QString m_signature;
    bool m_signature_isSet;
    bool m_signature_isValid;

    OAIObject m_simple_properties;
    bool m_simple_properties_isSet;
    bool m_simple_properties_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDimension)

#endif // OAIDimension_H
