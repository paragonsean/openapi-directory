/**
 * ADHybridHealthService
 * REST APIs for Azure Active Directory Connect Health
 *
 * The version of the OpenAPI document: 2014-01-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIServiceConfiguration.h
 *
 * The service configuration
 */

#ifndef OAIServiceConfiguration_H
#define OAIServiceConfiguration_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIServiceConfiguration : public OAIObject {
public:
    OAIServiceConfiguration();
    OAIServiceConfiguration(QString json);
    ~OAIServiceConfiguration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getServiceAccount() const;
    void setServiceAccount(const QString &service_account);
    bool is_service_account_Set() const;
    bool is_service_account_Valid() const;

    qint32 getServiceType() const;
    void setServiceType(const qint32 &service_type);
    bool is_service_type_Set() const;
    bool is_service_type_Valid() const;

    QString getSqlDatabaseName() const;
    void setSqlDatabaseName(const QString &sql_database_name);
    bool is_sql_database_name_Set() const;
    bool is_sql_database_name_Valid() const;

    qint32 getSqlDatabaseSize() const;
    void setSqlDatabaseSize(const qint32 &sql_database_size);
    bool is_sql_database_size_Set() const;
    bool is_sql_database_size_Valid() const;

    QString getSqlEdition() const;
    void setSqlEdition(const QString &sql_edition);
    bool is_sql_edition_Set() const;
    bool is_sql_edition_Valid() const;

    QString getSqlInstance() const;
    void setSqlInstance(const QString &sql_instance);
    bool is_sql_instance_Set() const;
    bool is_sql_instance_Valid() const;

    QString getSqlServer() const;
    void setSqlServer(const QString &sql_server);
    bool is_sql_server_Set() const;
    bool is_sql_server_Valid() const;

    QString getSqlVersion() const;
    void setSqlVersion(const QString &sql_version);
    bool is_sql_version_Set() const;
    bool is_sql_version_Valid() const;

    QString getVersion() const;
    void setVersion(const QString &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_service_account;
    bool m_service_account_isSet;
    bool m_service_account_isValid;

    qint32 m_service_type;
    bool m_service_type_isSet;
    bool m_service_type_isValid;

    QString m_sql_database_name;
    bool m_sql_database_name_isSet;
    bool m_sql_database_name_isValid;

    qint32 m_sql_database_size;
    bool m_sql_database_size_isSet;
    bool m_sql_database_size_isValid;

    QString m_sql_edition;
    bool m_sql_edition_isSet;
    bool m_sql_edition_isValid;

    QString m_sql_instance;
    bool m_sql_instance_isSet;
    bool m_sql_instance_isValid;

    QString m_sql_server;
    bool m_sql_server_isSet;
    bool m_sql_server_isValid;

    QString m_sql_version;
    bool m_sql_version_isSet;
    bool m_sql_version_isValid;

    QString m_version;
    bool m_version_isSet;
    bool m_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIServiceConfiguration)

#endif // OAIServiceConfiguration_H
