/**
 * ADHybridHealthService
 * REST APIs for Azure Active Directory Connect Health
 *
 * The version of the OpenAPI document: 2014-01-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIReplicationSummary.h
 *
 * The replication summary for a domain controller.
 */

#ifndef OAIReplicationSummary_H
#define OAIReplicationSummary_H

#include <QJsonObject>

#include "OAIInboundReplicationNeighbor.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIInboundReplicationNeighbor;

class OAIReplicationSummary : public OAIObject {
public:
    OAIReplicationSummary();
    OAIReplicationSummary(QString json);
    ~OAIReplicationSummary() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDomain() const;
    void setDomain(const QString &domain);
    bool is_domain_Set() const;
    bool is_domain_Valid() const;

    QList<OAIInboundReplicationNeighbor> getInboundNeighborCollection() const;
    void setInboundNeighborCollection(const QList<OAIInboundReplicationNeighbor> &inbound_neighbor_collection);
    bool is_inbound_neighbor_collection_Set() const;
    bool is_inbound_neighbor_collection_Valid() const;

    QDateTime getLastAttemptedSync() const;
    void setLastAttemptedSync(const QDateTime &last_attempted_sync);
    bool is_last_attempted_sync_Set() const;
    bool is_last_attempted_sync_Valid() const;

    QDateTime getLastSuccessfulSync() const;
    void setLastSuccessfulSync(const QDateTime &last_successful_sync);
    bool is_last_successful_sync_Set() const;
    bool is_last_successful_sync_Valid() const;

    QString getSite() const;
    void setSite(const QString &site);
    bool is_site_Set() const;
    bool is_site_Valid() const;

    qint32 getStatus() const;
    void setStatus(const qint32 &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getTargetServer() const;
    void setTargetServer(const QString &target_server);
    bool is_target_server_Set() const;
    bool is_target_server_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_domain;
    bool m_domain_isSet;
    bool m_domain_isValid;

    QList<OAIInboundReplicationNeighbor> m_inbound_neighbor_collection;
    bool m_inbound_neighbor_collection_isSet;
    bool m_inbound_neighbor_collection_isValid;

    QDateTime m_last_attempted_sync;
    bool m_last_attempted_sync_isSet;
    bool m_last_attempted_sync_isValid;

    QDateTime m_last_successful_sync;
    bool m_last_successful_sync_isSet;
    bool m_last_successful_sync_isValid;

    QString m_site;
    bool m_site_isSet;
    bool m_site_isValid;

    qint32 m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_target_server;
    bool m_target_server_isSet;
    bool m_target_server_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIReplicationSummary)

#endif // OAIReplicationSummary_H
