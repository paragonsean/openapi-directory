/**
 * ADHybridHealthService
 * REST APIs for Azure Active Directory Connect Health
 *
 * The version of the OpenAPI document: 2014-01-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAdditionalInformation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAdditionalInformation::OAIAdditionalInformation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAdditionalInformation::OAIAdditionalInformation() {
    this->initializeModel();
}

OAIAdditionalInformation::~OAIAdditionalInformation() {}

void OAIAdditionalInformation::initializeModel() {

    m_has_properties_isSet = false;
    m_has_properties_isValid = false;

    m_properties_isSet = false;
    m_properties_isValid = false;

    m_title_name_isSet = false;
    m_title_name_isValid = false;

    m_title_value_isSet = false;
    m_title_value_isValid = false;
}

void OAIAdditionalInformation::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAdditionalInformation::fromJsonObject(QJsonObject json) {

    m_has_properties_isValid = ::OpenAPI::fromJsonValue(m_has_properties, json[QString("hasProperties")]);
    m_has_properties_isSet = !json[QString("hasProperties")].isNull() && m_has_properties_isValid;

    m_properties_isValid = ::OpenAPI::fromJsonValue(m_properties, json[QString("properties")]);
    m_properties_isSet = !json[QString("properties")].isNull() && m_properties_isValid;

    m_title_name_isValid = ::OpenAPI::fromJsonValue(m_title_name, json[QString("titleName")]);
    m_title_name_isSet = !json[QString("titleName")].isNull() && m_title_name_isValid;

    m_title_value_isValid = ::OpenAPI::fromJsonValue(m_title_value, json[QString("titleValue")]);
    m_title_value_isSet = !json[QString("titleValue")].isNull() && m_title_value_isValid;
}

QString OAIAdditionalInformation::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAdditionalInformation::asJsonObject() const {
    QJsonObject obj;
    if (m_has_properties_isSet) {
        obj.insert(QString("hasProperties"), ::OpenAPI::toJsonValue(m_has_properties));
    }
    if (m_properties_isSet) {
        obj.insert(QString("properties"), ::OpenAPI::toJsonValue(m_properties));
    }
    if (m_title_name_isSet) {
        obj.insert(QString("titleName"), ::OpenAPI::toJsonValue(m_title_name));
    }
    if (m_title_value_isSet) {
        obj.insert(QString("titleValue"), ::OpenAPI::toJsonValue(m_title_value));
    }
    return obj;
}

bool OAIAdditionalInformation::isHasProperties() const {
    return m_has_properties;
}
void OAIAdditionalInformation::setHasProperties(const bool &has_properties) {
    m_has_properties = has_properties;
    m_has_properties_isSet = true;
}

bool OAIAdditionalInformation::is_has_properties_Set() const{
    return m_has_properties_isSet;
}

bool OAIAdditionalInformation::is_has_properties_Valid() const{
    return m_has_properties_isValid;
}

OAIObject OAIAdditionalInformation::getProperties() const {
    return m_properties;
}
void OAIAdditionalInformation::setProperties(const OAIObject &properties) {
    m_properties = properties;
    m_properties_isSet = true;
}

bool OAIAdditionalInformation::is_properties_Set() const{
    return m_properties_isSet;
}

bool OAIAdditionalInformation::is_properties_Valid() const{
    return m_properties_isValid;
}

QString OAIAdditionalInformation::getTitleName() const {
    return m_title_name;
}
void OAIAdditionalInformation::setTitleName(const QString &title_name) {
    m_title_name = title_name;
    m_title_name_isSet = true;
}

bool OAIAdditionalInformation::is_title_name_Set() const{
    return m_title_name_isSet;
}

bool OAIAdditionalInformation::is_title_name_Valid() const{
    return m_title_name_isValid;
}

QString OAIAdditionalInformation::getTitleValue() const {
    return m_title_value;
}
void OAIAdditionalInformation::setTitleValue(const QString &title_value) {
    m_title_value = title_value;
    m_title_value_isSet = true;
}

bool OAIAdditionalInformation::is_title_value_Set() const{
    return m_title_value_isSet;
}

bool OAIAdditionalInformation::is_title_value_Valid() const{
    return m_title_value_isValid;
}

bool OAIAdditionalInformation::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_has_properties_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_properties_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_title_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_title_value_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAdditionalInformation::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
