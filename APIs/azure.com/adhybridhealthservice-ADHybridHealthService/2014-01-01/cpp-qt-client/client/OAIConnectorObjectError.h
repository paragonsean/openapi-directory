/**
 * ADHybridHealthService
 * REST APIs for Azure Active Directory Connect Health
 *
 * The version of the OpenAPI document: 2014-01-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIConnectorObjectError.h
 *
 * The connector object error.
 */

#ifndef OAIConnectorObjectError_H
#define OAIConnectorObjectError_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIConnectorObjectError : public OAIObject {
public:
    OAIConnectorObjectError();
    OAIConnectorObjectError(QString json);
    ~OAIConnectorObjectError() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAnchor() const;
    void setAnchor(const QString &anchor);
    bool is_anchor_Set() const;
    bool is_anchor_Valid() const;

    QString getAttributeName() const;
    void setAttributeName(const QString &attribute_name);
    bool is_attribute_name_Set() const;
    bool is_attribute_name_Valid() const;

    qint32 getColumnNumber() const;
    void setColumnNumber(const qint32 &column_number);
    bool is_column_number_Set() const;
    bool is_column_number_Valid() const;

    QString getConnectorId() const;
    void setConnectorId(const QString &connector_id);
    bool is_connector_id_Set() const;
    bool is_connector_id_Valid() const;

    QString getDn() const;
    void setDn(const QString &dn);
    bool is_dn_Set() const;
    bool is_dn_Valid() const;

    qint32 getEntryNumber() const;
    void setEntryNumber(const qint32 &entry_number);
    bool is_entry_number_Set() const;
    bool is_entry_number_Valid() const;

    QString getErrorCode() const;
    void setErrorCode(const QString &error_code);
    bool is_error_code_Set() const;
    bool is_error_code_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    qint32 getLineNumber() const;
    void setLineNumber(const qint32 &line_number);
    bool is_line_number_Set() const;
    bool is_line_number_Valid() const;

    QString getMessage() const;
    void setMessage(const QString &message);
    bool is_message_Set() const;
    bool is_message_Valid() const;

    QString getRunStepResultId() const;
    void setRunStepResultId(const QString &run_step_result_id);
    bool is_run_step_result_id_Set() const;
    bool is_run_step_result_id_Valid() const;

    QString getServerErrorDetail() const;
    void setServerErrorDetail(const QString &server_error_detail);
    bool is_server_error_detail_Set() const;
    bool is_server_error_detail_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QList<QString> getValues() const;
    void setValues(const QList<QString> &values);
    bool is_values_Set() const;
    bool is_values_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_anchor;
    bool m_anchor_isSet;
    bool m_anchor_isValid;

    QString m_attribute_name;
    bool m_attribute_name_isSet;
    bool m_attribute_name_isValid;

    qint32 m_column_number;
    bool m_column_number_isSet;
    bool m_column_number_isValid;

    QString m_connector_id;
    bool m_connector_id_isSet;
    bool m_connector_id_isValid;

    QString m_dn;
    bool m_dn_isSet;
    bool m_dn_isValid;

    qint32 m_entry_number;
    bool m_entry_number_isSet;
    bool m_entry_number_isValid;

    QString m_error_code;
    bool m_error_code_isSet;
    bool m_error_code_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    qint32 m_line_number;
    bool m_line_number_isSet;
    bool m_line_number_isValid;

    QString m_message;
    bool m_message_isSet;
    bool m_message_isValid;

    QString m_run_step_result_id;
    bool m_run_step_result_id_isSet;
    bool m_run_step_result_id_isValid;

    QString m_server_error_detail;
    bool m_server_error_detail_isSet;
    bool m_server_error_detail_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QList<QString> m_values;
    bool m_values_isSet;
    bool m_values_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIConnectorObjectError)

#endif // OAIConnectorObjectError_H
