/**
 * ADHybridHealthService
 * REST APIs for Azure Active Directory Connect Health
 *
 * The version of the OpenAPI document: 2014-01-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIConnector.h
 *
 * The connect details.
 */

#ifndef OAIConnector_H
#define OAIConnector_H

#include <QJsonObject>

#include "OAIObject.h"
#include "OAIPartition.h"
#include "OAIRunProfile.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPartition;
class OAIRunProfile;

class OAIConnector : public OAIObject {
public:
    OAIConnector();
    OAIConnector(QString json);
    ~OAIConnector() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getAttributesIncluded() const;
    void setAttributesIncluded(const QList<QString> &attributes_included);
    bool is_attributes_included_Set() const;
    bool is_attributes_included_Valid() const;

    QList<QString> getClassesIncluded() const;
    void setClassesIncluded(const QList<QString> &classes_included);
    bool is_classes_included_Set() const;
    bool is_classes_included_Valid() const;

    QString getConnectorId() const;
    void setConnectorId(const QString &connector_id);
    bool is_connector_id_Set() const;
    bool is_connector_id_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QList<OAIPartition> getPartitions() const;
    void setPartitions(const QList<OAIPartition> &partitions);
    bool is_partitions_Set() const;
    bool is_partitions_Valid() const;

    OAIObject getPasswordHashSyncConfiguration() const;
    void setPasswordHashSyncConfiguration(const OAIObject &password_hash_sync_configuration);
    bool is_password_hash_sync_configuration_Set() const;
    bool is_password_hash_sync_configuration_Valid() const;

    OAIObject getPasswordManagementSettings() const;
    void setPasswordManagementSettings(const OAIObject &password_management_settings);
    bool is_password_management_settings_Set() const;
    bool is_password_management_settings_Valid() const;

    QList<OAIRunProfile> getRunProfiles() const;
    void setRunProfiles(const QList<OAIRunProfile> &run_profiles);
    bool is_run_profiles_Set() const;
    bool is_run_profiles_Valid() const;

    QString getSchemaXml() const;
    void setSchemaXml(const QString &schema_xml);
    bool is_schema_xml_Set() const;
    bool is_schema_xml_Valid() const;

    QDateTime getTimeCreated() const;
    void setTimeCreated(const QDateTime &time_created);
    bool is_time_created_Set() const;
    bool is_time_created_Valid() const;

    QDateTime getTimeLastModified() const;
    void setTimeLastModified(const QDateTime &time_last_modified);
    bool is_time_last_modified_Set() const;
    bool is_time_last_modified_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    qint32 getVersion() const;
    void setVersion(const qint32 &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_attributes_included;
    bool m_attributes_included_isSet;
    bool m_attributes_included_isValid;

    QList<QString> m_classes_included;
    bool m_classes_included_isSet;
    bool m_classes_included_isValid;

    QString m_connector_id;
    bool m_connector_id_isSet;
    bool m_connector_id_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QList<OAIPartition> m_partitions;
    bool m_partitions_isSet;
    bool m_partitions_isValid;

    OAIObject m_password_hash_sync_configuration;
    bool m_password_hash_sync_configuration_isSet;
    bool m_password_hash_sync_configuration_isValid;

    OAIObject m_password_management_settings;
    bool m_password_management_settings_isSet;
    bool m_password_management_settings_isValid;

    QList<OAIRunProfile> m_run_profiles;
    bool m_run_profiles_isSet;
    bool m_run_profiles_isValid;

    QString m_schema_xml;
    bool m_schema_xml_isSet;
    bool m_schema_xml_isValid;

    QDateTime m_time_created;
    bool m_time_created_isSet;
    bool m_time_created_isValid;

    QDateTime m_time_last_modified;
    bool m_time_last_modified_isSet;
    bool m_time_last_modified_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    qint32 m_version;
    bool m_version_isSet;
    bool m_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIConnector)

#endif // OAIConnector_H
