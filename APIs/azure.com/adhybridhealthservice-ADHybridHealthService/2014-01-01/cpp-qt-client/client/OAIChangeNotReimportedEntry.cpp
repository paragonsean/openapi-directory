/**
 * ADHybridHealthService
 * REST APIs for Azure Active Directory Connect Health
 *
 * The version of the OpenAPI document: 2014-01-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIChangeNotReimportedEntry.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIChangeNotReimportedEntry::OAIChangeNotReimportedEntry(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIChangeNotReimportedEntry::OAIChangeNotReimportedEntry() {
    this->initializeModel();
}

OAIChangeNotReimportedEntry::~OAIChangeNotReimportedEntry() {}

void OAIChangeNotReimportedEntry::initializeModel() {

    m_anchor_isSet = false;
    m_anchor_isValid = false;

    m_attributes_isSet = false;
    m_attributes_isValid = false;

    m_dn_isSet = false;
    m_dn_isValid = false;

    m_dn_attributes_isSet = false;
    m_dn_attributes_isValid = false;

    m_object_classes_isSet = false;
    m_object_classes_isValid = false;

    m_parent_anchor_isSet = false;
    m_parent_anchor_isValid = false;

    m_primary_object_class_isSet = false;
    m_primary_object_class_isValid = false;
}

void OAIChangeNotReimportedEntry::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIChangeNotReimportedEntry::fromJsonObject(QJsonObject json) {

    m_anchor_isValid = ::OpenAPI::fromJsonValue(m_anchor, json[QString("anchor")]);
    m_anchor_isSet = !json[QString("anchor")].isNull() && m_anchor_isValid;

    m_attributes_isValid = ::OpenAPI::fromJsonValue(m_attributes, json[QString("attributes")]);
    m_attributes_isSet = !json[QString("attributes")].isNull() && m_attributes_isValid;

    m_dn_isValid = ::OpenAPI::fromJsonValue(m_dn, json[QString("dn")]);
    m_dn_isSet = !json[QString("dn")].isNull() && m_dn_isValid;

    m_dn_attributes_isValid = ::OpenAPI::fromJsonValue(m_dn_attributes, json[QString("dnAttributes")]);
    m_dn_attributes_isSet = !json[QString("dnAttributes")].isNull() && m_dn_attributes_isValid;

    m_object_classes_isValid = ::OpenAPI::fromJsonValue(m_object_classes, json[QString("objectClasses")]);
    m_object_classes_isSet = !json[QString("objectClasses")].isNull() && m_object_classes_isValid;

    m_parent_anchor_isValid = ::OpenAPI::fromJsonValue(m_parent_anchor, json[QString("parentAnchor")]);
    m_parent_anchor_isSet = !json[QString("parentAnchor")].isNull() && m_parent_anchor_isValid;

    m_primary_object_class_isValid = ::OpenAPI::fromJsonValue(m_primary_object_class, json[QString("primaryObjectClass")]);
    m_primary_object_class_isSet = !json[QString("primaryObjectClass")].isNull() && m_primary_object_class_isValid;
}

QString OAIChangeNotReimportedEntry::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIChangeNotReimportedEntry::asJsonObject() const {
    QJsonObject obj;
    if (m_anchor_isSet) {
        obj.insert(QString("anchor"), ::OpenAPI::toJsonValue(m_anchor));
    }
    if (m_attributes.size() > 0) {
        obj.insert(QString("attributes"), ::OpenAPI::toJsonValue(m_attributes));
    }
    if (m_dn_isSet) {
        obj.insert(QString("dn"), ::OpenAPI::toJsonValue(m_dn));
    }
    if (m_dn_attributes.size() > 0) {
        obj.insert(QString("dnAttributes"), ::OpenAPI::toJsonValue(m_dn_attributes));
    }
    if (m_object_classes.size() > 0) {
        obj.insert(QString("objectClasses"), ::OpenAPI::toJsonValue(m_object_classes));
    }
    if (m_parent_anchor_isSet) {
        obj.insert(QString("parentAnchor"), ::OpenAPI::toJsonValue(m_parent_anchor));
    }
    if (m_primary_object_class_isSet) {
        obj.insert(QString("primaryObjectClass"), ::OpenAPI::toJsonValue(m_primary_object_class));
    }
    return obj;
}

QString OAIChangeNotReimportedEntry::getAnchor() const {
    return m_anchor;
}
void OAIChangeNotReimportedEntry::setAnchor(const QString &anchor) {
    m_anchor = anchor;
    m_anchor_isSet = true;
}

bool OAIChangeNotReimportedEntry::is_anchor_Set() const{
    return m_anchor_isSet;
}

bool OAIChangeNotReimportedEntry::is_anchor_Valid() const{
    return m_anchor_isValid;
}

QList<OAIAttributeDelta> OAIChangeNotReimportedEntry::getAttributes() const {
    return m_attributes;
}
void OAIChangeNotReimportedEntry::setAttributes(const QList<OAIAttributeDelta> &attributes) {
    m_attributes = attributes;
    m_attributes_isSet = true;
}

bool OAIChangeNotReimportedEntry::is_attributes_Set() const{
    return m_attributes_isSet;
}

bool OAIChangeNotReimportedEntry::is_attributes_Valid() const{
    return m_attributes_isValid;
}

QString OAIChangeNotReimportedEntry::getDn() const {
    return m_dn;
}
void OAIChangeNotReimportedEntry::setDn(const QString &dn) {
    m_dn = dn;
    m_dn_isSet = true;
}

bool OAIChangeNotReimportedEntry::is_dn_Set() const{
    return m_dn_isSet;
}

bool OAIChangeNotReimportedEntry::is_dn_Valid() const{
    return m_dn_isValid;
}

QList<OAIAttributeDelta> OAIChangeNotReimportedEntry::getDnAttributes() const {
    return m_dn_attributes;
}
void OAIChangeNotReimportedEntry::setDnAttributes(const QList<OAIAttributeDelta> &dn_attributes) {
    m_dn_attributes = dn_attributes;
    m_dn_attributes_isSet = true;
}

bool OAIChangeNotReimportedEntry::is_dn_attributes_Set() const{
    return m_dn_attributes_isSet;
}

bool OAIChangeNotReimportedEntry::is_dn_attributes_Valid() const{
    return m_dn_attributes_isValid;
}

QList<QString> OAIChangeNotReimportedEntry::getObjectClasses() const {
    return m_object_classes;
}
void OAIChangeNotReimportedEntry::setObjectClasses(const QList<QString> &object_classes) {
    m_object_classes = object_classes;
    m_object_classes_isSet = true;
}

bool OAIChangeNotReimportedEntry::is_object_classes_Set() const{
    return m_object_classes_isSet;
}

bool OAIChangeNotReimportedEntry::is_object_classes_Valid() const{
    return m_object_classes_isValid;
}

QString OAIChangeNotReimportedEntry::getParentAnchor() const {
    return m_parent_anchor;
}
void OAIChangeNotReimportedEntry::setParentAnchor(const QString &parent_anchor) {
    m_parent_anchor = parent_anchor;
    m_parent_anchor_isSet = true;
}

bool OAIChangeNotReimportedEntry::is_parent_anchor_Set() const{
    return m_parent_anchor_isSet;
}

bool OAIChangeNotReimportedEntry::is_parent_anchor_Valid() const{
    return m_parent_anchor_isValid;
}

QString OAIChangeNotReimportedEntry::getPrimaryObjectClass() const {
    return m_primary_object_class;
}
void OAIChangeNotReimportedEntry::setPrimaryObjectClass(const QString &primary_object_class) {
    m_primary_object_class = primary_object_class;
    m_primary_object_class_isSet = true;
}

bool OAIChangeNotReimportedEntry::is_primary_object_class_Set() const{
    return m_primary_object_class_isSet;
}

bool OAIChangeNotReimportedEntry::is_primary_object_class_Valid() const{
    return m_primary_object_class_isValid;
}

bool OAIChangeNotReimportedEntry::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_anchor_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_attributes.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_dn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_dn_attributes.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_object_classes.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_parent_anchor_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_primary_object_class_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIChangeNotReimportedEntry::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
