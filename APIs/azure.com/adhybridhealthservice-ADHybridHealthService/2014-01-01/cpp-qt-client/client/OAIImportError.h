/**
 * ADHybridHealthService
 * REST APIs for Azure Active Directory Connect Health
 *
 * The version of the OpenAPI document: 2014-01-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIImportError.h
 *
 * The import error details.
 */

#ifndef OAIImportError_H
#define OAIImportError_H

#include <QJsonObject>

#include "OAIChangeNotReimported.h"
#include "OAIExtensionErrorInfo.h"
#include "OAIRuleErrorInfo.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIChangeNotReimported;
class OAIExtensionErrorInfo;
class OAIRuleErrorInfo;

class OAIImportError : public OAIObject {
public:
    OAIImportError();
    OAIImportError(QString json);
    ~OAIImportError() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAlgorithmStepType() const;
    void setAlgorithmStepType(const QString &algorithm_step_type);
    bool is_algorithm_step_type_Set() const;
    bool is_algorithm_step_type_Valid() const;

    OAIChangeNotReimported getChangeNotReimported() const;
    void setChangeNotReimported(const OAIChangeNotReimported &change_not_reimported);
    bool is_change_not_reimported_Set() const;
    bool is_change_not_reimported_Valid() const;

    QString getConnectorId() const;
    void setConnectorId(const QString &connector_id);
    bool is_connector_id_Set() const;
    bool is_connector_id_Valid() const;

    QString getCsObjectId() const;
    void setCsObjectId(const QString &cs_object_id);
    bool is_cs_object_id_Set() const;
    bool is_cs_object_id_Valid() const;

    QString getDn() const;
    void setDn(const QString &dn);
    bool is_dn_Set() const;
    bool is_dn_Valid() const;

    OAIExtensionErrorInfo getExtensionErrorInfo() const;
    void setExtensionErrorInfo(const OAIExtensionErrorInfo &extension_error_info);
    bool is_extension_error_info_Set() const;
    bool is_extension_error_info_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    qint32 getRetryCount() const;
    void setRetryCount(const qint32 &retry_count);
    bool is_retry_count_Set() const;
    bool is_retry_count_Valid() const;

    OAIRuleErrorInfo getRuleErrorInfo() const;
    void setRuleErrorInfo(const OAIRuleErrorInfo &rule_error_info);
    bool is_rule_error_info_Set() const;
    bool is_rule_error_info_Valid() const;

    QString getRunStepResultId() const;
    void setRunStepResultId(const QString &run_step_result_id);
    bool is_run_step_result_id_Set() const;
    bool is_run_step_result_id_Valid() const;

    QDateTime getTimeFirstOccurred() const;
    void setTimeFirstOccurred(const QDateTime &time_first_occurred);
    bool is_time_first_occurred_Set() const;
    bool is_time_first_occurred_Valid() const;

    QDateTime getTimeOccurred() const;
    void setTimeOccurred(const QDateTime &time_occurred);
    bool is_time_occurred_Set() const;
    bool is_time_occurred_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_algorithm_step_type;
    bool m_algorithm_step_type_isSet;
    bool m_algorithm_step_type_isValid;

    OAIChangeNotReimported m_change_not_reimported;
    bool m_change_not_reimported_isSet;
    bool m_change_not_reimported_isValid;

    QString m_connector_id;
    bool m_connector_id_isSet;
    bool m_connector_id_isValid;

    QString m_cs_object_id;
    bool m_cs_object_id_isSet;
    bool m_cs_object_id_isValid;

    QString m_dn;
    bool m_dn_isSet;
    bool m_dn_isValid;

    OAIExtensionErrorInfo m_extension_error_info;
    bool m_extension_error_info_isSet;
    bool m_extension_error_info_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    qint32 m_retry_count;
    bool m_retry_count_isSet;
    bool m_retry_count_isValid;

    OAIRuleErrorInfo m_rule_error_info;
    bool m_rule_error_info_isSet;
    bool m_rule_error_info_isValid;

    QString m_run_step_result_id;
    bool m_run_step_result_id_isSet;
    bool m_run_step_result_id_isValid;

    QDateTime m_time_first_occurred;
    bool m_time_first_occurred_isSet;
    bool m_time_first_occurred_isValid;

    QDateTime m_time_occurred;
    bool m_time_occurred_isSet;
    bool m_time_occurred_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIImportError)

#endif // OAIImportError_H
