/*
 * ADHybridHealthService
 * REST APIs for Azure Active Directory Connect Health
 *
 * The version of the OpenAPI document: 2014-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The export error details.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:21:56.328506-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ExportError {
  public static final String SERIALIZED_NAME_AAD_DISPLAY_NAME = "aadDisplayName";
  @SerializedName(SERIALIZED_NAME_AAD_DISPLAY_NAME)
  private String aadDisplayName;

  public static final String SERIALIZED_NAME_AAD_DISTINGUISHED_NAME = "aadDistinguishedName";
  @SerializedName(SERIALIZED_NAME_AAD_DISTINGUISHED_NAME)
  private String aadDistinguishedName;

  public static final String SERIALIZED_NAME_AAD_MAIL = "aadMail";
  @SerializedName(SERIALIZED_NAME_AAD_MAIL)
  private String aadMail;

  public static final String SERIALIZED_NAME_AAD_OBJECT_GUID = "aadObjectGuid";
  @SerializedName(SERIALIZED_NAME_AAD_OBJECT_GUID)
  private String aadObjectGuid;

  public static final String SERIALIZED_NAME_AAD_OBJECT_TYPE = "aadObjectType";
  @SerializedName(SERIALIZED_NAME_AAD_OBJECT_TYPE)
  private String aadObjectType;

  public static final String SERIALIZED_NAME_AAD_SOURCE_OF_AUTHORITY = "aadSourceOfAuthority";
  @SerializedName(SERIALIZED_NAME_AAD_SOURCE_OF_AUTHORITY)
  private String aadSourceOfAuthority;

  public static final String SERIALIZED_NAME_AAD_USER_PRINCIPAL_NAME = "aadUserPrincipalName";
  @SerializedName(SERIALIZED_NAME_AAD_USER_PRINCIPAL_NAME)
  private String aadUserPrincipalName;

  public static final String SERIALIZED_NAME_AD_DISPLAY_NAME = "adDisplayName";
  @SerializedName(SERIALIZED_NAME_AD_DISPLAY_NAME)
  private String adDisplayName;

  public static final String SERIALIZED_NAME_AD_DISTINGUISHED_NAME = "adDistinguishedName";
  @SerializedName(SERIALIZED_NAME_AD_DISTINGUISHED_NAME)
  private String adDistinguishedName;

  public static final String SERIALIZED_NAME_AD_MAIL = "adMail";
  @SerializedName(SERIALIZED_NAME_AD_MAIL)
  private String adMail;

  public static final String SERIALIZED_NAME_AD_OBJECT_GUID = "adObjectGuid";
  @SerializedName(SERIALIZED_NAME_AD_OBJECT_GUID)
  private String adObjectGuid;

  public static final String SERIALIZED_NAME_AD_OBJECT_TYPE = "adObjectType";
  @SerializedName(SERIALIZED_NAME_AD_OBJECT_TYPE)
  private String adObjectType;

  public static final String SERIALIZED_NAME_AD_SOURCE_ANCHOR = "adSourceAnchor";
  @SerializedName(SERIALIZED_NAME_AD_SOURCE_ANCHOR)
  private String adSourceAnchor;

  public static final String SERIALIZED_NAME_AD_SOURCE_OF_AUTHORITY = "adSourceOfAuthority";
  @SerializedName(SERIALIZED_NAME_AD_SOURCE_OF_AUTHORITY)
  private String adSourceOfAuthority;

  public static final String SERIALIZED_NAME_AD_USER_PRINCIPAL_NAME = "adUserPrincipalName";
  @SerializedName(SERIALIZED_NAME_AD_USER_PRINCIPAL_NAME)
  private String adUserPrincipalName;

  public static final String SERIALIZED_NAME_ATTRIBUTE_MULTI_VALUE = "attributeMultiValue";
  @SerializedName(SERIALIZED_NAME_ATTRIBUTE_MULTI_VALUE)
  private Boolean attributeMultiValue;

  public static final String SERIALIZED_NAME_ATTRIBUTE_NAME = "attributeName";
  @SerializedName(SERIALIZED_NAME_ATTRIBUTE_NAME)
  private String attributeName;

  public static final String SERIALIZED_NAME_ATTRIBUTE_VALUE = "attributeValue";
  @SerializedName(SERIALIZED_NAME_ATTRIBUTE_VALUE)
  private String attributeValue;

  public static final String SERIALIZED_NAME_CLOUD_ANCHOR = "cloudAnchor";
  @SerializedName(SERIALIZED_NAME_CLOUD_ANCHOR)
  private String cloudAnchor;

  public static final String SERIALIZED_NAME_CONNECTOR_ID = "connectorId";
  @SerializedName(SERIALIZED_NAME_CONNECTOR_ID)
  private String connectorId;

  public static final String SERIALIZED_NAME_CS_OBJECT_ID = "csObjectId";
  @SerializedName(SERIALIZED_NAME_CS_OBJECT_ID)
  private String csObjectId;

  public static final String SERIALIZED_NAME_DN = "dn";
  @SerializedName(SERIALIZED_NAME_DN)
  private String dn;

  public static final String SERIALIZED_NAME_ERROR_CODE = "errorCode";
  @SerializedName(SERIALIZED_NAME_ERROR_CODE)
  private String errorCode;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_LAST_DIR_SYNC_TIME = "lastDirSyncTime";
  @SerializedName(SERIALIZED_NAME_LAST_DIR_SYNC_TIME)
  private OffsetDateTime lastDirSyncTime;

  public static final String SERIALIZED_NAME_MAX_LIMIT = "maxLimit";
  @SerializedName(SERIALIZED_NAME_MAX_LIMIT)
  private String maxLimit;

  public static final String SERIALIZED_NAME_MESSAGE = "message";
  @SerializedName(SERIALIZED_NAME_MESSAGE)
  private String message;

  public static final String SERIALIZED_NAME_MIN_LIMIT = "minLimit";
  @SerializedName(SERIALIZED_NAME_MIN_LIMIT)
  private String minLimit;

  public static final String SERIALIZED_NAME_MODIFIED_ATTRIBUTE_VALUE = "modifiedAttributeValue";
  @SerializedName(SERIALIZED_NAME_MODIFIED_ATTRIBUTE_VALUE)
  private String modifiedAttributeValue;

  public static final String SERIALIZED_NAME_OBJECT_ID_CONFLICT = "objectIdConflict";
  @SerializedName(SERIALIZED_NAME_OBJECT_ID_CONFLICT)
  private String objectIdConflict;

  public static final String SERIALIZED_NAME_RETRY_COUNT = "retryCount";
  @SerializedName(SERIALIZED_NAME_RETRY_COUNT)
  private Integer retryCount;

  public static final String SERIALIZED_NAME_RUN_STEP_RESULT_ID = "runStepResultId";
  @SerializedName(SERIALIZED_NAME_RUN_STEP_RESULT_ID)
  private String runStepResultId;

  public static final String SERIALIZED_NAME_SAM_ACCOUNT_NAME = "samAccountName";
  @SerializedName(SERIALIZED_NAME_SAM_ACCOUNT_NAME)
  private String samAccountName;

  public static final String SERIALIZED_NAME_SERVER_ERROR_DETAIL = "serverErrorDetail";
  @SerializedName(SERIALIZED_NAME_SERVER_ERROR_DETAIL)
  private String serverErrorDetail;

  public static final String SERIALIZED_NAME_TIME_FIRST_OCCURED = "timeFirstOccured";
  @SerializedName(SERIALIZED_NAME_TIME_FIRST_OCCURED)
  private OffsetDateTime timeFirstOccured;

  public static final String SERIALIZED_NAME_TIME_OCCURED = "timeOccured";
  @SerializedName(SERIALIZED_NAME_TIME_OCCURED)
  private OffsetDateTime timeOccured;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public ExportError() {
  }

  public ExportError aadDisplayName(String aadDisplayName) {
    this.aadDisplayName = aadDisplayName;
    return this;
  }

  /**
   * The AAD side display name
   * @return aadDisplayName
   */
  @javax.annotation.Nullable
  public String getAadDisplayName() {
    return aadDisplayName;
  }

  public void setAadDisplayName(String aadDisplayName) {
    this.aadDisplayName = aadDisplayName;
  }


  public ExportError aadDistinguishedName(String aadDistinguishedName) {
    this.aadDistinguishedName = aadDistinguishedName;
    return this;
  }

  /**
   * The AAD side distinguished name for the object.
   * @return aadDistinguishedName
   */
  @javax.annotation.Nullable
  public String getAadDistinguishedName() {
    return aadDistinguishedName;
  }

  public void setAadDistinguishedName(String aadDistinguishedName) {
    this.aadDistinguishedName = aadDistinguishedName;
  }


  public ExportError aadMail(String aadMail) {
    this.aadMail = aadMail;
    return this;
  }

  /**
   * The AAD side email for the object.
   * @return aadMail
   */
  @javax.annotation.Nullable
  public String getAadMail() {
    return aadMail;
  }

  public void setAadMail(String aadMail) {
    this.aadMail = aadMail;
  }


  public ExportError aadObjectGuid(String aadObjectGuid) {
    this.aadObjectGuid = aadObjectGuid;
    return this;
  }

  /**
   * The AAD side object guid.
   * @return aadObjectGuid
   */
  @javax.annotation.Nullable
  public String getAadObjectGuid() {
    return aadObjectGuid;
  }

  public void setAadObjectGuid(String aadObjectGuid) {
    this.aadObjectGuid = aadObjectGuid;
  }


  public ExportError aadObjectType(String aadObjectType) {
    this.aadObjectType = aadObjectType;
    return this;
  }

  /**
   * The AAD side object type.
   * @return aadObjectType
   */
  @javax.annotation.Nullable
  public String getAadObjectType() {
    return aadObjectType;
  }

  public void setAadObjectType(String aadObjectType) {
    this.aadObjectType = aadObjectType;
  }


  public ExportError aadSourceOfAuthority(String aadSourceOfAuthority) {
    this.aadSourceOfAuthority = aadSourceOfAuthority;
    return this;
  }

  /**
   * The AAD side source of authority for the object.
   * @return aadSourceOfAuthority
   */
  @javax.annotation.Nullable
  public String getAadSourceOfAuthority() {
    return aadSourceOfAuthority;
  }

  public void setAadSourceOfAuthority(String aadSourceOfAuthority) {
    this.aadSourceOfAuthority = aadSourceOfAuthority;
  }


  public ExportError aadUserPrincipalName(String aadUserPrincipalName) {
    this.aadUserPrincipalName = aadUserPrincipalName;
    return this;
  }

  /**
   * The AAD side user principal name.
   * @return aadUserPrincipalName
   */
  @javax.annotation.Nullable
  public String getAadUserPrincipalName() {
    return aadUserPrincipalName;
  }

  public void setAadUserPrincipalName(String aadUserPrincipalName) {
    this.aadUserPrincipalName = aadUserPrincipalName;
  }


  public ExportError adDisplayName(String adDisplayName) {
    this.adDisplayName = adDisplayName;
    return this;
  }

  /**
   * The display name for the AD object.
   * @return adDisplayName
   */
  @javax.annotation.Nullable
  public String getAdDisplayName() {
    return adDisplayName;
  }

  public void setAdDisplayName(String adDisplayName) {
    this.adDisplayName = adDisplayName;
  }


  public ExportError adDistinguishedName(String adDistinguishedName) {
    this.adDistinguishedName = adDistinguishedName;
    return this;
  }

  /**
   * The distinguished name for the AD object.
   * @return adDistinguishedName
   */
  @javax.annotation.Nullable
  public String getAdDistinguishedName() {
    return adDistinguishedName;
  }

  public void setAdDistinguishedName(String adDistinguishedName) {
    this.adDistinguishedName = adDistinguishedName;
  }


  public ExportError adMail(String adMail) {
    this.adMail = adMail;
    return this;
  }

  /**
   * The email for the AD object.
   * @return adMail
   */
  @javax.annotation.Nullable
  public String getAdMail() {
    return adMail;
  }

  public void setAdMail(String adMail) {
    this.adMail = adMail;
  }


  public ExportError adObjectGuid(String adObjectGuid) {
    this.adObjectGuid = adObjectGuid;
    return this;
  }

  /**
   * The AD object guid.
   * @return adObjectGuid
   */
  @javax.annotation.Nullable
  public String getAdObjectGuid() {
    return adObjectGuid;
  }

  public void setAdObjectGuid(String adObjectGuid) {
    this.adObjectGuid = adObjectGuid;
  }


  public ExportError adObjectType(String adObjectType) {
    this.adObjectType = adObjectType;
    return this;
  }

  /**
   * The AD object type
   * @return adObjectType
   */
  @javax.annotation.Nullable
  public String getAdObjectType() {
    return adObjectType;
  }

  public void setAdObjectType(String adObjectType) {
    this.adObjectType = adObjectType;
  }


  public ExportError adSourceAnchor(String adSourceAnchor) {
    this.adSourceAnchor = adSourceAnchor;
    return this;
  }

  /**
   * The AD source anchor.
   * @return adSourceAnchor
   */
  @javax.annotation.Nullable
  public String getAdSourceAnchor() {
    return adSourceAnchor;
  }

  public void setAdSourceAnchor(String adSourceAnchor) {
    this.adSourceAnchor = adSourceAnchor;
  }


  public ExportError adSourceOfAuthority(String adSourceOfAuthority) {
    this.adSourceOfAuthority = adSourceOfAuthority;
    return this;
  }

  /**
   * The source of authority for the AD object.
   * @return adSourceOfAuthority
   */
  @javax.annotation.Nullable
  public String getAdSourceOfAuthority() {
    return adSourceOfAuthority;
  }

  public void setAdSourceOfAuthority(String adSourceOfAuthority) {
    this.adSourceOfAuthority = adSourceOfAuthority;
  }


  public ExportError adUserPrincipalName(String adUserPrincipalName) {
    this.adUserPrincipalName = adUserPrincipalName;
    return this;
  }

  /**
   * The user principal name for the AD object.
   * @return adUserPrincipalName
   */
  @javax.annotation.Nullable
  public String getAdUserPrincipalName() {
    return adUserPrincipalName;
  }

  public void setAdUserPrincipalName(String adUserPrincipalName) {
    this.adUserPrincipalName = adUserPrincipalName;
  }


  public ExportError attributeMultiValue(Boolean attributeMultiValue) {
    this.attributeMultiValue = attributeMultiValue;
    return this;
  }

  /**
   * Indicates if the attribute is multi valued or not.
   * @return attributeMultiValue
   */
  @javax.annotation.Nullable
  public Boolean getAttributeMultiValue() {
    return attributeMultiValue;
  }

  public void setAttributeMultiValue(Boolean attributeMultiValue) {
    this.attributeMultiValue = attributeMultiValue;
  }


  public ExportError attributeName(String attributeName) {
    this.attributeName = attributeName;
    return this;
  }

  /**
   * The attribute name.
   * @return attributeName
   */
  @javax.annotation.Nullable
  public String getAttributeName() {
    return attributeName;
  }

  public void setAttributeName(String attributeName) {
    this.attributeName = attributeName;
  }


  public ExportError attributeValue(String attributeValue) {
    this.attributeValue = attributeValue;
    return this;
  }

  /**
   * The attribute value.
   * @return attributeValue
   */
  @javax.annotation.Nullable
  public String getAttributeValue() {
    return attributeValue;
  }

  public void setAttributeValue(String attributeValue) {
    this.attributeValue = attributeValue;
  }


  public ExportError cloudAnchor(String cloudAnchor) {
    this.cloudAnchor = cloudAnchor;
    return this;
  }

  /**
   * The name of the cloud anchor.
   * @return cloudAnchor
   */
  @javax.annotation.Nullable
  public String getCloudAnchor() {
    return cloudAnchor;
  }

  public void setCloudAnchor(String cloudAnchor) {
    this.cloudAnchor = cloudAnchor;
  }


  public ExportError connectorId(String connectorId) {
    this.connectorId = connectorId;
    return this;
  }

  /**
   * The connector Id.
   * @return connectorId
   */
  @javax.annotation.Nullable
  public String getConnectorId() {
    return connectorId;
  }

  public void setConnectorId(String connectorId) {
    this.connectorId = connectorId;
  }


  public ExportError csObjectId(String csObjectId) {
    this.csObjectId = csObjectId;
    return this;
  }

  /**
   * The cloud object Id.
   * @return csObjectId
   */
  @javax.annotation.Nullable
  public String getCsObjectId() {
    return csObjectId;
  }

  public void setCsObjectId(String csObjectId) {
    this.csObjectId = csObjectId;
  }


  public ExportError dn(String dn) {
    this.dn = dn;
    return this;
  }

  /**
   * The distinguished name.
   * @return dn
   */
  @javax.annotation.Nullable
  public String getDn() {
    return dn;
  }

  public void setDn(String dn) {
    this.dn = dn;
  }


  public ExportError errorCode(String errorCode) {
    this.errorCode = errorCode;
    return this;
  }

  /**
   * The error code.
   * @return errorCode
   */
  @javax.annotation.Nullable
  public String getErrorCode() {
    return errorCode;
  }

  public void setErrorCode(String errorCode) {
    this.errorCode = errorCode;
  }


  public ExportError id(String id) {
    this.id = id;
    return this;
  }

  /**
   * The error Id.
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public ExportError lastDirSyncTime(OffsetDateTime lastDirSyncTime) {
    this.lastDirSyncTime = lastDirSyncTime;
    return this;
  }

  /**
   * The date and time of last sync run.
   * @return lastDirSyncTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastDirSyncTime() {
    return lastDirSyncTime;
  }

  public void setLastDirSyncTime(OffsetDateTime lastDirSyncTime) {
    this.lastDirSyncTime = lastDirSyncTime;
  }


  public ExportError maxLimit(String maxLimit) {
    this.maxLimit = maxLimit;
    return this;
  }

  /**
   * The maximum limit.
   * @return maxLimit
   */
  @javax.annotation.Nullable
  public String getMaxLimit() {
    return maxLimit;
  }

  public void setMaxLimit(String maxLimit) {
    this.maxLimit = maxLimit;
  }


  public ExportError message(String message) {
    this.message = message;
    return this;
  }

  /**
   * The export error message.
   * @return message
   */
  @javax.annotation.Nullable
  public String getMessage() {
    return message;
  }

  public void setMessage(String message) {
    this.message = message;
  }


  public ExportError minLimit(String minLimit) {
    this.minLimit = minLimit;
    return this;
  }

  /**
   * The minimum limit.
   * @return minLimit
   */
  @javax.annotation.Nullable
  public String getMinLimit() {
    return minLimit;
  }

  public void setMinLimit(String minLimit) {
    this.minLimit = minLimit;
  }


  public ExportError modifiedAttributeValue(String modifiedAttributeValue) {
    this.modifiedAttributeValue = modifiedAttributeValue;
    return this;
  }

  /**
   * The modified attribute value.
   * @return modifiedAttributeValue
   */
  @javax.annotation.Nullable
  public String getModifiedAttributeValue() {
    return modifiedAttributeValue;
  }

  public void setModifiedAttributeValue(String modifiedAttributeValue) {
    this.modifiedAttributeValue = modifiedAttributeValue;
  }


  public ExportError objectIdConflict(String objectIdConflict) {
    this.objectIdConflict = objectIdConflict;
    return this;
  }

  /**
   * The object Id with which there was an attribute conflict.
   * @return objectIdConflict
   */
  @javax.annotation.Nullable
  public String getObjectIdConflict() {
    return objectIdConflict;
  }

  public void setObjectIdConflict(String objectIdConflict) {
    this.objectIdConflict = objectIdConflict;
  }


  public ExportError retryCount(Integer retryCount) {
    this.retryCount = retryCount;
    return this;
  }

  /**
   * The retry count.
   * @return retryCount
   */
  @javax.annotation.Nullable
  public Integer getRetryCount() {
    return retryCount;
  }

  public void setRetryCount(Integer retryCount) {
    this.retryCount = retryCount;
  }


  public ExportError runStepResultId(String runStepResultId) {
    this.runStepResultId = runStepResultId;
    return this;
  }

  /**
   * The run step result Id.
   * @return runStepResultId
   */
  @javax.annotation.Nullable
  public String getRunStepResultId() {
    return runStepResultId;
  }

  public void setRunStepResultId(String runStepResultId) {
    this.runStepResultId = runStepResultId;
  }


  public ExportError samAccountName(String samAccountName) {
    this.samAccountName = samAccountName;
    return this;
  }

  /**
   * The SAM account name.
   * @return samAccountName
   */
  @javax.annotation.Nullable
  public String getSamAccountName() {
    return samAccountName;
  }

  public void setSamAccountName(String samAccountName) {
    this.samAccountName = samAccountName;
  }


  public ExportError serverErrorDetail(String serverErrorDetail) {
    this.serverErrorDetail = serverErrorDetail;
    return this;
  }

  /**
   * The server error detail.
   * @return serverErrorDetail
   */
  @javax.annotation.Nullable
  public String getServerErrorDetail() {
    return serverErrorDetail;
  }

  public void setServerErrorDetail(String serverErrorDetail) {
    this.serverErrorDetail = serverErrorDetail;
  }


  public ExportError timeFirstOccured(OffsetDateTime timeFirstOccured) {
    this.timeFirstOccured = timeFirstOccured;
    return this;
  }

  /**
   * The date and time when the export error first occurred.
   * @return timeFirstOccured
   */
  @javax.annotation.Nullable
  public OffsetDateTime getTimeFirstOccured() {
    return timeFirstOccured;
  }

  public void setTimeFirstOccured(OffsetDateTime timeFirstOccured) {
    this.timeFirstOccured = timeFirstOccured;
  }


  public ExportError timeOccured(OffsetDateTime timeOccured) {
    this.timeOccured = timeOccured;
    return this;
  }

  /**
   * The date and time of occurrence.
   * @return timeOccured
   */
  @javax.annotation.Nullable
  public OffsetDateTime getTimeOccured() {
    return timeOccured;
  }

  public void setTimeOccured(OffsetDateTime timeOccured) {
    this.timeOccured = timeOccured;
  }


  public ExportError type(String type) {
    this.type = type;
    return this;
  }

  /**
   * The type of error.
   * @return type
   */
  @javax.annotation.Nullable
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExportError exportError = (ExportError) o;
    return Objects.equals(this.aadDisplayName, exportError.aadDisplayName) &&
        Objects.equals(this.aadDistinguishedName, exportError.aadDistinguishedName) &&
        Objects.equals(this.aadMail, exportError.aadMail) &&
        Objects.equals(this.aadObjectGuid, exportError.aadObjectGuid) &&
        Objects.equals(this.aadObjectType, exportError.aadObjectType) &&
        Objects.equals(this.aadSourceOfAuthority, exportError.aadSourceOfAuthority) &&
        Objects.equals(this.aadUserPrincipalName, exportError.aadUserPrincipalName) &&
        Objects.equals(this.adDisplayName, exportError.adDisplayName) &&
        Objects.equals(this.adDistinguishedName, exportError.adDistinguishedName) &&
        Objects.equals(this.adMail, exportError.adMail) &&
        Objects.equals(this.adObjectGuid, exportError.adObjectGuid) &&
        Objects.equals(this.adObjectType, exportError.adObjectType) &&
        Objects.equals(this.adSourceAnchor, exportError.adSourceAnchor) &&
        Objects.equals(this.adSourceOfAuthority, exportError.adSourceOfAuthority) &&
        Objects.equals(this.adUserPrincipalName, exportError.adUserPrincipalName) &&
        Objects.equals(this.attributeMultiValue, exportError.attributeMultiValue) &&
        Objects.equals(this.attributeName, exportError.attributeName) &&
        Objects.equals(this.attributeValue, exportError.attributeValue) &&
        Objects.equals(this.cloudAnchor, exportError.cloudAnchor) &&
        Objects.equals(this.connectorId, exportError.connectorId) &&
        Objects.equals(this.csObjectId, exportError.csObjectId) &&
        Objects.equals(this.dn, exportError.dn) &&
        Objects.equals(this.errorCode, exportError.errorCode) &&
        Objects.equals(this.id, exportError.id) &&
        Objects.equals(this.lastDirSyncTime, exportError.lastDirSyncTime) &&
        Objects.equals(this.maxLimit, exportError.maxLimit) &&
        Objects.equals(this.message, exportError.message) &&
        Objects.equals(this.minLimit, exportError.minLimit) &&
        Objects.equals(this.modifiedAttributeValue, exportError.modifiedAttributeValue) &&
        Objects.equals(this.objectIdConflict, exportError.objectIdConflict) &&
        Objects.equals(this.retryCount, exportError.retryCount) &&
        Objects.equals(this.runStepResultId, exportError.runStepResultId) &&
        Objects.equals(this.samAccountName, exportError.samAccountName) &&
        Objects.equals(this.serverErrorDetail, exportError.serverErrorDetail) &&
        Objects.equals(this.timeFirstOccured, exportError.timeFirstOccured) &&
        Objects.equals(this.timeOccured, exportError.timeOccured) &&
        Objects.equals(this.type, exportError.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(aadDisplayName, aadDistinguishedName, aadMail, aadObjectGuid, aadObjectType, aadSourceOfAuthority, aadUserPrincipalName, adDisplayName, adDistinguishedName, adMail, adObjectGuid, adObjectType, adSourceAnchor, adSourceOfAuthority, adUserPrincipalName, attributeMultiValue, attributeName, attributeValue, cloudAnchor, connectorId, csObjectId, dn, errorCode, id, lastDirSyncTime, maxLimit, message, minLimit, modifiedAttributeValue, objectIdConflict, retryCount, runStepResultId, samAccountName, serverErrorDetail, timeFirstOccured, timeOccured, type);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExportError {\n");
    sb.append("    aadDisplayName: ").append(toIndentedString(aadDisplayName)).append("\n");
    sb.append("    aadDistinguishedName: ").append(toIndentedString(aadDistinguishedName)).append("\n");
    sb.append("    aadMail: ").append(toIndentedString(aadMail)).append("\n");
    sb.append("    aadObjectGuid: ").append(toIndentedString(aadObjectGuid)).append("\n");
    sb.append("    aadObjectType: ").append(toIndentedString(aadObjectType)).append("\n");
    sb.append("    aadSourceOfAuthority: ").append(toIndentedString(aadSourceOfAuthority)).append("\n");
    sb.append("    aadUserPrincipalName: ").append(toIndentedString(aadUserPrincipalName)).append("\n");
    sb.append("    adDisplayName: ").append(toIndentedString(adDisplayName)).append("\n");
    sb.append("    adDistinguishedName: ").append(toIndentedString(adDistinguishedName)).append("\n");
    sb.append("    adMail: ").append(toIndentedString(adMail)).append("\n");
    sb.append("    adObjectGuid: ").append(toIndentedString(adObjectGuid)).append("\n");
    sb.append("    adObjectType: ").append(toIndentedString(adObjectType)).append("\n");
    sb.append("    adSourceAnchor: ").append(toIndentedString(adSourceAnchor)).append("\n");
    sb.append("    adSourceOfAuthority: ").append(toIndentedString(adSourceOfAuthority)).append("\n");
    sb.append("    adUserPrincipalName: ").append(toIndentedString(adUserPrincipalName)).append("\n");
    sb.append("    attributeMultiValue: ").append(toIndentedString(attributeMultiValue)).append("\n");
    sb.append("    attributeName: ").append(toIndentedString(attributeName)).append("\n");
    sb.append("    attributeValue: ").append(toIndentedString(attributeValue)).append("\n");
    sb.append("    cloudAnchor: ").append(toIndentedString(cloudAnchor)).append("\n");
    sb.append("    connectorId: ").append(toIndentedString(connectorId)).append("\n");
    sb.append("    csObjectId: ").append(toIndentedString(csObjectId)).append("\n");
    sb.append("    dn: ").append(toIndentedString(dn)).append("\n");
    sb.append("    errorCode: ").append(toIndentedString(errorCode)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    lastDirSyncTime: ").append(toIndentedString(lastDirSyncTime)).append("\n");
    sb.append("    maxLimit: ").append(toIndentedString(maxLimit)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    minLimit: ").append(toIndentedString(minLimit)).append("\n");
    sb.append("    modifiedAttributeValue: ").append(toIndentedString(modifiedAttributeValue)).append("\n");
    sb.append("    objectIdConflict: ").append(toIndentedString(objectIdConflict)).append("\n");
    sb.append("    retryCount: ").append(toIndentedString(retryCount)).append("\n");
    sb.append("    runStepResultId: ").append(toIndentedString(runStepResultId)).append("\n");
    sb.append("    samAccountName: ").append(toIndentedString(samAccountName)).append("\n");
    sb.append("    serverErrorDetail: ").append(toIndentedString(serverErrorDetail)).append("\n");
    sb.append("    timeFirstOccured: ").append(toIndentedString(timeFirstOccured)).append("\n");
    sb.append("    timeOccured: ").append(toIndentedString(timeOccured)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("aadDisplayName");
    openapiFields.add("aadDistinguishedName");
    openapiFields.add("aadMail");
    openapiFields.add("aadObjectGuid");
    openapiFields.add("aadObjectType");
    openapiFields.add("aadSourceOfAuthority");
    openapiFields.add("aadUserPrincipalName");
    openapiFields.add("adDisplayName");
    openapiFields.add("adDistinguishedName");
    openapiFields.add("adMail");
    openapiFields.add("adObjectGuid");
    openapiFields.add("adObjectType");
    openapiFields.add("adSourceAnchor");
    openapiFields.add("adSourceOfAuthority");
    openapiFields.add("adUserPrincipalName");
    openapiFields.add("attributeMultiValue");
    openapiFields.add("attributeName");
    openapiFields.add("attributeValue");
    openapiFields.add("cloudAnchor");
    openapiFields.add("connectorId");
    openapiFields.add("csObjectId");
    openapiFields.add("dn");
    openapiFields.add("errorCode");
    openapiFields.add("id");
    openapiFields.add("lastDirSyncTime");
    openapiFields.add("maxLimit");
    openapiFields.add("message");
    openapiFields.add("minLimit");
    openapiFields.add("modifiedAttributeValue");
    openapiFields.add("objectIdConflict");
    openapiFields.add("retryCount");
    openapiFields.add("runStepResultId");
    openapiFields.add("samAccountName");
    openapiFields.add("serverErrorDetail");
    openapiFields.add("timeFirstOccured");
    openapiFields.add("timeOccured");
    openapiFields.add("type");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ExportError
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ExportError.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ExportError is not found in the empty JSON string", ExportError.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ExportError.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ExportError` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("aadDisplayName") != null && !jsonObj.get("aadDisplayName").isJsonNull()) && !jsonObj.get("aadDisplayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `aadDisplayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("aadDisplayName").toString()));
      }
      if ((jsonObj.get("aadDistinguishedName") != null && !jsonObj.get("aadDistinguishedName").isJsonNull()) && !jsonObj.get("aadDistinguishedName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `aadDistinguishedName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("aadDistinguishedName").toString()));
      }
      if ((jsonObj.get("aadMail") != null && !jsonObj.get("aadMail").isJsonNull()) && !jsonObj.get("aadMail").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `aadMail` to be a primitive type in the JSON string but got `%s`", jsonObj.get("aadMail").toString()));
      }
      if ((jsonObj.get("aadObjectGuid") != null && !jsonObj.get("aadObjectGuid").isJsonNull()) && !jsonObj.get("aadObjectGuid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `aadObjectGuid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("aadObjectGuid").toString()));
      }
      if ((jsonObj.get("aadObjectType") != null && !jsonObj.get("aadObjectType").isJsonNull()) && !jsonObj.get("aadObjectType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `aadObjectType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("aadObjectType").toString()));
      }
      if ((jsonObj.get("aadSourceOfAuthority") != null && !jsonObj.get("aadSourceOfAuthority").isJsonNull()) && !jsonObj.get("aadSourceOfAuthority").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `aadSourceOfAuthority` to be a primitive type in the JSON string but got `%s`", jsonObj.get("aadSourceOfAuthority").toString()));
      }
      if ((jsonObj.get("aadUserPrincipalName") != null && !jsonObj.get("aadUserPrincipalName").isJsonNull()) && !jsonObj.get("aadUserPrincipalName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `aadUserPrincipalName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("aadUserPrincipalName").toString()));
      }
      if ((jsonObj.get("adDisplayName") != null && !jsonObj.get("adDisplayName").isJsonNull()) && !jsonObj.get("adDisplayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `adDisplayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("adDisplayName").toString()));
      }
      if ((jsonObj.get("adDistinguishedName") != null && !jsonObj.get("adDistinguishedName").isJsonNull()) && !jsonObj.get("adDistinguishedName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `adDistinguishedName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("adDistinguishedName").toString()));
      }
      if ((jsonObj.get("adMail") != null && !jsonObj.get("adMail").isJsonNull()) && !jsonObj.get("adMail").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `adMail` to be a primitive type in the JSON string but got `%s`", jsonObj.get("adMail").toString()));
      }
      if ((jsonObj.get("adObjectGuid") != null && !jsonObj.get("adObjectGuid").isJsonNull()) && !jsonObj.get("adObjectGuid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `adObjectGuid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("adObjectGuid").toString()));
      }
      if ((jsonObj.get("adObjectType") != null && !jsonObj.get("adObjectType").isJsonNull()) && !jsonObj.get("adObjectType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `adObjectType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("adObjectType").toString()));
      }
      if ((jsonObj.get("adSourceAnchor") != null && !jsonObj.get("adSourceAnchor").isJsonNull()) && !jsonObj.get("adSourceAnchor").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `adSourceAnchor` to be a primitive type in the JSON string but got `%s`", jsonObj.get("adSourceAnchor").toString()));
      }
      if ((jsonObj.get("adSourceOfAuthority") != null && !jsonObj.get("adSourceOfAuthority").isJsonNull()) && !jsonObj.get("adSourceOfAuthority").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `adSourceOfAuthority` to be a primitive type in the JSON string but got `%s`", jsonObj.get("adSourceOfAuthority").toString()));
      }
      if ((jsonObj.get("adUserPrincipalName") != null && !jsonObj.get("adUserPrincipalName").isJsonNull()) && !jsonObj.get("adUserPrincipalName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `adUserPrincipalName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("adUserPrincipalName").toString()));
      }
      if ((jsonObj.get("attributeName") != null && !jsonObj.get("attributeName").isJsonNull()) && !jsonObj.get("attributeName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `attributeName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("attributeName").toString()));
      }
      if ((jsonObj.get("attributeValue") != null && !jsonObj.get("attributeValue").isJsonNull()) && !jsonObj.get("attributeValue").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `attributeValue` to be a primitive type in the JSON string but got `%s`", jsonObj.get("attributeValue").toString()));
      }
      if ((jsonObj.get("cloudAnchor") != null && !jsonObj.get("cloudAnchor").isJsonNull()) && !jsonObj.get("cloudAnchor").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cloudAnchor` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cloudAnchor").toString()));
      }
      if ((jsonObj.get("connectorId") != null && !jsonObj.get("connectorId").isJsonNull()) && !jsonObj.get("connectorId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `connectorId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("connectorId").toString()));
      }
      if ((jsonObj.get("csObjectId") != null && !jsonObj.get("csObjectId").isJsonNull()) && !jsonObj.get("csObjectId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `csObjectId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("csObjectId").toString()));
      }
      if ((jsonObj.get("dn") != null && !jsonObj.get("dn").isJsonNull()) && !jsonObj.get("dn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dn").toString()));
      }
      if ((jsonObj.get("errorCode") != null && !jsonObj.get("errorCode").isJsonNull()) && !jsonObj.get("errorCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `errorCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("errorCode").toString()));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("maxLimit") != null && !jsonObj.get("maxLimit").isJsonNull()) && !jsonObj.get("maxLimit").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `maxLimit` to be a primitive type in the JSON string but got `%s`", jsonObj.get("maxLimit").toString()));
      }
      if ((jsonObj.get("message") != null && !jsonObj.get("message").isJsonNull()) && !jsonObj.get("message").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `message` to be a primitive type in the JSON string but got `%s`", jsonObj.get("message").toString()));
      }
      if ((jsonObj.get("minLimit") != null && !jsonObj.get("minLimit").isJsonNull()) && !jsonObj.get("minLimit").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `minLimit` to be a primitive type in the JSON string but got `%s`", jsonObj.get("minLimit").toString()));
      }
      if ((jsonObj.get("modifiedAttributeValue") != null && !jsonObj.get("modifiedAttributeValue").isJsonNull()) && !jsonObj.get("modifiedAttributeValue").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `modifiedAttributeValue` to be a primitive type in the JSON string but got `%s`", jsonObj.get("modifiedAttributeValue").toString()));
      }
      if ((jsonObj.get("objectIdConflict") != null && !jsonObj.get("objectIdConflict").isJsonNull()) && !jsonObj.get("objectIdConflict").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `objectIdConflict` to be a primitive type in the JSON string but got `%s`", jsonObj.get("objectIdConflict").toString()));
      }
      if ((jsonObj.get("runStepResultId") != null && !jsonObj.get("runStepResultId").isJsonNull()) && !jsonObj.get("runStepResultId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `runStepResultId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("runStepResultId").toString()));
      }
      if ((jsonObj.get("samAccountName") != null && !jsonObj.get("samAccountName").isJsonNull()) && !jsonObj.get("samAccountName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `samAccountName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("samAccountName").toString()));
      }
      if ((jsonObj.get("serverErrorDetail") != null && !jsonObj.get("serverErrorDetail").isJsonNull()) && !jsonObj.get("serverErrorDetail").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `serverErrorDetail` to be a primitive type in the JSON string but got `%s`", jsonObj.get("serverErrorDetail").toString()));
      }
      if ((jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) && !jsonObj.get("type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ExportError.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ExportError' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ExportError> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ExportError.class));

       return (TypeAdapter<T>) new TypeAdapter<ExportError>() {
           @Override
           public void write(JsonWriter out, ExportError value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ExportError read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ExportError given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ExportError
   * @throws IOException if the JSON string is invalid with respect to ExportError
   */
  public static ExportError fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ExportError.class);
  }

  /**
   * Convert an instance of ExportError to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

