/*
 * ADHybridHealthService
 * REST APIs for Azure Active Directory Connect Health
 *
 * The version of the OpenAPI document: 2014-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Connectors;
import org.openapitools.client.model.Credentials;
import org.openapitools.client.model.DataFreshnessDetails;
import org.openapitools.client.model.ExportStatuses;
import org.openapitools.client.model.GlobalConfigurations;
import org.openapitools.client.model.ServiceConfiguration;
import org.openapitools.client.model.ServiceMember;
import org.openapitools.client.model.ServiceMembers;
import java.util.UUID;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ServiceMembersApi
 */
@Disabled
public class ServiceMembersApiTest {

    private final ServiceMembersApi api = new ServiceMembersApi();

    /**
     * Onboards  a server, for a given service, to Azure Active Directory Connect Health Service.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void serviceMembersAddTest() throws ApiException {
        String serviceName = null;
        String apiVersion = null;
        ServiceMember serviceMember = null;
        ServiceMember response = api.serviceMembersAdd(serviceName, apiVersion, serviceMember);
        // TODO: test validations
    }

    /**
     * Deletes a server that has been onboarded to Azure Active Directory Connect Health Service.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void serviceMembersDeleteTest() throws ApiException {
        String serviceName = null;
        UUID serviceMemberId = null;
        String apiVersion = null;
        Boolean confirm = null;
        api.serviceMembersDelete(serviceName, serviceMemberId, apiVersion, confirm);
        // TODO: test validations
    }

    /**
     * Deletes the data uploaded by the server to Azure Active Directory Connect Health Service.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void serviceMembersDeleteDataTest() throws ApiException {
        String serviceName = null;
        UUID serviceMemberId = null;
        String apiVersion = null;
        api.serviceMembersDeleteData(serviceName, serviceMemberId, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets the details of a server, for a given service, that are onboarded to Azure Active Directory Connect Health Service.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void serviceMembersGetTest() throws ApiException {
        String serviceName = null;
        UUID serviceMemberId = null;
        String apiVersion = null;
        ServiceMember response = api.serviceMembersGet(serviceName, serviceMemberId, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets the service configuration.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void serviceMembersGetServiceConfigurationTest() throws ApiException {
        String serviceName = null;
        String serviceMemberId = null;
        String apiVersion = null;
        ServiceConfiguration response = api.serviceMembersGetServiceConfiguration(serviceName, serviceMemberId, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets the details of the servers, for a given service, that are onboarded to Azure Active Directory Connect Health Service.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void serviceMembersListTest() throws ApiException {
        String serviceName = null;
        String apiVersion = null;
        String $filter = null;
        String dimensionType = null;
        String dimensionSignature = null;
        ServiceMembers response = api.serviceMembersList(serviceName, apiVersion, $filter, dimensionType, dimensionSignature);
        // TODO: test validations
    }

    /**
     * Gets the connector details for a service.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void serviceMembersListConnectorsTest() throws ApiException {
        String serviceName = null;
        UUID serviceMemberId = null;
        String apiVersion = null;
        Connectors response = api.serviceMembersListConnectors(serviceName, serviceMemberId, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets the credentials of the server which is needed by the agent to connect to Azure Active Directory Connect Health Service.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void serviceMembersListCredentialsTest() throws ApiException {
        String serviceName = null;
        UUID serviceMemberId = null;
        String apiVersion = null;
        String $filter = null;
        Credentials response = api.serviceMembersListCredentials(serviceName, serviceMemberId, apiVersion, $filter);
        // TODO: test validations
    }

    /**
     * Gets the last time when the server uploaded data to Azure Active Directory Connect Health Service.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void serviceMembersListDataFreshnessTest() throws ApiException {
        String serviceName = null;
        UUID serviceMemberId = null;
        String apiVersion = null;
        DataFreshnessDetails response = api.serviceMembersListDataFreshness(serviceName, serviceMemberId, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets the export status.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void serviceMembersListExportStatusTest() throws ApiException {
        String serviceName = null;
        UUID serviceMemberId = null;
        String apiVersion = null;
        ExportStatuses response = api.serviceMembersListExportStatus(serviceName, serviceMemberId, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets the global configuration.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void serviceMembersListGlobalConfigurationTest() throws ApiException {
        String serviceName = null;
        String serviceMemberId = null;
        String apiVersion = null;
        GlobalConfigurations response = api.serviceMembersListGlobalConfiguration(serviceName, serviceMemberId, apiVersion);
        // TODO: test validations
    }

}
