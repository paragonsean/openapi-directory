/*
 * ADHybridHealthService
 * REST APIs for Azure Active Directory Connect Health
 *
 * The version of the OpenAPI document: 2014-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for PasswordManagementSettings
 */
public class PasswordManagementSettingsTest {
    private final PasswordManagementSettings model = new PasswordManagementSettings();

    /**
     * Model tests for PasswordManagementSettings
     */
    @Test
    public void testPasswordManagementSettings() {
        // TODO: test PasswordManagementSettings
    }

    /**
     * Test the property 'connectTo'
     */
    @Test
    public void connectToTest() {
        // TODO: test connectTo
    }

    /**
     * Test the property 'connectionTimeout'
     */
    @Test
    public void connectionTimeoutTest() {
        // TODO: test connectionTimeout
    }

    /**
     * Test the property 'enabled'
     */
    @Test
    public void enabledTest() {
        // TODO: test enabled
    }

    /**
     * Test the property 'extensionFilePath'
     */
    @Test
    public void extensionFilePathTest() {
        // TODO: test extensionFilePath
    }

    /**
     * Test the property 'maximumRetryCount'
     */
    @Test
    public void maximumRetryCountTest() {
        // TODO: test maximumRetryCount
    }

    /**
     * Test the property 'requiresSecureConnection'
     */
    @Test
    public void requiresSecureConnectionTest() {
        // TODO: test requiresSecureConnection
    }

    /**
     * Test the property 'retryIntervalInSeconds'
     */
    @Test
    public void retryIntervalInSecondsTest() {
        // TODO: test retryIntervalInSeconds
    }

    /**
     * Test the property 'supportedPasswordOperations'
     */
    @Test
    public void supportedPasswordOperationsTest() {
        // TODO: test supportedPasswordOperations
    }

    /**
     * Test the property 'unlockAccount'
     */
    @Test
    public void unlockAccountTest() {
        // TODO: test unlockAccount
    }

    /**
     * Test the property 'user'
     */
    @Test
    public void userTest() {
        // TODO: test user
    }

}
