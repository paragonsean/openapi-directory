/*
 * ADHybridHealthService
 * REST APIs for Azure Active Directory Connect Health
 *
 * The version of the OpenAPI document: 2014-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AddsConfiguration;
import org.openapitools.client.model.AddsServiceMembers;
import org.openapitools.client.model.Alerts;
import org.openapitools.client.model.Credentials;
import org.openapitools.client.model.Dimensions;
import org.openapitools.client.model.ForestSummary;
import org.openapitools.client.model.MetricMetadata;
import org.openapitools.client.model.MetricMetadataList;
import org.openapitools.client.model.MetricSets;
import org.openapitools.client.model.Metrics;
import java.time.OffsetDateTime;
import org.openapitools.client.model.ReplicationDetailsList;
import org.openapitools.client.model.ReplicationStatus;
import org.openapitools.client.model.ReplicationSummaryList;
import org.openapitools.client.model.ServiceMember;
import org.openapitools.client.model.ServiceMembers;
import org.openapitools.client.model.ServiceProperties;
import org.openapitools.client.model.Services;
import java.util.UUID;
import org.openapitools.client.model.UserPreference;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AddsApi
 */
@Disabled
public class AddsApiTest {

    private final AddsApi api = new AddsApi();

    /**
     * Gets the details of the servers, for a given Active Directory Domain Service, that are onboarded to Azure Active Directory Connect Health.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void adDomainServiceMembersListTest() throws ApiException {
        String serviceName = null;
        Boolean isGroupbySite = null;
        String nextPartitionKey = null;
        String nextRowKey = null;
        String apiVersion = null;
        String $filter = null;
        String query = null;
        Integer takeCount = null;
        AddsServiceMembers response = api.adDomainServiceMembersList(serviceName, isGroupbySite, nextPartitionKey, nextRowKey, apiVersion, $filter, query, takeCount);
        // TODO: test validations
    }

    /**
     * Gets the server related metrics for a given metric and group combination.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addsServiceGetMetricsTest() throws ApiException {
        String serviceName = null;
        String metricName = null;
        String groupName = null;
        String apiVersion = null;
        String groupKey = null;
        OffsetDateTime fromDate = null;
        OffsetDateTime toDate = null;
        MetricSets response = api.addsServiceGetMetrics(serviceName, metricName, groupName, apiVersion, groupKey, fromDate, toDate);
        // TODO: test validations
    }

    /**
     * Deletes a Active Directory Domain Controller server that has been onboarded to Azure Active Directory Connect Health Service.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addsServiceMembersDeleteTest() throws ApiException {
        String serviceName = null;
        UUID serviceMemberId = null;
        String apiVersion = null;
        Boolean confirm = null;
        api.addsServiceMembersDelete(serviceName, serviceMemberId, apiVersion, confirm);
        // TODO: test validations
    }

    /**
     * Gets the details of a server, for a given Active Directory Domain Controller service, that are onboarded to Azure Active Directory Connect Health Service.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addsServiceMembersGetTest() throws ApiException {
        String serviceName = null;
        UUID serviceMemberId = null;
        String apiVersion = null;
        ServiceMember response = api.addsServiceMembersGet(serviceName, serviceMemberId, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets the details of the Active Directory Domain servers, for a given Active Directory Domain Service, that are onboarded to Azure Active Directory Connect Health.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addsServiceMembersListTest() throws ApiException {
        String serviceName = null;
        String apiVersion = null;
        String $filter = null;
        AddsServiceMembers response = api.addsServiceMembersList(serviceName, apiVersion, $filter);
        // TODO: test validations
    }

    /**
     * Gets the credentials of the server which is needed by the agent to connect to Azure Active Directory Connect Health Service.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addsServiceMembersListCredentialsTest() throws ApiException {
        String serviceName = null;
        UUID serviceMemberId = null;
        String apiVersion = null;
        String $filter = null;
        Credentials response = api.addsServiceMembersListCredentials(serviceName, serviceMemberId, apiVersion, $filter);
        // TODO: test validations
    }

    /**
     * Onboards a service for a given tenant in Azure Active Directory Connect Health.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addsServicesAddTest() throws ApiException {
        String apiVersion = null;
        ServiceProperties service = null;
        ServiceProperties response = api.addsServicesAdd(apiVersion, service);
        // TODO: test validations
    }

    /**
     * Gets the forest summary for a given Active Directory Domain Service, that is onboarded to Azure Active Directory Connect Health.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addsServicesGetForestSummaryTest() throws ApiException {
        String serviceName = null;
        String apiVersion = null;
        ForestSummary response = api.addsServicesGetForestSummary(serviceName, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets the service related metric information.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addsServicesGetMetricMetadataTest() throws ApiException {
        String serviceName = null;
        String metricName = null;
        String apiVersion = null;
        MetricMetadata response = api.addsServicesGetMetricMetadata(serviceName, metricName, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets the service related metrics for a given metric and group combination.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addsServicesGetMetricMetadataForGroupTest() throws ApiException {
        String serviceName = null;
        String metricName = null;
        String groupName = null;
        String apiVersion = null;
        String groupKey = null;
        OffsetDateTime fromDate = null;
        OffsetDateTime toDate = null;
        MetricSets response = api.addsServicesGetMetricMetadataForGroup(serviceName, metricName, groupName, apiVersion, groupKey, fromDate, toDate);
        // TODO: test validations
    }

    /**
     * Gets the details of Active Directory Domain Service, for a tenant, that are onboarded to Azure Active Directory Connect Health.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addsServicesListTest() throws ApiException {
        String apiVersion = null;
        String $filter = null;
        String serviceType = null;
        Integer skipCount = null;
        Integer takeCount = null;
        Services response = api.addsServicesList(apiVersion, $filter, serviceType, skipCount, takeCount);
        // TODO: test validations
    }

    /**
     * Gets the service related metrics information.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addsServicesListMetricMetadataTest() throws ApiException {
        String serviceName = null;
        String apiVersion = null;
        String $filter = null;
        Boolean perfCounter = null;
        MetricMetadataList response = api.addsServicesListMetricMetadata(serviceName, apiVersion, $filter, perfCounter);
        // TODO: test validations
    }

    /**
     * Gets the average of the metric values for a given metric and group combination.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addsServicesListMetricsAverageTest() throws ApiException {
        String serviceName = null;
        String metricName = null;
        String groupName = null;
        String apiVersion = null;
        Metrics response = api.addsServicesListMetricsAverage(serviceName, metricName, groupName, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets the sum of the metric values for a given metric and group combination.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addsServicesListMetricsSumTest() throws ApiException {
        String serviceName = null;
        String metricName = null;
        String groupName = null;
        String apiVersion = null;
        Metrics response = api.addsServicesListMetricsSum(serviceName, metricName, groupName, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets complete domain controller list along with replication details for a given Active Directory Domain Service, that is onboarded to Azure Active Directory Connect Health.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addsServicesListReplicationDetailsTest() throws ApiException {
        String serviceName = null;
        String apiVersion = null;
        String $filter = null;
        Boolean withDetails = null;
        ReplicationDetailsList response = api.addsServicesListReplicationDetails(serviceName, apiVersion, $filter, withDetails);
        // TODO: test validations
    }

    /**
     * Gets complete domain controller list along with replication details for a given Active Directory Domain Service, that is onboarded to Azure Active Directory Connect Health.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addsServicesListReplicationSummaryTest() throws ApiException {
        String serviceName = null;
        Boolean isGroupbySite = null;
        String query = null;
        String nextPartitionKey = null;
        String nextRowKey = null;
        String apiVersion = null;
        String $filter = null;
        Integer takeCount = null;
        ReplicationSummaryList response = api.addsServicesListReplicationSummary(serviceName, isGroupbySite, query, nextPartitionKey, nextRowKey, apiVersion, $filter, takeCount);
        // TODO: test validations
    }

    /**
     * Gets the details of an alert for a given Active Directory Domain Controller service and server combination.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addsServicesListServerAlertsTest() throws ApiException {
        UUID serviceMemberId = null;
        String serviceName = null;
        String apiVersion = null;
        String $filter = null;
        String state = null;
        OffsetDateTime from = null;
        OffsetDateTime to = null;
        Alerts response = api.addsServicesListServerAlerts(serviceMemberId, serviceName, apiVersion, $filter, state, from, to);
        // TODO: test validations
    }

    /**
     * Gets Replication status for a given Active Directory Domain Service, that is onboarded to Azure Active Directory Connect Health.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addsServicesReplicationStatusGetTest() throws ApiException {
        String serviceName = null;
        String apiVersion = null;
        ReplicationStatus response = api.addsServicesReplicationStatusGet(serviceName, apiVersion);
        // TODO: test validations
    }

    /**
     * Onboards  a server, for a given Active Directory Domain Controller service, to Azure Active Directory Connect Health Service.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addsServicesServiceMembersAddTest() throws ApiException {
        String serviceName = null;
        String apiVersion = null;
        ServiceMember serviceMember = null;
        ServiceMember response = api.addsServicesServiceMembersAdd(serviceName, apiVersion, serviceMember);
        // TODO: test validations
    }

    /**
     * Gets the details of the servers, for a given Active Directory Domain Controller service, that are onboarded to Azure Active Directory Connect Health Service.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addsServicesServiceMembersListTest() throws ApiException {
        String serviceName = null;
        String apiVersion = null;
        String $filter = null;
        String dimensionType = null;
        String dimensionSignature = null;
        ServiceMembers response = api.addsServicesServiceMembersList(serviceName, apiVersion, $filter, dimensionType, dimensionSignature);
        // TODO: test validations
    }

    /**
     * Adds the user preferences for a given feature.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addsServicesUserPreferenceAddTest() throws ApiException {
        String serviceName = null;
        String featureName = null;
        String apiVersion = null;
        UserPreference setting = null;
        api.addsServicesUserPreferenceAdd(serviceName, featureName, apiVersion, setting);
        // TODO: test validations
    }

    /**
     * Deletes the user preferences for a given feature.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addsServicesUserPreferenceDeleteTest() throws ApiException {
        String serviceName = null;
        String featureName = null;
        String apiVersion = null;
        api.addsServicesUserPreferenceDelete(serviceName, featureName, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets the user preferences for a given feature.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addsServicesUserPreferenceGetTest() throws ApiException {
        String serviceName = null;
        String featureName = null;
        String apiVersion = null;
        UserPreference response = api.addsServicesUserPreferenceGet(serviceName, featureName, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets the alerts for a given Active Directory Domain Service.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void alertsListAddsAlertsTest() throws ApiException {
        String serviceName = null;
        String apiVersion = null;
        String $filter = null;
        String state = null;
        OffsetDateTime from = null;
        OffsetDateTime to = null;
        Alerts response = api.alertsListAddsAlerts(serviceName, apiVersion, $filter, state, from, to);
        // TODO: test validations
    }

    /**
     * Gets the service configurations.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void configurationListAddsConfigurationsTest() throws ApiException {
        String serviceName = null;
        String grouping = null;
        AddsConfiguration response = api.configurationListAddsConfigurations(serviceName, grouping);
        // TODO: test validations
    }

    /**
     * Gets the dimensions for a given dimension type in a server.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dimensionsListAddsDimensionsTest() throws ApiException {
        String serviceName = null;
        String dimension = null;
        String apiVersion = null;
        Dimensions response = api.dimensionsListAddsDimensions(serviceName, dimension, apiVersion);
        // TODO: test validations
    }

}
