/*
 * ADHybridHealthService
 * REST APIs for Azure Active Directory Connect Health
 *
 * The version of the OpenAPI document: 2014-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ConnectorMetadata;
import org.openapitools.client.model.MetricMetadata;
import org.openapitools.client.model.MetricMetadataList;
import org.openapitools.client.model.MetricSets;
import org.openapitools.client.model.Metrics;
import java.time.OffsetDateTime;
import java.util.UUID;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for MetricsApi
 */
@Disabled
public class MetricsApiTest {

    private final MetricsApi api = new MetricsApi();

    /**
     * Gets the server related metrics for a given metric and group combination.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void serviceGetMetricsTest() throws ApiException {
        String serviceName = null;
        String metricName = null;
        String groupName = null;
        String apiVersion = null;
        String groupKey = null;
        OffsetDateTime fromDate = null;
        OffsetDateTime toDate = null;
        MetricSets response = api.serviceGetMetrics(serviceName, metricName, groupName, apiVersion, groupKey, fromDate, toDate);
        // TODO: test validations
    }

    /**
     * Gets the list of connectors and run profile names.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void serviceMembersGetConnectorMetadataTest() throws ApiException {
        String serviceName = null;
        UUID serviceMemberId = null;
        String metricName = null;
        String apiVersion = null;
        ConnectorMetadata response = api.serviceMembersGetConnectorMetadata(serviceName, serviceMemberId, metricName, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets the server related metrics for a given metric and group combination.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void serviceMembersGetMetricsTest() throws ApiException {
        String serviceName = null;
        String metricName = null;
        String groupName = null;
        UUID serviceMemberId = null;
        String apiVersion = null;
        String groupKey = null;
        OffsetDateTime fromDate = null;
        OffsetDateTime toDate = null;
        MetricSets response = api.serviceMembersGetMetrics(serviceName, metricName, groupName, serviceMemberId, apiVersion, groupKey, fromDate, toDate);
        // TODO: test validations
    }

    /**
     * Gets the service related metrics information.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void servicesGetMetricMetadataTest() throws ApiException {
        String serviceName = null;
        String metricName = null;
        String apiVersion = null;
        MetricMetadata response = api.servicesGetMetricMetadata(serviceName, metricName, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets the service related metrics for a given metric and group combination.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void servicesGetMetricMetadataForGroupTest() throws ApiException {
        String serviceName = null;
        String metricName = null;
        String groupName = null;
        String apiVersion = null;
        String groupKey = null;
        OffsetDateTime fromDate = null;
        OffsetDateTime toDate = null;
        MetricSets response = api.servicesGetMetricMetadataForGroup(serviceName, metricName, groupName, apiVersion, groupKey, fromDate, toDate);
        // TODO: test validations
    }

    /**
     * Gets the service related metrics information.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void servicesListMetricMetadataTest() throws ApiException {
        String serviceName = null;
        String apiVersion = null;
        String $filter = null;
        Boolean perfCounter = null;
        MetricMetadataList response = api.servicesListMetricMetadata(serviceName, apiVersion, $filter, perfCounter);
        // TODO: test validations
    }

    /**
     * Gets the average of the metric values for a given metric and group combination.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void servicesListMetricsAverageTest() throws ApiException {
        String serviceName = null;
        String metricName = null;
        String groupName = null;
        String apiVersion = null;
        Metrics response = api.servicesListMetricsAverage(serviceName, metricName, groupName, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets the sum of the metric values for a given metric and group combination.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void servicesListMetricsSumTest() throws ApiException {
        String serviceName = null;
        String metricName = null;
        String groupName = null;
        String apiVersion = null;
        Metrics response = api.servicesListMetricsSum(serviceName, metricName, groupName, apiVersion);
        // TODO: test validations
    }

}
