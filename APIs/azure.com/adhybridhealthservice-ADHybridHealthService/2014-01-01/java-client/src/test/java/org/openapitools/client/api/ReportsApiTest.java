/*
 * ADHybridHealthService
 * REST APIs for Azure Active Directory Connect Health
 *
 * The version of the OpenAPI document: 2014-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ErrorReportUsersEntries;
import org.openapitools.client.model.RiskyIPBlobUris;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ReportsApi
 */
@Disabled
public class ReportsApiTest {

    private final ReportsApi api = new ReportsApi();

    /**
     * Gets all Risky IP report URIs for the last 7 days.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void servicesListAllRiskyIpDownloadReportTest() throws ApiException {
        String serviceName = null;
        String apiVersion = null;
        RiskyIPBlobUris response = api.servicesListAllRiskyIpDownloadReport(serviceName, apiVersion);
        // TODO: test validations
    }

    /**
     * Initiate the generation of a new Risky IP report. Returns the URI for the new one.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void servicesListCurrentRiskyIpDownloadReportTest() throws ApiException {
        String serviceName = null;
        String apiVersion = null;
        RiskyIPBlobUris response = api.servicesListCurrentRiskyIpDownloadReport(serviceName, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets the bad password login attempt report for an user
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void servicesListUserBadPasswordReportTest() throws ApiException {
        String serviceName = null;
        String apiVersion = null;
        String dataSource = null;
        ErrorReportUsersEntries response = api.servicesListUserBadPasswordReport(serviceName, apiVersion, dataSource);
        // TODO: test validations
    }

}
