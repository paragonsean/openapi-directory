/**
 * ComputeManagementClient
 * The Compute Management Client.
 *
 * The version of the OpenAPI document: 2019-04-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ResourceSkuCosts model module.
 * @module model/ResourceSkuCosts
 * @version 2019-04-01
 */
class ResourceSkuCosts {
    /**
     * Constructs a new <code>ResourceSkuCosts</code>.
     * Describes metadata for retrieving price info.
     * @alias module:model/ResourceSkuCosts
     */
    constructor() { 
        
        ResourceSkuCosts.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ResourceSkuCosts</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ResourceSkuCosts} obj Optional instance to populate.
     * @return {module:model/ResourceSkuCosts} The populated <code>ResourceSkuCosts</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ResourceSkuCosts();

            if (data.hasOwnProperty('extendedUnit')) {
                obj['extendedUnit'] = ApiClient.convertToType(data['extendedUnit'], 'String');
            }
            if (data.hasOwnProperty('meterID')) {
                obj['meterID'] = ApiClient.convertToType(data['meterID'], 'String');
            }
            if (data.hasOwnProperty('quantity')) {
                obj['quantity'] = ApiClient.convertToType(data['quantity'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ResourceSkuCosts</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ResourceSkuCosts</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['extendedUnit'] && !(typeof data['extendedUnit'] === 'string' || data['extendedUnit'] instanceof String)) {
            throw new Error("Expected the field `extendedUnit` to be a primitive type in the JSON string but got " + data['extendedUnit']);
        }
        // ensure the json data is a string
        if (data['meterID'] && !(typeof data['meterID'] === 'string' || data['meterID'] instanceof String)) {
            throw new Error("Expected the field `meterID` to be a primitive type in the JSON string but got " + data['meterID']);
        }

        return true;
    }


}



/**
 * An invariant to show the extended unit.
 * @member {String} extendedUnit
 */
ResourceSkuCosts.prototype['extendedUnit'] = undefined;

/**
 * Used for querying price from commerce.
 * @member {String} meterID
 */
ResourceSkuCosts.prototype['meterID'] = undefined;

/**
 * The multiplier is needed to extend the base metered cost.
 * @member {Number} quantity
 */
ResourceSkuCosts.prototype['quantity'] = undefined;






export default ResourceSkuCosts;

