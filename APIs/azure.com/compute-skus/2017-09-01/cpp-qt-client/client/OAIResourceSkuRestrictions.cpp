/**
 * ComputeManagementClient
 * The Compute Management Client.
 *
 * The version of the OpenAPI document: 2017-09-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIResourceSkuRestrictions.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIResourceSkuRestrictions::OAIResourceSkuRestrictions(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIResourceSkuRestrictions::OAIResourceSkuRestrictions() {
    this->initializeModel();
}

OAIResourceSkuRestrictions::~OAIResourceSkuRestrictions() {}

void OAIResourceSkuRestrictions::initializeModel() {

    m_reason_code_isSet = false;
    m_reason_code_isValid = false;

    m_restriction_info_isSet = false;
    m_restriction_info_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;

    m_values_isSet = false;
    m_values_isValid = false;
}

void OAIResourceSkuRestrictions::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIResourceSkuRestrictions::fromJsonObject(QJsonObject json) {

    m_reason_code_isValid = ::OpenAPI::fromJsonValue(m_reason_code, json[QString("reasonCode")]);
    m_reason_code_isSet = !json[QString("reasonCode")].isNull() && m_reason_code_isValid;

    m_restriction_info_isValid = ::OpenAPI::fromJsonValue(m_restriction_info, json[QString("restrictionInfo")]);
    m_restriction_info_isSet = !json[QString("restrictionInfo")].isNull() && m_restriction_info_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;

    m_values_isValid = ::OpenAPI::fromJsonValue(m_values, json[QString("values")]);
    m_values_isSet = !json[QString("values")].isNull() && m_values_isValid;
}

QString OAIResourceSkuRestrictions::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIResourceSkuRestrictions::asJsonObject() const {
    QJsonObject obj;
    if (m_reason_code_isSet) {
        obj.insert(QString("reasonCode"), ::OpenAPI::toJsonValue(m_reason_code));
    }
    if (m_restriction_info.isSet()) {
        obj.insert(QString("restrictionInfo"), ::OpenAPI::toJsonValue(m_restriction_info));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    if (m_values.size() > 0) {
        obj.insert(QString("values"), ::OpenAPI::toJsonValue(m_values));
    }
    return obj;
}

QString OAIResourceSkuRestrictions::getReasonCode() const {
    return m_reason_code;
}
void OAIResourceSkuRestrictions::setReasonCode(const QString &reason_code) {
    m_reason_code = reason_code;
    m_reason_code_isSet = true;
}

bool OAIResourceSkuRestrictions::is_reason_code_Set() const{
    return m_reason_code_isSet;
}

bool OAIResourceSkuRestrictions::is_reason_code_Valid() const{
    return m_reason_code_isValid;
}

OAIResourceSkuRestrictionInfo OAIResourceSkuRestrictions::getRestrictionInfo() const {
    return m_restriction_info;
}
void OAIResourceSkuRestrictions::setRestrictionInfo(const OAIResourceSkuRestrictionInfo &restriction_info) {
    m_restriction_info = restriction_info;
    m_restriction_info_isSet = true;
}

bool OAIResourceSkuRestrictions::is_restriction_info_Set() const{
    return m_restriction_info_isSet;
}

bool OAIResourceSkuRestrictions::is_restriction_info_Valid() const{
    return m_restriction_info_isValid;
}

QString OAIResourceSkuRestrictions::getType() const {
    return m_type;
}
void OAIResourceSkuRestrictions::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIResourceSkuRestrictions::is_type_Set() const{
    return m_type_isSet;
}

bool OAIResourceSkuRestrictions::is_type_Valid() const{
    return m_type_isValid;
}

QList<QString> OAIResourceSkuRestrictions::getValues() const {
    return m_values;
}
void OAIResourceSkuRestrictions::setValues(const QList<QString> &values) {
    m_values = values;
    m_values_isSet = true;
}

bool OAIResourceSkuRestrictions::is_values_Set() const{
    return m_values_isSet;
}

bool OAIResourceSkuRestrictions::is_values_Valid() const{
    return m_values_isValid;
}

bool OAIResourceSkuRestrictions::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_reason_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_restriction_info.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_values.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIResourceSkuRestrictions::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
