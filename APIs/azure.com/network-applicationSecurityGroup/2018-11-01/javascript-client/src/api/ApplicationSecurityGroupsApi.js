/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2018-11-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ApplicationSecurityGroup from '../model/ApplicationSecurityGroup';
import ApplicationSecurityGroupListResult from '../model/ApplicationSecurityGroupListResult';
import ApplicationSecurityGroupsUpdateTagsRequest from '../model/ApplicationSecurityGroupsUpdateTagsRequest';

/**
* ApplicationSecurityGroups service.
* @module api/ApplicationSecurityGroupsApi
* @version 2018-11-01
*/
export default class ApplicationSecurityGroupsApi {

    /**
    * Constructs a new ApplicationSecurityGroupsApi. 
    * @alias module:api/ApplicationSecurityGroupsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the applicationSecurityGroupsCreateOrUpdate operation.
     * @callback module:api/ApplicationSecurityGroupsApi~applicationSecurityGroupsCreateOrUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApplicationSecurityGroup} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates or updates an application security group.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} applicationSecurityGroupName The name of the application security group.
     * @param {String} apiVersion Client API version.
     * @param {String} subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:model/ApplicationSecurityGroup} parameters Parameters supplied to the create or update ApplicationSecurityGroup operation.
     * @param {module:api/ApplicationSecurityGroupsApi~applicationSecurityGroupsCreateOrUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApplicationSecurityGroup}
     */
    applicationSecurityGroupsCreateOrUpdate(resourceGroupName, applicationSecurityGroupName, apiVersion, subscriptionId, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling applicationSecurityGroupsCreateOrUpdate");
      }
      // verify the required parameter 'applicationSecurityGroupName' is set
      if (applicationSecurityGroupName === undefined || applicationSecurityGroupName === null) {
        throw new Error("Missing the required parameter 'applicationSecurityGroupName' when calling applicationSecurityGroupsCreateOrUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling applicationSecurityGroupsCreateOrUpdate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling applicationSecurityGroupsCreateOrUpdate");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling applicationSecurityGroupsCreateOrUpdate");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'applicationSecurityGroupName': applicationSecurityGroupName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ApplicationSecurityGroup;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationSecurityGroups/{applicationSecurityGroupName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the applicationSecurityGroupsDelete operation.
     * @callback module:api/ApplicationSecurityGroupsApi~applicationSecurityGroupsDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes the specified application security group.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} applicationSecurityGroupName The name of the application security group.
     * @param {String} apiVersion Client API version.
     * @param {String} subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/ApplicationSecurityGroupsApi~applicationSecurityGroupsDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    applicationSecurityGroupsDelete(resourceGroupName, applicationSecurityGroupName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling applicationSecurityGroupsDelete");
      }
      // verify the required parameter 'applicationSecurityGroupName' is set
      if (applicationSecurityGroupName === undefined || applicationSecurityGroupName === null) {
        throw new Error("Missing the required parameter 'applicationSecurityGroupName' when calling applicationSecurityGroupsDelete");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling applicationSecurityGroupsDelete");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling applicationSecurityGroupsDelete");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'applicationSecurityGroupName': applicationSecurityGroupName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationSecurityGroups/{applicationSecurityGroupName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the applicationSecurityGroupsGet operation.
     * @callback module:api/ApplicationSecurityGroupsApi~applicationSecurityGroupsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApplicationSecurityGroup} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets information about the specified application security group.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} applicationSecurityGroupName The name of the application security group.
     * @param {String} apiVersion Client API version.
     * @param {String} subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/ApplicationSecurityGroupsApi~applicationSecurityGroupsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApplicationSecurityGroup}
     */
    applicationSecurityGroupsGet(resourceGroupName, applicationSecurityGroupName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling applicationSecurityGroupsGet");
      }
      // verify the required parameter 'applicationSecurityGroupName' is set
      if (applicationSecurityGroupName === undefined || applicationSecurityGroupName === null) {
        throw new Error("Missing the required parameter 'applicationSecurityGroupName' when calling applicationSecurityGroupsGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling applicationSecurityGroupsGet");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling applicationSecurityGroupsGet");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'applicationSecurityGroupName': applicationSecurityGroupName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ApplicationSecurityGroup;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationSecurityGroups/{applicationSecurityGroupName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the applicationSecurityGroupsList operation.
     * @callback module:api/ApplicationSecurityGroupsApi~applicationSecurityGroupsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApplicationSecurityGroupListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets all the application security groups in a resource group.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} apiVersion Client API version.
     * @param {String} subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/ApplicationSecurityGroupsApi~applicationSecurityGroupsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApplicationSecurityGroupListResult}
     */
    applicationSecurityGroupsList(resourceGroupName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling applicationSecurityGroupsList");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling applicationSecurityGroupsList");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling applicationSecurityGroupsList");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ApplicationSecurityGroupListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationSecurityGroups', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the applicationSecurityGroupsListAll operation.
     * @callback module:api/ApplicationSecurityGroupsApi~applicationSecurityGroupsListAllCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApplicationSecurityGroupListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets all application security groups in a subscription.
     * @param {String} apiVersion Client API version.
     * @param {String} subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/ApplicationSecurityGroupsApi~applicationSecurityGroupsListAllCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApplicationSecurityGroupListResult}
     */
    applicationSecurityGroupsListAll(apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling applicationSecurityGroupsListAll");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling applicationSecurityGroupsListAll");
      }

      let pathParams = {
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ApplicationSecurityGroupListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.Network/applicationSecurityGroups', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the applicationSecurityGroupsUpdateTags operation.
     * @callback module:api/ApplicationSecurityGroupsApi~applicationSecurityGroupsUpdateTagsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApplicationSecurityGroup} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates an application security group's tags.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} applicationSecurityGroupName The name of the application security group.
     * @param {String} apiVersion Client API version.
     * @param {String} subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:model/ApplicationSecurityGroupsUpdateTagsRequest} parameters Parameters supplied to update application security group tags.
     * @param {module:api/ApplicationSecurityGroupsApi~applicationSecurityGroupsUpdateTagsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApplicationSecurityGroup}
     */
    applicationSecurityGroupsUpdateTags(resourceGroupName, applicationSecurityGroupName, apiVersion, subscriptionId, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling applicationSecurityGroupsUpdateTags");
      }
      // verify the required parameter 'applicationSecurityGroupName' is set
      if (applicationSecurityGroupName === undefined || applicationSecurityGroupName === null) {
        throw new Error("Missing the required parameter 'applicationSecurityGroupName' when calling applicationSecurityGroupsUpdateTags");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling applicationSecurityGroupsUpdateTags");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling applicationSecurityGroupsUpdateTags");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling applicationSecurityGroupsUpdateTags");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'applicationSecurityGroupName': applicationSecurityGroupName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ApplicationSecurityGroup;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationSecurityGroups/{applicationSecurityGroupName}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
