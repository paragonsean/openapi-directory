# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.virtual_machine_size import VirtualMachineSize
from openapi_server import util


class VirtualMachineSizeListResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, aml_compute: List[VirtualMachineSize]=None):
        """VirtualMachineSizeListResult - a model defined in OpenAPI

        :param aml_compute: The aml_compute of this VirtualMachineSizeListResult.
        """
        self.openapi_types = {
            'aml_compute': List[VirtualMachineSize]
        }

        self.attribute_map = {
            'aml_compute': 'amlCompute'
        }

        self._aml_compute = aml_compute

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VirtualMachineSizeListResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VirtualMachineSizeListResult of this VirtualMachineSizeListResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def aml_compute(self):
        """Gets the aml_compute of this VirtualMachineSizeListResult.

        The list of virtual machine sizes supported by AmlCompute.

        :return: The aml_compute of this VirtualMachineSizeListResult.
        :rtype: List[VirtualMachineSize]
        """
        return self._aml_compute

    @aml_compute.setter
    def aml_compute(self, aml_compute):
        """Sets the aml_compute of this VirtualMachineSizeListResult.

        The list of virtual machine sizes supported by AmlCompute.

        :param aml_compute: The aml_compute of this VirtualMachineSizeListResult.
        :type aml_compute: List[VirtualMachineSize]
        """

        self._aml_compute = aml_compute
