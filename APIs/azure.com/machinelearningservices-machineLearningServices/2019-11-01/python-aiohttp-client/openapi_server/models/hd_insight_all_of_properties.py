# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.virtual_machine_ssh_credentials import VirtualMachineSshCredentials
from openapi_server import util


class HDInsightAllOfProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, address: str=None, administrator_account: VirtualMachineSshCredentials=None, ssh_port: int=None):
        """HDInsightAllOfProperties - a model defined in OpenAPI

        :param address: The address of this HDInsightAllOfProperties.
        :param administrator_account: The administrator_account of this HDInsightAllOfProperties.
        :param ssh_port: The ssh_port of this HDInsightAllOfProperties.
        """
        self.openapi_types = {
            'address': str,
            'administrator_account': VirtualMachineSshCredentials,
            'ssh_port': int
        }

        self.attribute_map = {
            'address': 'address',
            'administrator_account': 'administratorAccount',
            'ssh_port': 'sshPort'
        }

        self._address = address
        self._administrator_account = administrator_account
        self._ssh_port = ssh_port

    @classmethod
    def from_dict(cls, dikt: dict) -> 'HDInsightAllOfProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The HDInsight_allOf_properties of this HDInsightAllOfProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def address(self):
        """Gets the address of this HDInsightAllOfProperties.

        Public IP address of the master node of the cluster.

        :return: The address of this HDInsightAllOfProperties.
        :rtype: str
        """
        return self._address

    @address.setter
    def address(self, address):
        """Sets the address of this HDInsightAllOfProperties.

        Public IP address of the master node of the cluster.

        :param address: The address of this HDInsightAllOfProperties.
        :type address: str
        """

        self._address = address

    @property
    def administrator_account(self):
        """Gets the administrator_account of this HDInsightAllOfProperties.


        :return: The administrator_account of this HDInsightAllOfProperties.
        :rtype: VirtualMachineSshCredentials
        """
        return self._administrator_account

    @administrator_account.setter
    def administrator_account(self, administrator_account):
        """Sets the administrator_account of this HDInsightAllOfProperties.


        :param administrator_account: The administrator_account of this HDInsightAllOfProperties.
        :type administrator_account: VirtualMachineSshCredentials
        """

        self._administrator_account = administrator_account

    @property
    def ssh_port(self):
        """Gets the ssh_port of this HDInsightAllOfProperties.

        Port open for ssh connections on the master node of the cluster.

        :return: The ssh_port of this HDInsightAllOfProperties.
        :rtype: int
        """
        return self._ssh_port

    @ssh_port.setter
    def ssh_port(self, ssh_port):
        """Sets the ssh_port of this HDInsightAllOfProperties.

        Port open for ssh connections on the master node of the cluster.

        :param ssh_port: The ssh_port of this HDInsightAllOfProperties.
        :type ssh_port: int
        """

        self._ssh_port = ssh_port
