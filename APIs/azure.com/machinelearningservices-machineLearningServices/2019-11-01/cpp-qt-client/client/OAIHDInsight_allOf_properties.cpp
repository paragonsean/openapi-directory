/**
 * Azure Machine Learning Workspaces
 * These APIs allow end users to operate on Azure Machine Learning Workspace resources.
 *
 * The version of the OpenAPI document: 2019-11-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIHDInsight_allOf_properties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIHDInsight_allOf_properties::OAIHDInsight_allOf_properties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIHDInsight_allOf_properties::OAIHDInsight_allOf_properties() {
    this->initializeModel();
}

OAIHDInsight_allOf_properties::~OAIHDInsight_allOf_properties() {}

void OAIHDInsight_allOf_properties::initializeModel() {

    m_address_isSet = false;
    m_address_isValid = false;

    m_administrator_account_isSet = false;
    m_administrator_account_isValid = false;

    m_ssh_port_isSet = false;
    m_ssh_port_isValid = false;
}

void OAIHDInsight_allOf_properties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIHDInsight_allOf_properties::fromJsonObject(QJsonObject json) {

    m_address_isValid = ::OpenAPI::fromJsonValue(m_address, json[QString("address")]);
    m_address_isSet = !json[QString("address")].isNull() && m_address_isValid;

    m_administrator_account_isValid = ::OpenAPI::fromJsonValue(m_administrator_account, json[QString("administratorAccount")]);
    m_administrator_account_isSet = !json[QString("administratorAccount")].isNull() && m_administrator_account_isValid;

    m_ssh_port_isValid = ::OpenAPI::fromJsonValue(m_ssh_port, json[QString("sshPort")]);
    m_ssh_port_isSet = !json[QString("sshPort")].isNull() && m_ssh_port_isValid;
}

QString OAIHDInsight_allOf_properties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIHDInsight_allOf_properties::asJsonObject() const {
    QJsonObject obj;
    if (m_address_isSet) {
        obj.insert(QString("address"), ::OpenAPI::toJsonValue(m_address));
    }
    if (m_administrator_account.isSet()) {
        obj.insert(QString("administratorAccount"), ::OpenAPI::toJsonValue(m_administrator_account));
    }
    if (m_ssh_port_isSet) {
        obj.insert(QString("sshPort"), ::OpenAPI::toJsonValue(m_ssh_port));
    }
    return obj;
}

QString OAIHDInsight_allOf_properties::getAddress() const {
    return m_address;
}
void OAIHDInsight_allOf_properties::setAddress(const QString &address) {
    m_address = address;
    m_address_isSet = true;
}

bool OAIHDInsight_allOf_properties::is_address_Set() const{
    return m_address_isSet;
}

bool OAIHDInsight_allOf_properties::is_address_Valid() const{
    return m_address_isValid;
}

OAIVirtualMachineSshCredentials OAIHDInsight_allOf_properties::getAdministratorAccount() const {
    return m_administrator_account;
}
void OAIHDInsight_allOf_properties::setAdministratorAccount(const OAIVirtualMachineSshCredentials &administrator_account) {
    m_administrator_account = administrator_account;
    m_administrator_account_isSet = true;
}

bool OAIHDInsight_allOf_properties::is_administrator_account_Set() const{
    return m_administrator_account_isSet;
}

bool OAIHDInsight_allOf_properties::is_administrator_account_Valid() const{
    return m_administrator_account_isValid;
}

qint32 OAIHDInsight_allOf_properties::getSshPort() const {
    return m_ssh_port;
}
void OAIHDInsight_allOf_properties::setSshPort(const qint32 &ssh_port) {
    m_ssh_port = ssh_port;
    m_ssh_port_isSet = true;
}

bool OAIHDInsight_allOf_properties::is_ssh_port_Set() const{
    return m_ssh_port_isSet;
}

bool OAIHDInsight_allOf_properties::is_ssh_port_Valid() const{
    return m_ssh_port_isValid;
}

bool OAIHDInsight_allOf_properties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_administrator_account.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_ssh_port_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIHDInsight_allOf_properties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
