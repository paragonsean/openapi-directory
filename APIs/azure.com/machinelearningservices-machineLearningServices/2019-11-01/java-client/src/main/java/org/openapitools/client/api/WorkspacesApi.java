/*
 * Azure Machine Learning Workspaces
 * These APIs allow end users to operate on Azure Machine Learning Workspace resources.
 *
 * The version of the OpenAPI document: 2019-11-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.ListAmlUserFeatureResult;
import org.openapitools.client.model.ListWorkspaceKeysResult;
import org.openapitools.client.model.MachineLearningServiceError;
import org.openapitools.client.model.Workspace;
import org.openapitools.client.model.WorkspaceListResult;
import org.openapitools.client.model.WorkspaceUpdateParameters;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class WorkspacesApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public WorkspacesApi() {
        this(Configuration.getDefaultApiClient());
    }

    public WorkspacesApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for workspaceFeaturesList
     * @param apiVersion Version of Azure Machine Learning resource provider API. (required)
     * @param subscriptionId Azure subscription identifier. (required)
     * @param resourceGroupName Name of the resource group in which workspace is located. (required)
     * @param workspaceName Name of Azure Machine Learning workspace. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The request was successful; the request was well-formed and received properly. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call workspaceFeaturesListCall(String apiVersion, String subscriptionId, String resourceGroupName, String workspaceName, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/features"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "workspaceName" + "}", localVarApiClient.escapeString(workspaceName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call workspaceFeaturesListValidateBeforeCall(String apiVersion, String subscriptionId, String resourceGroupName, String workspaceName, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling workspaceFeaturesList(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling workspaceFeaturesList(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling workspaceFeaturesList(Async)");
        }

        // verify the required parameter 'workspaceName' is set
        if (workspaceName == null) {
            throw new ApiException("Missing the required parameter 'workspaceName' when calling workspaceFeaturesList(Async)");
        }

        return workspaceFeaturesListCall(apiVersion, subscriptionId, resourceGroupName, workspaceName, _callback);

    }

    /**
     * 
     * Lists all enabled features for a workspace
     * @param apiVersion Version of Azure Machine Learning resource provider API. (required)
     * @param subscriptionId Azure subscription identifier. (required)
     * @param resourceGroupName Name of the resource group in which workspace is located. (required)
     * @param workspaceName Name of Azure Machine Learning workspace. (required)
     * @return ListAmlUserFeatureResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The request was successful; the request was well-formed and received properly. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed </td><td>  -  </td></tr>
     </table>
     */
    public ListAmlUserFeatureResult workspaceFeaturesList(String apiVersion, String subscriptionId, String resourceGroupName, String workspaceName) throws ApiException {
        ApiResponse<ListAmlUserFeatureResult> localVarResp = workspaceFeaturesListWithHttpInfo(apiVersion, subscriptionId, resourceGroupName, workspaceName);
        return localVarResp.getData();
    }

    /**
     * 
     * Lists all enabled features for a workspace
     * @param apiVersion Version of Azure Machine Learning resource provider API. (required)
     * @param subscriptionId Azure subscription identifier. (required)
     * @param resourceGroupName Name of the resource group in which workspace is located. (required)
     * @param workspaceName Name of Azure Machine Learning workspace. (required)
     * @return ApiResponse&lt;ListAmlUserFeatureResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The request was successful; the request was well-formed and received properly. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ListAmlUserFeatureResult> workspaceFeaturesListWithHttpInfo(String apiVersion, String subscriptionId, String resourceGroupName, String workspaceName) throws ApiException {
        okhttp3.Call localVarCall = workspaceFeaturesListValidateBeforeCall(apiVersion, subscriptionId, resourceGroupName, workspaceName, null);
        Type localVarReturnType = new TypeToken<ListAmlUserFeatureResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Lists all enabled features for a workspace
     * @param apiVersion Version of Azure Machine Learning resource provider API. (required)
     * @param subscriptionId Azure subscription identifier. (required)
     * @param resourceGroupName Name of the resource group in which workspace is located. (required)
     * @param workspaceName Name of Azure Machine Learning workspace. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The request was successful; the request was well-formed and received properly. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call workspaceFeaturesListAsync(String apiVersion, String subscriptionId, String resourceGroupName, String workspaceName, final ApiCallback<ListAmlUserFeatureResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = workspaceFeaturesListValidateBeforeCall(apiVersion, subscriptionId, resourceGroupName, workspaceName, _callback);
        Type localVarReturnType = new TypeToken<ListAmlUserFeatureResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for workspacesCreateOrUpdate
     * @param apiVersion Version of Azure Machine Learning resource provider API. (required)
     * @param subscriptionId Azure subscription identifier. (required)
     * @param resourceGroupName Name of the resource group in which workspace is located. (required)
     * @param workspaceName Name of Azure Machine Learning workspace. (required)
     * @param parameters The parameters for creating or updating a machine learning workspace. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The request was successful; the request was well-formed and received properly. </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> The request was successful; the request was well-formed and received properly. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> The request was successful; the request was well-formed and received properly. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call workspacesCreateOrUpdateCall(String apiVersion, String subscriptionId, String resourceGroupName, String workspaceName, Workspace parameters, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = parameters;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "workspaceName" + "}", localVarApiClient.escapeString(workspaceName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call workspacesCreateOrUpdateValidateBeforeCall(String apiVersion, String subscriptionId, String resourceGroupName, String workspaceName, Workspace parameters, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling workspacesCreateOrUpdate(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling workspacesCreateOrUpdate(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling workspacesCreateOrUpdate(Async)");
        }

        // verify the required parameter 'workspaceName' is set
        if (workspaceName == null) {
            throw new ApiException("Missing the required parameter 'workspaceName' when calling workspacesCreateOrUpdate(Async)");
        }

        // verify the required parameter 'parameters' is set
        if (parameters == null) {
            throw new ApiException("Missing the required parameter 'parameters' when calling workspacesCreateOrUpdate(Async)");
        }

        return workspacesCreateOrUpdateCall(apiVersion, subscriptionId, resourceGroupName, workspaceName, parameters, _callback);

    }

    /**
     * 
     * Creates or updates a workspace with the specified parameters.
     * @param apiVersion Version of Azure Machine Learning resource provider API. (required)
     * @param subscriptionId Azure subscription identifier. (required)
     * @param resourceGroupName Name of the resource group in which workspace is located. (required)
     * @param workspaceName Name of Azure Machine Learning workspace. (required)
     * @param parameters The parameters for creating or updating a machine learning workspace. (required)
     * @return Workspace
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The request was successful; the request was well-formed and received properly. </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> The request was successful; the request was well-formed and received properly. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> The request was successful; the request was well-formed and received properly. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed </td><td>  -  </td></tr>
     </table>
     */
    public Workspace workspacesCreateOrUpdate(String apiVersion, String subscriptionId, String resourceGroupName, String workspaceName, Workspace parameters) throws ApiException {
        ApiResponse<Workspace> localVarResp = workspacesCreateOrUpdateWithHttpInfo(apiVersion, subscriptionId, resourceGroupName, workspaceName, parameters);
        return localVarResp.getData();
    }

    /**
     * 
     * Creates or updates a workspace with the specified parameters.
     * @param apiVersion Version of Azure Machine Learning resource provider API. (required)
     * @param subscriptionId Azure subscription identifier. (required)
     * @param resourceGroupName Name of the resource group in which workspace is located. (required)
     * @param workspaceName Name of Azure Machine Learning workspace. (required)
     * @param parameters The parameters for creating or updating a machine learning workspace. (required)
     * @return ApiResponse&lt;Workspace&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The request was successful; the request was well-formed and received properly. </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> The request was successful; the request was well-formed and received properly. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> The request was successful; the request was well-formed and received properly. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Workspace> workspacesCreateOrUpdateWithHttpInfo(String apiVersion, String subscriptionId, String resourceGroupName, String workspaceName, Workspace parameters) throws ApiException {
        okhttp3.Call localVarCall = workspacesCreateOrUpdateValidateBeforeCall(apiVersion, subscriptionId, resourceGroupName, workspaceName, parameters, null);
        Type localVarReturnType = new TypeToken<Workspace>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Creates or updates a workspace with the specified parameters.
     * @param apiVersion Version of Azure Machine Learning resource provider API. (required)
     * @param subscriptionId Azure subscription identifier. (required)
     * @param resourceGroupName Name of the resource group in which workspace is located. (required)
     * @param workspaceName Name of Azure Machine Learning workspace. (required)
     * @param parameters The parameters for creating or updating a machine learning workspace. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The request was successful; the request was well-formed and received properly. </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> The request was successful; the request was well-formed and received properly. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> The request was successful; the request was well-formed and received properly. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call workspacesCreateOrUpdateAsync(String apiVersion, String subscriptionId, String resourceGroupName, String workspaceName, Workspace parameters, final ApiCallback<Workspace> _callback) throws ApiException {

        okhttp3.Call localVarCall = workspacesCreateOrUpdateValidateBeforeCall(apiVersion, subscriptionId, resourceGroupName, workspaceName, parameters, _callback);
        Type localVarReturnType = new TypeToken<Workspace>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for workspacesDelete
     * @param apiVersion Version of Azure Machine Learning resource provider API. (required)
     * @param subscriptionId Azure subscription identifier. (required)
     * @param resourceGroupName Name of the resource group in which workspace is located. (required)
     * @param workspaceName Name of Azure Machine Learning workspace. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The request was successful; the request was well-formed and received properly. </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> The machine learning workspace does not exist in the subscription. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call workspacesDeleteCall(String apiVersion, String subscriptionId, String resourceGroupName, String workspaceName, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "workspaceName" + "}", localVarApiClient.escapeString(workspaceName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call workspacesDeleteValidateBeforeCall(String apiVersion, String subscriptionId, String resourceGroupName, String workspaceName, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling workspacesDelete(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling workspacesDelete(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling workspacesDelete(Async)");
        }

        // verify the required parameter 'workspaceName' is set
        if (workspaceName == null) {
            throw new ApiException("Missing the required parameter 'workspaceName' when calling workspacesDelete(Async)");
        }

        return workspacesDeleteCall(apiVersion, subscriptionId, resourceGroupName, workspaceName, _callback);

    }

    /**
     * 
     * Deletes a machine learning workspace.
     * @param apiVersion Version of Azure Machine Learning resource provider API. (required)
     * @param subscriptionId Azure subscription identifier. (required)
     * @param resourceGroupName Name of the resource group in which workspace is located. (required)
     * @param workspaceName Name of Azure Machine Learning workspace. (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The request was successful; the request was well-formed and received properly. </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> The machine learning workspace does not exist in the subscription. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed </td><td>  -  </td></tr>
     </table>
     */
    public void workspacesDelete(String apiVersion, String subscriptionId, String resourceGroupName, String workspaceName) throws ApiException {
        workspacesDeleteWithHttpInfo(apiVersion, subscriptionId, resourceGroupName, workspaceName);
    }

    /**
     * 
     * Deletes a machine learning workspace.
     * @param apiVersion Version of Azure Machine Learning resource provider API. (required)
     * @param subscriptionId Azure subscription identifier. (required)
     * @param resourceGroupName Name of the resource group in which workspace is located. (required)
     * @param workspaceName Name of Azure Machine Learning workspace. (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The request was successful; the request was well-formed and received properly. </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> The machine learning workspace does not exist in the subscription. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> workspacesDeleteWithHttpInfo(String apiVersion, String subscriptionId, String resourceGroupName, String workspaceName) throws ApiException {
        okhttp3.Call localVarCall = workspacesDeleteValidateBeforeCall(apiVersion, subscriptionId, resourceGroupName, workspaceName, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     *  (asynchronously)
     * Deletes a machine learning workspace.
     * @param apiVersion Version of Azure Machine Learning resource provider API. (required)
     * @param subscriptionId Azure subscription identifier. (required)
     * @param resourceGroupName Name of the resource group in which workspace is located. (required)
     * @param workspaceName Name of Azure Machine Learning workspace. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The request was successful; the request was well-formed and received properly. </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> The machine learning workspace does not exist in the subscription. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call workspacesDeleteAsync(String apiVersion, String subscriptionId, String resourceGroupName, String workspaceName, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = workspacesDeleteValidateBeforeCall(apiVersion, subscriptionId, resourceGroupName, workspaceName, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for workspacesGet
     * @param apiVersion Version of Azure Machine Learning resource provider API. (required)
     * @param subscriptionId Azure subscription identifier. (required)
     * @param resourceGroupName Name of the resource group in which workspace is located. (required)
     * @param workspaceName Name of Azure Machine Learning workspace. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The request was successful; the request was well-formed and received properly. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call workspacesGetCall(String apiVersion, String subscriptionId, String resourceGroupName, String workspaceName, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "workspaceName" + "}", localVarApiClient.escapeString(workspaceName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call workspacesGetValidateBeforeCall(String apiVersion, String subscriptionId, String resourceGroupName, String workspaceName, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling workspacesGet(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling workspacesGet(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling workspacesGet(Async)");
        }

        // verify the required parameter 'workspaceName' is set
        if (workspaceName == null) {
            throw new ApiException("Missing the required parameter 'workspaceName' when calling workspacesGet(Async)");
        }

        return workspacesGetCall(apiVersion, subscriptionId, resourceGroupName, workspaceName, _callback);

    }

    /**
     * 
     * Gets the properties of the specified machine learning workspace.
     * @param apiVersion Version of Azure Machine Learning resource provider API. (required)
     * @param subscriptionId Azure subscription identifier. (required)
     * @param resourceGroupName Name of the resource group in which workspace is located. (required)
     * @param workspaceName Name of Azure Machine Learning workspace. (required)
     * @return Workspace
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The request was successful; the request was well-formed and received properly. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed </td><td>  -  </td></tr>
     </table>
     */
    public Workspace workspacesGet(String apiVersion, String subscriptionId, String resourceGroupName, String workspaceName) throws ApiException {
        ApiResponse<Workspace> localVarResp = workspacesGetWithHttpInfo(apiVersion, subscriptionId, resourceGroupName, workspaceName);
        return localVarResp.getData();
    }

    /**
     * 
     * Gets the properties of the specified machine learning workspace.
     * @param apiVersion Version of Azure Machine Learning resource provider API. (required)
     * @param subscriptionId Azure subscription identifier. (required)
     * @param resourceGroupName Name of the resource group in which workspace is located. (required)
     * @param workspaceName Name of Azure Machine Learning workspace. (required)
     * @return ApiResponse&lt;Workspace&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The request was successful; the request was well-formed and received properly. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Workspace> workspacesGetWithHttpInfo(String apiVersion, String subscriptionId, String resourceGroupName, String workspaceName) throws ApiException {
        okhttp3.Call localVarCall = workspacesGetValidateBeforeCall(apiVersion, subscriptionId, resourceGroupName, workspaceName, null);
        Type localVarReturnType = new TypeToken<Workspace>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Gets the properties of the specified machine learning workspace.
     * @param apiVersion Version of Azure Machine Learning resource provider API. (required)
     * @param subscriptionId Azure subscription identifier. (required)
     * @param resourceGroupName Name of the resource group in which workspace is located. (required)
     * @param workspaceName Name of Azure Machine Learning workspace. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The request was successful; the request was well-formed and received properly. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call workspacesGetAsync(String apiVersion, String subscriptionId, String resourceGroupName, String workspaceName, final ApiCallback<Workspace> _callback) throws ApiException {

        okhttp3.Call localVarCall = workspacesGetValidateBeforeCall(apiVersion, subscriptionId, resourceGroupName, workspaceName, _callback);
        Type localVarReturnType = new TypeToken<Workspace>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for workspacesListByResourceGroup
     * @param apiVersion Version of Azure Machine Learning resource provider API. (required)
     * @param subscriptionId Azure subscription identifier. (required)
     * @param resourceGroupName Name of the resource group in which workspace is located. (required)
     * @param $skiptoken Continuation token for pagination. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The request was successful; the request was well-formed and received properly. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call workspacesListByResourceGroupCall(String apiVersion, String subscriptionId, String resourceGroupName, String $skiptoken, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        if ($skiptoken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$skiptoken", $skiptoken));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call workspacesListByResourceGroupValidateBeforeCall(String apiVersion, String subscriptionId, String resourceGroupName, String $skiptoken, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling workspacesListByResourceGroup(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling workspacesListByResourceGroup(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling workspacesListByResourceGroup(Async)");
        }

        return workspacesListByResourceGroupCall(apiVersion, subscriptionId, resourceGroupName, $skiptoken, _callback);

    }

    /**
     * 
     * Lists all the available machine learning workspaces under the specified resource group.
     * @param apiVersion Version of Azure Machine Learning resource provider API. (required)
     * @param subscriptionId Azure subscription identifier. (required)
     * @param resourceGroupName Name of the resource group in which workspace is located. (required)
     * @param $skiptoken Continuation token for pagination. (optional)
     * @return WorkspaceListResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The request was successful; the request was well-formed and received properly. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed </td><td>  -  </td></tr>
     </table>
     */
    public WorkspaceListResult workspacesListByResourceGroup(String apiVersion, String subscriptionId, String resourceGroupName, String $skiptoken) throws ApiException {
        ApiResponse<WorkspaceListResult> localVarResp = workspacesListByResourceGroupWithHttpInfo(apiVersion, subscriptionId, resourceGroupName, $skiptoken);
        return localVarResp.getData();
    }

    /**
     * 
     * Lists all the available machine learning workspaces under the specified resource group.
     * @param apiVersion Version of Azure Machine Learning resource provider API. (required)
     * @param subscriptionId Azure subscription identifier. (required)
     * @param resourceGroupName Name of the resource group in which workspace is located. (required)
     * @param $skiptoken Continuation token for pagination. (optional)
     * @return ApiResponse&lt;WorkspaceListResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The request was successful; the request was well-formed and received properly. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<WorkspaceListResult> workspacesListByResourceGroupWithHttpInfo(String apiVersion, String subscriptionId, String resourceGroupName, String $skiptoken) throws ApiException {
        okhttp3.Call localVarCall = workspacesListByResourceGroupValidateBeforeCall(apiVersion, subscriptionId, resourceGroupName, $skiptoken, null);
        Type localVarReturnType = new TypeToken<WorkspaceListResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Lists all the available machine learning workspaces under the specified resource group.
     * @param apiVersion Version of Azure Machine Learning resource provider API. (required)
     * @param subscriptionId Azure subscription identifier. (required)
     * @param resourceGroupName Name of the resource group in which workspace is located. (required)
     * @param $skiptoken Continuation token for pagination. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The request was successful; the request was well-formed and received properly. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call workspacesListByResourceGroupAsync(String apiVersion, String subscriptionId, String resourceGroupName, String $skiptoken, final ApiCallback<WorkspaceListResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = workspacesListByResourceGroupValidateBeforeCall(apiVersion, subscriptionId, resourceGroupName, $skiptoken, _callback);
        Type localVarReturnType = new TypeToken<WorkspaceListResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for workspacesListBySubscription
     * @param apiVersion Version of Azure Machine Learning resource provider API. (required)
     * @param subscriptionId Azure subscription identifier. (required)
     * @param $skiptoken Continuation token for pagination. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The request was successful; the request was well-formed and received properly. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call workspacesListBySubscriptionCall(String apiVersion, String subscriptionId, String $skiptoken, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/providers/Microsoft.MachineLearningServices/workspaces"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        if ($skiptoken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$skiptoken", $skiptoken));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call workspacesListBySubscriptionValidateBeforeCall(String apiVersion, String subscriptionId, String $skiptoken, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling workspacesListBySubscription(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling workspacesListBySubscription(Async)");
        }

        return workspacesListBySubscriptionCall(apiVersion, subscriptionId, $skiptoken, _callback);

    }

    /**
     * 
     * Lists all the available machine learning workspaces under the specified subscription.
     * @param apiVersion Version of Azure Machine Learning resource provider API. (required)
     * @param subscriptionId Azure subscription identifier. (required)
     * @param $skiptoken Continuation token for pagination. (optional)
     * @return WorkspaceListResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The request was successful; the request was well-formed and received properly. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed </td><td>  -  </td></tr>
     </table>
     */
    public WorkspaceListResult workspacesListBySubscription(String apiVersion, String subscriptionId, String $skiptoken) throws ApiException {
        ApiResponse<WorkspaceListResult> localVarResp = workspacesListBySubscriptionWithHttpInfo(apiVersion, subscriptionId, $skiptoken);
        return localVarResp.getData();
    }

    /**
     * 
     * Lists all the available machine learning workspaces under the specified subscription.
     * @param apiVersion Version of Azure Machine Learning resource provider API. (required)
     * @param subscriptionId Azure subscription identifier. (required)
     * @param $skiptoken Continuation token for pagination. (optional)
     * @return ApiResponse&lt;WorkspaceListResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The request was successful; the request was well-formed and received properly. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<WorkspaceListResult> workspacesListBySubscriptionWithHttpInfo(String apiVersion, String subscriptionId, String $skiptoken) throws ApiException {
        okhttp3.Call localVarCall = workspacesListBySubscriptionValidateBeforeCall(apiVersion, subscriptionId, $skiptoken, null);
        Type localVarReturnType = new TypeToken<WorkspaceListResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Lists all the available machine learning workspaces under the specified subscription.
     * @param apiVersion Version of Azure Machine Learning resource provider API. (required)
     * @param subscriptionId Azure subscription identifier. (required)
     * @param $skiptoken Continuation token for pagination. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The request was successful; the request was well-formed and received properly. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call workspacesListBySubscriptionAsync(String apiVersion, String subscriptionId, String $skiptoken, final ApiCallback<WorkspaceListResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = workspacesListBySubscriptionValidateBeforeCall(apiVersion, subscriptionId, $skiptoken, _callback);
        Type localVarReturnType = new TypeToken<WorkspaceListResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for workspacesListKeys
     * @param apiVersion Version of Azure Machine Learning resource provider API. (required)
     * @param subscriptionId Azure subscription identifier. (required)
     * @param resourceGroupName Name of the resource group in which workspace is located. (required)
     * @param workspaceName Name of Azure Machine Learning workspace. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The request was successful; the request was well-formed and received properly. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call workspacesListKeysCall(String apiVersion, String subscriptionId, String resourceGroupName, String workspaceName, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/listKeys"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "workspaceName" + "}", localVarApiClient.escapeString(workspaceName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call workspacesListKeysValidateBeforeCall(String apiVersion, String subscriptionId, String resourceGroupName, String workspaceName, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling workspacesListKeys(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling workspacesListKeys(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling workspacesListKeys(Async)");
        }

        // verify the required parameter 'workspaceName' is set
        if (workspaceName == null) {
            throw new ApiException("Missing the required parameter 'workspaceName' when calling workspacesListKeys(Async)");
        }

        return workspacesListKeysCall(apiVersion, subscriptionId, resourceGroupName, workspaceName, _callback);

    }

    /**
     * 
     * Lists all the keys associated with this workspace. This includes keys for the storage account, app insights and password for container registry
     * @param apiVersion Version of Azure Machine Learning resource provider API. (required)
     * @param subscriptionId Azure subscription identifier. (required)
     * @param resourceGroupName Name of the resource group in which workspace is located. (required)
     * @param workspaceName Name of Azure Machine Learning workspace. (required)
     * @return ListWorkspaceKeysResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The request was successful; the request was well-formed and received properly. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed </td><td>  -  </td></tr>
     </table>
     */
    public ListWorkspaceKeysResult workspacesListKeys(String apiVersion, String subscriptionId, String resourceGroupName, String workspaceName) throws ApiException {
        ApiResponse<ListWorkspaceKeysResult> localVarResp = workspacesListKeysWithHttpInfo(apiVersion, subscriptionId, resourceGroupName, workspaceName);
        return localVarResp.getData();
    }

    /**
     * 
     * Lists all the keys associated with this workspace. This includes keys for the storage account, app insights and password for container registry
     * @param apiVersion Version of Azure Machine Learning resource provider API. (required)
     * @param subscriptionId Azure subscription identifier. (required)
     * @param resourceGroupName Name of the resource group in which workspace is located. (required)
     * @param workspaceName Name of Azure Machine Learning workspace. (required)
     * @return ApiResponse&lt;ListWorkspaceKeysResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The request was successful; the request was well-formed and received properly. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ListWorkspaceKeysResult> workspacesListKeysWithHttpInfo(String apiVersion, String subscriptionId, String resourceGroupName, String workspaceName) throws ApiException {
        okhttp3.Call localVarCall = workspacesListKeysValidateBeforeCall(apiVersion, subscriptionId, resourceGroupName, workspaceName, null);
        Type localVarReturnType = new TypeToken<ListWorkspaceKeysResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Lists all the keys associated with this workspace. This includes keys for the storage account, app insights and password for container registry
     * @param apiVersion Version of Azure Machine Learning resource provider API. (required)
     * @param subscriptionId Azure subscription identifier. (required)
     * @param resourceGroupName Name of the resource group in which workspace is located. (required)
     * @param workspaceName Name of Azure Machine Learning workspace. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The request was successful; the request was well-formed and received properly. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call workspacesListKeysAsync(String apiVersion, String subscriptionId, String resourceGroupName, String workspaceName, final ApiCallback<ListWorkspaceKeysResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = workspacesListKeysValidateBeforeCall(apiVersion, subscriptionId, resourceGroupName, workspaceName, _callback);
        Type localVarReturnType = new TypeToken<ListWorkspaceKeysResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for workspacesResyncKeys
     * @param apiVersion Version of Azure Machine Learning resource provider API. (required)
     * @param subscriptionId Azure subscription identifier. (required)
     * @param resourceGroupName Name of the resource group in which workspace is located. (required)
     * @param workspaceName Name of Azure Machine Learning workspace. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The request was successful; the request was well-formed and received properly. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call workspacesResyncKeysCall(String apiVersion, String subscriptionId, String resourceGroupName, String workspaceName, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/resyncKeys"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "workspaceName" + "}", localVarApiClient.escapeString(workspaceName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call workspacesResyncKeysValidateBeforeCall(String apiVersion, String subscriptionId, String resourceGroupName, String workspaceName, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling workspacesResyncKeys(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling workspacesResyncKeys(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling workspacesResyncKeys(Async)");
        }

        // verify the required parameter 'workspaceName' is set
        if (workspaceName == null) {
            throw new ApiException("Missing the required parameter 'workspaceName' when calling workspacesResyncKeys(Async)");
        }

        return workspacesResyncKeysCall(apiVersion, subscriptionId, resourceGroupName, workspaceName, _callback);

    }

    /**
     * 
     * Resync all the keys associated with this workspace. This includes keys for the storage account, app insights and password for container registry
     * @param apiVersion Version of Azure Machine Learning resource provider API. (required)
     * @param subscriptionId Azure subscription identifier. (required)
     * @param resourceGroupName Name of the resource group in which workspace is located. (required)
     * @param workspaceName Name of Azure Machine Learning workspace. (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The request was successful; the request was well-formed and received properly. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed </td><td>  -  </td></tr>
     </table>
     */
    public void workspacesResyncKeys(String apiVersion, String subscriptionId, String resourceGroupName, String workspaceName) throws ApiException {
        workspacesResyncKeysWithHttpInfo(apiVersion, subscriptionId, resourceGroupName, workspaceName);
    }

    /**
     * 
     * Resync all the keys associated with this workspace. This includes keys for the storage account, app insights and password for container registry
     * @param apiVersion Version of Azure Machine Learning resource provider API. (required)
     * @param subscriptionId Azure subscription identifier. (required)
     * @param resourceGroupName Name of the resource group in which workspace is located. (required)
     * @param workspaceName Name of Azure Machine Learning workspace. (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The request was successful; the request was well-formed and received properly. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> workspacesResyncKeysWithHttpInfo(String apiVersion, String subscriptionId, String resourceGroupName, String workspaceName) throws ApiException {
        okhttp3.Call localVarCall = workspacesResyncKeysValidateBeforeCall(apiVersion, subscriptionId, resourceGroupName, workspaceName, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     *  (asynchronously)
     * Resync all the keys associated with this workspace. This includes keys for the storage account, app insights and password for container registry
     * @param apiVersion Version of Azure Machine Learning resource provider API. (required)
     * @param subscriptionId Azure subscription identifier. (required)
     * @param resourceGroupName Name of the resource group in which workspace is located. (required)
     * @param workspaceName Name of Azure Machine Learning workspace. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The request was successful; the request was well-formed and received properly. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call workspacesResyncKeysAsync(String apiVersion, String subscriptionId, String resourceGroupName, String workspaceName, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = workspacesResyncKeysValidateBeforeCall(apiVersion, subscriptionId, resourceGroupName, workspaceName, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for workspacesUpdate
     * @param apiVersion Version of Azure Machine Learning resource provider API. (required)
     * @param subscriptionId Azure subscription identifier. (required)
     * @param resourceGroupName Name of the resource group in which workspace is located. (required)
     * @param workspaceName Name of Azure Machine Learning workspace. (required)
     * @param parameters The parameters for updating a machine learning workspace. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The request was successful; the request was well-formed and received properly. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call workspacesUpdateCall(String apiVersion, String subscriptionId, String resourceGroupName, String workspaceName, WorkspaceUpdateParameters parameters, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = parameters;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "workspaceName" + "}", localVarApiClient.escapeString(workspaceName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PATCH", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call workspacesUpdateValidateBeforeCall(String apiVersion, String subscriptionId, String resourceGroupName, String workspaceName, WorkspaceUpdateParameters parameters, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling workspacesUpdate(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling workspacesUpdate(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling workspacesUpdate(Async)");
        }

        // verify the required parameter 'workspaceName' is set
        if (workspaceName == null) {
            throw new ApiException("Missing the required parameter 'workspaceName' when calling workspacesUpdate(Async)");
        }

        // verify the required parameter 'parameters' is set
        if (parameters == null) {
            throw new ApiException("Missing the required parameter 'parameters' when calling workspacesUpdate(Async)");
        }

        return workspacesUpdateCall(apiVersion, subscriptionId, resourceGroupName, workspaceName, parameters, _callback);

    }

    /**
     * 
     * Updates a machine learning workspace with the specified parameters.
     * @param apiVersion Version of Azure Machine Learning resource provider API. (required)
     * @param subscriptionId Azure subscription identifier. (required)
     * @param resourceGroupName Name of the resource group in which workspace is located. (required)
     * @param workspaceName Name of Azure Machine Learning workspace. (required)
     * @param parameters The parameters for updating a machine learning workspace. (required)
     * @return Workspace
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The request was successful; the request was well-formed and received properly. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed </td><td>  -  </td></tr>
     </table>
     */
    public Workspace workspacesUpdate(String apiVersion, String subscriptionId, String resourceGroupName, String workspaceName, WorkspaceUpdateParameters parameters) throws ApiException {
        ApiResponse<Workspace> localVarResp = workspacesUpdateWithHttpInfo(apiVersion, subscriptionId, resourceGroupName, workspaceName, parameters);
        return localVarResp.getData();
    }

    /**
     * 
     * Updates a machine learning workspace with the specified parameters.
     * @param apiVersion Version of Azure Machine Learning resource provider API. (required)
     * @param subscriptionId Azure subscription identifier. (required)
     * @param resourceGroupName Name of the resource group in which workspace is located. (required)
     * @param workspaceName Name of Azure Machine Learning workspace. (required)
     * @param parameters The parameters for updating a machine learning workspace. (required)
     * @return ApiResponse&lt;Workspace&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The request was successful; the request was well-formed and received properly. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Workspace> workspacesUpdateWithHttpInfo(String apiVersion, String subscriptionId, String resourceGroupName, String workspaceName, WorkspaceUpdateParameters parameters) throws ApiException {
        okhttp3.Call localVarCall = workspacesUpdateValidateBeforeCall(apiVersion, subscriptionId, resourceGroupName, workspaceName, parameters, null);
        Type localVarReturnType = new TypeToken<Workspace>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Updates a machine learning workspace with the specified parameters.
     * @param apiVersion Version of Azure Machine Learning resource provider API. (required)
     * @param subscriptionId Azure subscription identifier. (required)
     * @param resourceGroupName Name of the resource group in which workspace is located. (required)
     * @param workspaceName Name of Azure Machine Learning workspace. (required)
     * @param parameters The parameters for updating a machine learning workspace. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The request was successful; the request was well-formed and received properly. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call workspacesUpdateAsync(String apiVersion, String subscriptionId, String resourceGroupName, String workspaceName, WorkspaceUpdateParameters parameters, final ApiCallback<Workspace> _callback) throws ApiException {

        okhttp3.Call localVarCall = workspacesUpdateValidateBeforeCall(apiVersion, subscriptionId, resourceGroupName, workspaceName, parameters, _callback);
        Type localVarReturnType = new TypeToken<Workspace>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
