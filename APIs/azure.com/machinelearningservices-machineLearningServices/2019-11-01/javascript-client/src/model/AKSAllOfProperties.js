/**
 * Azure Machine Learning Workspaces
 * These APIs allow end users to operate on Azure Machine Learning Workspace resources.
 *
 * The version of the OpenAPI document: 2019-11-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AksNetworkingConfiguration from './AksNetworkingConfiguration';
import SslConfiguration from './SslConfiguration';
import SystemService from './SystemService';

/**
 * The AKSAllOfProperties model module.
 * @module model/AKSAllOfProperties
 * @version 2019-11-01
 */
class AKSAllOfProperties {
    /**
     * Constructs a new <code>AKSAllOfProperties</code>.
     * AKS properties
     * @alias module:model/AKSAllOfProperties
     */
    constructor() { 
        
        AKSAllOfProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AKSAllOfProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AKSAllOfProperties} obj Optional instance to populate.
     * @return {module:model/AKSAllOfProperties} The populated <code>AKSAllOfProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AKSAllOfProperties();

            if (data.hasOwnProperty('agentCount')) {
                obj['agentCount'] = ApiClient.convertToType(data['agentCount'], 'Number');
            }
            if (data.hasOwnProperty('agentVMSize')) {
                obj['agentVMSize'] = ApiClient.convertToType(data['agentVMSize'], 'String');
            }
            if (data.hasOwnProperty('aksNetworkingConfiguration')) {
                obj['aksNetworkingConfiguration'] = AksNetworkingConfiguration.constructFromObject(data['aksNetworkingConfiguration']);
            }
            if (data.hasOwnProperty('clusterFqdn')) {
                obj['clusterFqdn'] = ApiClient.convertToType(data['clusterFqdn'], 'String');
            }
            if (data.hasOwnProperty('sslConfiguration')) {
                obj['sslConfiguration'] = SslConfiguration.constructFromObject(data['sslConfiguration']);
            }
            if (data.hasOwnProperty('systemServices')) {
                obj['systemServices'] = ApiClient.convertToType(data['systemServices'], [SystemService]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AKSAllOfProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AKSAllOfProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['agentVMSize'] && !(typeof data['agentVMSize'] === 'string' || data['agentVMSize'] instanceof String)) {
            throw new Error("Expected the field `agentVMSize` to be a primitive type in the JSON string but got " + data['agentVMSize']);
        }
        // validate the optional field `aksNetworkingConfiguration`
        if (data['aksNetworkingConfiguration']) { // data not null
          AksNetworkingConfiguration.validateJSON(data['aksNetworkingConfiguration']);
        }
        // ensure the json data is a string
        if (data['clusterFqdn'] && !(typeof data['clusterFqdn'] === 'string' || data['clusterFqdn'] instanceof String)) {
            throw new Error("Expected the field `clusterFqdn` to be a primitive type in the JSON string but got " + data['clusterFqdn']);
        }
        // validate the optional field `sslConfiguration`
        if (data['sslConfiguration']) { // data not null
          SslConfiguration.validateJSON(data['sslConfiguration']);
        }
        if (data['systemServices']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['systemServices'])) {
                throw new Error("Expected the field `systemServices` to be an array in the JSON data but got " + data['systemServices']);
            }
            // validate the optional field `systemServices` (array)
            for (const item of data['systemServices']) {
                SystemService.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Number of agents
 * @member {Number} agentCount
 */
AKSAllOfProperties.prototype['agentCount'] = undefined;

/**
 * Agent virtual machine size
 * @member {String} agentVMSize
 */
AKSAllOfProperties.prototype['agentVMSize'] = undefined;

/**
 * @member {module:model/AksNetworkingConfiguration} aksNetworkingConfiguration
 */
AKSAllOfProperties.prototype['aksNetworkingConfiguration'] = undefined;

/**
 * Cluster full qualified domain name
 * @member {String} clusterFqdn
 */
AKSAllOfProperties.prototype['clusterFqdn'] = undefined;

/**
 * @member {module:model/SslConfiguration} sslConfiguration
 */
AKSAllOfProperties.prototype['sslConfiguration'] = undefined;

/**
 * System services
 * @member {Array.<module:model/SystemService>} systemServices
 */
AKSAllOfProperties.prototype['systemServices'] = undefined;






export default AKSAllOfProperties;

