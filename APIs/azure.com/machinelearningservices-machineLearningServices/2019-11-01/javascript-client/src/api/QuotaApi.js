/**
 * Azure Machine Learning Workspaces
 * These APIs allow end users to operate on Azure Machine Learning Workspace resources.
 *
 * The version of the OpenAPI document: 2019-11-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ListWorkspaceQuotas from '../model/ListWorkspaceQuotas';
import MachineLearningServiceError from '../model/MachineLearningServiceError';
import QuotaUpdateParameters from '../model/QuotaUpdateParameters';
import UpdateWorkspaceQuotasResult from '../model/UpdateWorkspaceQuotasResult';

/**
* Quota service.
* @module api/QuotaApi
* @version 2019-11-01
*/
export default class QuotaApi {

    /**
    * Constructs a new QuotaApi. 
    * @alias module:api/QuotaApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the quotasList operation.
     * @callback module:api/QuotaApi~quotasListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListWorkspaceQuotas} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the currently assigned Workspace Quotas based on VMFamily.
     * @param {String} apiVersion Version of Azure Machine Learning resource provider API.
     * @param {String} subscriptionId Azure subscription identifier.
     * @param {String} location The location for which resource usage is queried.
     * @param {module:api/QuotaApi~quotasListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListWorkspaceQuotas}
     */
    quotasList(apiVersion, subscriptionId, location, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling quotasList");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling quotasList");
      }
      // verify the required parameter 'location' is set
      if (location === undefined || location === null) {
        throw new Error("Missing the required parameter 'location' when calling quotasList");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'location': location
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListWorkspaceQuotas;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.MachineLearningServices/locations/{location}/Quotas', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the quotasUpdate operation.
     * @callback module:api/QuotaApi~quotasUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UpdateWorkspaceQuotasResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update quota for each VM family in workspace.
     * @param {String} location The location for update quota is queried.
     * @param {String} apiVersion Version of Azure Machine Learning resource provider API.
     * @param {String} subscriptionId Azure subscription identifier.
     * @param {module:model/QuotaUpdateParameters} parameters Quota update parameters.
     * @param {module:api/QuotaApi~quotasUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UpdateWorkspaceQuotasResult}
     */
    quotasUpdate(location, apiVersion, subscriptionId, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'location' is set
      if (location === undefined || location === null) {
        throw new Error("Missing the required parameter 'location' when calling quotasUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling quotasUpdate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling quotasUpdate");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling quotasUpdate");
      }

      let pathParams = {
        'location': location,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = UpdateWorkspaceQuotasResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.MachineLearningServices/locations/{location}/updateQuotas', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
