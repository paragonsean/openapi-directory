/**
 * Azure Machine Learning Workspaces
 * These APIs allow end users to operate on Azure Machine Learning Workspace resources.
 *
 * The version of the OpenAPI document: 2020-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ResourceName from './ResourceName';

/**
 * The ResourceQuota model module.
 * @module model/ResourceQuota
 * @version 2020-01-01
 */
class ResourceQuota {
    /**
     * Constructs a new <code>ResourceQuota</code>.
     * The quota assigned to a resource.
     * @alias module:model/ResourceQuota
     */
    constructor() { 
        
        ResourceQuota.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ResourceQuota</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ResourceQuota} obj Optional instance to populate.
     * @return {module:model/ResourceQuota} The populated <code>ResourceQuota</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ResourceQuota();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('limit')) {
                obj['limit'] = ApiClient.convertToType(data['limit'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ResourceName.constructFromObject(data['name']);
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('unit')) {
                obj['unit'] = ApiClient.convertToType(data['unit'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ResourceQuota</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ResourceQuota</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // validate the optional field `name`
        if (data['name']) { // data not null
          ResourceName.validateJSON(data['name']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }
        // ensure the json data is a string
        if (data['unit'] && !(typeof data['unit'] === 'string' || data['unit'] instanceof String)) {
            throw new Error("Expected the field `unit` to be a primitive type in the JSON string but got " + data['unit']);
        }

        return true;
    }


}



/**
 * Specifies the resource ID.
 * @member {String} id
 */
ResourceQuota.prototype['id'] = undefined;

/**
 * The maximum permitted quota of the resource.
 * @member {Number} limit
 */
ResourceQuota.prototype['limit'] = undefined;

/**
 * @member {module:model/ResourceName} name
 */
ResourceQuota.prototype['name'] = undefined;

/**
 * Specifies the resource type.
 * @member {String} type
 */
ResourceQuota.prototype['type'] = undefined;

/**
 * An enum describing the unit of quota measurement.
 * @member {module:model/ResourceQuota.UnitEnum} unit
 */
ResourceQuota.prototype['unit'] = undefined;





/**
 * Allowed values for the <code>unit</code> property.
 * @enum {String}
 * @readonly
 */
ResourceQuota['UnitEnum'] = {

    /**
     * value: "Count"
     * @const
     */
    "Count": "Count"
};



export default ResourceQuota;

