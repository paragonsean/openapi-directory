/**
 * Azure Machine Learning Workspaces
 * These APIs allow end users to operate on Azure Machine Learning Workspace resources.
 *
 * The version of the OpenAPI document: 2020-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ScaleSettings model module.
 * @module model/ScaleSettings
 * @version 2020-01-01
 */
class ScaleSettings {
    /**
     * Constructs a new <code>ScaleSettings</code>.
     * scale settings for AML Compute
     * @alias module:model/ScaleSettings
     * @param maxNodeCount {Number} Max number of nodes to use
     */
    constructor(maxNodeCount) { 
        
        ScaleSettings.initialize(this, maxNodeCount);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, maxNodeCount) { 
        obj['maxNodeCount'] = maxNodeCount;
    }

    /**
     * Constructs a <code>ScaleSettings</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ScaleSettings} obj Optional instance to populate.
     * @return {module:model/ScaleSettings} The populated <code>ScaleSettings</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ScaleSettings();

            if (data.hasOwnProperty('maxNodeCount')) {
                obj['maxNodeCount'] = ApiClient.convertToType(data['maxNodeCount'], 'Number');
            }
            if (data.hasOwnProperty('minNodeCount')) {
                obj['minNodeCount'] = ApiClient.convertToType(data['minNodeCount'], 'Number');
            }
            if (data.hasOwnProperty('nodeIdleTimeBeforeScaleDown')) {
                obj['nodeIdleTimeBeforeScaleDown'] = ApiClient.convertToType(data['nodeIdleTimeBeforeScaleDown'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ScaleSettings</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ScaleSettings</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ScaleSettings.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['nodeIdleTimeBeforeScaleDown'] && !(typeof data['nodeIdleTimeBeforeScaleDown'] === 'string' || data['nodeIdleTimeBeforeScaleDown'] instanceof String)) {
            throw new Error("Expected the field `nodeIdleTimeBeforeScaleDown` to be a primitive type in the JSON string but got " + data['nodeIdleTimeBeforeScaleDown']);
        }

        return true;
    }


}

ScaleSettings.RequiredProperties = ["maxNodeCount"];

/**
 * Max number of nodes to use
 * @member {Number} maxNodeCount
 */
ScaleSettings.prototype['maxNodeCount'] = undefined;

/**
 * Min number of nodes to use
 * @member {Number} minNodeCount
 */
ScaleSettings.prototype['minNodeCount'] = undefined;

/**
 * Node Idle Time before scaling down amlCompute
 * @member {String} nodeIdleTimeBeforeScaleDown
 */
ScaleSettings.prototype['nodeIdleTimeBeforeScaleDown'] = undefined;






export default ScaleSettings;

