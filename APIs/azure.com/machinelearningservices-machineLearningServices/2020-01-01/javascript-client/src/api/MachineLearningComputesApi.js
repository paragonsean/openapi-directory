/**
 * Azure Machine Learning Workspaces
 * These APIs allow end users to operate on Azure Machine Learning Workspace resources.
 *
 * The version of the OpenAPI document: 2020-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AmlComputeNodesInformation from '../model/AmlComputeNodesInformation';
import ClusterUpdateParameters from '../model/ClusterUpdateParameters';
import ComputeResource from '../model/ComputeResource';
import ComputeSecrets from '../model/ComputeSecrets';
import MachineLearningServiceError from '../model/MachineLearningServiceError';
import PaginatedComputeResourcesList from '../model/PaginatedComputeResourcesList';

/**
* MachineLearningComputes service.
* @module api/MachineLearningComputesApi
* @version 2020-01-01
*/
export default class MachineLearningComputesApi {

    /**
    * Constructs a new MachineLearningComputesApi. 
    * @alias module:api/MachineLearningComputesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the machineLearningComputeCreateOrUpdate_0 operation.
     * @callback module:api/MachineLearningComputesApi~machineLearningComputeCreateOrUpdate_0Callback
     * @param {String} error Error message, if any.
     * @param {module:model/ComputeResource} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates or updates compute. This call will overwrite a compute if it exists. This is a nonrecoverable operation. If your intent is to create a new compute, do a GET first to verify that it does not exist yet.
     * @param {String} subscriptionId Azure subscription identifier.
     * @param {String} resourceGroupName Name of the resource group in which workspace is located.
     * @param {String} workspaceName Name of Azure Machine Learning workspace.
     * @param {String} computeName Name of the Azure Machine Learning compute.
     * @param {String} apiVersion Version of Azure Machine Learning resource provider API.
     * @param {module:model/ComputeResource} parameters Payload with Machine Learning compute definition.
     * @param {module:api/MachineLearningComputesApi~machineLearningComputeCreateOrUpdate_0Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ComputeResource}
     */
    machineLearningComputeCreateOrUpdate_0(subscriptionId, resourceGroupName, workspaceName, computeName, apiVersion, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling machineLearningComputeCreateOrUpdate_0");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling machineLearningComputeCreateOrUpdate_0");
      }
      // verify the required parameter 'workspaceName' is set
      if (workspaceName === undefined || workspaceName === null) {
        throw new Error("Missing the required parameter 'workspaceName' when calling machineLearningComputeCreateOrUpdate_0");
      }
      // verify the required parameter 'computeName' is set
      if (computeName === undefined || computeName === null) {
        throw new Error("Missing the required parameter 'computeName' when calling machineLearningComputeCreateOrUpdate_0");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling machineLearningComputeCreateOrUpdate_0");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling machineLearningComputeCreateOrUpdate_0");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'workspaceName': workspaceName,
        'computeName': computeName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ComputeResource;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/computes/{computeName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the machineLearningComputeDelete_0 operation.
     * @callback module:api/MachineLearningComputesApi~machineLearningComputeDelete_0Callback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes specified Machine Learning compute.
     * @param {String} subscriptionId Azure subscription identifier.
     * @param {String} resourceGroupName Name of the resource group in which workspace is located.
     * @param {String} workspaceName Name of Azure Machine Learning workspace.
     * @param {String} computeName Name of the Azure Machine Learning compute.
     * @param {String} apiVersion Version of Azure Machine Learning resource provider API.
     * @param {module:model/String} underlyingResourceAction Delete the underlying compute if 'Delete', or detach the underlying compute from workspace if 'Detach'.
     * @param {module:api/MachineLearningComputesApi~machineLearningComputeDelete_0Callback} callback The callback function, accepting three arguments: error, data, response
     */
    machineLearningComputeDelete_0(subscriptionId, resourceGroupName, workspaceName, computeName, apiVersion, underlyingResourceAction, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling machineLearningComputeDelete_0");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling machineLearningComputeDelete_0");
      }
      // verify the required parameter 'workspaceName' is set
      if (workspaceName === undefined || workspaceName === null) {
        throw new Error("Missing the required parameter 'workspaceName' when calling machineLearningComputeDelete_0");
      }
      // verify the required parameter 'computeName' is set
      if (computeName === undefined || computeName === null) {
        throw new Error("Missing the required parameter 'computeName' when calling machineLearningComputeDelete_0");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling machineLearningComputeDelete_0");
      }
      // verify the required parameter 'underlyingResourceAction' is set
      if (underlyingResourceAction === undefined || underlyingResourceAction === null) {
        throw new Error("Missing the required parameter 'underlyingResourceAction' when calling machineLearningComputeDelete_0");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'workspaceName': workspaceName,
        'computeName': computeName
      };
      let queryParams = {
        'api-version': apiVersion,
        'underlyingResourceAction': underlyingResourceAction
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/computes/{computeName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the machineLearningComputeGet_0 operation.
     * @callback module:api/MachineLearningComputesApi~machineLearningComputeGet_0Callback
     * @param {String} error Error message, if any.
     * @param {module:model/ComputeResource} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets compute definition by its name. Any secrets (storage keys, service credentials, etc) are not returned - use 'keys' nested resource to get them.
     * @param {String} subscriptionId Azure subscription identifier.
     * @param {String} resourceGroupName Name of the resource group in which workspace is located.
     * @param {String} workspaceName Name of Azure Machine Learning workspace.
     * @param {String} computeName Name of the Azure Machine Learning compute.
     * @param {String} apiVersion Version of Azure Machine Learning resource provider API.
     * @param {module:api/MachineLearningComputesApi~machineLearningComputeGet_0Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ComputeResource}
     */
    machineLearningComputeGet_0(subscriptionId, resourceGroupName, workspaceName, computeName, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling machineLearningComputeGet_0");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling machineLearningComputeGet_0");
      }
      // verify the required parameter 'workspaceName' is set
      if (workspaceName === undefined || workspaceName === null) {
        throw new Error("Missing the required parameter 'workspaceName' when calling machineLearningComputeGet_0");
      }
      // verify the required parameter 'computeName' is set
      if (computeName === undefined || computeName === null) {
        throw new Error("Missing the required parameter 'computeName' when calling machineLearningComputeGet_0");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling machineLearningComputeGet_0");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'workspaceName': workspaceName,
        'computeName': computeName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ComputeResource;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/computes/{computeName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the machineLearningComputeListByWorkspace_0 operation.
     * @callback module:api/MachineLearningComputesApi~machineLearningComputeListByWorkspace_0Callback
     * @param {String} error Error message, if any.
     * @param {module:model/PaginatedComputeResourcesList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets computes in specified workspace.
     * @param {String} subscriptionId Azure subscription identifier.
     * @param {String} resourceGroupName Name of the resource group in which workspace is located.
     * @param {String} workspaceName Name of Azure Machine Learning workspace.
     * @param {String} apiVersion Version of Azure Machine Learning resource provider API.
     * @param {Object} opts Optional parameters
     * @param {String} [skiptoken] Continuation token for pagination.
     * @param {module:api/MachineLearningComputesApi~machineLearningComputeListByWorkspace_0Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PaginatedComputeResourcesList}
     */
    machineLearningComputeListByWorkspace_0(subscriptionId, resourceGroupName, workspaceName, apiVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling machineLearningComputeListByWorkspace_0");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling machineLearningComputeListByWorkspace_0");
      }
      // verify the required parameter 'workspaceName' is set
      if (workspaceName === undefined || workspaceName === null) {
        throw new Error("Missing the required parameter 'workspaceName' when calling machineLearningComputeListByWorkspace_0");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling machineLearningComputeListByWorkspace_0");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'workspaceName': workspaceName
      };
      let queryParams = {
        'api-version': apiVersion,
        '$skiptoken': opts['skiptoken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PaginatedComputeResourcesList;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/computes', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the machineLearningComputeListKeys_0 operation.
     * @callback module:api/MachineLearningComputesApi~machineLearningComputeListKeys_0Callback
     * @param {String} error Error message, if any.
     * @param {module:model/ComputeSecrets} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets secrets related to Machine Learning compute (storage keys, service credentials, etc).
     * @param {String} subscriptionId Azure subscription identifier.
     * @param {String} resourceGroupName Name of the resource group in which workspace is located.
     * @param {String} workspaceName Name of Azure Machine Learning workspace.
     * @param {String} computeName Name of the Azure Machine Learning compute.
     * @param {String} apiVersion Version of Azure Machine Learning resource provider API.
     * @param {module:api/MachineLearningComputesApi~machineLearningComputeListKeys_0Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ComputeSecrets}
     */
    machineLearningComputeListKeys_0(subscriptionId, resourceGroupName, workspaceName, computeName, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling machineLearningComputeListKeys_0");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling machineLearningComputeListKeys_0");
      }
      // verify the required parameter 'workspaceName' is set
      if (workspaceName === undefined || workspaceName === null) {
        throw new Error("Missing the required parameter 'workspaceName' when calling machineLearningComputeListKeys_0");
      }
      // verify the required parameter 'computeName' is set
      if (computeName === undefined || computeName === null) {
        throw new Error("Missing the required parameter 'computeName' when calling machineLearningComputeListKeys_0");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling machineLearningComputeListKeys_0");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'workspaceName': workspaceName,
        'computeName': computeName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ComputeSecrets;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/computes/{computeName}/listKeys', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the machineLearningComputeListNodes operation.
     * @callback module:api/MachineLearningComputesApi~machineLearningComputeListNodesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AmlComputeNodesInformation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get the details (e.g IP address, port etc) of all the compute nodes in the compute.
     * @param {String} subscriptionId Azure subscription identifier.
     * @param {String} resourceGroupName Name of the resource group in which workspace is located.
     * @param {String} workspaceName Name of Azure Machine Learning workspace.
     * @param {String} computeName Name of the Azure Machine Learning compute.
     * @param {String} apiVersion Version of Azure Machine Learning resource provider API.
     * @param {module:api/MachineLearningComputesApi~machineLearningComputeListNodesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AmlComputeNodesInformation}
     */
    machineLearningComputeListNodes(subscriptionId, resourceGroupName, workspaceName, computeName, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling machineLearningComputeListNodes");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling machineLearningComputeListNodes");
      }
      // verify the required parameter 'workspaceName' is set
      if (workspaceName === undefined || workspaceName === null) {
        throw new Error("Missing the required parameter 'workspaceName' when calling machineLearningComputeListNodes");
      }
      // verify the required parameter 'computeName' is set
      if (computeName === undefined || computeName === null) {
        throw new Error("Missing the required parameter 'computeName' when calling machineLearningComputeListNodes");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling machineLearningComputeListNodes");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'workspaceName': workspaceName,
        'computeName': computeName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AmlComputeNodesInformation;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/computes/{computeName}/listNodes', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the machineLearningComputeUpdate_0 operation.
     * @callback module:api/MachineLearningComputesApi~machineLearningComputeUpdate_0Callback
     * @param {String} error Error message, if any.
     * @param {module:model/ComputeResource} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates properties of a compute. This call will overwrite a compute if it exists. This is a nonrecoverable operation.
     * @param {String} subscriptionId Azure subscription identifier.
     * @param {String} resourceGroupName Name of the resource group in which workspace is located.
     * @param {String} workspaceName Name of Azure Machine Learning workspace.
     * @param {String} computeName Name of the Azure Machine Learning compute.
     * @param {String} apiVersion Version of Azure Machine Learning resource provider API.
     * @param {module:model/ClusterUpdateParameters} parameters Additional parameters for cluster update.
     * @param {module:api/MachineLearningComputesApi~machineLearningComputeUpdate_0Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ComputeResource}
     */
    machineLearningComputeUpdate_0(subscriptionId, resourceGroupName, workspaceName, computeName, apiVersion, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling machineLearningComputeUpdate_0");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling machineLearningComputeUpdate_0");
      }
      // verify the required parameter 'workspaceName' is set
      if (workspaceName === undefined || workspaceName === null) {
        throw new Error("Missing the required parameter 'workspaceName' when calling machineLearningComputeUpdate_0");
      }
      // verify the required parameter 'computeName' is set
      if (computeName === undefined || computeName === null) {
        throw new Error("Missing the required parameter 'computeName' when calling machineLearningComputeUpdate_0");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling machineLearningComputeUpdate_0");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling machineLearningComputeUpdate_0");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'workspaceName': workspaceName,
        'computeName': computeName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ComputeResource;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/computes/{computeName}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
