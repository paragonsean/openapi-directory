/**
 * Azure Machine Learning Workspaces
 * These APIs allow end users to operate on Azure Machine Learning Workspace resources.
 *
 * The version of the OpenAPI document: 2020-01-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISystemService.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISystemService::OAISystemService(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISystemService::OAISystemService() {
    this->initializeModel();
}

OAISystemService::~OAISystemService() {}

void OAISystemService::initializeModel() {

    m_public_ip_address_isSet = false;
    m_public_ip_address_isValid = false;

    m_system_service_type_isSet = false;
    m_system_service_type_isValid = false;

    m_version_isSet = false;
    m_version_isValid = false;
}

void OAISystemService::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISystemService::fromJsonObject(QJsonObject json) {

    m_public_ip_address_isValid = ::OpenAPI::fromJsonValue(m_public_ip_address, json[QString("publicIpAddress")]);
    m_public_ip_address_isSet = !json[QString("publicIpAddress")].isNull() && m_public_ip_address_isValid;

    m_system_service_type_isValid = ::OpenAPI::fromJsonValue(m_system_service_type, json[QString("systemServiceType")]);
    m_system_service_type_isSet = !json[QString("systemServiceType")].isNull() && m_system_service_type_isValid;

    m_version_isValid = ::OpenAPI::fromJsonValue(m_version, json[QString("version")]);
    m_version_isSet = !json[QString("version")].isNull() && m_version_isValid;
}

QString OAISystemService::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISystemService::asJsonObject() const {
    QJsonObject obj;
    if (m_public_ip_address_isSet) {
        obj.insert(QString("publicIpAddress"), ::OpenAPI::toJsonValue(m_public_ip_address));
    }
    if (m_system_service_type_isSet) {
        obj.insert(QString("systemServiceType"), ::OpenAPI::toJsonValue(m_system_service_type));
    }
    if (m_version_isSet) {
        obj.insert(QString("version"), ::OpenAPI::toJsonValue(m_version));
    }
    return obj;
}

QString OAISystemService::getPublicIpAddress() const {
    return m_public_ip_address;
}
void OAISystemService::setPublicIpAddress(const QString &public_ip_address) {
    m_public_ip_address = public_ip_address;
    m_public_ip_address_isSet = true;
}

bool OAISystemService::is_public_ip_address_Set() const{
    return m_public_ip_address_isSet;
}

bool OAISystemService::is_public_ip_address_Valid() const{
    return m_public_ip_address_isValid;
}

QString OAISystemService::getSystemServiceType() const {
    return m_system_service_type;
}
void OAISystemService::setSystemServiceType(const QString &system_service_type) {
    m_system_service_type = system_service_type;
    m_system_service_type_isSet = true;
}

bool OAISystemService::is_system_service_type_Set() const{
    return m_system_service_type_isSet;
}

bool OAISystemService::is_system_service_type_Valid() const{
    return m_system_service_type_isValid;
}

QString OAISystemService::getVersion() const {
    return m_version;
}
void OAISystemService::setVersion(const QString &version) {
    m_version = version;
    m_version_isSet = true;
}

bool OAISystemService::is_version_Set() const{
    return m_version_isSet;
}

bool OAISystemService::is_version_Valid() const{
    return m_version_isValid;
}

bool OAISystemService::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_public_ip_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_system_service_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_version_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISystemService::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
