/**
 * Azure Machine Learning Workspaces
 * These APIs allow end users to operate on Azure Machine Learning Workspace resources.
 *
 * The version of the OpenAPI document: 2020-01-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIWorkspaceProperties.h
 *
 * The properties of a machine learning workspace.
 */

#ifndef OAIWorkspaceProperties_H
#define OAIWorkspaceProperties_H

#include <QJsonObject>

#include "OAIEncryptionProperty.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIEncryptionProperty;

class OAIWorkspaceProperties : public OAIObject {
public:
    OAIWorkspaceProperties();
    OAIWorkspaceProperties(QString json);
    ~OAIWorkspaceProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getApplicationInsights() const;
    void setApplicationInsights(const QString &application_insights);
    bool is_application_insights_Set() const;
    bool is_application_insights_Valid() const;

    QString getContainerRegistry() const;
    void setContainerRegistry(const QString &container_registry);
    bool is_container_registry_Set() const;
    bool is_container_registry_Valid() const;

    QDateTime getCreationTime() const;
    void setCreationTime(const QDateTime &creation_time);
    bool is_creation_time_Set() const;
    bool is_creation_time_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getDiscoveryUrl() const;
    void setDiscoveryUrl(const QString &discovery_url);
    bool is_discovery_url_Set() const;
    bool is_discovery_url_Valid() const;

    OAIEncryptionProperty getEncryption() const;
    void setEncryption(const OAIEncryptionProperty &encryption);
    bool is_encryption_Set() const;
    bool is_encryption_Valid() const;

    QString getFriendlyName() const;
    void setFriendlyName(const QString &friendly_name);
    bool is_friendly_name_Set() const;
    bool is_friendly_name_Valid() const;

    bool isHbiWorkspace() const;
    void setHbiWorkspace(const bool &hbi_workspace);
    bool is_hbi_workspace_Set() const;
    bool is_hbi_workspace_Valid() const;

    QString getKeyVault() const;
    void setKeyVault(const QString &key_vault);
    bool is_key_vault_Set() const;
    bool is_key_vault_Valid() const;

    QString getProvisioningState() const;
    void setProvisioningState(const QString &provisioning_state);
    bool is_provisioning_state_Set() const;
    bool is_provisioning_state_Valid() const;

    QString getServiceProvisionedResourceGroup() const;
    void setServiceProvisionedResourceGroup(const QString &service_provisioned_resource_group);
    bool is_service_provisioned_resource_group_Set() const;
    bool is_service_provisioned_resource_group_Valid() const;

    QString getStorageAccount() const;
    void setStorageAccount(const QString &storage_account);
    bool is_storage_account_Set() const;
    bool is_storage_account_Valid() const;

    QString getWorkspaceId() const;
    void setWorkspaceId(const QString &workspace_id);
    bool is_workspace_id_Set() const;
    bool is_workspace_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_application_insights;
    bool m_application_insights_isSet;
    bool m_application_insights_isValid;

    QString m_container_registry;
    bool m_container_registry_isSet;
    bool m_container_registry_isValid;

    QDateTime m_creation_time;
    bool m_creation_time_isSet;
    bool m_creation_time_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_discovery_url;
    bool m_discovery_url_isSet;
    bool m_discovery_url_isValid;

    OAIEncryptionProperty m_encryption;
    bool m_encryption_isSet;
    bool m_encryption_isValid;

    QString m_friendly_name;
    bool m_friendly_name_isSet;
    bool m_friendly_name_isValid;

    bool m_hbi_workspace;
    bool m_hbi_workspace_isSet;
    bool m_hbi_workspace_isValid;

    QString m_key_vault;
    bool m_key_vault_isSet;
    bool m_key_vault_isValid;

    QString m_provisioning_state;
    bool m_provisioning_state_isSet;
    bool m_provisioning_state_isValid;

    QString m_service_provisioned_resource_group;
    bool m_service_provisioned_resource_group_isSet;
    bool m_service_provisioned_resource_group_isValid;

    QString m_storage_account;
    bool m_storage_account_isSet;
    bool m_storage_account_isValid;

    QString m_workspace_id;
    bool m_workspace_id_isSet;
    bool m_workspace_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIWorkspaceProperties)

#endif // OAIWorkspaceProperties_H
