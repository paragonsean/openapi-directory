/**
 * Azure Machine Learning Workspaces
 * These APIs allow end users to operate on Azure Machine Learning Workspace resources.
 *
 * The version of the OpenAPI document: 2020-01-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPrivateEndpointServiceConnectionStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPrivateEndpointServiceConnectionStatus::OAIPrivateEndpointServiceConnectionStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPrivateEndpointServiceConnectionStatus::OAIPrivateEndpointServiceConnectionStatus() {
    this->initializeModel();
}

OAIPrivateEndpointServiceConnectionStatus::~OAIPrivateEndpointServiceConnectionStatus() {}

void OAIPrivateEndpointServiceConnectionStatus::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIPrivateEndpointServiceConnectionStatus::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIPrivateEndpointServiceConnectionStatus::fromJson(QString jsonString) {
    
    if ( jsonString.compare("Pending", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPrivateEndpointServiceConnectionStatus::PENDING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Approved", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPrivateEndpointServiceConnectionStatus::APPROVED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Rejected", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPrivateEndpointServiceConnectionStatus::REJECTED;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIPrivateEndpointServiceConnectionStatus::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIPrivateEndpointServiceConnectionStatus::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIPrivateEndpointServiceConnectionStatus::PENDING:
            val = "Pending";
            break;
        case eOAIPrivateEndpointServiceConnectionStatus::APPROVED:
            val = "Approved";
            break;
        case eOAIPrivateEndpointServiceConnectionStatus::REJECTED:
            val = "Rejected";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIPrivateEndpointServiceConnectionStatus::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIPrivateEndpointServiceConnectionStatus::eOAIPrivateEndpointServiceConnectionStatus OAIPrivateEndpointServiceConnectionStatus::getValue() const {
    return m_value;
}

void OAIPrivateEndpointServiceConnectionStatus::setValue(const OAIPrivateEndpointServiceConnectionStatus::eOAIPrivateEndpointServiceConnectionStatus& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIPrivateEndpointServiceConnectionStatus::isSet() const {
    
    return m_value_isSet;
}

bool OAIPrivateEndpointServiceConnectionStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
