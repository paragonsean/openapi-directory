/*
 * Azure Machine Learning Workspaces
 * These APIs allow end users to operate on Azure Machine Learning Workspace resources.
 *
 * The version of the OpenAPI document: 2019-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.MachineLearningServiceError;
import org.openapitools.client.model.NodeStateCounts;
import org.openapitools.client.model.ResourceId;
import org.openapitools.client.model.ScaleSettings;
import org.openapitools.client.model.UserAccountCredentials;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for AmlComputeAllOfProperties
 */
public class AmlComputeAllOfPropertiesTest {
    private final AmlComputeAllOfProperties model = new AmlComputeAllOfProperties();

    /**
     * Model tests for AmlComputeAllOfProperties
     */
    @Test
    public void testAmlComputeAllOfProperties() {
        // TODO: test AmlComputeAllOfProperties
    }

    /**
     * Test the property 'allocationState'
     */
    @Test
    public void allocationStateTest() {
        // TODO: test allocationState
    }

    /**
     * Test the property 'allocationStateTransitionTime'
     */
    @Test
    public void allocationStateTransitionTimeTest() {
        // TODO: test allocationStateTransitionTime
    }

    /**
     * Test the property 'currentNodeCount'
     */
    @Test
    public void currentNodeCountTest() {
        // TODO: test currentNodeCount
    }

    /**
     * Test the property 'errors'
     */
    @Test
    public void errorsTest() {
        // TODO: test errors
    }

    /**
     * Test the property 'nodeStateCounts'
     */
    @Test
    public void nodeStateCountsTest() {
        // TODO: test nodeStateCounts
    }

    /**
     * Test the property 'remoteLoginPortPublicAccess'
     */
    @Test
    public void remoteLoginPortPublicAccessTest() {
        // TODO: test remoteLoginPortPublicAccess
    }

    /**
     * Test the property 'scaleSettings'
     */
    @Test
    public void scaleSettingsTest() {
        // TODO: test scaleSettings
    }

    /**
     * Test the property 'subnet'
     */
    @Test
    public void subnetTest() {
        // TODO: test subnet
    }

    /**
     * Test the property 'targetNodeCount'
     */
    @Test
    public void targetNodeCountTest() {
        // TODO: test targetNodeCount
    }

    /**
     * Test the property 'userAccountCredentials'
     */
    @Test
    public void userAccountCredentialsTest() {
        // TODO: test userAccountCredentials
    }

    /**
     * Test the property 'vmPriority'
     */
    @Test
    public void vmPriorityTest() {
        // TODO: test vmPriority
    }

    /**
     * Test the property 'vmSize'
     */
    @Test
    public void vmSizeTest() {
        // TODO: test vmSize
    }

}
