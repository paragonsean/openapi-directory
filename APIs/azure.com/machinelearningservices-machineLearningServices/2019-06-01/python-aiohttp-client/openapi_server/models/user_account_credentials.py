# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UserAccountCredentials(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, admin_user_name: str=None, admin_user_password: str=None, admin_user_ssh_public_key: str=None):
        """UserAccountCredentials - a model defined in OpenAPI

        :param admin_user_name: The admin_user_name of this UserAccountCredentials.
        :param admin_user_password: The admin_user_password of this UserAccountCredentials.
        :param admin_user_ssh_public_key: The admin_user_ssh_public_key of this UserAccountCredentials.
        """
        self.openapi_types = {
            'admin_user_name': str,
            'admin_user_password': str,
            'admin_user_ssh_public_key': str
        }

        self.attribute_map = {
            'admin_user_name': 'adminUserName',
            'admin_user_password': 'adminUserPassword',
            'admin_user_ssh_public_key': 'adminUserSshPublicKey'
        }

        self._admin_user_name = admin_user_name
        self._admin_user_password = admin_user_password
        self._admin_user_ssh_public_key = admin_user_ssh_public_key

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UserAccountCredentials':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UserAccountCredentials of this UserAccountCredentials.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def admin_user_name(self):
        """Gets the admin_user_name of this UserAccountCredentials.

        Name of the administrator user account which can be used to SSH to nodes.

        :return: The admin_user_name of this UserAccountCredentials.
        :rtype: str
        """
        return self._admin_user_name

    @admin_user_name.setter
    def admin_user_name(self, admin_user_name):
        """Sets the admin_user_name of this UserAccountCredentials.

        Name of the administrator user account which can be used to SSH to nodes.

        :param admin_user_name: The admin_user_name of this UserAccountCredentials.
        :type admin_user_name: str
        """
        if admin_user_name is None:
            raise ValueError("Invalid value for `admin_user_name`, must not be `None`")

        self._admin_user_name = admin_user_name

    @property
    def admin_user_password(self):
        """Gets the admin_user_password of this UserAccountCredentials.

        Password of the administrator user account.

        :return: The admin_user_password of this UserAccountCredentials.
        :rtype: str
        """
        return self._admin_user_password

    @admin_user_password.setter
    def admin_user_password(self, admin_user_password):
        """Sets the admin_user_password of this UserAccountCredentials.

        Password of the administrator user account.

        :param admin_user_password: The admin_user_password of this UserAccountCredentials.
        :type admin_user_password: str
        """

        self._admin_user_password = admin_user_password

    @property
    def admin_user_ssh_public_key(self):
        """Gets the admin_user_ssh_public_key of this UserAccountCredentials.

        SSH public key of the administrator user account.

        :return: The admin_user_ssh_public_key of this UserAccountCredentials.
        :rtype: str
        """
        return self._admin_user_ssh_public_key

    @admin_user_ssh_public_key.setter
    def admin_user_ssh_public_key(self, admin_user_ssh_public_key):
        """Sets the admin_user_ssh_public_key of this UserAccountCredentials.

        SSH public key of the administrator user account.

        :param admin_user_ssh_public_key: The admin_user_ssh_public_key of this UserAccountCredentials.
        :type admin_user_ssh_public_key: str
        """

        self._admin_user_ssh_public_key = admin_user_ssh_public_key
