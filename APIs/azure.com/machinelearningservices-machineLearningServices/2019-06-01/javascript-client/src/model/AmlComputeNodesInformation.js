/**
 * Azure Machine Learning Workspaces
 * These APIs allow end users to operate on Azure Machine Learning Workspace resources.
 *
 * The version of the OpenAPI document: 2019-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AmlComputeNodeInformation from './AmlComputeNodeInformation';
import ComputeNodesInformation from './ComputeNodesInformation';
import ComputeType from './ComputeType';

/**
 * The AmlComputeNodesInformation model module.
 * @module model/AmlComputeNodesInformation
 * @version 2019-06-01
 */
class AmlComputeNodesInformation {
    /**
     * Constructs a new <code>AmlComputeNodesInformation</code>.
     * Compute node information related to a AmlCompute.
     * @alias module:model/AmlComputeNodesInformation
     * @extends module:model/ComputeNodesInformation
     * @implements module:model/ComputeNodesInformation
     * @param computeType {module:model/ComputeType} 
     */
    constructor(computeType) { 
        ComputeNodesInformation.initialize(this, computeType);
        AmlComputeNodesInformation.initialize(this, computeType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, computeType) { 
    }

    /**
     * Constructs a <code>AmlComputeNodesInformation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AmlComputeNodesInformation} obj Optional instance to populate.
     * @return {module:model/AmlComputeNodesInformation} The populated <code>AmlComputeNodesInformation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AmlComputeNodesInformation();
            ComputeNodesInformation.constructFromObject(data, obj);
            ComputeNodesInformation.constructFromObject(data, obj);

            if (data.hasOwnProperty('nodes')) {
                obj['nodes'] = ApiClient.convertToType(data['nodes'], [AmlComputeNodeInformation]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AmlComputeNodesInformation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AmlComputeNodesInformation</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AmlComputeNodesInformation.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['nodes']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['nodes'])) {
                throw new Error("Expected the field `nodes` to be an array in the JSON data but got " + data['nodes']);
            }
            // validate the optional field `nodes` (array)
            for (const item of data['nodes']) {
                AmlComputeNodeInformation.validateJSON(item);
            };
        }

        return true;
    }


}

AmlComputeNodesInformation.RequiredProperties = ["computeType"];

/**
 * The collection of returned AmlCompute nodes details.
 * @member {Array.<module:model/AmlComputeNodeInformation>} nodes
 */
AmlComputeNodesInformation.prototype['nodes'] = undefined;


// Implement ComputeNodesInformation interface:
/**
 * @member {module:model/ComputeType} computeType
 */
ComputeNodesInformation.prototype['computeType'] = undefined;
/**
 * The continuation token.
 * @member {String} nextLink
 */
ComputeNodesInformation.prototype['nextLink'] = undefined;




export default AmlComputeNodesInformation;

