/**
 * Azure Machine Learning Workspaces
 * These APIs allow end users to operate on Azure Machine Learning Workspace resources.
 *
 * The version of the OpenAPI document: 2019-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UserAccountCredentials model module.
 * @module model/UserAccountCredentials
 * @version 2019-06-01
 */
class UserAccountCredentials {
    /**
     * Constructs a new <code>UserAccountCredentials</code>.
     * Settings for user account that gets created on each on the nodes of a compute.
     * @alias module:model/UserAccountCredentials
     * @param adminUserName {String} Name of the administrator user account which can be used to SSH to nodes.
     */
    constructor(adminUserName) { 
        
        UserAccountCredentials.initialize(this, adminUserName);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, adminUserName) { 
        obj['adminUserName'] = adminUserName;
    }

    /**
     * Constructs a <code>UserAccountCredentials</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UserAccountCredentials} obj Optional instance to populate.
     * @return {module:model/UserAccountCredentials} The populated <code>UserAccountCredentials</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UserAccountCredentials();

            if (data.hasOwnProperty('adminUserName')) {
                obj['adminUserName'] = ApiClient.convertToType(data['adminUserName'], 'String');
            }
            if (data.hasOwnProperty('adminUserPassword')) {
                obj['adminUserPassword'] = ApiClient.convertToType(data['adminUserPassword'], 'String');
            }
            if (data.hasOwnProperty('adminUserSshPublicKey')) {
                obj['adminUserSshPublicKey'] = ApiClient.convertToType(data['adminUserSshPublicKey'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UserAccountCredentials</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UserAccountCredentials</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of UserAccountCredentials.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['adminUserName'] && !(typeof data['adminUserName'] === 'string' || data['adminUserName'] instanceof String)) {
            throw new Error("Expected the field `adminUserName` to be a primitive type in the JSON string but got " + data['adminUserName']);
        }
        // ensure the json data is a string
        if (data['adminUserPassword'] && !(typeof data['adminUserPassword'] === 'string' || data['adminUserPassword'] instanceof String)) {
            throw new Error("Expected the field `adminUserPassword` to be a primitive type in the JSON string but got " + data['adminUserPassword']);
        }
        // ensure the json data is a string
        if (data['adminUserSshPublicKey'] && !(typeof data['adminUserSshPublicKey'] === 'string' || data['adminUserSshPublicKey'] instanceof String)) {
            throw new Error("Expected the field `adminUserSshPublicKey` to be a primitive type in the JSON string but got " + data['adminUserSshPublicKey']);
        }

        return true;
    }


}

UserAccountCredentials.RequiredProperties = ["adminUserName"];

/**
 * Name of the administrator user account which can be used to SSH to nodes.
 * @member {String} adminUserName
 */
UserAccountCredentials.prototype['adminUserName'] = undefined;

/**
 * Password of the administrator user account.
 * @member {String} adminUserPassword
 */
UserAccountCredentials.prototype['adminUserPassword'] = undefined;

/**
 * SSH public key of the administrator user account.
 * @member {String} adminUserSshPublicKey
 */
UserAccountCredentials.prototype['adminUserSshPublicKey'] = undefined;






export default UserAccountCredentials;

