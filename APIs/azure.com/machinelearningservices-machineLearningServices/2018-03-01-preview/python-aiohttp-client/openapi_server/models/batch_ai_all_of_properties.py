# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.scale_settings import ScaleSettings
from openapi_server import util


class BatchAIAllOfProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, scale_settings: ScaleSettings=None, vm_priority: str=None, vm_size: str=None):
        """BatchAIAllOfProperties - a model defined in OpenAPI

        :param scale_settings: The scale_settings of this BatchAIAllOfProperties.
        :param vm_priority: The vm_priority of this BatchAIAllOfProperties.
        :param vm_size: The vm_size of this BatchAIAllOfProperties.
        """
        self.openapi_types = {
            'scale_settings': ScaleSettings,
            'vm_priority': str,
            'vm_size': str
        }

        self.attribute_map = {
            'scale_settings': 'scaleSettings',
            'vm_priority': 'vmPriority',
            'vm_size': 'vmSize'
        }

        self._scale_settings = scale_settings
        self._vm_priority = vm_priority
        self._vm_size = vm_size

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BatchAIAllOfProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BatchAI_allOf_properties of this BatchAIAllOfProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def scale_settings(self):
        """Gets the scale_settings of this BatchAIAllOfProperties.


        :return: The scale_settings of this BatchAIAllOfProperties.
        :rtype: ScaleSettings
        """
        return self._scale_settings

    @scale_settings.setter
    def scale_settings(self, scale_settings):
        """Sets the scale_settings of this BatchAIAllOfProperties.


        :param scale_settings: The scale_settings of this BatchAIAllOfProperties.
        :type scale_settings: ScaleSettings
        """

        self._scale_settings = scale_settings

    @property
    def vm_priority(self):
        """Gets the vm_priority of this BatchAIAllOfProperties.

        Virtual Machine priority

        :return: The vm_priority of this BatchAIAllOfProperties.
        :rtype: str
        """
        return self._vm_priority

    @vm_priority.setter
    def vm_priority(self, vm_priority):
        """Sets the vm_priority of this BatchAIAllOfProperties.

        Virtual Machine priority

        :param vm_priority: The vm_priority of this BatchAIAllOfProperties.
        :type vm_priority: str
        """

        self._vm_priority = vm_priority

    @property
    def vm_size(self):
        """Gets the vm_size of this BatchAIAllOfProperties.

        Virtual Machine Size

        :return: The vm_size of this BatchAIAllOfProperties.
        :rtype: str
        """
        return self._vm_size

    @vm_size.setter
    def vm_size(self, vm_size):
        """Sets the vm_size of this BatchAIAllOfProperties.

        Virtual Machine Size

        :param vm_size: The vm_size of this BatchAIAllOfProperties.
        :type vm_size: str
        """

        self._vm_size = vm_size
