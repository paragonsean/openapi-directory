/*
 * Azure Machine Learning Workspaces
 * These APIs allow end users to operate on Azure Machine Learning Workspace resources.
 *
 * The version of the OpenAPI document: 2018-03-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.ComputeResource;
import org.openapitools.client.model.ComputeSecrets;
import org.openapitools.client.model.MachineLearningServiceError;
import org.openapitools.client.model.PaginatedComputeResourcesList;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class MachineLearningComputesApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public MachineLearningComputesApi() {
        this(Configuration.getDefaultApiClient());
    }

    public MachineLearningComputesApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for machineLearningComputeCreateOrUpdate_0
     * @param subscriptionId Azure subscription identifier. (required)
     * @param resourceGroupName Name of the resource group in which workspace is located. (required)
     * @param workspaceName Name of Azure Machine Learning workspace. (required)
     * @param computeName Name of the Azure Machine Learning compute. (required)
     * @param apiVersion Version of Azure Machine Learning resource provider API. (required)
     * @param parameters Payload with Machine Learning compute definition. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Compute creation or update initiated. </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Compute creation or update initiated. </td><td>  * Azure-AsyncOperation - URI to poll for asynchronous operation status. <br>  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the request failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call machineLearningComputeCreateOrUpdate_0Call(String subscriptionId, String resourceGroupName, String workspaceName, String computeName, String apiVersion, ComputeResource parameters, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = parameters;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/computes/{computeName}"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "workspaceName" + "}", localVarApiClient.escapeString(workspaceName.toString()))
            .replace("{" + "computeName" + "}", localVarApiClient.escapeString(computeName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call machineLearningComputeCreateOrUpdate_0ValidateBeforeCall(String subscriptionId, String resourceGroupName, String workspaceName, String computeName, String apiVersion, ComputeResource parameters, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling machineLearningComputeCreateOrUpdate_0(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling machineLearningComputeCreateOrUpdate_0(Async)");
        }

        // verify the required parameter 'workspaceName' is set
        if (workspaceName == null) {
            throw new ApiException("Missing the required parameter 'workspaceName' when calling machineLearningComputeCreateOrUpdate_0(Async)");
        }

        // verify the required parameter 'computeName' is set
        if (computeName == null) {
            throw new ApiException("Missing the required parameter 'computeName' when calling machineLearningComputeCreateOrUpdate_0(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling machineLearningComputeCreateOrUpdate_0(Async)");
        }

        // verify the required parameter 'parameters' is set
        if (parameters == null) {
            throw new ApiException("Missing the required parameter 'parameters' when calling machineLearningComputeCreateOrUpdate_0(Async)");
        }

        return machineLearningComputeCreateOrUpdate_0Call(subscriptionId, resourceGroupName, workspaceName, computeName, apiVersion, parameters, _callback);

    }

    /**
     * 
     * Creates or updates compute. This call will overwrite a compute if it exists. This is a nonrecoverable operation. If your intent is to create a new compute, do a GET first to verify that it does not exist yet.
     * @param subscriptionId Azure subscription identifier. (required)
     * @param resourceGroupName Name of the resource group in which workspace is located. (required)
     * @param workspaceName Name of Azure Machine Learning workspace. (required)
     * @param computeName Name of the Azure Machine Learning compute. (required)
     * @param apiVersion Version of Azure Machine Learning resource provider API. (required)
     * @param parameters Payload with Machine Learning compute definition. (required)
     * @return ComputeResource
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Compute creation or update initiated. </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Compute creation or update initiated. </td><td>  * Azure-AsyncOperation - URI to poll for asynchronous operation status. <br>  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the request failed. </td><td>  -  </td></tr>
     </table>
     */
    public ComputeResource machineLearningComputeCreateOrUpdate_0(String subscriptionId, String resourceGroupName, String workspaceName, String computeName, String apiVersion, ComputeResource parameters) throws ApiException {
        ApiResponse<ComputeResource> localVarResp = machineLearningComputeCreateOrUpdate_0WithHttpInfo(subscriptionId, resourceGroupName, workspaceName, computeName, apiVersion, parameters);
        return localVarResp.getData();
    }

    /**
     * 
     * Creates or updates compute. This call will overwrite a compute if it exists. This is a nonrecoverable operation. If your intent is to create a new compute, do a GET first to verify that it does not exist yet.
     * @param subscriptionId Azure subscription identifier. (required)
     * @param resourceGroupName Name of the resource group in which workspace is located. (required)
     * @param workspaceName Name of Azure Machine Learning workspace. (required)
     * @param computeName Name of the Azure Machine Learning compute. (required)
     * @param apiVersion Version of Azure Machine Learning resource provider API. (required)
     * @param parameters Payload with Machine Learning compute definition. (required)
     * @return ApiResponse&lt;ComputeResource&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Compute creation or update initiated. </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Compute creation or update initiated. </td><td>  * Azure-AsyncOperation - URI to poll for asynchronous operation status. <br>  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the request failed. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ComputeResource> machineLearningComputeCreateOrUpdate_0WithHttpInfo(String subscriptionId, String resourceGroupName, String workspaceName, String computeName, String apiVersion, ComputeResource parameters) throws ApiException {
        okhttp3.Call localVarCall = machineLearningComputeCreateOrUpdate_0ValidateBeforeCall(subscriptionId, resourceGroupName, workspaceName, computeName, apiVersion, parameters, null);
        Type localVarReturnType = new TypeToken<ComputeResource>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Creates or updates compute. This call will overwrite a compute if it exists. This is a nonrecoverable operation. If your intent is to create a new compute, do a GET first to verify that it does not exist yet.
     * @param subscriptionId Azure subscription identifier. (required)
     * @param resourceGroupName Name of the resource group in which workspace is located. (required)
     * @param workspaceName Name of Azure Machine Learning workspace. (required)
     * @param computeName Name of the Azure Machine Learning compute. (required)
     * @param apiVersion Version of Azure Machine Learning resource provider API. (required)
     * @param parameters Payload with Machine Learning compute definition. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Compute creation or update initiated. </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Compute creation or update initiated. </td><td>  * Azure-AsyncOperation - URI to poll for asynchronous operation status. <br>  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the request failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call machineLearningComputeCreateOrUpdate_0Async(String subscriptionId, String resourceGroupName, String workspaceName, String computeName, String apiVersion, ComputeResource parameters, final ApiCallback<ComputeResource> _callback) throws ApiException {

        okhttp3.Call localVarCall = machineLearningComputeCreateOrUpdate_0ValidateBeforeCall(subscriptionId, resourceGroupName, workspaceName, computeName, apiVersion, parameters, _callback);
        Type localVarReturnType = new TypeToken<ComputeResource>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for machineLearningComputeDelete_0
     * @param subscriptionId Azure subscription identifier. (required)
     * @param resourceGroupName Name of the resource group in which workspace is located. (required)
     * @param workspaceName Name of Azure Machine Learning workspace. (required)
     * @param computeName Name of the Azure Machine Learning compute. (required)
     * @param apiVersion Version of Azure Machine Learning resource provider API. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The request was successful; the request was well-formed and received properly. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Compute deletion initiated. </td><td>  * Azure-AsyncOperation - URI to poll for asynchronous operation status. <br>  * Location - URI to poll for asynchronous operation result. <br>  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the request failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call machineLearningComputeDelete_0Call(String subscriptionId, String resourceGroupName, String workspaceName, String computeName, String apiVersion, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/computes/{computeName}"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "workspaceName" + "}", localVarApiClient.escapeString(workspaceName.toString()))
            .replace("{" + "computeName" + "}", localVarApiClient.escapeString(computeName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call machineLearningComputeDelete_0ValidateBeforeCall(String subscriptionId, String resourceGroupName, String workspaceName, String computeName, String apiVersion, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling machineLearningComputeDelete_0(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling machineLearningComputeDelete_0(Async)");
        }

        // verify the required parameter 'workspaceName' is set
        if (workspaceName == null) {
            throw new ApiException("Missing the required parameter 'workspaceName' when calling machineLearningComputeDelete_0(Async)");
        }

        // verify the required parameter 'computeName' is set
        if (computeName == null) {
            throw new ApiException("Missing the required parameter 'computeName' when calling machineLearningComputeDelete_0(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling machineLearningComputeDelete_0(Async)");
        }

        return machineLearningComputeDelete_0Call(subscriptionId, resourceGroupName, workspaceName, computeName, apiVersion, _callback);

    }

    /**
     * 
     * Deletes specified Machine Learning compute.
     * @param subscriptionId Azure subscription identifier. (required)
     * @param resourceGroupName Name of the resource group in which workspace is located. (required)
     * @param workspaceName Name of Azure Machine Learning workspace. (required)
     * @param computeName Name of the Azure Machine Learning compute. (required)
     * @param apiVersion Version of Azure Machine Learning resource provider API. (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The request was successful; the request was well-formed and received properly. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Compute deletion initiated. </td><td>  * Azure-AsyncOperation - URI to poll for asynchronous operation status. <br>  * Location - URI to poll for asynchronous operation result. <br>  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the request failed. </td><td>  -  </td></tr>
     </table>
     */
    public void machineLearningComputeDelete_0(String subscriptionId, String resourceGroupName, String workspaceName, String computeName, String apiVersion) throws ApiException {
        machineLearningComputeDelete_0WithHttpInfo(subscriptionId, resourceGroupName, workspaceName, computeName, apiVersion);
    }

    /**
     * 
     * Deletes specified Machine Learning compute.
     * @param subscriptionId Azure subscription identifier. (required)
     * @param resourceGroupName Name of the resource group in which workspace is located. (required)
     * @param workspaceName Name of Azure Machine Learning workspace. (required)
     * @param computeName Name of the Azure Machine Learning compute. (required)
     * @param apiVersion Version of Azure Machine Learning resource provider API. (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The request was successful; the request was well-formed and received properly. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Compute deletion initiated. </td><td>  * Azure-AsyncOperation - URI to poll for asynchronous operation status. <br>  * Location - URI to poll for asynchronous operation result. <br>  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the request failed. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> machineLearningComputeDelete_0WithHttpInfo(String subscriptionId, String resourceGroupName, String workspaceName, String computeName, String apiVersion) throws ApiException {
        okhttp3.Call localVarCall = machineLearningComputeDelete_0ValidateBeforeCall(subscriptionId, resourceGroupName, workspaceName, computeName, apiVersion, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     *  (asynchronously)
     * Deletes specified Machine Learning compute.
     * @param subscriptionId Azure subscription identifier. (required)
     * @param resourceGroupName Name of the resource group in which workspace is located. (required)
     * @param workspaceName Name of Azure Machine Learning workspace. (required)
     * @param computeName Name of the Azure Machine Learning compute. (required)
     * @param apiVersion Version of Azure Machine Learning resource provider API. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The request was successful; the request was well-formed and received properly. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Compute deletion initiated. </td><td>  * Azure-AsyncOperation - URI to poll for asynchronous operation status. <br>  * Location - URI to poll for asynchronous operation result. <br>  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the request failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call machineLearningComputeDelete_0Async(String subscriptionId, String resourceGroupName, String workspaceName, String computeName, String apiVersion, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = machineLearningComputeDelete_0ValidateBeforeCall(subscriptionId, resourceGroupName, workspaceName, computeName, apiVersion, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for machineLearningComputeGet_0
     * @param subscriptionId Azure subscription identifier. (required)
     * @param resourceGroupName Name of the resource group in which workspace is located. (required)
     * @param workspaceName Name of Azure Machine Learning workspace. (required)
     * @param computeName Name of the Azure Machine Learning compute. (required)
     * @param apiVersion Version of Azure Machine Learning resource provider API. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the request failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call machineLearningComputeGet_0Call(String subscriptionId, String resourceGroupName, String workspaceName, String computeName, String apiVersion, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/computes/{computeName}"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "workspaceName" + "}", localVarApiClient.escapeString(workspaceName.toString()))
            .replace("{" + "computeName" + "}", localVarApiClient.escapeString(computeName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call machineLearningComputeGet_0ValidateBeforeCall(String subscriptionId, String resourceGroupName, String workspaceName, String computeName, String apiVersion, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling machineLearningComputeGet_0(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling machineLearningComputeGet_0(Async)");
        }

        // verify the required parameter 'workspaceName' is set
        if (workspaceName == null) {
            throw new ApiException("Missing the required parameter 'workspaceName' when calling machineLearningComputeGet_0(Async)");
        }

        // verify the required parameter 'computeName' is set
        if (computeName == null) {
            throw new ApiException("Missing the required parameter 'computeName' when calling machineLearningComputeGet_0(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling machineLearningComputeGet_0(Async)");
        }

        return machineLearningComputeGet_0Call(subscriptionId, resourceGroupName, workspaceName, computeName, apiVersion, _callback);

    }

    /**
     * 
     * Gets compute definition by its name. Any secrets (storage keys, service credentials, etc) are not returned - use &#39;keys&#39; nested resource to get them.
     * @param subscriptionId Azure subscription identifier. (required)
     * @param resourceGroupName Name of the resource group in which workspace is located. (required)
     * @param workspaceName Name of Azure Machine Learning workspace. (required)
     * @param computeName Name of the Azure Machine Learning compute. (required)
     * @param apiVersion Version of Azure Machine Learning resource provider API. (required)
     * @return ComputeResource
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the request failed. </td><td>  -  </td></tr>
     </table>
     */
    public ComputeResource machineLearningComputeGet_0(String subscriptionId, String resourceGroupName, String workspaceName, String computeName, String apiVersion) throws ApiException {
        ApiResponse<ComputeResource> localVarResp = machineLearningComputeGet_0WithHttpInfo(subscriptionId, resourceGroupName, workspaceName, computeName, apiVersion);
        return localVarResp.getData();
    }

    /**
     * 
     * Gets compute definition by its name. Any secrets (storage keys, service credentials, etc) are not returned - use &#39;keys&#39; nested resource to get them.
     * @param subscriptionId Azure subscription identifier. (required)
     * @param resourceGroupName Name of the resource group in which workspace is located. (required)
     * @param workspaceName Name of Azure Machine Learning workspace. (required)
     * @param computeName Name of the Azure Machine Learning compute. (required)
     * @param apiVersion Version of Azure Machine Learning resource provider API. (required)
     * @return ApiResponse&lt;ComputeResource&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the request failed. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ComputeResource> machineLearningComputeGet_0WithHttpInfo(String subscriptionId, String resourceGroupName, String workspaceName, String computeName, String apiVersion) throws ApiException {
        okhttp3.Call localVarCall = machineLearningComputeGet_0ValidateBeforeCall(subscriptionId, resourceGroupName, workspaceName, computeName, apiVersion, null);
        Type localVarReturnType = new TypeToken<ComputeResource>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Gets compute definition by its name. Any secrets (storage keys, service credentials, etc) are not returned - use &#39;keys&#39; nested resource to get them.
     * @param subscriptionId Azure subscription identifier. (required)
     * @param resourceGroupName Name of the resource group in which workspace is located. (required)
     * @param workspaceName Name of Azure Machine Learning workspace. (required)
     * @param computeName Name of the Azure Machine Learning compute. (required)
     * @param apiVersion Version of Azure Machine Learning resource provider API. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the request failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call machineLearningComputeGet_0Async(String subscriptionId, String resourceGroupName, String workspaceName, String computeName, String apiVersion, final ApiCallback<ComputeResource> _callback) throws ApiException {

        okhttp3.Call localVarCall = machineLearningComputeGet_0ValidateBeforeCall(subscriptionId, resourceGroupName, workspaceName, computeName, apiVersion, _callback);
        Type localVarReturnType = new TypeToken<ComputeResource>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for machineLearningComputeListByWorkspace_0
     * @param subscriptionId Azure subscription identifier. (required)
     * @param resourceGroupName Name of the resource group in which workspace is located. (required)
     * @param workspaceName Name of Azure Machine Learning workspace. (required)
     * @param apiVersion Version of Azure Machine Learning resource provider API. (required)
     * @param $skiptoken Continuation token for pagination. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The response includes a paginated array of Machine Learning computes and a URI to the next set of results, if any. For the more information the limits of the number of items in a resource group, see https://azure.microsoft.com/en-us/documentation/articles/azure-subscription-service-limits/. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the request failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call machineLearningComputeListByWorkspace_0Call(String subscriptionId, String resourceGroupName, String workspaceName, String apiVersion, String $skiptoken, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/computes"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "workspaceName" + "}", localVarApiClient.escapeString(workspaceName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        if ($skiptoken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$skiptoken", $skiptoken));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call machineLearningComputeListByWorkspace_0ValidateBeforeCall(String subscriptionId, String resourceGroupName, String workspaceName, String apiVersion, String $skiptoken, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling machineLearningComputeListByWorkspace_0(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling machineLearningComputeListByWorkspace_0(Async)");
        }

        // verify the required parameter 'workspaceName' is set
        if (workspaceName == null) {
            throw new ApiException("Missing the required parameter 'workspaceName' when calling machineLearningComputeListByWorkspace_0(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling machineLearningComputeListByWorkspace_0(Async)");
        }

        return machineLearningComputeListByWorkspace_0Call(subscriptionId, resourceGroupName, workspaceName, apiVersion, $skiptoken, _callback);

    }

    /**
     * 
     * Gets computes in specified workspace.
     * @param subscriptionId Azure subscription identifier. (required)
     * @param resourceGroupName Name of the resource group in which workspace is located. (required)
     * @param workspaceName Name of Azure Machine Learning workspace. (required)
     * @param apiVersion Version of Azure Machine Learning resource provider API. (required)
     * @param $skiptoken Continuation token for pagination. (optional)
     * @return PaginatedComputeResourcesList
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The response includes a paginated array of Machine Learning computes and a URI to the next set of results, if any. For the more information the limits of the number of items in a resource group, see https://azure.microsoft.com/en-us/documentation/articles/azure-subscription-service-limits/. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the request failed. </td><td>  -  </td></tr>
     </table>
     */
    public PaginatedComputeResourcesList machineLearningComputeListByWorkspace_0(String subscriptionId, String resourceGroupName, String workspaceName, String apiVersion, String $skiptoken) throws ApiException {
        ApiResponse<PaginatedComputeResourcesList> localVarResp = machineLearningComputeListByWorkspace_0WithHttpInfo(subscriptionId, resourceGroupName, workspaceName, apiVersion, $skiptoken);
        return localVarResp.getData();
    }

    /**
     * 
     * Gets computes in specified workspace.
     * @param subscriptionId Azure subscription identifier. (required)
     * @param resourceGroupName Name of the resource group in which workspace is located. (required)
     * @param workspaceName Name of Azure Machine Learning workspace. (required)
     * @param apiVersion Version of Azure Machine Learning resource provider API. (required)
     * @param $skiptoken Continuation token for pagination. (optional)
     * @return ApiResponse&lt;PaginatedComputeResourcesList&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The response includes a paginated array of Machine Learning computes and a URI to the next set of results, if any. For the more information the limits of the number of items in a resource group, see https://azure.microsoft.com/en-us/documentation/articles/azure-subscription-service-limits/. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the request failed. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<PaginatedComputeResourcesList> machineLearningComputeListByWorkspace_0WithHttpInfo(String subscriptionId, String resourceGroupName, String workspaceName, String apiVersion, String $skiptoken) throws ApiException {
        okhttp3.Call localVarCall = machineLearningComputeListByWorkspace_0ValidateBeforeCall(subscriptionId, resourceGroupName, workspaceName, apiVersion, $skiptoken, null);
        Type localVarReturnType = new TypeToken<PaginatedComputeResourcesList>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Gets computes in specified workspace.
     * @param subscriptionId Azure subscription identifier. (required)
     * @param resourceGroupName Name of the resource group in which workspace is located. (required)
     * @param workspaceName Name of Azure Machine Learning workspace. (required)
     * @param apiVersion Version of Azure Machine Learning resource provider API. (required)
     * @param $skiptoken Continuation token for pagination. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The response includes a paginated array of Machine Learning computes and a URI to the next set of results, if any. For the more information the limits of the number of items in a resource group, see https://azure.microsoft.com/en-us/documentation/articles/azure-subscription-service-limits/. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the request failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call machineLearningComputeListByWorkspace_0Async(String subscriptionId, String resourceGroupName, String workspaceName, String apiVersion, String $skiptoken, final ApiCallback<PaginatedComputeResourcesList> _callback) throws ApiException {

        okhttp3.Call localVarCall = machineLearningComputeListByWorkspace_0ValidateBeforeCall(subscriptionId, resourceGroupName, workspaceName, apiVersion, $skiptoken, _callback);
        Type localVarReturnType = new TypeToken<PaginatedComputeResourcesList>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for machineLearningComputeListKeys_0
     * @param subscriptionId Azure subscription identifier. (required)
     * @param resourceGroupName Name of the resource group in which workspace is located. (required)
     * @param workspaceName Name of Azure Machine Learning workspace. (required)
     * @param computeName Name of the Azure Machine Learning compute. (required)
     * @param apiVersion Version of Azure Machine Learning resource provider API. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call machineLearningComputeListKeys_0Call(String subscriptionId, String resourceGroupName, String workspaceName, String computeName, String apiVersion, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/computes/{computeName}/listKeys"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "workspaceName" + "}", localVarApiClient.escapeString(workspaceName.toString()))
            .replace("{" + "computeName" + "}", localVarApiClient.escapeString(computeName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call machineLearningComputeListKeys_0ValidateBeforeCall(String subscriptionId, String resourceGroupName, String workspaceName, String computeName, String apiVersion, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling machineLearningComputeListKeys_0(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling machineLearningComputeListKeys_0(Async)");
        }

        // verify the required parameter 'workspaceName' is set
        if (workspaceName == null) {
            throw new ApiException("Missing the required parameter 'workspaceName' when calling machineLearningComputeListKeys_0(Async)");
        }

        // verify the required parameter 'computeName' is set
        if (computeName == null) {
            throw new ApiException("Missing the required parameter 'computeName' when calling machineLearningComputeListKeys_0(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling machineLearningComputeListKeys_0(Async)");
        }

        return machineLearningComputeListKeys_0Call(subscriptionId, resourceGroupName, workspaceName, computeName, apiVersion, _callback);

    }

    /**
     * 
     * Gets secrets related to Machine Learning compute (storage keys, service credentials, etc).
     * @param subscriptionId Azure subscription identifier. (required)
     * @param resourceGroupName Name of the resource group in which workspace is located. (required)
     * @param workspaceName Name of Azure Machine Learning workspace. (required)
     * @param computeName Name of the Azure Machine Learning compute. (required)
     * @param apiVersion Version of Azure Machine Learning resource provider API. (required)
     * @return ComputeSecrets
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public ComputeSecrets machineLearningComputeListKeys_0(String subscriptionId, String resourceGroupName, String workspaceName, String computeName, String apiVersion) throws ApiException {
        ApiResponse<ComputeSecrets> localVarResp = machineLearningComputeListKeys_0WithHttpInfo(subscriptionId, resourceGroupName, workspaceName, computeName, apiVersion);
        return localVarResp.getData();
    }

    /**
     * 
     * Gets secrets related to Machine Learning compute (storage keys, service credentials, etc).
     * @param subscriptionId Azure subscription identifier. (required)
     * @param resourceGroupName Name of the resource group in which workspace is located. (required)
     * @param workspaceName Name of Azure Machine Learning workspace. (required)
     * @param computeName Name of the Azure Machine Learning compute. (required)
     * @param apiVersion Version of Azure Machine Learning resource provider API. (required)
     * @return ApiResponse&lt;ComputeSecrets&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ComputeSecrets> machineLearningComputeListKeys_0WithHttpInfo(String subscriptionId, String resourceGroupName, String workspaceName, String computeName, String apiVersion) throws ApiException {
        okhttp3.Call localVarCall = machineLearningComputeListKeys_0ValidateBeforeCall(subscriptionId, resourceGroupName, workspaceName, computeName, apiVersion, null);
        Type localVarReturnType = new TypeToken<ComputeSecrets>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Gets secrets related to Machine Learning compute (storage keys, service credentials, etc).
     * @param subscriptionId Azure subscription identifier. (required)
     * @param resourceGroupName Name of the resource group in which workspace is located. (required)
     * @param workspaceName Name of Azure Machine Learning workspace. (required)
     * @param computeName Name of the Azure Machine Learning compute. (required)
     * @param apiVersion Version of Azure Machine Learning resource provider API. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call machineLearningComputeListKeys_0Async(String subscriptionId, String resourceGroupName, String workspaceName, String computeName, String apiVersion, final ApiCallback<ComputeSecrets> _callback) throws ApiException {

        okhttp3.Call localVarCall = machineLearningComputeListKeys_0ValidateBeforeCall(subscriptionId, resourceGroupName, workspaceName, computeName, apiVersion, _callback);
        Type localVarReturnType = new TypeToken<ComputeSecrets>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for machineLearningComputeSystemUpdate_0
     * @param subscriptionId Azure subscription identifier. (required)
     * @param resourceGroupName Name of the resource group in which workspace is located. (required)
     * @param workspaceName Name of Azure Machine Learning workspace. (required)
     * @param computeName Name of the Azure Machine Learning compute. (required)
     * @param apiVersion Version of Azure Machine Learning resource provider API. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Compute System updated. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Compute System Update initiated. </td><td>  * Azure-AsyncOperation - URI to poll for asynchronous operation status. <br>  * Location - URI to poll for asynchronous operation result. <br>  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the request failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call machineLearningComputeSystemUpdate_0Call(String subscriptionId, String resourceGroupName, String workspaceName, String computeName, String apiVersion, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/computes/{computeName}"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "workspaceName" + "}", localVarApiClient.escapeString(workspaceName.toString()))
            .replace("{" + "computeName" + "}", localVarApiClient.escapeString(computeName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call machineLearningComputeSystemUpdate_0ValidateBeforeCall(String subscriptionId, String resourceGroupName, String workspaceName, String computeName, String apiVersion, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling machineLearningComputeSystemUpdate_0(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling machineLearningComputeSystemUpdate_0(Async)");
        }

        // verify the required parameter 'workspaceName' is set
        if (workspaceName == null) {
            throw new ApiException("Missing the required parameter 'workspaceName' when calling machineLearningComputeSystemUpdate_0(Async)");
        }

        // verify the required parameter 'computeName' is set
        if (computeName == null) {
            throw new ApiException("Missing the required parameter 'computeName' when calling machineLearningComputeSystemUpdate_0(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling machineLearningComputeSystemUpdate_0(Async)");
        }

        return machineLearningComputeSystemUpdate_0Call(subscriptionId, resourceGroupName, workspaceName, computeName, apiVersion, _callback);

    }

    /**
     * 
     * System Update On Machine Learning compute.
     * @param subscriptionId Azure subscription identifier. (required)
     * @param resourceGroupName Name of the resource group in which workspace is located. (required)
     * @param workspaceName Name of Azure Machine Learning workspace. (required)
     * @param computeName Name of the Azure Machine Learning compute. (required)
     * @param apiVersion Version of Azure Machine Learning resource provider API. (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Compute System updated. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Compute System Update initiated. </td><td>  * Azure-AsyncOperation - URI to poll for asynchronous operation status. <br>  * Location - URI to poll for asynchronous operation result. <br>  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the request failed. </td><td>  -  </td></tr>
     </table>
     */
    public void machineLearningComputeSystemUpdate_0(String subscriptionId, String resourceGroupName, String workspaceName, String computeName, String apiVersion) throws ApiException {
        machineLearningComputeSystemUpdate_0WithHttpInfo(subscriptionId, resourceGroupName, workspaceName, computeName, apiVersion);
    }

    /**
     * 
     * System Update On Machine Learning compute.
     * @param subscriptionId Azure subscription identifier. (required)
     * @param resourceGroupName Name of the resource group in which workspace is located. (required)
     * @param workspaceName Name of Azure Machine Learning workspace. (required)
     * @param computeName Name of the Azure Machine Learning compute. (required)
     * @param apiVersion Version of Azure Machine Learning resource provider API. (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Compute System updated. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Compute System Update initiated. </td><td>  * Azure-AsyncOperation - URI to poll for asynchronous operation status. <br>  * Location - URI to poll for asynchronous operation result. <br>  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the request failed. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> machineLearningComputeSystemUpdate_0WithHttpInfo(String subscriptionId, String resourceGroupName, String workspaceName, String computeName, String apiVersion) throws ApiException {
        okhttp3.Call localVarCall = machineLearningComputeSystemUpdate_0ValidateBeforeCall(subscriptionId, resourceGroupName, workspaceName, computeName, apiVersion, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     *  (asynchronously)
     * System Update On Machine Learning compute.
     * @param subscriptionId Azure subscription identifier. (required)
     * @param resourceGroupName Name of the resource group in which workspace is located. (required)
     * @param workspaceName Name of Azure Machine Learning workspace. (required)
     * @param computeName Name of the Azure Machine Learning compute. (required)
     * @param apiVersion Version of Azure Machine Learning resource provider API. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Compute System updated. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Compute System Update initiated. </td><td>  * Azure-AsyncOperation - URI to poll for asynchronous operation status. <br>  * Location - URI to poll for asynchronous operation result. <br>  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the request failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call machineLearningComputeSystemUpdate_0Async(String subscriptionId, String resourceGroupName, String workspaceName, String computeName, String apiVersion, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = machineLearningComputeSystemUpdate_0ValidateBeforeCall(subscriptionId, resourceGroupName, workspaceName, computeName, apiVersion, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
}
