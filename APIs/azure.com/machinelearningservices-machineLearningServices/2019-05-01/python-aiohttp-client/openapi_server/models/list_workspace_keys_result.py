# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.registry_list_credentials_result import RegistryListCredentialsResult
from openapi_server import util


class ListWorkspaceKeysResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, app_insights_instrumentation_key: str=None, container_registry_credentials: RegistryListCredentialsResult=None, user_storage_key: str=None, user_storage_resource_id: str=None):
        """ListWorkspaceKeysResult - a model defined in OpenAPI

        :param app_insights_instrumentation_key: The app_insights_instrumentation_key of this ListWorkspaceKeysResult.
        :param container_registry_credentials: The container_registry_credentials of this ListWorkspaceKeysResult.
        :param user_storage_key: The user_storage_key of this ListWorkspaceKeysResult.
        :param user_storage_resource_id: The user_storage_resource_id of this ListWorkspaceKeysResult.
        """
        self.openapi_types = {
            'app_insights_instrumentation_key': str,
            'container_registry_credentials': RegistryListCredentialsResult,
            'user_storage_key': str,
            'user_storage_resource_id': str
        }

        self.attribute_map = {
            'app_insights_instrumentation_key': 'appInsightsInstrumentationKey',
            'container_registry_credentials': 'containerRegistryCredentials',
            'user_storage_key': 'userStorageKey',
            'user_storage_resource_id': 'userStorageResourceId'
        }

        self._app_insights_instrumentation_key = app_insights_instrumentation_key
        self._container_registry_credentials = container_registry_credentials
        self._user_storage_key = user_storage_key
        self._user_storage_resource_id = user_storage_resource_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListWorkspaceKeysResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListWorkspaceKeysResult of this ListWorkspaceKeysResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def app_insights_instrumentation_key(self):
        """Gets the app_insights_instrumentation_key of this ListWorkspaceKeysResult.


        :return: The app_insights_instrumentation_key of this ListWorkspaceKeysResult.
        :rtype: str
        """
        return self._app_insights_instrumentation_key

    @app_insights_instrumentation_key.setter
    def app_insights_instrumentation_key(self, app_insights_instrumentation_key):
        """Sets the app_insights_instrumentation_key of this ListWorkspaceKeysResult.


        :param app_insights_instrumentation_key: The app_insights_instrumentation_key of this ListWorkspaceKeysResult.
        :type app_insights_instrumentation_key: str
        """

        self._app_insights_instrumentation_key = app_insights_instrumentation_key

    @property
    def container_registry_credentials(self):
        """Gets the container_registry_credentials of this ListWorkspaceKeysResult.


        :return: The container_registry_credentials of this ListWorkspaceKeysResult.
        :rtype: RegistryListCredentialsResult
        """
        return self._container_registry_credentials

    @container_registry_credentials.setter
    def container_registry_credentials(self, container_registry_credentials):
        """Sets the container_registry_credentials of this ListWorkspaceKeysResult.


        :param container_registry_credentials: The container_registry_credentials of this ListWorkspaceKeysResult.
        :type container_registry_credentials: RegistryListCredentialsResult
        """

        self._container_registry_credentials = container_registry_credentials

    @property
    def user_storage_key(self):
        """Gets the user_storage_key of this ListWorkspaceKeysResult.


        :return: The user_storage_key of this ListWorkspaceKeysResult.
        :rtype: str
        """
        return self._user_storage_key

    @user_storage_key.setter
    def user_storage_key(self, user_storage_key):
        """Sets the user_storage_key of this ListWorkspaceKeysResult.


        :param user_storage_key: The user_storage_key of this ListWorkspaceKeysResult.
        :type user_storage_key: str
        """

        self._user_storage_key = user_storage_key

    @property
    def user_storage_resource_id(self):
        """Gets the user_storage_resource_id of this ListWorkspaceKeysResult.


        :return: The user_storage_resource_id of this ListWorkspaceKeysResult.
        :rtype: str
        """
        return self._user_storage_resource_id

    @user_storage_resource_id.setter
    def user_storage_resource_id(self, user_storage_resource_id):
        """Sets the user_storage_resource_id of this ListWorkspaceKeysResult.


        :param user_storage_resource_id: The user_storage_resource_id of this ListWorkspaceKeysResult.
        :type user_storage_resource_id: str
        """

        self._user_storage_resource_id = user_storage_resource_id
