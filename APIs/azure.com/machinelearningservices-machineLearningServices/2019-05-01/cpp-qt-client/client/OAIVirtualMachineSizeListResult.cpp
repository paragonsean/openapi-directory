/**
 * Azure Machine Learning Workspaces
 * These APIs allow end users to operate on Azure Machine Learning Workspace resources.
 *
 * The version of the OpenAPI document: 2019-05-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIVirtualMachineSizeListResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIVirtualMachineSizeListResult::OAIVirtualMachineSizeListResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIVirtualMachineSizeListResult::OAIVirtualMachineSizeListResult() {
    this->initializeModel();
}

OAIVirtualMachineSizeListResult::~OAIVirtualMachineSizeListResult() {}

void OAIVirtualMachineSizeListResult::initializeModel() {

    m_aml_compute_isSet = false;
    m_aml_compute_isValid = false;
}

void OAIVirtualMachineSizeListResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIVirtualMachineSizeListResult::fromJsonObject(QJsonObject json) {

    m_aml_compute_isValid = ::OpenAPI::fromJsonValue(m_aml_compute, json[QString("amlCompute")]);
    m_aml_compute_isSet = !json[QString("amlCompute")].isNull() && m_aml_compute_isValid;
}

QString OAIVirtualMachineSizeListResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIVirtualMachineSizeListResult::asJsonObject() const {
    QJsonObject obj;
    if (m_aml_compute.size() > 0) {
        obj.insert(QString("amlCompute"), ::OpenAPI::toJsonValue(m_aml_compute));
    }
    return obj;
}

QList<OAIVirtualMachineSize> OAIVirtualMachineSizeListResult::getAmlCompute() const {
    return m_aml_compute;
}
void OAIVirtualMachineSizeListResult::setAmlCompute(const QList<OAIVirtualMachineSize> &aml_compute) {
    m_aml_compute = aml_compute;
    m_aml_compute_isSet = true;
}

bool OAIVirtualMachineSizeListResult::is_aml_compute_Set() const{
    return m_aml_compute_isSet;
}

bool OAIVirtualMachineSizeListResult::is_aml_compute_Valid() const{
    return m_aml_compute_isValid;
}

bool OAIVirtualMachineSizeListResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_aml_compute.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIVirtualMachineSizeListResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
