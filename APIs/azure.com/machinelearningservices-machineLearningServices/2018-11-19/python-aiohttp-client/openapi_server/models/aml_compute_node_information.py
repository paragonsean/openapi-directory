# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AmlComputeNodeInformation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ip_address: str=None, node_id: str=None, port: float=None):
        """AmlComputeNodeInformation - a model defined in OpenAPI

        :param ip_address: The ip_address of this AmlComputeNodeInformation.
        :param node_id: The node_id of this AmlComputeNodeInformation.
        :param port: The port of this AmlComputeNodeInformation.
        """
        self.openapi_types = {
            'ip_address': str,
            'node_id': str,
            'port': float
        }

        self.attribute_map = {
            'ip_address': 'ipAddress',
            'node_id': 'nodeId',
            'port': 'port'
        }

        self._ip_address = ip_address
        self._node_id = node_id
        self._port = port

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AmlComputeNodeInformation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AmlComputeNodeInformation of this AmlComputeNodeInformation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ip_address(self):
        """Gets the ip_address of this AmlComputeNodeInformation.

        Public IP address of the compute node.

        :return: The ip_address of this AmlComputeNodeInformation.
        :rtype: str
        """
        return self._ip_address

    @ip_address.setter
    def ip_address(self, ip_address):
        """Sets the ip_address of this AmlComputeNodeInformation.

        Public IP address of the compute node.

        :param ip_address: The ip_address of this AmlComputeNodeInformation.
        :type ip_address: str
        """

        self._ip_address = ip_address

    @property
    def node_id(self):
        """Gets the node_id of this AmlComputeNodeInformation.

        ID of the compute node.

        :return: The node_id of this AmlComputeNodeInformation.
        :rtype: str
        """
        return self._node_id

    @node_id.setter
    def node_id(self, node_id):
        """Sets the node_id of this AmlComputeNodeInformation.

        ID of the compute node.

        :param node_id: The node_id of this AmlComputeNodeInformation.
        :type node_id: str
        """

        self._node_id = node_id

    @property
    def port(self):
        """Gets the port of this AmlComputeNodeInformation.

        SSH port number of the node.

        :return: The port of this AmlComputeNodeInformation.
        :rtype: float
        """
        return self._port

    @port.setter
    def port(self, port):
        """Sets the port of this AmlComputeNodeInformation.

        SSH port number of the node.

        :param port: The port of this AmlComputeNodeInformation.
        :type port: float
        """

        self._port = port
