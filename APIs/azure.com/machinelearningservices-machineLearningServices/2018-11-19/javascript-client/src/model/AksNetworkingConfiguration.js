/**
 * Azure Machine Learning Workspaces
 * These APIs allow end users to operate on Azure Machine Learning Workspace resources.
 *
 * The version of the OpenAPI document: 2018-11-19
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AksNetworkingConfiguration model module.
 * @module model/AksNetworkingConfiguration
 * @version 2018-11-19
 */
class AksNetworkingConfiguration {
    /**
     * Constructs a new <code>AksNetworkingConfiguration</code>.
     * Advance configuration for AKS networking
     * @alias module:model/AksNetworkingConfiguration
     */
    constructor() { 
        
        AksNetworkingConfiguration.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AksNetworkingConfiguration</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AksNetworkingConfiguration} obj Optional instance to populate.
     * @return {module:model/AksNetworkingConfiguration} The populated <code>AksNetworkingConfiguration</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AksNetworkingConfiguration();

            if (data.hasOwnProperty('dnsServiceIP')) {
                obj['dnsServiceIP'] = ApiClient.convertToType(data['dnsServiceIP'], 'String');
            }
            if (data.hasOwnProperty('dockerBridgeCidr')) {
                obj['dockerBridgeCidr'] = ApiClient.convertToType(data['dockerBridgeCidr'], 'String');
            }
            if (data.hasOwnProperty('serviceCidr')) {
                obj['serviceCidr'] = ApiClient.convertToType(data['serviceCidr'], 'String');
            }
            if (data.hasOwnProperty('subnetId')) {
                obj['subnetId'] = ApiClient.convertToType(data['subnetId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AksNetworkingConfiguration</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AksNetworkingConfiguration</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['dnsServiceIP'] && !(typeof data['dnsServiceIP'] === 'string' || data['dnsServiceIP'] instanceof String)) {
            throw new Error("Expected the field `dnsServiceIP` to be a primitive type in the JSON string but got " + data['dnsServiceIP']);
        }
        // ensure the json data is a string
        if (data['dockerBridgeCidr'] && !(typeof data['dockerBridgeCidr'] === 'string' || data['dockerBridgeCidr'] instanceof String)) {
            throw new Error("Expected the field `dockerBridgeCidr` to be a primitive type in the JSON string but got " + data['dockerBridgeCidr']);
        }
        // ensure the json data is a string
        if (data['serviceCidr'] && !(typeof data['serviceCidr'] === 'string' || data['serviceCidr'] instanceof String)) {
            throw new Error("Expected the field `serviceCidr` to be a primitive type in the JSON string but got " + data['serviceCidr']);
        }
        // ensure the json data is a string
        if (data['subnetId'] && !(typeof data['subnetId'] === 'string' || data['subnetId'] instanceof String)) {
            throw new Error("Expected the field `subnetId` to be a primitive type in the JSON string but got " + data['subnetId']);
        }

        return true;
    }


}



/**
 * An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr.
 * @member {String} dnsServiceIP
 */
AksNetworkingConfiguration.prototype['dnsServiceIP'] = undefined;

/**
 * A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes service address range.
 * @member {String} dockerBridgeCidr
 */
AksNetworkingConfiguration.prototype['dockerBridgeCidr'] = undefined;

/**
 * A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges.
 * @member {String} serviceCidr
 */
AksNetworkingConfiguration.prototype['serviceCidr'] = undefined;

/**
 * Virtual network subnet resource ID the compute nodes belong to
 * @member {String} subnetId
 */
AksNetworkingConfiguration.prototype['subnetId'] = undefined;






export default AksNetworkingConfiguration;

