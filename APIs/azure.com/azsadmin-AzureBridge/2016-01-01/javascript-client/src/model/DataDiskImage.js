/**
 * AzureBridgeAdminClient
 * AzureBridge Admin Client.
 *
 * The version of the OpenAPI document: 2016-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DataDiskImage model module.
 * @module model/DataDiskImage
 * @version 2016-01-01
 */
class DataDiskImage {
    /**
     * Constructs a new <code>DataDiskImage</code>.
     * Data disk image.
     * @alias module:model/DataDiskImage
     */
    constructor() { 
        
        DataDiskImage.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DataDiskImage</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DataDiskImage} obj Optional instance to populate.
     * @return {module:model/DataDiskImage} The populated <code>DataDiskImage</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DataDiskImage();

            if (data.hasOwnProperty('lun')) {
                obj['lun'] = ApiClient.convertToType(data['lun'], 'Number');
            }
            if (data.hasOwnProperty('sourceBlobSasUri')) {
                obj['sourceBlobSasUri'] = ApiClient.convertToType(data['sourceBlobSasUri'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DataDiskImage</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DataDiskImage</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['sourceBlobSasUri'] && !(typeof data['sourceBlobSasUri'] === 'string' || data['sourceBlobSasUri'] instanceof String)) {
            throw new Error("Expected the field `sourceBlobSasUri` to be a primitive type in the JSON string but got " + data['sourceBlobSasUri']);
        }

        return true;
    }


}



/**
 * The LUN.
 * @member {Number} lun
 */
DataDiskImage.prototype['lun'] = undefined;

/**
 * SAS key for source blob.
 * @member {String} sourceBlobSasUri
 */
DataDiskImage.prototype['sourceBlobSasUri'] = undefined;






export default DataDiskImage;

