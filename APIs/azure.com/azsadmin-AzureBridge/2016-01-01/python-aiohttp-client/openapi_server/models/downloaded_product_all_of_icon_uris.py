# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DownloadedProductAllOfIconUris(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, hero: str=None, large: str=None, medium: str=None, small: str=None, wide: str=None):
        """DownloadedProductAllOfIconUris - a model defined in OpenAPI

        :param hero: The hero of this DownloadedProductAllOfIconUris.
        :param large: The large of this DownloadedProductAllOfIconUris.
        :param medium: The medium of this DownloadedProductAllOfIconUris.
        :param small: The small of this DownloadedProductAllOfIconUris.
        :param wide: The wide of this DownloadedProductAllOfIconUris.
        """
        self.openapi_types = {
            'hero': str,
            'large': str,
            'medium': str,
            'small': str,
            'wide': str
        }

        self.attribute_map = {
            'hero': 'hero',
            'large': 'large',
            'medium': 'medium',
            'small': 'small',
            'wide': 'wide'
        }

        self._hero = hero
        self._large = large
        self._medium = medium
        self._small = small
        self._wide = wide

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DownloadedProductAllOfIconUris':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DownloadedProduct_allOf_iconUris of this DownloadedProductAllOfIconUris.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def hero(self):
        """Gets the hero of this DownloadedProductAllOfIconUris.

        The hero (815x290) icon relative path.

        :return: The hero of this DownloadedProductAllOfIconUris.
        :rtype: str
        """
        return self._hero

    @hero.setter
    def hero(self, hero):
        """Sets the hero of this DownloadedProductAllOfIconUris.

        The hero (815x290) icon relative path.

        :param hero: The hero of this DownloadedProductAllOfIconUris.
        :type hero: str
        """

        self._hero = hero

    @property
    def large(self):
        """Gets the large of this DownloadedProductAllOfIconUris.

        The large (115x115) icon relative path.

        :return: The large of this DownloadedProductAllOfIconUris.
        :rtype: str
        """
        return self._large

    @large.setter
    def large(self, large):
        """Sets the large of this DownloadedProductAllOfIconUris.

        The large (115x115) icon relative path.

        :param large: The large of this DownloadedProductAllOfIconUris.
        :type large: str
        """

        self._large = large

    @property
    def medium(self):
        """Gets the medium of this DownloadedProductAllOfIconUris.

        The medium (90x90) icon relative path.

        :return: The medium of this DownloadedProductAllOfIconUris.
        :rtype: str
        """
        return self._medium

    @medium.setter
    def medium(self, medium):
        """Sets the medium of this DownloadedProductAllOfIconUris.

        The medium (90x90) icon relative path.

        :param medium: The medium of this DownloadedProductAllOfIconUris.
        :type medium: str
        """

        self._medium = medium

    @property
    def small(self):
        """Gets the small of this DownloadedProductAllOfIconUris.

        The small (40x40) icon relative path.

        :return: The small of this DownloadedProductAllOfIconUris.
        :rtype: str
        """
        return self._small

    @small.setter
    def small(self, small):
        """Sets the small of this DownloadedProductAllOfIconUris.

        The small (40x40) icon relative path.

        :param small: The small of this DownloadedProductAllOfIconUris.
        :type small: str
        """

        self._small = small

    @property
    def wide(self):
        """Gets the wide of this DownloadedProductAllOfIconUris.

        The wide (255x115) icon relative path.

        :return: The wide of this DownloadedProductAllOfIconUris.
        :rtype: str
        """
        return self._wide

    @wide.setter
    def wide(self, wide):
        """Sets the wide of this DownloadedProductAllOfIconUris.

        The wide (255x115) icon relative path.

        :param wide: The wide of this DownloadedProductAllOfIconUris.
        :type wide: str
        """

        self._wide = wide
