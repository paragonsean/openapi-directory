/*
 * AzureBridgeAdminClient
 * AzureBridge Admin Client.
 *
 * The version of the OpenAPI document: 2016-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.DownloadedProductAllOfCompatibility;
import org.openapitools.client.model.DownloadedProductAllOfIconUris;
import org.openapitools.client.model.DownloadedProductAllOfProductProperties;
import org.openapitools.client.model.ExtendedProductProperties;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Properties for aggregate usage.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:30:26.954717-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DownloadedProduct {
  public static final String SERIALIZED_NAME_GALLERY_PACKAGE_BLOB_SAS_URI = "galleryPackageBlobSasUri";
  @SerializedName(SERIALIZED_NAME_GALLERY_PACKAGE_BLOB_SAS_URI)
  private String galleryPackageBlobSasUri;

  public static final String SERIALIZED_NAME_LEGAL_TERMS = "legalTerms";
  @SerializedName(SERIALIZED_NAME_LEGAL_TERMS)
  private String legalTerms;

  public static final String SERIALIZED_NAME_LINKS = "links";
  @SerializedName(SERIALIZED_NAME_LINKS)
  private List<Object> links = new ArrayList<>();

  public static final String SERIALIZED_NAME_PRIVACY_POLICY = "privacyPolicy";
  @SerializedName(SERIALIZED_NAME_PRIVACY_POLICY)
  private String privacyPolicy;

  public static final String SERIALIZED_NAME_PRODUCT_DETAILS_PROPERTIES = "productDetailsProperties";
  @SerializedName(SERIALIZED_NAME_PRODUCT_DETAILS_PROPERTIES)
  private ExtendedProductProperties productDetailsProperties;

  /**
   * The provisioning state of the resource.
   */
  @JsonAdapter(ProvisioningStateEnum.Adapter.class)
  public enum ProvisioningStateEnum {
    STOPPED("Stopped"),
    
    STARTING("Starting"),
    
    RUNNING("Running"),
    
    STOPPING("Stopping"),
    
    SUCCEEDED("Succeeded"),
    
    DOWNLOADING("Downloading");

    private String value;

    ProvisioningStateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ProvisioningStateEnum fromValue(String value) {
      for (ProvisioningStateEnum b : ProvisioningStateEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ProvisioningStateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ProvisioningStateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ProvisioningStateEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ProvisioningStateEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      ProvisioningStateEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_PROVISIONING_STATE = "provisioningState";
  @SerializedName(SERIALIZED_NAME_PROVISIONING_STATE)
  private ProvisioningStateEnum provisioningState;

  public static final String SERIALIZED_NAME_VM_EXTENSION_TYPE = "vmExtensionType";
  @SerializedName(SERIALIZED_NAME_VM_EXTENSION_TYPE)
  private String vmExtensionType;

  public static final String SERIALIZED_NAME_BILLING_PART_NUMBER = "billingPartNumber";
  @SerializedName(SERIALIZED_NAME_BILLING_PART_NUMBER)
  private String billingPartNumber;

  public static final String SERIALIZED_NAME_COMPATIBILITY = "compatibility";
  @SerializedName(SERIALIZED_NAME_COMPATIBILITY)
  private DownloadedProductAllOfCompatibility compatibility;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "displayName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_GALLERY_ITEM_IDENTITY = "galleryItemIdentity";
  @SerializedName(SERIALIZED_NAME_GALLERY_ITEM_IDENTITY)
  private String galleryItemIdentity;

  public static final String SERIALIZED_NAME_ICON_URIS = "iconUris";
  @SerializedName(SERIALIZED_NAME_ICON_URIS)
  private DownloadedProductAllOfIconUris iconUris;

  public static final String SERIALIZED_NAME_OFFER = "offer";
  @SerializedName(SERIALIZED_NAME_OFFER)
  private String offer;

  public static final String SERIALIZED_NAME_OFFER_VERSION = "offerVersion";
  @SerializedName(SERIALIZED_NAME_OFFER_VERSION)
  private String offerVersion;

  public static final String SERIALIZED_NAME_PAYLOAD_LENGTH = "payloadLength";
  @SerializedName(SERIALIZED_NAME_PAYLOAD_LENGTH)
  private Long payloadLength;

  public static final String SERIALIZED_NAME_PRODUCT_KIND = "productKind";
  @SerializedName(SERIALIZED_NAME_PRODUCT_KIND)
  private String productKind;

  public static final String SERIALIZED_NAME_PRODUCT_PROPERTIES = "productProperties";
  @SerializedName(SERIALIZED_NAME_PRODUCT_PROPERTIES)
  private DownloadedProductAllOfProductProperties productProperties;

  public static final String SERIALIZED_NAME_PUBLISHER_DISPLAY_NAME = "publisherDisplayName";
  @SerializedName(SERIALIZED_NAME_PUBLISHER_DISPLAY_NAME)
  private String publisherDisplayName;

  public static final String SERIALIZED_NAME_PUBLISHER_IDENTIFIER = "publisherIdentifier";
  @SerializedName(SERIALIZED_NAME_PUBLISHER_IDENTIFIER)
  private String publisherIdentifier;

  public static final String SERIALIZED_NAME_SKU = "sku";
  @SerializedName(SERIALIZED_NAME_SKU)
  private String sku;

  public DownloadedProduct() {
  }

  public DownloadedProduct(
     String galleryPackageBlobSasUri
  ) {
    this();
    this.galleryPackageBlobSasUri = galleryPackageBlobSasUri;
  }

  /**
   * The URI to the .azpkg file that provides information required for showing product in the gallery.
   * @return galleryPackageBlobSasUri
   */
  @javax.annotation.Nullable
  public String getGalleryPackageBlobSasUri() {
    return galleryPackageBlobSasUri;
  }



  public DownloadedProduct legalTerms(String legalTerms) {
    this.legalTerms = legalTerms;
    return this;
  }

  /**
   * Legal terms for the product.
   * @return legalTerms
   */
  @javax.annotation.Nullable
  public String getLegalTerms() {
    return legalTerms;
  }

  public void setLegalTerms(String legalTerms) {
    this.legalTerms = legalTerms;
  }


  public DownloadedProduct links(List<Object> links) {
    this.links = links;
    return this;
  }

  public DownloadedProduct addLinksItem(Object linksItem) {
    if (this.links == null) {
      this.links = new ArrayList<>();
    }
    this.links.add(linksItem);
    return this;
  }

  /**
   * List of product links.
   * @return links
   */
  @javax.annotation.Nullable
  public List<Object> getLinks() {
    return links;
  }

  public void setLinks(List<Object> links) {
    this.links = links;
  }


  public DownloadedProduct privacyPolicy(String privacyPolicy) {
    this.privacyPolicy = privacyPolicy;
    return this;
  }

  /**
   * Privacy policy of the product.
   * @return privacyPolicy
   */
  @javax.annotation.Nullable
  public String getPrivacyPolicy() {
    return privacyPolicy;
  }

  public void setPrivacyPolicy(String privacyPolicy) {
    this.privacyPolicy = privacyPolicy;
  }


  public DownloadedProduct productDetailsProperties(ExtendedProductProperties productDetailsProperties) {
    this.productDetailsProperties = productDetailsProperties;
    return this;
  }

  /**
   * Get productDetailsProperties
   * @return productDetailsProperties
   */
  @javax.annotation.Nullable
  public ExtendedProductProperties getProductDetailsProperties() {
    return productDetailsProperties;
  }

  public void setProductDetailsProperties(ExtendedProductProperties productDetailsProperties) {
    this.productDetailsProperties = productDetailsProperties;
  }


  public DownloadedProduct provisioningState(ProvisioningStateEnum provisioningState) {
    this.provisioningState = provisioningState;
    return this;
  }

  /**
   * The provisioning state of the resource.
   * @return provisioningState
   */
  @javax.annotation.Nullable
  public ProvisioningStateEnum getProvisioningState() {
    return provisioningState;
  }

  public void setProvisioningState(ProvisioningStateEnum provisioningState) {
    this.provisioningState = provisioningState;
  }


  public DownloadedProduct vmExtensionType(String vmExtensionType) {
    this.vmExtensionType = vmExtensionType;
    return this;
  }

  /**
   * Extension type of the VM.
   * @return vmExtensionType
   */
  @javax.annotation.Nullable
  public String getVmExtensionType() {
    return vmExtensionType;
  }

  public void setVmExtensionType(String vmExtensionType) {
    this.vmExtensionType = vmExtensionType;
  }


  public DownloadedProduct billingPartNumber(String billingPartNumber) {
    this.billingPartNumber = billingPartNumber;
    return this;
  }

  /**
   * Billing part number.
   * @return billingPartNumber
   */
  @javax.annotation.Nullable
  public String getBillingPartNumber() {
    return billingPartNumber;
  }

  public void setBillingPartNumber(String billingPartNumber) {
    this.billingPartNumber = billingPartNumber;
  }


  public DownloadedProduct compatibility(DownloadedProductAllOfCompatibility compatibility) {
    this.compatibility = compatibility;
    return this;
  }

  /**
   * Get compatibility
   * @return compatibility
   */
  @javax.annotation.Nullable
  public DownloadedProductAllOfCompatibility getCompatibility() {
    return compatibility;
  }

  public void setCompatibility(DownloadedProductAllOfCompatibility compatibility) {
    this.compatibility = compatibility;
  }


  public DownloadedProduct description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Description of the product.
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public DownloadedProduct displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Name displayed for the product.
   * @return displayName
   */
  @javax.annotation.Nullable
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public DownloadedProduct galleryItemIdentity(String galleryItemIdentity) {
    this.galleryItemIdentity = galleryItemIdentity;
    return this;
  }

  /**
   * Gallery item identity.
   * @return galleryItemIdentity
   */
  @javax.annotation.Nullable
  public String getGalleryItemIdentity() {
    return galleryItemIdentity;
  }

  public void setGalleryItemIdentity(String galleryItemIdentity) {
    this.galleryItemIdentity = galleryItemIdentity;
  }


  public DownloadedProduct iconUris(DownloadedProductAllOfIconUris iconUris) {
    this.iconUris = iconUris;
    return this;
  }

  /**
   * Get iconUris
   * @return iconUris
   */
  @javax.annotation.Nullable
  public DownloadedProductAllOfIconUris getIconUris() {
    return iconUris;
  }

  public void setIconUris(DownloadedProductAllOfIconUris iconUris) {
    this.iconUris = iconUris;
  }


  public DownloadedProduct offer(String offer) {
    this.offer = offer;
    return this;
  }

  /**
   * Offer name.
   * @return offer
   */
  @javax.annotation.Nullable
  public String getOffer() {
    return offer;
  }

  public void setOffer(String offer) {
    this.offer = offer;
  }


  public DownloadedProduct offerVersion(String offerVersion) {
    this.offerVersion = offerVersion;
    return this;
  }

  /**
   * Offer version.
   * @return offerVersion
   */
  @javax.annotation.Nullable
  public String getOfferVersion() {
    return offerVersion;
  }

  public void setOfferVersion(String offerVersion) {
    this.offerVersion = offerVersion;
  }


  public DownloadedProduct payloadLength(Long payloadLength) {
    this.payloadLength = payloadLength;
    return this;
  }

  /**
   * Size in bytes.
   * @return payloadLength
   */
  @javax.annotation.Nullable
  public Long getPayloadLength() {
    return payloadLength;
  }

  public void setPayloadLength(Long payloadLength) {
    this.payloadLength = payloadLength;
  }


  public DownloadedProduct productKind(String productKind) {
    this.productKind = productKind;
    return this;
  }

  /**
   * The kind. E.g. VirtualMachineProductProperties.ProductKind or WebApp, SolutionTemplate.
   * @return productKind
   */
  @javax.annotation.Nullable
  public String getProductKind() {
    return productKind;
  }

  public void setProductKind(String productKind) {
    this.productKind = productKind;
  }


  public DownloadedProduct productProperties(DownloadedProductAllOfProductProperties productProperties) {
    this.productProperties = productProperties;
    return this;
  }

  /**
   * Get productProperties
   * @return productProperties
   */
  @javax.annotation.Nullable
  public DownloadedProductAllOfProductProperties getProductProperties() {
    return productProperties;
  }

  public void setProductProperties(DownloadedProductAllOfProductProperties productProperties) {
    this.productProperties = productProperties;
  }


  public DownloadedProduct publisherDisplayName(String publisherDisplayName) {
    this.publisherDisplayName = publisherDisplayName;
    return this;
  }

  /**
   * Name of publisher.
   * @return publisherDisplayName
   */
  @javax.annotation.Nullable
  public String getPublisherDisplayName() {
    return publisherDisplayName;
  }

  public void setPublisherDisplayName(String publisherDisplayName) {
    this.publisherDisplayName = publisherDisplayName;
  }


  public DownloadedProduct publisherIdentifier(String publisherIdentifier) {
    this.publisherIdentifier = publisherIdentifier;
    return this;
  }

  /**
   * Publisher identifier.
   * @return publisherIdentifier
   */
  @javax.annotation.Nullable
  public String getPublisherIdentifier() {
    return publisherIdentifier;
  }

  public void setPublisherIdentifier(String publisherIdentifier) {
    this.publisherIdentifier = publisherIdentifier;
  }


  public DownloadedProduct sku(String sku) {
    this.sku = sku;
    return this;
  }

  /**
   * Product SKU.
   * @return sku
   */
  @javax.annotation.Nullable
  public String getSku() {
    return sku;
  }

  public void setSku(String sku) {
    this.sku = sku;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DownloadedProduct downloadedProduct = (DownloadedProduct) o;
    return Objects.equals(this.galleryPackageBlobSasUri, downloadedProduct.galleryPackageBlobSasUri) &&
        Objects.equals(this.legalTerms, downloadedProduct.legalTerms) &&
        Objects.equals(this.links, downloadedProduct.links) &&
        Objects.equals(this.privacyPolicy, downloadedProduct.privacyPolicy) &&
        Objects.equals(this.productDetailsProperties, downloadedProduct.productDetailsProperties) &&
        Objects.equals(this.provisioningState, downloadedProduct.provisioningState) &&
        Objects.equals(this.vmExtensionType, downloadedProduct.vmExtensionType) &&
        Objects.equals(this.billingPartNumber, downloadedProduct.billingPartNumber) &&
        Objects.equals(this.compatibility, downloadedProduct.compatibility) &&
        Objects.equals(this.description, downloadedProduct.description) &&
        Objects.equals(this.displayName, downloadedProduct.displayName) &&
        Objects.equals(this.galleryItemIdentity, downloadedProduct.galleryItemIdentity) &&
        Objects.equals(this.iconUris, downloadedProduct.iconUris) &&
        Objects.equals(this.offer, downloadedProduct.offer) &&
        Objects.equals(this.offerVersion, downloadedProduct.offerVersion) &&
        Objects.equals(this.payloadLength, downloadedProduct.payloadLength) &&
        Objects.equals(this.productKind, downloadedProduct.productKind) &&
        Objects.equals(this.productProperties, downloadedProduct.productProperties) &&
        Objects.equals(this.publisherDisplayName, downloadedProduct.publisherDisplayName) &&
        Objects.equals(this.publisherIdentifier, downloadedProduct.publisherIdentifier) &&
        Objects.equals(this.sku, downloadedProduct.sku);
  }

  @Override
  public int hashCode() {
    return Objects.hash(galleryPackageBlobSasUri, legalTerms, links, privacyPolicy, productDetailsProperties, provisioningState, vmExtensionType, billingPartNumber, compatibility, description, displayName, galleryItemIdentity, iconUris, offer, offerVersion, payloadLength, productKind, productProperties, publisherDisplayName, publisherIdentifier, sku);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DownloadedProduct {\n");
    sb.append("    galleryPackageBlobSasUri: ").append(toIndentedString(galleryPackageBlobSasUri)).append("\n");
    sb.append("    legalTerms: ").append(toIndentedString(legalTerms)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("    privacyPolicy: ").append(toIndentedString(privacyPolicy)).append("\n");
    sb.append("    productDetailsProperties: ").append(toIndentedString(productDetailsProperties)).append("\n");
    sb.append("    provisioningState: ").append(toIndentedString(provisioningState)).append("\n");
    sb.append("    vmExtensionType: ").append(toIndentedString(vmExtensionType)).append("\n");
    sb.append("    billingPartNumber: ").append(toIndentedString(billingPartNumber)).append("\n");
    sb.append("    compatibility: ").append(toIndentedString(compatibility)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    galleryItemIdentity: ").append(toIndentedString(galleryItemIdentity)).append("\n");
    sb.append("    iconUris: ").append(toIndentedString(iconUris)).append("\n");
    sb.append("    offer: ").append(toIndentedString(offer)).append("\n");
    sb.append("    offerVersion: ").append(toIndentedString(offerVersion)).append("\n");
    sb.append("    payloadLength: ").append(toIndentedString(payloadLength)).append("\n");
    sb.append("    productKind: ").append(toIndentedString(productKind)).append("\n");
    sb.append("    productProperties: ").append(toIndentedString(productProperties)).append("\n");
    sb.append("    publisherDisplayName: ").append(toIndentedString(publisherDisplayName)).append("\n");
    sb.append("    publisherIdentifier: ").append(toIndentedString(publisherIdentifier)).append("\n");
    sb.append("    sku: ").append(toIndentedString(sku)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("billingPartNumber");
    openapiFields.add("compatibility");
    openapiFields.add("description");
    openapiFields.add("displayName");
    openapiFields.add("galleryItemIdentity");
    openapiFields.add("iconUris");
    openapiFields.add("offer");
    openapiFields.add("offerVersion");
    openapiFields.add("payloadLength");
    openapiFields.add("productKind");
    openapiFields.add("productProperties");
    openapiFields.add("publisherDisplayName");
    openapiFields.add("publisherIdentifier");
    openapiFields.add("sku");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DownloadedProduct
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DownloadedProduct.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DownloadedProduct is not found in the empty JSON string", DownloadedProduct.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DownloadedProduct.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DownloadedProduct` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("galleryPackageBlobSasUri") != null && !jsonObj.get("galleryPackageBlobSasUri").isJsonNull()) && !jsonObj.get("galleryPackageBlobSasUri").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `galleryPackageBlobSasUri` to be a primitive type in the JSON string but got `%s`", jsonObj.get("galleryPackageBlobSasUri").toString()));
      }
      if ((jsonObj.get("legalTerms") != null && !jsonObj.get("legalTerms").isJsonNull()) && !jsonObj.get("legalTerms").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `legalTerms` to be a primitive type in the JSON string but got `%s`", jsonObj.get("legalTerms").toString()));
      }
      if (jsonObj.get("links") != null && !jsonObj.get("links").isJsonNull()) {
        JsonArray jsonArraylinks = jsonObj.getAsJsonArray("links");
        if (jsonArraylinks != null) {
          // ensure the json data is an array
          if (!jsonObj.get("links").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `links` to be an array in the JSON string but got `%s`", jsonObj.get("links").toString()));
          }

          // validate the optional field `links` (array)
          for (int i = 0; i < jsonArraylinks.size(); i++) {
            Object.validateJsonElement(jsonArraylinks.get(i));
          };
        }
      }
      if ((jsonObj.get("privacyPolicy") != null && !jsonObj.get("privacyPolicy").isJsonNull()) && !jsonObj.get("privacyPolicy").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `privacyPolicy` to be a primitive type in the JSON string but got `%s`", jsonObj.get("privacyPolicy").toString()));
      }
      // validate the optional field `productDetailsProperties`
      if (jsonObj.get("productDetailsProperties") != null && !jsonObj.get("productDetailsProperties").isJsonNull()) {
        ExtendedProductProperties.validateJsonElement(jsonObj.get("productDetailsProperties"));
      }
      if ((jsonObj.get("provisioningState") != null && !jsonObj.get("provisioningState").isJsonNull()) && !jsonObj.get("provisioningState").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `provisioningState` to be a primitive type in the JSON string but got `%s`", jsonObj.get("provisioningState").toString()));
      }
      // validate the optional field `provisioningState`
      if (jsonObj.get("provisioningState") != null && !jsonObj.get("provisioningState").isJsonNull()) {
        ProvisioningStateEnum.validateJsonElement(jsonObj.get("provisioningState"));
      }
      if ((jsonObj.get("vmExtensionType") != null && !jsonObj.get("vmExtensionType").isJsonNull()) && !jsonObj.get("vmExtensionType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `vmExtensionType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("vmExtensionType").toString()));
      }
      if ((jsonObj.get("billingPartNumber") != null && !jsonObj.get("billingPartNumber").isJsonNull()) && !jsonObj.get("billingPartNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `billingPartNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("billingPartNumber").toString()));
      }
      // validate the optional field `compatibility`
      if (jsonObj.get("compatibility") != null && !jsonObj.get("compatibility").isJsonNull()) {
        DownloadedProductAllOfCompatibility.validateJsonElement(jsonObj.get("compatibility"));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("displayName") != null && !jsonObj.get("displayName").isJsonNull()) && !jsonObj.get("displayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayName").toString()));
      }
      if ((jsonObj.get("galleryItemIdentity") != null && !jsonObj.get("galleryItemIdentity").isJsonNull()) && !jsonObj.get("galleryItemIdentity").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `galleryItemIdentity` to be a primitive type in the JSON string but got `%s`", jsonObj.get("galleryItemIdentity").toString()));
      }
      // validate the optional field `iconUris`
      if (jsonObj.get("iconUris") != null && !jsonObj.get("iconUris").isJsonNull()) {
        DownloadedProductAllOfIconUris.validateJsonElement(jsonObj.get("iconUris"));
      }
      if ((jsonObj.get("offer") != null && !jsonObj.get("offer").isJsonNull()) && !jsonObj.get("offer").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `offer` to be a primitive type in the JSON string but got `%s`", jsonObj.get("offer").toString()));
      }
      if ((jsonObj.get("offerVersion") != null && !jsonObj.get("offerVersion").isJsonNull()) && !jsonObj.get("offerVersion").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `offerVersion` to be a primitive type in the JSON string but got `%s`", jsonObj.get("offerVersion").toString()));
      }
      if ((jsonObj.get("productKind") != null && !jsonObj.get("productKind").isJsonNull()) && !jsonObj.get("productKind").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `productKind` to be a primitive type in the JSON string but got `%s`", jsonObj.get("productKind").toString()));
      }
      // validate the optional field `productProperties`
      if (jsonObj.get("productProperties") != null && !jsonObj.get("productProperties").isJsonNull()) {
        DownloadedProductAllOfProductProperties.validateJsonElement(jsonObj.get("productProperties"));
      }
      if ((jsonObj.get("publisherDisplayName") != null && !jsonObj.get("publisherDisplayName").isJsonNull()) && !jsonObj.get("publisherDisplayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `publisherDisplayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("publisherDisplayName").toString()));
      }
      if ((jsonObj.get("publisherIdentifier") != null && !jsonObj.get("publisherIdentifier").isJsonNull()) && !jsonObj.get("publisherIdentifier").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `publisherIdentifier` to be a primitive type in the JSON string but got `%s`", jsonObj.get("publisherIdentifier").toString()));
      }
      if ((jsonObj.get("sku") != null && !jsonObj.get("sku").isJsonNull()) && !jsonObj.get("sku").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sku` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sku").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DownloadedProduct.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DownloadedProduct' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DownloadedProduct> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DownloadedProduct.class));

       return (TypeAdapter<T>) new TypeAdapter<DownloadedProduct>() {
           @Override
           public void write(JsonWriter out, DownloadedProduct value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DownloadedProduct read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DownloadedProduct given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DownloadedProduct
   * @throws IOException if the JSON string is invalid with respect to DownloadedProduct
   */
  public static DownloadedProduct fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DownloadedProduct.class);
  }

  /**
   * Convert an instance of DownloadedProduct to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

