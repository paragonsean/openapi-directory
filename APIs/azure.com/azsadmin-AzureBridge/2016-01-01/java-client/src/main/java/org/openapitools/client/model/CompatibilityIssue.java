/*
 * AzureBridgeAdminClient
 * AzureBridge Admin Client.
 *
 * The version of the OpenAPI document: 2016-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Compatibility issue
 */
@JsonAdapter(CompatibilityIssue.Adapter.class)
public enum CompatibilityIssue {
  
  HIGHER_DEVICE_VERSION_REQUIRED("HigherDeviceVersionRequired"),
  
  LOWER_DEVICE_VERSION_REQUIRED("LowerDeviceVersionRequired"),
  
  CAPACITY_BILLING_MODEL_REQUIRED("CapacityBillingModelRequired"),
  
  PAY_AS_YOU_GO_BILLING_MODEL_REQUIRED("PayAsYouGoBillingModelRequired"),
  
  DEVELOPMENT_BILLING_MODEL_REQUIRED("DevelopmentBillingModelRequired"),
  
  AZURE_AD_IDENTITY_SYSTEM_REQUIRED("AzureADIdentitySystemRequired"),
  
  ADFS_IDENTITY_SYSTEM_REQUIRED("ADFSIdentitySystemRequired"),
  
  CONNECTION_TO_INTERNET_REQUIRED("ConnectionToInternetRequired"),
  
  CONNECTION_TO_AZURE_REQUIRED("ConnectionToAzureRequired"),
  
  DISCONNECTED_ENVIRONMENT_REQUIRED("DisconnectedEnvironmentRequired");

  private String value;

  CompatibilityIssue(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static CompatibilityIssue fromValue(String value) {
    for (CompatibilityIssue b : CompatibilityIssue.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<CompatibilityIssue> {
    @Override
    public void write(final JsonWriter jsonWriter, final CompatibilityIssue enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public CompatibilityIssue read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return CompatibilityIssue.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    CompatibilityIssue.fromValue(value);
  }
}

