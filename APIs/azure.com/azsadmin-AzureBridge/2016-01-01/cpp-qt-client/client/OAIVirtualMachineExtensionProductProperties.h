/**
 * AzureBridgeAdminClient
 * AzureBridge Admin Client.
 *
 * The version of the OpenAPI document: 2016-01-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVirtualMachineExtensionProductProperties.h
 *
 * Product information.
 */

#ifndef OAIVirtualMachineExtensionProductProperties_H
#define OAIVirtualMachineExtensionProductProperties_H

#include <QJsonObject>

#include "OAIComputeRole.h"
#include "OAIOperatingSystem.h"
#include "OAIUri.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUri;

class OAIVirtualMachineExtensionProductProperties : public OAIObject {
public:
    OAIVirtualMachineExtensionProductProperties();
    OAIVirtualMachineExtensionProductProperties(QString json);
    ~OAIVirtualMachineExtensionProductProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIComputeRole getComputeRole() const;
    void setComputeRole(const OAIComputeRole &compute_role);
    bool is_compute_role_Set() const;
    bool is_compute_role_Valid() const;

    bool isIsSystemExtension() const;
    void setIsSystemExtension(const bool &is_system_extension);
    bool is_is_system_extension_Set() const;
    bool is_is_system_extension_Valid() const;

    OAIUri getSourceBlob() const;
    void setSourceBlob(const OAIUri &source_blob);
    bool is_source_blob_Set() const;
    bool is_source_blob_Valid() const;

    bool isSupportMultipleExtensions() const;
    void setSupportMultipleExtensions(const bool &support_multiple_extensions);
    bool is_support_multiple_extensions_Set() const;
    bool is_support_multiple_extensions_Valid() const;

    QString getVersion() const;
    void setVersion(const QString &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    OAIOperatingSystem getVmOsType() const;
    void setVmOsType(const OAIOperatingSystem &vm_os_type);
    bool is_vm_os_type_Set() const;
    bool is_vm_os_type_Valid() const;

    bool isVmScaleSetEnabled() const;
    void setVmScaleSetEnabled(const bool &vm_scale_set_enabled);
    bool is_vm_scale_set_enabled_Set() const;
    bool is_vm_scale_set_enabled_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIComputeRole m_compute_role;
    bool m_compute_role_isSet;
    bool m_compute_role_isValid;

    bool m_is_system_extension;
    bool m_is_system_extension_isSet;
    bool m_is_system_extension_isValid;

    OAIUri m_source_blob;
    bool m_source_blob_isSet;
    bool m_source_blob_isValid;

    bool m_support_multiple_extensions;
    bool m_support_multiple_extensions_isSet;
    bool m_support_multiple_extensions_isValid;

    QString m_version;
    bool m_version_isSet;
    bool m_version_isValid;

    OAIOperatingSystem m_vm_os_type;
    bool m_vm_os_type_isSet;
    bool m_vm_os_type_isValid;

    bool m_vm_scale_set_enabled;
    bool m_vm_scale_set_enabled_isSet;
    bool m_vm_scale_set_enabled_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVirtualMachineExtensionProductProperties)

#endif // OAIVirtualMachineExtensionProductProperties_H
