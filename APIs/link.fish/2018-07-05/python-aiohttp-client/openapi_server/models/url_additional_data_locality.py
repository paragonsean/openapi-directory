# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UrlAdditionalDataLocality(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, country: str=None, language: str=None):
        """UrlAdditionalDataLocality - a model defined in OpenAPI

        :param country: The country of this UrlAdditionalDataLocality.
        :param language: The language of this UrlAdditionalDataLocality.
        """
        self.openapi_types = {
            'country': str,
            'language': str
        }

        self.attribute_map = {
            'country': 'country',
            'language': 'language'
        }

        self._country = country
        self._language = language

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UrlAdditionalDataLocality':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Url_additionalData_locality of this UrlAdditionalDataLocality.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def country(self):
        """Gets the country of this UrlAdditionalDataLocality.

        The recognized country of the website determined by TLD.

        :return: The country of this UrlAdditionalDataLocality.
        :rtype: str
        """
        return self._country

    @country.setter
    def country(self, country):
        """Sets the country of this UrlAdditionalDataLocality.

        The recognized country of the website determined by TLD.

        :param country: The country of this UrlAdditionalDataLocality.
        :type country: str
        """

        self._country = country

    @property
    def language(self):
        """Gets the language of this UrlAdditionalDataLocality.

        The language of website. Recognized by header information if supplied or text analysis.

        :return: The language of this UrlAdditionalDataLocality.
        :rtype: str
        """
        return self._language

    @language.setter
    def language(self, language):
        """Sets the language of this UrlAdditionalDataLocality.

        The language of website. Recognized by header information if supplied or text analysis.

        :param language: The language of this UrlAdditionalDataLocality.
        :type language: str
        """

        self._language = language
