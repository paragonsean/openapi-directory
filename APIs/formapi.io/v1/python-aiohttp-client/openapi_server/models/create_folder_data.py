# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_folder_data_folder import CreateFolderDataFolder
from openapi_server import util


class CreateFolderData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, folder: CreateFolderDataFolder=None):
        """CreateFolderData - a model defined in OpenAPI

        :param folder: The folder of this CreateFolderData.
        """
        self.openapi_types = {
            'folder': CreateFolderDataFolder
        }

        self.attribute_map = {
            'folder': 'folder'
        }

        self._folder = folder

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateFolderData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The create_folder_data of this CreateFolderData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def folder(self):
        """Gets the folder of this CreateFolderData.


        :return: The folder of this CreateFolderData.
        :rtype: CreateFolderDataFolder
        """
        return self._folder

    @folder.setter
    def folder(self, folder):
        """Sets the folder of this CreateFolderData.


        :param folder: The folder of this CreateFolderData.
        :type folder: CreateFolderDataFolder
        """
        if folder is None:
            raise ValueError("Invalid value for `folder`, must not be `None`")

        self._folder = folder
