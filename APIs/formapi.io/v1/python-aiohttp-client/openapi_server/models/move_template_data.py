# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MoveTemplateData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, parent_folder_id: str=None):
        """MoveTemplateData - a model defined in OpenAPI

        :param parent_folder_id: The parent_folder_id of this MoveTemplateData.
        """
        self.openapi_types = {
            'parent_folder_id': str
        }

        self.attribute_map = {
            'parent_folder_id': 'parent_folder_id'
        }

        self._parent_folder_id = parent_folder_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MoveTemplateData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The move_template_data of this MoveTemplateData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def parent_folder_id(self):
        """Gets the parent_folder_id of this MoveTemplateData.


        :return: The parent_folder_id of this MoveTemplateData.
        :rtype: str
        """
        return self._parent_folder_id

    @parent_folder_id.setter
    def parent_folder_id(self, parent_folder_id):
        """Sets the parent_folder_id of this MoveTemplateData.


        :param parent_folder_id: The parent_folder_id of this MoveTemplateData.
        :type parent_folder_id: str
        """
        if parent_folder_id is None:
            raise ValueError("Invalid value for `parent_folder_id`, must not be `None`")

        self._parent_folder_id = parent_folder_id
