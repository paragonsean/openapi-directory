/**
 * API v1
 * DocSpring is a service that helps you fill out and sign PDF templates.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpload_template_data_document.h
 *
 * 
 */

#ifndef OAIUpload_template_data_document_H
#define OAIUpload_template_data_document_H

#include <QJsonObject>

#include "OAIUpload_template_data_document_metadata.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUpload_template_data_document_metadata;

class OAIUpload_template_data_document : public OAIObject {
public:
    OAIUpload_template_data_document();
    OAIUpload_template_data_document(QString json);
    ~OAIUpload_template_data_document() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAIUpload_template_data_document_metadata getMetadata() const;
    void setMetadata(const OAIUpload_template_data_document_metadata &metadata);
    bool is_metadata_Set() const;
    bool is_metadata_Valid() const;

    QString getStorage() const;
    void setStorage(const QString &storage);
    bool is_storage_Set() const;
    bool is_storage_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAIUpload_template_data_document_metadata m_metadata;
    bool m_metadata_isSet;
    bool m_metadata_isValid;

    QString m_storage;
    bool m_storage_isSet;
    bool m_storage_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpload_template_data_document)

#endif // OAIUpload_template_data_document_H
