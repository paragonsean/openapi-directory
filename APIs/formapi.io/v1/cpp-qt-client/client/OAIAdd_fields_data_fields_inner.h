/**
 * API v1
 * DocSpring is a service that helps you fill out and sign PDF templates.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAdd_fields_data_fields_inner.h
 *
 * 
 */

#ifndef OAIAdd_fields_data_fields_inner_H
#define OAIAdd_fields_data_fields_inner_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAdd_fields_data_fields_inner : public OAIObject {
public:
    OAIAdd_fields_data_fields_inner();
    OAIAdd_fields_data_fields_inner(QString json);
    ~OAIAdd_fields_data_fields_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAlignment() const;
    void setAlignment(const QString &alignment);
    bool is_alignment_Set() const;
    bool is_alignment_Valid() const;

    bool isAutoCalculateMaxLength() const;
    void setAutoCalculateMaxLength(const bool &auto_calculate_max_length);
    bool is_auto_calculate_max_length_Set() const;
    bool is_auto_calculate_max_length_Valid() const;

    QString getBackgroundColor() const;
    void setBackgroundColor(const QString &background_color);
    bool is_background_color_Set() const;
    bool is_background_color_Valid() const;

    QString getBackgroundColorFieldName() const;
    void setBackgroundColorFieldName(const QString &background_color_field_name);
    bool is_background_color_field_name_Set() const;
    bool is_background_color_field_name_Valid() const;

    bool isBackgroundColorFieldRequired() const;
    void setBackgroundColorFieldRequired(const bool &background_color_field_required);
    bool is_background_color_field_required_Set() const;
    bool is_background_color_field_required_Valid() const;

    QString getBarcodeSymbology() const;
    void setBarcodeSymbology(const QString &barcode_symbology);
    bool is_barcode_symbology_Set() const;
    bool is_barcode_symbology_Valid() const;

    bool isBold() const;
    void setBold(const bool &bold);
    bool is_bold_Set() const;
    bool is_bold_Valid() const;

    double getCharacterSpacing() const;
    void setCharacterSpacing(const double &character_spacing);
    bool is_character_spacing_Set() const;
    bool is_character_spacing_Valid() const;

    QString getCheckCharacter() const;
    void setCheckCharacter(const QString &check_character);
    bool is_check_character_Set() const;
    bool is_check_character_Valid() const;

    QString getCheckColor() const;
    void setCheckColor(const QString &check_color);
    bool is_check_color_Set() const;
    bool is_check_color_Valid() const;

    QString getCheckColorFieldName() const;
    void setCheckColorFieldName(const QString &check_color_field_name);
    bool is_check_color_field_name_Set() const;
    bool is_check_color_field_name_Valid() const;

    bool isCheckColorFieldRequired() const;
    void setCheckColorFieldRequired(const bool &check_color_field_required);
    bool is_check_color_field_required_Set() const;
    bool is_check_color_field_required_Valid() const;

    QString getColor() const;
    void setColor(const QString &color);
    bool is_color_Set() const;
    bool is_color_Valid() const;

    QString getColorFieldName() const;
    void setColorFieldName(const QString &color_field_name);
    bool is_color_field_name_Set() const;
    bool is_color_field_name_Valid() const;

    bool isColorFieldRequired() const;
    void setColorFieldRequired(const bool &color_field_required);
    bool is_color_field_required_Set() const;
    bool is_color_field_required_Valid() const;

    bool isComb() const;
    void setComb(const bool &comb);
    bool is_comb_Set() const;
    bool is_comb_Valid() const;

    double getCombNumberOfCells() const;
    void setCombNumberOfCells(const double &comb_number_of_cells);
    bool is_comb_number_of_cells_Set() const;
    bool is_comb_number_of_cells_Valid() const;

    double getCombValueOffset() const;
    void setCombValueOffset(const double &comb_value_offset);
    bool is_comb_value_offset_Set() const;
    bool is_comb_value_offset_Valid() const;

    QString getCombinedFieldFormat() const;
    void setCombinedFieldFormat(const QString &combined_field_format);
    bool is_combined_field_format_Set() const;
    bool is_combined_field_format_Valid() const;

    QString getCombinedFieldNames() const;
    void setCombinedFieldNames(const QString &combined_field_names);
    bool is_combined_field_names_Set() const;
    bool is_combined_field_names_Valid() const;

    QString getCombinedFieldSeparator() const;
    void setCombinedFieldSeparator(const QString &combined_field_separator);
    bool is_combined_field_separator_Set() const;
    bool is_combined_field_separator_Valid() const;

    QString getCombinedFieldType() const;
    void setCombinedFieldType(const QString &combined_field_type);
    bool is_combined_field_type_Set() const;
    bool is_combined_field_type_Valid() const;

    QString getCondition() const;
    void setCondition(const QString &condition);
    bool is_condition_Set() const;
    bool is_condition_Valid() const;

    bool isCurrency() const;
    void setCurrency(const bool &currency);
    bool is_currency_Set() const;
    bool is_currency_Valid() const;

    QString getDateTimeFormat() const;
    void setDateTimeFormat(const QString &date_time_format);
    bool is_date_time_format_Set() const;
    bool is_date_time_format_Valid() const;

    double getDecimalPlaces() const;
    void setDecimalPlaces(const double &decimal_places);
    bool is_decimal_places_Set() const;
    bool is_decimal_places_Valid() const;

    QString getRDefault() const;
    void setRDefault(const QString &r_default);
    bool is_r_default_Set() const;
    bool is_r_default_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getDisplayType() const;
    void setDisplayType(const QString &display_type);
    bool is_display_type_Set() const;
    bool is_display_type_Valid() const;

    bool isExclusiveMaximum() const;
    void setExclusiveMaximum(const bool &exclusive_maximum);
    bool is_exclusive_maximum_Set() const;
    bool is_exclusive_maximum_Valid() const;

    bool isExclusiveMinimum() const;
    void setExclusiveMinimum(const bool &exclusive_minimum);
    bool is_exclusive_minimum_Set() const;
    bool is_exclusive_minimum_Valid() const;

    QString getFalseText() const;
    void setFalseText(const QString &false_text);
    bool is_false_text_Set() const;
    bool is_false_text_Valid() const;

    double getFontSize() const;
    void setFontSize(const double &font_size);
    bool is_font_size_Set() const;
    bool is_font_size_Valid() const;

    double getHeight() const;
    void setHeight(const double &height);
    bool is_height_Set() const;
    bool is_height_Valid() const;

    bool isHidden() const;
    void setHidden(const bool &hidden);
    bool is_hidden_Set() const;
    bool is_hidden_Valid() const;

    double getId() const;
    void setId(const double &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getImageGravity() const;
    void setImageGravity(const QString &image_gravity);
    bool is_image_gravity_Set() const;
    bool is_image_gravity_Valid() const;

    QString getImageScaleType() const;
    void setImageScaleType(const QString &image_scale_type);
    bool is_image_scale_type_Set() const;
    bool is_image_scale_type_Valid() const;

    bool isIncludeTime() const;
    void setIncludeTime(const bool &include_time);
    bool is_include_time_Set() const;
    bool is_include_time_Valid() const;

    bool isInteger() const;
    void setInteger(const bool &integer);
    bool is_integer_Set() const;
    bool is_integer_Valid() const;

    bool isInvertBooleanCondition() const;
    void setInvertBooleanCondition(const bool &invert_boolean_condition);
    bool is_invert_boolean_condition_Set() const;
    bool is_invert_boolean_condition_Valid() const;

    double getMaxLength() const;
    void setMaxLength(const double &max_length);
    bool is_max_length_Set() const;
    bool is_max_length_Valid() const;

    double getMaximum() const;
    void setMaximum(const double &maximum);
    bool is_maximum_Set() const;
    bool is_maximum_Valid() const;

    QString getMetadata() const;
    void setMetadata(const QString &metadata);
    bool is_metadata_Set() const;
    bool is_metadata_Valid() const;

    double getMinLength() const;
    void setMinLength(const double &min_length);
    bool is_min_length_Set() const;
    bool is_min_length_Valid() const;

    double getMinimum() const;
    void setMinimum(const double &minimum);
    bool is_minimum_Set() const;
    bool is_minimum_Valid() const;

    bool isMultiline() const;
    void setMultiline(const bool &multiline);
    bool is_multiline_Set() const;
    bool is_multiline_Valid() const;

    double getMultilineLines() const;
    void setMultilineLines(const double &multiline_lines);
    bool is_multiline_lines_Set() const;
    bool is_multiline_lines_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    bool isNumberConditionRangeExclusiveMax() const;
    void setNumberConditionRangeExclusiveMax(const bool &number_condition_range_exclusive_max);
    bool is_number_condition_range_exclusive_max_Set() const;
    bool is_number_condition_range_exclusive_max_Valid() const;

    bool isNumberConditionRangeExclusiveMin() const;
    void setNumberConditionRangeExclusiveMin(const bool &number_condition_range_exclusive_min);
    bool is_number_condition_range_exclusive_min_Set() const;
    bool is_number_condition_range_exclusive_min_Valid() const;

    double getNumberConditionRangeMax() const;
    void setNumberConditionRangeMax(const double &number_condition_range_max);
    bool is_number_condition_range_max_Set() const;
    bool is_number_condition_range_max_Valid() const;

    double getNumberConditionRangeMin() const;
    void setNumberConditionRangeMin(const double &number_condition_range_min);
    bool is_number_condition_range_min_Set() const;
    bool is_number_condition_range_min_Valid() const;

    QString getNumberConditionType() const;
    void setNumberConditionType(const QString &number_condition_type);
    bool is_number_condition_type_Set() const;
    bool is_number_condition_type_Valid() const;

    double getOpacity() const;
    void setOpacity(const double &opacity);
    bool is_opacity_Set() const;
    bool is_opacity_Valid() const;

    QString getOptionList() const;
    void setOptionList(const QString &option_list);
    bool is_option_list_Set() const;
    bool is_option_list_Valid() const;

    QString getOverflow() const;
    void setOverflow(const QString &overflow);
    bool is_overflow_Set() const;
    bool is_overflow_Valid() const;

    double getPage() const;
    void setPage(const double &page);
    bool is_page_Set() const;
    bool is_page_Valid() const;

    QString getPlaceholder() const;
    void setPlaceholder(const QString &placeholder);
    bool is_placeholder_Set() const;
    bool is_placeholder_Valid() const;

    QString getQrcodeColor() const;
    void setQrcodeColor(const QString &qrcode_color);
    bool is_qrcode_color_Set() const;
    bool is_qrcode_color_Valid() const;

    QString getQrcodeColorFieldName() const;
    void setQrcodeColorFieldName(const QString &qrcode_color_field_name);
    bool is_qrcode_color_field_name_Set() const;
    bool is_qrcode_color_field_name_Valid() const;

    bool isQrcodeColorFieldRequired() const;
    void setQrcodeColorFieldRequired(const bool &qrcode_color_field_required);
    bool is_qrcode_color_field_required_Set() const;
    bool is_qrcode_color_field_required_Valid() const;

    bool isRequired() const;
    void setRequired(const bool &required);
    bool is_required_Set() const;
    bool is_required_Valid() const;

    double getRotation() const;
    void setRotation(const double &rotation);
    bool is_rotation_Set() const;
    bool is_rotation_Valid() const;

    QString getShapeBorderColor() const;
    void setShapeBorderColor(const QString &shape_border_color);
    bool is_shape_border_color_Set() const;
    bool is_shape_border_color_Valid() const;

    QString getShapeBorderColorFieldName() const;
    void setShapeBorderColorFieldName(const QString &shape_border_color_field_name);
    bool is_shape_border_color_field_name_Set() const;
    bool is_shape_border_color_field_name_Valid() const;

    bool isShapeBorderColorFieldRequired() const;
    void setShapeBorderColorFieldRequired(const bool &shape_border_color_field_required);
    bool is_shape_border_color_field_required_Set() const;
    bool is_shape_border_color_field_required_Valid() const;

    double getShapeBorderWidth() const;
    void setShapeBorderWidth(const double &shape_border_width);
    bool is_shape_border_width_Set() const;
    bool is_shape_border_width_Valid() const;

    QString getShapeFillColor() const;
    void setShapeFillColor(const QString &shape_fill_color);
    bool is_shape_fill_color_Set() const;
    bool is_shape_fill_color_Valid() const;

    QString getShapeFillColorFieldName() const;
    void setShapeFillColorFieldName(const QString &shape_fill_color_field_name);
    bool is_shape_fill_color_field_name_Set() const;
    bool is_shape_fill_color_field_name_Valid() const;

    bool isShapeFillColorFieldRequired() const;
    void setShapeFillColorFieldRequired(const bool &shape_fill_color_field_required);
    bool is_shape_fill_color_field_required_Set() const;
    bool is_shape_fill_color_field_required_Valid() const;

    QString getShapeType() const;
    void setShapeType(const QString &shape_type);
    bool is_shape_type_Set() const;
    bool is_shape_type_Valid() const;

    bool isSignatureAllowDraw() const;
    void setSignatureAllowDraw(const bool &signature_allow_draw);
    bool is_signature_allow_draw_Set() const;
    bool is_signature_allow_draw_Valid() const;

    bool isSignatureAllowType() const;
    void setSignatureAllowType(const bool &signature_allow_type);
    bool is_signature_allow_type_Set() const;
    bool is_signature_allow_type_Valid() const;

    bool isRStatic() const;
    void setRStatic(const bool &r_static);
    bool is_r_static_Set() const;
    bool is_r_static_Valid() const;

    bool isStrikethrough() const;
    void setStrikethrough(const bool &strikethrough);
    bool is_strikethrough_Set() const;
    bool is_strikethrough_Valid() const;

    QString getStringConditionType() const;
    void setStringConditionType(const QString &string_condition_type);
    bool is_string_condition_type_Set() const;
    bool is_string_condition_type_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    QString getTrueText() const;
    void setTrueText(const QString &true_text);
    bool is_true_text_Set() const;
    bool is_true_text_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getTypeface() const;
    void setTypeface(const QString &typeface);
    bool is_typeface_Set() const;
    bool is_typeface_Valid() const;

    bool isUppercase() const;
    void setUppercase(const bool &uppercase);
    bool is_uppercase_Set() const;
    bool is_uppercase_Valid() const;

    QString getVAlignment() const;
    void setVAlignment(const QString &v_alignment);
    bool is_v_alignment_Set() const;
    bool is_v_alignment_Valid() const;

    double getWidth() const;
    void setWidth(const double &width);
    bool is_width_Set() const;
    bool is_width_Valid() const;

    double getX() const;
    void setX(const double &x);
    bool is_x_Set() const;
    bool is_x_Valid() const;

    double getY() const;
    void setY(const double &y);
    bool is_y_Set() const;
    bool is_y_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_alignment;
    bool m_alignment_isSet;
    bool m_alignment_isValid;

    bool m_auto_calculate_max_length;
    bool m_auto_calculate_max_length_isSet;
    bool m_auto_calculate_max_length_isValid;

    QString m_background_color;
    bool m_background_color_isSet;
    bool m_background_color_isValid;

    QString m_background_color_field_name;
    bool m_background_color_field_name_isSet;
    bool m_background_color_field_name_isValid;

    bool m_background_color_field_required;
    bool m_background_color_field_required_isSet;
    bool m_background_color_field_required_isValid;

    QString m_barcode_symbology;
    bool m_barcode_symbology_isSet;
    bool m_barcode_symbology_isValid;

    bool m_bold;
    bool m_bold_isSet;
    bool m_bold_isValid;

    double m_character_spacing;
    bool m_character_spacing_isSet;
    bool m_character_spacing_isValid;

    QString m_check_character;
    bool m_check_character_isSet;
    bool m_check_character_isValid;

    QString m_check_color;
    bool m_check_color_isSet;
    bool m_check_color_isValid;

    QString m_check_color_field_name;
    bool m_check_color_field_name_isSet;
    bool m_check_color_field_name_isValid;

    bool m_check_color_field_required;
    bool m_check_color_field_required_isSet;
    bool m_check_color_field_required_isValid;

    QString m_color;
    bool m_color_isSet;
    bool m_color_isValid;

    QString m_color_field_name;
    bool m_color_field_name_isSet;
    bool m_color_field_name_isValid;

    bool m_color_field_required;
    bool m_color_field_required_isSet;
    bool m_color_field_required_isValid;

    bool m_comb;
    bool m_comb_isSet;
    bool m_comb_isValid;

    double m_comb_number_of_cells;
    bool m_comb_number_of_cells_isSet;
    bool m_comb_number_of_cells_isValid;

    double m_comb_value_offset;
    bool m_comb_value_offset_isSet;
    bool m_comb_value_offset_isValid;

    QString m_combined_field_format;
    bool m_combined_field_format_isSet;
    bool m_combined_field_format_isValid;

    QString m_combined_field_names;
    bool m_combined_field_names_isSet;
    bool m_combined_field_names_isValid;

    QString m_combined_field_separator;
    bool m_combined_field_separator_isSet;
    bool m_combined_field_separator_isValid;

    QString m_combined_field_type;
    bool m_combined_field_type_isSet;
    bool m_combined_field_type_isValid;

    QString m_condition;
    bool m_condition_isSet;
    bool m_condition_isValid;

    bool m_currency;
    bool m_currency_isSet;
    bool m_currency_isValid;

    QString m_date_time_format;
    bool m_date_time_format_isSet;
    bool m_date_time_format_isValid;

    double m_decimal_places;
    bool m_decimal_places_isSet;
    bool m_decimal_places_isValid;

    QString m_r_default;
    bool m_r_default_isSet;
    bool m_r_default_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_display_type;
    bool m_display_type_isSet;
    bool m_display_type_isValid;

    bool m_exclusive_maximum;
    bool m_exclusive_maximum_isSet;
    bool m_exclusive_maximum_isValid;

    bool m_exclusive_minimum;
    bool m_exclusive_minimum_isSet;
    bool m_exclusive_minimum_isValid;

    QString m_false_text;
    bool m_false_text_isSet;
    bool m_false_text_isValid;

    double m_font_size;
    bool m_font_size_isSet;
    bool m_font_size_isValid;

    double m_height;
    bool m_height_isSet;
    bool m_height_isValid;

    bool m_hidden;
    bool m_hidden_isSet;
    bool m_hidden_isValid;

    double m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_image_gravity;
    bool m_image_gravity_isSet;
    bool m_image_gravity_isValid;

    QString m_image_scale_type;
    bool m_image_scale_type_isSet;
    bool m_image_scale_type_isValid;

    bool m_include_time;
    bool m_include_time_isSet;
    bool m_include_time_isValid;

    bool m_integer;
    bool m_integer_isSet;
    bool m_integer_isValid;

    bool m_invert_boolean_condition;
    bool m_invert_boolean_condition_isSet;
    bool m_invert_boolean_condition_isValid;

    double m_max_length;
    bool m_max_length_isSet;
    bool m_max_length_isValid;

    double m_maximum;
    bool m_maximum_isSet;
    bool m_maximum_isValid;

    QString m_metadata;
    bool m_metadata_isSet;
    bool m_metadata_isValid;

    double m_min_length;
    bool m_min_length_isSet;
    bool m_min_length_isValid;

    double m_minimum;
    bool m_minimum_isSet;
    bool m_minimum_isValid;

    bool m_multiline;
    bool m_multiline_isSet;
    bool m_multiline_isValid;

    double m_multiline_lines;
    bool m_multiline_lines_isSet;
    bool m_multiline_lines_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    bool m_number_condition_range_exclusive_max;
    bool m_number_condition_range_exclusive_max_isSet;
    bool m_number_condition_range_exclusive_max_isValid;

    bool m_number_condition_range_exclusive_min;
    bool m_number_condition_range_exclusive_min_isSet;
    bool m_number_condition_range_exclusive_min_isValid;

    double m_number_condition_range_max;
    bool m_number_condition_range_max_isSet;
    bool m_number_condition_range_max_isValid;

    double m_number_condition_range_min;
    bool m_number_condition_range_min_isSet;
    bool m_number_condition_range_min_isValid;

    QString m_number_condition_type;
    bool m_number_condition_type_isSet;
    bool m_number_condition_type_isValid;

    double m_opacity;
    bool m_opacity_isSet;
    bool m_opacity_isValid;

    QString m_option_list;
    bool m_option_list_isSet;
    bool m_option_list_isValid;

    QString m_overflow;
    bool m_overflow_isSet;
    bool m_overflow_isValid;

    double m_page;
    bool m_page_isSet;
    bool m_page_isValid;

    QString m_placeholder;
    bool m_placeholder_isSet;
    bool m_placeholder_isValid;

    QString m_qrcode_color;
    bool m_qrcode_color_isSet;
    bool m_qrcode_color_isValid;

    QString m_qrcode_color_field_name;
    bool m_qrcode_color_field_name_isSet;
    bool m_qrcode_color_field_name_isValid;

    bool m_qrcode_color_field_required;
    bool m_qrcode_color_field_required_isSet;
    bool m_qrcode_color_field_required_isValid;

    bool m_required;
    bool m_required_isSet;
    bool m_required_isValid;

    double m_rotation;
    bool m_rotation_isSet;
    bool m_rotation_isValid;

    QString m_shape_border_color;
    bool m_shape_border_color_isSet;
    bool m_shape_border_color_isValid;

    QString m_shape_border_color_field_name;
    bool m_shape_border_color_field_name_isSet;
    bool m_shape_border_color_field_name_isValid;

    bool m_shape_border_color_field_required;
    bool m_shape_border_color_field_required_isSet;
    bool m_shape_border_color_field_required_isValid;

    double m_shape_border_width;
    bool m_shape_border_width_isSet;
    bool m_shape_border_width_isValid;

    QString m_shape_fill_color;
    bool m_shape_fill_color_isSet;
    bool m_shape_fill_color_isValid;

    QString m_shape_fill_color_field_name;
    bool m_shape_fill_color_field_name_isSet;
    bool m_shape_fill_color_field_name_isValid;

    bool m_shape_fill_color_field_required;
    bool m_shape_fill_color_field_required_isSet;
    bool m_shape_fill_color_field_required_isValid;

    QString m_shape_type;
    bool m_shape_type_isSet;
    bool m_shape_type_isValid;

    bool m_signature_allow_draw;
    bool m_signature_allow_draw_isSet;
    bool m_signature_allow_draw_isValid;

    bool m_signature_allow_type;
    bool m_signature_allow_type_isSet;
    bool m_signature_allow_type_isValid;

    bool m_r_static;
    bool m_r_static_isSet;
    bool m_r_static_isValid;

    bool m_strikethrough;
    bool m_strikethrough_isSet;
    bool m_strikethrough_isValid;

    QString m_string_condition_type;
    bool m_string_condition_type_isSet;
    bool m_string_condition_type_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;

    QString m_true_text;
    bool m_true_text_isSet;
    bool m_true_text_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_typeface;
    bool m_typeface_isSet;
    bool m_typeface_isValid;

    bool m_uppercase;
    bool m_uppercase_isSet;
    bool m_uppercase_isValid;

    QString m_v_alignment;
    bool m_v_alignment_isSet;
    bool m_v_alignment_isValid;

    double m_width;
    bool m_width_isSet;
    bool m_width_isValid;

    double m_x;
    bool m_x_isSet;
    bool m_x_isValid;

    double m_y;
    bool m_y_isSet;
    bool m_y_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAdd_fields_data_fields_inner)

#endif // OAIAdd_fields_data_fields_inner_H
