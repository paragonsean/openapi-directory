/**
 * API v1
 * DocSpring is a service that helps you fill out and sign PDF templates.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreate_submission_data_request_data.h
 *
 * 
 */

#ifndef OAICreate_submission_data_request_data_H
#define OAICreate_submission_data_request_data_H

#include <QJsonObject>

#include "OAIObject.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICreate_submission_data_request_data : public OAIObject {
public:
    OAICreate_submission_data_request_data();
    OAICreate_submission_data_request_data(QString json);
    ~OAICreate_submission_data_request_data() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAuthPhoneNumberHash() const;
    void setAuthPhoneNumberHash(const QString &auth_phone_number_hash);
    bool is_auth_phone_number_hash_Set() const;
    bool is_auth_phone_number_hash_Valid() const;

    QString getAuthProvider() const;
    void setAuthProvider(const QString &auth_provider);
    bool is_auth_provider_Set() const;
    bool is_auth_provider_Valid() const;

    QString getAuthSecondFactorType() const;
    void setAuthSecondFactorType(const QString &auth_second_factor_type);
    bool is_auth_second_factor_type_Set() const;
    bool is_auth_second_factor_type_Valid() const;

    QString getAuthSessionIdHash() const;
    void setAuthSessionIdHash(const QString &auth_session_id_hash);
    bool is_auth_session_id_hash_Set() const;
    bool is_auth_session_id_hash_Valid() const;

    QString getAuthSessionStartedAt() const;
    void setAuthSessionStartedAt(const QString &auth_session_started_at);
    bool is_auth_session_started_at_Set() const;
    bool is_auth_session_started_at_Valid() const;

    QString getAuthType() const;
    void setAuthType(const QString &auth_type);
    bool is_auth_type_Set() const;
    bool is_auth_type_Valid() const;

    QString getAuthUserIdHash() const;
    void setAuthUserIdHash(const QString &auth_user_id_hash);
    bool is_auth_user_id_hash_Set() const;
    bool is_auth_user_id_hash_Valid() const;

    QString getAuthUsernameHash() const;
    void setAuthUsernameHash(const QString &auth_username_hash);
    bool is_auth_username_hash_Set() const;
    bool is_auth_username_hash_Valid() const;

    QString getEmail() const;
    void setEmail(const QString &email);
    bool is_email_Set() const;
    bool is_email_Valid() const;

    QList<QString> getFields() const;
    void setFields(const QList<QString> &fields);
    bool is_fields_Set() const;
    bool is_fields_Valid() const;

    OAIObject getMetadata() const;
    void setMetadata(const OAIObject &metadata);
    bool is_metadata_Set() const;
    bool is_metadata_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    qint32 getOrder() const;
    void setOrder(const qint32 &order);
    bool is_order_Set() const;
    bool is_order_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_auth_phone_number_hash;
    bool m_auth_phone_number_hash_isSet;
    bool m_auth_phone_number_hash_isValid;

    QString m_auth_provider;
    bool m_auth_provider_isSet;
    bool m_auth_provider_isValid;

    QString m_auth_second_factor_type;
    bool m_auth_second_factor_type_isSet;
    bool m_auth_second_factor_type_isValid;

    QString m_auth_session_id_hash;
    bool m_auth_session_id_hash_isSet;
    bool m_auth_session_id_hash_isValid;

    QString m_auth_session_started_at;
    bool m_auth_session_started_at_isSet;
    bool m_auth_session_started_at_isValid;

    QString m_auth_type;
    bool m_auth_type_isSet;
    bool m_auth_type_isValid;

    QString m_auth_user_id_hash;
    bool m_auth_user_id_hash_isSet;
    bool m_auth_user_id_hash_isValid;

    QString m_auth_username_hash;
    bool m_auth_username_hash_isSet;
    bool m_auth_username_hash_isValid;

    QString m_email;
    bool m_email_isSet;
    bool m_email_isValid;

    QList<QString> m_fields;
    bool m_fields_isSet;
    bool m_fields_isValid;

    OAIObject m_metadata;
    bool m_metadata_isSet;
    bool m_metadata_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    qint32 m_order;
    bool m_order_isSet;
    bool m_order_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreate_submission_data_request_data)

#endif // OAICreate_submission_data_request_data_H
