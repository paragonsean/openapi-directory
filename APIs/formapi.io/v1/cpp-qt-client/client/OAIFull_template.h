/**
 * API v1
 * DocSpring is a service that helps you fill out and sign PDF templates.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFull_template.h
 *
 * 
 */

#ifndef OAIFull_template_H
#define OAIFull_template_H

#include <QJsonObject>

#include "OAIFull_template_defaults.h"
#include "OAIObject.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIFull_template_defaults;

class OAIFull_template : public OAIObject {
public:
    OAIFull_template();
    OAIFull_template(QString json);
    ~OAIFull_template() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAllowAdditionalProperties() const;
    void setAllowAdditionalProperties(const bool &allow_additional_properties);
    bool is_allow_additional_properties_Set() const;
    bool is_allow_additional_properties_Valid() const;

    OAIFull_template_defaults getDefaults() const;
    void setDefaults(const OAIFull_template_defaults &defaults);
    bool is_defaults_Set() const;
    bool is_defaults_Valid() const;

    bool isDemo() const;
    void setDemo(const bool &demo);
    bool is_demo_Set() const;
    bool is_demo_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getDocumentFilename() const;
    void setDocumentFilename(const QString &document_filename);
    bool is_document_filename_Set() const;
    bool is_document_filename_Valid() const;

    QString getDocumentMd5() const;
    void setDocumentMd5(const QString &document_md5);
    bool is_document_md5_Set() const;
    bool is_document_md5_Valid() const;

    bool isDocumentParseError() const;
    void setDocumentParseError(const bool &document_parse_error);
    bool is_document_parse_error_Set() const;
    bool is_document_parse_error_Valid() const;

    bool isDocumentProcessed() const;
    void setDocumentProcessed(const bool &document_processed);
    bool is_document_processed_Set() const;
    bool is_document_processed_Valid() const;

    QString getDocumentState() const;
    void setDocumentState(const QString &document_state);
    bool is_document_state_Set() const;
    bool is_document_state_Valid() const;

    QString getDocumentUrl() const;
    void setDocumentUrl(const QString &document_url);
    bool is_document_url_Set() const;
    bool is_document_url_Valid() const;

    bool isEditableSubmissions() const;
    void setEditableSubmissions(const bool &editable_submissions);
    bool is_editable_submissions_Set() const;
    bool is_editable_submissions_Valid() const;

    QList<QString> getEmbedDomains() const;
    void setEmbedDomains(const QList<QString> &embed_domains);
    bool is_embed_domains_Set() const;
    bool is_embed_domains_Valid() const;

    bool isEncryptPdfs() const;
    void setEncryptPdfs(const bool &encrypt_pdfs);
    bool is_encrypt_pdfs_Set() const;
    bool is_encrypt_pdfs_Valid() const;

    QString getEncryptPdfsPassword() const;
    void setEncryptPdfsPassword(const QString &encrypt_pdfs_password);
    bool is_encrypt_pdfs_password_Set() const;
    bool is_encrypt_pdfs_password_Valid() const;

    QString getExpirationInterval() const;
    void setExpirationInterval(const QString &expiration_interval);
    bool is_expiration_interval_Set() const;
    bool is_expiration_interval_Valid() const;

    double getExpireAfter() const;
    void setExpireAfter(const double &expire_after);
    bool is_expire_after_Set() const;
    bool is_expire_after_Valid() const;

    bool isExpireSubmissions() const;
    void setExpireSubmissions(const bool &expire_submissions);
    bool is_expire_submissions_Set() const;
    bool is_expire_submissions_Valid() const;

    QList<QList<double>> getFieldOrder() const;
    void setFieldOrder(const QList<QList<double>> &field_order);
    bool is_field_order_Set() const;
    bool is_field_order_Valid() const;

    OAIObject getFields() const;
    void setFields(const OAIObject &fields);
    bool is_fields_Set() const;
    bool is_fields_Valid() const;

    bool isFirstTemplate() const;
    void setFirstTemplate(const bool &first_template);
    bool is_first_template_Set() const;
    bool is_first_template_Valid() const;

    QString getFooterHtml() const;
    void setFooterHtml(const QString &footer_html);
    bool is_footer_html_Set() const;
    bool is_footer_html_Valid() const;

    QString getHeaderHtml() const;
    void setHeaderHtml(const QString &header_html);
    bool is_header_html_Set() const;
    bool is_header_html_Valid() const;

    QString getHtml() const;
    void setHtml(const QString &html);
    bool is_html_Set() const;
    bool is_html_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    bool isLocked() const;
    void setLocked(const bool &locked);
    bool is_locked_Set() const;
    bool is_locked_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    double getPageCount() const;
    void setPageCount(const double &page_count);
    bool is_page_count_Set() const;
    bool is_page_count_Valid() const;

    QList<QList<double>> getPageDimensions() const;
    void setPageDimensions(const QList<QList<double>> &page_dimensions);
    bool is_page_dimensions_Set() const;
    bool is_page_dimensions_Valid() const;

    QString getParentFolderId() const;
    void setParentFolderId(const QString &parent_folder_id);
    bool is_parent_folder_id_Set() const;
    bool is_parent_folder_id_Valid() const;

    QString getPath() const;
    void setPath(const QString &path);
    bool is_path_Set() const;
    bool is_path_Valid() const;

    QString getPermanentDocumentUrl() const;
    void setPermanentDocumentUrl(const QString &permanent_document_url);
    bool is_permanent_document_url_Set() const;
    bool is_permanent_document_url_Valid() const;

    bool isPublicSubmissions() const;
    void setPublicSubmissions(const bool &public_submissions);
    bool is_public_submissions_Set() const;
    bool is_public_submissions_Valid() const;

    bool isPublicWebForm() const;
    void setPublicWebForm(const bool &public_web_form);
    bool is_public_web_form_Set() const;
    bool is_public_web_form_Valid() const;

    QString getRedirectUrl() const;
    void setRedirectUrl(const QString &redirect_url);
    bool is_redirect_url_Set() const;
    bool is_redirect_url_Valid() const;

    QString getScss() const;
    void setScss(const QString &scss);
    bool is_scss_Set() const;
    bool is_scss_Valid() const;

    OAIObject getSharedFieldData() const;
    void setSharedFieldData(const OAIObject &shared_field_data);
    bool is_shared_field_data_Set() const;
    bool is_shared_field_data_Valid() const;

    QString getSlackWebhookUrl() const;
    void setSlackWebhookUrl(const QString &slack_webhook_url);
    bool is_slack_webhook_url_Set() const;
    bool is_slack_webhook_url_Valid() const;

    QString getTemplateType() const;
    void setTemplateType(const QString &template_type);
    bool is_template_type_Set() const;
    bool is_template_type_Valid() const;

    QString getWebhookUrl() const;
    void setWebhookUrl(const QString &webhook_url);
    bool is_webhook_url_Set() const;
    bool is_webhook_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_allow_additional_properties;
    bool m_allow_additional_properties_isSet;
    bool m_allow_additional_properties_isValid;

    OAIFull_template_defaults m_defaults;
    bool m_defaults_isSet;
    bool m_defaults_isValid;

    bool m_demo;
    bool m_demo_isSet;
    bool m_demo_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_document_filename;
    bool m_document_filename_isSet;
    bool m_document_filename_isValid;

    QString m_document_md5;
    bool m_document_md5_isSet;
    bool m_document_md5_isValid;

    bool m_document_parse_error;
    bool m_document_parse_error_isSet;
    bool m_document_parse_error_isValid;

    bool m_document_processed;
    bool m_document_processed_isSet;
    bool m_document_processed_isValid;

    QString m_document_state;
    bool m_document_state_isSet;
    bool m_document_state_isValid;

    QString m_document_url;
    bool m_document_url_isSet;
    bool m_document_url_isValid;

    bool m_editable_submissions;
    bool m_editable_submissions_isSet;
    bool m_editable_submissions_isValid;

    QList<QString> m_embed_domains;
    bool m_embed_domains_isSet;
    bool m_embed_domains_isValid;

    bool m_encrypt_pdfs;
    bool m_encrypt_pdfs_isSet;
    bool m_encrypt_pdfs_isValid;

    QString m_encrypt_pdfs_password;
    bool m_encrypt_pdfs_password_isSet;
    bool m_encrypt_pdfs_password_isValid;

    QString m_expiration_interval;
    bool m_expiration_interval_isSet;
    bool m_expiration_interval_isValid;

    double m_expire_after;
    bool m_expire_after_isSet;
    bool m_expire_after_isValid;

    bool m_expire_submissions;
    bool m_expire_submissions_isSet;
    bool m_expire_submissions_isValid;

    QList<QList<double>> m_field_order;
    bool m_field_order_isSet;
    bool m_field_order_isValid;

    OAIObject m_fields;
    bool m_fields_isSet;
    bool m_fields_isValid;

    bool m_first_template;
    bool m_first_template_isSet;
    bool m_first_template_isValid;

    QString m_footer_html;
    bool m_footer_html_isSet;
    bool m_footer_html_isValid;

    QString m_header_html;
    bool m_header_html_isSet;
    bool m_header_html_isValid;

    QString m_html;
    bool m_html_isSet;
    bool m_html_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    bool m_locked;
    bool m_locked_isSet;
    bool m_locked_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    double m_page_count;
    bool m_page_count_isSet;
    bool m_page_count_isValid;

    QList<QList<double>> m_page_dimensions;
    bool m_page_dimensions_isSet;
    bool m_page_dimensions_isValid;

    QString m_parent_folder_id;
    bool m_parent_folder_id_isSet;
    bool m_parent_folder_id_isValid;

    QString m_path;
    bool m_path_isSet;
    bool m_path_isValid;

    QString m_permanent_document_url;
    bool m_permanent_document_url_isSet;
    bool m_permanent_document_url_isValid;

    bool m_public_submissions;
    bool m_public_submissions_isSet;
    bool m_public_submissions_isValid;

    bool m_public_web_form;
    bool m_public_web_form_isSet;
    bool m_public_web_form_isValid;

    QString m_redirect_url;
    bool m_redirect_url_isSet;
    bool m_redirect_url_isValid;

    QString m_scss;
    bool m_scss_isSet;
    bool m_scss_isValid;

    OAIObject m_shared_field_data;
    bool m_shared_field_data_isSet;
    bool m_shared_field_data_isValid;

    QString m_slack_webhook_url;
    bool m_slack_webhook_url_isSet;
    bool m_slack_webhook_url_isValid;

    QString m_template_type;
    bool m_template_type_isSet;
    bool m_template_type_isValid;

    QString m_webhook_url;
    bool m_webhook_url_isSet;
    bool m_webhook_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFull_template)

#endif // OAIFull_template_H
