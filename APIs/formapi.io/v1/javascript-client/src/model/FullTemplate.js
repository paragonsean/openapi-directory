/**
 * API v1
 * DocSpring is a service that helps you fill out and sign PDF templates.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import FullTemplateDefaults from './FullTemplateDefaults';

/**
 * The FullTemplate model module.
 * @module model/FullTemplate
 * @version v1
 */
class FullTemplate {
    /**
     * Constructs a new <code>FullTemplate</code>.
     * @alias module:model/FullTemplate
     * @param allowAdditionalProperties {Boolean} 
     * @param defaults {module:model/FullTemplateDefaults} 
     * @param demo {Boolean} 
     * @param description {String} 
     * @param documentFilename {String} 
     * @param documentMd5 {String} 
     * @param documentParseError {Boolean} 
     * @param documentProcessed {Boolean} 
     * @param documentState {String} 
     * @param documentUrl {String} 
     * @param editableSubmissions {Boolean} 
     * @param embedDomains {Array.<String>} 
     * @param encryptPdfs {Boolean} 
     * @param encryptPdfsPassword {String} 
     * @param expirationInterval {module:model/FullTemplate.ExpirationIntervalEnum} 
     * @param expireAfter {Number} 
     * @param expireSubmissions {Boolean} 
     * @param fieldOrder {Array.<Array.<Number>>} 
     * @param fields {Object} 
     * @param firstTemplate {Boolean} 
     * @param footerHtml {String} 
     * @param headerHtml {String} 
     * @param html {String} 
     * @param id {String} 
     * @param locked {Boolean} 
     * @param name {String} 
     * @param pageCount {Number} 
     * @param pageDimensions {Array.<Array.<Number>>} 
     * @param parentFolderId {String} 
     * @param path {String} 
     * @param permanentDocumentUrl {String} 
     * @param publicSubmissions {Boolean} 
     * @param publicWebForm {Boolean} 
     * @param redirectUrl {String} 
     * @param scss {String} 
     * @param sharedFieldData {Object} 
     * @param slackWebhookUrl {String} 
     * @param templateType {String} 
     * @param webhookUrl {String} 
     */
    constructor(allowAdditionalProperties, defaults, demo, description, documentFilename, documentMd5, documentParseError, documentProcessed, documentState, documentUrl, editableSubmissions, embedDomains, encryptPdfs, encryptPdfsPassword, expirationInterval, expireAfter, expireSubmissions, fieldOrder, fields, firstTemplate, footerHtml, headerHtml, html, id, locked, name, pageCount, pageDimensions, parentFolderId, path, permanentDocumentUrl, publicSubmissions, publicWebForm, redirectUrl, scss, sharedFieldData, slackWebhookUrl, templateType, webhookUrl) { 
        
        FullTemplate.initialize(this, allowAdditionalProperties, defaults, demo, description, documentFilename, documentMd5, documentParseError, documentProcessed, documentState, documentUrl, editableSubmissions, embedDomains, encryptPdfs, encryptPdfsPassword, expirationInterval, expireAfter, expireSubmissions, fieldOrder, fields, firstTemplate, footerHtml, headerHtml, html, id, locked, name, pageCount, pageDimensions, parentFolderId, path, permanentDocumentUrl, publicSubmissions, publicWebForm, redirectUrl, scss, sharedFieldData, slackWebhookUrl, templateType, webhookUrl);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, allowAdditionalProperties, defaults, demo, description, documentFilename, documentMd5, documentParseError, documentProcessed, documentState, documentUrl, editableSubmissions, embedDomains, encryptPdfs, encryptPdfsPassword, expirationInterval, expireAfter, expireSubmissions, fieldOrder, fields, firstTemplate, footerHtml, headerHtml, html, id, locked, name, pageCount, pageDimensions, parentFolderId, path, permanentDocumentUrl, publicSubmissions, publicWebForm, redirectUrl, scss, sharedFieldData, slackWebhookUrl, templateType, webhookUrl) { 
        obj['allow_additional_properties'] = allowAdditionalProperties;
        obj['defaults'] = defaults;
        obj['demo'] = demo;
        obj['description'] = description;
        obj['document_filename'] = documentFilename;
        obj['document_md5'] = documentMd5;
        obj['document_parse_error'] = documentParseError;
        obj['document_processed'] = documentProcessed;
        obj['document_state'] = documentState;
        obj['document_url'] = documentUrl;
        obj['editable_submissions'] = editableSubmissions;
        obj['embed_domains'] = embedDomains;
        obj['encrypt_pdfs'] = encryptPdfs;
        obj['encrypt_pdfs_password'] = encryptPdfsPassword;
        obj['expiration_interval'] = expirationInterval;
        obj['expire_after'] = expireAfter;
        obj['expire_submissions'] = expireSubmissions;
        obj['field_order'] = fieldOrder;
        obj['fields'] = fields;
        obj['first_template'] = firstTemplate;
        obj['footer_html'] = footerHtml;
        obj['header_html'] = headerHtml;
        obj['html'] = html;
        obj['id'] = id;
        obj['locked'] = locked;
        obj['name'] = name;
        obj['page_count'] = pageCount;
        obj['page_dimensions'] = pageDimensions;
        obj['parent_folder_id'] = parentFolderId;
        obj['path'] = path;
        obj['permanent_document_url'] = permanentDocumentUrl;
        obj['public_submissions'] = publicSubmissions;
        obj['public_web_form'] = publicWebForm;
        obj['redirect_url'] = redirectUrl;
        obj['scss'] = scss;
        obj['shared_field_data'] = sharedFieldData;
        obj['slack_webhook_url'] = slackWebhookUrl;
        obj['template_type'] = templateType;
        obj['webhook_url'] = webhookUrl;
    }

    /**
     * Constructs a <code>FullTemplate</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FullTemplate} obj Optional instance to populate.
     * @return {module:model/FullTemplate} The populated <code>FullTemplate</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FullTemplate();

            if (data.hasOwnProperty('allow_additional_properties')) {
                obj['allow_additional_properties'] = ApiClient.convertToType(data['allow_additional_properties'], 'Boolean');
            }
            if (data.hasOwnProperty('defaults')) {
                obj['defaults'] = FullTemplateDefaults.constructFromObject(data['defaults']);
            }
            if (data.hasOwnProperty('demo')) {
                obj['demo'] = ApiClient.convertToType(data['demo'], 'Boolean');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('document_filename')) {
                obj['document_filename'] = ApiClient.convertToType(data['document_filename'], 'String');
            }
            if (data.hasOwnProperty('document_md5')) {
                obj['document_md5'] = ApiClient.convertToType(data['document_md5'], 'String');
            }
            if (data.hasOwnProperty('document_parse_error')) {
                obj['document_parse_error'] = ApiClient.convertToType(data['document_parse_error'], 'Boolean');
            }
            if (data.hasOwnProperty('document_processed')) {
                obj['document_processed'] = ApiClient.convertToType(data['document_processed'], 'Boolean');
            }
            if (data.hasOwnProperty('document_state')) {
                obj['document_state'] = ApiClient.convertToType(data['document_state'], 'String');
            }
            if (data.hasOwnProperty('document_url')) {
                obj['document_url'] = ApiClient.convertToType(data['document_url'], 'String');
            }
            if (data.hasOwnProperty('editable_submissions')) {
                obj['editable_submissions'] = ApiClient.convertToType(data['editable_submissions'], 'Boolean');
            }
            if (data.hasOwnProperty('embed_domains')) {
                obj['embed_domains'] = ApiClient.convertToType(data['embed_domains'], ['String']);
            }
            if (data.hasOwnProperty('encrypt_pdfs')) {
                obj['encrypt_pdfs'] = ApiClient.convertToType(data['encrypt_pdfs'], 'Boolean');
            }
            if (data.hasOwnProperty('encrypt_pdfs_password')) {
                obj['encrypt_pdfs_password'] = ApiClient.convertToType(data['encrypt_pdfs_password'], 'String');
            }
            if (data.hasOwnProperty('expiration_interval')) {
                obj['expiration_interval'] = ApiClient.convertToType(data['expiration_interval'], 'String');
            }
            if (data.hasOwnProperty('expire_after')) {
                obj['expire_after'] = ApiClient.convertToType(data['expire_after'], 'Number');
            }
            if (data.hasOwnProperty('expire_submissions')) {
                obj['expire_submissions'] = ApiClient.convertToType(data['expire_submissions'], 'Boolean');
            }
            if (data.hasOwnProperty('field_order')) {
                obj['field_order'] = ApiClient.convertToType(data['field_order'], [['Number']]);
            }
            if (data.hasOwnProperty('fields')) {
                obj['fields'] = ApiClient.convertToType(data['fields'], Object);
            }
            if (data.hasOwnProperty('first_template')) {
                obj['first_template'] = ApiClient.convertToType(data['first_template'], 'Boolean');
            }
            if (data.hasOwnProperty('footer_html')) {
                obj['footer_html'] = ApiClient.convertToType(data['footer_html'], 'String');
            }
            if (data.hasOwnProperty('header_html')) {
                obj['header_html'] = ApiClient.convertToType(data['header_html'], 'String');
            }
            if (data.hasOwnProperty('html')) {
                obj['html'] = ApiClient.convertToType(data['html'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('locked')) {
                obj['locked'] = ApiClient.convertToType(data['locked'], 'Boolean');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('page_count')) {
                obj['page_count'] = ApiClient.convertToType(data['page_count'], 'Number');
            }
            if (data.hasOwnProperty('page_dimensions')) {
                obj['page_dimensions'] = ApiClient.convertToType(data['page_dimensions'], [['Number']]);
            }
            if (data.hasOwnProperty('parent_folder_id')) {
                obj['parent_folder_id'] = ApiClient.convertToType(data['parent_folder_id'], 'String');
            }
            if (data.hasOwnProperty('path')) {
                obj['path'] = ApiClient.convertToType(data['path'], 'String');
            }
            if (data.hasOwnProperty('permanent_document_url')) {
                obj['permanent_document_url'] = ApiClient.convertToType(data['permanent_document_url'], 'String');
            }
            if (data.hasOwnProperty('public_submissions')) {
                obj['public_submissions'] = ApiClient.convertToType(data['public_submissions'], 'Boolean');
            }
            if (data.hasOwnProperty('public_web_form')) {
                obj['public_web_form'] = ApiClient.convertToType(data['public_web_form'], 'Boolean');
            }
            if (data.hasOwnProperty('redirect_url')) {
                obj['redirect_url'] = ApiClient.convertToType(data['redirect_url'], 'String');
            }
            if (data.hasOwnProperty('scss')) {
                obj['scss'] = ApiClient.convertToType(data['scss'], 'String');
            }
            if (data.hasOwnProperty('shared_field_data')) {
                obj['shared_field_data'] = ApiClient.convertToType(data['shared_field_data'], Object);
            }
            if (data.hasOwnProperty('slack_webhook_url')) {
                obj['slack_webhook_url'] = ApiClient.convertToType(data['slack_webhook_url'], 'String');
            }
            if (data.hasOwnProperty('template_type')) {
                obj['template_type'] = ApiClient.convertToType(data['template_type'], 'String');
            }
            if (data.hasOwnProperty('webhook_url')) {
                obj['webhook_url'] = ApiClient.convertToType(data['webhook_url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FullTemplate</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FullTemplate</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of FullTemplate.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `defaults`
        if (data['defaults']) { // data not null
          FullTemplateDefaults.validateJSON(data['defaults']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['document_filename'] && !(typeof data['document_filename'] === 'string' || data['document_filename'] instanceof String)) {
            throw new Error("Expected the field `document_filename` to be a primitive type in the JSON string but got " + data['document_filename']);
        }
        // ensure the json data is a string
        if (data['document_md5'] && !(typeof data['document_md5'] === 'string' || data['document_md5'] instanceof String)) {
            throw new Error("Expected the field `document_md5` to be a primitive type in the JSON string but got " + data['document_md5']);
        }
        // ensure the json data is a string
        if (data['document_state'] && !(typeof data['document_state'] === 'string' || data['document_state'] instanceof String)) {
            throw new Error("Expected the field `document_state` to be a primitive type in the JSON string but got " + data['document_state']);
        }
        // ensure the json data is a string
        if (data['document_url'] && !(typeof data['document_url'] === 'string' || data['document_url'] instanceof String)) {
            throw new Error("Expected the field `document_url` to be a primitive type in the JSON string but got " + data['document_url']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['embed_domains'])) {
            throw new Error("Expected the field `embed_domains` to be an array in the JSON data but got " + data['embed_domains']);
        }
        // ensure the json data is a string
        if (data['encrypt_pdfs_password'] && !(typeof data['encrypt_pdfs_password'] === 'string' || data['encrypt_pdfs_password'] instanceof String)) {
            throw new Error("Expected the field `encrypt_pdfs_password` to be a primitive type in the JSON string but got " + data['encrypt_pdfs_password']);
        }
        // ensure the json data is a string
        if (data['expiration_interval'] && !(typeof data['expiration_interval'] === 'string' || data['expiration_interval'] instanceof String)) {
            throw new Error("Expected the field `expiration_interval` to be a primitive type in the JSON string but got " + data['expiration_interval']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['field_order'])) {
            throw new Error("Expected the field `field_order` to be an array in the JSON data but got " + data['field_order']);
        }
        // ensure the json data is a string
        if (data['footer_html'] && !(typeof data['footer_html'] === 'string' || data['footer_html'] instanceof String)) {
            throw new Error("Expected the field `footer_html` to be a primitive type in the JSON string but got " + data['footer_html']);
        }
        // ensure the json data is a string
        if (data['header_html'] && !(typeof data['header_html'] === 'string' || data['header_html'] instanceof String)) {
            throw new Error("Expected the field `header_html` to be a primitive type in the JSON string but got " + data['header_html']);
        }
        // ensure the json data is a string
        if (data['html'] && !(typeof data['html'] === 'string' || data['html'] instanceof String)) {
            throw new Error("Expected the field `html` to be a primitive type in the JSON string but got " + data['html']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['page_dimensions'])) {
            throw new Error("Expected the field `page_dimensions` to be an array in the JSON data but got " + data['page_dimensions']);
        }
        // ensure the json data is a string
        if (data['parent_folder_id'] && !(typeof data['parent_folder_id'] === 'string' || data['parent_folder_id'] instanceof String)) {
            throw new Error("Expected the field `parent_folder_id` to be a primitive type in the JSON string but got " + data['parent_folder_id']);
        }
        // ensure the json data is a string
        if (data['path'] && !(typeof data['path'] === 'string' || data['path'] instanceof String)) {
            throw new Error("Expected the field `path` to be a primitive type in the JSON string but got " + data['path']);
        }
        // ensure the json data is a string
        if (data['permanent_document_url'] && !(typeof data['permanent_document_url'] === 'string' || data['permanent_document_url'] instanceof String)) {
            throw new Error("Expected the field `permanent_document_url` to be a primitive type in the JSON string but got " + data['permanent_document_url']);
        }
        // ensure the json data is a string
        if (data['redirect_url'] && !(typeof data['redirect_url'] === 'string' || data['redirect_url'] instanceof String)) {
            throw new Error("Expected the field `redirect_url` to be a primitive type in the JSON string but got " + data['redirect_url']);
        }
        // ensure the json data is a string
        if (data['scss'] && !(typeof data['scss'] === 'string' || data['scss'] instanceof String)) {
            throw new Error("Expected the field `scss` to be a primitive type in the JSON string but got " + data['scss']);
        }
        // ensure the json data is a string
        if (data['slack_webhook_url'] && !(typeof data['slack_webhook_url'] === 'string' || data['slack_webhook_url'] instanceof String)) {
            throw new Error("Expected the field `slack_webhook_url` to be a primitive type in the JSON string but got " + data['slack_webhook_url']);
        }
        // ensure the json data is a string
        if (data['template_type'] && !(typeof data['template_type'] === 'string' || data['template_type'] instanceof String)) {
            throw new Error("Expected the field `template_type` to be a primitive type in the JSON string but got " + data['template_type']);
        }
        // ensure the json data is a string
        if (data['webhook_url'] && !(typeof data['webhook_url'] === 'string' || data['webhook_url'] instanceof String)) {
            throw new Error("Expected the field `webhook_url` to be a primitive type in the JSON string but got " + data['webhook_url']);
        }

        return true;
    }


}

FullTemplate.RequiredProperties = ["allow_additional_properties", "defaults", "demo", "description", "document_filename", "document_md5", "document_parse_error", "document_processed", "document_state", "document_url", "editable_submissions", "embed_domains", "encrypt_pdfs", "encrypt_pdfs_password", "expiration_interval", "expire_after", "expire_submissions", "field_order", "fields", "first_template", "footer_html", "header_html", "html", "id", "locked", "name", "page_count", "page_dimensions", "parent_folder_id", "path", "permanent_document_url", "public_submissions", "public_web_form", "redirect_url", "scss", "shared_field_data", "slack_webhook_url", "template_type", "webhook_url"];

/**
 * @member {Boolean} allow_additional_properties
 */
FullTemplate.prototype['allow_additional_properties'] = undefined;

/**
 * @member {module:model/FullTemplateDefaults} defaults
 */
FullTemplate.prototype['defaults'] = undefined;

/**
 * @member {Boolean} demo
 */
FullTemplate.prototype['demo'] = undefined;

/**
 * @member {String} description
 */
FullTemplate.prototype['description'] = undefined;

/**
 * @member {String} document_filename
 */
FullTemplate.prototype['document_filename'] = undefined;

/**
 * @member {String} document_md5
 */
FullTemplate.prototype['document_md5'] = undefined;

/**
 * @member {Boolean} document_parse_error
 */
FullTemplate.prototype['document_parse_error'] = undefined;

/**
 * @member {Boolean} document_processed
 */
FullTemplate.prototype['document_processed'] = undefined;

/**
 * @member {String} document_state
 */
FullTemplate.prototype['document_state'] = undefined;

/**
 * @member {String} document_url
 */
FullTemplate.prototype['document_url'] = undefined;

/**
 * @member {Boolean} editable_submissions
 */
FullTemplate.prototype['editable_submissions'] = undefined;

/**
 * @member {Array.<String>} embed_domains
 */
FullTemplate.prototype['embed_domains'] = undefined;

/**
 * @member {Boolean} encrypt_pdfs
 */
FullTemplate.prototype['encrypt_pdfs'] = undefined;

/**
 * @member {String} encrypt_pdfs_password
 */
FullTemplate.prototype['encrypt_pdfs_password'] = undefined;

/**
 * @member {module:model/FullTemplate.ExpirationIntervalEnum} expiration_interval
 */
FullTemplate.prototype['expiration_interval'] = undefined;

/**
 * @member {Number} expire_after
 */
FullTemplate.prototype['expire_after'] = undefined;

/**
 * @member {Boolean} expire_submissions
 */
FullTemplate.prototype['expire_submissions'] = undefined;

/**
 * @member {Array.<Array.<Number>>} field_order
 */
FullTemplate.prototype['field_order'] = undefined;

/**
 * @member {Object} fields
 */
FullTemplate.prototype['fields'] = undefined;

/**
 * @member {Boolean} first_template
 */
FullTemplate.prototype['first_template'] = undefined;

/**
 * @member {String} footer_html
 */
FullTemplate.prototype['footer_html'] = undefined;

/**
 * @member {String} header_html
 */
FullTemplate.prototype['header_html'] = undefined;

/**
 * @member {String} html
 */
FullTemplate.prototype['html'] = undefined;

/**
 * @member {String} id
 */
FullTemplate.prototype['id'] = undefined;

/**
 * @member {Boolean} locked
 */
FullTemplate.prototype['locked'] = undefined;

/**
 * @member {String} name
 */
FullTemplate.prototype['name'] = undefined;

/**
 * @member {Number} page_count
 */
FullTemplate.prototype['page_count'] = undefined;

/**
 * @member {Array.<Array.<Number>>} page_dimensions
 */
FullTemplate.prototype['page_dimensions'] = undefined;

/**
 * @member {String} parent_folder_id
 */
FullTemplate.prototype['parent_folder_id'] = undefined;

/**
 * @member {String} path
 */
FullTemplate.prototype['path'] = undefined;

/**
 * @member {String} permanent_document_url
 */
FullTemplate.prototype['permanent_document_url'] = undefined;

/**
 * @member {Boolean} public_submissions
 */
FullTemplate.prototype['public_submissions'] = undefined;

/**
 * @member {Boolean} public_web_form
 */
FullTemplate.prototype['public_web_form'] = undefined;

/**
 * @member {String} redirect_url
 */
FullTemplate.prototype['redirect_url'] = undefined;

/**
 * @member {String} scss
 */
FullTemplate.prototype['scss'] = undefined;

/**
 * @member {Object} shared_field_data
 */
FullTemplate.prototype['shared_field_data'] = undefined;

/**
 * @member {String} slack_webhook_url
 */
FullTemplate.prototype['slack_webhook_url'] = undefined;

/**
 * @member {String} template_type
 */
FullTemplate.prototype['template_type'] = undefined;

/**
 * @member {String} webhook_url
 */
FullTemplate.prototype['webhook_url'] = undefined;





/**
 * Allowed values for the <code>expiration_interval</code> property.
 * @enum {String}
 * @readonly
 */
FullTemplate['ExpirationIntervalEnum'] = {

    /**
     * value: "minutes"
     * @const
     */
    "minutes": "minutes",

    /**
     * value: "hours"
     * @const
     */
    "hours": "hours",

    /**
     * value: "days"
     * @const
     */
    "days": "days"
};



export default FullTemplate;

