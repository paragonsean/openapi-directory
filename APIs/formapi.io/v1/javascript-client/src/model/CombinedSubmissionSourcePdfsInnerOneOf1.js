/**
 * API v1
 * DocSpring is a service that helps you fill out and sign PDF templates.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CombinedSubmissionSourcePdfsInnerOneOf1 model module.
 * @module model/CombinedSubmissionSourcePdfsInnerOneOf1
 * @version v1
 */
class CombinedSubmissionSourcePdfsInnerOneOf1 {
    /**
     * Constructs a new <code>CombinedSubmissionSourcePdfsInnerOneOf1</code>.
     * @alias module:model/CombinedSubmissionSourcePdfsInnerOneOf1
     * @param type {module:model/CombinedSubmissionSourcePdfsInnerOneOf1.TypeEnum} 
     * @param url {String} 
     */
    constructor(type, url) { 
        
        CombinedSubmissionSourcePdfsInnerOneOf1.initialize(this, type, url);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, type, url) { 
        obj['type'] = type;
        obj['url'] = url;
    }

    /**
     * Constructs a <code>CombinedSubmissionSourcePdfsInnerOneOf1</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CombinedSubmissionSourcePdfsInnerOneOf1} obj Optional instance to populate.
     * @return {module:model/CombinedSubmissionSourcePdfsInnerOneOf1} The populated <code>CombinedSubmissionSourcePdfsInnerOneOf1</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CombinedSubmissionSourcePdfsInnerOneOf1();

            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CombinedSubmissionSourcePdfsInnerOneOf1</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CombinedSubmissionSourcePdfsInnerOneOf1</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CombinedSubmissionSourcePdfsInnerOneOf1.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }

        return true;
    }


}

CombinedSubmissionSourcePdfsInnerOneOf1.RequiredProperties = ["type", "url"];

/**
 * @member {module:model/CombinedSubmissionSourcePdfsInnerOneOf1.TypeEnum} type
 */
CombinedSubmissionSourcePdfsInnerOneOf1.prototype['type'] = undefined;

/**
 * @member {String} url
 */
CombinedSubmissionSourcePdfsInnerOneOf1.prototype['url'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
CombinedSubmissionSourcePdfsInnerOneOf1['TypeEnum'] = {

    /**
     * value: "url"
     * @const
     */
    "url": "url"
};



export default CombinedSubmissionSourcePdfsInnerOneOf1;

