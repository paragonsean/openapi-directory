/**
 * API v1
 * DocSpring is a service that helps you fill out and sign PDF templates.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Template model module.
 * @module model/Template
 * @version v1
 */
class Template {
    /**
     * Constructs a new <code>Template</code>.
     * @alias module:model/Template
     * @param allowAdditionalProperties {Boolean} 
     * @param description {String} 
     * @param documentUrl {String} 
     * @param editableSubmissions {Boolean} 
     * @param expirationInterval {module:model/Template.ExpirationIntervalEnum} 
     * @param expireAfter {Number} 
     * @param expireSubmissions {Boolean} 
     * @param id {String} 
     * @param locked {Boolean} 
     * @param name {String} 
     * @param pageDimensions {Array.<Array.<Number>>} 
     * @param parentFolderId {String} 
     * @param path {String} 
     * @param permanentDocumentUrl {String} 
     * @param publicSubmissions {Boolean} 
     * @param publicWebForm {Boolean} 
     * @param redirectUrl {String} 
     * @param slackWebhookUrl {String} 
     * @param templateType {String} 
     * @param webhookUrl {String} 
     */
    constructor(allowAdditionalProperties, description, documentUrl, editableSubmissions, expirationInterval, expireAfter, expireSubmissions, id, locked, name, pageDimensions, parentFolderId, path, permanentDocumentUrl, publicSubmissions, publicWebForm, redirectUrl, slackWebhookUrl, templateType, webhookUrl) { 
        
        Template.initialize(this, allowAdditionalProperties, description, documentUrl, editableSubmissions, expirationInterval, expireAfter, expireSubmissions, id, locked, name, pageDimensions, parentFolderId, path, permanentDocumentUrl, publicSubmissions, publicWebForm, redirectUrl, slackWebhookUrl, templateType, webhookUrl);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, allowAdditionalProperties, description, documentUrl, editableSubmissions, expirationInterval, expireAfter, expireSubmissions, id, locked, name, pageDimensions, parentFolderId, path, permanentDocumentUrl, publicSubmissions, publicWebForm, redirectUrl, slackWebhookUrl, templateType, webhookUrl) { 
        obj['allow_additional_properties'] = allowAdditionalProperties;
        obj['description'] = description;
        obj['document_url'] = documentUrl;
        obj['editable_submissions'] = editableSubmissions;
        obj['expiration_interval'] = expirationInterval;
        obj['expire_after'] = expireAfter;
        obj['expire_submissions'] = expireSubmissions;
        obj['id'] = id;
        obj['locked'] = locked;
        obj['name'] = name;
        obj['page_dimensions'] = pageDimensions;
        obj['parent_folder_id'] = parentFolderId;
        obj['path'] = path;
        obj['permanent_document_url'] = permanentDocumentUrl;
        obj['public_submissions'] = publicSubmissions;
        obj['public_web_form'] = publicWebForm;
        obj['redirect_url'] = redirectUrl;
        obj['slack_webhook_url'] = slackWebhookUrl;
        obj['template_type'] = templateType;
        obj['webhook_url'] = webhookUrl;
    }

    /**
     * Constructs a <code>Template</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Template} obj Optional instance to populate.
     * @return {module:model/Template} The populated <code>Template</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Template();

            if (data.hasOwnProperty('allow_additional_properties')) {
                obj['allow_additional_properties'] = ApiClient.convertToType(data['allow_additional_properties'], 'Boolean');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('document_url')) {
                obj['document_url'] = ApiClient.convertToType(data['document_url'], 'String');
            }
            if (data.hasOwnProperty('editable_submissions')) {
                obj['editable_submissions'] = ApiClient.convertToType(data['editable_submissions'], 'Boolean');
            }
            if (data.hasOwnProperty('expiration_interval')) {
                obj['expiration_interval'] = ApiClient.convertToType(data['expiration_interval'], 'String');
            }
            if (data.hasOwnProperty('expire_after')) {
                obj['expire_after'] = ApiClient.convertToType(data['expire_after'], 'Number');
            }
            if (data.hasOwnProperty('expire_submissions')) {
                obj['expire_submissions'] = ApiClient.convertToType(data['expire_submissions'], 'Boolean');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('locked')) {
                obj['locked'] = ApiClient.convertToType(data['locked'], 'Boolean');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('page_dimensions')) {
                obj['page_dimensions'] = ApiClient.convertToType(data['page_dimensions'], [['Number']]);
            }
            if (data.hasOwnProperty('parent_folder_id')) {
                obj['parent_folder_id'] = ApiClient.convertToType(data['parent_folder_id'], 'String');
            }
            if (data.hasOwnProperty('path')) {
                obj['path'] = ApiClient.convertToType(data['path'], 'String');
            }
            if (data.hasOwnProperty('permanent_document_url')) {
                obj['permanent_document_url'] = ApiClient.convertToType(data['permanent_document_url'], 'String');
            }
            if (data.hasOwnProperty('public_submissions')) {
                obj['public_submissions'] = ApiClient.convertToType(data['public_submissions'], 'Boolean');
            }
            if (data.hasOwnProperty('public_web_form')) {
                obj['public_web_form'] = ApiClient.convertToType(data['public_web_form'], 'Boolean');
            }
            if (data.hasOwnProperty('redirect_url')) {
                obj['redirect_url'] = ApiClient.convertToType(data['redirect_url'], 'String');
            }
            if (data.hasOwnProperty('slack_webhook_url')) {
                obj['slack_webhook_url'] = ApiClient.convertToType(data['slack_webhook_url'], 'String');
            }
            if (data.hasOwnProperty('template_type')) {
                obj['template_type'] = ApiClient.convertToType(data['template_type'], 'String');
            }
            if (data.hasOwnProperty('webhook_url')) {
                obj['webhook_url'] = ApiClient.convertToType(data['webhook_url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Template</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Template</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Template.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['document_url'] && !(typeof data['document_url'] === 'string' || data['document_url'] instanceof String)) {
            throw new Error("Expected the field `document_url` to be a primitive type in the JSON string but got " + data['document_url']);
        }
        // ensure the json data is a string
        if (data['expiration_interval'] && !(typeof data['expiration_interval'] === 'string' || data['expiration_interval'] instanceof String)) {
            throw new Error("Expected the field `expiration_interval` to be a primitive type in the JSON string but got " + data['expiration_interval']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['page_dimensions'])) {
            throw new Error("Expected the field `page_dimensions` to be an array in the JSON data but got " + data['page_dimensions']);
        }
        // ensure the json data is a string
        if (data['parent_folder_id'] && !(typeof data['parent_folder_id'] === 'string' || data['parent_folder_id'] instanceof String)) {
            throw new Error("Expected the field `parent_folder_id` to be a primitive type in the JSON string but got " + data['parent_folder_id']);
        }
        // ensure the json data is a string
        if (data['path'] && !(typeof data['path'] === 'string' || data['path'] instanceof String)) {
            throw new Error("Expected the field `path` to be a primitive type in the JSON string but got " + data['path']);
        }
        // ensure the json data is a string
        if (data['permanent_document_url'] && !(typeof data['permanent_document_url'] === 'string' || data['permanent_document_url'] instanceof String)) {
            throw new Error("Expected the field `permanent_document_url` to be a primitive type in the JSON string but got " + data['permanent_document_url']);
        }
        // ensure the json data is a string
        if (data['redirect_url'] && !(typeof data['redirect_url'] === 'string' || data['redirect_url'] instanceof String)) {
            throw new Error("Expected the field `redirect_url` to be a primitive type in the JSON string but got " + data['redirect_url']);
        }
        // ensure the json data is a string
        if (data['slack_webhook_url'] && !(typeof data['slack_webhook_url'] === 'string' || data['slack_webhook_url'] instanceof String)) {
            throw new Error("Expected the field `slack_webhook_url` to be a primitive type in the JSON string but got " + data['slack_webhook_url']);
        }
        // ensure the json data is a string
        if (data['template_type'] && !(typeof data['template_type'] === 'string' || data['template_type'] instanceof String)) {
            throw new Error("Expected the field `template_type` to be a primitive type in the JSON string but got " + data['template_type']);
        }
        // ensure the json data is a string
        if (data['webhook_url'] && !(typeof data['webhook_url'] === 'string' || data['webhook_url'] instanceof String)) {
            throw new Error("Expected the field `webhook_url` to be a primitive type in the JSON string but got " + data['webhook_url']);
        }

        return true;
    }


}

Template.RequiredProperties = ["allow_additional_properties", "description", "document_url", "editable_submissions", "expiration_interval", "expire_after", "expire_submissions", "id", "locked", "name", "page_dimensions", "parent_folder_id", "path", "permanent_document_url", "public_submissions", "public_web_form", "redirect_url", "slack_webhook_url", "template_type", "webhook_url"];

/**
 * @member {Boolean} allow_additional_properties
 */
Template.prototype['allow_additional_properties'] = undefined;

/**
 * @member {String} description
 */
Template.prototype['description'] = undefined;

/**
 * @member {String} document_url
 */
Template.prototype['document_url'] = undefined;

/**
 * @member {Boolean} editable_submissions
 */
Template.prototype['editable_submissions'] = undefined;

/**
 * @member {module:model/Template.ExpirationIntervalEnum} expiration_interval
 */
Template.prototype['expiration_interval'] = undefined;

/**
 * @member {Number} expire_after
 */
Template.prototype['expire_after'] = undefined;

/**
 * @member {Boolean} expire_submissions
 */
Template.prototype['expire_submissions'] = undefined;

/**
 * @member {String} id
 */
Template.prototype['id'] = undefined;

/**
 * @member {Boolean} locked
 */
Template.prototype['locked'] = undefined;

/**
 * @member {String} name
 */
Template.prototype['name'] = undefined;

/**
 * @member {Array.<Array.<Number>>} page_dimensions
 */
Template.prototype['page_dimensions'] = undefined;

/**
 * @member {String} parent_folder_id
 */
Template.prototype['parent_folder_id'] = undefined;

/**
 * @member {String} path
 */
Template.prototype['path'] = undefined;

/**
 * @member {String} permanent_document_url
 */
Template.prototype['permanent_document_url'] = undefined;

/**
 * @member {Boolean} public_submissions
 */
Template.prototype['public_submissions'] = undefined;

/**
 * @member {Boolean} public_web_form
 */
Template.prototype['public_web_form'] = undefined;

/**
 * @member {String} redirect_url
 */
Template.prototype['redirect_url'] = undefined;

/**
 * @member {String} slack_webhook_url
 */
Template.prototype['slack_webhook_url'] = undefined;

/**
 * @member {String} template_type
 */
Template.prototype['template_type'] = undefined;

/**
 * @member {String} webhook_url
 */
Template.prototype['webhook_url'] = undefined;





/**
 * Allowed values for the <code>expiration_interval</code> property.
 * @enum {String}
 * @readonly
 */
Template['ExpirationIntervalEnum'] = {

    /**
     * value: "minutes"
     * @const
     */
    "minutes": "minutes",

    /**
     * value: "hours"
     * @const
     */
    "hours": "hours",

    /**
     * value: "days"
     * @const
     */
    "days": "days"
};



export default Template;

