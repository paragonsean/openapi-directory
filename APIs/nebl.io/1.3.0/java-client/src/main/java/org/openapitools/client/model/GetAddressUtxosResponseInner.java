/*
 * Neblio REST API Suite
 * APIs for Interacting with NTP1 Tokens & The Neblio Blockchain
 *
 * The version of the OpenAPI document: 1.3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GetAddressUtxosResponseInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T09:59:38.969239-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetAddressUtxosResponseInner {
  public static final String SERIALIZED_NAME_ADDRESS = "address";
  @SerializedName(SERIALIZED_NAME_ADDRESS)
  private String address;

  public static final String SERIALIZED_NAME_AMOUNT = "amount";
  @SerializedName(SERIALIZED_NAME_AMOUNT)
  private BigDecimal amount;

  public static final String SERIALIZED_NAME_CONFIRMATIONS = "confirmations";
  @SerializedName(SERIALIZED_NAME_CONFIRMATIONS)
  private BigDecimal confirmations;

  public static final String SERIALIZED_NAME_SCRIPT_PUB_KEY = "scriptPubKey";
  @SerializedName(SERIALIZED_NAME_SCRIPT_PUB_KEY)
  private String scriptPubKey;

  public static final String SERIALIZED_NAME_TS = "ts";
  @SerializedName(SERIALIZED_NAME_TS)
  private BigDecimal ts;

  public static final String SERIALIZED_NAME_TXID = "txid";
  @SerializedName(SERIALIZED_NAME_TXID)
  private String txid;

  public static final String SERIALIZED_NAME_VOUT = "vout";
  @SerializedName(SERIALIZED_NAME_VOUT)
  private BigDecimal vout;

  public GetAddressUtxosResponseInner() {
  }

  public GetAddressUtxosResponseInner address(String address) {
    this.address = address;
    return this;
  }

  /**
   * Address
   * @return address
   */
  @javax.annotation.Nullable
  public String getAddress() {
    return address;
  }

  public void setAddress(String address) {
    this.address = address;
  }


  public GetAddressUtxosResponseInner amount(BigDecimal amount) {
    this.amount = amount;
    return this;
  }

  /**
   * NEBL amount
   * @return amount
   */
  @javax.annotation.Nullable
  public BigDecimal getAmount() {
    return amount;
  }

  public void setAmount(BigDecimal amount) {
    this.amount = amount;
  }


  public GetAddressUtxosResponseInner confirmations(BigDecimal confirmations) {
    this.confirmations = confirmations;
    return this;
  }

  /**
   * Number of confirmations
   * @return confirmations
   */
  @javax.annotation.Nullable
  public BigDecimal getConfirmations() {
    return confirmations;
  }

  public void setConfirmations(BigDecimal confirmations) {
    this.confirmations = confirmations;
  }


  public GetAddressUtxosResponseInner scriptPubKey(String scriptPubKey) {
    this.scriptPubKey = scriptPubKey;
    return this;
  }

  /**
   * scriptPubKey
   * @return scriptPubKey
   */
  @javax.annotation.Nullable
  public String getScriptPubKey() {
    return scriptPubKey;
  }

  public void setScriptPubKey(String scriptPubKey) {
    this.scriptPubKey = scriptPubKey;
  }


  public GetAddressUtxosResponseInner ts(BigDecimal ts) {
    this.ts = ts;
    return this;
  }

  /**
   * Timestamp
   * @return ts
   */
  @javax.annotation.Nullable
  public BigDecimal getTs() {
    return ts;
  }

  public void setTs(BigDecimal ts) {
    this.ts = ts;
  }


  public GetAddressUtxosResponseInner txid(String txid) {
    this.txid = txid;
    return this;
  }

  /**
   * Transaction ID
   * @return txid
   */
  @javax.annotation.Nullable
  public String getTxid() {
    return txid;
  }

  public void setTxid(String txid) {
    this.txid = txid;
  }


  public GetAddressUtxosResponseInner vout(BigDecimal vout) {
    this.vout = vout;
    return this;
  }

  /**
   * vout
   * @return vout
   */
  @javax.annotation.Nullable
  public BigDecimal getVout() {
    return vout;
  }

  public void setVout(BigDecimal vout) {
    this.vout = vout;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetAddressUtxosResponseInner getAddressUtxosResponseInner = (GetAddressUtxosResponseInner) o;
    return Objects.equals(this.address, getAddressUtxosResponseInner.address) &&
        Objects.equals(this.amount, getAddressUtxosResponseInner.amount) &&
        Objects.equals(this.confirmations, getAddressUtxosResponseInner.confirmations) &&
        Objects.equals(this.scriptPubKey, getAddressUtxosResponseInner.scriptPubKey) &&
        Objects.equals(this.ts, getAddressUtxosResponseInner.ts) &&
        Objects.equals(this.txid, getAddressUtxosResponseInner.txid) &&
        Objects.equals(this.vout, getAddressUtxosResponseInner.vout);
  }

  @Override
  public int hashCode() {
    return Objects.hash(address, amount, confirmations, scriptPubKey, ts, txid, vout);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetAddressUtxosResponseInner {\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    confirmations: ").append(toIndentedString(confirmations)).append("\n");
    sb.append("    scriptPubKey: ").append(toIndentedString(scriptPubKey)).append("\n");
    sb.append("    ts: ").append(toIndentedString(ts)).append("\n");
    sb.append("    txid: ").append(toIndentedString(txid)).append("\n");
    sb.append("    vout: ").append(toIndentedString(vout)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("address");
    openapiFields.add("amount");
    openapiFields.add("confirmations");
    openapiFields.add("scriptPubKey");
    openapiFields.add("ts");
    openapiFields.add("txid");
    openapiFields.add("vout");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetAddressUtxosResponseInner
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetAddressUtxosResponseInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetAddressUtxosResponseInner is not found in the empty JSON string", GetAddressUtxosResponseInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetAddressUtxosResponseInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetAddressUtxosResponseInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("address") != null && !jsonObj.get("address").isJsonNull()) && !jsonObj.get("address").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `address` to be a primitive type in the JSON string but got `%s`", jsonObj.get("address").toString()));
      }
      if ((jsonObj.get("scriptPubKey") != null && !jsonObj.get("scriptPubKey").isJsonNull()) && !jsonObj.get("scriptPubKey").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `scriptPubKey` to be a primitive type in the JSON string but got `%s`", jsonObj.get("scriptPubKey").toString()));
      }
      if ((jsonObj.get("txid") != null && !jsonObj.get("txid").isJsonNull()) && !jsonObj.get("txid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `txid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("txid").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetAddressUtxosResponseInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetAddressUtxosResponseInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetAddressUtxosResponseInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetAddressUtxosResponseInner.class));

       return (TypeAdapter<T>) new TypeAdapter<GetAddressUtxosResponseInner>() {
           @Override
           public void write(JsonWriter out, GetAddressUtxosResponseInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetAddressUtxosResponseInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetAddressUtxosResponseInner given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetAddressUtxosResponseInner
   * @throws IOException if the JSON string is invalid with respect to GetAddressUtxosResponseInner
   */
  public static GetAddressUtxosResponseInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetAddressUtxosResponseInner.class);
  }

  /**
   * Convert an instance of GetAddressUtxosResponseInner to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

