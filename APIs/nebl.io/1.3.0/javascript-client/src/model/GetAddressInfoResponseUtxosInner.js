/**
 * Neblio REST API Suite
 * APIs for Interacting with NTP1 Tokens & The Neblio Blockchain
 *
 * The version of the OpenAPI document: 1.3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GetAddressInfoResponseUtxosInnerTokensInner from './GetAddressInfoResponseUtxosInnerTokensInner';

/**
 * The GetAddressInfoResponseUtxosInner model module.
 * @module model/GetAddressInfoResponseUtxosInner
 * @version 1.3.0
 */
class GetAddressInfoResponseUtxosInner {
    /**
     * Constructs a new <code>GetAddressInfoResponseUtxosInner</code>.
     * @alias module:model/GetAddressInfoResponseUtxosInner
     */
    constructor() { 
        
        GetAddressInfoResponseUtxosInner.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GetAddressInfoResponseUtxosInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetAddressInfoResponseUtxosInner} obj Optional instance to populate.
     * @return {module:model/GetAddressInfoResponseUtxosInner} The populated <code>GetAddressInfoResponseUtxosInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetAddressInfoResponseUtxosInner();

            if (data.hasOwnProperty('blockheight')) {
                obj['blockheight'] = ApiClient.convertToType(data['blockheight'], 'Number');
            }
            if (data.hasOwnProperty('blocktime')) {
                obj['blocktime'] = ApiClient.convertToType(data['blocktime'], 'Number');
            }
            if (data.hasOwnProperty('index')) {
                obj['index'] = ApiClient.convertToType(data['index'], 'Number');
            }
            if (data.hasOwnProperty('scriptPubKey')) {
                obj['scriptPubKey'] = ApiClient.convertToType(data['scriptPubKey'], Object);
            }
            if (data.hasOwnProperty('tokens')) {
                obj['tokens'] = ApiClient.convertToType(data['tokens'], [GetAddressInfoResponseUtxosInnerTokensInner]);
            }
            if (data.hasOwnProperty('txid')) {
                obj['txid'] = ApiClient.convertToType(data['txid'], 'String');
            }
            if (data.hasOwnProperty('used')) {
                obj['used'] = ApiClient.convertToType(data['used'], 'Boolean');
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetAddressInfoResponseUtxosInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetAddressInfoResponseUtxosInner</code>.
     */
    static validateJSON(data) {
        if (data['tokens']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['tokens'])) {
                throw new Error("Expected the field `tokens` to be an array in the JSON data but got " + data['tokens']);
            }
            // validate the optional field `tokens` (array)
            for (const item of data['tokens']) {
                GetAddressInfoResponseUtxosInnerTokensInner.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['txid'] && !(typeof data['txid'] === 'string' || data['txid'] instanceof String)) {
            throw new Error("Expected the field `txid` to be a primitive type in the JSON string but got " + data['txid']);
        }

        return true;
    }


}



/**
 * Blockheight of the UTXO
 * @member {Number} blockheight
 */
GetAddressInfoResponseUtxosInner.prototype['blockheight'] = undefined;

/**
 * Blocktime of the UTXO
 * @member {Number} blocktime
 */
GetAddressInfoResponseUtxosInner.prototype['blocktime'] = undefined;

/**
 * Index of the UTXO at this address
 * @member {Number} index
 */
GetAddressInfoResponseUtxosInner.prototype['index'] = undefined;

/**
 * Object representing the scruptPubKey of the UTXO
 * @member {Object} scriptPubKey
 */
GetAddressInfoResponseUtxosInner.prototype['scriptPubKey'] = undefined;

/**
 * Array of NTP1 tokens in this UTXO.
 * @member {Array.<module:model/GetAddressInfoResponseUtxosInnerTokensInner>} tokens
 */
GetAddressInfoResponseUtxosInner.prototype['tokens'] = undefined;

/**
 * Txid of this UTXO
 * @member {String} txid
 */
GetAddressInfoResponseUtxosInner.prototype['txid'] = undefined;

/**
 * Whether the UTXO has been used
 * @member {Boolean} used
 */
GetAddressInfoResponseUtxosInner.prototype['used'] = undefined;

/**
 * Value of the UTXO in NEBL satoshi
 * @member {Number} value
 */
GetAddressInfoResponseUtxosInner.prototype['value'] = undefined;






export default GetAddressInfoResponseUtxosInner;

