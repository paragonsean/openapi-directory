/**
 * Neblio REST API Suite
 * APIs for Interacting with NTP1 Tokens & The Neblio Blockchain
 *
 * The version of the OpenAPI document: 1.3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GetTokenHoldersResponseHoldersInner from './GetTokenHoldersResponseHoldersInner';

/**
 * The GetTokenHoldersResponse model module.
 * @module model/GetTokenHoldersResponse
 * @version 1.3.0
 */
class GetTokenHoldersResponse {
    /**
     * Constructs a new <code>GetTokenHoldersResponse</code>.
     * @alias module:model/GetTokenHoldersResponse
     */
    constructor() { 
        
        GetTokenHoldersResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GetTokenHoldersResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetTokenHoldersResponse} obj Optional instance to populate.
     * @return {module:model/GetTokenHoldersResponse} The populated <code>GetTokenHoldersResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetTokenHoldersResponse();

            if (data.hasOwnProperty('aggregationPolicy')) {
                obj['aggregationPolicy'] = ApiClient.convertToType(data['aggregationPolicy'], 'String');
            }
            if (data.hasOwnProperty('divibility')) {
                obj['divibility'] = ApiClient.convertToType(data['divibility'], 'Number');
            }
            if (data.hasOwnProperty('holders')) {
                obj['holders'] = ApiClient.convertToType(data['holders'], [GetTokenHoldersResponseHoldersInner]);
            }
            if (data.hasOwnProperty('lockStatus')) {
                obj['lockStatus'] = ApiClient.convertToType(data['lockStatus'], 'Boolean');
            }
            if (data.hasOwnProperty('someUtxo')) {
                obj['someUtxo'] = ApiClient.convertToType(data['someUtxo'], 'String');
            }
            if (data.hasOwnProperty('tokenId')) {
                obj['tokenId'] = ApiClient.convertToType(data['tokenId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetTokenHoldersResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetTokenHoldersResponse</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['aggregationPolicy'] && !(typeof data['aggregationPolicy'] === 'string' || data['aggregationPolicy'] instanceof String)) {
            throw new Error("Expected the field `aggregationPolicy` to be a primitive type in the JSON string but got " + data['aggregationPolicy']);
        }
        if (data['holders']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['holders'])) {
                throw new Error("Expected the field `holders` to be an array in the JSON data but got " + data['holders']);
            }
            // validate the optional field `holders` (array)
            for (const item of data['holders']) {
                GetTokenHoldersResponseHoldersInner.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['someUtxo'] && !(typeof data['someUtxo'] === 'string' || data['someUtxo'] instanceof String)) {
            throw new Error("Expected the field `someUtxo` to be a primitive type in the JSON string but got " + data['someUtxo']);
        }
        // ensure the json data is a string
        if (data['tokenId'] && !(typeof data['tokenId'] === 'string' || data['tokenId'] instanceof String)) {
            throw new Error("Expected the field `tokenId` to be a primitive type in the JSON string but got " + data['tokenId']);
        }

        return true;
    }


}



/**
 * Whether the tokesn are aggregatable
 * @member {String} aggregationPolicy
 */
GetTokenHoldersResponse.prototype['aggregationPolicy'] = undefined;

/**
 * How many decimal points the token is divisble to
 * @member {Number} divibility
 */
GetTokenHoldersResponse.prototype['divibility'] = undefined;

/**
 * @member {Array.<module:model/GetTokenHoldersResponseHoldersInner>} holders
 */
GetTokenHoldersResponse.prototype['holders'] = undefined;

/**
 * Whether new issuances of this token are locked
 * @member {Boolean} lockStatus
 */
GetTokenHoldersResponse.prototype['lockStatus'] = undefined;

/**
 * A UTXO of this token
 * @member {String} someUtxo
 */
GetTokenHoldersResponse.prototype['someUtxo'] = undefined;

/**
 * TokenId of the token
 * @member {String} tokenId
 */
GetTokenHoldersResponse.prototype['tokenId'] = undefined;






export default GetTokenHoldersResponse;

