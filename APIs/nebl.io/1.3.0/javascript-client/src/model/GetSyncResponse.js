/**
 * Neblio REST API Suite
 * APIs for Interacting with NTP1 Tokens & The Neblio Blockchain
 *
 * The version of the OpenAPI document: 1.3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GetSyncResponse model module.
 * @module model/GetSyncResponse
 * @version 1.3.0
 */
class GetSyncResponse {
    /**
     * Constructs a new <code>GetSyncResponse</code>.
     * Object containing node sync status
     * @alias module:model/GetSyncResponse
     */
    constructor() { 
        
        GetSyncResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GetSyncResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetSyncResponse} obj Optional instance to populate.
     * @return {module:model/GetSyncResponse} The populated <code>GetSyncResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetSyncResponse();

            if (data.hasOwnProperty('blockChainHeight')) {
                obj['blockChainHeight'] = ApiClient.convertToType(data['blockChainHeight'], 'Number');
            }
            if (data.hasOwnProperty('error')) {
                obj['error'] = ApiClient.convertToType(data['error'], 'String');
            }
            if (data.hasOwnProperty('height')) {
                obj['height'] = ApiClient.convertToType(data['height'], 'Number');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('syncPercentage')) {
                obj['syncPercentage'] = ApiClient.convertToType(data['syncPercentage'], 'Number');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetSyncResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetSyncResponse</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['error'] && !(typeof data['error'] === 'string' || data['error'] instanceof String)) {
            throw new Error("Expected the field `error` to be a primitive type in the JSON string but got " + data['error']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}



/**
 * Current blockchain height
 * @member {Number} blockChainHeight
 */
GetSyncResponse.prototype['blockChainHeight'] = undefined;

/**
 * Recent sync error messages
 * @member {String} error
 */
GetSyncResponse.prototype['error'] = undefined;

/**
 * Height node is synced to
 * @member {Number} height
 */
GetSyncResponse.prototype['height'] = undefined;

/**
 * Current sync status
 * @member {String} status
 */
GetSyncResponse.prototype['status'] = undefined;

/**
 * Current sync percentage
 * @member {Number} syncPercentage
 */
GetSyncResponse.prototype['syncPercentage'] = undefined;

/**
 * Node type
 * @member {String} type
 */
GetSyncResponse.prototype['type'] = undefined;






export default GetSyncResponse;

