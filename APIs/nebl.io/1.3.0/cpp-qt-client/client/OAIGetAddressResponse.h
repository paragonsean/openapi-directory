/**
 * Neblio REST API Suite
 * APIs for Interacting with NTP1 Tokens & The Neblio Blockchain
 *
 * The version of the OpenAPI document: 1.3.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetAddressResponse.h
 *
 * 
 */

#ifndef OAIGetAddressResponse_H
#define OAIGetAddressResponse_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGetAddressResponse : public OAIObject {
public:
    OAIGetAddressResponse();
    OAIGetAddressResponse(QString json);
    ~OAIGetAddressResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAddrStr() const;
    void setAddrStr(const QString &addr_str);
    bool is_addr_str_Set() const;
    bool is_addr_str_Valid() const;

    double getBalance() const;
    void setBalance(const double &balance);
    bool is_balance_Set() const;
    bool is_balance_Valid() const;

    double getBalanceSat() const;
    void setBalanceSat(const double &balance_sat);
    bool is_balance_sat_Set() const;
    bool is_balance_sat_Valid() const;

    double getTotalReceived() const;
    void setTotalReceived(const double &total_received);
    bool is_total_received_Set() const;
    bool is_total_received_Valid() const;

    double getTotalReceivedSat() const;
    void setTotalReceivedSat(const double &total_received_sat);
    bool is_total_received_sat_Set() const;
    bool is_total_received_sat_Valid() const;

    double getTotalSent() const;
    void setTotalSent(const double &total_sent);
    bool is_total_sent_Set() const;
    bool is_total_sent_Valid() const;

    double getTotalSentSat() const;
    void setTotalSentSat(const double &total_sent_sat);
    bool is_total_sent_sat_Set() const;
    bool is_total_sent_sat_Valid() const;

    QList<QString> getTransactions() const;
    void setTransactions(const QList<QString> &transactions);
    bool is_transactions_Set() const;
    bool is_transactions_Valid() const;

    double getTxAppearances() const;
    void setTxAppearances(const double &tx_appearances);
    bool is_tx_appearances_Set() const;
    bool is_tx_appearances_Valid() const;

    double getUnconfirmedBalance() const;
    void setUnconfirmedBalance(const double &unconfirmed_balance);
    bool is_unconfirmed_balance_Set() const;
    bool is_unconfirmed_balance_Valid() const;

    double getUnconfirmedBalanceSat() const;
    void setUnconfirmedBalanceSat(const double &unconfirmed_balance_sat);
    bool is_unconfirmed_balance_sat_Set() const;
    bool is_unconfirmed_balance_sat_Valid() const;

    double getUnconfirmedTxAppearances() const;
    void setUnconfirmedTxAppearances(const double &unconfirmed_tx_appearances);
    bool is_unconfirmed_tx_appearances_Set() const;
    bool is_unconfirmed_tx_appearances_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_addr_str;
    bool m_addr_str_isSet;
    bool m_addr_str_isValid;

    double m_balance;
    bool m_balance_isSet;
    bool m_balance_isValid;

    double m_balance_sat;
    bool m_balance_sat_isSet;
    bool m_balance_sat_isValid;

    double m_total_received;
    bool m_total_received_isSet;
    bool m_total_received_isValid;

    double m_total_received_sat;
    bool m_total_received_sat_isSet;
    bool m_total_received_sat_isValid;

    double m_total_sent;
    bool m_total_sent_isSet;
    bool m_total_sent_isValid;

    double m_total_sent_sat;
    bool m_total_sent_sat_isSet;
    bool m_total_sent_sat_isValid;

    QList<QString> m_transactions;
    bool m_transactions_isSet;
    bool m_transactions_isValid;

    double m_tx_appearances;
    bool m_tx_appearances_isSet;
    bool m_tx_appearances_isValid;

    double m_unconfirmed_balance;
    bool m_unconfirmed_balance_isSet;
    bool m_unconfirmed_balance_isValid;

    double m_unconfirmed_balance_sat;
    bool m_unconfirmed_balance_sat_isSet;
    bool m_unconfirmed_balance_sat_isValid;

    double m_unconfirmed_tx_appearances;
    bool m_unconfirmed_tx_appearances_isSet;
    bool m_unconfirmed_tx_appearances_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetAddressResponse)

#endif // OAIGetAddressResponse_H
