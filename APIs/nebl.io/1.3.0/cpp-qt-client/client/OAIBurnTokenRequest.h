/**
 * Neblio REST API Suite
 * APIs for Interacting with NTP1 Tokens & The Neblio Blockchain
 *
 * The version of the OpenAPI document: 1.3.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBurnTokenRequest.h
 *
 * 
 */

#ifndef OAIBurnTokenRequest_H
#define OAIBurnTokenRequest_H

#include <QJsonObject>

#include "OAIBurnTokenRequest_burn_inner.h"
#include "OAIBurnTokenRequest_transfer_inner.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIBurnTokenRequest_burn_inner;
class OAIBurnTokenRequest_transfer_inner;

class OAIBurnTokenRequest : public OAIObject {
public:
    OAIBurnTokenRequest();
    OAIBurnTokenRequest(QString json);
    ~OAIBurnTokenRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIBurnTokenRequest_burn_inner> getBurn() const;
    void setBurn(const QList<OAIBurnTokenRequest_burn_inner> &burn);
    bool is_burn_Set() const;
    bool is_burn_Valid() const;

    double getFee() const;
    void setFee(const double &fee);
    bool is_fee_Set() const;
    bool is_fee_Valid() const;

    QList<QString> getFrom() const;
    void setFrom(const QList<QString> &from);
    bool is_from_Set() const;
    bool is_from_Valid() const;

    QList<OAIBurnTokenRequest_transfer_inner> getTransfer() const;
    void setTransfer(const QList<OAIBurnTokenRequest_transfer_inner> &transfer);
    bool is_transfer_Set() const;
    bool is_transfer_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIBurnTokenRequest_burn_inner> m_burn;
    bool m_burn_isSet;
    bool m_burn_isValid;

    double m_fee;
    bool m_fee_isSet;
    bool m_fee_isValid;

    QList<QString> m_from;
    bool m_from_isSet;
    bool m_from_isValid;

    QList<OAIBurnTokenRequest_transfer_inner> m_transfer;
    bool m_transfer_isSet;
    bool m_transfer_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBurnTokenRequest)

#endif // OAIBurnTokenRequest_H
