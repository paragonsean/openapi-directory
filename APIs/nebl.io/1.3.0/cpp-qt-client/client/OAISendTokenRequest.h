/**
 * Neblio REST API Suite
 * APIs for Interacting with NTP1 Tokens & The Neblio Blockchain
 *
 * The version of the OpenAPI document: 1.3.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISendTokenRequest.h
 *
 * 
 */

#ifndef OAISendTokenRequest_H
#define OAISendTokenRequest_H

#include <QJsonObject>

#include "OAIBurnTokenRequest_transfer_inner.h"
#include "OAIIssueTokenRequest_flags.h"
#include "OAIIssueTokenRequest_metadata.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIIssueTokenRequest_flags;
class OAIIssueTokenRequest_metadata;
class OAIBurnTokenRequest_transfer_inner;

class OAISendTokenRequest : public OAIObject {
public:
    OAISendTokenRequest();
    OAISendTokenRequest(QString json);
    ~OAISendTokenRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getFee() const;
    void setFee(const double &fee);
    bool is_fee_Set() const;
    bool is_fee_Valid() const;

    OAIIssueTokenRequest_flags getFlags() const;
    void setFlags(const OAIIssueTokenRequest_flags &flags);
    bool is_flags_Set() const;
    bool is_flags_Valid() const;

    QList<QString> getFrom() const;
    void setFrom(const QList<QString> &from);
    bool is_from_Set() const;
    bool is_from_Valid() const;

    OAIIssueTokenRequest_metadata getMetadata() const;
    void setMetadata(const OAIIssueTokenRequest_metadata &metadata);
    bool is_metadata_Set() const;
    bool is_metadata_Valid() const;

    QList<QString> getSendutxo() const;
    void setSendutxo(const QList<QString> &sendutxo);
    bool is_sendutxo_Set() const;
    bool is_sendutxo_Valid() const;

    QList<OAIBurnTokenRequest_transfer_inner> getTo() const;
    void setTo(const QList<OAIBurnTokenRequest_transfer_inner> &to);
    bool is_to_Set() const;
    bool is_to_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_fee;
    bool m_fee_isSet;
    bool m_fee_isValid;

    OAIIssueTokenRequest_flags m_flags;
    bool m_flags_isSet;
    bool m_flags_isValid;

    QList<QString> m_from;
    bool m_from_isSet;
    bool m_from_isValid;

    OAIIssueTokenRequest_metadata m_metadata;
    bool m_metadata_isSet;
    bool m_metadata_isValid;

    QList<QString> m_sendutxo;
    bool m_sendutxo_isSet;
    bool m_sendutxo_isValid;

    QList<OAIBurnTokenRequest_transfer_inner> m_to;
    bool m_to_isSet;
    bool m_to_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISendTokenRequest)

#endif // OAISendTokenRequest_H
