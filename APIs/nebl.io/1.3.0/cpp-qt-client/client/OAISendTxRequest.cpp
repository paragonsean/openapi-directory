/**
 * Neblio REST API Suite
 * APIs for Interacting with NTP1 Tokens & The Neblio Blockchain
 *
 * The version of the OpenAPI document: 1.3.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISendTxRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISendTxRequest::OAISendTxRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISendTxRequest::OAISendTxRequest() {
    this->initializeModel();
}

OAISendTxRequest::~OAISendTxRequest() {}

void OAISendTxRequest::initializeModel() {

    m_rawtx_isSet = false;
    m_rawtx_isValid = false;
}

void OAISendTxRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISendTxRequest::fromJsonObject(QJsonObject json) {

    m_rawtx_isValid = ::OpenAPI::fromJsonValue(m_rawtx, json[QString("rawtx")]);
    m_rawtx_isSet = !json[QString("rawtx")].isNull() && m_rawtx_isValid;
}

QString OAISendTxRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISendTxRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_rawtx_isSet) {
        obj.insert(QString("rawtx"), ::OpenAPI::toJsonValue(m_rawtx));
    }
    return obj;
}

QString OAISendTxRequest::getRawtx() const {
    return m_rawtx;
}
void OAISendTxRequest::setRawtx(const QString &rawtx) {
    m_rawtx = rawtx;
    m_rawtx_isSet = true;
}

bool OAISendTxRequest::is_rawtx_Set() const{
    return m_rawtx_isSet;
}

bool OAISendTxRequest::is_rawtx_Valid() const{
    return m_rawtx_isValid;
}

bool OAISendTxRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_rawtx_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISendTxRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_rawtx_isValid && true;
}

} // namespace OpenAPI
