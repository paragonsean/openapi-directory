/**
 * Neblio REST API Suite
 * APIs for Interacting with NTP1 Tokens & The Neblio Blockchain
 *
 * The version of the OpenAPI document: 1.3.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetTokenHoldersResponse.h
 *
 * 
 */

#ifndef OAIGetTokenHoldersResponse_H
#define OAIGetTokenHoldersResponse_H

#include <QJsonObject>

#include "OAIGetTokenHoldersResponse_holders_inner.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGetTokenHoldersResponse_holders_inner;

class OAIGetTokenHoldersResponse : public OAIObject {
public:
    OAIGetTokenHoldersResponse();
    OAIGetTokenHoldersResponse(QString json);
    ~OAIGetTokenHoldersResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAggregationPolicy() const;
    void setAggregationPolicy(const QString &aggregation_policy);
    bool is_aggregation_policy_Set() const;
    bool is_aggregation_policy_Valid() const;

    double getDivibility() const;
    void setDivibility(const double &divibility);
    bool is_divibility_Set() const;
    bool is_divibility_Valid() const;

    QList<OAIGetTokenHoldersResponse_holders_inner> getHolders() const;
    void setHolders(const QList<OAIGetTokenHoldersResponse_holders_inner> &holders);
    bool is_holders_Set() const;
    bool is_holders_Valid() const;

    bool isLockStatus() const;
    void setLockStatus(const bool &lock_status);
    bool is_lock_status_Set() const;
    bool is_lock_status_Valid() const;

    QString getSomeUtxo() const;
    void setSomeUtxo(const QString &some_utxo);
    bool is_some_utxo_Set() const;
    bool is_some_utxo_Valid() const;

    QString getTokenId() const;
    void setTokenId(const QString &token_id);
    bool is_token_id_Set() const;
    bool is_token_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_aggregation_policy;
    bool m_aggregation_policy_isSet;
    bool m_aggregation_policy_isValid;

    double m_divibility;
    bool m_divibility_isSet;
    bool m_divibility_isValid;

    QList<OAIGetTokenHoldersResponse_holders_inner> m_holders;
    bool m_holders_isSet;
    bool m_holders_isValid;

    bool m_lock_status;
    bool m_lock_status_isSet;
    bool m_lock_status_isValid;

    QString m_some_utxo;
    bool m_some_utxo_isSet;
    bool m_some_utxo_isValid;

    QString m_token_id;
    bool m_token_id_isSet;
    bool m_token_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetTokenHoldersResponse)

#endif // OAIGetTokenHoldersResponse_H
