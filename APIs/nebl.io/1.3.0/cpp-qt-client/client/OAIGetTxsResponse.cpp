/**
 * Neblio REST API Suite
 * APIs for Interacting with NTP1 Tokens & The Neblio Blockchain
 *
 * The version of the OpenAPI document: 1.3.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetTxsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetTxsResponse::OAIGetTxsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetTxsResponse::OAIGetTxsResponse() {
    this->initializeModel();
}

OAIGetTxsResponse::~OAIGetTxsResponse() {}

void OAIGetTxsResponse::initializeModel() {

    m_pages_total_isSet = false;
    m_pages_total_isValid = false;

    m_txs_isSet = false;
    m_txs_isValid = false;
}

void OAIGetTxsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetTxsResponse::fromJsonObject(QJsonObject json) {

    m_pages_total_isValid = ::OpenAPI::fromJsonValue(m_pages_total, json[QString("pagesTotal")]);
    m_pages_total_isSet = !json[QString("pagesTotal")].isNull() && m_pages_total_isValid;

    m_txs_isValid = ::OpenAPI::fromJsonValue(m_txs, json[QString("txs")]);
    m_txs_isSet = !json[QString("txs")].isNull() && m_txs_isValid;
}

QString OAIGetTxsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetTxsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_pages_total_isSet) {
        obj.insert(QString("pagesTotal"), ::OpenAPI::toJsonValue(m_pages_total));
    }
    if (m_txs.size() > 0) {
        obj.insert(QString("txs"), ::OpenAPI::toJsonValue(m_txs));
    }
    return obj;
}

double OAIGetTxsResponse::getPagesTotal() const {
    return m_pages_total;
}
void OAIGetTxsResponse::setPagesTotal(const double &pages_total) {
    m_pages_total = pages_total;
    m_pages_total_isSet = true;
}

bool OAIGetTxsResponse::is_pages_total_Set() const{
    return m_pages_total_isSet;
}

bool OAIGetTxsResponse::is_pages_total_Valid() const{
    return m_pages_total_isValid;
}

QList<OAIGetTxResponse> OAIGetTxsResponse::getTxs() const {
    return m_txs;
}
void OAIGetTxsResponse::setTxs(const QList<OAIGetTxResponse> &txs) {
    m_txs = txs;
    m_txs_isSet = true;
}

bool OAIGetTxsResponse::is_txs_Set() const{
    return m_txs_isSet;
}

bool OAIGetTxsResponse::is_txs_Valid() const{
    return m_txs_isValid;
}

bool OAIGetTxsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_pages_total_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_txs.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetTxsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
