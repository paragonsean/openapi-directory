/**
 * Neblio REST API Suite
 * APIs for Interacting with NTP1 Tokens & The Neblio Blockchain
 *
 * The version of the OpenAPI document: 1.3.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetTransactionInfoResponse_vin_inner_tokens_inner.h
 *
 * 
 */

#ifndef OAIGetTransactionInfoResponse_vin_inner_tokens_inner_H
#define OAIGetTransactionInfoResponse_vin_inner_tokens_inner_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGetTransactionInfoResponse_vin_inner_tokens_inner : public OAIObject {
public:
    OAIGetTransactionInfoResponse_vin_inner_tokens_inner();
    OAIGetTransactionInfoResponse_vin_inner_tokens_inner(QString json);
    ~OAIGetTransactionInfoResponse_vin_inner_tokens_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAggregationPolicy() const;
    void setAggregationPolicy(const QString &aggregation_policy);
    bool is_aggregation_policy_Set() const;
    bool is_aggregation_policy_Valid() const;

    double getAmount() const;
    void setAmount(const double &amount);
    bool is_amount_Set() const;
    bool is_amount_Valid() const;

    double getDivisibility() const;
    void setDivisibility(const double &divisibility);
    bool is_divisibility_Set() const;
    bool is_divisibility_Valid() const;

    QString getIssueTxid() const;
    void setIssueTxid(const QString &issue_txid);
    bool is_issue_txid_Set() const;
    bool is_issue_txid_Valid() const;

    bool isLockStatus() const;
    void setLockStatus(const bool &lock_status);
    bool is_lock_status_Set() const;
    bool is_lock_status_Valid() const;

    QString getTokenId() const;
    void setTokenId(const QString &token_id);
    bool is_token_id_Set() const;
    bool is_token_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_aggregation_policy;
    bool m_aggregation_policy_isSet;
    bool m_aggregation_policy_isValid;

    double m_amount;
    bool m_amount_isSet;
    bool m_amount_isValid;

    double m_divisibility;
    bool m_divisibility_isSet;
    bool m_divisibility_isValid;

    QString m_issue_txid;
    bool m_issue_txid_isSet;
    bool m_issue_txid_isValid;

    bool m_lock_status;
    bool m_lock_status_isSet;
    bool m_lock_status_isValid;

    QString m_token_id;
    bool m_token_id_isSet;
    bool m_token_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetTransactionInfoResponse_vin_inner_tokens_inner)

#endif // OAIGetTransactionInfoResponse_vin_inner_tokens_inner_H
