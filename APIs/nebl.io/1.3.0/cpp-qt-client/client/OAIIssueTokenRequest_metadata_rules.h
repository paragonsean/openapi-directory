/**
 * Neblio REST API Suite
 * APIs for Interacting with NTP1 Tokens & The Neblio Blockchain
 *
 * The version of the OpenAPI document: 1.3.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIIssueTokenRequest_metadata_rules.h
 *
 * Object describing token rules
 */

#ifndef OAIIssueTokenRequest_metadata_rules_H
#define OAIIssueTokenRequest_metadata_rules_H

#include <QJsonObject>

#include "OAIIssueTokenRequest_metadata_rules_expiration.h"
#include "OAIIssueTokenRequest_metadata_rules_fees.h"
#include "OAIIssueTokenRequest_metadata_rules_holders_inner.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIIssueTokenRequest_metadata_rules_expiration;
class OAIIssueTokenRequest_metadata_rules_fees;
class OAIIssueTokenRequest_metadata_rules_holders_inner;

class OAIIssueTokenRequest_metadata_rules : public OAIObject {
public:
    OAIIssueTokenRequest_metadata_rules();
    OAIIssueTokenRequest_metadata_rules(QString json);
    ~OAIIssueTokenRequest_metadata_rules() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIIssueTokenRequest_metadata_rules_expiration getExpiration() const;
    void setExpiration(const OAIIssueTokenRequest_metadata_rules_expiration &expiration);
    bool is_expiration_Set() const;
    bool is_expiration_Valid() const;

    OAIIssueTokenRequest_metadata_rules_fees getFees() const;
    void setFees(const OAIIssueTokenRequest_metadata_rules_fees &fees);
    bool is_fees_Set() const;
    bool is_fees_Valid() const;

    QList<OAIIssueTokenRequest_metadata_rules_holders_inner> getHolders() const;
    void setHolders(const QList<OAIIssueTokenRequest_metadata_rules_holders_inner> &holders);
    bool is_holders_Set() const;
    bool is_holders_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIIssueTokenRequest_metadata_rules_expiration m_expiration;
    bool m_expiration_isSet;
    bool m_expiration_isValid;

    OAIIssueTokenRequest_metadata_rules_fees m_fees;
    bool m_fees_isSet;
    bool m_fees_isValid;

    QList<OAIIssueTokenRequest_metadata_rules_holders_inner> m_holders;
    bool m_holders_isSet;
    bool m_holders_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIIssueTokenRequest_metadata_rules)

#endif // OAIIssueTokenRequest_metadata_rules_H
