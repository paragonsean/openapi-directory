/**
 * Neblio REST API Suite
 * APIs for Interacting with NTP1 Tokens & The Neblio Blockchain
 *
 * The version of the OpenAPI document: 1.3.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIIssueTokenRequest_metadata_rules_expiration.h
 *
 * Object describing expiration rules of the token
 */

#ifndef OAIIssueTokenRequest_metadata_rules_expiration_H
#define OAIIssueTokenRequest_metadata_rules_expiration_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIIssueTokenRequest_metadata_rules_expiration : public OAIObject {
public:
    OAIIssueTokenRequest_metadata_rules_expiration();
    OAIIssueTokenRequest_metadata_rules_expiration(QString json);
    ~OAIIssueTokenRequest_metadata_rules_expiration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isLocked() const;
    void setLocked(const bool &locked);
    bool is_locked_Set() const;
    bool is_locked_Valid() const;

    double getValidUntil() const;
    void setValidUntil(const double &valid_until);
    bool is_valid_until_Set() const;
    bool is_valid_until_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_locked;
    bool m_locked_isSet;
    bool m_locked_isValid;

    double m_valid_until;
    bool m_valid_until_isSet;
    bool m_valid_until_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIIssueTokenRequest_metadata_rules_expiration)

#endif // OAIIssueTokenRequest_metadata_rules_expiration_H
