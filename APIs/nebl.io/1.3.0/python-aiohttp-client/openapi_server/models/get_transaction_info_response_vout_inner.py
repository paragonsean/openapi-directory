# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_transaction_info_response_vin_inner_previous_output import GetTransactionInfoResponseVinInnerPreviousOutput
from openapi_server.models.get_transaction_info_response_vin_inner_tokens_inner import GetTransactionInfoResponseVinInnerTokensInner
from openapi_server import util


class GetTransactionInfoResponseVoutInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, blockheight: float=None, n: float=None, script_pub_key: GetTransactionInfoResponseVinInnerPreviousOutput=None, tokens: List[GetTransactionInfoResponseVinInnerTokensInner]=None, used: bool=None, used_blockheight: float=None, used_txid: str=None, value: float=None):
        """GetTransactionInfoResponseVoutInner - a model defined in OpenAPI

        :param blockheight: The blockheight of this GetTransactionInfoResponseVoutInner.
        :param n: The n of this GetTransactionInfoResponseVoutInner.
        :param script_pub_key: The script_pub_key of this GetTransactionInfoResponseVoutInner.
        :param tokens: The tokens of this GetTransactionInfoResponseVoutInner.
        :param used: The used of this GetTransactionInfoResponseVoutInner.
        :param used_blockheight: The used_blockheight of this GetTransactionInfoResponseVoutInner.
        :param used_txid: The used_txid of this GetTransactionInfoResponseVoutInner.
        :param value: The value of this GetTransactionInfoResponseVoutInner.
        """
        self.openapi_types = {
            'blockheight': float,
            'n': float,
            'script_pub_key': GetTransactionInfoResponseVinInnerPreviousOutput,
            'tokens': List[GetTransactionInfoResponseVinInnerTokensInner],
            'used': bool,
            'used_blockheight': float,
            'used_txid': str,
            'value': float
        }

        self.attribute_map = {
            'blockheight': 'blockheight',
            'n': 'n',
            'script_pub_key': 'scriptPubKey',
            'tokens': 'tokens',
            'used': 'used',
            'used_blockheight': 'usedBlockheight',
            'used_txid': 'usedTxid',
            'value': 'value'
        }

        self._blockheight = blockheight
        self._n = n
        self._script_pub_key = script_pub_key
        self._tokens = tokens
        self._used = used
        self._used_blockheight = used_blockheight
        self._used_txid = used_txid
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetTransactionInfoResponseVoutInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getTransactionInfoResponse_vout_inner of this GetTransactionInfoResponseVoutInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def blockheight(self):
        """Gets the blockheight of this GetTransactionInfoResponseVoutInner.

        Blockheight of this transaction

        :return: The blockheight of this GetTransactionInfoResponseVoutInner.
        :rtype: float
        """
        return self._blockheight

    @blockheight.setter
    def blockheight(self, blockheight):
        """Sets the blockheight of this GetTransactionInfoResponseVoutInner.

        Blockheight of this transaction

        :param blockheight: The blockheight of this GetTransactionInfoResponseVoutInner.
        :type blockheight: float
        """

        self._blockheight = blockheight

    @property
    def n(self):
        """Gets the n of this GetTransactionInfoResponseVoutInner.

        Output index

        :return: The n of this GetTransactionInfoResponseVoutInner.
        :rtype: float
        """
        return self._n

    @n.setter
    def n(self, n):
        """Sets the n of this GetTransactionInfoResponseVoutInner.

        Output index

        :param n: The n of this GetTransactionInfoResponseVoutInner.
        :type n: float
        """

        self._n = n

    @property
    def script_pub_key(self):
        """Gets the script_pub_key of this GetTransactionInfoResponseVoutInner.


        :return: The script_pub_key of this GetTransactionInfoResponseVoutInner.
        :rtype: GetTransactionInfoResponseVinInnerPreviousOutput
        """
        return self._script_pub_key

    @script_pub_key.setter
    def script_pub_key(self, script_pub_key):
        """Sets the script_pub_key of this GetTransactionInfoResponseVoutInner.


        :param script_pub_key: The script_pub_key of this GetTransactionInfoResponseVoutInner.
        :type script_pub_key: GetTransactionInfoResponseVinInnerPreviousOutput
        """

        self._script_pub_key = script_pub_key

    @property
    def tokens(self):
        """Gets the tokens of this GetTransactionInfoResponseVoutInner.


        :return: The tokens of this GetTransactionInfoResponseVoutInner.
        :rtype: List[GetTransactionInfoResponseVinInnerTokensInner]
        """
        return self._tokens

    @tokens.setter
    def tokens(self, tokens):
        """Sets the tokens of this GetTransactionInfoResponseVoutInner.


        :param tokens: The tokens of this GetTransactionInfoResponseVoutInner.
        :type tokens: List[GetTransactionInfoResponseVinInnerTokensInner]
        """

        self._tokens = tokens

    @property
    def used(self):
        """Gets the used of this GetTransactionInfoResponseVoutInner.

        Whether this output has now been used

        :return: The used of this GetTransactionInfoResponseVoutInner.
        :rtype: bool
        """
        return self._used

    @used.setter
    def used(self, used):
        """Sets the used of this GetTransactionInfoResponseVoutInner.

        Whether this output has now been used

        :param used: The used of this GetTransactionInfoResponseVoutInner.
        :type used: bool
        """

        self._used = used

    @property
    def used_blockheight(self):
        """Gets the used_blockheight of this GetTransactionInfoResponseVoutInner.

        Blockheight this output was used in

        :return: The used_blockheight of this GetTransactionInfoResponseVoutInner.
        :rtype: float
        """
        return self._used_blockheight

    @used_blockheight.setter
    def used_blockheight(self, used_blockheight):
        """Sets the used_blockheight of this GetTransactionInfoResponseVoutInner.

        Blockheight this output was used in

        :param used_blockheight: The used_blockheight of this GetTransactionInfoResponseVoutInner.
        :type used_blockheight: float
        """

        self._used_blockheight = used_blockheight

    @property
    def used_txid(self):
        """Gets the used_txid of this GetTransactionInfoResponseVoutInner.

        TXID this output was used in

        :return: The used_txid of this GetTransactionInfoResponseVoutInner.
        :rtype: str
        """
        return self._used_txid

    @used_txid.setter
    def used_txid(self, used_txid):
        """Sets the used_txid of this GetTransactionInfoResponseVoutInner.

        TXID this output was used in

        :param used_txid: The used_txid of this GetTransactionInfoResponseVoutInner.
        :type used_txid: str
        """

        self._used_txid = used_txid

    @property
    def value(self):
        """Gets the value of this GetTransactionInfoResponseVoutInner.

        Value of the output in NEBL satoshi

        :return: The value of this GetTransactionInfoResponseVoutInner.
        :rtype: float
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this GetTransactionInfoResponseVoutInner.

        Value of the output in NEBL satoshi

        :param value: The value of this GetTransactionInfoResponseVoutInner.
        :type value: float
        """

        self._value = value
