# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.issue_token_request_metadata_rules_fees_items_inner import IssueTokenRequestMetadataRulesFeesItemsInner
from openapi_server import util


class IssueTokenRequestMetadataRulesFees(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, items: List[IssueTokenRequestMetadataRulesFeesItemsInner]=None, locked: bool=None):
        """IssueTokenRequestMetadataRulesFees - a model defined in OpenAPI

        :param items: The items of this IssueTokenRequestMetadataRulesFees.
        :param locked: The locked of this IssueTokenRequestMetadataRulesFees.
        """
        self.openapi_types = {
            'items': List[IssueTokenRequestMetadataRulesFeesItemsInner],
            'locked': bool
        }

        self.attribute_map = {
            'items': 'items',
            'locked': 'locked'
        }

        self._items = items
        self._locked = locked

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IssueTokenRequestMetadataRulesFees':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The issueTokenRequest_metadata_rules_fees of this IssueTokenRequestMetadataRulesFees.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def items(self):
        """Gets the items of this IssueTokenRequestMetadataRulesFees.

        Array of objects describing fee rules

        :return: The items of this IssueTokenRequestMetadataRulesFees.
        :rtype: List[IssueTokenRequestMetadataRulesFeesItemsInner]
        """
        return self._items

    @items.setter
    def items(self, items):
        """Sets the items of this IssueTokenRequestMetadataRulesFees.

        Array of objects describing fee rules

        :param items: The items of this IssueTokenRequestMetadataRulesFees.
        :type items: List[IssueTokenRequestMetadataRulesFeesItemsInner]
        """

        self._items = items

    @property
    def locked(self):
        """Gets the locked of this IssueTokenRequestMetadataRulesFees.

        Whether this rule can be modified in future transactions

        :return: The locked of this IssueTokenRequestMetadataRulesFees.
        :rtype: bool
        """
        return self._locked

    @locked.setter
    def locked(self, locked):
        """Sets the locked of this IssueTokenRequestMetadataRulesFees.

        Whether this rule can be modified in future transactions

        :param locked: The locked of this IssueTokenRequestMetadataRulesFees.
        :type locked: bool
        """

        self._locked = locked
