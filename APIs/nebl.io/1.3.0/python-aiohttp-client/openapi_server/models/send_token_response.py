# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SendTokenResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, multisig_outputs: List[float]=None, ntp1_output_indexes: List[float]=None, tx_hex: str=None):
        """SendTokenResponse - a model defined in OpenAPI

        :param multisig_outputs: The multisig_outputs of this SendTokenResponse.
        :param ntp1_output_indexes: The ntp1_output_indexes of this SendTokenResponse.
        :param tx_hex: The tx_hex of this SendTokenResponse.
        """
        self.openapi_types = {
            'multisig_outputs': List[float],
            'ntp1_output_indexes': List[float],
            'tx_hex': str
        }

        self.attribute_map = {
            'multisig_outputs': 'multisigOutputs',
            'ntp1_output_indexes': 'ntp1OutputIndexes',
            'tx_hex': 'txHex'
        }

        self._multisig_outputs = multisig_outputs
        self._ntp1_output_indexes = ntp1_output_indexes
        self._tx_hex = tx_hex

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SendTokenResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The sendTokenResponse of this SendTokenResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def multisig_outputs(self):
        """Gets the multisig_outputs of this SendTokenResponse.

        Array of indexes of multisig outputs

        :return: The multisig_outputs of this SendTokenResponse.
        :rtype: List[float]
        """
        return self._multisig_outputs

    @multisig_outputs.setter
    def multisig_outputs(self, multisig_outputs):
        """Sets the multisig_outputs of this SendTokenResponse.

        Array of indexes of multisig outputs

        :param multisig_outputs: The multisig_outputs of this SendTokenResponse.
        :type multisig_outputs: List[float]
        """

        self._multisig_outputs = multisig_outputs

    @property
    def ntp1_output_indexes(self):
        """Gets the ntp1_output_indexes of this SendTokenResponse.

        Array of indexes transfering NTP1 tokens

        :return: The ntp1_output_indexes of this SendTokenResponse.
        :rtype: List[float]
        """
        return self._ntp1_output_indexes

    @ntp1_output_indexes.setter
    def ntp1_output_indexes(self, ntp1_output_indexes):
        """Sets the ntp1_output_indexes of this SendTokenResponse.

        Array of indexes transfering NTP1 tokens

        :param ntp1_output_indexes: The ntp1_output_indexes of this SendTokenResponse.
        :type ntp1_output_indexes: List[float]
        """

        self._ntp1_output_indexes = ntp1_output_indexes

    @property
    def tx_hex(self):
        """Gets the tx_hex of this SendTokenResponse.

        Unsigned, raw transaction hex of the transaction to send the token

        :return: The tx_hex of this SendTokenResponse.
        :rtype: str
        """
        return self._tx_hex

    @tx_hex.setter
    def tx_hex(self, tx_hex):
        """Sets the tx_hex of this SendTokenResponse.

        Unsigned, raw transaction hex of the transaction to send the token

        :param tx_hex: The tx_hex of this SendTokenResponse.
        :type tx_hex: str
        """

        self._tx_hex = tx_hex
