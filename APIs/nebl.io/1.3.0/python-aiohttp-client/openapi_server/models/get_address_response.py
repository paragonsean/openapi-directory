# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetAddressResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, addr_str: str=None, balance: float=None, balance_sat: float=None, total_received: float=None, total_received_sat: float=None, total_sent: float=None, total_sent_sat: float=None, transactions: List[str]=None, tx_appearances: float=None, unconfirmed_balance: float=None, unconfirmed_balance_sat: float=None, unconfirmed_tx_appearances: float=None):
        """GetAddressResponse - a model defined in OpenAPI

        :param addr_str: The addr_str of this GetAddressResponse.
        :param balance: The balance of this GetAddressResponse.
        :param balance_sat: The balance_sat of this GetAddressResponse.
        :param total_received: The total_received of this GetAddressResponse.
        :param total_received_sat: The total_received_sat of this GetAddressResponse.
        :param total_sent: The total_sent of this GetAddressResponse.
        :param total_sent_sat: The total_sent_sat of this GetAddressResponse.
        :param transactions: The transactions of this GetAddressResponse.
        :param tx_appearances: The tx_appearances of this GetAddressResponse.
        :param unconfirmed_balance: The unconfirmed_balance of this GetAddressResponse.
        :param unconfirmed_balance_sat: The unconfirmed_balance_sat of this GetAddressResponse.
        :param unconfirmed_tx_appearances: The unconfirmed_tx_appearances of this GetAddressResponse.
        """
        self.openapi_types = {
            'addr_str': str,
            'balance': float,
            'balance_sat': float,
            'total_received': float,
            'total_received_sat': float,
            'total_sent': float,
            'total_sent_sat': float,
            'transactions': List[str],
            'tx_appearances': float,
            'unconfirmed_balance': float,
            'unconfirmed_balance_sat': float,
            'unconfirmed_tx_appearances': float
        }

        self.attribute_map = {
            'addr_str': 'addrStr',
            'balance': 'balance',
            'balance_sat': 'balanceSat',
            'total_received': 'totalReceived',
            'total_received_sat': 'totalReceivedSat',
            'total_sent': 'totalSent',
            'total_sent_sat': 'totalSentSat',
            'transactions': 'transactions',
            'tx_appearances': 'txAppearances',
            'unconfirmed_balance': 'unconfirmedBalance',
            'unconfirmed_balance_sat': 'unconfirmedBalanceSat',
            'unconfirmed_tx_appearances': 'unconfirmedTxAppearances'
        }

        self._addr_str = addr_str
        self._balance = balance
        self._balance_sat = balance_sat
        self._total_received = total_received
        self._total_received_sat = total_received_sat
        self._total_sent = total_sent
        self._total_sent_sat = total_sent_sat
        self._transactions = transactions
        self._tx_appearances = tx_appearances
        self._unconfirmed_balance = unconfirmed_balance
        self._unconfirmed_balance_sat = unconfirmed_balance_sat
        self._unconfirmed_tx_appearances = unconfirmed_tx_appearances

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetAddressResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getAddressResponse of this GetAddressResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def addr_str(self):
        """Gets the addr_str of this GetAddressResponse.

        Address in string form

        :return: The addr_str of this GetAddressResponse.
        :rtype: str
        """
        return self._addr_str

    @addr_str.setter
    def addr_str(self, addr_str):
        """Sets the addr_str of this GetAddressResponse.

        Address in string form

        :param addr_str: The addr_str of this GetAddressResponse.
        :type addr_str: str
        """

        self._addr_str = addr_str

    @property
    def balance(self):
        """Gets the balance of this GetAddressResponse.

        NEBL balance

        :return: The balance of this GetAddressResponse.
        :rtype: float
        """
        return self._balance

    @balance.setter
    def balance(self, balance):
        """Sets the balance of this GetAddressResponse.

        NEBL balance

        :param balance: The balance of this GetAddressResponse.
        :type balance: float
        """

        self._balance = balance

    @property
    def balance_sat(self):
        """Gets the balance_sat of this GetAddressResponse.

        NEBL balance in satoshis

        :return: The balance_sat of this GetAddressResponse.
        :rtype: float
        """
        return self._balance_sat

    @balance_sat.setter
    def balance_sat(self, balance_sat):
        """Sets the balance_sat of this GetAddressResponse.

        NEBL balance in satoshis

        :param balance_sat: The balance_sat of this GetAddressResponse.
        :type balance_sat: float
        """

        self._balance_sat = balance_sat

    @property
    def total_received(self):
        """Gets the total_received of this GetAddressResponse.

        Total NEBL received

        :return: The total_received of this GetAddressResponse.
        :rtype: float
        """
        return self._total_received

    @total_received.setter
    def total_received(self, total_received):
        """Sets the total_received of this GetAddressResponse.

        Total NEBL received

        :param total_received: The total_received of this GetAddressResponse.
        :type total_received: float
        """

        self._total_received = total_received

    @property
    def total_received_sat(self):
        """Gets the total_received_sat of this GetAddressResponse.

        Total NEBL received in satoshis

        :return: The total_received_sat of this GetAddressResponse.
        :rtype: float
        """
        return self._total_received_sat

    @total_received_sat.setter
    def total_received_sat(self, total_received_sat):
        """Sets the total_received_sat of this GetAddressResponse.

        Total NEBL received in satoshis

        :param total_received_sat: The total_received_sat of this GetAddressResponse.
        :type total_received_sat: float
        """

        self._total_received_sat = total_received_sat

    @property
    def total_sent(self):
        """Gets the total_sent of this GetAddressResponse.

        Total NEBL sent

        :return: The total_sent of this GetAddressResponse.
        :rtype: float
        """
        return self._total_sent

    @total_sent.setter
    def total_sent(self, total_sent):
        """Sets the total_sent of this GetAddressResponse.

        Total NEBL sent

        :param total_sent: The total_sent of this GetAddressResponse.
        :type total_sent: float
        """

        self._total_sent = total_sent

    @property
    def total_sent_sat(self):
        """Gets the total_sent_sat of this GetAddressResponse.

        Total NEBL sent satoshis

        :return: The total_sent_sat of this GetAddressResponse.
        :rtype: float
        """
        return self._total_sent_sat

    @total_sent_sat.setter
    def total_sent_sat(self, total_sent_sat):
        """Sets the total_sent_sat of this GetAddressResponse.

        Total NEBL sent satoshis

        :param total_sent_sat: The total_sent_sat of this GetAddressResponse.
        :type total_sent_sat: float
        """

        self._total_sent_sat = total_sent_sat

    @property
    def transactions(self):
        """Gets the transactions of this GetAddressResponse.

        Array of transaction ids for this address

        :return: The transactions of this GetAddressResponse.
        :rtype: List[str]
        """
        return self._transactions

    @transactions.setter
    def transactions(self, transactions):
        """Sets the transactions of this GetAddressResponse.

        Array of transaction ids for this address

        :param transactions: The transactions of this GetAddressResponse.
        :type transactions: List[str]
        """

        self._transactions = transactions

    @property
    def tx_appearances(self):
        """Gets the tx_appearances of this GetAddressResponse.

        Number of transactions for this address

        :return: The tx_appearances of this GetAddressResponse.
        :rtype: float
        """
        return self._tx_appearances

    @tx_appearances.setter
    def tx_appearances(self, tx_appearances):
        """Sets the tx_appearances of this GetAddressResponse.

        Number of transactions for this address

        :param tx_appearances: The tx_appearances of this GetAddressResponse.
        :type tx_appearances: float
        """

        self._tx_appearances = tx_appearances

    @property
    def unconfirmed_balance(self):
        """Gets the unconfirmed_balance of this GetAddressResponse.

        Unconfirmed NEBL balance

        :return: The unconfirmed_balance of this GetAddressResponse.
        :rtype: float
        """
        return self._unconfirmed_balance

    @unconfirmed_balance.setter
    def unconfirmed_balance(self, unconfirmed_balance):
        """Sets the unconfirmed_balance of this GetAddressResponse.

        Unconfirmed NEBL balance

        :param unconfirmed_balance: The unconfirmed_balance of this GetAddressResponse.
        :type unconfirmed_balance: float
        """

        self._unconfirmed_balance = unconfirmed_balance

    @property
    def unconfirmed_balance_sat(self):
        """Gets the unconfirmed_balance_sat of this GetAddressResponse.

        Unconfirmed NEBL balance in satoshis

        :return: The unconfirmed_balance_sat of this GetAddressResponse.
        :rtype: float
        """
        return self._unconfirmed_balance_sat

    @unconfirmed_balance_sat.setter
    def unconfirmed_balance_sat(self, unconfirmed_balance_sat):
        """Sets the unconfirmed_balance_sat of this GetAddressResponse.

        Unconfirmed NEBL balance in satoshis

        :param unconfirmed_balance_sat: The unconfirmed_balance_sat of this GetAddressResponse.
        :type unconfirmed_balance_sat: float
        """

        self._unconfirmed_balance_sat = unconfirmed_balance_sat

    @property
    def unconfirmed_tx_appearances(self):
        """Gets the unconfirmed_tx_appearances of this GetAddressResponse.

        Number of unconfirmed transactions for this address

        :return: The unconfirmed_tx_appearances of this GetAddressResponse.
        :rtype: float
        """
        return self._unconfirmed_tx_appearances

    @unconfirmed_tx_appearances.setter
    def unconfirmed_tx_appearances(self, unconfirmed_tx_appearances):
        """Sets the unconfirmed_tx_appearances of this GetAddressResponse.

        Number of unconfirmed transactions for this address

        :param unconfirmed_tx_appearances: The unconfirmed_tx_appearances of this GetAddressResponse.
        :type unconfirmed_tx_appearances: float
        """

        self._unconfirmed_tx_appearances = unconfirmed_tx_appearances
