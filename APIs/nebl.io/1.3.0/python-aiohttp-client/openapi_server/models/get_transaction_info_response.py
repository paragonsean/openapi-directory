# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_transaction_info_response_vin_inner import GetTransactionInfoResponseVinInner
from openapi_server.models.get_transaction_info_response_vout_inner import GetTransactionInfoResponseVoutInner
from openapi_server import util


class GetTransactionInfoResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, blockhash: str=None, blockheight: float=None, blocktime: float=None, confirmations: float=None, fee: float=None, hex: str=None, locktime: float=None, time: float=None, totalsent: float=None, txid: str=None, version: float=None, vin: List[GetTransactionInfoResponseVinInner]=None, vout: List[GetTransactionInfoResponseVoutInner]=None):
        """GetTransactionInfoResponse - a model defined in OpenAPI

        :param blockhash: The blockhash of this GetTransactionInfoResponse.
        :param blockheight: The blockheight of this GetTransactionInfoResponse.
        :param blocktime: The blocktime of this GetTransactionInfoResponse.
        :param confirmations: The confirmations of this GetTransactionInfoResponse.
        :param fee: The fee of this GetTransactionInfoResponse.
        :param hex: The hex of this GetTransactionInfoResponse.
        :param locktime: The locktime of this GetTransactionInfoResponse.
        :param time: The time of this GetTransactionInfoResponse.
        :param totalsent: The totalsent of this GetTransactionInfoResponse.
        :param txid: The txid of this GetTransactionInfoResponse.
        :param version: The version of this GetTransactionInfoResponse.
        :param vin: The vin of this GetTransactionInfoResponse.
        :param vout: The vout of this GetTransactionInfoResponse.
        """
        self.openapi_types = {
            'blockhash': str,
            'blockheight': float,
            'blocktime': float,
            'confirmations': float,
            'fee': float,
            'hex': str,
            'locktime': float,
            'time': float,
            'totalsent': float,
            'txid': str,
            'version': float,
            'vin': List[GetTransactionInfoResponseVinInner],
            'vout': List[GetTransactionInfoResponseVoutInner]
        }

        self.attribute_map = {
            'blockhash': 'blockhash',
            'blockheight': 'blockheight',
            'blocktime': 'blocktime',
            'confirmations': 'confirmations',
            'fee': 'fee',
            'hex': 'hex',
            'locktime': 'locktime',
            'time': 'time',
            'totalsent': 'totalsent',
            'txid': 'txid',
            'version': 'version',
            'vin': 'vin',
            'vout': 'vout'
        }

        self._blockhash = blockhash
        self._blockheight = blockheight
        self._blocktime = blocktime
        self._confirmations = confirmations
        self._fee = fee
        self._hex = hex
        self._locktime = locktime
        self._time = time
        self._totalsent = totalsent
        self._txid = txid
        self._version = version
        self._vin = vin
        self._vout = vout

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetTransactionInfoResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getTransactionInfoResponse of this GetTransactionInfoResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def blockhash(self):
        """Gets the blockhash of this GetTransactionInfoResponse.

        Hash of the block this transaction is in

        :return: The blockhash of this GetTransactionInfoResponse.
        :rtype: str
        """
        return self._blockhash

    @blockhash.setter
    def blockhash(self, blockhash):
        """Sets the blockhash of this GetTransactionInfoResponse.

        Hash of the block this transaction is in

        :param blockhash: The blockhash of this GetTransactionInfoResponse.
        :type blockhash: str
        """

        self._blockhash = blockhash

    @property
    def blockheight(self):
        """Gets the blockheight of this GetTransactionInfoResponse.

        Block height of this transaction

        :return: The blockheight of this GetTransactionInfoResponse.
        :rtype: float
        """
        return self._blockheight

    @blockheight.setter
    def blockheight(self, blockheight):
        """Sets the blockheight of this GetTransactionInfoResponse.

        Block height of this transaction

        :param blockheight: The blockheight of this GetTransactionInfoResponse.
        :type blockheight: float
        """

        self._blockheight = blockheight

    @property
    def blocktime(self):
        """Gets the blocktime of this GetTransactionInfoResponse.

        Block time of this transaction

        :return: The blocktime of this GetTransactionInfoResponse.
        :rtype: float
        """
        return self._blocktime

    @blocktime.setter
    def blocktime(self, blocktime):
        """Sets the blocktime of this GetTransactionInfoResponse.

        Block time of this transaction

        :param blocktime: The blocktime of this GetTransactionInfoResponse.
        :type blocktime: float
        """

        self._blocktime = blocktime

    @property
    def confirmations(self):
        """Gets the confirmations of this GetTransactionInfoResponse.

        Number of transaction confirmations

        :return: The confirmations of this GetTransactionInfoResponse.
        :rtype: float
        """
        return self._confirmations

    @confirmations.setter
    def confirmations(self, confirmations):
        """Sets the confirmations of this GetTransactionInfoResponse.

        Number of transaction confirmations

        :param confirmations: The confirmations of this GetTransactionInfoResponse.
        :type confirmations: float
        """

        self._confirmations = confirmations

    @property
    def fee(self):
        """Gets the fee of this GetTransactionInfoResponse.

        Total NEBL used as fee for this transcation in satoshis

        :return: The fee of this GetTransactionInfoResponse.
        :rtype: float
        """
        return self._fee

    @fee.setter
    def fee(self, fee):
        """Sets the fee of this GetTransactionInfoResponse.

        Total NEBL used as fee for this transcation in satoshis

        :param fee: The fee of this GetTransactionInfoResponse.
        :type fee: float
        """

        self._fee = fee

    @property
    def hex(self):
        """Gets the hex of this GetTransactionInfoResponse.

        Transaction in raw hex

        :return: The hex of this GetTransactionInfoResponse.
        :rtype: str
        """
        return self._hex

    @hex.setter
    def hex(self, hex):
        """Sets the hex of this GetTransactionInfoResponse.

        Transaction in raw hex

        :param hex: The hex of this GetTransactionInfoResponse.
        :type hex: str
        """

        self._hex = hex

    @property
    def locktime(self):
        """Gets the locktime of this GetTransactionInfoResponse.

        Transaction locktime

        :return: The locktime of this GetTransactionInfoResponse.
        :rtype: float
        """
        return self._locktime

    @locktime.setter
    def locktime(self, locktime):
        """Sets the locktime of this GetTransactionInfoResponse.

        Transaction locktime

        :param locktime: The locktime of this GetTransactionInfoResponse.
        :type locktime: float
        """

        self._locktime = locktime

    @property
    def time(self):
        """Gets the time of this GetTransactionInfoResponse.

        Transaction time

        :return: The time of this GetTransactionInfoResponse.
        :rtype: float
        """
        return self._time

    @time.setter
    def time(self, time):
        """Sets the time of this GetTransactionInfoResponse.

        Transaction time

        :param time: The time of this GetTransactionInfoResponse.
        :type time: float
        """

        self._time = time

    @property
    def totalsent(self):
        """Gets the totalsent of this GetTransactionInfoResponse.

        Total NEBL sent in this transaction in satoshis

        :return: The totalsent of this GetTransactionInfoResponse.
        :rtype: float
        """
        return self._totalsent

    @totalsent.setter
    def totalsent(self, totalsent):
        """Sets the totalsent of this GetTransactionInfoResponse.

        Total NEBL sent in this transaction in satoshis

        :param totalsent: The totalsent of this GetTransactionInfoResponse.
        :type totalsent: float
        """

        self._totalsent = totalsent

    @property
    def txid(self):
        """Gets the txid of this GetTransactionInfoResponse.

        TXID of transaction

        :return: The txid of this GetTransactionInfoResponse.
        :rtype: str
        """
        return self._txid

    @txid.setter
    def txid(self, txid):
        """Sets the txid of this GetTransactionInfoResponse.

        TXID of transaction

        :param txid: The txid of this GetTransactionInfoResponse.
        :type txid: str
        """

        self._txid = txid

    @property
    def version(self):
        """Gets the version of this GetTransactionInfoResponse.

        Transaction version

        :return: The version of this GetTransactionInfoResponse.
        :rtype: float
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this GetTransactionInfoResponse.

        Transaction version

        :param version: The version of this GetTransactionInfoResponse.
        :type version: float
        """

        self._version = version

    @property
    def vin(self):
        """Gets the vin of this GetTransactionInfoResponse.

        Array of transaction inputs

        :return: The vin of this GetTransactionInfoResponse.
        :rtype: List[GetTransactionInfoResponseVinInner]
        """
        return self._vin

    @vin.setter
    def vin(self, vin):
        """Sets the vin of this GetTransactionInfoResponse.

        Array of transaction inputs

        :param vin: The vin of this GetTransactionInfoResponse.
        :type vin: List[GetTransactionInfoResponseVinInner]
        """

        self._vin = vin

    @property
    def vout(self):
        """Gets the vout of this GetTransactionInfoResponse.

        Array of transaction outputs

        :return: The vout of this GetTransactionInfoResponse.
        :rtype: List[GetTransactionInfoResponseVoutInner]
        """
        return self._vout

    @vout.setter
    def vout(self, vout):
        """Sets the vout of this GetTransactionInfoResponse.

        Array of transaction outputs

        :param vout: The vout of this GetTransactionInfoResponse.
        :type vout: List[GetTransactionInfoResponseVoutInner]
        """

        self._vout = vout
