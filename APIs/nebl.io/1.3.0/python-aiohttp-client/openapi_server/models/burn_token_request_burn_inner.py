# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BurnTokenRequestBurnInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, amount: float=None, token_id: str=None):
        """BurnTokenRequestBurnInner - a model defined in OpenAPI

        :param amount: The amount of this BurnTokenRequestBurnInner.
        :param token_id: The token_id of this BurnTokenRequestBurnInner.
        """
        self.openapi_types = {
            'amount': float,
            'token_id': str
        }

        self.attribute_map = {
            'amount': 'amount',
            'token_id': 'tokenId'
        }

        self._amount = amount
        self._token_id = token_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BurnTokenRequestBurnInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The burnTokenRequest_burn_inner of this BurnTokenRequestBurnInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def amount(self):
        """Gets the amount of this BurnTokenRequestBurnInner.

        Amount of tokens to burn

        :return: The amount of this BurnTokenRequestBurnInner.
        :rtype: float
        """
        return self._amount

    @amount.setter
    def amount(self, amount):
        """Sets the amount of this BurnTokenRequestBurnInner.

        Amount of tokens to burn

        :param amount: The amount of this BurnTokenRequestBurnInner.
        :type amount: float
        """

        self._amount = amount

    @property
    def token_id(self):
        """Gets the token_id of this BurnTokenRequestBurnInner.

        Unique token id we are burning

        :return: The token_id of this BurnTokenRequestBurnInner.
        :rtype: str
        """
        return self._token_id

    @token_id.setter
    def token_id(self, token_id):
        """Sets the token_id of this BurnTokenRequestBurnInner.

        Unique token id we are burning

        :param token_id: The token_id of this BurnTokenRequestBurnInner.
        :type token_id: str
        """

        self._token_id = token_id
