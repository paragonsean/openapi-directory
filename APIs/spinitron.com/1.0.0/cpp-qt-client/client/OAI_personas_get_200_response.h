/**
 * Spinitron v2 API
 * ## Notes  **Tutorial demo** using this API is at [https://spinitron.com/v2-api-demo/](https://spinitron.com/v2-api-demo/). For web integration using iframes and/or JavaScript instead of an API, see [https://spinitron.github.io/v2-web-integration/](https://spinitron.github.io/v2-web-integration/).  **Your API key** is found in the Spinitron web app. Log in to Spinitron and go to *Automation & API* in the *Admin* menu.  **Authenticate** by presenting your API key using either HTTP Bearer Authorization (preferred)      curl -H 'Authorization: Bearer YOURAPIKEY' 'https://spinitron.com/api/spins'  or in the query parameter `access-token` (less secure owing to webserver log files)      curl 'https://spinitron.com/api/spins?access-token=YOURAPIKEY'  **Limit** per page of results is 20 by default and miximally 200.  **Try it out** below works to generate example cURL requests but not to get responses from Spinitron. We do not accept queries sent from web browsers. Copy-paste the cURL commands and run them from your computer.  **Cache** the data you get from the API if you are using it in web or mobile integration. It's not ok to query the API on *every* page request you serve. The [demo](https://spinitron.com/v2-api-demo/) shows how easy it can be to implement a file cache.  An extension to this API with access to all stations for partner applications is available. Contact us. 
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAI_personas_get_200_response.h
 *
 * 
 */

#ifndef OAI_personas_get_200_response_H
#define OAI_personas_get_200_response_H

#include <QJsonObject>

#include "OAIBaseIndexResponse__links.h"
#include "OAIPagination.h"
#include "OAIPersona.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIBaseIndexResponse__links;
class OAIPagination;
class OAIPersona;

class OAI_personas_get_200_response : public OAIObject {
public:
    OAI_personas_get_200_response();
    OAI_personas_get_200_response(QString json);
    ~OAI_personas_get_200_response() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIBaseIndexResponse__links getLinks() const;
    void setLinks(const OAIBaseIndexResponse__links &_links);
    bool is__links_Set() const;
    bool is__links_Valid() const;

    OAIPagination getMeta() const;
    void setMeta(const OAIPagination &_meta);
    bool is__meta_Set() const;
    bool is__meta_Valid() const;

    QList<OAIPersona> getItems() const;
    void setItems(const QList<OAIPersona> &items);
    bool is_items_Set() const;
    bool is_items_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIBaseIndexResponse__links m__links;
    bool m__links_isSet;
    bool m__links_isValid;

    OAIPagination m__meta;
    bool m__meta_isSet;
    bool m__meta_isValid;

    QList<OAIPersona> m_items;
    bool m_items_isSet;
    bool m_items_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAI_personas_get_200_response)

#endif // OAI_personas_get_200_response_H
