# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.link import Link
from openapi_server import util


class SpinLinks(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, playlist: Link=None, _self: Link=None):
        """SpinLinks - a model defined in OpenAPI

        :param playlist: The playlist of this SpinLinks.
        :param _self: The _self of this SpinLinks.
        """
        self.openapi_types = {
            'playlist': Link,
            '_self': Link
        }

        self.attribute_map = {
            'playlist': 'playlist',
            '_self': 'self'
        }

        self._playlist = playlist
        self.__self = _self

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SpinLinks':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Spin__links of this SpinLinks.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def playlist(self):
        """Gets the playlist of this SpinLinks.


        :return: The playlist of this SpinLinks.
        :rtype: Link
        """
        return self._playlist

    @playlist.setter
    def playlist(self, playlist):
        """Sets the playlist of this SpinLinks.


        :param playlist: The playlist of this SpinLinks.
        :type playlist: Link
        """

        self._playlist = playlist

    @property
    def _self(self):
        """Gets the _self of this SpinLinks.


        :return: The _self of this SpinLinks.
        :rtype: Link
        """
        return self.__self

    @_self.setter
    def _self(self, _self):
        """Sets the _self of this SpinLinks.


        :param _self: The _self of this SpinLinks.
        :type _self: Link
        """

        self.__self = _self
