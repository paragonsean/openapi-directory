# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.link import Link
from openapi_server import util


class PlaylistLinks(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, persona: Link=None, _self: Link=None, show: Link=None, spins: Link=None):
        """PlaylistLinks - a model defined in OpenAPI

        :param persona: The persona of this PlaylistLinks.
        :param _self: The _self of this PlaylistLinks.
        :param show: The show of this PlaylistLinks.
        :param spins: The spins of this PlaylistLinks.
        """
        self.openapi_types = {
            'persona': Link,
            '_self': Link,
            'show': Link,
            'spins': Link
        }

        self.attribute_map = {
            'persona': 'persona',
            '_self': 'self',
            'show': 'show',
            'spins': 'spins'
        }

        self._persona = persona
        self.__self = _self
        self._show = show
        self._spins = spins

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PlaylistLinks':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Playlist__links of this PlaylistLinks.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def persona(self):
        """Gets the persona of this PlaylistLinks.


        :return: The persona of this PlaylistLinks.
        :rtype: Link
        """
        return self._persona

    @persona.setter
    def persona(self, persona):
        """Sets the persona of this PlaylistLinks.


        :param persona: The persona of this PlaylistLinks.
        :type persona: Link
        """

        self._persona = persona

    @property
    def _self(self):
        """Gets the _self of this PlaylistLinks.


        :return: The _self of this PlaylistLinks.
        :rtype: Link
        """
        return self.__self

    @_self.setter
    def _self(self, _self):
        """Sets the _self of this PlaylistLinks.


        :param _self: The _self of this PlaylistLinks.
        :type _self: Link
        """

        self.__self = _self

    @property
    def show(self):
        """Gets the show of this PlaylistLinks.


        :return: The show of this PlaylistLinks.
        :rtype: Link
        """
        return self._show

    @show.setter
    def show(self, show):
        """Sets the show of this PlaylistLinks.


        :param show: The show of this PlaylistLinks.
        :type show: Link
        """

        self._show = show

    @property
    def spins(self):
        """Gets the spins of this PlaylistLinks.


        :return: The spins of this PlaylistLinks.
        :rtype: Link
        """
        return self._spins

    @spins.setter
    def spins(self, spins):
        """Sets the spins of this PlaylistLinks.


        :param spins: The spins of this PlaylistLinks.
        :type spins: Link
        """

        self._spins = spins
