# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.persona_links import PersonaLinks
from openapi_server import util


class Persona(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, links: PersonaLinks=None, bio: str=None, email: str=None, id: int=None, image: str=None, name: str=None, since: int=None, website: str=None):
        """Persona - a model defined in OpenAPI

        :param links: The links of this Persona.
        :param bio: The bio of this Persona.
        :param email: The email of this Persona.
        :param id: The id of this Persona.
        :param image: The image of this Persona.
        :param name: The name of this Persona.
        :param since: The since of this Persona.
        :param website: The website of this Persona.
        """
        self.openapi_types = {
            'links': PersonaLinks,
            'bio': str,
            'email': str,
            'id': int,
            'image': str,
            'name': str,
            'since': int,
            'website': str
        }

        self.attribute_map = {
            'links': '_links',
            'bio': 'bio',
            'email': 'email',
            'id': 'id',
            'image': 'image',
            'name': 'name',
            'since': 'since',
            'website': 'website'
        }

        self._links = links
        self._bio = bio
        self._email = email
        self._id = id
        self._image = image
        self._name = name
        self._since = since
        self._website = website

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Persona':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Persona of this Persona.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def links(self):
        """Gets the links of this Persona.


        :return: The links of this Persona.
        :rtype: PersonaLinks
        """
        return self._links

    @links.setter
    def links(self, links):
        """Sets the links of this Persona.


        :param links: The links of this Persona.
        :type links: PersonaLinks
        """

        self._links = links

    @property
    def bio(self):
        """Gets the bio of this Persona.

        HTML-formatted biography

        :return: The bio of this Persona.
        :rtype: str
        """
        return self._bio

    @bio.setter
    def bio(self, bio):
        """Sets the bio of this Persona.

        HTML-formatted biography

        :param bio: The bio of this Persona.
        :type bio: str
        """

        self._bio = bio

    @property
    def email(self):
        """Gets the email of this Persona.

        DJ/host's email address

        :return: The email of this Persona.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this Persona.

        DJ/host's email address

        :param email: The email of this Persona.
        :type email: str
        """

        self._email = email

    @property
    def id(self):
        """Gets the id of this Persona.


        :return: The id of this Persona.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Persona.


        :param id: The id of this Persona.
        :type id: int
        """

        self._id = id

    @property
    def image(self):
        """Gets the image of this Persona.


        :return: The image of this Persona.
        :rtype: str
        """
        return self._image

    @image.setter
    def image(self, image):
        """Sets the image of this Persona.


        :param image: The image of this Persona.
        :type image: str
        """

        self._image = image

    @property
    def name(self):
        """Gets the name of this Persona.

        On-air DJ/host name

        :return: The name of this Persona.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Persona.

        On-air DJ/host name

        :param name: The name of this Persona.
        :type name: str
        """

        self._name = name

    @property
    def since(self):
        """Gets the since of this Persona.

        Since what year has the DJ/host been at the station?

        :return: The since of this Persona.
        :rtype: int
        """
        return self._since

    @since.setter
    def since(self, since):
        """Sets the since of this Persona.

        Since what year has the DJ/host been at the station?

        :param since: The since of this Persona.
        :type since: int
        """

        self._since = since

    @property
    def website(self):
        """Gets the website of this Persona.

        URL to web site for the DJ/host

        :return: The website of this Persona.
        :rtype: str
        """
        return self._website

    @website.setter
    def website(self, website):
        """Sets the website of this Persona.

        URL to web site for the DJ/host

        :param website: The website of this Persona.
        :type website: str
        """

        self._website = website
