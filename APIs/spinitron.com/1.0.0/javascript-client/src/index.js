/**
 * Spinitron v2 API
 * ## Notes  **Tutorial demo** using this API is at [https://spinitron.com/v2-api-demo/](https://spinitron.com/v2-api-demo/). For web integration using iframes and/or JavaScript instead of an API, see [https://spinitron.github.io/v2-web-integration/](https://spinitron.github.io/v2-web-integration/).  **Your API key** is found in the Spinitron web app. Log in to Spinitron and go to *Automation & API* in the *Admin* menu.  **Authenticate** by presenting your API key using either HTTP Bearer Authorization (preferred)      curl -H 'Authorization: Bearer YOURAPIKEY' 'https://spinitron.com/api/spins'  or in the query parameter `access-token` (less secure owing to webserver log files)      curl 'https://spinitron.com/api/spins?access-token=YOURAPIKEY'  **Limit** per page of results is 20 by default and miximally 200.  **Try it out** below works to generate example cURL requests but not to get responses from Spinitron. We do not accept queries sent from web browsers. Copy-paste the cURL commands and run them from your computer.  **Cache** the data you get from the API if you are using it in web or mobile integration. It's not ok to query the API on *every* page request you serve. The [demo](https://spinitron.com/v2-api-demo/) shows how easy it can be to implement a file cache.  An extension to this API with access to all stations for partner applications is available. Contact us. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import BaseIndexResponse from './model/BaseIndexResponse';
import BaseIndexResponseLinks from './model/BaseIndexResponseLinks';
import Error from './model/Error';
import Link from './model/Link';
import Pagination from './model/Pagination';
import Persona from './model/Persona';
import PersonaLinks from './model/PersonaLinks';
import PersonasGet200Response from './model/PersonasGet200Response';
import Playlist from './model/Playlist';
import PlaylistLinks from './model/PlaylistLinks';
import PlaylistsGet200Response from './model/PlaylistsGet200Response';
import Show from './model/Show';
import ShowLinks from './model/ShowLinks';
import ShowsGet200Response from './model/ShowsGet200Response';
import Spin from './model/Spin';
import SpinLinks from './model/SpinLinks';
import SpinsGet200Response from './model/SpinsGet200Response';
import ValidationError from './model/ValidationError';
import PersonaApi from './api/PersonaApi';
import PlaylistApi from './api/PlaylistApi';
import ShowApi from './api/ShowApi';
import SpinApi from './api/SpinApi';


/**
* ## Notes  **Tutorial demo** using this API is at [https://spinitron.com/v2-api-demo/](https://spinitron.com/v2-api-demo/). For web integration using iframes and/or JavaScript instead of an API, see [https://spinitron.github.io/v2-web-integration/](https://spinitron.github.io/v2-web-integration/).  **Your API key** is found in the Spinitron web app. Log in to Spinitron and go to *Automation &amp; API* in the *Admin* menu.  **Authenticate** by presenting your API key using either HTTP Bearer Authorization (preferred)      curl -H &#39;Authorization: Bearer YOURAPIKEY&#39; &#39;https://spinitron.com/api/spins&#39;  or in the query parameter &#x60;access-token&#x60; (less secure owing to webserver log files)      curl &#39;https://spinitron.com/api/spins?access-token&#x3D;YOURAPIKEY&#39;  **Limit** per page of results is 20 by default and miximally 200.  **Try it out** below works to generate example cURL requests but not to get responses from Spinitron. We do not accept queries sent from web browsers. Copy-paste the cURL commands and run them from your computer.  **Cache** the data you get from the API if you are using it in web or mobile integration. It&#39;s not ok to query the API on *every* page request you serve. The [demo](https://spinitron.com/v2-api-demo/) shows how easy it can be to implement a file cache.  An extension to this API with access to all stations for partner applications is available. Contact us. .<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var SpinitronV2Api = require('index'); // See note below*.
* var xxxSvc = new SpinitronV2Api.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new SpinitronV2Api.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new SpinitronV2Api.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new SpinitronV2Api.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.0.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The BaseIndexResponse model constructor.
     * @property {module:model/BaseIndexResponse}
     */
    BaseIndexResponse,

    /**
     * The BaseIndexResponseLinks model constructor.
     * @property {module:model/BaseIndexResponseLinks}
     */
    BaseIndexResponseLinks,

    /**
     * The Error model constructor.
     * @property {module:model/Error}
     */
    Error,

    /**
     * The Link model constructor.
     * @property {module:model/Link}
     */
    Link,

    /**
     * The Pagination model constructor.
     * @property {module:model/Pagination}
     */
    Pagination,

    /**
     * The Persona model constructor.
     * @property {module:model/Persona}
     */
    Persona,

    /**
     * The PersonaLinks model constructor.
     * @property {module:model/PersonaLinks}
     */
    PersonaLinks,

    /**
     * The PersonasGet200Response model constructor.
     * @property {module:model/PersonasGet200Response}
     */
    PersonasGet200Response,

    /**
     * The Playlist model constructor.
     * @property {module:model/Playlist}
     */
    Playlist,

    /**
     * The PlaylistLinks model constructor.
     * @property {module:model/PlaylistLinks}
     */
    PlaylistLinks,

    /**
     * The PlaylistsGet200Response model constructor.
     * @property {module:model/PlaylistsGet200Response}
     */
    PlaylistsGet200Response,

    /**
     * The Show model constructor.
     * @property {module:model/Show}
     */
    Show,

    /**
     * The ShowLinks model constructor.
     * @property {module:model/ShowLinks}
     */
    ShowLinks,

    /**
     * The ShowsGet200Response model constructor.
     * @property {module:model/ShowsGet200Response}
     */
    ShowsGet200Response,

    /**
     * The Spin model constructor.
     * @property {module:model/Spin}
     */
    Spin,

    /**
     * The SpinLinks model constructor.
     * @property {module:model/SpinLinks}
     */
    SpinLinks,

    /**
     * The SpinsGet200Response model constructor.
     * @property {module:model/SpinsGet200Response}
     */
    SpinsGet200Response,

    /**
     * The ValidationError model constructor.
     * @property {module:model/ValidationError}
     */
    ValidationError,

    /**
    * The PersonaApi service constructor.
    * @property {module:api/PersonaApi}
    */
    PersonaApi,

    /**
    * The PlaylistApi service constructor.
    * @property {module:api/PlaylistApi}
    */
    PlaylistApi,

    /**
    * The ShowApi service constructor.
    * @property {module:api/ShowApi}
    */
    ShowApi,

    /**
    * The SpinApi service constructor.
    * @property {module:api/SpinApi}
    */
    SpinApi
};
