/*
 * Spinitron v2 API
 * ## Notes  **Tutorial demo** using this API is at [https://spinitron.com/v2-api-demo/](https://spinitron.com/v2-api-demo/). For web integration using iframes and/or JavaScript instead of an API, see [https://spinitron.github.io/v2-web-integration/](https://spinitron.github.io/v2-web-integration/).  **Your API key** is found in the Spinitron web app. Log in to Spinitron and go to *Automation & API* in the *Admin* menu.  **Authenticate** by presenting your API key using either HTTP Bearer Authorization (preferred)      curl -H 'Authorization: Bearer YOURAPIKEY' 'https://spinitron.com/api/spins'  or in the query parameter `access-token` (less secure owing to webserver log files)      curl 'https://spinitron.com/api/spins?access-token=YOURAPIKEY'  **Limit** per page of results is 20 by default and miximally 200.  **Try it out** below works to generate example cURL requests but not to get responses from Spinitron. We do not accept queries sent from web browsers. Copy-paste the cURL commands and run them from your computer.  **Cache** the data you get from the API if you are using it in web or mobile integration. It's not ok to query the API on *every* page request you serve. The [demo](https://spinitron.com/v2-api-demo/) shows how easy it can be to implement a file cache.  An extension to this API with access to all stations for partner applications is available. Contact us. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Error;
import java.time.OffsetDateTime;
import org.openapitools.client.model.Playlist;
import org.openapitools.client.model.PlaylistsGet200Response;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PlaylistApi
 */
@Disabled
public class PlaylistApiTest {

    private final PlaylistApi api = new PlaylistApi();

    /**
     * Returns playlists optionally filtered by {start} and/or {end} datetimes
     *
     * Get Playlists optionally filtered by a datetime range. Only past Playlists will be returned (with allowed tolerance equals 1 hour in future).  Ordered chronologically from newest to oldest. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void playlistsGetTest() throws ApiException {
        OffsetDateTime start = null;
        OffsetDateTime end = null;
        Integer showId = null;
        Integer personaId = null;
        Integer count = null;
        Integer page = null;
        List<String> fields = null;
        List<String> expand = null;
        PlaylistsGet200Response response = api.playlistsGet(start, end, showId, personaId, count, page, fields, expand);
        // TODO: test validations
    }

    /**
     * Get a Playlist by id
     *
     * The response object represents the playlist specified by {id}.  Status 404 is returned if a playlist with {id} does not exist or if it does but starts in the future (with allowed tolerance equals 1 hour in future). 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void playlistsIdGetTest() throws ApiException {
        Integer id = null;
        List<String> fields = null;
        List<String> expand = null;
        Playlist response = api.playlistsIdGet(id, fields, expand);
        // TODO: test validations
    }

}
