/*
 * Spinitron v2 API
 * ## Notes  **Tutorial demo** using this API is at [https://spinitron.com/v2-api-demo/](https://spinitron.com/v2-api-demo/). For web integration using iframes and/or JavaScript instead of an API, see [https://spinitron.github.io/v2-web-integration/](https://spinitron.github.io/v2-web-integration/).  **Your API key** is found in the Spinitron web app. Log in to Spinitron and go to *Automation & API* in the *Admin* menu.  **Authenticate** by presenting your API key using either HTTP Bearer Authorization (preferred)      curl -H 'Authorization: Bearer YOURAPIKEY' 'https://spinitron.com/api/spins'  or in the query parameter `access-token` (less secure owing to webserver log files)      curl 'https://spinitron.com/api/spins?access-token=YOURAPIKEY'  **Limit** per page of results is 20 by default and miximally 200.  **Try it out** below works to generate example cURL requests but not to get responses from Spinitron. We do not accept queries sent from web browsers. Copy-paste the cURL commands and run them from your computer.  **Cache** the data you get from the API if you are using it in web or mobile integration. It's not ok to query the API on *every* page request you serve. The [demo](https://spinitron.com/v2-api-demo/) shows how easy it can be to implement a file cache.  An extension to this API with access to all stations for partner applications is available. Contact us. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.SpinLinks;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Spin
 */
public class SpinTest {
    private final Spin model = new Spin();

    /**
     * Model tests for Spin
     */
    @Test
    public void testSpin() {
        // TODO: test Spin
    }

    /**
     * Test the property 'links'
     */
    @Test
    public void linksTest() {
        // TODO: test links
    }

    /**
     * Test the property 'artist'
     */
    @Test
    public void artistTest() {
        // TODO: test artist
    }

    /**
     * Test the property 'artistCustom'
     */
    @Test
    public void artistCustomTest() {
        // TODO: test artistCustom
    }

    /**
     * Test the property 'catalogNumber'
     */
    @Test
    public void catalogNumberTest() {
        // TODO: test catalogNumber
    }

    /**
     * Test the property 'classical'
     */
    @Test
    public void classicalTest() {
        // TODO: test classical
    }

    /**
     * Test the property 'composer'
     */
    @Test
    public void composerTest() {
        // TODO: test composer
    }

    /**
     * Test the property 'conductor'
     */
    @Test
    public void conductorTest() {
        // TODO: test conductor
    }

    /**
     * Test the property 'duration'
     */
    @Test
    public void durationTest() {
        // TODO: test duration
    }

    /**
     * Test the property 'end'
     */
    @Test
    public void endTest() {
        // TODO: test end
    }

    /**
     * Test the property 'ensemble'
     */
    @Test
    public void ensembleTest() {
        // TODO: test ensemble
    }

    /**
     * Test the property 'genre'
     */
    @Test
    public void genreTest() {
        // TODO: test genre
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'image'
     */
    @Test
    public void imageTest() {
        // TODO: test image
    }

    /**
     * Test the property 'isrc'
     */
    @Test
    public void isrcTest() {
        // TODO: test isrc
    }

    /**
     * Test the property 'iswc'
     */
    @Test
    public void iswcTest() {
        // TODO: test iswc
    }

    /**
     * Test the property 'label'
     */
    @Test
    public void labelTest() {
        // TODO: test label
    }

    /**
     * Test the property 'labelCustom'
     */
    @Test
    public void labelCustomTest() {
        // TODO: test labelCustom
    }

    /**
     * Test the property 'local'
     */
    @Test
    public void localTest() {
        // TODO: test local
    }

    /**
     * Test the property 'medium'
     */
    @Test
    public void mediumTest() {
        // TODO: test medium
    }

    /**
     * Test the property '_new'
     */
    @Test
    public void _newTest() {
        // TODO: test _new
    }

    /**
     * Test the property 'note'
     */
    @Test
    public void noteTest() {
        // TODO: test note
    }

    /**
     * Test the property 'performers'
     */
    @Test
    public void performersTest() {
        // TODO: test performers
    }

    /**
     * Test the property 'playlistId'
     */
    @Test
    public void playlistIdTest() {
        // TODO: test playlistId
    }

    /**
     * Test the property 'release'
     */
    @Test
    public void releaseTest() {
        // TODO: test release
    }

    /**
     * Test the property 'releaseCustom'
     */
    @Test
    public void releaseCustomTest() {
        // TODO: test releaseCustom
    }

    /**
     * Test the property 'released'
     */
    @Test
    public void releasedTest() {
        // TODO: test released
    }

    /**
     * Test the property 'request'
     */
    @Test
    public void requestTest() {
        // TODO: test request
    }

    /**
     * Test the property 'song'
     */
    @Test
    public void songTest() {
        // TODO: test song
    }

    /**
     * Test the property 'start'
     */
    @Test
    public void startTest() {
        // TODO: test start
    }

    /**
     * Test the property 'timezone'
     */
    @Test
    public void timezoneTest() {
        // TODO: test timezone
    }

    /**
     * Test the property 'upc'
     */
    @Test
    public void upcTest() {
        // TODO: test upc
    }

    /**
     * Test the property 'va'
     */
    @Test
    public void vaTest() {
        // TODO: test va
    }

    /**
     * Test the property 'work'
     */
    @Test
    public void workTest() {
        // TODO: test work
    }

}
