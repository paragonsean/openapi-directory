# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.event_mapping_view import EventMappingView
from openapi_server import util


class OfferingResponseMetadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, accessible_seating_enabled: bool=False, event_mapping: EventMappingView=None):
        """OfferingResponseMetadata - a model defined in OpenAPI

        :param accessible_seating_enabled: The accessible_seating_enabled of this OfferingResponseMetadata.
        :param event_mapping: The event_mapping of this OfferingResponseMetadata.
        """
        self.openapi_types = {
            'accessible_seating_enabled': bool,
            'event_mapping': EventMappingView
        }

        self.attribute_map = {
            'accessible_seating_enabled': 'accessibleSeatingEnabled',
            'event_mapping': 'eventMapping'
        }

        self._accessible_seating_enabled = accessible_seating_enabled
        self._event_mapping = event_mapping

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OfferingResponseMetadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OfferingResponseMetadata of this OfferingResponseMetadata.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def accessible_seating_enabled(self):
        """Gets the accessible_seating_enabled of this OfferingResponseMetadata.


        :return: The accessible_seating_enabled of this OfferingResponseMetadata.
        :rtype: bool
        """
        return self._accessible_seating_enabled

    @accessible_seating_enabled.setter
    def accessible_seating_enabled(self, accessible_seating_enabled):
        """Sets the accessible_seating_enabled of this OfferingResponseMetadata.


        :param accessible_seating_enabled: The accessible_seating_enabled of this OfferingResponseMetadata.
        :type accessible_seating_enabled: bool
        """

        self._accessible_seating_enabled = accessible_seating_enabled

    @property
    def event_mapping(self):
        """Gets the event_mapping of this OfferingResponseMetadata.


        :return: The event_mapping of this OfferingResponseMetadata.
        :rtype: EventMappingView
        """
        return self._event_mapping

    @event_mapping.setter
    def event_mapping(self, event_mapping):
        """Sets the event_mapping of this OfferingResponseMetadata.


        :param event_mapping: The event_mapping of this OfferingResponseMetadata.
        :type event_mapping: EventMappingView
        """

        self._event_mapping = event_mapping
