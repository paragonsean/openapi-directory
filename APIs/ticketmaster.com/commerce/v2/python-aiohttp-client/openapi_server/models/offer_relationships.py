# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.response_object_ref_list import ResponseObjectRefList
from openapi_server import util


class OfferRelationships(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, areas: ResponseObjectRefList=None, offer_sets: ResponseObjectRefList=None, passwords: ResponseObjectRefList=None, price_zones: ResponseObjectRefList=None, products: ResponseObjectRefList=None):
        """OfferRelationships - a model defined in OpenAPI

        :param areas: The areas of this OfferRelationships.
        :param offer_sets: The offer_sets of this OfferRelationships.
        :param passwords: The passwords of this OfferRelationships.
        :param price_zones: The price_zones of this OfferRelationships.
        :param products: The products of this OfferRelationships.
        """
        self.openapi_types = {
            'areas': ResponseObjectRefList,
            'offer_sets': ResponseObjectRefList,
            'passwords': ResponseObjectRefList,
            'price_zones': ResponseObjectRefList,
            'products': ResponseObjectRefList
        }

        self.attribute_map = {
            'areas': 'areas',
            'offer_sets': 'offerSets',
            'passwords': 'passwords',
            'price_zones': 'priceZones',
            'products': 'products'
        }

        self._areas = areas
        self._offer_sets = offer_sets
        self._passwords = passwords
        self._price_zones = price_zones
        self._products = products

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OfferRelationships':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OfferRelationships of this OfferRelationships.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def areas(self):
        """Gets the areas of this OfferRelationships.


        :return: The areas of this OfferRelationships.
        :rtype: ResponseObjectRefList
        """
        return self._areas

    @areas.setter
    def areas(self, areas):
        """Sets the areas of this OfferRelationships.


        :param areas: The areas of this OfferRelationships.
        :type areas: ResponseObjectRefList
        """

        self._areas = areas

    @property
    def offer_sets(self):
        """Gets the offer_sets of this OfferRelationships.


        :return: The offer_sets of this OfferRelationships.
        :rtype: ResponseObjectRefList
        """
        return self._offer_sets

    @offer_sets.setter
    def offer_sets(self, offer_sets):
        """Sets the offer_sets of this OfferRelationships.


        :param offer_sets: The offer_sets of this OfferRelationships.
        :type offer_sets: ResponseObjectRefList
        """

        self._offer_sets = offer_sets

    @property
    def passwords(self):
        """Gets the passwords of this OfferRelationships.


        :return: The passwords of this OfferRelationships.
        :rtype: ResponseObjectRefList
        """
        return self._passwords

    @passwords.setter
    def passwords(self, passwords):
        """Sets the passwords of this OfferRelationships.


        :param passwords: The passwords of this OfferRelationships.
        :type passwords: ResponseObjectRefList
        """

        self._passwords = passwords

    @property
    def price_zones(self):
        """Gets the price_zones of this OfferRelationships.


        :return: The price_zones of this OfferRelationships.
        :rtype: ResponseObjectRefList
        """
        return self._price_zones

    @price_zones.setter
    def price_zones(self, price_zones):
        """Sets the price_zones of this OfferRelationships.


        :param price_zones: The price_zones of this OfferRelationships.
        :type price_zones: ResponseObjectRefList
        """

        self._price_zones = price_zones

    @property
    def products(self):
        """Gets the products of this OfferRelationships.


        :return: The products of this OfferRelationships.
        :rtype: ResponseObjectRefList
        """
        return self._products

    @products.setter
    def products(self, products):
        """Sets the products of this OfferRelationships.


        :param products: The products of this OfferRelationships.
        :type products: ResponseObjectRefList
        """

        self._products = products
