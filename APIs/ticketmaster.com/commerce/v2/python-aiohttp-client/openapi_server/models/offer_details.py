# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class OfferDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, link: str=None, link_text: str=None, text: str=None):
        """OfferDetails - a model defined in OpenAPI

        :param link: The link of this OfferDetails.
        :param link_text: The link_text of this OfferDetails.
        :param text: The text of this OfferDetails.
        """
        self.openapi_types = {
            'link': str,
            'link_text': str,
            'text': str
        }

        self.attribute_map = {
            'link': 'link',
            'link_text': 'linkText',
            'text': 'text'
        }

        self._link = link
        self._link_text = link_text
        self._text = text

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OfferDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OfferDetails of this OfferDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def link(self):
        """Gets the link of this OfferDetails.


        :return: The link of this OfferDetails.
        :rtype: str
        """
        return self._link

    @link.setter
    def link(self, link):
        """Sets the link of this OfferDetails.


        :param link: The link of this OfferDetails.
        :type link: str
        """

        self._link = link

    @property
    def link_text(self):
        """Gets the link_text of this OfferDetails.


        :return: The link_text of this OfferDetails.
        :rtype: str
        """
        return self._link_text

    @link_text.setter
    def link_text(self, link_text):
        """Sets the link_text of this OfferDetails.


        :param link_text: The link_text of this OfferDetails.
        :type link_text: str
        """

        self._link_text = link_text

    @property
    def text(self):
        """Gets the text of this OfferDetails.


        :return: The text of this OfferDetails.
        :rtype: str
        """
        return self._text

    @text.setter
    def text(self, text):
        """Sets the text of this OfferDetails.


        :param text: The text of this OfferDetails.
        :type text: str
        """

        self._text = text
