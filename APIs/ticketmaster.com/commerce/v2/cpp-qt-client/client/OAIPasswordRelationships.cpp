/**
 * Commerce API
 * Use the Ticketmaster Commerce API to look up available offers and products on various Ticketmaster platforms for North America markets. For formal partnerships and relationships, selected offers and products can be carted and transacted on through the cart, delivery, payment and purchase APIs â€“ These APIs require approved access from Ticketmaster.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPasswordRelationships.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPasswordRelationships::OAIPasswordRelationships(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPasswordRelationships::OAIPasswordRelationships() {
    this->initializeModel();
}

OAIPasswordRelationships::~OAIPasswordRelationships() {}

void OAIPasswordRelationships::initializeModel() {

    m_offers_isSet = false;
    m_offers_isValid = false;
}

void OAIPasswordRelationships::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPasswordRelationships::fromJsonObject(QJsonObject json) {

    m_offers_isValid = ::OpenAPI::fromJsonValue(m_offers, json[QString("offers")]);
    m_offers_isSet = !json[QString("offers")].isNull() && m_offers_isValid;
}

QString OAIPasswordRelationships::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPasswordRelationships::asJsonObject() const {
    QJsonObject obj;
    if (m_offers.isSet()) {
        obj.insert(QString("offers"), ::OpenAPI::toJsonValue(m_offers));
    }
    return obj;
}

OAIResponseObjectRefListSimpleLinks OAIPasswordRelationships::getOffers() const {
    return m_offers;
}
void OAIPasswordRelationships::setOffers(const OAIResponseObjectRefListSimpleLinks &offers) {
    m_offers = offers;
    m_offers_isSet = true;
}

bool OAIPasswordRelationships::is_offers_Set() const{
    return m_offers_isSet;
}

bool OAIPasswordRelationships::is_offers_Valid() const{
    return m_offers_isValid;
}

bool OAIPasswordRelationships::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_offers.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPasswordRelationships::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
