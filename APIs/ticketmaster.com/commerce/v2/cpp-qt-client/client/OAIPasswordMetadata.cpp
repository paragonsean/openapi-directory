/**
 * Commerce API
 * Use the Ticketmaster Commerce API to look up available offers and products on various Ticketmaster platforms for North America markets. For formal partnerships and relationships, selected offers and products can be carted and transacted on through the cart, delivery, payment and purchase APIs â€“ These APIs require approved access from Ticketmaster.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPasswordMetadata.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPasswordMetadata::OAIPasswordMetadata(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPasswordMetadata::OAIPasswordMetadata() {
    this->initializeModel();
}

OAIPasswordMetadata::~OAIPasswordMetadata() {}

void OAIPasswordMetadata::initializeModel() {

    m_offer_ids_isSet = false;
    m_offer_ids_isValid = false;
}

void OAIPasswordMetadata::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPasswordMetadata::fromJsonObject(QJsonObject json) {

    m_offer_ids_isValid = ::OpenAPI::fromJsonValue(m_offer_ids, json[QString("offerIds")]);
    m_offer_ids_isSet = !json[QString("offerIds")].isNull() && m_offer_ids_isValid;
}

QString OAIPasswordMetadata::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPasswordMetadata::asJsonObject() const {
    QJsonObject obj;
    if (m_offer_ids.size() > 0) {
        obj.insert(QString("offerIds"), ::OpenAPI::toJsonValue(m_offer_ids));
    }
    return obj;
}

QList<QString> OAIPasswordMetadata::getOfferIds() const {
    return m_offer_ids;
}
void OAIPasswordMetadata::setOfferIds(const QList<QString> &offer_ids) {
    m_offer_ids = offer_ids;
    m_offer_ids_isSet = true;
}

bool OAIPasswordMetadata::is_offer_ids_Set() const{
    return m_offer_ids_isSet;
}

bool OAIPasswordMetadata::is_offer_ids_Valid() const{
    return m_offer_ids_isValid;
}

bool OAIPasswordMetadata::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_offer_ids.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPasswordMetadata::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
