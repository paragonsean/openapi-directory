/**
 * Commerce API
 * Use the Ticketmaster Commerce API to look up available offers and products on various Ticketmaster platforms for North America markets. For formal partnerships and relationships, selected offers and products can be carted and transacted on through the cart, delivery, payment and purchase APIs â€“ These APIs require approved access from Ticketmaster.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOfferingResponseEmbeddedData.h
 *
 * 
 */

#ifndef OAIOfferingResponseEmbeddedData_H
#define OAIOfferingResponseEmbeddedData_H

#include <QJsonObject>

#include "OAIResponseObjectListAreaSimpleLinks.h"
#include "OAIResponseObjectListAttributeRefSimpleLinks.h"
#include "OAIResponseObjectListHoldRefSimpleLinks.h"
#include "OAIResponseObjectListPasswordSimpleLinks.h"
#include "OAIResponseObjectListPriceZoneSimpleLinks.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIResponseObjectListAreaSimpleLinks;
class OAIResponseObjectListAttributeRefSimpleLinks;
class OAIResponseObjectListHoldRefSimpleLinks;
class OAIResponseObjectListPasswordSimpleLinks;
class OAIResponseObjectListPriceZoneSimpleLinks;

class OAIOfferingResponseEmbeddedData : public OAIObject {
public:
    OAIOfferingResponseEmbeddedData();
    OAIOfferingResponseEmbeddedData(QString json);
    ~OAIOfferingResponseEmbeddedData() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIResponseObjectListAreaSimpleLinks getAreas() const;
    void setAreas(const OAIResponseObjectListAreaSimpleLinks &areas);
    bool is_areas_Set() const;
    bool is_areas_Valid() const;

    OAIResponseObjectListAttributeRefSimpleLinks getAttributesRefs() const;
    void setAttributesRefs(const OAIResponseObjectListAttributeRefSimpleLinks &attributes_refs);
    bool is_attributes_refs_Set() const;
    bool is_attributes_refs_Valid() const;

    OAIResponseObjectListHoldRefSimpleLinks getHolds() const;
    void setHolds(const OAIResponseObjectListHoldRefSimpleLinks &holds);
    bool is_holds_Set() const;
    bool is_holds_Valid() const;

    OAIResponseObjectListPasswordSimpleLinks getPasswords() const;
    void setPasswords(const OAIResponseObjectListPasswordSimpleLinks &passwords);
    bool is_passwords_Set() const;
    bool is_passwords_Valid() const;

    OAIResponseObjectListPriceZoneSimpleLinks getPriceZones() const;
    void setPriceZones(const OAIResponseObjectListPriceZoneSimpleLinks &price_zones);
    bool is_price_zones_Set() const;
    bool is_price_zones_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIResponseObjectListAreaSimpleLinks m_areas;
    bool m_areas_isSet;
    bool m_areas_isValid;

    OAIResponseObjectListAttributeRefSimpleLinks m_attributes_refs;
    bool m_attributes_refs_isSet;
    bool m_attributes_refs_isValid;

    OAIResponseObjectListHoldRefSimpleLinks m_holds;
    bool m_holds_isSet;
    bool m_holds_isValid;

    OAIResponseObjectListPasswordSimpleLinks m_passwords;
    bool m_passwords_isSet;
    bool m_passwords_isValid;

    OAIResponseObjectListPriceZoneSimpleLinks m_price_zones;
    bool m_price_zones_isSet;
    bool m_price_zones_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIOfferingResponseEmbeddedData)

#endif // OAIOfferingResponseEmbeddedData_H
