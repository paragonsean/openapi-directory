/**
 * Commerce API
 * Use the Ticketmaster Commerce API to look up available offers and products on various Ticketmaster platforms for North America markets. For formal partnerships and relationships, selected offers and products can be carted and transacted on through the cart, delivery, payment and purchase APIs â€“ These APIs require approved access from Ticketmaster.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOfferingResponseMetadata.h
 *
 * 
 */

#ifndef OAIOfferingResponseMetadata_H
#define OAIOfferingResponseMetadata_H

#include <QJsonObject>

#include "OAIEventMappingView.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIEventMappingView;

class OAIOfferingResponseMetadata : public OAIObject {
public:
    OAIOfferingResponseMetadata();
    OAIOfferingResponseMetadata(QString json);
    ~OAIOfferingResponseMetadata() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAccessibleSeatingEnabled() const;
    void setAccessibleSeatingEnabled(const bool &accessible_seating_enabled);
    bool is_accessible_seating_enabled_Set() const;
    bool is_accessible_seating_enabled_Valid() const;

    OAIEventMappingView getEventMapping() const;
    void setEventMapping(const OAIEventMappingView &event_mapping);
    bool is_event_mapping_Set() const;
    bool is_event_mapping_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_accessible_seating_enabled;
    bool m_accessible_seating_enabled_isSet;
    bool m_accessible_seating_enabled_isValid;

    OAIEventMappingView m_event_mapping;
    bool m_event_mapping_isSet;
    bool m_event_mapping_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIOfferingResponseMetadata)

#endif // OAIOfferingResponseMetadata_H
