/**
 * Commerce API
 * Use the Ticketmaster Commerce API to look up available offers and products on various Ticketmaster platforms for North America markets. For formal partnerships and relationships, selected offers and products can be carted and transacted on through the cart, delivery, payment and purchase APIs â€“ These APIs require approved access from Ticketmaster.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOfferRelationships.h
 *
 * 
 */

#ifndef OAIOfferRelationships_H
#define OAIOfferRelationships_H

#include <QJsonObject>

#include "OAIResponseObjectRefList.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIResponseObjectRefList;

class OAIOfferRelationships : public OAIObject {
public:
    OAIOfferRelationships();
    OAIOfferRelationships(QString json);
    ~OAIOfferRelationships() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIResponseObjectRefList getAreas() const;
    void setAreas(const OAIResponseObjectRefList &areas);
    bool is_areas_Set() const;
    bool is_areas_Valid() const;

    OAIResponseObjectRefList getOfferSets() const;
    void setOfferSets(const OAIResponseObjectRefList &offer_sets);
    bool is_offer_sets_Set() const;
    bool is_offer_sets_Valid() const;

    OAIResponseObjectRefList getPasswords() const;
    void setPasswords(const OAIResponseObjectRefList &passwords);
    bool is_passwords_Set() const;
    bool is_passwords_Valid() const;

    OAIResponseObjectRefList getPriceZones() const;
    void setPriceZones(const OAIResponseObjectRefList &price_zones);
    bool is_price_zones_Set() const;
    bool is_price_zones_Valid() const;

    OAIResponseObjectRefList getProducts() const;
    void setProducts(const OAIResponseObjectRefList &products);
    bool is_products_Set() const;
    bool is_products_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIResponseObjectRefList m_areas;
    bool m_areas_isSet;
    bool m_areas_isValid;

    OAIResponseObjectRefList m_offer_sets;
    bool m_offer_sets_isSet;
    bool m_offer_sets_isValid;

    OAIResponseObjectRefList m_passwords;
    bool m_passwords_isSet;
    bool m_passwords_isValid;

    OAIResponseObjectRefList m_price_zones;
    bool m_price_zones_isSet;
    bool m_price_zones_isValid;

    OAIResponseObjectRefList m_products;
    bool m_products_isSet;
    bool m_products_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIOfferRelationships)

#endif // OAIOfferRelationships_H
