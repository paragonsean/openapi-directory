/**
 * Commerce API
 * Use the Ticketmaster Commerce API to look up available offers and products on various Ticketmaster platforms for North America markets. For formal partnerships and relationships, selected offers and products can be carted and transacted on through the cart, delivery, payment and purchase APIs â€“ These APIs require approved access from Ticketmaster.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIHrefLinkValue.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIHrefLinkValue::OAIHrefLinkValue(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIHrefLinkValue::OAIHrefLinkValue() {
    this->initializeModel();
}

OAIHrefLinkValue::~OAIHrefLinkValue() {}

void OAIHrefLinkValue::initializeModel() {

    m_href_isSet = false;
    m_href_isValid = false;
}

void OAIHrefLinkValue::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIHrefLinkValue::fromJsonObject(QJsonObject json) {

    m_href_isValid = ::OpenAPI::fromJsonValue(m_href, json[QString("href")]);
    m_href_isSet = !json[QString("href")].isNull() && m_href_isValid;
}

QString OAIHrefLinkValue::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIHrefLinkValue::asJsonObject() const {
    QJsonObject obj;
    if (m_href_isSet) {
        obj.insert(QString("href"), ::OpenAPI::toJsonValue(m_href));
    }
    return obj;
}

QString OAIHrefLinkValue::getHref() const {
    return m_href;
}
void OAIHrefLinkValue::setHref(const QString &href) {
    m_href = href;
    m_href_isSet = true;
}

bool OAIHrefLinkValue::is_href_Set() const{
    return m_href_isSet;
}

bool OAIHrefLinkValue::is_href_Valid() const{
    return m_href_isValid;
}

bool OAIHrefLinkValue::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_href_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIHrefLinkValue::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
