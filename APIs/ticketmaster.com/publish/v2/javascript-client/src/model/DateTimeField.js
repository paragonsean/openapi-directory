/**
 * ticketmaster publish api
 * Publish API
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DateTimeFieldType from './DateTimeFieldType';
import DurationField from './DurationField';

/**
 * The DateTimeField model module.
 * @module model/DateTimeField
 * @version v2
 */
class DateTimeField {
    /**
     * Constructs a new <code>DateTimeField</code>.
     * @alias module:model/DateTimeField
     */
    constructor() { 
        
        DateTimeField.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
        obj['lenient'] = false;
        obj['supported'] = false;
    }

    /**
     * Constructs a <code>DateTimeField</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DateTimeField} obj Optional instance to populate.
     * @return {module:model/DateTimeField} The populated <code>DateTimeField</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DateTimeField();

            if (data.hasOwnProperty('durationField')) {
                obj['durationField'] = DurationField.constructFromObject(data['durationField']);
            }
            if (data.hasOwnProperty('leapDurationField')) {
                obj['leapDurationField'] = DurationField.constructFromObject(data['leapDurationField']);
            }
            if (data.hasOwnProperty('lenient')) {
                obj['lenient'] = ApiClient.convertToType(data['lenient'], 'Boolean');
            }
            if (data.hasOwnProperty('maximumValue')) {
                obj['maximumValue'] = ApiClient.convertToType(data['maximumValue'], 'Number');
            }
            if (data.hasOwnProperty('minimumValue')) {
                obj['minimumValue'] = ApiClient.convertToType(data['minimumValue'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('rangeDurationField')) {
                obj['rangeDurationField'] = DurationField.constructFromObject(data['rangeDurationField']);
            }
            if (data.hasOwnProperty('supported')) {
                obj['supported'] = ApiClient.convertToType(data['supported'], 'Boolean');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = DateTimeFieldType.constructFromObject(data['type']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DateTimeField</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DateTimeField</code>.
     */
    static validateJSON(data) {
        // validate the optional field `durationField`
        if (data['durationField']) { // data not null
          DurationField.validateJSON(data['durationField']);
        }
        // validate the optional field `leapDurationField`
        if (data['leapDurationField']) { // data not null
          DurationField.validateJSON(data['leapDurationField']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `rangeDurationField`
        if (data['rangeDurationField']) { // data not null
          DurationField.validateJSON(data['rangeDurationField']);
        }
        // validate the optional field `type`
        if (data['type']) { // data not null
          DateTimeFieldType.validateJSON(data['type']);
        }

        return true;
    }


}



/**
 * @member {module:model/DurationField} durationField
 */
DateTimeField.prototype['durationField'] = undefined;

/**
 * @member {module:model/DurationField} leapDurationField
 */
DateTimeField.prototype['leapDurationField'] = undefined;

/**
 * @member {Boolean} lenient
 * @default false
 */
DateTimeField.prototype['lenient'] = false;

/**
 * @member {Number} maximumValue
 */
DateTimeField.prototype['maximumValue'] = undefined;

/**
 * @member {Number} minimumValue
 */
DateTimeField.prototype['minimumValue'] = undefined;

/**
 * @member {String} name
 */
DateTimeField.prototype['name'] = undefined;

/**
 * @member {module:model/DurationField} rangeDurationField
 */
DateTimeField.prototype['rangeDurationField'] = undefined;

/**
 * @member {Boolean} supported
 * @default false
 */
DateTimeField.prototype['supported'] = false;

/**
 * @member {module:model/DateTimeFieldType} type
 */
DateTimeField.prototype['type'] = undefined;






export default DateTimeField;

