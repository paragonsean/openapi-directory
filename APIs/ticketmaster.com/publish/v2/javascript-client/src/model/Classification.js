/**
 * ticketmaster publish api
 * Publish API
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Level from './Level';
import Segment from './Segment';

/**
 * The Classification model module.
 * @module model/Classification
 * @version v2
 */
class Classification {
    /**
     * Constructs a new <code>Classification</code>.
     * Classification
     * @alias module:model/Classification
     */
    constructor() { 
        
        Classification.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
        obj['primary'] = false;
    }

    /**
     * Constructs a <code>Classification</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Classification} obj Optional instance to populate.
     * @return {module:model/Classification} The populated <code>Classification</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Classification();

            if (data.hasOwnProperty('genre')) {
                obj['genre'] = Level.constructFromObject(data['genre']);
            }
            if (data.hasOwnProperty('primary')) {
                obj['primary'] = ApiClient.convertToType(data['primary'], 'Boolean');
            }
            if (data.hasOwnProperty('segment')) {
                obj['segment'] = Segment.constructFromObject(data['segment']);
            }
            if (data.hasOwnProperty('subGenre')) {
                obj['subGenre'] = Level.constructFromObject(data['subGenre']);
            }
            if (data.hasOwnProperty('subType')) {
                obj['subType'] = Level.constructFromObject(data['subType']);
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = Level.constructFromObject(data['type']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Classification</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Classification</code>.
     */
    static validateJSON(data) {
        // validate the optional field `genre`
        if (data['genre']) { // data not null
          Level.validateJSON(data['genre']);
        }
        // validate the optional field `segment`
        if (data['segment']) { // data not null
          Segment.validateJSON(data['segment']);
        }
        // validate the optional field `subGenre`
        if (data['subGenre']) { // data not null
          Level.validateJSON(data['subGenre']);
        }
        // validate the optional field `subType`
        if (data['subType']) { // data not null
          Level.validateJSON(data['subType']);
        }
        // validate the optional field `type`
        if (data['type']) { // data not null
          Level.validateJSON(data['type']);
        }

        return true;
    }


}



/**
 * @member {module:model/Level} genre
 */
Classification.prototype['genre'] = undefined;

/**
 * @member {Boolean} primary
 * @default false
 */
Classification.prototype['primary'] = false;

/**
 * @member {module:model/Segment} segment
 */
Classification.prototype['segment'] = undefined;

/**
 * @member {module:model/Level} subGenre
 */
Classification.prototype['subGenre'] = undefined;

/**
 * @member {module:model/Level} subType
 */
Classification.prototype['subType'] = undefined;

/**
 * @member {module:model/Level} type
 */
Classification.prototype['type'] = undefined;






export default Classification;

