/**
 * ticketmaster publish api
 * Publish API
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Address model module.
 * @module model/Address
 * @version v2
 */
class Address {
    /**
     * Constructs a new <code>Address</code>.
     * Address
     * @alias module:model/Address
     */
    constructor() { 
        
        Address.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Address</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Address} obj Optional instance to populate.
     * @return {module:model/Address} The populated <code>Address</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Address();

            if (data.hasOwnProperty('line1s')) {
                obj['line1s'] = ApiClient.convertToType(data['line1s'], {'String': 'String'});
            }
            if (data.hasOwnProperty('line2s')) {
                obj['line2s'] = ApiClient.convertToType(data['line2s'], {'String': 'String'});
            }
            if (data.hasOwnProperty('line3s')) {
                obj['line3s'] = ApiClient.convertToType(data['line3s'], {'String': 'String'});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Address</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Address</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * Aaddress first line - multi-lingual fields
 * @member {Object.<String, String>} line1s
 */
Address.prototype['line1s'] = undefined;

/**
 * Address second line - multi-lingual fields
 * @member {Object.<String, String>} line2s
 */
Address.prototype['line2s'] = undefined;

/**
 * Address third line - multi-lingual fields
 * @member {Object.<String, String>} line3s
 */
Address.prototype['line3s'] = undefined;






export default Address;

