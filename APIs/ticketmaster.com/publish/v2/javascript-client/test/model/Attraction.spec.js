/**
 * ticketmaster publish api
 * Publish API
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.TicketmasterPublishApi);
  }
}(this, function(expect, TicketmasterPublishApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new TicketmasterPublishApi.Attraction();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Attraction', function() {
    it('should create an instance of Attraction', function() {
      // uncomment below and update the code to test Attraction
      //var instance = new TicketmasterPublishApi.Attraction();
      //expect(instance).to.be.a(TicketmasterPublishApi.Attraction);
    });

    it('should have the property active (base name: "active")', function() {
      // uncomment below and update the code to test the property active
      //var instance = new TicketmasterPublishApi.Attraction();
      //expect(instance).to.be();
    });

    it('should have the property additionalInfos (base name: "additionalInfos")', function() {
      // uncomment below and update the code to test the property additionalInfos
      //var instance = new TicketmasterPublishApi.Attraction();
      //expect(instance).to.be();
    });

    it('should have the property classifications (base name: "classifications")', function() {
      // uncomment below and update the code to test the property classifications
      //var instance = new TicketmasterPublishApi.Attraction();
      //expect(instance).to.be();
    });

    it('should have the property descriptions (base name: "descriptions")', function() {
      // uncomment below and update the code to test the property descriptions
      //var instance = new TicketmasterPublishApi.Attraction();
      //expect(instance).to.be();
    });

    it('should have the property discoverable (base name: "discoverable")', function() {
      // uncomment below and update the code to test the property discoverable
      //var instance = new TicketmasterPublishApi.Attraction();
      //expect(instance).to.be();
    });

    it('should have the property images (base name: "images")', function() {
      // uncomment below and update the code to test the property images
      //var instance = new TicketmasterPublishApi.Attraction();
      //expect(instance).to.be();
    });

    it('should have the property names (base name: "names")', function() {
      // uncomment below and update the code to test the property names
      //var instance = new TicketmasterPublishApi.Attraction();
      //expect(instance).to.be();
    });

    it('should have the property references (base name: "references")', function() {
      // uncomment below and update the code to test the property references
      //var instance = new TicketmasterPublishApi.Attraction();
      //expect(instance).to.be();
    });

    it('should have the property relationships (base name: "relationships")', function() {
      // uncomment below and update the code to test the property relationships
      //var instance = new TicketmasterPublishApi.Attraction();
      //expect(instance).to.be();
    });

    it('should have the property source (base name: "source")', function() {
      // uncomment below and update the code to test the property source
      //var instance = new TicketmasterPublishApi.Attraction();
      //expect(instance).to.be();
    });

    it('should have the property test (base name: "test")', function() {
      // uncomment below and update the code to test the property test
      //var instance = new TicketmasterPublishApi.Attraction();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "type")', function() {
      // uncomment below and update the code to test the property type
      //var instance = new TicketmasterPublishApi.Attraction();
      //expect(instance).to.be();
    });

    it('should have the property url (base name: "url")', function() {
      // uncomment below and update the code to test the property url
      //var instance = new TicketmasterPublishApi.Attraction();
      //expect(instance).to.be();
    });

    it('should have the property version (base name: "version")', function() {
      // uncomment below and update the code to test the property version
      //var instance = new TicketmasterPublishApi.Attraction();
      //expect(instance).to.be();
    });

  });

}));
