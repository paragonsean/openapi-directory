# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Address(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, line1s: Dict[str, str]=None, line2s: Dict[str, str]=None, line3s: Dict[str, str]=None):
        """Address - a model defined in OpenAPI

        :param line1s: The line1s of this Address.
        :param line2s: The line2s of this Address.
        :param line3s: The line3s of this Address.
        """
        self.openapi_types = {
            'line1s': Dict[str, str],
            'line2s': Dict[str, str],
            'line3s': Dict[str, str]
        }

        self.attribute_map = {
            'line1s': 'line1s',
            'line2s': 'line2s',
            'line3s': 'line3s'
        }

        self._line1s = line1s
        self._line2s = line2s
        self._line3s = line3s

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Address':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Address of this Address.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def line1s(self):
        """Gets the line1s of this Address.

        Aaddress first line - multi-lingual fields

        :return: The line1s of this Address.
        :rtype: Dict[str, str]
        """
        return self._line1s

    @line1s.setter
    def line1s(self, line1s):
        """Sets the line1s of this Address.

        Aaddress first line - multi-lingual fields

        :param line1s: The line1s of this Address.
        :type line1s: Dict[str, str]
        """

        self._line1s = line1s

    @property
    def line2s(self):
        """Gets the line2s of this Address.

        Address second line - multi-lingual fields

        :return: The line2s of this Address.
        :rtype: Dict[str, str]
        """
        return self._line2s

    @line2s.setter
    def line2s(self, line2s):
        """Sets the line2s of this Address.

        Address second line - multi-lingual fields

        :param line2s: The line2s of this Address.
        :type line2s: Dict[str, str]
        """

        self._line2s = line2s

    @property
    def line3s(self):
        """Gets the line3s of this Address.

        Address third line - multi-lingual fields

        :return: The line3s of this Address.
        :rtype: Dict[str, str]
        """
        return self._line3s

    @line3s.setter
    def line3s(self, line3s):
        """Sets the line3s of this Address.

        Address third line - multi-lingual fields

        :param line3s: The line3s of this Address.
        :type line3s: Dict[str, str]
        """

        self._line3s = line3s
