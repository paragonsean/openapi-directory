# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.chronology import Chronology
from openapi_server.models.date_time_field import DateTimeField
from openapi_server.models.date_time_field_type import DateTimeFieldType
from openapi_server import util


class LocalTime(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, chronology: Chronology=None, field_types: List[DateTimeFieldType]=None, fields: List[DateTimeField]=None, hour_of_day: int=None, millis_of_day: int=None, millis_of_second: int=None, minute_of_hour: int=None, second_of_minute: int=None, values: List[int]=None):
        """LocalTime - a model defined in OpenAPI

        :param chronology: The chronology of this LocalTime.
        :param field_types: The field_types of this LocalTime.
        :param fields: The fields of this LocalTime.
        :param hour_of_day: The hour_of_day of this LocalTime.
        :param millis_of_day: The millis_of_day of this LocalTime.
        :param millis_of_second: The millis_of_second of this LocalTime.
        :param minute_of_hour: The minute_of_hour of this LocalTime.
        :param second_of_minute: The second_of_minute of this LocalTime.
        :param values: The values of this LocalTime.
        """
        self.openapi_types = {
            'chronology': Chronology,
            'field_types': List[DateTimeFieldType],
            'fields': List[DateTimeField],
            'hour_of_day': int,
            'millis_of_day': int,
            'millis_of_second': int,
            'minute_of_hour': int,
            'second_of_minute': int,
            'values': List[int]
        }

        self.attribute_map = {
            'chronology': 'chronology',
            'field_types': 'fieldTypes',
            'fields': 'fields',
            'hour_of_day': 'hourOfDay',
            'millis_of_day': 'millisOfDay',
            'millis_of_second': 'millisOfSecond',
            'minute_of_hour': 'minuteOfHour',
            'second_of_minute': 'secondOfMinute',
            'values': 'values'
        }

        self._chronology = chronology
        self._field_types = field_types
        self._fields = fields
        self._hour_of_day = hour_of_day
        self._millis_of_day = millis_of_day
        self._millis_of_second = millis_of_second
        self._minute_of_hour = minute_of_hour
        self._second_of_minute = second_of_minute
        self._values = values

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LocalTime':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LocalTime of this LocalTime.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def chronology(self):
        """Gets the chronology of this LocalTime.


        :return: The chronology of this LocalTime.
        :rtype: Chronology
        """
        return self._chronology

    @chronology.setter
    def chronology(self, chronology):
        """Sets the chronology of this LocalTime.


        :param chronology: The chronology of this LocalTime.
        :type chronology: Chronology
        """

        self._chronology = chronology

    @property
    def field_types(self):
        """Gets the field_types of this LocalTime.


        :return: The field_types of this LocalTime.
        :rtype: List[DateTimeFieldType]
        """
        return self._field_types

    @field_types.setter
    def field_types(self, field_types):
        """Sets the field_types of this LocalTime.


        :param field_types: The field_types of this LocalTime.
        :type field_types: List[DateTimeFieldType]
        """

        self._field_types = field_types

    @property
    def fields(self):
        """Gets the fields of this LocalTime.


        :return: The fields of this LocalTime.
        :rtype: List[DateTimeField]
        """
        return self._fields

    @fields.setter
    def fields(self, fields):
        """Sets the fields of this LocalTime.


        :param fields: The fields of this LocalTime.
        :type fields: List[DateTimeField]
        """

        self._fields = fields

    @property
    def hour_of_day(self):
        """Gets the hour_of_day of this LocalTime.


        :return: The hour_of_day of this LocalTime.
        :rtype: int
        """
        return self._hour_of_day

    @hour_of_day.setter
    def hour_of_day(self, hour_of_day):
        """Sets the hour_of_day of this LocalTime.


        :param hour_of_day: The hour_of_day of this LocalTime.
        :type hour_of_day: int
        """

        self._hour_of_day = hour_of_day

    @property
    def millis_of_day(self):
        """Gets the millis_of_day of this LocalTime.


        :return: The millis_of_day of this LocalTime.
        :rtype: int
        """
        return self._millis_of_day

    @millis_of_day.setter
    def millis_of_day(self, millis_of_day):
        """Sets the millis_of_day of this LocalTime.


        :param millis_of_day: The millis_of_day of this LocalTime.
        :type millis_of_day: int
        """

        self._millis_of_day = millis_of_day

    @property
    def millis_of_second(self):
        """Gets the millis_of_second of this LocalTime.


        :return: The millis_of_second of this LocalTime.
        :rtype: int
        """
        return self._millis_of_second

    @millis_of_second.setter
    def millis_of_second(self, millis_of_second):
        """Sets the millis_of_second of this LocalTime.


        :param millis_of_second: The millis_of_second of this LocalTime.
        :type millis_of_second: int
        """

        self._millis_of_second = millis_of_second

    @property
    def minute_of_hour(self):
        """Gets the minute_of_hour of this LocalTime.


        :return: The minute_of_hour of this LocalTime.
        :rtype: int
        """
        return self._minute_of_hour

    @minute_of_hour.setter
    def minute_of_hour(self, minute_of_hour):
        """Sets the minute_of_hour of this LocalTime.


        :param minute_of_hour: The minute_of_hour of this LocalTime.
        :type minute_of_hour: int
        """

        self._minute_of_hour = minute_of_hour

    @property
    def second_of_minute(self):
        """Gets the second_of_minute of this LocalTime.


        :return: The second_of_minute of this LocalTime.
        :rtype: int
        """
        return self._second_of_minute

    @second_of_minute.setter
    def second_of_minute(self, second_of_minute):
        """Sets the second_of_minute of this LocalTime.


        :param second_of_minute: The second_of_minute of this LocalTime.
        :type second_of_minute: int
        """

        self._second_of_minute = second_of_minute

    @property
    def values(self):
        """Gets the values of this LocalTime.


        :return: The values of this LocalTime.
        :rtype: List[int]
        """
        return self._values

    @values.setter
    def values(self, values):
        """Sets the values of this LocalTime.


        :param values: The values of this LocalTime.
        :type values: List[int]
        """

        self._values = values
