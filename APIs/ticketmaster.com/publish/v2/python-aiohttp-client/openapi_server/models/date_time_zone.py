# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DateTimeZone(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, fixed: bool=False, id: str=None):
        """DateTimeZone - a model defined in OpenAPI

        :param fixed: The fixed of this DateTimeZone.
        :param id: The id of this DateTimeZone.
        """
        self.openapi_types = {
            'fixed': bool,
            'id': str
        }

        self.attribute_map = {
            'fixed': 'fixed',
            'id': 'id'
        }

        self._fixed = fixed
        self._id = id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DateTimeZone':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DateTimeZone of this DateTimeZone.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def fixed(self):
        """Gets the fixed of this DateTimeZone.


        :return: The fixed of this DateTimeZone.
        :rtype: bool
        """
        return self._fixed

    @fixed.setter
    def fixed(self, fixed):
        """Sets the fixed of this DateTimeZone.


        :param fixed: The fixed of this DateTimeZone.
        :type fixed: bool
        """

        self._fixed = fixed

    @property
    def id(self):
        """Gets the id of this DateTimeZone.


        :return: The id of this DateTimeZone.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this DateTimeZone.


        :param id: The id of this DateTimeZone.
        :type id: str
        """

        self._id = id
