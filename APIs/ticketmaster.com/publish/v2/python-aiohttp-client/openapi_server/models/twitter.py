# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Twitter(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, handle: str=None, hashtags: List[str]=None):
        """Twitter - a model defined in OpenAPI

        :param handle: The handle of this Twitter.
        :param hashtags: The hashtags of this Twitter.
        """
        self.openapi_types = {
            'handle': str,
            'hashtags': List[str]
        }

        self.attribute_map = {
            'handle': 'handle',
            'hashtags': 'hashtags'
        }

        self._handle = handle
        self._hashtags = hashtags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Twitter':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Twitter of this Twitter.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def handle(self):
        """Gets the handle of this Twitter.

        Twitter handle

        :return: The handle of this Twitter.
        :rtype: str
        """
        return self._handle

    @handle.setter
    def handle(self, handle):
        """Sets the handle of this Twitter.

        Twitter handle

        :param handle: The handle of this Twitter.
        :type handle: str
        """
        allowed_values = ["@a Twitter handle"]  # noqa: E501
        if handle not in allowed_values:
            raise ValueError(
                "Invalid value for `handle` ({0}), must be one of {1}"
                .format(handle, allowed_values)
            )

        self._handle = handle

    @property
    def hashtags(self):
        """Gets the hashtags of this Twitter.

        Twitter hashtags

        :return: The hashtags of this Twitter.
        :rtype: List[str]
        """
        return self._hashtags

    @hashtags.setter
    def hashtags(self, hashtags):
        """Sets the hashtags of this Twitter.

        Twitter hashtags

        :param hashtags: The hashtags of this Twitter.
        :type hashtags: List[str]
        """

        self._hashtags = hashtags
