# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.location import Location
from openapi_server import util


class Geometry(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, location: Location=None):
        """Geometry - a model defined in OpenAPI

        :param location: The location of this Geometry.
        """
        self.openapi_types = {
            'location': Location
        }

        self.attribute_map = {
            'location': 'location'
        }

        self._location = location

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Geometry':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Geometry of this Geometry.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def location(self):
        """Gets the location of this Geometry.


        :return: The location of this Geometry.
        :rtype: Location
        """
        return self._location

    @location.setter
    def location(self, location):
        """Sets the location of this Geometry.


        :param location: The location of this Geometry.
        :type location: Location
        """

        self._location = location
