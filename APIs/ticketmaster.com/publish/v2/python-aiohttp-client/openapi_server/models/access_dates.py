# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AccessDates(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, end_approximate: bool=False, end_date_time: datetime=None, start_approximate: bool=False, start_date_time: datetime=None):
        """AccessDates - a model defined in OpenAPI

        :param end_approximate: The end_approximate of this AccessDates.
        :param end_date_time: The end_date_time of this AccessDates.
        :param start_approximate: The start_approximate of this AccessDates.
        :param start_date_time: The start_date_time of this AccessDates.
        """
        self.openapi_types = {
            'end_approximate': bool,
            'end_date_time': datetime,
            'start_approximate': bool,
            'start_date_time': datetime
        }

        self.attribute_map = {
            'end_approximate': 'endApproximate',
            'end_date_time': 'endDateTime',
            'start_approximate': 'startApproximate',
            'start_date_time': 'startDateTime'
        }

        self._end_approximate = end_approximate
        self._end_date_time = end_date_time
        self._start_approximate = start_approximate
        self._start_date_time = start_date_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AccessDates':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AccessDates of this AccessDates.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def end_approximate(self):
        """Gets the end_approximate of this AccessDates.

        Boolean flag to indicate whether or not the access end date is approximated

        :return: The end_approximate of this AccessDates.
        :rtype: bool
        """
        return self._end_approximate

    @end_approximate.setter
    def end_approximate(self, end_approximate):
        """Sets the end_approximate of this AccessDates.

        Boolean flag to indicate whether or not the access end date is approximated

        :param end_approximate: The end_approximate of this AccessDates.
        :type end_approximate: bool
        """

        self._end_approximate = end_approximate

    @property
    def end_date_time(self):
        """Gets the end_date_time of this AccessDates.

        Event's end access time

        :return: The end_date_time of this AccessDates.
        :rtype: datetime
        """
        return self._end_date_time

    @end_date_time.setter
    def end_date_time(self, end_date_time):
        """Sets the end_date_time of this AccessDates.

        Event's end access time

        :param end_date_time: The end_date_time of this AccessDates.
        :type end_date_time: datetime
        """

        self._end_date_time = end_date_time

    @property
    def start_approximate(self):
        """Gets the start_approximate of this AccessDates.

        Boolean flag to indicate whether or not the access start date is approximated

        :return: The start_approximate of this AccessDates.
        :rtype: bool
        """
        return self._start_approximate

    @start_approximate.setter
    def start_approximate(self, start_approximate):
        """Sets the start_approximate of this AccessDates.

        Boolean flag to indicate whether or not the access start date is approximated

        :param start_approximate: The start_approximate of this AccessDates.
        :type start_approximate: bool
        """

        self._start_approximate = start_approximate

    @property
    def start_date_time(self):
        """Gets the start_date_time of this AccessDates.

        Event's start access time

        :return: The start_date_time of this AccessDates.
        :rtype: datetime
        """
        return self._start_date_time

    @start_date_time.setter
    def start_date_time(self, start_date_time):
        """Sets the start_date_time of this AccessDates.

        Event's start access time

        :param start_date_time: The start_date_time of this AccessDates.
        :type start_date_time: datetime
        """

        self._start_date_time = start_date_time
