# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RegionRestrictions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, allowed: List[str]=None):
        """RegionRestrictions - a model defined in OpenAPI

        :param allowed: The allowed of this RegionRestrictions.
        """
        self.openapi_types = {
            'allowed': List[str]
        }

        self.attribute_map = {
            'allowed': 'allowed'
        }

        self._allowed = allowed

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RegionRestrictions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RegionRestrictions of this RegionRestrictions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def allowed(self):
        """Gets the allowed of this RegionRestrictions.

        Restrictions based on regions

        :return: The allowed of this RegionRestrictions.
        :rtype: List[str]
        """
        return self._allowed

    @allowed.setter
    def allowed(self, allowed):
        """Sets the allowed of this RegionRestrictions.

        Restrictions based on regions

        :param allowed: The allowed of this RegionRestrictions.
        :type allowed: List[str]
        """

        self._allowed = allowed
