# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.duration_field_type import DurationFieldType
from openapi_server import util


class DurationField(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, precise: bool=False, supported: bool=False, type: DurationFieldType=None, unit_millis: int=None):
        """DurationField - a model defined in OpenAPI

        :param name: The name of this DurationField.
        :param precise: The precise of this DurationField.
        :param supported: The supported of this DurationField.
        :param type: The type of this DurationField.
        :param unit_millis: The unit_millis of this DurationField.
        """
        self.openapi_types = {
            'name': str,
            'precise': bool,
            'supported': bool,
            'type': DurationFieldType,
            'unit_millis': int
        }

        self.attribute_map = {
            'name': 'name',
            'precise': 'precise',
            'supported': 'supported',
            'type': 'type',
            'unit_millis': 'unitMillis'
        }

        self._name = name
        self._precise = precise
        self._supported = supported
        self._type = type
        self._unit_millis = unit_millis

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DurationField':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DurationField of this DurationField.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this DurationField.


        :return: The name of this DurationField.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this DurationField.


        :param name: The name of this DurationField.
        :type name: str
        """

        self._name = name

    @property
    def precise(self):
        """Gets the precise of this DurationField.


        :return: The precise of this DurationField.
        :rtype: bool
        """
        return self._precise

    @precise.setter
    def precise(self, precise):
        """Sets the precise of this DurationField.


        :param precise: The precise of this DurationField.
        :type precise: bool
        """

        self._precise = precise

    @property
    def supported(self):
        """Gets the supported of this DurationField.


        :return: The supported of this DurationField.
        :rtype: bool
        """
        return self._supported

    @supported.setter
    def supported(self, supported):
        """Sets the supported of this DurationField.


        :param supported: The supported of this DurationField.
        :type supported: bool
        """

        self._supported = supported

    @property
    def type(self):
        """Gets the type of this DurationField.


        :return: The type of this DurationField.
        :rtype: DurationFieldType
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this DurationField.


        :param type: The type of this DurationField.
        :type type: DurationFieldType
        """

        self._type = type

    @property
    def unit_millis(self):
        """Gets the unit_millis of this DurationField.


        :return: The unit_millis of this DurationField.
        :rtype: int
        """
        return self._unit_millis

    @unit_millis.setter
    def unit_millis(self, unit_millis):
        """Sets the unit_millis of this DurationField.


        :param unit_millis: The unit_millis of this DurationField.
        :type unit_millis: int
        """

        self._unit_millis = unit_millis
