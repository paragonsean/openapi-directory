# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.date_time_zone import DateTimeZone
from openapi_server import util


class Chronology(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, zone: DateTimeZone=None):
        """Chronology - a model defined in OpenAPI

        :param zone: The zone of this Chronology.
        """
        self.openapi_types = {
            'zone': DateTimeZone
        }

        self.attribute_map = {
            'zone': 'zone'
        }

        self._zone = zone

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Chronology':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Chronology of this Chronology.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def zone(self):
        """Gets the zone of this Chronology.


        :return: The zone of this Chronology.
        :rtype: DateTimeZone
        """
        return self._zone

    @zone.setter
    def zone(self, zone):
        """Sets the zone of this Chronology.


        :param zone: The zone of this Chronology.
        :type zone: DateTimeZone
        """

        self._zone = zone
