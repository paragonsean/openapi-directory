# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.access_dates import AccessDates
from openapi_server.models.end_dates import EndDates
from openapi_server.models.event_status import EventStatus
from openapi_server.models.start_dates import StartDates
from openapi_server import util


class EventDates(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, access: AccessDates=None, end: EndDates=None, start: StartDates=None, status: EventStatus=None, timezone: str=None):
        """EventDates - a model defined in OpenAPI

        :param access: The access of this EventDates.
        :param end: The end of this EventDates.
        :param start: The start of this EventDates.
        :param status: The status of this EventDates.
        :param timezone: The timezone of this EventDates.
        """
        self.openapi_types = {
            'access': AccessDates,
            'end': EndDates,
            'start': StartDates,
            'status': EventStatus,
            'timezone': str
        }

        self.attribute_map = {
            'access': 'access',
            'end': 'end',
            'start': 'start',
            'status': 'status',
            'timezone': 'timezone'
        }

        self._access = access
        self._end = end
        self._start = start
        self._status = status
        self._timezone = timezone

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EventDates':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EventDates of this EventDates.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def access(self):
        """Gets the access of this EventDates.


        :return: The access of this EventDates.
        :rtype: AccessDates
        """
        return self._access

    @access.setter
    def access(self, access):
        """Sets the access of this EventDates.


        :param access: The access of this EventDates.
        :type access: AccessDates
        """

        self._access = access

    @property
    def end(self):
        """Gets the end of this EventDates.


        :return: The end of this EventDates.
        :rtype: EndDates
        """
        return self._end

    @end.setter
    def end(self, end):
        """Sets the end of this EventDates.


        :param end: The end of this EventDates.
        :type end: EndDates
        """

        self._end = end

    @property
    def start(self):
        """Gets the start of this EventDates.


        :return: The start of this EventDates.
        :rtype: StartDates
        """
        return self._start

    @start.setter
    def start(self, start):
        """Sets the start of this EventDates.


        :param start: The start of this EventDates.
        :type start: StartDates
        """

        self._start = start

    @property
    def status(self):
        """Gets the status of this EventDates.


        :return: The status of this EventDates.
        :rtype: EventStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this EventDates.


        :param status: The status of this EventDates.
        :type status: EventStatus
        """

        self._status = status

    @property
    def timezone(self):
        """Gets the timezone of this EventDates.

        Event's timezone

        :return: The timezone of this EventDates.
        :rtype: str
        """
        return self._timezone

    @timezone.setter
    def timezone(self, timezone):
        """Sets the timezone of this EventDates.

        Event's timezone

        :param timezone: The timezone of this EventDates.
        :type timezone: str
        """

        self._timezone = timezone
