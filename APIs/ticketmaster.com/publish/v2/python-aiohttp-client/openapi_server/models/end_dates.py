# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.local_time import LocalTime
from openapi_server import util


class EndDates(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, approximate: bool=False, date_time: datetime=None, local_time: LocalTime=None):
        """EndDates - a model defined in OpenAPI

        :param approximate: The approximate of this EndDates.
        :param date_time: The date_time of this EndDates.
        :param local_time: The local_time of this EndDates.
        """
        self.openapi_types = {
            'approximate': bool,
            'date_time': datetime,
            'local_time': LocalTime
        }

        self.attribute_map = {
            'approximate': 'approximate',
            'date_time': 'dateTime',
            'local_time': 'localTime'
        }

        self._approximate = approximate
        self._date_time = date_time
        self._local_time = local_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EndDates':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EndDates of this EndDates.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def approximate(self):
        """Gets the approximate of this EndDates.

        Boolean flag to indicate whether or not the end date is approximated

        :return: The approximate of this EndDates.
        :rtype: bool
        """
        return self._approximate

    @approximate.setter
    def approximate(self, approximate):
        """Sets the approximate of this EndDates.

        Boolean flag to indicate whether or not the end date is approximated

        :param approximate: The approximate of this EndDates.
        :type approximate: bool
        """

        self._approximate = approximate

    @property
    def date_time(self):
        """Gets the date_time of this EndDates.

        The event end date time

        :return: The date_time of this EndDates.
        :rtype: datetime
        """
        return self._date_time

    @date_time.setter
    def date_time(self, date_time):
        """Sets the date_time of this EndDates.

        The event end date time

        :param date_time: The date_time of this EndDates.
        :type date_time: datetime
        """

        self._date_time = date_time

    @property
    def local_time(self):
        """Gets the local_time of this EndDates.


        :return: The local_time of this EndDates.
        :rtype: LocalTime
        """
        return self._local_time

    @local_time.setter
    def local_time(self, local_time):
        """Sets the local_time of this EndDates.


        :param local_time: The local_time of this EndDates.
        :type local_time: LocalTime
        """

        self._local_time = local_time
