/**
 * ticketmaster publish api
 * Publish API
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITwitter.h
 *
 * Twitter data
 */

#ifndef OAITwitter_H
#define OAITwitter_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAITwitter : public OAIObject {
public:
    OAITwitter();
    OAITwitter(QString json);
    ~OAITwitter() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getHandle() const;
    void setHandle(const QString &handle);
    bool is_handle_Set() const;
    bool is_handle_Valid() const;

    QList<QString> getHashtags() const;
    void setHashtags(const QList<QString> &hashtags);
    bool is_hashtags_Set() const;
    bool is_hashtags_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_handle;
    bool m_handle_isSet;
    bool m_handle_isValid;

    QList<QString> m_hashtags;
    bool m_hashtags_isSet;
    bool m_hashtags_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITwitter)

#endif // OAITwitter_H
