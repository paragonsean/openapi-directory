/**
 * ticketmaster publish api
 * Publish API
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIIngestionResult.h
 *
 * This class defines the IngestionResult on the Publish API
 */

#ifndef OAIIngestionResult_H
#define OAIIngestionResult_H

#include <QJsonObject>

#include "OAIObject.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIIngestionResult : public OAIObject {
public:
    OAIIngestionResult();
    OAIIngestionResult(QString json);
    ~OAIIngestionResult() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QMap<QString, OAIObject> getIgnoredProperties() const;
    void setIgnoredProperties(const QMap<QString, OAIObject> &ignored_properties);
    bool is_ignored_properties_Set() const;
    bool is_ignored_properties_Valid() const;

    QMap<QString, OAIObject> getInvalidProperties() const;
    void setInvalidProperties(const QMap<QString, OAIObject> &invalid_properties);
    bool is_invalid_properties_Set() const;
    bool is_invalid_properties_Valid() const;

    QMap<QString, OAIObject> getInvalidValues() const;
    void setInvalidValues(const QMap<QString, OAIObject> &invalid_values);
    bool is_invalid_values_Set() const;
    bool is_invalid_values_Valid() const;

    QMap<QString, OAIObject> getMissingProperties() const;
    void setMissingProperties(const QMap<QString, OAIObject> &missing_properties);
    bool is_missing_properties_Set() const;
    bool is_missing_properties_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QMap<QString, OAIObject> getUnknownProperties() const;
    void setUnknownProperties(const QMap<QString, OAIObject> &unknown_properties);
    bool is_unknown_properties_Set() const;
    bool is_unknown_properties_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QMap<QString, OAIObject> m_ignored_properties;
    bool m_ignored_properties_isSet;
    bool m_ignored_properties_isValid;

    QMap<QString, OAIObject> m_invalid_properties;
    bool m_invalid_properties_isSet;
    bool m_invalid_properties_isValid;

    QMap<QString, OAIObject> m_invalid_values;
    bool m_invalid_values_isSet;
    bool m_invalid_values_isValid;

    QMap<QString, OAIObject> m_missing_properties;
    bool m_missing_properties_isSet;
    bool m_missing_properties_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QMap<QString, OAIObject> m_unknown_properties;
    bool m_unknown_properties_isSet;
    bool m_unknown_properties_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIIngestionResult)

#endif // OAIIngestionResult_H
