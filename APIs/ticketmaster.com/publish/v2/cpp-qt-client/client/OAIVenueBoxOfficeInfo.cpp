/**
 * ticketmaster publish api
 * Publish API
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIVenueBoxOfficeInfo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIVenueBoxOfficeInfo::OAIVenueBoxOfficeInfo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIVenueBoxOfficeInfo::OAIVenueBoxOfficeInfo() {
    this->initializeModel();
}

OAIVenueBoxOfficeInfo::~OAIVenueBoxOfficeInfo() {}

void OAIVenueBoxOfficeInfo::initializeModel() {

    m_accepted_payment_details_isSet = false;
    m_accepted_payment_details_isValid = false;

    m_open_hours_details_isSet = false;
    m_open_hours_details_isValid = false;

    m_phone_number_details_isSet = false;
    m_phone_number_details_isValid = false;

    m_will_call_details_isSet = false;
    m_will_call_details_isValid = false;
}

void OAIVenueBoxOfficeInfo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIVenueBoxOfficeInfo::fromJsonObject(QJsonObject json) {

    m_accepted_payment_details_isValid = ::OpenAPI::fromJsonValue(m_accepted_payment_details, json[QString("acceptedPaymentDetails")]);
    m_accepted_payment_details_isSet = !json[QString("acceptedPaymentDetails")].isNull() && m_accepted_payment_details_isValid;

    m_open_hours_details_isValid = ::OpenAPI::fromJsonValue(m_open_hours_details, json[QString("openHoursDetails")]);
    m_open_hours_details_isSet = !json[QString("openHoursDetails")].isNull() && m_open_hours_details_isValid;

    m_phone_number_details_isValid = ::OpenAPI::fromJsonValue(m_phone_number_details, json[QString("phoneNumberDetails")]);
    m_phone_number_details_isSet = !json[QString("phoneNumberDetails")].isNull() && m_phone_number_details_isValid;

    m_will_call_details_isValid = ::OpenAPI::fromJsonValue(m_will_call_details, json[QString("willCallDetails")]);
    m_will_call_details_isSet = !json[QString("willCallDetails")].isNull() && m_will_call_details_isValid;
}

QString OAIVenueBoxOfficeInfo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIVenueBoxOfficeInfo::asJsonObject() const {
    QJsonObject obj;
    if (m_accepted_payment_details.size() > 0) {
        obj.insert(QString("acceptedPaymentDetails"), ::OpenAPI::toJsonValue(m_accepted_payment_details));
    }
    if (m_open_hours_details.size() > 0) {
        obj.insert(QString("openHoursDetails"), ::OpenAPI::toJsonValue(m_open_hours_details));
    }
    if (m_phone_number_details.size() > 0) {
        obj.insert(QString("phoneNumberDetails"), ::OpenAPI::toJsonValue(m_phone_number_details));
    }
    if (m_will_call_details.size() > 0) {
        obj.insert(QString("willCallDetails"), ::OpenAPI::toJsonValue(m_will_call_details));
    }
    return obj;
}

QMap<QString, QString> OAIVenueBoxOfficeInfo::getAcceptedPaymentDetails() const {
    return m_accepted_payment_details;
}
void OAIVenueBoxOfficeInfo::setAcceptedPaymentDetails(const QMap<QString, QString> &accepted_payment_details) {
    m_accepted_payment_details = accepted_payment_details;
    m_accepted_payment_details_isSet = true;
}

bool OAIVenueBoxOfficeInfo::is_accepted_payment_details_Set() const{
    return m_accepted_payment_details_isSet;
}

bool OAIVenueBoxOfficeInfo::is_accepted_payment_details_Valid() const{
    return m_accepted_payment_details_isValid;
}

QMap<QString, QString> OAIVenueBoxOfficeInfo::getOpenHoursDetails() const {
    return m_open_hours_details;
}
void OAIVenueBoxOfficeInfo::setOpenHoursDetails(const QMap<QString, QString> &open_hours_details) {
    m_open_hours_details = open_hours_details;
    m_open_hours_details_isSet = true;
}

bool OAIVenueBoxOfficeInfo::is_open_hours_details_Set() const{
    return m_open_hours_details_isSet;
}

bool OAIVenueBoxOfficeInfo::is_open_hours_details_Valid() const{
    return m_open_hours_details_isValid;
}

QMap<QString, QString> OAIVenueBoxOfficeInfo::getPhoneNumberDetails() const {
    return m_phone_number_details;
}
void OAIVenueBoxOfficeInfo::setPhoneNumberDetails(const QMap<QString, QString> &phone_number_details) {
    m_phone_number_details = phone_number_details;
    m_phone_number_details_isSet = true;
}

bool OAIVenueBoxOfficeInfo::is_phone_number_details_Set() const{
    return m_phone_number_details_isSet;
}

bool OAIVenueBoxOfficeInfo::is_phone_number_details_Valid() const{
    return m_phone_number_details_isValid;
}

QMap<QString, QString> OAIVenueBoxOfficeInfo::getWillCallDetails() const {
    return m_will_call_details;
}
void OAIVenueBoxOfficeInfo::setWillCallDetails(const QMap<QString, QString> &will_call_details) {
    m_will_call_details = will_call_details;
    m_will_call_details_isSet = true;
}

bool OAIVenueBoxOfficeInfo::is_will_call_details_Set() const{
    return m_will_call_details_isSet;
}

bool OAIVenueBoxOfficeInfo::is_will_call_details_Valid() const{
    return m_will_call_details_isValid;
}

bool OAIVenueBoxOfficeInfo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_accepted_payment_details.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_open_hours_details.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_phone_number_details.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_will_call_details.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIVenueBoxOfficeInfo::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
