/**
 * ticketmaster publish api
 * Publish API
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILocalTime.h
 *
 * 
 */

#ifndef OAILocalTime_H
#define OAILocalTime_H

#include <QJsonObject>

#include "OAIChronology.h"
#include "OAIDateTimeField.h"
#include "OAIDateTimeFieldType.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIChronology;
class OAIDateTimeFieldType;
class OAIDateTimeField;

class OAILocalTime : public OAIObject {
public:
    OAILocalTime();
    OAILocalTime(QString json);
    ~OAILocalTime() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIChronology getChronology() const;
    void setChronology(const OAIChronology &chronology);
    bool is_chronology_Set() const;
    bool is_chronology_Valid() const;

    QList<OAIDateTimeFieldType> getFieldTypes() const;
    void setFieldTypes(const QList<OAIDateTimeFieldType> &field_types);
    bool is_field_types_Set() const;
    bool is_field_types_Valid() const;

    QList<OAIDateTimeField> getFields() const;
    void setFields(const QList<OAIDateTimeField> &fields);
    bool is_fields_Set() const;
    bool is_fields_Valid() const;

    qint32 getHourOfDay() const;
    void setHourOfDay(const qint32 &hour_of_day);
    bool is_hour_of_day_Set() const;
    bool is_hour_of_day_Valid() const;

    qint32 getMillisOfDay() const;
    void setMillisOfDay(const qint32 &millis_of_day);
    bool is_millis_of_day_Set() const;
    bool is_millis_of_day_Valid() const;

    qint32 getMillisOfSecond() const;
    void setMillisOfSecond(const qint32 &millis_of_second);
    bool is_millis_of_second_Set() const;
    bool is_millis_of_second_Valid() const;

    qint32 getMinuteOfHour() const;
    void setMinuteOfHour(const qint32 &minute_of_hour);
    bool is_minute_of_hour_Set() const;
    bool is_minute_of_hour_Valid() const;

    qint32 getSecondOfMinute() const;
    void setSecondOfMinute(const qint32 &second_of_minute);
    bool is_second_of_minute_Set() const;
    bool is_second_of_minute_Valid() const;

    QList<qint32> getValues() const;
    void setValues(const QList<qint32> &values);
    bool is_values_Set() const;
    bool is_values_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIChronology m_chronology;
    bool m_chronology_isSet;
    bool m_chronology_isValid;

    QList<OAIDateTimeFieldType> m_field_types;
    bool m_field_types_isSet;
    bool m_field_types_isValid;

    QList<OAIDateTimeField> m_fields;
    bool m_fields_isSet;
    bool m_fields_isValid;

    qint32 m_hour_of_day;
    bool m_hour_of_day_isSet;
    bool m_hour_of_day_isValid;

    qint32 m_millis_of_day;
    bool m_millis_of_day_isSet;
    bool m_millis_of_day_isValid;

    qint32 m_millis_of_second;
    bool m_millis_of_second_isSet;
    bool m_millis_of_second_isValid;

    qint32 m_minute_of_hour;
    bool m_minute_of_hour_isSet;
    bool m_minute_of_hour_isValid;

    qint32 m_second_of_minute;
    bool m_second_of_minute_isSet;
    bool m_second_of_minute_isValid;

    QList<qint32> m_values;
    bool m_values_isSet;
    bool m_values_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILocalTime)

#endif // OAILocalTime_H
