/**
 * ticketmaster publish api
 * Publish API
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDateTimeField.h
 *
 * 
 */

#ifndef OAIDateTimeField_H
#define OAIDateTimeField_H

#include <QJsonObject>

#include "OAIDateTimeFieldType.h"
#include "OAIDurationField.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDurationField;
class OAIDateTimeFieldType;

class OAIDateTimeField : public OAIObject {
public:
    OAIDateTimeField();
    OAIDateTimeField(QString json);
    ~OAIDateTimeField() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIDurationField getDurationField() const;
    void setDurationField(const OAIDurationField &duration_field);
    bool is_duration_field_Set() const;
    bool is_duration_field_Valid() const;

    OAIDurationField getLeapDurationField() const;
    void setLeapDurationField(const OAIDurationField &leap_duration_field);
    bool is_leap_duration_field_Set() const;
    bool is_leap_duration_field_Valid() const;

    bool isLenient() const;
    void setLenient(const bool &lenient);
    bool is_lenient_Set() const;
    bool is_lenient_Valid() const;

    qint32 getMaximumValue() const;
    void setMaximumValue(const qint32 &maximum_value);
    bool is_maximum_value_Set() const;
    bool is_maximum_value_Valid() const;

    qint32 getMinimumValue() const;
    void setMinimumValue(const qint32 &minimum_value);
    bool is_minimum_value_Set() const;
    bool is_minimum_value_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAIDurationField getRangeDurationField() const;
    void setRangeDurationField(const OAIDurationField &range_duration_field);
    bool is_range_duration_field_Set() const;
    bool is_range_duration_field_Valid() const;

    bool isSupported() const;
    void setSupported(const bool &supported);
    bool is_supported_Set() const;
    bool is_supported_Valid() const;

    OAIDateTimeFieldType getType() const;
    void setType(const OAIDateTimeFieldType &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIDurationField m_duration_field;
    bool m_duration_field_isSet;
    bool m_duration_field_isValid;

    OAIDurationField m_leap_duration_field;
    bool m_leap_duration_field_isSet;
    bool m_leap_duration_field_isValid;

    bool m_lenient;
    bool m_lenient_isSet;
    bool m_lenient_isValid;

    qint32 m_maximum_value;
    bool m_maximum_value_isSet;
    bool m_maximum_value_isValid;

    qint32 m_minimum_value;
    bool m_minimum_value_isSet;
    bool m_minimum_value_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAIDurationField m_range_duration_field;
    bool m_range_duration_field_isSet;
    bool m_range_duration_field_isValid;

    bool m_supported;
    bool m_supported_isSet;
    bool m_supported_isValid;

    OAIDateTimeFieldType m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDateTimeField)

#endif // OAIDateTimeField_H
