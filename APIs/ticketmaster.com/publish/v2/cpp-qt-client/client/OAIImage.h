/**
 * ticketmaster publish api
 * Publish API
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIImage.h
 *
 * Image
 */

#ifndef OAIImage_H
#define OAIImage_H

#include <QJsonObject>

#include <QSet>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIImage : public OAIObject {
public:
    OAIImage();
    OAIImage(QString json);
    ~OAIImage() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAttribution() const;
    void setAttribution(const QString &attribution);
    bool is_attribution_Set() const;
    bool is_attribution_Valid() const;

    QSet<QString> getDomains() const;
    void setDomains(const QSet<QString> &domains);
    bool is_domains_Set() const;
    bool is_domains_Valid() const;

    bool isFallback() const;
    void setFallback(const bool &fallback);
    bool is_fallback_Set() const;
    bool is_fallback_Valid() const;

    qint32 getHeight() const;
    void setHeight(const qint32 &height);
    bool is_height_Set() const;
    bool is_height_Valid() const;

    QString getRatio() const;
    void setRatio(const QString &ratio);
    bool is_ratio_Set() const;
    bool is_ratio_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    qint32 getWidth() const;
    void setWidth(const qint32 &width);
    bool is_width_Set() const;
    bool is_width_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_attribution;
    bool m_attribution_isSet;
    bool m_attribution_isValid;

    QSet<QString> m_domains;
    bool m_domains_isSet;
    bool m_domains_isValid;

    bool m_fallback;
    bool m_fallback_isSet;
    bool m_fallback_isValid;

    qint32 m_height;
    bool m_height_isSet;
    bool m_height_isValid;

    QString m_ratio;
    bool m_ratio_isSet;
    bool m_ratio_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;

    qint32 m_width;
    bool m_width_isSet;
    bool m_width_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIImage)

#endif // OAIImage_H
