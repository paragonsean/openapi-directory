/**
 * ticketmaster publish api
 * Publish API
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEntityChanges.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEntityChanges::OAIEntityChanges(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEntityChanges::OAIEntityChanges() {
    this->initializeModel();
}

OAIEntityChanges::~OAIEntityChanges() {}

void OAIEntityChanges::initializeModel() {

    m_changes_isSet = false;
    m_changes_isValid = false;

    m_newly_created_isSet = false;
    m_newly_created_isValid = false;
}

void OAIEntityChanges::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEntityChanges::fromJsonObject(QJsonObject json) {

    m_changes_isValid = ::OpenAPI::fromJsonValue(m_changes, json[QString("changes")]);
    m_changes_isSet = !json[QString("changes")].isNull() && m_changes_isValid;

    m_newly_created_isValid = ::OpenAPI::fromJsonValue(m_newly_created, json[QString("newlyCreated")]);
    m_newly_created_isSet = !json[QString("newlyCreated")].isNull() && m_newly_created_isValid;
}

QString OAIEntityChanges::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEntityChanges::asJsonObject() const {
    QJsonObject obj;
    if (m_changes.size() > 0) {
        obj.insert(QString("changes"), ::OpenAPI::toJsonValue(m_changes));
    }
    if (m_newly_created_isSet) {
        obj.insert(QString("newlyCreated"), ::OpenAPI::toJsonValue(m_newly_created));
    }
    return obj;
}

QSet<QString> OAIEntityChanges::getChanges() const {
    return m_changes;
}
void OAIEntityChanges::setChanges(const QSet<QString> &changes) {
    m_changes = changes;
    m_changes_isSet = true;
}

bool OAIEntityChanges::is_changes_Set() const{
    return m_changes_isSet;
}

bool OAIEntityChanges::is_changes_Valid() const{
    return m_changes_isValid;
}

bool OAIEntityChanges::isNewlyCreated() const {
    return m_newly_created;
}
void OAIEntityChanges::setNewlyCreated(const bool &newly_created) {
    m_newly_created = newly_created;
    m_newly_created_isSet = true;
}

bool OAIEntityChanges::is_newly_created_Set() const{
    return m_newly_created_isSet;
}

bool OAIEntityChanges::is_newly_created_Valid() const{
    return m_newly_created_isValid;
}

bool OAIEntityChanges::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_changes.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_newly_created_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEntityChanges::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
