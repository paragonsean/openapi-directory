/**
 * ticketmaster publish api
 * Publish API
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAttraction.h
 *
 * Attraction
 */

#ifndef OAIAttraction_H
#define OAIAttraction_H

#include <QJsonObject>

#include "OAIClassification.h"
#include "OAIImage.h"
#include "OAIObject.h"
#include "OAISource.h"
#include <QList>
#include <QMap>
#include <QSet>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIClassification;
class OAIImage;
class OAISource;

class OAIAttraction : public OAIObject {
public:
    OAIAttraction();
    OAIAttraction(QString json);
    ~OAIAttraction() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isActive() const;
    void setActive(const bool &active);
    bool is_active_Set() const;
    bool is_active_Valid() const;

    QMap<QString, QString> getAdditionalInfos() const;
    void setAdditionalInfos(const QMap<QString, QString> &additional_infos);
    bool is_additional_infos_Set() const;
    bool is_additional_infos_Valid() const;

    QList<OAIClassification> getClassifications() const;
    void setClassifications(const QList<OAIClassification> &classifications);
    bool is_classifications_Set() const;
    bool is_classifications_Valid() const;

    QMap<QString, QString> getDescriptions() const;
    void setDescriptions(const QMap<QString, QString> &descriptions);
    bool is_descriptions_Set() const;
    bool is_descriptions_Valid() const;

    bool isDiscoverable() const;
    void setDiscoverable(const bool &discoverable);
    bool is_discoverable_Set() const;
    bool is_discoverable_Valid() const;

    QSet<OAIImage> getImages() const;
    void setImages(const QSet<OAIImage> &images);
    bool is_images_Set() const;
    bool is_images_Valid() const;

    QMap<QString, QString> getNames() const;
    void setNames(const QMap<QString, QString> &names);
    bool is_names_Set() const;
    bool is_names_Valid() const;

    QMap<QString, QString> getReferences() const;
    void setReferences(const QMap<QString, QString> &references);
    bool is_references_Set() const;
    bool is_references_Valid() const;

    QList<OAIObject> getRelationships() const;
    void setRelationships(const QList<OAIObject> &relationships);
    bool is_relationships_Set() const;
    bool is_relationships_Valid() const;

    OAISource getSource() const;
    void setSource(const OAISource &source);
    bool is_source_Set() const;
    bool is_source_Valid() const;

    bool isTest() const;
    void setTest(const bool &test);
    bool is_test_Set() const;
    bool is_test_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    qint64 getVersion() const;
    void setVersion(const qint64 &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_active;
    bool m_active_isSet;
    bool m_active_isValid;

    QMap<QString, QString> m_additional_infos;
    bool m_additional_infos_isSet;
    bool m_additional_infos_isValid;

    QList<OAIClassification> m_classifications;
    bool m_classifications_isSet;
    bool m_classifications_isValid;

    QMap<QString, QString> m_descriptions;
    bool m_descriptions_isSet;
    bool m_descriptions_isValid;

    bool m_discoverable;
    bool m_discoverable_isSet;
    bool m_discoverable_isValid;

    QSet<OAIImage> m_images;
    bool m_images_isSet;
    bool m_images_isValid;

    QMap<QString, QString> m_names;
    bool m_names_isSet;
    bool m_names_isValid;

    QMap<QString, QString> m_references;
    bool m_references_isSet;
    bool m_references_isValid;

    QList<OAIObject> m_relationships;
    bool m_relationships_isSet;
    bool m_relationships_isValid;

    OAISource m_source;
    bool m_source_isSet;
    bool m_source_isValid;

    bool m_test;
    bool m_test_isSet;
    bool m_test_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;

    qint64 m_version;
    bool m_version_isSet;
    bool m_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAttraction)

#endif // OAIAttraction_H
