/**
 * ticketmaster publish api
 * Publish API
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISocial.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISocial::OAISocial(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISocial::OAISocial() {
    this->initializeModel();
}

OAISocial::~OAISocial() {}

void OAISocial::initializeModel() {

    m_twitter_isSet = false;
    m_twitter_isValid = false;
}

void OAISocial::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISocial::fromJsonObject(QJsonObject json) {

    m_twitter_isValid = ::OpenAPI::fromJsonValue(m_twitter, json[QString("twitter")]);
    m_twitter_isSet = !json[QString("twitter")].isNull() && m_twitter_isValid;
}

QString OAISocial::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISocial::asJsonObject() const {
    QJsonObject obj;
    if (m_twitter.isSet()) {
        obj.insert(QString("twitter"), ::OpenAPI::toJsonValue(m_twitter));
    }
    return obj;
}

OAITwitter OAISocial::getTwitter() const {
    return m_twitter;
}
void OAISocial::setTwitter(const OAITwitter &twitter) {
    m_twitter = twitter;
    m_twitter_isSet = true;
}

bool OAISocial::is_twitter_Set() const{
    return m_twitter_isSet;
}

bool OAISocial::is_twitter_Valid() const{
    return m_twitter_isValid;
}

bool OAISocial::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_twitter.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISocial::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
