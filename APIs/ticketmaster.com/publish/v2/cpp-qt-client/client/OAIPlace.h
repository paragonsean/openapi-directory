/**
 * ticketmaster publish api
 * Publish API
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPlace.h
 *
 * Place
 */

#ifndef OAIPlace_H
#define OAIPlace_H

#include <QJsonObject>

#include "OAIAddress.h"
#include "OAIArea.h"
#include "OAICity.h"
#include "OAICountry.h"
#include "OAILocation.h"
#include "OAIState.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAddress;
class OAIArea;
class OAICity;
class OAICountry;
class OAILocation;
class OAIState;

class OAIPlace : public OAIObject {
public:
    OAIPlace();
    OAIPlace(QString json);
    ~OAIPlace() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAddress getAddress() const;
    void setAddress(const OAIAddress &address);
    bool is_address_Set() const;
    bool is_address_Valid() const;

    OAIArea getArea() const;
    void setArea(const OAIArea &area);
    bool is_area_Set() const;
    bool is_area_Valid() const;

    OAICity getCity() const;
    void setCity(const OAICity &city);
    bool is_city_Set() const;
    bool is_city_Valid() const;

    OAICountry getCountry() const;
    void setCountry(const OAICountry &country);
    bool is_country_Set() const;
    bool is_country_Valid() const;

    OAILocation getLocation() const;
    void setLocation(const OAILocation &location);
    bool is_location_Set() const;
    bool is_location_Valid() const;

    QMap<QString, QString> getNames() const;
    void setNames(const QMap<QString, QString> &names);
    bool is_names_Set() const;
    bool is_names_Valid() const;

    QString getPostalCode() const;
    void setPostalCode(const QString &postal_code);
    bool is_postal_code_Set() const;
    bool is_postal_code_Valid() const;

    OAIState getState() const;
    void setState(const OAIState &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAddress m_address;
    bool m_address_isSet;
    bool m_address_isValid;

    OAIArea m_area;
    bool m_area_isSet;
    bool m_area_isValid;

    OAICity m_city;
    bool m_city_isSet;
    bool m_city_isValid;

    OAICountry m_country;
    bool m_country_isSet;
    bool m_country_isValid;

    OAILocation m_location;
    bool m_location_isSet;
    bool m_location_isValid;

    QMap<QString, QString> m_names;
    bool m_names_isSet;
    bool m_names_isValid;

    QString m_postal_code;
    bool m_postal_code_isSet;
    bool m_postal_code_isValid;

    OAIState m_state;
    bool m_state_isSet;
    bool m_state_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPlace)

#endif // OAIPlace_H
