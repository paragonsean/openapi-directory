/**
 * ticketmaster publish api
 * Publish API
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPublicVisibility.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPublicVisibility::OAIPublicVisibility(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPublicVisibility::OAIPublicVisibility() {
    this->initializeModel();
}

OAIPublicVisibility::~OAIPublicVisibility() {}

void OAIPublicVisibility::initializeModel() {

    m_end_date_time_isSet = false;
    m_end_date_time_isValid = false;

    m_start_date_time_isSet = false;
    m_start_date_time_isValid = false;

    m_visible_isSet = false;
    m_visible_isValid = false;
}

void OAIPublicVisibility::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPublicVisibility::fromJsonObject(QJsonObject json) {

    m_end_date_time_isValid = ::OpenAPI::fromJsonValue(m_end_date_time, json[QString("endDateTime")]);
    m_end_date_time_isSet = !json[QString("endDateTime")].isNull() && m_end_date_time_isValid;

    m_start_date_time_isValid = ::OpenAPI::fromJsonValue(m_start_date_time, json[QString("startDateTime")]);
    m_start_date_time_isSet = !json[QString("startDateTime")].isNull() && m_start_date_time_isValid;

    m_visible_isValid = ::OpenAPI::fromJsonValue(m_visible, json[QString("visible")]);
    m_visible_isSet = !json[QString("visible")].isNull() && m_visible_isValid;
}

QString OAIPublicVisibility::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPublicVisibility::asJsonObject() const {
    QJsonObject obj;
    if (m_end_date_time_isSet) {
        obj.insert(QString("endDateTime"), ::OpenAPI::toJsonValue(m_end_date_time));
    }
    if (m_start_date_time_isSet) {
        obj.insert(QString("startDateTime"), ::OpenAPI::toJsonValue(m_start_date_time));
    }
    if (m_visible_isSet) {
        obj.insert(QString("visible"), ::OpenAPI::toJsonValue(m_visible));
    }
    return obj;
}

QDateTime OAIPublicVisibility::getEndDateTime() const {
    return m_end_date_time;
}
void OAIPublicVisibility::setEndDateTime(const QDateTime &end_date_time) {
    m_end_date_time = end_date_time;
    m_end_date_time_isSet = true;
}

bool OAIPublicVisibility::is_end_date_time_Set() const{
    return m_end_date_time_isSet;
}

bool OAIPublicVisibility::is_end_date_time_Valid() const{
    return m_end_date_time_isValid;
}

QDateTime OAIPublicVisibility::getStartDateTime() const {
    return m_start_date_time;
}
void OAIPublicVisibility::setStartDateTime(const QDateTime &start_date_time) {
    m_start_date_time = start_date_time;
    m_start_date_time_isSet = true;
}

bool OAIPublicVisibility::is_start_date_time_Set() const{
    return m_start_date_time_isSet;
}

bool OAIPublicVisibility::is_start_date_time_Valid() const{
    return m_start_date_time_isValid;
}

bool OAIPublicVisibility::isVisible() const {
    return m_visible;
}
void OAIPublicVisibility::setVisible(const bool &visible) {
    m_visible = visible;
    m_visible_isSet = true;
}

bool OAIPublicVisibility::is_visible_Set() const{
    return m_visible_isSet;
}

bool OAIPublicVisibility::is_visible_Valid() const{
    return m_visible_isValid;
}

bool OAIPublicVisibility::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_end_date_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_date_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_visible_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPublicVisibility::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
