/**
 * ticketmaster publish api
 * Publish API
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEventDates.h
 *
 * Event&#39;s Dates
 */

#ifndef OAIEventDates_H
#define OAIEventDates_H

#include <QJsonObject>

#include "OAIAccessDates.h"
#include "OAIEndDates.h"
#include "OAIEventStatus.h"
#include "OAIStartDates.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAccessDates;
class OAIEndDates;
class OAIStartDates;
class OAIEventStatus;

class OAIEventDates : public OAIObject {
public:
    OAIEventDates();
    OAIEventDates(QString json);
    ~OAIEventDates() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAccessDates getAccess() const;
    void setAccess(const OAIAccessDates &access);
    bool is_access_Set() const;
    bool is_access_Valid() const;

    OAIEndDates getEnd() const;
    void setEnd(const OAIEndDates &end);
    bool is_end_Set() const;
    bool is_end_Valid() const;

    OAIStartDates getStart() const;
    void setStart(const OAIStartDates &start);
    bool is_start_Set() const;
    bool is_start_Valid() const;

    OAIEventStatus getStatus() const;
    void setStatus(const OAIEventStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getTimezone() const;
    void setTimezone(const QString &timezone);
    bool is_timezone_Set() const;
    bool is_timezone_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAccessDates m_access;
    bool m_access_isSet;
    bool m_access_isValid;

    OAIEndDates m_end;
    bool m_end_isSet;
    bool m_end_isValid;

    OAIStartDates m_start;
    bool m_start_isSet;
    bool m_start_isValid;

    OAIEventStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_timezone;
    bool m_timezone_isSet;
    bool m_timezone_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEventDates)

#endif // OAIEventDates_H
