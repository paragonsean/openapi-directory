/**
 * ticketmaster publish api
 * Publish API
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVenue.h
 *
 * Venue
 */

#ifndef OAIVenue_H
#define OAIVenue_H

#include <QJsonObject>

#include "OAIAddress.h"
#include "OAICity.h"
#include "OAICountry.h"
#include "OAIDma.h"
#include "OAIImage.h"
#include "OAILocation.h"
#include "OAIMarket.h"
#include "OAIObject.h"
#include "OAISocial.h"
#include "OAISource.h"
#include "OAIState.h"
#include "OAIVenueBoxOfficeInfo.h"
#include "OAIVenueGeneralInfo.h"
#include <QList>
#include <QMap>
#include <QSet>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAddress;
class OAIVenueBoxOfficeInfo;
class OAICity;
class OAICountry;
class OAIDma;
class OAIVenueGeneralInfo;
class OAIImage;
class OAILocation;
class OAIMarket;
class OAISocial;
class OAISource;
class OAIState;

class OAIVenue : public OAIObject {
public:
    OAIVenue();
    OAIVenue(QString json);
    ~OAIVenue() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QMap<QString, QString> getAccessibleSeatingDetails() const;
    void setAccessibleSeatingDetails(const QMap<QString, QString> &accessible_seating_details);
    bool is_accessible_seating_details_Set() const;
    bool is_accessible_seating_details_Valid() const;

    bool isActive() const;
    void setActive(const bool &active);
    bool is_active_Set() const;
    bool is_active_Valid() const;

    QMap<QString, QString> getAdditionalInfos() const;
    void setAdditionalInfos(const QMap<QString, QString> &additional_infos);
    bool is_additional_infos_Set() const;
    bool is_additional_infos_Valid() const;

    OAIAddress getAddress() const;
    void setAddress(const OAIAddress &address);
    bool is_address_Set() const;
    bool is_address_Valid() const;

    OAIVenueBoxOfficeInfo getBoxOfficeInfo() const;
    void setBoxOfficeInfo(const OAIVenueBoxOfficeInfo &box_office_info);
    bool is_box_office_info_Set() const;
    bool is_box_office_info_Valid() const;

    OAICity getCity() const;
    void setCity(const OAICity &city);
    bool is_city_Set() const;
    bool is_city_Valid() const;

    OAICountry getCountry() const;
    void setCountry(const OAICountry &country);
    bool is_country_Set() const;
    bool is_country_Valid() const;

    QString getCurrency() const;
    void setCurrency(const QString &currency);
    bool is_currency_Set() const;
    bool is_currency_Valid() const;

    QMap<QString, QString> getDescriptions() const;
    void setDescriptions(const QMap<QString, QString> &descriptions);
    bool is_descriptions_Set() const;
    bool is_descriptions_Valid() const;

    bool isDiscoverable() const;
    void setDiscoverable(const bool &discoverable);
    bool is_discoverable_Set() const;
    bool is_discoverable_Valid() const;

    double getDistance() const;
    void setDistance(const double &distance);
    bool is_distance_Set() const;
    bool is_distance_Valid() const;

    QList<OAIDma> getDma() const;
    void setDma(const QList<OAIDma> &dma);
    bool is_dma_Set() const;
    bool is_dma_Valid() const;

    OAIVenueGeneralInfo getGeneralInfo() const;
    void setGeneralInfo(const OAIVenueGeneralInfo &general_info);
    bool is_general_info_Set() const;
    bool is_general_info_Valid() const;

    QSet<OAIImage> getImages() const;
    void setImages(const QSet<OAIImage> &images);
    bool is_images_Set() const;
    bool is_images_Valid() const;

    OAILocation getLocation() const;
    void setLocation(const OAILocation &location);
    bool is_location_Set() const;
    bool is_location_Valid() const;

    QList<OAIMarket> getMarkets() const;
    void setMarkets(const QList<OAIMarket> &markets);
    bool is_markets_Set() const;
    bool is_markets_Valid() const;

    QMap<QString, QString> getNames() const;
    void setNames(const QMap<QString, QString> &names);
    bool is_names_Set() const;
    bool is_names_Valid() const;

    QMap<QString, QString> getParkingDetails() const;
    void setParkingDetails(const QMap<QString, QString> &parking_details);
    bool is_parking_details_Set() const;
    bool is_parking_details_Valid() const;

    QString getPostalCode() const;
    void setPostalCode(const QString &postal_code);
    bool is_postal_code_Set() const;
    bool is_postal_code_Valid() const;

    QMap<QString, QString> getReferences() const;
    void setReferences(const QMap<QString, QString> &references);
    bool is_references_Set() const;
    bool is_references_Valid() const;

    QList<OAIObject> getRelationships() const;
    void setRelationships(const QList<OAIObject> &relationships);
    bool is_relationships_Set() const;
    bool is_relationships_Valid() const;

    OAISocial getSocial() const;
    void setSocial(const OAISocial &social);
    bool is_social_Set() const;
    bool is_social_Valid() const;

    OAISource getSource() const;
    void setSource(const OAISource &source);
    bool is_source_Set() const;
    bool is_source_Valid() const;

    OAIState getState() const;
    void setState(const OAIState &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    bool isTest() const;
    void setTest(const bool &test);
    bool is_test_Set() const;
    bool is_test_Valid() const;

    QString getTimezone() const;
    void setTimezone(const QString &timezone);
    bool is_timezone_Set() const;
    bool is_timezone_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getUnits() const;
    void setUnits(const QString &units);
    bool is_units_Set() const;
    bool is_units_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    qint64 getVersion() const;
    void setVersion(const qint64 &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QMap<QString, QString> m_accessible_seating_details;
    bool m_accessible_seating_details_isSet;
    bool m_accessible_seating_details_isValid;

    bool m_active;
    bool m_active_isSet;
    bool m_active_isValid;

    QMap<QString, QString> m_additional_infos;
    bool m_additional_infos_isSet;
    bool m_additional_infos_isValid;

    OAIAddress m_address;
    bool m_address_isSet;
    bool m_address_isValid;

    OAIVenueBoxOfficeInfo m_box_office_info;
    bool m_box_office_info_isSet;
    bool m_box_office_info_isValid;

    OAICity m_city;
    bool m_city_isSet;
    bool m_city_isValid;

    OAICountry m_country;
    bool m_country_isSet;
    bool m_country_isValid;

    QString m_currency;
    bool m_currency_isSet;
    bool m_currency_isValid;

    QMap<QString, QString> m_descriptions;
    bool m_descriptions_isSet;
    bool m_descriptions_isValid;

    bool m_discoverable;
    bool m_discoverable_isSet;
    bool m_discoverable_isValid;

    double m_distance;
    bool m_distance_isSet;
    bool m_distance_isValid;

    QList<OAIDma> m_dma;
    bool m_dma_isSet;
    bool m_dma_isValid;

    OAIVenueGeneralInfo m_general_info;
    bool m_general_info_isSet;
    bool m_general_info_isValid;

    QSet<OAIImage> m_images;
    bool m_images_isSet;
    bool m_images_isValid;

    OAILocation m_location;
    bool m_location_isSet;
    bool m_location_isValid;

    QList<OAIMarket> m_markets;
    bool m_markets_isSet;
    bool m_markets_isValid;

    QMap<QString, QString> m_names;
    bool m_names_isSet;
    bool m_names_isValid;

    QMap<QString, QString> m_parking_details;
    bool m_parking_details_isSet;
    bool m_parking_details_isValid;

    QString m_postal_code;
    bool m_postal_code_isSet;
    bool m_postal_code_isValid;

    QMap<QString, QString> m_references;
    bool m_references_isSet;
    bool m_references_isValid;

    QList<OAIObject> m_relationships;
    bool m_relationships_isSet;
    bool m_relationships_isValid;

    OAISocial m_social;
    bool m_social_isSet;
    bool m_social_isValid;

    OAISource m_source;
    bool m_source_isSet;
    bool m_source_isValid;

    OAIState m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    bool m_test;
    bool m_test_isSet;
    bool m_test_isValid;

    QString m_timezone;
    bool m_timezone_isSet;
    bool m_timezone_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_units;
    bool m_units_isSet;
    bool m_units_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;

    qint64 m_version;
    bool m_version_isSet;
    bool m_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVenue)

#endif // OAIVenue_H
