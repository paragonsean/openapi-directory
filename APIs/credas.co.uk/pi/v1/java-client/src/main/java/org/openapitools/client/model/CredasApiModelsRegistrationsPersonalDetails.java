/*
 * Credas API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.CredasApiModelsDataCheckAddress;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CredasApiModelsRegistrationsPersonalDetails
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:30:15.246346-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CredasApiModelsRegistrationsPersonalDetails {
  public static final String SERIALIZED_NAME_ADDRESS = "address";
  @SerializedName(SERIALIZED_NAME_ADDRESS)
  private CredasApiModelsDataCheckAddress address;

  public static final String SERIALIZED_NAME_DATE_OF_BIRTH = "dateOfBirth";
  @SerializedName(SERIALIZED_NAME_DATE_OF_BIRTH)
  private OffsetDateTime dateOfBirth;

  public static final String SERIALIZED_NAME_FORENAME = "forename";
  @SerializedName(SERIALIZED_NAME_FORENAME)
  private String forename;

  public static final String SERIALIZED_NAME_SURNAME = "surname";
  @SerializedName(SERIALIZED_NAME_SURNAME)
  private String surname;

  public CredasApiModelsRegistrationsPersonalDetails() {
  }

  public CredasApiModelsRegistrationsPersonalDetails address(CredasApiModelsDataCheckAddress address) {
    this.address = address;
    return this;
  }

  /**
   * Get address
   * @return address
   */
  @javax.annotation.Nullable
  public CredasApiModelsDataCheckAddress getAddress() {
    return address;
  }

  public void setAddress(CredasApiModelsDataCheckAddress address) {
    this.address = address;
  }


  public CredasApiModelsRegistrationsPersonalDetails dateOfBirth(OffsetDateTime dateOfBirth) {
    this.dateOfBirth = dateOfBirth;
    return this;
  }

  /**
   * Get dateOfBirth
   * @return dateOfBirth
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDateOfBirth() {
    return dateOfBirth;
  }

  public void setDateOfBirth(OffsetDateTime dateOfBirth) {
    this.dateOfBirth = dateOfBirth;
  }


  public CredasApiModelsRegistrationsPersonalDetails forename(String forename) {
    this.forename = forename;
    return this;
  }

  /**
   * Get forename
   * @return forename
   */
  @javax.annotation.Nullable
  public String getForename() {
    return forename;
  }

  public void setForename(String forename) {
    this.forename = forename;
  }


  public CredasApiModelsRegistrationsPersonalDetails surname(String surname) {
    this.surname = surname;
    return this;
  }

  /**
   * Get surname
   * @return surname
   */
  @javax.annotation.Nullable
  public String getSurname() {
    return surname;
  }

  public void setSurname(String surname) {
    this.surname = surname;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CredasApiModelsRegistrationsPersonalDetails credasApiModelsRegistrationsPersonalDetails = (CredasApiModelsRegistrationsPersonalDetails) o;
    return Objects.equals(this.address, credasApiModelsRegistrationsPersonalDetails.address) &&
        Objects.equals(this.dateOfBirth, credasApiModelsRegistrationsPersonalDetails.dateOfBirth) &&
        Objects.equals(this.forename, credasApiModelsRegistrationsPersonalDetails.forename) &&
        Objects.equals(this.surname, credasApiModelsRegistrationsPersonalDetails.surname);
  }

  @Override
  public int hashCode() {
    return Objects.hash(address, dateOfBirth, forename, surname);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CredasApiModelsRegistrationsPersonalDetails {\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    dateOfBirth: ").append(toIndentedString(dateOfBirth)).append("\n");
    sb.append("    forename: ").append(toIndentedString(forename)).append("\n");
    sb.append("    surname: ").append(toIndentedString(surname)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("address");
    openapiFields.add("dateOfBirth");
    openapiFields.add("forename");
    openapiFields.add("surname");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CredasApiModelsRegistrationsPersonalDetails
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CredasApiModelsRegistrationsPersonalDetails.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CredasApiModelsRegistrationsPersonalDetails is not found in the empty JSON string", CredasApiModelsRegistrationsPersonalDetails.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CredasApiModelsRegistrationsPersonalDetails.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CredasApiModelsRegistrationsPersonalDetails` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `address`
      if (jsonObj.get("address") != null && !jsonObj.get("address").isJsonNull()) {
        CredasApiModelsDataCheckAddress.validateJsonElement(jsonObj.get("address"));
      }
      if ((jsonObj.get("forename") != null && !jsonObj.get("forename").isJsonNull()) && !jsonObj.get("forename").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `forename` to be a primitive type in the JSON string but got `%s`", jsonObj.get("forename").toString()));
      }
      if ((jsonObj.get("surname") != null && !jsonObj.get("surname").isJsonNull()) && !jsonObj.get("surname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `surname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("surname").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CredasApiModelsRegistrationsPersonalDetails.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CredasApiModelsRegistrationsPersonalDetails' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CredasApiModelsRegistrationsPersonalDetails> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CredasApiModelsRegistrationsPersonalDetails.class));

       return (TypeAdapter<T>) new TypeAdapter<CredasApiModelsRegistrationsPersonalDetails>() {
           @Override
           public void write(JsonWriter out, CredasApiModelsRegistrationsPersonalDetails value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CredasApiModelsRegistrationsPersonalDetails read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CredasApiModelsRegistrationsPersonalDetails given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CredasApiModelsRegistrationsPersonalDetails
   * @throws IOException if the JSON string is invalid with respect to CredasApiModelsRegistrationsPersonalDetails
   */
  public static CredasApiModelsRegistrationsPersonalDetails fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CredasApiModelsRegistrationsPersonalDetails.class);
  }

  /**
   * Convert an instance of CredasApiModelsRegistrationsPersonalDetails to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

