/*
 * Credas API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CredasApiModelsDataCheckAddress;
import org.openapitools.client.model.CredasApiModelsDataCheckPerson;
import org.openapitools.client.model.CredasApiModelsStatusChecksCCJCcjResult;
import org.openapitools.client.model.CredasApiModelsStatusChecksCompanyDirectorCompanyDirectorResult;
import org.openapitools.client.model.CredasApiModelsStatusChecksInsolvencyInsolvencyResult;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CredasApiModelsStatusChecksStatusCheck
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:30:15.246346-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CredasApiModelsStatusChecksStatusCheck {
  public static final String SERIALIZED_NAME_ADDRESS = "address";
  @SerializedName(SERIALIZED_NAME_ADDRESS)
  private CredasApiModelsDataCheckAddress address;

  public static final String SERIALIZED_NAME_CCJ = "ccj";
  @SerializedName(SERIALIZED_NAME_CCJ)
  private List<CredasApiModelsStatusChecksCCJCcjResult> ccj = new ArrayList<>();

  public static final String SERIALIZED_NAME_CHECK_DATE = "checkDate";
  @SerializedName(SERIALIZED_NAME_CHECK_DATE)
  private OffsetDateTime checkDate;

  public static final String SERIALIZED_NAME_COMPANY_DIRECTOR = "companyDirector";
  @SerializedName(SERIALIZED_NAME_COMPANY_DIRECTOR)
  private List<CredasApiModelsStatusChecksCompanyDirectorCompanyDirectorResult> companyDirector = new ArrayList<>();

  public static final String SERIALIZED_NAME_HAS_BEEN_OVERRIDDEN = "hasBeenOverridden";
  @SerializedName(SERIALIZED_NAME_HAS_BEEN_OVERRIDDEN)
  private Boolean hasBeenOverridden;

  public static final String SERIALIZED_NAME_INSOLVENCY = "insolvency";
  @SerializedName(SERIALIZED_NAME_INSOLVENCY)
  private List<CredasApiModelsStatusChecksInsolvencyInsolvencyResult> insolvency = new ArrayList<>();

  public static final String SERIALIZED_NAME_PERSON = "person";
  @SerializedName(SERIALIZED_NAME_PERSON)
  private CredasApiModelsDataCheckPerson person;

  /**
   * Unknown &#x3D; 0, Pass &#x3D; 1, Refer &#x3D; 2, Fail &#x3D; 3
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    NUMBER_0(0),
    
    NUMBER_1(1),
    
    NUMBER_2(2),
    
    NUMBER_3(3);

    private Integer value;

    StatusEnum(Integer value) {
      this.value = value;
    }

    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(Integer value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        Integer value =  jsonReader.nextInt();
        return StatusEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      Integer value = jsonElement.getAsInt();
      StatusEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private StatusEnum status;

  public CredasApiModelsStatusChecksStatusCheck() {
  }

  public CredasApiModelsStatusChecksStatusCheck address(CredasApiModelsDataCheckAddress address) {
    this.address = address;
    return this;
  }

  /**
   * Get address
   * @return address
   */
  @javax.annotation.Nullable
  public CredasApiModelsDataCheckAddress getAddress() {
    return address;
  }

  public void setAddress(CredasApiModelsDataCheckAddress address) {
    this.address = address;
  }


  public CredasApiModelsStatusChecksStatusCheck ccj(List<CredasApiModelsStatusChecksCCJCcjResult> ccj) {
    this.ccj = ccj;
    return this;
  }

  public CredasApiModelsStatusChecksStatusCheck addCcjItem(CredasApiModelsStatusChecksCCJCcjResult ccjItem) {
    if (this.ccj == null) {
      this.ccj = new ArrayList<>();
    }
    this.ccj.add(ccjItem);
    return this;
  }

  /**
   * Get ccj
   * @return ccj
   */
  @javax.annotation.Nullable
  public List<CredasApiModelsStatusChecksCCJCcjResult> getCcj() {
    return ccj;
  }

  public void setCcj(List<CredasApiModelsStatusChecksCCJCcjResult> ccj) {
    this.ccj = ccj;
  }


  public CredasApiModelsStatusChecksStatusCheck checkDate(OffsetDateTime checkDate) {
    this.checkDate = checkDate;
    return this;
  }

  /**
   * Get checkDate
   * @return checkDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCheckDate() {
    return checkDate;
  }

  public void setCheckDate(OffsetDateTime checkDate) {
    this.checkDate = checkDate;
  }


  public CredasApiModelsStatusChecksStatusCheck companyDirector(List<CredasApiModelsStatusChecksCompanyDirectorCompanyDirectorResult> companyDirector) {
    this.companyDirector = companyDirector;
    return this;
  }

  public CredasApiModelsStatusChecksStatusCheck addCompanyDirectorItem(CredasApiModelsStatusChecksCompanyDirectorCompanyDirectorResult companyDirectorItem) {
    if (this.companyDirector == null) {
      this.companyDirector = new ArrayList<>();
    }
    this.companyDirector.add(companyDirectorItem);
    return this;
  }

  /**
   * Get companyDirector
   * @return companyDirector
   */
  @javax.annotation.Nullable
  public List<CredasApiModelsStatusChecksCompanyDirectorCompanyDirectorResult> getCompanyDirector() {
    return companyDirector;
  }

  public void setCompanyDirector(List<CredasApiModelsStatusChecksCompanyDirectorCompanyDirectorResult> companyDirector) {
    this.companyDirector = companyDirector;
  }


  public CredasApiModelsStatusChecksStatusCheck hasBeenOverridden(Boolean hasBeenOverridden) {
    this.hasBeenOverridden = hasBeenOverridden;
    return this;
  }

  /**
   * Get hasBeenOverridden
   * @return hasBeenOverridden
   */
  @javax.annotation.Nullable
  public Boolean getHasBeenOverridden() {
    return hasBeenOverridden;
  }

  public void setHasBeenOverridden(Boolean hasBeenOverridden) {
    this.hasBeenOverridden = hasBeenOverridden;
  }


  public CredasApiModelsStatusChecksStatusCheck insolvency(List<CredasApiModelsStatusChecksInsolvencyInsolvencyResult> insolvency) {
    this.insolvency = insolvency;
    return this;
  }

  public CredasApiModelsStatusChecksStatusCheck addInsolvencyItem(CredasApiModelsStatusChecksInsolvencyInsolvencyResult insolvencyItem) {
    if (this.insolvency == null) {
      this.insolvency = new ArrayList<>();
    }
    this.insolvency.add(insolvencyItem);
    return this;
  }

  /**
   * Get insolvency
   * @return insolvency
   */
  @javax.annotation.Nullable
  public List<CredasApiModelsStatusChecksInsolvencyInsolvencyResult> getInsolvency() {
    return insolvency;
  }

  public void setInsolvency(List<CredasApiModelsStatusChecksInsolvencyInsolvencyResult> insolvency) {
    this.insolvency = insolvency;
  }


  public CredasApiModelsStatusChecksStatusCheck person(CredasApiModelsDataCheckPerson person) {
    this.person = person;
    return this;
  }

  /**
   * Get person
   * @return person
   */
  @javax.annotation.Nullable
  public CredasApiModelsDataCheckPerson getPerson() {
    return person;
  }

  public void setPerson(CredasApiModelsDataCheckPerson person) {
    this.person = person;
  }


  public CredasApiModelsStatusChecksStatusCheck status(StatusEnum status) {
    this.status = status;
    return this;
  }

  /**
   * Unknown &#x3D; 0, Pass &#x3D; 1, Refer &#x3D; 2, Fail &#x3D; 3
   * @return status
   */
  @javax.annotation.Nullable
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CredasApiModelsStatusChecksStatusCheck credasApiModelsStatusChecksStatusCheck = (CredasApiModelsStatusChecksStatusCheck) o;
    return Objects.equals(this.address, credasApiModelsStatusChecksStatusCheck.address) &&
        Objects.equals(this.ccj, credasApiModelsStatusChecksStatusCheck.ccj) &&
        Objects.equals(this.checkDate, credasApiModelsStatusChecksStatusCheck.checkDate) &&
        Objects.equals(this.companyDirector, credasApiModelsStatusChecksStatusCheck.companyDirector) &&
        Objects.equals(this.hasBeenOverridden, credasApiModelsStatusChecksStatusCheck.hasBeenOverridden) &&
        Objects.equals(this.insolvency, credasApiModelsStatusChecksStatusCheck.insolvency) &&
        Objects.equals(this.person, credasApiModelsStatusChecksStatusCheck.person) &&
        Objects.equals(this.status, credasApiModelsStatusChecksStatusCheck.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(address, ccj, checkDate, companyDirector, hasBeenOverridden, insolvency, person, status);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CredasApiModelsStatusChecksStatusCheck {\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    ccj: ").append(toIndentedString(ccj)).append("\n");
    sb.append("    checkDate: ").append(toIndentedString(checkDate)).append("\n");
    sb.append("    companyDirector: ").append(toIndentedString(companyDirector)).append("\n");
    sb.append("    hasBeenOverridden: ").append(toIndentedString(hasBeenOverridden)).append("\n");
    sb.append("    insolvency: ").append(toIndentedString(insolvency)).append("\n");
    sb.append("    person: ").append(toIndentedString(person)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("address");
    openapiFields.add("ccj");
    openapiFields.add("checkDate");
    openapiFields.add("companyDirector");
    openapiFields.add("hasBeenOverridden");
    openapiFields.add("insolvency");
    openapiFields.add("person");
    openapiFields.add("status");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CredasApiModelsStatusChecksStatusCheck
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CredasApiModelsStatusChecksStatusCheck.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CredasApiModelsStatusChecksStatusCheck is not found in the empty JSON string", CredasApiModelsStatusChecksStatusCheck.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CredasApiModelsStatusChecksStatusCheck.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CredasApiModelsStatusChecksStatusCheck` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `address`
      if (jsonObj.get("address") != null && !jsonObj.get("address").isJsonNull()) {
        CredasApiModelsDataCheckAddress.validateJsonElement(jsonObj.get("address"));
      }
      if (jsonObj.get("ccj") != null && !jsonObj.get("ccj").isJsonNull()) {
        JsonArray jsonArrayccj = jsonObj.getAsJsonArray("ccj");
        if (jsonArrayccj != null) {
          // ensure the json data is an array
          if (!jsonObj.get("ccj").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `ccj` to be an array in the JSON string but got `%s`", jsonObj.get("ccj").toString()));
          }

          // validate the optional field `ccj` (array)
          for (int i = 0; i < jsonArrayccj.size(); i++) {
            CredasApiModelsStatusChecksCCJCcjResult.validateJsonElement(jsonArrayccj.get(i));
          };
        }
      }
      if (jsonObj.get("companyDirector") != null && !jsonObj.get("companyDirector").isJsonNull()) {
        JsonArray jsonArraycompanyDirector = jsonObj.getAsJsonArray("companyDirector");
        if (jsonArraycompanyDirector != null) {
          // ensure the json data is an array
          if (!jsonObj.get("companyDirector").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `companyDirector` to be an array in the JSON string but got `%s`", jsonObj.get("companyDirector").toString()));
          }

          // validate the optional field `companyDirector` (array)
          for (int i = 0; i < jsonArraycompanyDirector.size(); i++) {
            CredasApiModelsStatusChecksCompanyDirectorCompanyDirectorResult.validateJsonElement(jsonArraycompanyDirector.get(i));
          };
        }
      }
      if (jsonObj.get("insolvency") != null && !jsonObj.get("insolvency").isJsonNull()) {
        JsonArray jsonArrayinsolvency = jsonObj.getAsJsonArray("insolvency");
        if (jsonArrayinsolvency != null) {
          // ensure the json data is an array
          if (!jsonObj.get("insolvency").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `insolvency` to be an array in the JSON string but got `%s`", jsonObj.get("insolvency").toString()));
          }

          // validate the optional field `insolvency` (array)
          for (int i = 0; i < jsonArrayinsolvency.size(); i++) {
            CredasApiModelsStatusChecksInsolvencyInsolvencyResult.validateJsonElement(jsonArrayinsolvency.get(i));
          };
        }
      }
      // validate the optional field `person`
      if (jsonObj.get("person") != null && !jsonObj.get("person").isJsonNull()) {
        CredasApiModelsDataCheckPerson.validateJsonElement(jsonObj.get("person"));
      }
      // validate the optional field `status`
      if (jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) {
        StatusEnum.validateJsonElement(jsonObj.get("status"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CredasApiModelsStatusChecksStatusCheck.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CredasApiModelsStatusChecksStatusCheck' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CredasApiModelsStatusChecksStatusCheck> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CredasApiModelsStatusChecksStatusCheck.class));

       return (TypeAdapter<T>) new TypeAdapter<CredasApiModelsStatusChecksStatusCheck>() {
           @Override
           public void write(JsonWriter out, CredasApiModelsStatusChecksStatusCheck value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CredasApiModelsStatusChecksStatusCheck read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CredasApiModelsStatusChecksStatusCheck given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CredasApiModelsStatusChecksStatusCheck
   * @throws IOException if the JSON string is invalid with respect to CredasApiModelsStatusChecksStatusCheck
   */
  public static CredasApiModelsStatusChecksStatusCheck fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CredasApiModelsStatusChecksStatusCheck.class);
  }

  /**
   * Convert an instance of CredasApiModelsStatusChecksStatusCheck to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

