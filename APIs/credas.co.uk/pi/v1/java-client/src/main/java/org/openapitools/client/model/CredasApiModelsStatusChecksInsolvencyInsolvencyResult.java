/*
 * Credas API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.CredasApiModelsStatusChecksInsolvencyAddress;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CredasApiModelsStatusChecksInsolvencyInsolvencyResult
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:30:15.246346-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CredasApiModelsStatusChecksInsolvencyInsolvencyResult {
  public static final String SERIALIZED_NAME_ADDRESS = "address";
  @SerializedName(SERIALIZED_NAME_ADDRESS)
  private CredasApiModelsStatusChecksInsolvencyAddress address;

  public static final String SERIALIZED_NAME_ALIASES = "aliases";
  @SerializedName(SERIALIZED_NAME_ALIASES)
  private String aliases;

  public static final String SERIALIZED_NAME_ASSET_TOTAL = "assetTotal";
  @SerializedName(SERIALIZED_NAME_ASSET_TOTAL)
  private String assetTotal;

  public static final String SERIALIZED_NAME_CASE_NO = "caseNo";
  @SerializedName(SERIALIZED_NAME_CASE_NO)
  private String caseNo;

  public static final String SERIALIZED_NAME_CASE_TYPE = "caseType";
  @SerializedName(SERIALIZED_NAME_CASE_TYPE)
  private String caseType;

  public static final String SERIALIZED_NAME_COURT = "court";
  @SerializedName(SERIALIZED_NAME_COURT)
  private String court;

  public static final String SERIALIZED_NAME_DEBT_TOTAL = "debtTotal";
  @SerializedName(SERIALIZED_NAME_DEBT_TOTAL)
  private String debtTotal;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_DOB = "dob";
  @SerializedName(SERIALIZED_NAME_DOB)
  private OffsetDateTime dob;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_OCCUPATION = "occupation";
  @SerializedName(SERIALIZED_NAME_OCCUPATION)
  private String occupation;

  public static final String SERIALIZED_NAME_PRESENTATION_DATE = "presentationDate";
  @SerializedName(SERIALIZED_NAME_PRESENTATION_DATE)
  private OffsetDateTime presentationDate;

  public static final String SERIALIZED_NAME_PREVIOUS_ADDRESS = "previousAddress";
  @SerializedName(SERIALIZED_NAME_PREVIOUS_ADDRESS)
  private CredasApiModelsStatusChecksInsolvencyAddress previousAddress;

  public static final String SERIALIZED_NAME_SERVICE_OFFICE = "serviceOffice";
  @SerializedName(SERIALIZED_NAME_SERVICE_OFFICE)
  private String serviceOffice;

  public static final String SERIALIZED_NAME_START_DATE = "startDate";
  @SerializedName(SERIALIZED_NAME_START_DATE)
  private OffsetDateTime startDate;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_TELEPHONE_NUMBER = "telephoneNumber";
  @SerializedName(SERIALIZED_NAME_TELEPHONE_NUMBER)
  private String telephoneNumber;

  public static final String SERIALIZED_NAME_TRADING_NAMES = "tradingNames";
  @SerializedName(SERIALIZED_NAME_TRADING_NAMES)
  private String tradingNames;

  /**
   * Unknown &#x3D; 0, NorthernIrelandBankruptcy &#x3D; 1, ScottishSequestrationBankruptcy &#x3D; 2, EnglandAndWalesIVA &#x3D; 3, EnglandAndWalesDRO &#x3D; 4, EnglandAndWalesBankruptcy &#x3D; 5
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    NUMBER_0(0),
    
    NUMBER_1(1),
    
    NUMBER_2(2),
    
    NUMBER_3(3),
    
    NUMBER_4(4),
    
    NUMBER_5(5);

    private Integer value;

    TypeEnum(Integer value) {
      this.value = value;
    }

    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(Integer value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        Integer value =  jsonReader.nextInt();
        return TypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      Integer value = jsonElement.getAsInt();
      TypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private TypeEnum type;

  public static final String SERIALIZED_NAME_TYPE_TEXT = "typeText";
  @SerializedName(SERIALIZED_NAME_TYPE_TEXT)
  private String typeText;

  public CredasApiModelsStatusChecksInsolvencyInsolvencyResult() {
  }

  public CredasApiModelsStatusChecksInsolvencyInsolvencyResult(
     String typeText
  ) {
    this();
    this.typeText = typeText;
  }

  public CredasApiModelsStatusChecksInsolvencyInsolvencyResult address(CredasApiModelsStatusChecksInsolvencyAddress address) {
    this.address = address;
    return this;
  }

  /**
   * Get address
   * @return address
   */
  @javax.annotation.Nullable
  public CredasApiModelsStatusChecksInsolvencyAddress getAddress() {
    return address;
  }

  public void setAddress(CredasApiModelsStatusChecksInsolvencyAddress address) {
    this.address = address;
  }


  public CredasApiModelsStatusChecksInsolvencyInsolvencyResult aliases(String aliases) {
    this.aliases = aliases;
    return this;
  }

  /**
   * Get aliases
   * @return aliases
   */
  @javax.annotation.Nullable
  public String getAliases() {
    return aliases;
  }

  public void setAliases(String aliases) {
    this.aliases = aliases;
  }


  public CredasApiModelsStatusChecksInsolvencyInsolvencyResult assetTotal(String assetTotal) {
    this.assetTotal = assetTotal;
    return this;
  }

  /**
   * Get assetTotal
   * @return assetTotal
   */
  @javax.annotation.Nullable
  public String getAssetTotal() {
    return assetTotal;
  }

  public void setAssetTotal(String assetTotal) {
    this.assetTotal = assetTotal;
  }


  public CredasApiModelsStatusChecksInsolvencyInsolvencyResult caseNo(String caseNo) {
    this.caseNo = caseNo;
    return this;
  }

  /**
   * Get caseNo
   * @return caseNo
   */
  @javax.annotation.Nullable
  public String getCaseNo() {
    return caseNo;
  }

  public void setCaseNo(String caseNo) {
    this.caseNo = caseNo;
  }


  public CredasApiModelsStatusChecksInsolvencyInsolvencyResult caseType(String caseType) {
    this.caseType = caseType;
    return this;
  }

  /**
   * Get caseType
   * @return caseType
   */
  @javax.annotation.Nullable
  public String getCaseType() {
    return caseType;
  }

  public void setCaseType(String caseType) {
    this.caseType = caseType;
  }


  public CredasApiModelsStatusChecksInsolvencyInsolvencyResult court(String court) {
    this.court = court;
    return this;
  }

  /**
   * Get court
   * @return court
   */
  @javax.annotation.Nullable
  public String getCourt() {
    return court;
  }

  public void setCourt(String court) {
    this.court = court;
  }


  public CredasApiModelsStatusChecksInsolvencyInsolvencyResult debtTotal(String debtTotal) {
    this.debtTotal = debtTotal;
    return this;
  }

  /**
   * Get debtTotal
   * @return debtTotal
   */
  @javax.annotation.Nullable
  public String getDebtTotal() {
    return debtTotal;
  }

  public void setDebtTotal(String debtTotal) {
    this.debtTotal = debtTotal;
  }


  public CredasApiModelsStatusChecksInsolvencyInsolvencyResult description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public CredasApiModelsStatusChecksInsolvencyInsolvencyResult dob(OffsetDateTime dob) {
    this.dob = dob;
    return this;
  }

  /**
   * Get dob
   * @return dob
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDob() {
    return dob;
  }

  public void setDob(OffsetDateTime dob) {
    this.dob = dob;
  }


  public CredasApiModelsStatusChecksInsolvencyInsolvencyResult name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public CredasApiModelsStatusChecksInsolvencyInsolvencyResult occupation(String occupation) {
    this.occupation = occupation;
    return this;
  }

  /**
   * Get occupation
   * @return occupation
   */
  @javax.annotation.Nullable
  public String getOccupation() {
    return occupation;
  }

  public void setOccupation(String occupation) {
    this.occupation = occupation;
  }


  public CredasApiModelsStatusChecksInsolvencyInsolvencyResult presentationDate(OffsetDateTime presentationDate) {
    this.presentationDate = presentationDate;
    return this;
  }

  /**
   * Get presentationDate
   * @return presentationDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getPresentationDate() {
    return presentationDate;
  }

  public void setPresentationDate(OffsetDateTime presentationDate) {
    this.presentationDate = presentationDate;
  }


  public CredasApiModelsStatusChecksInsolvencyInsolvencyResult previousAddress(CredasApiModelsStatusChecksInsolvencyAddress previousAddress) {
    this.previousAddress = previousAddress;
    return this;
  }

  /**
   * Get previousAddress
   * @return previousAddress
   */
  @javax.annotation.Nullable
  public CredasApiModelsStatusChecksInsolvencyAddress getPreviousAddress() {
    return previousAddress;
  }

  public void setPreviousAddress(CredasApiModelsStatusChecksInsolvencyAddress previousAddress) {
    this.previousAddress = previousAddress;
  }


  public CredasApiModelsStatusChecksInsolvencyInsolvencyResult serviceOffice(String serviceOffice) {
    this.serviceOffice = serviceOffice;
    return this;
  }

  /**
   * Get serviceOffice
   * @return serviceOffice
   */
  @javax.annotation.Nullable
  public String getServiceOffice() {
    return serviceOffice;
  }

  public void setServiceOffice(String serviceOffice) {
    this.serviceOffice = serviceOffice;
  }


  public CredasApiModelsStatusChecksInsolvencyInsolvencyResult startDate(OffsetDateTime startDate) {
    this.startDate = startDate;
    return this;
  }

  /**
   * Get startDate
   * @return startDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getStartDate() {
    return startDate;
  }

  public void setStartDate(OffsetDateTime startDate) {
    this.startDate = startDate;
  }


  public CredasApiModelsStatusChecksInsolvencyInsolvencyResult status(String status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }


  public CredasApiModelsStatusChecksInsolvencyInsolvencyResult telephoneNumber(String telephoneNumber) {
    this.telephoneNumber = telephoneNumber;
    return this;
  }

  /**
   * Get telephoneNumber
   * @return telephoneNumber
   */
  @javax.annotation.Nullable
  public String getTelephoneNumber() {
    return telephoneNumber;
  }

  public void setTelephoneNumber(String telephoneNumber) {
    this.telephoneNumber = telephoneNumber;
  }


  public CredasApiModelsStatusChecksInsolvencyInsolvencyResult tradingNames(String tradingNames) {
    this.tradingNames = tradingNames;
    return this;
  }

  /**
   * Get tradingNames
   * @return tradingNames
   */
  @javax.annotation.Nullable
  public String getTradingNames() {
    return tradingNames;
  }

  public void setTradingNames(String tradingNames) {
    this.tradingNames = tradingNames;
  }


  public CredasApiModelsStatusChecksInsolvencyInsolvencyResult type(TypeEnum type) {
    this.type = type;
    return this;
  }

  /**
   * Unknown &#x3D; 0, NorthernIrelandBankruptcy &#x3D; 1, ScottishSequestrationBankruptcy &#x3D; 2, EnglandAndWalesIVA &#x3D; 3, EnglandAndWalesDRO &#x3D; 4, EnglandAndWalesBankruptcy &#x3D; 5
   * @return type
   */
  @javax.annotation.Nullable
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }


  /**
   * Get typeText
   * @return typeText
   */
  @javax.annotation.Nullable
  public String getTypeText() {
    return typeText;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CredasApiModelsStatusChecksInsolvencyInsolvencyResult credasApiModelsStatusChecksInsolvencyInsolvencyResult = (CredasApiModelsStatusChecksInsolvencyInsolvencyResult) o;
    return Objects.equals(this.address, credasApiModelsStatusChecksInsolvencyInsolvencyResult.address) &&
        Objects.equals(this.aliases, credasApiModelsStatusChecksInsolvencyInsolvencyResult.aliases) &&
        Objects.equals(this.assetTotal, credasApiModelsStatusChecksInsolvencyInsolvencyResult.assetTotal) &&
        Objects.equals(this.caseNo, credasApiModelsStatusChecksInsolvencyInsolvencyResult.caseNo) &&
        Objects.equals(this.caseType, credasApiModelsStatusChecksInsolvencyInsolvencyResult.caseType) &&
        Objects.equals(this.court, credasApiModelsStatusChecksInsolvencyInsolvencyResult.court) &&
        Objects.equals(this.debtTotal, credasApiModelsStatusChecksInsolvencyInsolvencyResult.debtTotal) &&
        Objects.equals(this.description, credasApiModelsStatusChecksInsolvencyInsolvencyResult.description) &&
        Objects.equals(this.dob, credasApiModelsStatusChecksInsolvencyInsolvencyResult.dob) &&
        Objects.equals(this.name, credasApiModelsStatusChecksInsolvencyInsolvencyResult.name) &&
        Objects.equals(this.occupation, credasApiModelsStatusChecksInsolvencyInsolvencyResult.occupation) &&
        Objects.equals(this.presentationDate, credasApiModelsStatusChecksInsolvencyInsolvencyResult.presentationDate) &&
        Objects.equals(this.previousAddress, credasApiModelsStatusChecksInsolvencyInsolvencyResult.previousAddress) &&
        Objects.equals(this.serviceOffice, credasApiModelsStatusChecksInsolvencyInsolvencyResult.serviceOffice) &&
        Objects.equals(this.startDate, credasApiModelsStatusChecksInsolvencyInsolvencyResult.startDate) &&
        Objects.equals(this.status, credasApiModelsStatusChecksInsolvencyInsolvencyResult.status) &&
        Objects.equals(this.telephoneNumber, credasApiModelsStatusChecksInsolvencyInsolvencyResult.telephoneNumber) &&
        Objects.equals(this.tradingNames, credasApiModelsStatusChecksInsolvencyInsolvencyResult.tradingNames) &&
        Objects.equals(this.type, credasApiModelsStatusChecksInsolvencyInsolvencyResult.type) &&
        Objects.equals(this.typeText, credasApiModelsStatusChecksInsolvencyInsolvencyResult.typeText);
  }

  @Override
  public int hashCode() {
    return Objects.hash(address, aliases, assetTotal, caseNo, caseType, court, debtTotal, description, dob, name, occupation, presentationDate, previousAddress, serviceOffice, startDate, status, telephoneNumber, tradingNames, type, typeText);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CredasApiModelsStatusChecksInsolvencyInsolvencyResult {\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    aliases: ").append(toIndentedString(aliases)).append("\n");
    sb.append("    assetTotal: ").append(toIndentedString(assetTotal)).append("\n");
    sb.append("    caseNo: ").append(toIndentedString(caseNo)).append("\n");
    sb.append("    caseType: ").append(toIndentedString(caseType)).append("\n");
    sb.append("    court: ").append(toIndentedString(court)).append("\n");
    sb.append("    debtTotal: ").append(toIndentedString(debtTotal)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    dob: ").append(toIndentedString(dob)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    occupation: ").append(toIndentedString(occupation)).append("\n");
    sb.append("    presentationDate: ").append(toIndentedString(presentationDate)).append("\n");
    sb.append("    previousAddress: ").append(toIndentedString(previousAddress)).append("\n");
    sb.append("    serviceOffice: ").append(toIndentedString(serviceOffice)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    telephoneNumber: ").append(toIndentedString(telephoneNumber)).append("\n");
    sb.append("    tradingNames: ").append(toIndentedString(tradingNames)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    typeText: ").append(toIndentedString(typeText)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("address");
    openapiFields.add("aliases");
    openapiFields.add("assetTotal");
    openapiFields.add("caseNo");
    openapiFields.add("caseType");
    openapiFields.add("court");
    openapiFields.add("debtTotal");
    openapiFields.add("description");
    openapiFields.add("dob");
    openapiFields.add("name");
    openapiFields.add("occupation");
    openapiFields.add("presentationDate");
    openapiFields.add("previousAddress");
    openapiFields.add("serviceOffice");
    openapiFields.add("startDate");
    openapiFields.add("status");
    openapiFields.add("telephoneNumber");
    openapiFields.add("tradingNames");
    openapiFields.add("type");
    openapiFields.add("typeText");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CredasApiModelsStatusChecksInsolvencyInsolvencyResult
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CredasApiModelsStatusChecksInsolvencyInsolvencyResult.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CredasApiModelsStatusChecksInsolvencyInsolvencyResult is not found in the empty JSON string", CredasApiModelsStatusChecksInsolvencyInsolvencyResult.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CredasApiModelsStatusChecksInsolvencyInsolvencyResult.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CredasApiModelsStatusChecksInsolvencyInsolvencyResult` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `address`
      if (jsonObj.get("address") != null && !jsonObj.get("address").isJsonNull()) {
        CredasApiModelsStatusChecksInsolvencyAddress.validateJsonElement(jsonObj.get("address"));
      }
      if ((jsonObj.get("aliases") != null && !jsonObj.get("aliases").isJsonNull()) && !jsonObj.get("aliases").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `aliases` to be a primitive type in the JSON string but got `%s`", jsonObj.get("aliases").toString()));
      }
      if ((jsonObj.get("assetTotal") != null && !jsonObj.get("assetTotal").isJsonNull()) && !jsonObj.get("assetTotal").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `assetTotal` to be a primitive type in the JSON string but got `%s`", jsonObj.get("assetTotal").toString()));
      }
      if ((jsonObj.get("caseNo") != null && !jsonObj.get("caseNo").isJsonNull()) && !jsonObj.get("caseNo").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `caseNo` to be a primitive type in the JSON string but got `%s`", jsonObj.get("caseNo").toString()));
      }
      if ((jsonObj.get("caseType") != null && !jsonObj.get("caseType").isJsonNull()) && !jsonObj.get("caseType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `caseType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("caseType").toString()));
      }
      if ((jsonObj.get("court") != null && !jsonObj.get("court").isJsonNull()) && !jsonObj.get("court").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `court` to be a primitive type in the JSON string but got `%s`", jsonObj.get("court").toString()));
      }
      if ((jsonObj.get("debtTotal") != null && !jsonObj.get("debtTotal").isJsonNull()) && !jsonObj.get("debtTotal").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `debtTotal` to be a primitive type in the JSON string but got `%s`", jsonObj.get("debtTotal").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("occupation") != null && !jsonObj.get("occupation").isJsonNull()) && !jsonObj.get("occupation").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `occupation` to be a primitive type in the JSON string but got `%s`", jsonObj.get("occupation").toString()));
      }
      // validate the optional field `previousAddress`
      if (jsonObj.get("previousAddress") != null && !jsonObj.get("previousAddress").isJsonNull()) {
        CredasApiModelsStatusChecksInsolvencyAddress.validateJsonElement(jsonObj.get("previousAddress"));
      }
      if ((jsonObj.get("serviceOffice") != null && !jsonObj.get("serviceOffice").isJsonNull()) && !jsonObj.get("serviceOffice").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `serviceOffice` to be a primitive type in the JSON string but got `%s`", jsonObj.get("serviceOffice").toString()));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      if ((jsonObj.get("telephoneNumber") != null && !jsonObj.get("telephoneNumber").isJsonNull()) && !jsonObj.get("telephoneNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `telephoneNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("telephoneNumber").toString()));
      }
      if ((jsonObj.get("tradingNames") != null && !jsonObj.get("tradingNames").isJsonNull()) && !jsonObj.get("tradingNames").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tradingNames` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tradingNames").toString()));
      }
      // validate the optional field `type`
      if (jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) {
        TypeEnum.validateJsonElement(jsonObj.get("type"));
      }
      if ((jsonObj.get("typeText") != null && !jsonObj.get("typeText").isJsonNull()) && !jsonObj.get("typeText").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `typeText` to be a primitive type in the JSON string but got `%s`", jsonObj.get("typeText").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CredasApiModelsStatusChecksInsolvencyInsolvencyResult.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CredasApiModelsStatusChecksInsolvencyInsolvencyResult' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CredasApiModelsStatusChecksInsolvencyInsolvencyResult> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CredasApiModelsStatusChecksInsolvencyInsolvencyResult.class));

       return (TypeAdapter<T>) new TypeAdapter<CredasApiModelsStatusChecksInsolvencyInsolvencyResult>() {
           @Override
           public void write(JsonWriter out, CredasApiModelsStatusChecksInsolvencyInsolvencyResult value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CredasApiModelsStatusChecksInsolvencyInsolvencyResult read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CredasApiModelsStatusChecksInsolvencyInsolvencyResult given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CredasApiModelsStatusChecksInsolvencyInsolvencyResult
   * @throws IOException if the JSON string is invalid with respect to CredasApiModelsStatusChecksInsolvencyInsolvencyResult
   */
  public static CredasApiModelsStatusChecksInsolvencyInsolvencyResult fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CredasApiModelsStatusChecksInsolvencyInsolvencyResult.class);
  }

  /**
   * Convert an instance of CredasApiModelsStatusChecksInsolvencyInsolvencyResult to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

