/*
 * Credas API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CredasApiModelsRegistrationsSettlementStatus
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:30:15.246346-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CredasApiModelsRegistrationsSettlementStatus {
  /**
   * Unknown &#x3D; 0, Pass &#x3D; 1, Refer &#x3D; 2, Fail &#x3D; 3
   */
  @JsonAdapter(CheckStatusEnum.Adapter.class)
  public enum CheckStatusEnum {
    NUMBER_0(0),
    
    NUMBER_1(1),
    
    NUMBER_2(2),
    
    NUMBER_3(3);

    private Integer value;

    CheckStatusEnum(Integer value) {
      this.value = value;
    }

    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static CheckStatusEnum fromValue(Integer value) {
      for (CheckStatusEnum b : CheckStatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<CheckStatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final CheckStatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public CheckStatusEnum read(final JsonReader jsonReader) throws IOException {
        Integer value =  jsonReader.nextInt();
        return CheckStatusEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      Integer value = jsonElement.getAsInt();
      CheckStatusEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_CHECK_STATUS = "checkStatus";
  @SerializedName(SERIALIZED_NAME_CHECK_STATUS)
  private CheckStatusEnum checkStatus;

  public static final String SERIALIZED_NAME_HAS_BEEN_OVERRIDDEN = "hasBeenOverridden";
  @SerializedName(SERIALIZED_NAME_HAS_BEEN_OVERRIDDEN)
  private Boolean hasBeenOverridden;

  public static final String SERIALIZED_NAME_HAS_SHARE_CODE_PDF = "hasShareCodePdf";
  @SerializedName(SERIALIZED_NAME_HAS_SHARE_CODE_PDF)
  private Boolean hasShareCodePdf;

  /**
   * Unknown &#x3D; 0, Pass &#x3D; 1, Refer &#x3D; 2, Fail &#x3D; 3
   */
  @JsonAdapter(ShareCodeFacialMatchStatusEnum.Adapter.class)
  public enum ShareCodeFacialMatchStatusEnum {
    NUMBER_0(0),
    
    NUMBER_1(1),
    
    NUMBER_2(2),
    
    NUMBER_3(3);

    private Integer value;

    ShareCodeFacialMatchStatusEnum(Integer value) {
      this.value = value;
    }

    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ShareCodeFacialMatchStatusEnum fromValue(Integer value) {
      for (ShareCodeFacialMatchStatusEnum b : ShareCodeFacialMatchStatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ShareCodeFacialMatchStatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ShareCodeFacialMatchStatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ShareCodeFacialMatchStatusEnum read(final JsonReader jsonReader) throws IOException {
        Integer value =  jsonReader.nextInt();
        return ShareCodeFacialMatchStatusEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      Integer value = jsonElement.getAsInt();
      ShareCodeFacialMatchStatusEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_SHARE_CODE_FACIAL_MATCH_STATUS = "shareCodeFacialMatchStatus";
  @SerializedName(SERIALIZED_NAME_SHARE_CODE_FACIAL_MATCH_STATUS)
  private ShareCodeFacialMatchStatusEnum shareCodeFacialMatchStatus;

  /**
   * Unknown &#x3D; 0, Pass &#x3D; 1, Refer &#x3D; 2, Fail &#x3D; 3
   */
  @JsonAdapter(ShareCodeNameCheckStatusEnum.Adapter.class)
  public enum ShareCodeNameCheckStatusEnum {
    NUMBER_0(0),
    
    NUMBER_1(1),
    
    NUMBER_2(2),
    
    NUMBER_3(3);

    private Integer value;

    ShareCodeNameCheckStatusEnum(Integer value) {
      this.value = value;
    }

    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ShareCodeNameCheckStatusEnum fromValue(Integer value) {
      for (ShareCodeNameCheckStatusEnum b : ShareCodeNameCheckStatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ShareCodeNameCheckStatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ShareCodeNameCheckStatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ShareCodeNameCheckStatusEnum read(final JsonReader jsonReader) throws IOException {
        Integer value =  jsonReader.nextInt();
        return ShareCodeNameCheckStatusEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      Integer value = jsonElement.getAsInt();
      ShareCodeNameCheckStatusEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_SHARE_CODE_NAME_CHECK_STATUS = "shareCodeNameCheckStatus";
  @SerializedName(SERIALIZED_NAME_SHARE_CODE_NAME_CHECK_STATUS)
  private ShareCodeNameCheckStatusEnum shareCodeNameCheckStatus;

  public CredasApiModelsRegistrationsSettlementStatus() {
  }

  public CredasApiModelsRegistrationsSettlementStatus checkStatus(CheckStatusEnum checkStatus) {
    this.checkStatus = checkStatus;
    return this;
  }

  /**
   * Unknown &#x3D; 0, Pass &#x3D; 1, Refer &#x3D; 2, Fail &#x3D; 3
   * @return checkStatus
   */
  @javax.annotation.Nullable
  public CheckStatusEnum getCheckStatus() {
    return checkStatus;
  }

  public void setCheckStatus(CheckStatusEnum checkStatus) {
    this.checkStatus = checkStatus;
  }


  public CredasApiModelsRegistrationsSettlementStatus hasBeenOverridden(Boolean hasBeenOverridden) {
    this.hasBeenOverridden = hasBeenOverridden;
    return this;
  }

  /**
   * Get hasBeenOverridden
   * @return hasBeenOverridden
   */
  @javax.annotation.Nullable
  public Boolean getHasBeenOverridden() {
    return hasBeenOverridden;
  }

  public void setHasBeenOverridden(Boolean hasBeenOverridden) {
    this.hasBeenOverridden = hasBeenOverridden;
  }


  public CredasApiModelsRegistrationsSettlementStatus hasShareCodePdf(Boolean hasShareCodePdf) {
    this.hasShareCodePdf = hasShareCodePdf;
    return this;
  }

  /**
   * Get hasShareCodePdf
   * @return hasShareCodePdf
   */
  @javax.annotation.Nullable
  public Boolean getHasShareCodePdf() {
    return hasShareCodePdf;
  }

  public void setHasShareCodePdf(Boolean hasShareCodePdf) {
    this.hasShareCodePdf = hasShareCodePdf;
  }


  public CredasApiModelsRegistrationsSettlementStatus shareCodeFacialMatchStatus(ShareCodeFacialMatchStatusEnum shareCodeFacialMatchStatus) {
    this.shareCodeFacialMatchStatus = shareCodeFacialMatchStatus;
    return this;
  }

  /**
   * Unknown &#x3D; 0, Pass &#x3D; 1, Refer &#x3D; 2, Fail &#x3D; 3
   * @return shareCodeFacialMatchStatus
   */
  @javax.annotation.Nullable
  public ShareCodeFacialMatchStatusEnum getShareCodeFacialMatchStatus() {
    return shareCodeFacialMatchStatus;
  }

  public void setShareCodeFacialMatchStatus(ShareCodeFacialMatchStatusEnum shareCodeFacialMatchStatus) {
    this.shareCodeFacialMatchStatus = shareCodeFacialMatchStatus;
  }


  public CredasApiModelsRegistrationsSettlementStatus shareCodeNameCheckStatus(ShareCodeNameCheckStatusEnum shareCodeNameCheckStatus) {
    this.shareCodeNameCheckStatus = shareCodeNameCheckStatus;
    return this;
  }

  /**
   * Unknown &#x3D; 0, Pass &#x3D; 1, Refer &#x3D; 2, Fail &#x3D; 3
   * @return shareCodeNameCheckStatus
   */
  @javax.annotation.Nullable
  public ShareCodeNameCheckStatusEnum getShareCodeNameCheckStatus() {
    return shareCodeNameCheckStatus;
  }

  public void setShareCodeNameCheckStatus(ShareCodeNameCheckStatusEnum shareCodeNameCheckStatus) {
    this.shareCodeNameCheckStatus = shareCodeNameCheckStatus;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CredasApiModelsRegistrationsSettlementStatus credasApiModelsRegistrationsSettlementStatus = (CredasApiModelsRegistrationsSettlementStatus) o;
    return Objects.equals(this.checkStatus, credasApiModelsRegistrationsSettlementStatus.checkStatus) &&
        Objects.equals(this.hasBeenOverridden, credasApiModelsRegistrationsSettlementStatus.hasBeenOverridden) &&
        Objects.equals(this.hasShareCodePdf, credasApiModelsRegistrationsSettlementStatus.hasShareCodePdf) &&
        Objects.equals(this.shareCodeFacialMatchStatus, credasApiModelsRegistrationsSettlementStatus.shareCodeFacialMatchStatus) &&
        Objects.equals(this.shareCodeNameCheckStatus, credasApiModelsRegistrationsSettlementStatus.shareCodeNameCheckStatus);
  }

  @Override
  public int hashCode() {
    return Objects.hash(checkStatus, hasBeenOverridden, hasShareCodePdf, shareCodeFacialMatchStatus, shareCodeNameCheckStatus);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CredasApiModelsRegistrationsSettlementStatus {\n");
    sb.append("    checkStatus: ").append(toIndentedString(checkStatus)).append("\n");
    sb.append("    hasBeenOverridden: ").append(toIndentedString(hasBeenOverridden)).append("\n");
    sb.append("    hasShareCodePdf: ").append(toIndentedString(hasShareCodePdf)).append("\n");
    sb.append("    shareCodeFacialMatchStatus: ").append(toIndentedString(shareCodeFacialMatchStatus)).append("\n");
    sb.append("    shareCodeNameCheckStatus: ").append(toIndentedString(shareCodeNameCheckStatus)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("checkStatus");
    openapiFields.add("hasBeenOverridden");
    openapiFields.add("hasShareCodePdf");
    openapiFields.add("shareCodeFacialMatchStatus");
    openapiFields.add("shareCodeNameCheckStatus");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CredasApiModelsRegistrationsSettlementStatus
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CredasApiModelsRegistrationsSettlementStatus.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CredasApiModelsRegistrationsSettlementStatus is not found in the empty JSON string", CredasApiModelsRegistrationsSettlementStatus.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CredasApiModelsRegistrationsSettlementStatus.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CredasApiModelsRegistrationsSettlementStatus` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `checkStatus`
      if (jsonObj.get("checkStatus") != null && !jsonObj.get("checkStatus").isJsonNull()) {
        CheckStatusEnum.validateJsonElement(jsonObj.get("checkStatus"));
      }
      // validate the optional field `shareCodeFacialMatchStatus`
      if (jsonObj.get("shareCodeFacialMatchStatus") != null && !jsonObj.get("shareCodeFacialMatchStatus").isJsonNull()) {
        ShareCodeFacialMatchStatusEnum.validateJsonElement(jsonObj.get("shareCodeFacialMatchStatus"));
      }
      // validate the optional field `shareCodeNameCheckStatus`
      if (jsonObj.get("shareCodeNameCheckStatus") != null && !jsonObj.get("shareCodeNameCheckStatus").isJsonNull()) {
        ShareCodeNameCheckStatusEnum.validateJsonElement(jsonObj.get("shareCodeNameCheckStatus"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CredasApiModelsRegistrationsSettlementStatus.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CredasApiModelsRegistrationsSettlementStatus' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CredasApiModelsRegistrationsSettlementStatus> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CredasApiModelsRegistrationsSettlementStatus.class));

       return (TypeAdapter<T>) new TypeAdapter<CredasApiModelsRegistrationsSettlementStatus>() {
           @Override
           public void write(JsonWriter out, CredasApiModelsRegistrationsSettlementStatus value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CredasApiModelsRegistrationsSettlementStatus read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CredasApiModelsRegistrationsSettlementStatus given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CredasApiModelsRegistrationsSettlementStatus
   * @throws IOException if the JSON string is invalid with respect to CredasApiModelsRegistrationsSettlementStatus
   */
  public static CredasApiModelsRegistrationsSettlementStatus fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CredasApiModelsRegistrationsSettlementStatus.class);
  }

  /**
   * Convert an instance of CredasApiModelsRegistrationsSettlementStatus to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

