/*
 * Credas API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CredasApiModelsStatusChecksCompanyDirectorCompanyAppointment;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CredasApiModelsStatusChecksCompanyDirectorCompanyDirectorResult
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:30:15.246346-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CredasApiModelsStatusChecksCompanyDirectorCompanyDirectorResult {
  public static final String SERIALIZED_NAME_COMPANY_APPOINTMENTS = "companyAppointments";
  @SerializedName(SERIALIZED_NAME_COMPANY_APPOINTMENTS)
  private List<CredasApiModelsStatusChecksCompanyDirectorCompanyAppointment> companyAppointments = new ArrayList<>();

  public static final String SERIALIZED_NAME_COMPANY_NAME = "companyName";
  @SerializedName(SERIALIZED_NAME_COMPANY_NAME)
  private String companyName;

  public static final String SERIALIZED_NAME_COMPANY_REG_NO = "companyRegNo";
  @SerializedName(SERIALIZED_NAME_COMPANY_REG_NO)
  private String companyRegNo;

  public static final String SERIALIZED_NAME_DATE_APPOINTED = "dateAppointed";
  @SerializedName(SERIALIZED_NAME_DATE_APPOINTED)
  private OffsetDateTime dateAppointed;

  /**
   * Unknown &#x3D; 0, NameAndDateOfBirth &#x3D; 1, NameAndAddress &#x3D; 2, NameAndAddressAndDateOfBirth &#x3D; 3
   */
  @JsonAdapter(MatchTypeEnum.Adapter.class)
  public enum MatchTypeEnum {
    NUMBER_0(0),
    
    NUMBER_1(1),
    
    NUMBER_2(2),
    
    NUMBER_3(3);

    private Integer value;

    MatchTypeEnum(Integer value) {
      this.value = value;
    }

    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static MatchTypeEnum fromValue(Integer value) {
      for (MatchTypeEnum b : MatchTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<MatchTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final MatchTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public MatchTypeEnum read(final JsonReader jsonReader) throws IOException {
        Integer value =  jsonReader.nextInt();
        return MatchTypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      Integer value = jsonElement.getAsInt();
      MatchTypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_MATCH_TYPE = "matchType";
  @SerializedName(SERIALIZED_NAME_MATCH_TYPE)
  private MatchTypeEnum matchType;

  public static final String SERIALIZED_NAME_MATCH_TYPE_TEXT = "matchTypeText";
  @SerializedName(SERIALIZED_NAME_MATCH_TYPE_TEXT)
  private String matchTypeText;

  public static final String SERIALIZED_NAME_REGISTERED_OFFICE = "registeredOffice";
  @SerializedName(SERIALIZED_NAME_REGISTERED_OFFICE)
  private String registeredOffice;

  public CredasApiModelsStatusChecksCompanyDirectorCompanyDirectorResult() {
  }

  public CredasApiModelsStatusChecksCompanyDirectorCompanyDirectorResult(
     String matchTypeText
  ) {
    this();
    this.matchTypeText = matchTypeText;
  }

  public CredasApiModelsStatusChecksCompanyDirectorCompanyDirectorResult companyAppointments(List<CredasApiModelsStatusChecksCompanyDirectorCompanyAppointment> companyAppointments) {
    this.companyAppointments = companyAppointments;
    return this;
  }

  public CredasApiModelsStatusChecksCompanyDirectorCompanyDirectorResult addCompanyAppointmentsItem(CredasApiModelsStatusChecksCompanyDirectorCompanyAppointment companyAppointmentsItem) {
    if (this.companyAppointments == null) {
      this.companyAppointments = new ArrayList<>();
    }
    this.companyAppointments.add(companyAppointmentsItem);
    return this;
  }

  /**
   * Get companyAppointments
   * @return companyAppointments
   */
  @javax.annotation.Nullable
  public List<CredasApiModelsStatusChecksCompanyDirectorCompanyAppointment> getCompanyAppointments() {
    return companyAppointments;
  }

  public void setCompanyAppointments(List<CredasApiModelsStatusChecksCompanyDirectorCompanyAppointment> companyAppointments) {
    this.companyAppointments = companyAppointments;
  }


  public CredasApiModelsStatusChecksCompanyDirectorCompanyDirectorResult companyName(String companyName) {
    this.companyName = companyName;
    return this;
  }

  /**
   * Get companyName
   * @return companyName
   */
  @javax.annotation.Nullable
  public String getCompanyName() {
    return companyName;
  }

  public void setCompanyName(String companyName) {
    this.companyName = companyName;
  }


  public CredasApiModelsStatusChecksCompanyDirectorCompanyDirectorResult companyRegNo(String companyRegNo) {
    this.companyRegNo = companyRegNo;
    return this;
  }

  /**
   * Get companyRegNo
   * @return companyRegNo
   */
  @javax.annotation.Nullable
  public String getCompanyRegNo() {
    return companyRegNo;
  }

  public void setCompanyRegNo(String companyRegNo) {
    this.companyRegNo = companyRegNo;
  }


  public CredasApiModelsStatusChecksCompanyDirectorCompanyDirectorResult dateAppointed(OffsetDateTime dateAppointed) {
    this.dateAppointed = dateAppointed;
    return this;
  }

  /**
   * Get dateAppointed
   * @return dateAppointed
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDateAppointed() {
    return dateAppointed;
  }

  public void setDateAppointed(OffsetDateTime dateAppointed) {
    this.dateAppointed = dateAppointed;
  }


  public CredasApiModelsStatusChecksCompanyDirectorCompanyDirectorResult matchType(MatchTypeEnum matchType) {
    this.matchType = matchType;
    return this;
  }

  /**
   * Unknown &#x3D; 0, NameAndDateOfBirth &#x3D; 1, NameAndAddress &#x3D; 2, NameAndAddressAndDateOfBirth &#x3D; 3
   * @return matchType
   */
  @javax.annotation.Nullable
  public MatchTypeEnum getMatchType() {
    return matchType;
  }

  public void setMatchType(MatchTypeEnum matchType) {
    this.matchType = matchType;
  }


  /**
   * Get matchTypeText
   * @return matchTypeText
   */
  @javax.annotation.Nullable
  public String getMatchTypeText() {
    return matchTypeText;
  }



  public CredasApiModelsStatusChecksCompanyDirectorCompanyDirectorResult registeredOffice(String registeredOffice) {
    this.registeredOffice = registeredOffice;
    return this;
  }

  /**
   * Get registeredOffice
   * @return registeredOffice
   */
  @javax.annotation.Nullable
  public String getRegisteredOffice() {
    return registeredOffice;
  }

  public void setRegisteredOffice(String registeredOffice) {
    this.registeredOffice = registeredOffice;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CredasApiModelsStatusChecksCompanyDirectorCompanyDirectorResult credasApiModelsStatusChecksCompanyDirectorCompanyDirectorResult = (CredasApiModelsStatusChecksCompanyDirectorCompanyDirectorResult) o;
    return Objects.equals(this.companyAppointments, credasApiModelsStatusChecksCompanyDirectorCompanyDirectorResult.companyAppointments) &&
        Objects.equals(this.companyName, credasApiModelsStatusChecksCompanyDirectorCompanyDirectorResult.companyName) &&
        Objects.equals(this.companyRegNo, credasApiModelsStatusChecksCompanyDirectorCompanyDirectorResult.companyRegNo) &&
        Objects.equals(this.dateAppointed, credasApiModelsStatusChecksCompanyDirectorCompanyDirectorResult.dateAppointed) &&
        Objects.equals(this.matchType, credasApiModelsStatusChecksCompanyDirectorCompanyDirectorResult.matchType) &&
        Objects.equals(this.matchTypeText, credasApiModelsStatusChecksCompanyDirectorCompanyDirectorResult.matchTypeText) &&
        Objects.equals(this.registeredOffice, credasApiModelsStatusChecksCompanyDirectorCompanyDirectorResult.registeredOffice);
  }

  @Override
  public int hashCode() {
    return Objects.hash(companyAppointments, companyName, companyRegNo, dateAppointed, matchType, matchTypeText, registeredOffice);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CredasApiModelsStatusChecksCompanyDirectorCompanyDirectorResult {\n");
    sb.append("    companyAppointments: ").append(toIndentedString(companyAppointments)).append("\n");
    sb.append("    companyName: ").append(toIndentedString(companyName)).append("\n");
    sb.append("    companyRegNo: ").append(toIndentedString(companyRegNo)).append("\n");
    sb.append("    dateAppointed: ").append(toIndentedString(dateAppointed)).append("\n");
    sb.append("    matchType: ").append(toIndentedString(matchType)).append("\n");
    sb.append("    matchTypeText: ").append(toIndentedString(matchTypeText)).append("\n");
    sb.append("    registeredOffice: ").append(toIndentedString(registeredOffice)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("companyAppointments");
    openapiFields.add("companyName");
    openapiFields.add("companyRegNo");
    openapiFields.add("dateAppointed");
    openapiFields.add("matchType");
    openapiFields.add("matchTypeText");
    openapiFields.add("registeredOffice");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CredasApiModelsStatusChecksCompanyDirectorCompanyDirectorResult
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CredasApiModelsStatusChecksCompanyDirectorCompanyDirectorResult.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CredasApiModelsStatusChecksCompanyDirectorCompanyDirectorResult is not found in the empty JSON string", CredasApiModelsStatusChecksCompanyDirectorCompanyDirectorResult.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CredasApiModelsStatusChecksCompanyDirectorCompanyDirectorResult.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CredasApiModelsStatusChecksCompanyDirectorCompanyDirectorResult` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("companyAppointments") != null && !jsonObj.get("companyAppointments").isJsonNull()) {
        JsonArray jsonArraycompanyAppointments = jsonObj.getAsJsonArray("companyAppointments");
        if (jsonArraycompanyAppointments != null) {
          // ensure the json data is an array
          if (!jsonObj.get("companyAppointments").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `companyAppointments` to be an array in the JSON string but got `%s`", jsonObj.get("companyAppointments").toString()));
          }

          // validate the optional field `companyAppointments` (array)
          for (int i = 0; i < jsonArraycompanyAppointments.size(); i++) {
            CredasApiModelsStatusChecksCompanyDirectorCompanyAppointment.validateJsonElement(jsonArraycompanyAppointments.get(i));
          };
        }
      }
      if ((jsonObj.get("companyName") != null && !jsonObj.get("companyName").isJsonNull()) && !jsonObj.get("companyName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `companyName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("companyName").toString()));
      }
      if ((jsonObj.get("companyRegNo") != null && !jsonObj.get("companyRegNo").isJsonNull()) && !jsonObj.get("companyRegNo").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `companyRegNo` to be a primitive type in the JSON string but got `%s`", jsonObj.get("companyRegNo").toString()));
      }
      // validate the optional field `matchType`
      if (jsonObj.get("matchType") != null && !jsonObj.get("matchType").isJsonNull()) {
        MatchTypeEnum.validateJsonElement(jsonObj.get("matchType"));
      }
      if ((jsonObj.get("matchTypeText") != null && !jsonObj.get("matchTypeText").isJsonNull()) && !jsonObj.get("matchTypeText").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `matchTypeText` to be a primitive type in the JSON string but got `%s`", jsonObj.get("matchTypeText").toString()));
      }
      if ((jsonObj.get("registeredOffice") != null && !jsonObj.get("registeredOffice").isJsonNull()) && !jsonObj.get("registeredOffice").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `registeredOffice` to be a primitive type in the JSON string but got `%s`", jsonObj.get("registeredOffice").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CredasApiModelsStatusChecksCompanyDirectorCompanyDirectorResult.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CredasApiModelsStatusChecksCompanyDirectorCompanyDirectorResult' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CredasApiModelsStatusChecksCompanyDirectorCompanyDirectorResult> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CredasApiModelsStatusChecksCompanyDirectorCompanyDirectorResult.class));

       return (TypeAdapter<T>) new TypeAdapter<CredasApiModelsStatusChecksCompanyDirectorCompanyDirectorResult>() {
           @Override
           public void write(JsonWriter out, CredasApiModelsStatusChecksCompanyDirectorCompanyDirectorResult value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CredasApiModelsStatusChecksCompanyDirectorCompanyDirectorResult read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CredasApiModelsStatusChecksCompanyDirectorCompanyDirectorResult given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CredasApiModelsStatusChecksCompanyDirectorCompanyDirectorResult
   * @throws IOException if the JSON string is invalid with respect to CredasApiModelsStatusChecksCompanyDirectorCompanyDirectorResult
   */
  public static CredasApiModelsStatusChecksCompanyDirectorCompanyDirectorResult fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CredasApiModelsStatusChecksCompanyDirectorCompanyDirectorResult.class);
  }

  /**
   * Convert an instance of CredasApiModelsStatusChecksCompanyDirectorCompanyDirectorResult to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

