/*
 * Credas API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CredasApiModelsDataCheckPepSanctionsSanctionAddress;
import org.openapitools.client.model.CredasApiModelsDataCheckPepSanctionsSanctionDate;
import org.openapitools.client.model.CredasApiModelsDataCheckPepSanctionsSanctionPosition;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CredasApiModelsDataCheckPepSanctionsPepSanctionItem
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:30:15.246346-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CredasApiModelsDataCheckPepSanctionsPepSanctionItem {
  public static final String SERIALIZED_NAME_ADDRESSES = "addresses";
  @SerializedName(SERIALIZED_NAME_ADDRESSES)
  private List<CredasApiModelsDataCheckPepSanctionsSanctionAddress> addresses = new ArrayList<>();

  public static final String SERIALIZED_NAME_ALIASES = "aliases";
  @SerializedName(SERIALIZED_NAME_ALIASES)
  private List<String> aliases = new ArrayList<>();

  public static final String SERIALIZED_NAME_FULL_NAME = "fullName";
  @SerializedName(SERIALIZED_NAME_FULL_NAME)
  private String fullName;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_POSITIONS = "positions";
  @SerializedName(SERIALIZED_NAME_POSITIONS)
  private List<CredasApiModelsDataCheckPepSanctionsSanctionPosition> positions = new ArrayList<>();

  public static final String SERIALIZED_NAME_SANCTION_BODIES = "sanctionBodies";
  @SerializedName(SERIALIZED_NAME_SANCTION_BODIES)
  private List<String> sanctionBodies = new ArrayList<>();

  public static final String SERIALIZED_NAME_SANCTION_DATES = "sanctionDates";
  @SerializedName(SERIALIZED_NAME_SANCTION_DATES)
  private List<CredasApiModelsDataCheckPepSanctionsSanctionDate> sanctionDates = new ArrayList<>();

  public CredasApiModelsDataCheckPepSanctionsPepSanctionItem() {
  }

  public CredasApiModelsDataCheckPepSanctionsPepSanctionItem addresses(List<CredasApiModelsDataCheckPepSanctionsSanctionAddress> addresses) {
    this.addresses = addresses;
    return this;
  }

  public CredasApiModelsDataCheckPepSanctionsPepSanctionItem addAddressesItem(CredasApiModelsDataCheckPepSanctionsSanctionAddress addressesItem) {
    if (this.addresses == null) {
      this.addresses = new ArrayList<>();
    }
    this.addresses.add(addressesItem);
    return this;
  }

  /**
   * Get addresses
   * @return addresses
   */
  @javax.annotation.Nullable
  public List<CredasApiModelsDataCheckPepSanctionsSanctionAddress> getAddresses() {
    return addresses;
  }

  public void setAddresses(List<CredasApiModelsDataCheckPepSanctionsSanctionAddress> addresses) {
    this.addresses = addresses;
  }


  public CredasApiModelsDataCheckPepSanctionsPepSanctionItem aliases(List<String> aliases) {
    this.aliases = aliases;
    return this;
  }

  public CredasApiModelsDataCheckPepSanctionsPepSanctionItem addAliasesItem(String aliasesItem) {
    if (this.aliases == null) {
      this.aliases = new ArrayList<>();
    }
    this.aliases.add(aliasesItem);
    return this;
  }

  /**
   * Get aliases
   * @return aliases
   */
  @javax.annotation.Nullable
  public List<String> getAliases() {
    return aliases;
  }

  public void setAliases(List<String> aliases) {
    this.aliases = aliases;
  }


  public CredasApiModelsDataCheckPepSanctionsPepSanctionItem fullName(String fullName) {
    this.fullName = fullName;
    return this;
  }

  /**
   * Get fullName
   * @return fullName
   */
  @javax.annotation.Nullable
  public String getFullName() {
    return fullName;
  }

  public void setFullName(String fullName) {
    this.fullName = fullName;
  }


  public CredasApiModelsDataCheckPepSanctionsPepSanctionItem id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public CredasApiModelsDataCheckPepSanctionsPepSanctionItem positions(List<CredasApiModelsDataCheckPepSanctionsSanctionPosition> positions) {
    this.positions = positions;
    return this;
  }

  public CredasApiModelsDataCheckPepSanctionsPepSanctionItem addPositionsItem(CredasApiModelsDataCheckPepSanctionsSanctionPosition positionsItem) {
    if (this.positions == null) {
      this.positions = new ArrayList<>();
    }
    this.positions.add(positionsItem);
    return this;
  }

  /**
   * Get positions
   * @return positions
   */
  @javax.annotation.Nullable
  public List<CredasApiModelsDataCheckPepSanctionsSanctionPosition> getPositions() {
    return positions;
  }

  public void setPositions(List<CredasApiModelsDataCheckPepSanctionsSanctionPosition> positions) {
    this.positions = positions;
  }


  public CredasApiModelsDataCheckPepSanctionsPepSanctionItem sanctionBodies(List<String> sanctionBodies) {
    this.sanctionBodies = sanctionBodies;
    return this;
  }

  public CredasApiModelsDataCheckPepSanctionsPepSanctionItem addSanctionBodiesItem(String sanctionBodiesItem) {
    if (this.sanctionBodies == null) {
      this.sanctionBodies = new ArrayList<>();
    }
    this.sanctionBodies.add(sanctionBodiesItem);
    return this;
  }

  /**
   * Get sanctionBodies
   * @return sanctionBodies
   */
  @javax.annotation.Nullable
  public List<String> getSanctionBodies() {
    return sanctionBodies;
  }

  public void setSanctionBodies(List<String> sanctionBodies) {
    this.sanctionBodies = sanctionBodies;
  }


  public CredasApiModelsDataCheckPepSanctionsPepSanctionItem sanctionDates(List<CredasApiModelsDataCheckPepSanctionsSanctionDate> sanctionDates) {
    this.sanctionDates = sanctionDates;
    return this;
  }

  public CredasApiModelsDataCheckPepSanctionsPepSanctionItem addSanctionDatesItem(CredasApiModelsDataCheckPepSanctionsSanctionDate sanctionDatesItem) {
    if (this.sanctionDates == null) {
      this.sanctionDates = new ArrayList<>();
    }
    this.sanctionDates.add(sanctionDatesItem);
    return this;
  }

  /**
   * Get sanctionDates
   * @return sanctionDates
   */
  @javax.annotation.Nullable
  public List<CredasApiModelsDataCheckPepSanctionsSanctionDate> getSanctionDates() {
    return sanctionDates;
  }

  public void setSanctionDates(List<CredasApiModelsDataCheckPepSanctionsSanctionDate> sanctionDates) {
    this.sanctionDates = sanctionDates;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CredasApiModelsDataCheckPepSanctionsPepSanctionItem credasApiModelsDataCheckPepSanctionsPepSanctionItem = (CredasApiModelsDataCheckPepSanctionsPepSanctionItem) o;
    return Objects.equals(this.addresses, credasApiModelsDataCheckPepSanctionsPepSanctionItem.addresses) &&
        Objects.equals(this.aliases, credasApiModelsDataCheckPepSanctionsPepSanctionItem.aliases) &&
        Objects.equals(this.fullName, credasApiModelsDataCheckPepSanctionsPepSanctionItem.fullName) &&
        Objects.equals(this.id, credasApiModelsDataCheckPepSanctionsPepSanctionItem.id) &&
        Objects.equals(this.positions, credasApiModelsDataCheckPepSanctionsPepSanctionItem.positions) &&
        Objects.equals(this.sanctionBodies, credasApiModelsDataCheckPepSanctionsPepSanctionItem.sanctionBodies) &&
        Objects.equals(this.sanctionDates, credasApiModelsDataCheckPepSanctionsPepSanctionItem.sanctionDates);
  }

  @Override
  public int hashCode() {
    return Objects.hash(addresses, aliases, fullName, id, positions, sanctionBodies, sanctionDates);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CredasApiModelsDataCheckPepSanctionsPepSanctionItem {\n");
    sb.append("    addresses: ").append(toIndentedString(addresses)).append("\n");
    sb.append("    aliases: ").append(toIndentedString(aliases)).append("\n");
    sb.append("    fullName: ").append(toIndentedString(fullName)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    positions: ").append(toIndentedString(positions)).append("\n");
    sb.append("    sanctionBodies: ").append(toIndentedString(sanctionBodies)).append("\n");
    sb.append("    sanctionDates: ").append(toIndentedString(sanctionDates)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("addresses");
    openapiFields.add("aliases");
    openapiFields.add("fullName");
    openapiFields.add("id");
    openapiFields.add("positions");
    openapiFields.add("sanctionBodies");
    openapiFields.add("sanctionDates");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CredasApiModelsDataCheckPepSanctionsPepSanctionItem
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CredasApiModelsDataCheckPepSanctionsPepSanctionItem.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CredasApiModelsDataCheckPepSanctionsPepSanctionItem is not found in the empty JSON string", CredasApiModelsDataCheckPepSanctionsPepSanctionItem.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CredasApiModelsDataCheckPepSanctionsPepSanctionItem.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CredasApiModelsDataCheckPepSanctionsPepSanctionItem` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("addresses") != null && !jsonObj.get("addresses").isJsonNull()) {
        JsonArray jsonArrayaddresses = jsonObj.getAsJsonArray("addresses");
        if (jsonArrayaddresses != null) {
          // ensure the json data is an array
          if (!jsonObj.get("addresses").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `addresses` to be an array in the JSON string but got `%s`", jsonObj.get("addresses").toString()));
          }

          // validate the optional field `addresses` (array)
          for (int i = 0; i < jsonArrayaddresses.size(); i++) {
            CredasApiModelsDataCheckPepSanctionsSanctionAddress.validateJsonElement(jsonArrayaddresses.get(i));
          };
        }
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("aliases") != null && !jsonObj.get("aliases").isJsonNull() && !jsonObj.get("aliases").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `aliases` to be an array in the JSON string but got `%s`", jsonObj.get("aliases").toString()));
      }
      if ((jsonObj.get("fullName") != null && !jsonObj.get("fullName").isJsonNull()) && !jsonObj.get("fullName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fullName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fullName").toString()));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if (jsonObj.get("positions") != null && !jsonObj.get("positions").isJsonNull()) {
        JsonArray jsonArraypositions = jsonObj.getAsJsonArray("positions");
        if (jsonArraypositions != null) {
          // ensure the json data is an array
          if (!jsonObj.get("positions").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `positions` to be an array in the JSON string but got `%s`", jsonObj.get("positions").toString()));
          }

          // validate the optional field `positions` (array)
          for (int i = 0; i < jsonArraypositions.size(); i++) {
            CredasApiModelsDataCheckPepSanctionsSanctionPosition.validateJsonElement(jsonArraypositions.get(i));
          };
        }
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("sanctionBodies") != null && !jsonObj.get("sanctionBodies").isJsonNull() && !jsonObj.get("sanctionBodies").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `sanctionBodies` to be an array in the JSON string but got `%s`", jsonObj.get("sanctionBodies").toString()));
      }
      if (jsonObj.get("sanctionDates") != null && !jsonObj.get("sanctionDates").isJsonNull()) {
        JsonArray jsonArraysanctionDates = jsonObj.getAsJsonArray("sanctionDates");
        if (jsonArraysanctionDates != null) {
          // ensure the json data is an array
          if (!jsonObj.get("sanctionDates").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `sanctionDates` to be an array in the JSON string but got `%s`", jsonObj.get("sanctionDates").toString()));
          }

          // validate the optional field `sanctionDates` (array)
          for (int i = 0; i < jsonArraysanctionDates.size(); i++) {
            CredasApiModelsDataCheckPepSanctionsSanctionDate.validateJsonElement(jsonArraysanctionDates.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CredasApiModelsDataCheckPepSanctionsPepSanctionItem.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CredasApiModelsDataCheckPepSanctionsPepSanctionItem' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CredasApiModelsDataCheckPepSanctionsPepSanctionItem> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CredasApiModelsDataCheckPepSanctionsPepSanctionItem.class));

       return (TypeAdapter<T>) new TypeAdapter<CredasApiModelsDataCheckPepSanctionsPepSanctionItem>() {
           @Override
           public void write(JsonWriter out, CredasApiModelsDataCheckPepSanctionsPepSanctionItem value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CredasApiModelsDataCheckPepSanctionsPepSanctionItem read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CredasApiModelsDataCheckPepSanctionsPepSanctionItem given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CredasApiModelsDataCheckPepSanctionsPepSanctionItem
   * @throws IOException if the JSON string is invalid with respect to CredasApiModelsDataCheckPepSanctionsPepSanctionItem
   */
  public static CredasApiModelsDataCheckPepSanctionsPepSanctionItem fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CredasApiModelsDataCheckPepSanctionsPepSanctionItem.class);
  }

  /**
   * Convert an instance of CredasApiModelsDataCheckPepSanctionsPepSanctionItem to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

