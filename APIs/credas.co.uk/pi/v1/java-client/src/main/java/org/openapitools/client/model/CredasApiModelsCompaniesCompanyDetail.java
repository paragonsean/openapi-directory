/*
 * Credas API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;
import org.openapitools.client.model.CredasApiModelsCompaniesSignificantPerson;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CredasApiModelsCompaniesCompanyDetail
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:30:15.246346-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CredasApiModelsCompaniesCompanyDetail {
  public static final String SERIALIZED_NAME_ADDRESS_LINE1 = "addressLine1";
  @SerializedName(SERIALIZED_NAME_ADDRESS_LINE1)
  private String addressLine1;

  public static final String SERIALIZED_NAME_COMPANY_NAME = "companyName";
  @SerializedName(SERIALIZED_NAME_COMPANY_NAME)
  private String companyName;

  public static final String SERIALIZED_NAME_COMPANY_NUMBER = "companyNumber";
  @SerializedName(SERIALIZED_NAME_COMPANY_NUMBER)
  private String companyNumber;

  public static final String SERIALIZED_NAME_DATE_OF_REGISTRATION = "dateOfRegistration";
  @SerializedName(SERIALIZED_NAME_DATE_OF_REGISTRATION)
  private OffsetDateTime dateOfRegistration;

  public static final String SERIALIZED_NAME_DUPLICATE = "duplicate";
  @SerializedName(SERIALIZED_NAME_DUPLICATE)
  private Boolean duplicate;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private UUID id;

  public static final String SERIALIZED_NAME_LOCALITY = "locality";
  @SerializedName(SERIALIZED_NAME_LOCALITY)
  private String locality;

  public static final String SERIALIZED_NAME_POST_CODE = "postCode";
  @SerializedName(SERIALIZED_NAME_POST_CODE)
  private String postCode;

  public static final String SERIALIZED_NAME_REGION = "region";
  @SerializedName(SERIALIZED_NAME_REGION)
  private String region;

  public static final String SERIALIZED_NAME_SIGNIFICANT_PARENT_COMPANIES = "significantParentCompanies";
  @SerializedName(SERIALIZED_NAME_SIGNIFICANT_PARENT_COMPANIES)
  private List<CredasApiModelsCompaniesCompanyDetail> significantParentCompanies = new ArrayList<>();

  public static final String SERIALIZED_NAME_SIGNIFICANT_PEOPLE = "significantPeople";
  @SerializedName(SERIALIZED_NAME_SIGNIFICANT_PEOPLE)
  private List<CredasApiModelsCompaniesSignificantPerson> significantPeople = new ArrayList<>();

  public CredasApiModelsCompaniesCompanyDetail() {
  }

  public CredasApiModelsCompaniesCompanyDetail addressLine1(String addressLine1) {
    this.addressLine1 = addressLine1;
    return this;
  }

  /**
   * Get addressLine1
   * @return addressLine1
   */
  @javax.annotation.Nullable
  public String getAddressLine1() {
    return addressLine1;
  }

  public void setAddressLine1(String addressLine1) {
    this.addressLine1 = addressLine1;
  }


  public CredasApiModelsCompaniesCompanyDetail companyName(String companyName) {
    this.companyName = companyName;
    return this;
  }

  /**
   * Get companyName
   * @return companyName
   */
  @javax.annotation.Nullable
  public String getCompanyName() {
    return companyName;
  }

  public void setCompanyName(String companyName) {
    this.companyName = companyName;
  }


  public CredasApiModelsCompaniesCompanyDetail companyNumber(String companyNumber) {
    this.companyNumber = companyNumber;
    return this;
  }

  /**
   * Get companyNumber
   * @return companyNumber
   */
  @javax.annotation.Nullable
  public String getCompanyNumber() {
    return companyNumber;
  }

  public void setCompanyNumber(String companyNumber) {
    this.companyNumber = companyNumber;
  }


  public CredasApiModelsCompaniesCompanyDetail dateOfRegistration(OffsetDateTime dateOfRegistration) {
    this.dateOfRegistration = dateOfRegistration;
    return this;
  }

  /**
   * Get dateOfRegistration
   * @return dateOfRegistration
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDateOfRegistration() {
    return dateOfRegistration;
  }

  public void setDateOfRegistration(OffsetDateTime dateOfRegistration) {
    this.dateOfRegistration = dateOfRegistration;
  }


  public CredasApiModelsCompaniesCompanyDetail duplicate(Boolean duplicate) {
    this.duplicate = duplicate;
    return this;
  }

  /**
   * Get duplicate
   * @return duplicate
   */
  @javax.annotation.Nullable
  public Boolean getDuplicate() {
    return duplicate;
  }

  public void setDuplicate(Boolean duplicate) {
    this.duplicate = duplicate;
  }


  public CredasApiModelsCompaniesCompanyDetail id(UUID id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public UUID getId() {
    return id;
  }

  public void setId(UUID id) {
    this.id = id;
  }


  public CredasApiModelsCompaniesCompanyDetail locality(String locality) {
    this.locality = locality;
    return this;
  }

  /**
   * Get locality
   * @return locality
   */
  @javax.annotation.Nullable
  public String getLocality() {
    return locality;
  }

  public void setLocality(String locality) {
    this.locality = locality;
  }


  public CredasApiModelsCompaniesCompanyDetail postCode(String postCode) {
    this.postCode = postCode;
    return this;
  }

  /**
   * Get postCode
   * @return postCode
   */
  @javax.annotation.Nullable
  public String getPostCode() {
    return postCode;
  }

  public void setPostCode(String postCode) {
    this.postCode = postCode;
  }


  public CredasApiModelsCompaniesCompanyDetail region(String region) {
    this.region = region;
    return this;
  }

  /**
   * Get region
   * @return region
   */
  @javax.annotation.Nullable
  public String getRegion() {
    return region;
  }

  public void setRegion(String region) {
    this.region = region;
  }


  public CredasApiModelsCompaniesCompanyDetail significantParentCompanies(List<CredasApiModelsCompaniesCompanyDetail> significantParentCompanies) {
    this.significantParentCompanies = significantParentCompanies;
    return this;
  }

  public CredasApiModelsCompaniesCompanyDetail addSignificantParentCompaniesItem(CredasApiModelsCompaniesCompanyDetail significantParentCompaniesItem) {
    if (this.significantParentCompanies == null) {
      this.significantParentCompanies = new ArrayList<>();
    }
    this.significantParentCompanies.add(significantParentCompaniesItem);
    return this;
  }

  /**
   * Get significantParentCompanies
   * @return significantParentCompanies
   */
  @javax.annotation.Nullable
  public List<CredasApiModelsCompaniesCompanyDetail> getSignificantParentCompanies() {
    return significantParentCompanies;
  }

  public void setSignificantParentCompanies(List<CredasApiModelsCompaniesCompanyDetail> significantParentCompanies) {
    this.significantParentCompanies = significantParentCompanies;
  }


  public CredasApiModelsCompaniesCompanyDetail significantPeople(List<CredasApiModelsCompaniesSignificantPerson> significantPeople) {
    this.significantPeople = significantPeople;
    return this;
  }

  public CredasApiModelsCompaniesCompanyDetail addSignificantPeopleItem(CredasApiModelsCompaniesSignificantPerson significantPeopleItem) {
    if (this.significantPeople == null) {
      this.significantPeople = new ArrayList<>();
    }
    this.significantPeople.add(significantPeopleItem);
    return this;
  }

  /**
   * Get significantPeople
   * @return significantPeople
   */
  @javax.annotation.Nullable
  public List<CredasApiModelsCompaniesSignificantPerson> getSignificantPeople() {
    return significantPeople;
  }

  public void setSignificantPeople(List<CredasApiModelsCompaniesSignificantPerson> significantPeople) {
    this.significantPeople = significantPeople;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CredasApiModelsCompaniesCompanyDetail credasApiModelsCompaniesCompanyDetail = (CredasApiModelsCompaniesCompanyDetail) o;
    return Objects.equals(this.addressLine1, credasApiModelsCompaniesCompanyDetail.addressLine1) &&
        Objects.equals(this.companyName, credasApiModelsCompaniesCompanyDetail.companyName) &&
        Objects.equals(this.companyNumber, credasApiModelsCompaniesCompanyDetail.companyNumber) &&
        Objects.equals(this.dateOfRegistration, credasApiModelsCompaniesCompanyDetail.dateOfRegistration) &&
        Objects.equals(this.duplicate, credasApiModelsCompaniesCompanyDetail.duplicate) &&
        Objects.equals(this.id, credasApiModelsCompaniesCompanyDetail.id) &&
        Objects.equals(this.locality, credasApiModelsCompaniesCompanyDetail.locality) &&
        Objects.equals(this.postCode, credasApiModelsCompaniesCompanyDetail.postCode) &&
        Objects.equals(this.region, credasApiModelsCompaniesCompanyDetail.region) &&
        Objects.equals(this.significantParentCompanies, credasApiModelsCompaniesCompanyDetail.significantParentCompanies) &&
        Objects.equals(this.significantPeople, credasApiModelsCompaniesCompanyDetail.significantPeople);
  }

  @Override
  public int hashCode() {
    return Objects.hash(addressLine1, companyName, companyNumber, dateOfRegistration, duplicate, id, locality, postCode, region, significantParentCompanies, significantPeople);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CredasApiModelsCompaniesCompanyDetail {\n");
    sb.append("    addressLine1: ").append(toIndentedString(addressLine1)).append("\n");
    sb.append("    companyName: ").append(toIndentedString(companyName)).append("\n");
    sb.append("    companyNumber: ").append(toIndentedString(companyNumber)).append("\n");
    sb.append("    dateOfRegistration: ").append(toIndentedString(dateOfRegistration)).append("\n");
    sb.append("    duplicate: ").append(toIndentedString(duplicate)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    locality: ").append(toIndentedString(locality)).append("\n");
    sb.append("    postCode: ").append(toIndentedString(postCode)).append("\n");
    sb.append("    region: ").append(toIndentedString(region)).append("\n");
    sb.append("    significantParentCompanies: ").append(toIndentedString(significantParentCompanies)).append("\n");
    sb.append("    significantPeople: ").append(toIndentedString(significantPeople)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("addressLine1");
    openapiFields.add("companyName");
    openapiFields.add("companyNumber");
    openapiFields.add("dateOfRegistration");
    openapiFields.add("duplicate");
    openapiFields.add("id");
    openapiFields.add("locality");
    openapiFields.add("postCode");
    openapiFields.add("region");
    openapiFields.add("significantParentCompanies");
    openapiFields.add("significantPeople");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CredasApiModelsCompaniesCompanyDetail
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CredasApiModelsCompaniesCompanyDetail.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CredasApiModelsCompaniesCompanyDetail is not found in the empty JSON string", CredasApiModelsCompaniesCompanyDetail.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CredasApiModelsCompaniesCompanyDetail.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CredasApiModelsCompaniesCompanyDetail` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("addressLine1") != null && !jsonObj.get("addressLine1").isJsonNull()) && !jsonObj.get("addressLine1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `addressLine1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("addressLine1").toString()));
      }
      if ((jsonObj.get("companyName") != null && !jsonObj.get("companyName").isJsonNull()) && !jsonObj.get("companyName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `companyName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("companyName").toString()));
      }
      if ((jsonObj.get("companyNumber") != null && !jsonObj.get("companyNumber").isJsonNull()) && !jsonObj.get("companyNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `companyNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("companyNumber").toString()));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("locality") != null && !jsonObj.get("locality").isJsonNull()) && !jsonObj.get("locality").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `locality` to be a primitive type in the JSON string but got `%s`", jsonObj.get("locality").toString()));
      }
      if ((jsonObj.get("postCode") != null && !jsonObj.get("postCode").isJsonNull()) && !jsonObj.get("postCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `postCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("postCode").toString()));
      }
      if ((jsonObj.get("region") != null && !jsonObj.get("region").isJsonNull()) && !jsonObj.get("region").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `region` to be a primitive type in the JSON string but got `%s`", jsonObj.get("region").toString()));
      }
      if (jsonObj.get("significantParentCompanies") != null && !jsonObj.get("significantParentCompanies").isJsonNull()) {
        JsonArray jsonArraysignificantParentCompanies = jsonObj.getAsJsonArray("significantParentCompanies");
        if (jsonArraysignificantParentCompanies != null) {
          // ensure the json data is an array
          if (!jsonObj.get("significantParentCompanies").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `significantParentCompanies` to be an array in the JSON string but got `%s`", jsonObj.get("significantParentCompanies").toString()));
          }

          // validate the optional field `significantParentCompanies` (array)
          for (int i = 0; i < jsonArraysignificantParentCompanies.size(); i++) {
            CredasApiModelsCompaniesCompanyDetail.validateJsonElement(jsonArraysignificantParentCompanies.get(i));
          };
        }
      }
      if (jsonObj.get("significantPeople") != null && !jsonObj.get("significantPeople").isJsonNull()) {
        JsonArray jsonArraysignificantPeople = jsonObj.getAsJsonArray("significantPeople");
        if (jsonArraysignificantPeople != null) {
          // ensure the json data is an array
          if (!jsonObj.get("significantPeople").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `significantPeople` to be an array in the JSON string but got `%s`", jsonObj.get("significantPeople").toString()));
          }

          // validate the optional field `significantPeople` (array)
          for (int i = 0; i < jsonArraysignificantPeople.size(); i++) {
            CredasApiModelsCompaniesSignificantPerson.validateJsonElement(jsonArraysignificantPeople.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CredasApiModelsCompaniesCompanyDetail.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CredasApiModelsCompaniesCompanyDetail' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CredasApiModelsCompaniesCompanyDetail> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CredasApiModelsCompaniesCompanyDetail.class));

       return (TypeAdapter<T>) new TypeAdapter<CredasApiModelsCompaniesCompanyDetail>() {
           @Override
           public void write(JsonWriter out, CredasApiModelsCompaniesCompanyDetail value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CredasApiModelsCompaniesCompanyDetail read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CredasApiModelsCompaniesCompanyDetail given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CredasApiModelsCompaniesCompanyDetail
   * @throws IOException if the JSON string is invalid with respect to CredasApiModelsCompaniesCompanyDetail
   */
  public static CredasApiModelsCompaniesCompanyDetail fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CredasApiModelsCompaniesCompanyDetail.class);
  }

  /**
   * Convert an instance of CredasApiModelsCompaniesCompanyDetail to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

