/*
 * Credas API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;
import org.openapitools.client.model.CredasApiModelsBankAccountsAccountVerificationResponse;
import org.openapitools.client.model.CredasApiModelsPropertyRegisterPropertyRegisterCheckResponse;
import org.openapitools.client.model.CredasApiModelsRegistrationsDataCheckSourceSummary;
import org.openapitools.client.model.CredasApiModelsRegistrationsIdDocumentSummary;
import org.openapitools.client.model.CredasApiModelsRegistrationsIdVerification;
import org.openapitools.client.model.CredasApiModelsRegistrationsPersonalDetails;
import org.openapitools.client.model.CredasApiModelsRegistrationsRegistrationComment;
import org.openapitools.client.model.CredasApiModelsRegistrationsSettlementStatus;
import org.openapitools.client.model.CredasApiModelsStatusChecksStatusCheck;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CredasApiModelsRegistrationsRegistrationSummary
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:30:15.246346-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CredasApiModelsRegistrationsRegistrationSummary {
  public static final String SERIALIZED_NAME_COMMENTS = "Comments";
  @SerializedName(SERIALIZED_NAME_COMMENTS)
  private List<CredasApiModelsRegistrationsRegistrationComment> comments = new ArrayList<>();

  public static final String SERIALIZED_NAME_CREATED_BY_AGENCY_USER_EMAIL = "CreatedByAgencyUserEmail";
  @SerializedName(SERIALIZED_NAME_CREATED_BY_AGENCY_USER_EMAIL)
  private String createdByAgencyUserEmail;

  public static final String SERIALIZED_NAME_DI_T_F_DATE = "DITFDate";
  @SerializedName(SERIALIZED_NAME_DI_T_F_DATE)
  private OffsetDateTime diTFDate;

  /**
   * No &#x3D; 0, Yes &#x3D; 1, Pending &#x3D; 2
   */
  @JsonAdapter(DiTFStatusEnum.Adapter.class)
  public enum DiTFStatusEnum {
    NUMBER_0(0),
    
    NUMBER_1(1),
    
    NUMBER_2(2);

    private Integer value;

    DiTFStatusEnum(Integer value) {
      this.value = value;
    }

    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static DiTFStatusEnum fromValue(Integer value) {
      for (DiTFStatusEnum b : DiTFStatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<DiTFStatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final DiTFStatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public DiTFStatusEnum read(final JsonReader jsonReader) throws IOException {
        Integer value =  jsonReader.nextInt();
        return DiTFStatusEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      Integer value = jsonElement.getAsInt();
      DiTFStatusEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_DI_T_F_STATUS = "DITFStatus";
  @SerializedName(SERIALIZED_NAME_DI_T_F_STATUS)
  private DiTFStatusEnum diTFStatus;

  public static final String SERIALIZED_NAME_IS_EXPIRED = "IsExpired";
  @SerializedName(SERIALIZED_NAME_IS_EXPIRED)
  private Boolean isExpired;

  public static final String SERIALIZED_NAME_VERIFIED_IN_APP_DATE = "VerifiedInAppDate";
  @SerializedName(SERIALIZED_NAME_VERIFIED_IN_APP_DATE)
  private OffsetDateTime verifiedInAppDate;

  public static final String SERIALIZED_NAME_BANK_ACCOUNT_CHECKS = "bankAccountChecks";
  @SerializedName(SERIALIZED_NAME_BANK_ACCOUNT_CHECKS)
  private List<CredasApiModelsBankAccountsAccountVerificationResponse> bankAccountChecks = new ArrayList<>();

  public static final String SERIALIZED_NAME_CREATED_BY_AGENCY_USER_ID = "createdByAgencyUserId";
  @SerializedName(SERIALIZED_NAME_CREATED_BY_AGENCY_USER_ID)
  private UUID createdByAgencyUserId;

  public static final String SERIALIZED_NAME_CREDIT_STATUS_CHECK = "creditStatusCheck";
  @SerializedName(SERIALIZED_NAME_CREDIT_STATUS_CHECK)
  private CredasApiModelsStatusChecksStatusCheck creditStatusCheck;

  public static final String SERIALIZED_NAME_CUSTOM_TERMS_ACCEPTED = "customTermsAccepted";
  @SerializedName(SERIALIZED_NAME_CUSTOM_TERMS_ACCEPTED)
  private Boolean customTermsAccepted;

  public static final String SERIALIZED_NAME_CUSTOM_TERMS_ACCEPTED_DATE_TIME = "customTermsAcceptedDateTime";
  @SerializedName(SERIALIZED_NAME_CUSTOM_TERMS_ACCEPTED_DATE_TIME)
  private OffsetDateTime customTermsAcceptedDateTime;

  public static final String SERIALIZED_NAME_CUSTOM_TERMS_ACCEPTED_VERSION = "customTermsAcceptedVersion";
  @SerializedName(SERIALIZED_NAME_CUSTOM_TERMS_ACCEPTED_VERSION)
  private Integer customTermsAcceptedVersion;

  /**
   * Unknown &#x3D; 0, Pass &#x3D; 1, Refer &#x3D; 2, Fail &#x3D; 3
   */
  @JsonAdapter(DataCheckResultEnum.Adapter.class)
  public enum DataCheckResultEnum {
    NUMBER_0(0),
    
    NUMBER_1(1),
    
    NUMBER_2(2),
    
    NUMBER_3(3);

    private Integer value;

    DataCheckResultEnum(Integer value) {
      this.value = value;
    }

    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static DataCheckResultEnum fromValue(Integer value) {
      for (DataCheckResultEnum b : DataCheckResultEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<DataCheckResultEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final DataCheckResultEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public DataCheckResultEnum read(final JsonReader jsonReader) throws IOException {
        Integer value =  jsonReader.nextInt();
        return DataCheckResultEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      Integer value = jsonElement.getAsInt();
      DataCheckResultEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_DATA_CHECK_RESULT = "dataCheckResult";
  @SerializedName(SERIALIZED_NAME_DATA_CHECK_RESULT)
  private DataCheckResultEnum dataCheckResult;

  public static final String SERIALIZED_NAME_DATA_CHECK_SOURCES = "dataCheckSources";
  @SerializedName(SERIALIZED_NAME_DATA_CHECK_SOURCES)
  private List<CredasApiModelsRegistrationsDataCheckSourceSummary> dataCheckSources = new ArrayList<>();

  public static final String SERIALIZED_NAME_DATA_CHECKS_PERFORMED = "dataChecksPerformed";
  @SerializedName(SERIALIZED_NAME_DATA_CHECKS_PERFORMED)
  private Boolean dataChecksPerformed;

  public static final String SERIALIZED_NAME_DATE_COMPLETED = "dateCompleted";
  @SerializedName(SERIALIZED_NAME_DATE_COMPLETED)
  private OffsetDateTime dateCompleted;

  public static final String SERIALIZED_NAME_DATE_CREATED = "dateCreated";
  @SerializedName(SERIALIZED_NAME_DATE_CREATED)
  private OffsetDateTime dateCreated;

  public static final String SERIALIZED_NAME_EMAIL = "email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  private String email;

  public static final String SERIALIZED_NAME_FORENAME = "forename";
  @SerializedName(SERIALIZED_NAME_FORENAME)
  private String forename;

  public static final String SERIALIZED_NAME_HAS_LIVENESS_PERFORMED = "hasLivenessPerformed";
  @SerializedName(SERIALIZED_NAME_HAS_LIVENESS_PERFORMED)
  private Boolean hasLivenessPerformed;

  public static final String SERIALIZED_NAME_HAS_SELFIE = "hasSelfie";
  @SerializedName(SERIALIZED_NAME_HAS_SELFIE)
  private Boolean hasSelfie;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private UUID id;

  public static final String SERIALIZED_NAME_ID_DOCUMENTS = "idDocuments";
  @SerializedName(SERIALIZED_NAME_ID_DOCUMENTS)
  private List<CredasApiModelsRegistrationsIdDocumentSummary> idDocuments = new ArrayList<>();

  public static final String SERIALIZED_NAME_ID_VERIFICATION = "idVerification";
  @SerializedName(SERIALIZED_NAME_ID_VERIFICATION)
  private CredasApiModelsRegistrationsIdVerification idVerification;

  public static final String SERIALIZED_NAME_IS_AGENT_LED = "isAgentLed";
  @SerializedName(SERIALIZED_NAME_IS_AGENT_LED)
  private Boolean isAgentLed;

  /**
   * NotApplicable &#x3D; 0, UniqueActionProcess &#x3D; 1, Passive &#x3D; 2
   */
  @JsonAdapter(LivenessMethodEnum.Adapter.class)
  public enum LivenessMethodEnum {
    NUMBER_0(0),
    
    NUMBER_1(1),
    
    NUMBER_2(2);

    private Integer value;

    LivenessMethodEnum(Integer value) {
      this.value = value;
    }

    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static LivenessMethodEnum fromValue(Integer value) {
      for (LivenessMethodEnum b : LivenessMethodEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<LivenessMethodEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final LivenessMethodEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public LivenessMethodEnum read(final JsonReader jsonReader) throws IOException {
        Integer value =  jsonReader.nextInt();
        return LivenessMethodEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      Integer value = jsonElement.getAsInt();
      LivenessMethodEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_LIVENESS_METHOD = "livenessMethod";
  @SerializedName(SERIALIZED_NAME_LIVENESS_METHOD)
  private LivenessMethodEnum livenessMethod;

  /**
   * NotSubmitted &#x3D; 0, Verified &#x3D; 1, Unverified &#x3D; 2, Unknown &#x3D; 3, RetakeRequested &#x3D; 4
   */
  @JsonAdapter(LivenessStatusEnum.Adapter.class)
  public enum LivenessStatusEnum {
    NUMBER_0(0),
    
    NUMBER_1(1),
    
    NUMBER_2(2),
    
    NUMBER_3(3),
    
    NUMBER_4(4);

    private Integer value;

    LivenessStatusEnum(Integer value) {
      this.value = value;
    }

    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static LivenessStatusEnum fromValue(Integer value) {
      for (LivenessStatusEnum b : LivenessStatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<LivenessStatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final LivenessStatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public LivenessStatusEnum read(final JsonReader jsonReader) throws IOException {
        Integer value =  jsonReader.nextInt();
        return LivenessStatusEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      Integer value = jsonElement.getAsInt();
      LivenessStatusEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_LIVENESS_STATUS = "livenessStatus";
  @SerializedName(SERIALIZED_NAME_LIVENESS_STATUS)
  private LivenessStatusEnum livenessStatus;

  public static final String SERIALIZED_NAME_LIVENESS_VERIFIED = "livenessVerified";
  @SerializedName(SERIALIZED_NAME_LIVENESS_VERIFIED)
  private Boolean livenessVerified;

  public static final String SERIALIZED_NAME_MIDDLE_NAME = "middleName";
  @SerializedName(SERIALIZED_NAME_MIDDLE_NAME)
  private String middleName;

  public static final String SERIALIZED_NAME_PERSONAL_DETAILS = "personalDetails";
  @SerializedName(SERIALIZED_NAME_PERSONAL_DETAILS)
  private CredasApiModelsRegistrationsPersonalDetails personalDetails;

  public static final String SERIALIZED_NAME_PHONE_NUMBER = "phoneNumber";
  @SerializedName(SERIALIZED_NAME_PHONE_NUMBER)
  private String phoneNumber;

  public static final String SERIALIZED_NAME_PROOF_OF_OWNERSHIP_CHECK = "proofOfOwnershipCheck";
  @SerializedName(SERIALIZED_NAME_PROOF_OF_OWNERSHIP_CHECK)
  private CredasApiModelsPropertyRegisterPropertyRegisterCheckResponse proofOfOwnershipCheck;

  public static final String SERIALIZED_NAME_REFERENCE_ID = "referenceId";
  @SerializedName(SERIALIZED_NAME_REFERENCE_ID)
  private String referenceId;

  public static final String SERIALIZED_NAME_REG_CODE = "regCode";
  @SerializedName(SERIALIZED_NAME_REG_CODE)
  private String regCode;

  public static final String SERIALIZED_NAME_REG_TYPE_ID = "regTypeId";
  @SerializedName(SERIALIZED_NAME_REG_TYPE_ID)
  private UUID regTypeId;

  public static final String SERIALIZED_NAME_RIGHT_TO_RENT_CHECK = "rightToRentCheck";
  @SerializedName(SERIALIZED_NAME_RIGHT_TO_RENT_CHECK)
  private CredasApiModelsRegistrationsSettlementStatus rightToRentCheck;

  public static final String SERIALIZED_NAME_RIGHT_TO_WORK_CHECK = "rightToWorkCheck";
  @SerializedName(SERIALIZED_NAME_RIGHT_TO_WORK_CHECK)
  private CredasApiModelsRegistrationsSettlementStatus rightToWorkCheck;

  /**
   * This property is no longer supported. Right to work is now available as an individual check.&lt;br /&gt;  values&#x3D;&gt; Pending &#x3D; 0, Pass &#x3D; 1, Fail &#x3D; 2
   */
  @JsonAdapter(RightToWorkDocumentsProvidedEnum.Adapter.class)
  public enum RightToWorkDocumentsProvidedEnum {
    NUMBER_0(0),
    
    NUMBER_1(1),
    
    NUMBER_2(2);

    private Integer value;

    RightToWorkDocumentsProvidedEnum(Integer value) {
      this.value = value;
    }

    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static RightToWorkDocumentsProvidedEnum fromValue(Integer value) {
      for (RightToWorkDocumentsProvidedEnum b : RightToWorkDocumentsProvidedEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<RightToWorkDocumentsProvidedEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final RightToWorkDocumentsProvidedEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public RightToWorkDocumentsProvidedEnum read(final JsonReader jsonReader) throws IOException {
        Integer value =  jsonReader.nextInt();
        return RightToWorkDocumentsProvidedEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      Integer value = jsonElement.getAsInt();
      RightToWorkDocumentsProvidedEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_RIGHT_TO_WORK_DOCUMENTS_PROVIDED = "rightToWorkDocumentsProvided";
  @SerializedName(SERIALIZED_NAME_RIGHT_TO_WORK_DOCUMENTS_PROVIDED)
  private RightToWorkDocumentsProvidedEnum rightToWorkDocumentsProvided;

  public static final String SERIALIZED_NAME_SAFE_HARBOUR_VERIFIED_DATE = "safeHarbourVerifiedDate";
  @SerializedName(SERIALIZED_NAME_SAFE_HARBOUR_VERIFIED_DATE)
  private OffsetDateTime safeHarbourVerifiedDate;

  /**
   * No &#x3D; 0, Yes &#x3D; 1, UnderReview &#x3D; 2
   */
  @JsonAdapter(SafeHarbourVerifiedStatusEnum.Adapter.class)
  public enum SafeHarbourVerifiedStatusEnum {
    NUMBER_0(0),
    
    NUMBER_1(1),
    
    NUMBER_2(2);

    private Integer value;

    SafeHarbourVerifiedStatusEnum(Integer value) {
      this.value = value;
    }

    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static SafeHarbourVerifiedStatusEnum fromValue(Integer value) {
      for (SafeHarbourVerifiedStatusEnum b : SafeHarbourVerifiedStatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<SafeHarbourVerifiedStatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final SafeHarbourVerifiedStatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public SafeHarbourVerifiedStatusEnum read(final JsonReader jsonReader) throws IOException {
        Integer value =  jsonReader.nextInt();
        return SafeHarbourVerifiedStatusEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      Integer value = jsonElement.getAsInt();
      SafeHarbourVerifiedStatusEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_SAFE_HARBOUR_VERIFIED_STATUS = "safeHarbourVerifiedStatus";
  @SerializedName(SERIALIZED_NAME_SAFE_HARBOUR_VERIFIED_STATUS)
  private SafeHarbourVerifiedStatusEnum safeHarbourVerifiedStatus;

  /**
   * Unknown &#x3D; 0, Submitted &#x3D; 1, Approved &#x3D; 2, Rejected &#x3D; 3, Exported &#x3D; 4, Invited &#x3D; 6
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    NUMBER_0(0),
    
    NUMBER_1(1),
    
    NUMBER_2(2),
    
    NUMBER_3(3),
    
    NUMBER_4(4),
    
    NUMBER_6(6);

    private Integer value;

    StatusEnum(Integer value) {
      this.value = value;
    }

    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(Integer value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        Integer value =  jsonReader.nextInt();
        return StatusEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      Integer value = jsonElement.getAsInt();
      StatusEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private StatusEnum status;

  public static final String SERIALIZED_NAME_SURNAME = "surname";
  @SerializedName(SERIALIZED_NAME_SURNAME)
  private String surname;

  public CredasApiModelsRegistrationsRegistrationSummary() {
  }

  public CredasApiModelsRegistrationsRegistrationSummary comments(List<CredasApiModelsRegistrationsRegistrationComment> comments) {
    this.comments = comments;
    return this;
  }

  public CredasApiModelsRegistrationsRegistrationSummary addCommentsItem(CredasApiModelsRegistrationsRegistrationComment commentsItem) {
    if (this.comments == null) {
      this.comments = new ArrayList<>();
    }
    this.comments.add(commentsItem);
    return this;
  }

  /**
   * Get comments
   * @return comments
   */
  @javax.annotation.Nullable
  public List<CredasApiModelsRegistrationsRegistrationComment> getComments() {
    return comments;
  }

  public void setComments(List<CredasApiModelsRegistrationsRegistrationComment> comments) {
    this.comments = comments;
  }


  public CredasApiModelsRegistrationsRegistrationSummary createdByAgencyUserEmail(String createdByAgencyUserEmail) {
    this.createdByAgencyUserEmail = createdByAgencyUserEmail;
    return this;
  }

  /**
   * Get createdByAgencyUserEmail
   * @return createdByAgencyUserEmail
   */
  @javax.annotation.Nullable
  public String getCreatedByAgencyUserEmail() {
    return createdByAgencyUserEmail;
  }

  public void setCreatedByAgencyUserEmail(String createdByAgencyUserEmail) {
    this.createdByAgencyUserEmail = createdByAgencyUserEmail;
  }


  public CredasApiModelsRegistrationsRegistrationSummary diTFDate(OffsetDateTime diTFDate) {
    this.diTFDate = diTFDate;
    return this;
  }

  /**
   * Get diTFDate
   * @return diTFDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDiTFDate() {
    return diTFDate;
  }

  public void setDiTFDate(OffsetDateTime diTFDate) {
    this.diTFDate = diTFDate;
  }


  public CredasApiModelsRegistrationsRegistrationSummary diTFStatus(DiTFStatusEnum diTFStatus) {
    this.diTFStatus = diTFStatus;
    return this;
  }

  /**
   * No &#x3D; 0, Yes &#x3D; 1, Pending &#x3D; 2
   * @return diTFStatus
   */
  @javax.annotation.Nullable
  public DiTFStatusEnum getDiTFStatus() {
    return diTFStatus;
  }

  public void setDiTFStatus(DiTFStatusEnum diTFStatus) {
    this.diTFStatus = diTFStatus;
  }


  public CredasApiModelsRegistrationsRegistrationSummary isExpired(Boolean isExpired) {
    this.isExpired = isExpired;
    return this;
  }

  /**
   * Get isExpired
   * @return isExpired
   */
  @javax.annotation.Nullable
  public Boolean getIsExpired() {
    return isExpired;
  }

  public void setIsExpired(Boolean isExpired) {
    this.isExpired = isExpired;
  }


  public CredasApiModelsRegistrationsRegistrationSummary verifiedInAppDate(OffsetDateTime verifiedInAppDate) {
    this.verifiedInAppDate = verifiedInAppDate;
    return this;
  }

  /**
   * Get verifiedInAppDate
   * @return verifiedInAppDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getVerifiedInAppDate() {
    return verifiedInAppDate;
  }

  public void setVerifiedInAppDate(OffsetDateTime verifiedInAppDate) {
    this.verifiedInAppDate = verifiedInAppDate;
  }


  public CredasApiModelsRegistrationsRegistrationSummary bankAccountChecks(List<CredasApiModelsBankAccountsAccountVerificationResponse> bankAccountChecks) {
    this.bankAccountChecks = bankAccountChecks;
    return this;
  }

  public CredasApiModelsRegistrationsRegistrationSummary addBankAccountChecksItem(CredasApiModelsBankAccountsAccountVerificationResponse bankAccountChecksItem) {
    if (this.bankAccountChecks == null) {
      this.bankAccountChecks = new ArrayList<>();
    }
    this.bankAccountChecks.add(bankAccountChecksItem);
    return this;
  }

  /**
   * Get bankAccountChecks
   * @return bankAccountChecks
   */
  @javax.annotation.Nullable
  public List<CredasApiModelsBankAccountsAccountVerificationResponse> getBankAccountChecks() {
    return bankAccountChecks;
  }

  public void setBankAccountChecks(List<CredasApiModelsBankAccountsAccountVerificationResponse> bankAccountChecks) {
    this.bankAccountChecks = bankAccountChecks;
  }


  public CredasApiModelsRegistrationsRegistrationSummary createdByAgencyUserId(UUID createdByAgencyUserId) {
    this.createdByAgencyUserId = createdByAgencyUserId;
    return this;
  }

  /**
   * Get createdByAgencyUserId
   * @return createdByAgencyUserId
   */
  @javax.annotation.Nullable
  public UUID getCreatedByAgencyUserId() {
    return createdByAgencyUserId;
  }

  public void setCreatedByAgencyUserId(UUID createdByAgencyUserId) {
    this.createdByAgencyUserId = createdByAgencyUserId;
  }


  public CredasApiModelsRegistrationsRegistrationSummary creditStatusCheck(CredasApiModelsStatusChecksStatusCheck creditStatusCheck) {
    this.creditStatusCheck = creditStatusCheck;
    return this;
  }

  /**
   * Get creditStatusCheck
   * @return creditStatusCheck
   */
  @javax.annotation.Nullable
  public CredasApiModelsStatusChecksStatusCheck getCreditStatusCheck() {
    return creditStatusCheck;
  }

  public void setCreditStatusCheck(CredasApiModelsStatusChecksStatusCheck creditStatusCheck) {
    this.creditStatusCheck = creditStatusCheck;
  }


  public CredasApiModelsRegistrationsRegistrationSummary customTermsAccepted(Boolean customTermsAccepted) {
    this.customTermsAccepted = customTermsAccepted;
    return this;
  }

  /**
   * Get customTermsAccepted
   * @return customTermsAccepted
   */
  @javax.annotation.Nullable
  public Boolean getCustomTermsAccepted() {
    return customTermsAccepted;
  }

  public void setCustomTermsAccepted(Boolean customTermsAccepted) {
    this.customTermsAccepted = customTermsAccepted;
  }


  public CredasApiModelsRegistrationsRegistrationSummary customTermsAcceptedDateTime(OffsetDateTime customTermsAcceptedDateTime) {
    this.customTermsAcceptedDateTime = customTermsAcceptedDateTime;
    return this;
  }

  /**
   * Get customTermsAcceptedDateTime
   * @return customTermsAcceptedDateTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCustomTermsAcceptedDateTime() {
    return customTermsAcceptedDateTime;
  }

  public void setCustomTermsAcceptedDateTime(OffsetDateTime customTermsAcceptedDateTime) {
    this.customTermsAcceptedDateTime = customTermsAcceptedDateTime;
  }


  public CredasApiModelsRegistrationsRegistrationSummary customTermsAcceptedVersion(Integer customTermsAcceptedVersion) {
    this.customTermsAcceptedVersion = customTermsAcceptedVersion;
    return this;
  }

  /**
   * Get customTermsAcceptedVersion
   * @return customTermsAcceptedVersion
   */
  @javax.annotation.Nullable
  public Integer getCustomTermsAcceptedVersion() {
    return customTermsAcceptedVersion;
  }

  public void setCustomTermsAcceptedVersion(Integer customTermsAcceptedVersion) {
    this.customTermsAcceptedVersion = customTermsAcceptedVersion;
  }


  public CredasApiModelsRegistrationsRegistrationSummary dataCheckResult(DataCheckResultEnum dataCheckResult) {
    this.dataCheckResult = dataCheckResult;
    return this;
  }

  /**
   * Unknown &#x3D; 0, Pass &#x3D; 1, Refer &#x3D; 2, Fail &#x3D; 3
   * @return dataCheckResult
   */
  @javax.annotation.Nonnull
  public DataCheckResultEnum getDataCheckResult() {
    return dataCheckResult;
  }

  public void setDataCheckResult(DataCheckResultEnum dataCheckResult) {
    this.dataCheckResult = dataCheckResult;
  }


  public CredasApiModelsRegistrationsRegistrationSummary dataCheckSources(List<CredasApiModelsRegistrationsDataCheckSourceSummary> dataCheckSources) {
    this.dataCheckSources = dataCheckSources;
    return this;
  }

  public CredasApiModelsRegistrationsRegistrationSummary addDataCheckSourcesItem(CredasApiModelsRegistrationsDataCheckSourceSummary dataCheckSourcesItem) {
    if (this.dataCheckSources == null) {
      this.dataCheckSources = new ArrayList<>();
    }
    this.dataCheckSources.add(dataCheckSourcesItem);
    return this;
  }

  /**
   * Get dataCheckSources
   * @return dataCheckSources
   */
  @javax.annotation.Nullable
  public List<CredasApiModelsRegistrationsDataCheckSourceSummary> getDataCheckSources() {
    return dataCheckSources;
  }

  public void setDataCheckSources(List<CredasApiModelsRegistrationsDataCheckSourceSummary> dataCheckSources) {
    this.dataCheckSources = dataCheckSources;
  }


  public CredasApiModelsRegistrationsRegistrationSummary dataChecksPerformed(Boolean dataChecksPerformed) {
    this.dataChecksPerformed = dataChecksPerformed;
    return this;
  }

  /**
   * Get dataChecksPerformed
   * @return dataChecksPerformed
   */
  @javax.annotation.Nonnull
  public Boolean getDataChecksPerformed() {
    return dataChecksPerformed;
  }

  public void setDataChecksPerformed(Boolean dataChecksPerformed) {
    this.dataChecksPerformed = dataChecksPerformed;
  }


  public CredasApiModelsRegistrationsRegistrationSummary dateCompleted(OffsetDateTime dateCompleted) {
    this.dateCompleted = dateCompleted;
    return this;
  }

  /**
   * Get dateCompleted
   * @return dateCompleted
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDateCompleted() {
    return dateCompleted;
  }

  public void setDateCompleted(OffsetDateTime dateCompleted) {
    this.dateCompleted = dateCompleted;
  }


  public CredasApiModelsRegistrationsRegistrationSummary dateCreated(OffsetDateTime dateCreated) {
    this.dateCreated = dateCreated;
    return this;
  }

  /**
   * Get dateCreated
   * @return dateCreated
   */
  @javax.annotation.Nonnull
  public OffsetDateTime getDateCreated() {
    return dateCreated;
  }

  public void setDateCreated(OffsetDateTime dateCreated) {
    this.dateCreated = dateCreated;
  }


  public CredasApiModelsRegistrationsRegistrationSummary email(String email) {
    this.email = email;
    return this;
  }

  /**
   * Get email
   * @return email
   */
  @javax.annotation.Nullable
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }


  public CredasApiModelsRegistrationsRegistrationSummary forename(String forename) {
    this.forename = forename;
    return this;
  }

  /**
   * Get forename
   * @return forename
   */
  @javax.annotation.Nonnull
  public String getForename() {
    return forename;
  }

  public void setForename(String forename) {
    this.forename = forename;
  }


  public CredasApiModelsRegistrationsRegistrationSummary hasLivenessPerformed(Boolean hasLivenessPerformed) {
    this.hasLivenessPerformed = hasLivenessPerformed;
    return this;
  }

  /**
   * Get hasLivenessPerformed
   * @return hasLivenessPerformed
   */
  @javax.annotation.Nullable
  public Boolean getHasLivenessPerformed() {
    return hasLivenessPerformed;
  }

  public void setHasLivenessPerformed(Boolean hasLivenessPerformed) {
    this.hasLivenessPerformed = hasLivenessPerformed;
  }


  public CredasApiModelsRegistrationsRegistrationSummary hasSelfie(Boolean hasSelfie) {
    this.hasSelfie = hasSelfie;
    return this;
  }

  /**
   * Get hasSelfie
   * @return hasSelfie
   */
  @javax.annotation.Nullable
  public Boolean getHasSelfie() {
    return hasSelfie;
  }

  public void setHasSelfie(Boolean hasSelfie) {
    this.hasSelfie = hasSelfie;
  }


  public CredasApiModelsRegistrationsRegistrationSummary id(UUID id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nonnull
  public UUID getId() {
    return id;
  }

  public void setId(UUID id) {
    this.id = id;
  }


  public CredasApiModelsRegistrationsRegistrationSummary idDocuments(List<CredasApiModelsRegistrationsIdDocumentSummary> idDocuments) {
    this.idDocuments = idDocuments;
    return this;
  }

  public CredasApiModelsRegistrationsRegistrationSummary addIdDocumentsItem(CredasApiModelsRegistrationsIdDocumentSummary idDocumentsItem) {
    if (this.idDocuments == null) {
      this.idDocuments = new ArrayList<>();
    }
    this.idDocuments.add(idDocumentsItem);
    return this;
  }

  /**
   * Get idDocuments
   * @return idDocuments
   */
  @javax.annotation.Nullable
  public List<CredasApiModelsRegistrationsIdDocumentSummary> getIdDocuments() {
    return idDocuments;
  }

  public void setIdDocuments(List<CredasApiModelsRegistrationsIdDocumentSummary> idDocuments) {
    this.idDocuments = idDocuments;
  }


  public CredasApiModelsRegistrationsRegistrationSummary idVerification(CredasApiModelsRegistrationsIdVerification idVerification) {
    this.idVerification = idVerification;
    return this;
  }

  /**
   * Get idVerification
   * @return idVerification
   */
  @javax.annotation.Nullable
  public CredasApiModelsRegistrationsIdVerification getIdVerification() {
    return idVerification;
  }

  public void setIdVerification(CredasApiModelsRegistrationsIdVerification idVerification) {
    this.idVerification = idVerification;
  }


  public CredasApiModelsRegistrationsRegistrationSummary isAgentLed(Boolean isAgentLed) {
    this.isAgentLed = isAgentLed;
    return this;
  }

  /**
   * Get isAgentLed
   * @return isAgentLed
   */
  @javax.annotation.Nullable
  public Boolean getIsAgentLed() {
    return isAgentLed;
  }

  public void setIsAgentLed(Boolean isAgentLed) {
    this.isAgentLed = isAgentLed;
  }


  public CredasApiModelsRegistrationsRegistrationSummary livenessMethod(LivenessMethodEnum livenessMethod) {
    this.livenessMethod = livenessMethod;
    return this;
  }

  /**
   * NotApplicable &#x3D; 0, UniqueActionProcess &#x3D; 1, Passive &#x3D; 2
   * @return livenessMethod
   */
  @javax.annotation.Nullable
  public LivenessMethodEnum getLivenessMethod() {
    return livenessMethod;
  }

  public void setLivenessMethod(LivenessMethodEnum livenessMethod) {
    this.livenessMethod = livenessMethod;
  }


  public CredasApiModelsRegistrationsRegistrationSummary livenessStatus(LivenessStatusEnum livenessStatus) {
    this.livenessStatus = livenessStatus;
    return this;
  }

  /**
   * NotSubmitted &#x3D; 0, Verified &#x3D; 1, Unverified &#x3D; 2, Unknown &#x3D; 3, RetakeRequested &#x3D; 4
   * @return livenessStatus
   */
  @javax.annotation.Nonnull
  public LivenessStatusEnum getLivenessStatus() {
    return livenessStatus;
  }

  public void setLivenessStatus(LivenessStatusEnum livenessStatus) {
    this.livenessStatus = livenessStatus;
  }


  public CredasApiModelsRegistrationsRegistrationSummary livenessVerified(Boolean livenessVerified) {
    this.livenessVerified = livenessVerified;
    return this;
  }

  /**
   * Get livenessVerified
   * @return livenessVerified
   */
  @javax.annotation.Nonnull
  public Boolean getLivenessVerified() {
    return livenessVerified;
  }

  public void setLivenessVerified(Boolean livenessVerified) {
    this.livenessVerified = livenessVerified;
  }


  public CredasApiModelsRegistrationsRegistrationSummary middleName(String middleName) {
    this.middleName = middleName;
    return this;
  }

  /**
   * Get middleName
   * @return middleName
   */
  @javax.annotation.Nullable
  public String getMiddleName() {
    return middleName;
  }

  public void setMiddleName(String middleName) {
    this.middleName = middleName;
  }


  public CredasApiModelsRegistrationsRegistrationSummary personalDetails(CredasApiModelsRegistrationsPersonalDetails personalDetails) {
    this.personalDetails = personalDetails;
    return this;
  }

  /**
   * Get personalDetails
   * @return personalDetails
   */
  @javax.annotation.Nullable
  public CredasApiModelsRegistrationsPersonalDetails getPersonalDetails() {
    return personalDetails;
  }

  public void setPersonalDetails(CredasApiModelsRegistrationsPersonalDetails personalDetails) {
    this.personalDetails = personalDetails;
  }


  public CredasApiModelsRegistrationsRegistrationSummary phoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
    return this;
  }

  /**
   * Get phoneNumber
   * @return phoneNumber
   */
  @javax.annotation.Nullable
  public String getPhoneNumber() {
    return phoneNumber;
  }

  public void setPhoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
  }


  public CredasApiModelsRegistrationsRegistrationSummary proofOfOwnershipCheck(CredasApiModelsPropertyRegisterPropertyRegisterCheckResponse proofOfOwnershipCheck) {
    this.proofOfOwnershipCheck = proofOfOwnershipCheck;
    return this;
  }

  /**
   * Get proofOfOwnershipCheck
   * @return proofOfOwnershipCheck
   */
  @javax.annotation.Nullable
  public CredasApiModelsPropertyRegisterPropertyRegisterCheckResponse getProofOfOwnershipCheck() {
    return proofOfOwnershipCheck;
  }

  public void setProofOfOwnershipCheck(CredasApiModelsPropertyRegisterPropertyRegisterCheckResponse proofOfOwnershipCheck) {
    this.proofOfOwnershipCheck = proofOfOwnershipCheck;
  }


  public CredasApiModelsRegistrationsRegistrationSummary referenceId(String referenceId) {
    this.referenceId = referenceId;
    return this;
  }

  /**
   * Get referenceId
   * @return referenceId
   */
  @javax.annotation.Nullable
  public String getReferenceId() {
    return referenceId;
  }

  public void setReferenceId(String referenceId) {
    this.referenceId = referenceId;
  }


  public CredasApiModelsRegistrationsRegistrationSummary regCode(String regCode) {
    this.regCode = regCode;
    return this;
  }

  /**
   * Get regCode
   * @return regCode
   */
  @javax.annotation.Nonnull
  public String getRegCode() {
    return regCode;
  }

  public void setRegCode(String regCode) {
    this.regCode = regCode;
  }


  public CredasApiModelsRegistrationsRegistrationSummary regTypeId(UUID regTypeId) {
    this.regTypeId = regTypeId;
    return this;
  }

  /**
   * Get regTypeId
   * @return regTypeId
   */
  @javax.annotation.Nonnull
  public UUID getRegTypeId() {
    return regTypeId;
  }

  public void setRegTypeId(UUID regTypeId) {
    this.regTypeId = regTypeId;
  }


  public CredasApiModelsRegistrationsRegistrationSummary rightToRentCheck(CredasApiModelsRegistrationsSettlementStatus rightToRentCheck) {
    this.rightToRentCheck = rightToRentCheck;
    return this;
  }

  /**
   * Get rightToRentCheck
   * @return rightToRentCheck
   */
  @javax.annotation.Nullable
  public CredasApiModelsRegistrationsSettlementStatus getRightToRentCheck() {
    return rightToRentCheck;
  }

  public void setRightToRentCheck(CredasApiModelsRegistrationsSettlementStatus rightToRentCheck) {
    this.rightToRentCheck = rightToRentCheck;
  }


  public CredasApiModelsRegistrationsRegistrationSummary rightToWorkCheck(CredasApiModelsRegistrationsSettlementStatus rightToWorkCheck) {
    this.rightToWorkCheck = rightToWorkCheck;
    return this;
  }

  /**
   * Get rightToWorkCheck
   * @return rightToWorkCheck
   */
  @javax.annotation.Nullable
  public CredasApiModelsRegistrationsSettlementStatus getRightToWorkCheck() {
    return rightToWorkCheck;
  }

  public void setRightToWorkCheck(CredasApiModelsRegistrationsSettlementStatus rightToWorkCheck) {
    this.rightToWorkCheck = rightToWorkCheck;
  }


  public CredasApiModelsRegistrationsRegistrationSummary rightToWorkDocumentsProvided(RightToWorkDocumentsProvidedEnum rightToWorkDocumentsProvided) {
    this.rightToWorkDocumentsProvided = rightToWorkDocumentsProvided;
    return this;
  }

  /**
   * This property is no longer supported. Right to work is now available as an individual check.&lt;br /&gt;  values&#x3D;&gt; Pending &#x3D; 0, Pass &#x3D; 1, Fail &#x3D; 2
   * @return rightToWorkDocumentsProvided
   */
  @javax.annotation.Nonnull
  public RightToWorkDocumentsProvidedEnum getRightToWorkDocumentsProvided() {
    return rightToWorkDocumentsProvided;
  }

  public void setRightToWorkDocumentsProvided(RightToWorkDocumentsProvidedEnum rightToWorkDocumentsProvided) {
    this.rightToWorkDocumentsProvided = rightToWorkDocumentsProvided;
  }


  public CredasApiModelsRegistrationsRegistrationSummary safeHarbourVerifiedDate(OffsetDateTime safeHarbourVerifiedDate) {
    this.safeHarbourVerifiedDate = safeHarbourVerifiedDate;
    return this;
  }

  /**
   * Get safeHarbourVerifiedDate
   * @return safeHarbourVerifiedDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getSafeHarbourVerifiedDate() {
    return safeHarbourVerifiedDate;
  }

  public void setSafeHarbourVerifiedDate(OffsetDateTime safeHarbourVerifiedDate) {
    this.safeHarbourVerifiedDate = safeHarbourVerifiedDate;
  }


  public CredasApiModelsRegistrationsRegistrationSummary safeHarbourVerifiedStatus(SafeHarbourVerifiedStatusEnum safeHarbourVerifiedStatus) {
    this.safeHarbourVerifiedStatus = safeHarbourVerifiedStatus;
    return this;
  }

  /**
   * No &#x3D; 0, Yes &#x3D; 1, UnderReview &#x3D; 2
   * @return safeHarbourVerifiedStatus
   */
  @javax.annotation.Nullable
  public SafeHarbourVerifiedStatusEnum getSafeHarbourVerifiedStatus() {
    return safeHarbourVerifiedStatus;
  }

  public void setSafeHarbourVerifiedStatus(SafeHarbourVerifiedStatusEnum safeHarbourVerifiedStatus) {
    this.safeHarbourVerifiedStatus = safeHarbourVerifiedStatus;
  }


  public CredasApiModelsRegistrationsRegistrationSummary status(StatusEnum status) {
    this.status = status;
    return this;
  }

  /**
   * Unknown &#x3D; 0, Submitted &#x3D; 1, Approved &#x3D; 2, Rejected &#x3D; 3, Exported &#x3D; 4, Invited &#x3D; 6
   * @return status
   */
  @javax.annotation.Nonnull
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  public CredasApiModelsRegistrationsRegistrationSummary surname(String surname) {
    this.surname = surname;
    return this;
  }

  /**
   * Get surname
   * @return surname
   */
  @javax.annotation.Nonnull
  public String getSurname() {
    return surname;
  }

  public void setSurname(String surname) {
    this.surname = surname;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CredasApiModelsRegistrationsRegistrationSummary credasApiModelsRegistrationsRegistrationSummary = (CredasApiModelsRegistrationsRegistrationSummary) o;
    return Objects.equals(this.comments, credasApiModelsRegistrationsRegistrationSummary.comments) &&
        Objects.equals(this.createdByAgencyUserEmail, credasApiModelsRegistrationsRegistrationSummary.createdByAgencyUserEmail) &&
        Objects.equals(this.diTFDate, credasApiModelsRegistrationsRegistrationSummary.diTFDate) &&
        Objects.equals(this.diTFStatus, credasApiModelsRegistrationsRegistrationSummary.diTFStatus) &&
        Objects.equals(this.isExpired, credasApiModelsRegistrationsRegistrationSummary.isExpired) &&
        Objects.equals(this.verifiedInAppDate, credasApiModelsRegistrationsRegistrationSummary.verifiedInAppDate) &&
        Objects.equals(this.bankAccountChecks, credasApiModelsRegistrationsRegistrationSummary.bankAccountChecks) &&
        Objects.equals(this.createdByAgencyUserId, credasApiModelsRegistrationsRegistrationSummary.createdByAgencyUserId) &&
        Objects.equals(this.creditStatusCheck, credasApiModelsRegistrationsRegistrationSummary.creditStatusCheck) &&
        Objects.equals(this.customTermsAccepted, credasApiModelsRegistrationsRegistrationSummary.customTermsAccepted) &&
        Objects.equals(this.customTermsAcceptedDateTime, credasApiModelsRegistrationsRegistrationSummary.customTermsAcceptedDateTime) &&
        Objects.equals(this.customTermsAcceptedVersion, credasApiModelsRegistrationsRegistrationSummary.customTermsAcceptedVersion) &&
        Objects.equals(this.dataCheckResult, credasApiModelsRegistrationsRegistrationSummary.dataCheckResult) &&
        Objects.equals(this.dataCheckSources, credasApiModelsRegistrationsRegistrationSummary.dataCheckSources) &&
        Objects.equals(this.dataChecksPerformed, credasApiModelsRegistrationsRegistrationSummary.dataChecksPerformed) &&
        Objects.equals(this.dateCompleted, credasApiModelsRegistrationsRegistrationSummary.dateCompleted) &&
        Objects.equals(this.dateCreated, credasApiModelsRegistrationsRegistrationSummary.dateCreated) &&
        Objects.equals(this.email, credasApiModelsRegistrationsRegistrationSummary.email) &&
        Objects.equals(this.forename, credasApiModelsRegistrationsRegistrationSummary.forename) &&
        Objects.equals(this.hasLivenessPerformed, credasApiModelsRegistrationsRegistrationSummary.hasLivenessPerformed) &&
        Objects.equals(this.hasSelfie, credasApiModelsRegistrationsRegistrationSummary.hasSelfie) &&
        Objects.equals(this.id, credasApiModelsRegistrationsRegistrationSummary.id) &&
        Objects.equals(this.idDocuments, credasApiModelsRegistrationsRegistrationSummary.idDocuments) &&
        Objects.equals(this.idVerification, credasApiModelsRegistrationsRegistrationSummary.idVerification) &&
        Objects.equals(this.isAgentLed, credasApiModelsRegistrationsRegistrationSummary.isAgentLed) &&
        Objects.equals(this.livenessMethod, credasApiModelsRegistrationsRegistrationSummary.livenessMethod) &&
        Objects.equals(this.livenessStatus, credasApiModelsRegistrationsRegistrationSummary.livenessStatus) &&
        Objects.equals(this.livenessVerified, credasApiModelsRegistrationsRegistrationSummary.livenessVerified) &&
        Objects.equals(this.middleName, credasApiModelsRegistrationsRegistrationSummary.middleName) &&
        Objects.equals(this.personalDetails, credasApiModelsRegistrationsRegistrationSummary.personalDetails) &&
        Objects.equals(this.phoneNumber, credasApiModelsRegistrationsRegistrationSummary.phoneNumber) &&
        Objects.equals(this.proofOfOwnershipCheck, credasApiModelsRegistrationsRegistrationSummary.proofOfOwnershipCheck) &&
        Objects.equals(this.referenceId, credasApiModelsRegistrationsRegistrationSummary.referenceId) &&
        Objects.equals(this.regCode, credasApiModelsRegistrationsRegistrationSummary.regCode) &&
        Objects.equals(this.regTypeId, credasApiModelsRegistrationsRegistrationSummary.regTypeId) &&
        Objects.equals(this.rightToRentCheck, credasApiModelsRegistrationsRegistrationSummary.rightToRentCheck) &&
        Objects.equals(this.rightToWorkCheck, credasApiModelsRegistrationsRegistrationSummary.rightToWorkCheck) &&
        Objects.equals(this.rightToWorkDocumentsProvided, credasApiModelsRegistrationsRegistrationSummary.rightToWorkDocumentsProvided) &&
        Objects.equals(this.safeHarbourVerifiedDate, credasApiModelsRegistrationsRegistrationSummary.safeHarbourVerifiedDate) &&
        Objects.equals(this.safeHarbourVerifiedStatus, credasApiModelsRegistrationsRegistrationSummary.safeHarbourVerifiedStatus) &&
        Objects.equals(this.status, credasApiModelsRegistrationsRegistrationSummary.status) &&
        Objects.equals(this.surname, credasApiModelsRegistrationsRegistrationSummary.surname);
  }

  @Override
  public int hashCode() {
    return Objects.hash(comments, createdByAgencyUserEmail, diTFDate, diTFStatus, isExpired, verifiedInAppDate, bankAccountChecks, createdByAgencyUserId, creditStatusCheck, customTermsAccepted, customTermsAcceptedDateTime, customTermsAcceptedVersion, dataCheckResult, dataCheckSources, dataChecksPerformed, dateCompleted, dateCreated, email, forename, hasLivenessPerformed, hasSelfie, id, idDocuments, idVerification, isAgentLed, livenessMethod, livenessStatus, livenessVerified, middleName, personalDetails, phoneNumber, proofOfOwnershipCheck, referenceId, regCode, regTypeId, rightToRentCheck, rightToWorkCheck, rightToWorkDocumentsProvided, safeHarbourVerifiedDate, safeHarbourVerifiedStatus, status, surname);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CredasApiModelsRegistrationsRegistrationSummary {\n");
    sb.append("    comments: ").append(toIndentedString(comments)).append("\n");
    sb.append("    createdByAgencyUserEmail: ").append(toIndentedString(createdByAgencyUserEmail)).append("\n");
    sb.append("    diTFDate: ").append(toIndentedString(diTFDate)).append("\n");
    sb.append("    diTFStatus: ").append(toIndentedString(diTFStatus)).append("\n");
    sb.append("    isExpired: ").append(toIndentedString(isExpired)).append("\n");
    sb.append("    verifiedInAppDate: ").append(toIndentedString(verifiedInAppDate)).append("\n");
    sb.append("    bankAccountChecks: ").append(toIndentedString(bankAccountChecks)).append("\n");
    sb.append("    createdByAgencyUserId: ").append(toIndentedString(createdByAgencyUserId)).append("\n");
    sb.append("    creditStatusCheck: ").append(toIndentedString(creditStatusCheck)).append("\n");
    sb.append("    customTermsAccepted: ").append(toIndentedString(customTermsAccepted)).append("\n");
    sb.append("    customTermsAcceptedDateTime: ").append(toIndentedString(customTermsAcceptedDateTime)).append("\n");
    sb.append("    customTermsAcceptedVersion: ").append(toIndentedString(customTermsAcceptedVersion)).append("\n");
    sb.append("    dataCheckResult: ").append(toIndentedString(dataCheckResult)).append("\n");
    sb.append("    dataCheckSources: ").append(toIndentedString(dataCheckSources)).append("\n");
    sb.append("    dataChecksPerformed: ").append(toIndentedString(dataChecksPerformed)).append("\n");
    sb.append("    dateCompleted: ").append(toIndentedString(dateCompleted)).append("\n");
    sb.append("    dateCreated: ").append(toIndentedString(dateCreated)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    forename: ").append(toIndentedString(forename)).append("\n");
    sb.append("    hasLivenessPerformed: ").append(toIndentedString(hasLivenessPerformed)).append("\n");
    sb.append("    hasSelfie: ").append(toIndentedString(hasSelfie)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    idDocuments: ").append(toIndentedString(idDocuments)).append("\n");
    sb.append("    idVerification: ").append(toIndentedString(idVerification)).append("\n");
    sb.append("    isAgentLed: ").append(toIndentedString(isAgentLed)).append("\n");
    sb.append("    livenessMethod: ").append(toIndentedString(livenessMethod)).append("\n");
    sb.append("    livenessStatus: ").append(toIndentedString(livenessStatus)).append("\n");
    sb.append("    livenessVerified: ").append(toIndentedString(livenessVerified)).append("\n");
    sb.append("    middleName: ").append(toIndentedString(middleName)).append("\n");
    sb.append("    personalDetails: ").append(toIndentedString(personalDetails)).append("\n");
    sb.append("    phoneNumber: ").append(toIndentedString(phoneNumber)).append("\n");
    sb.append("    proofOfOwnershipCheck: ").append(toIndentedString(proofOfOwnershipCheck)).append("\n");
    sb.append("    referenceId: ").append(toIndentedString(referenceId)).append("\n");
    sb.append("    regCode: ").append(toIndentedString(regCode)).append("\n");
    sb.append("    regTypeId: ").append(toIndentedString(regTypeId)).append("\n");
    sb.append("    rightToRentCheck: ").append(toIndentedString(rightToRentCheck)).append("\n");
    sb.append("    rightToWorkCheck: ").append(toIndentedString(rightToWorkCheck)).append("\n");
    sb.append("    rightToWorkDocumentsProvided: ").append(toIndentedString(rightToWorkDocumentsProvided)).append("\n");
    sb.append("    safeHarbourVerifiedDate: ").append(toIndentedString(safeHarbourVerifiedDate)).append("\n");
    sb.append("    safeHarbourVerifiedStatus: ").append(toIndentedString(safeHarbourVerifiedStatus)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    surname: ").append(toIndentedString(surname)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Comments");
    openapiFields.add("CreatedByAgencyUserEmail");
    openapiFields.add("DITFDate");
    openapiFields.add("DITFStatus");
    openapiFields.add("IsExpired");
    openapiFields.add("VerifiedInAppDate");
    openapiFields.add("bankAccountChecks");
    openapiFields.add("createdByAgencyUserId");
    openapiFields.add("creditStatusCheck");
    openapiFields.add("customTermsAccepted");
    openapiFields.add("customTermsAcceptedDateTime");
    openapiFields.add("customTermsAcceptedVersion");
    openapiFields.add("dataCheckResult");
    openapiFields.add("dataCheckSources");
    openapiFields.add("dataChecksPerformed");
    openapiFields.add("dateCompleted");
    openapiFields.add("dateCreated");
    openapiFields.add("email");
    openapiFields.add("forename");
    openapiFields.add("hasLivenessPerformed");
    openapiFields.add("hasSelfie");
    openapiFields.add("id");
    openapiFields.add("idDocuments");
    openapiFields.add("idVerification");
    openapiFields.add("isAgentLed");
    openapiFields.add("livenessMethod");
    openapiFields.add("livenessStatus");
    openapiFields.add("livenessVerified");
    openapiFields.add("middleName");
    openapiFields.add("personalDetails");
    openapiFields.add("phoneNumber");
    openapiFields.add("proofOfOwnershipCheck");
    openapiFields.add("referenceId");
    openapiFields.add("regCode");
    openapiFields.add("regTypeId");
    openapiFields.add("rightToRentCheck");
    openapiFields.add("rightToWorkCheck");
    openapiFields.add("rightToWorkDocumentsProvided");
    openapiFields.add("safeHarbourVerifiedDate");
    openapiFields.add("safeHarbourVerifiedStatus");
    openapiFields.add("status");
    openapiFields.add("surname");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("dataCheckResult");
    openapiRequiredFields.add("dataChecksPerformed");
    openapiRequiredFields.add("dateCreated");
    openapiRequiredFields.add("forename");
    openapiRequiredFields.add("id");
    openapiRequiredFields.add("livenessStatus");
    openapiRequiredFields.add("livenessVerified");
    openapiRequiredFields.add("regCode");
    openapiRequiredFields.add("regTypeId");
    openapiRequiredFields.add("rightToWorkDocumentsProvided");
    openapiRequiredFields.add("status");
    openapiRequiredFields.add("surname");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CredasApiModelsRegistrationsRegistrationSummary
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CredasApiModelsRegistrationsRegistrationSummary.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CredasApiModelsRegistrationsRegistrationSummary is not found in the empty JSON string", CredasApiModelsRegistrationsRegistrationSummary.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CredasApiModelsRegistrationsRegistrationSummary.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CredasApiModelsRegistrationsRegistrationSummary` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CredasApiModelsRegistrationsRegistrationSummary.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("Comments") != null && !jsonObj.get("Comments").isJsonNull()) {
        JsonArray jsonArraycomments = jsonObj.getAsJsonArray("Comments");
        if (jsonArraycomments != null) {
          // ensure the json data is an array
          if (!jsonObj.get("Comments").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `Comments` to be an array in the JSON string but got `%s`", jsonObj.get("Comments").toString()));
          }

          // validate the optional field `Comments` (array)
          for (int i = 0; i < jsonArraycomments.size(); i++) {
            CredasApiModelsRegistrationsRegistrationComment.validateJsonElement(jsonArraycomments.get(i));
          };
        }
      }
      if ((jsonObj.get("CreatedByAgencyUserEmail") != null && !jsonObj.get("CreatedByAgencyUserEmail").isJsonNull()) && !jsonObj.get("CreatedByAgencyUserEmail").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `CreatedByAgencyUserEmail` to be a primitive type in the JSON string but got `%s`", jsonObj.get("CreatedByAgencyUserEmail").toString()));
      }
      // validate the optional field `DITFStatus`
      if (jsonObj.get("DITFStatus") != null && !jsonObj.get("DITFStatus").isJsonNull()) {
        DiTFStatusEnum.validateJsonElement(jsonObj.get("DITFStatus"));
      }
      if (jsonObj.get("bankAccountChecks") != null && !jsonObj.get("bankAccountChecks").isJsonNull()) {
        JsonArray jsonArraybankAccountChecks = jsonObj.getAsJsonArray("bankAccountChecks");
        if (jsonArraybankAccountChecks != null) {
          // ensure the json data is an array
          if (!jsonObj.get("bankAccountChecks").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `bankAccountChecks` to be an array in the JSON string but got `%s`", jsonObj.get("bankAccountChecks").toString()));
          }

          // validate the optional field `bankAccountChecks` (array)
          for (int i = 0; i < jsonArraybankAccountChecks.size(); i++) {
            CredasApiModelsBankAccountsAccountVerificationResponse.validateJsonElement(jsonArraybankAccountChecks.get(i));
          };
        }
      }
      if ((jsonObj.get("createdByAgencyUserId") != null && !jsonObj.get("createdByAgencyUserId").isJsonNull()) && !jsonObj.get("createdByAgencyUserId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createdByAgencyUserId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createdByAgencyUserId").toString()));
      }
      // validate the optional field `creditStatusCheck`
      if (jsonObj.get("creditStatusCheck") != null && !jsonObj.get("creditStatusCheck").isJsonNull()) {
        CredasApiModelsStatusChecksStatusCheck.validateJsonElement(jsonObj.get("creditStatusCheck"));
      }
      // validate the required field `dataCheckResult`
      DataCheckResultEnum.validateJsonElement(jsonObj.get("dataCheckResult"));
      if (jsonObj.get("dataCheckSources") != null && !jsonObj.get("dataCheckSources").isJsonNull()) {
        JsonArray jsonArraydataCheckSources = jsonObj.getAsJsonArray("dataCheckSources");
        if (jsonArraydataCheckSources != null) {
          // ensure the json data is an array
          if (!jsonObj.get("dataCheckSources").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `dataCheckSources` to be an array in the JSON string but got `%s`", jsonObj.get("dataCheckSources").toString()));
          }

          // validate the optional field `dataCheckSources` (array)
          for (int i = 0; i < jsonArraydataCheckSources.size(); i++) {
            CredasApiModelsRegistrationsDataCheckSourceSummary.validateJsonElement(jsonArraydataCheckSources.get(i));
          };
        }
      }
      if ((jsonObj.get("email") != null && !jsonObj.get("email").isJsonNull()) && !jsonObj.get("email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email").toString()));
      }
      if (!jsonObj.get("forename").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `forename` to be a primitive type in the JSON string but got `%s`", jsonObj.get("forename").toString()));
      }
      if (!jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if (jsonObj.get("idDocuments") != null && !jsonObj.get("idDocuments").isJsonNull()) {
        JsonArray jsonArrayidDocuments = jsonObj.getAsJsonArray("idDocuments");
        if (jsonArrayidDocuments != null) {
          // ensure the json data is an array
          if (!jsonObj.get("idDocuments").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `idDocuments` to be an array in the JSON string but got `%s`", jsonObj.get("idDocuments").toString()));
          }

          // validate the optional field `idDocuments` (array)
          for (int i = 0; i < jsonArrayidDocuments.size(); i++) {
            CredasApiModelsRegistrationsIdDocumentSummary.validateJsonElement(jsonArrayidDocuments.get(i));
          };
        }
      }
      // validate the optional field `idVerification`
      if (jsonObj.get("idVerification") != null && !jsonObj.get("idVerification").isJsonNull()) {
        CredasApiModelsRegistrationsIdVerification.validateJsonElement(jsonObj.get("idVerification"));
      }
      // validate the optional field `livenessMethod`
      if (jsonObj.get("livenessMethod") != null && !jsonObj.get("livenessMethod").isJsonNull()) {
        LivenessMethodEnum.validateJsonElement(jsonObj.get("livenessMethod"));
      }
      // validate the required field `livenessStatus`
      LivenessStatusEnum.validateJsonElement(jsonObj.get("livenessStatus"));
      if ((jsonObj.get("middleName") != null && !jsonObj.get("middleName").isJsonNull()) && !jsonObj.get("middleName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `middleName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("middleName").toString()));
      }
      // validate the optional field `personalDetails`
      if (jsonObj.get("personalDetails") != null && !jsonObj.get("personalDetails").isJsonNull()) {
        CredasApiModelsRegistrationsPersonalDetails.validateJsonElement(jsonObj.get("personalDetails"));
      }
      if ((jsonObj.get("phoneNumber") != null && !jsonObj.get("phoneNumber").isJsonNull()) && !jsonObj.get("phoneNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `phoneNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("phoneNumber").toString()));
      }
      // validate the optional field `proofOfOwnershipCheck`
      if (jsonObj.get("proofOfOwnershipCheck") != null && !jsonObj.get("proofOfOwnershipCheck").isJsonNull()) {
        CredasApiModelsPropertyRegisterPropertyRegisterCheckResponse.validateJsonElement(jsonObj.get("proofOfOwnershipCheck"));
      }
      if ((jsonObj.get("referenceId") != null && !jsonObj.get("referenceId").isJsonNull()) && !jsonObj.get("referenceId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `referenceId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("referenceId").toString()));
      }
      if (!jsonObj.get("regCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `regCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("regCode").toString()));
      }
      if (!jsonObj.get("regTypeId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `regTypeId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("regTypeId").toString()));
      }
      // validate the optional field `rightToRentCheck`
      if (jsonObj.get("rightToRentCheck") != null && !jsonObj.get("rightToRentCheck").isJsonNull()) {
        CredasApiModelsRegistrationsSettlementStatus.validateJsonElement(jsonObj.get("rightToRentCheck"));
      }
      // validate the optional field `rightToWorkCheck`
      if (jsonObj.get("rightToWorkCheck") != null && !jsonObj.get("rightToWorkCheck").isJsonNull()) {
        CredasApiModelsRegistrationsSettlementStatus.validateJsonElement(jsonObj.get("rightToWorkCheck"));
      }
      // validate the required field `rightToWorkDocumentsProvided`
      RightToWorkDocumentsProvidedEnum.validateJsonElement(jsonObj.get("rightToWorkDocumentsProvided"));
      // validate the optional field `safeHarbourVerifiedStatus`
      if (jsonObj.get("safeHarbourVerifiedStatus") != null && !jsonObj.get("safeHarbourVerifiedStatus").isJsonNull()) {
        SafeHarbourVerifiedStatusEnum.validateJsonElement(jsonObj.get("safeHarbourVerifiedStatus"));
      }
      // validate the required field `status`
      StatusEnum.validateJsonElement(jsonObj.get("status"));
      if (!jsonObj.get("surname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `surname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("surname").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CredasApiModelsRegistrationsRegistrationSummary.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CredasApiModelsRegistrationsRegistrationSummary' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CredasApiModelsRegistrationsRegistrationSummary> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CredasApiModelsRegistrationsRegistrationSummary.class));

       return (TypeAdapter<T>) new TypeAdapter<CredasApiModelsRegistrationsRegistrationSummary>() {
           @Override
           public void write(JsonWriter out, CredasApiModelsRegistrationsRegistrationSummary value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CredasApiModelsRegistrationsRegistrationSummary read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CredasApiModelsRegistrationsRegistrationSummary given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CredasApiModelsRegistrationsRegistrationSummary
   * @throws IOException if the JSON string is invalid with respect to CredasApiModelsRegistrationsRegistrationSummary
   */
  public static CredasApiModelsRegistrationsRegistrationSummary fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CredasApiModelsRegistrationsRegistrationSummary.class);
  }

  /**
   * Convert an instance of CredasApiModelsRegistrationsRegistrationSummary to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

