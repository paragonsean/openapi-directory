/*
 * Credas API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CredasApiModelsStatusChecksInsolvencyAddress
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:30:15.246346-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CredasApiModelsStatusChecksInsolvencyAddress {
  public static final String SERIALIZED_NAME_ADDRESS1 = "address1";
  @SerializedName(SERIALIZED_NAME_ADDRESS1)
  private String address1;

  public static final String SERIALIZED_NAME_ADDRESS2 = "address2";
  @SerializedName(SERIALIZED_NAME_ADDRESS2)
  private String address2;

  public static final String SERIALIZED_NAME_ADDRESS3 = "address3";
  @SerializedName(SERIALIZED_NAME_ADDRESS3)
  private String address3;

  public static final String SERIALIZED_NAME_ADDRESS4 = "address4";
  @SerializedName(SERIALIZED_NAME_ADDRESS4)
  private String address4;

  public static final String SERIALIZED_NAME_ADDRESS5 = "address5";
  @SerializedName(SERIALIZED_NAME_ADDRESS5)
  private String address5;

  public static final String SERIALIZED_NAME_DPS = "dps";
  @SerializedName(SERIALIZED_NAME_DPS)
  private String dps;

  public static final String SERIALIZED_NAME_IS_EMPTY = "isEmpty";
  @SerializedName(SERIALIZED_NAME_IS_EMPTY)
  private Boolean isEmpty;

  public static final String SERIALIZED_NAME_POSTCODE = "postcode";
  @SerializedName(SERIALIZED_NAME_POSTCODE)
  private String postcode;

  public CredasApiModelsStatusChecksInsolvencyAddress() {
  }

  public CredasApiModelsStatusChecksInsolvencyAddress(
     Boolean isEmpty
  ) {
    this();
    this.isEmpty = isEmpty;
  }

  public CredasApiModelsStatusChecksInsolvencyAddress address1(String address1) {
    this.address1 = address1;
    return this;
  }

  /**
   * Get address1
   * @return address1
   */
  @javax.annotation.Nullable
  public String getAddress1() {
    return address1;
  }

  public void setAddress1(String address1) {
    this.address1 = address1;
  }


  public CredasApiModelsStatusChecksInsolvencyAddress address2(String address2) {
    this.address2 = address2;
    return this;
  }

  /**
   * Get address2
   * @return address2
   */
  @javax.annotation.Nullable
  public String getAddress2() {
    return address2;
  }

  public void setAddress2(String address2) {
    this.address2 = address2;
  }


  public CredasApiModelsStatusChecksInsolvencyAddress address3(String address3) {
    this.address3 = address3;
    return this;
  }

  /**
   * Get address3
   * @return address3
   */
  @javax.annotation.Nullable
  public String getAddress3() {
    return address3;
  }

  public void setAddress3(String address3) {
    this.address3 = address3;
  }


  public CredasApiModelsStatusChecksInsolvencyAddress address4(String address4) {
    this.address4 = address4;
    return this;
  }

  /**
   * Get address4
   * @return address4
   */
  @javax.annotation.Nullable
  public String getAddress4() {
    return address4;
  }

  public void setAddress4(String address4) {
    this.address4 = address4;
  }


  public CredasApiModelsStatusChecksInsolvencyAddress address5(String address5) {
    this.address5 = address5;
    return this;
  }

  /**
   * Get address5
   * @return address5
   */
  @javax.annotation.Nullable
  public String getAddress5() {
    return address5;
  }

  public void setAddress5(String address5) {
    this.address5 = address5;
  }


  public CredasApiModelsStatusChecksInsolvencyAddress dps(String dps) {
    this.dps = dps;
    return this;
  }

  /**
   * Get dps
   * @return dps
   */
  @javax.annotation.Nullable
  public String getDps() {
    return dps;
  }

  public void setDps(String dps) {
    this.dps = dps;
  }


  /**
   * Get isEmpty
   * @return isEmpty
   */
  @javax.annotation.Nullable
  public Boolean getIsEmpty() {
    return isEmpty;
  }



  public CredasApiModelsStatusChecksInsolvencyAddress postcode(String postcode) {
    this.postcode = postcode;
    return this;
  }

  /**
   * Get postcode
   * @return postcode
   */
  @javax.annotation.Nullable
  public String getPostcode() {
    return postcode;
  }

  public void setPostcode(String postcode) {
    this.postcode = postcode;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CredasApiModelsStatusChecksInsolvencyAddress credasApiModelsStatusChecksInsolvencyAddress = (CredasApiModelsStatusChecksInsolvencyAddress) o;
    return Objects.equals(this.address1, credasApiModelsStatusChecksInsolvencyAddress.address1) &&
        Objects.equals(this.address2, credasApiModelsStatusChecksInsolvencyAddress.address2) &&
        Objects.equals(this.address3, credasApiModelsStatusChecksInsolvencyAddress.address3) &&
        Objects.equals(this.address4, credasApiModelsStatusChecksInsolvencyAddress.address4) &&
        Objects.equals(this.address5, credasApiModelsStatusChecksInsolvencyAddress.address5) &&
        Objects.equals(this.dps, credasApiModelsStatusChecksInsolvencyAddress.dps) &&
        Objects.equals(this.isEmpty, credasApiModelsStatusChecksInsolvencyAddress.isEmpty) &&
        Objects.equals(this.postcode, credasApiModelsStatusChecksInsolvencyAddress.postcode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(address1, address2, address3, address4, address5, dps, isEmpty, postcode);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CredasApiModelsStatusChecksInsolvencyAddress {\n");
    sb.append("    address1: ").append(toIndentedString(address1)).append("\n");
    sb.append("    address2: ").append(toIndentedString(address2)).append("\n");
    sb.append("    address3: ").append(toIndentedString(address3)).append("\n");
    sb.append("    address4: ").append(toIndentedString(address4)).append("\n");
    sb.append("    address5: ").append(toIndentedString(address5)).append("\n");
    sb.append("    dps: ").append(toIndentedString(dps)).append("\n");
    sb.append("    isEmpty: ").append(toIndentedString(isEmpty)).append("\n");
    sb.append("    postcode: ").append(toIndentedString(postcode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("address1");
    openapiFields.add("address2");
    openapiFields.add("address3");
    openapiFields.add("address4");
    openapiFields.add("address5");
    openapiFields.add("dps");
    openapiFields.add("isEmpty");
    openapiFields.add("postcode");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CredasApiModelsStatusChecksInsolvencyAddress
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CredasApiModelsStatusChecksInsolvencyAddress.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CredasApiModelsStatusChecksInsolvencyAddress is not found in the empty JSON string", CredasApiModelsStatusChecksInsolvencyAddress.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CredasApiModelsStatusChecksInsolvencyAddress.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CredasApiModelsStatusChecksInsolvencyAddress` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("address1") != null && !jsonObj.get("address1").isJsonNull()) && !jsonObj.get("address1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `address1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("address1").toString()));
      }
      if ((jsonObj.get("address2") != null && !jsonObj.get("address2").isJsonNull()) && !jsonObj.get("address2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `address2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("address2").toString()));
      }
      if ((jsonObj.get("address3") != null && !jsonObj.get("address3").isJsonNull()) && !jsonObj.get("address3").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `address3` to be a primitive type in the JSON string but got `%s`", jsonObj.get("address3").toString()));
      }
      if ((jsonObj.get("address4") != null && !jsonObj.get("address4").isJsonNull()) && !jsonObj.get("address4").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `address4` to be a primitive type in the JSON string but got `%s`", jsonObj.get("address4").toString()));
      }
      if ((jsonObj.get("address5") != null && !jsonObj.get("address5").isJsonNull()) && !jsonObj.get("address5").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `address5` to be a primitive type in the JSON string but got `%s`", jsonObj.get("address5").toString()));
      }
      if ((jsonObj.get("dps") != null && !jsonObj.get("dps").isJsonNull()) && !jsonObj.get("dps").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dps` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dps").toString()));
      }
      if ((jsonObj.get("postcode") != null && !jsonObj.get("postcode").isJsonNull()) && !jsonObj.get("postcode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `postcode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("postcode").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CredasApiModelsStatusChecksInsolvencyAddress.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CredasApiModelsStatusChecksInsolvencyAddress' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CredasApiModelsStatusChecksInsolvencyAddress> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CredasApiModelsStatusChecksInsolvencyAddress.class));

       return (TypeAdapter<T>) new TypeAdapter<CredasApiModelsStatusChecksInsolvencyAddress>() {
           @Override
           public void write(JsonWriter out, CredasApiModelsStatusChecksInsolvencyAddress value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CredasApiModelsStatusChecksInsolvencyAddress read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CredasApiModelsStatusChecksInsolvencyAddress given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CredasApiModelsStatusChecksInsolvencyAddress
   * @throws IOException if the JSON string is invalid with respect to CredasApiModelsStatusChecksInsolvencyAddress
   */
  public static CredasApiModelsStatusChecksInsolvencyAddress fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CredasApiModelsStatusChecksInsolvencyAddress.class);
  }

  /**
   * Convert an instance of CredasApiModelsStatusChecksInsolvencyAddress to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

