/*
 * Credas API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CredasApiModelsStatusChecksCompanyDirectorCompanyAppointment
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:30:15.246346-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CredasApiModelsStatusChecksCompanyDirectorCompanyAppointment {
  public static final String SERIALIZED_NAME_ADDRESS = "address";
  @SerializedName(SERIALIZED_NAME_ADDRESS)
  private String address;

  public static final String SERIALIZED_NAME_APPOINTMENT_DATE = "appointmentDate";
  @SerializedName(SERIALIZED_NAME_APPOINTMENT_DATE)
  private OffsetDateTime appointmentDate;

  public static final String SERIALIZED_NAME_APPOINTMENT_TYPE = "appointmentType";
  @SerializedName(SERIALIZED_NAME_APPOINTMENT_TYPE)
  private String appointmentType;

  public static final String SERIALIZED_NAME_DOB = "dob";
  @SerializedName(SERIALIZED_NAME_DOB)
  private OffsetDateTime dob;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_NATIONALITY = "nationality";
  @SerializedName(SERIALIZED_NAME_NATIONALITY)
  private String nationality;

  public static final String SERIALIZED_NAME_OCCUPATION = "occupation";
  @SerializedName(SERIALIZED_NAME_OCCUPATION)
  private String occupation;

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public CredasApiModelsStatusChecksCompanyDirectorCompanyAppointment() {
  }

  public CredasApiModelsStatusChecksCompanyDirectorCompanyAppointment address(String address) {
    this.address = address;
    return this;
  }

  /**
   * Get address
   * @return address
   */
  @javax.annotation.Nullable
  public String getAddress() {
    return address;
  }

  public void setAddress(String address) {
    this.address = address;
  }


  public CredasApiModelsStatusChecksCompanyDirectorCompanyAppointment appointmentDate(OffsetDateTime appointmentDate) {
    this.appointmentDate = appointmentDate;
    return this;
  }

  /**
   * Get appointmentDate
   * @return appointmentDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getAppointmentDate() {
    return appointmentDate;
  }

  public void setAppointmentDate(OffsetDateTime appointmentDate) {
    this.appointmentDate = appointmentDate;
  }


  public CredasApiModelsStatusChecksCompanyDirectorCompanyAppointment appointmentType(String appointmentType) {
    this.appointmentType = appointmentType;
    return this;
  }

  /**
   * Get appointmentType
   * @return appointmentType
   */
  @javax.annotation.Nullable
  public String getAppointmentType() {
    return appointmentType;
  }

  public void setAppointmentType(String appointmentType) {
    this.appointmentType = appointmentType;
  }


  public CredasApiModelsStatusChecksCompanyDirectorCompanyAppointment dob(OffsetDateTime dob) {
    this.dob = dob;
    return this;
  }

  /**
   * Get dob
   * @return dob
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDob() {
    return dob;
  }

  public void setDob(OffsetDateTime dob) {
    this.dob = dob;
  }


  public CredasApiModelsStatusChecksCompanyDirectorCompanyAppointment name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public CredasApiModelsStatusChecksCompanyDirectorCompanyAppointment nationality(String nationality) {
    this.nationality = nationality;
    return this;
  }

  /**
   * Get nationality
   * @return nationality
   */
  @javax.annotation.Nullable
  public String getNationality() {
    return nationality;
  }

  public void setNationality(String nationality) {
    this.nationality = nationality;
  }


  public CredasApiModelsStatusChecksCompanyDirectorCompanyAppointment occupation(String occupation) {
    this.occupation = occupation;
    return this;
  }

  /**
   * Get occupation
   * @return occupation
   */
  @javax.annotation.Nullable
  public String getOccupation() {
    return occupation;
  }

  public void setOccupation(String occupation) {
    this.occupation = occupation;
  }


  public CredasApiModelsStatusChecksCompanyDirectorCompanyAppointment title(String title) {
    this.title = title;
    return this;
  }

  /**
   * Get title
   * @return title
   */
  @javax.annotation.Nullable
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CredasApiModelsStatusChecksCompanyDirectorCompanyAppointment credasApiModelsStatusChecksCompanyDirectorCompanyAppointment = (CredasApiModelsStatusChecksCompanyDirectorCompanyAppointment) o;
    return Objects.equals(this.address, credasApiModelsStatusChecksCompanyDirectorCompanyAppointment.address) &&
        Objects.equals(this.appointmentDate, credasApiModelsStatusChecksCompanyDirectorCompanyAppointment.appointmentDate) &&
        Objects.equals(this.appointmentType, credasApiModelsStatusChecksCompanyDirectorCompanyAppointment.appointmentType) &&
        Objects.equals(this.dob, credasApiModelsStatusChecksCompanyDirectorCompanyAppointment.dob) &&
        Objects.equals(this.name, credasApiModelsStatusChecksCompanyDirectorCompanyAppointment.name) &&
        Objects.equals(this.nationality, credasApiModelsStatusChecksCompanyDirectorCompanyAppointment.nationality) &&
        Objects.equals(this.occupation, credasApiModelsStatusChecksCompanyDirectorCompanyAppointment.occupation) &&
        Objects.equals(this.title, credasApiModelsStatusChecksCompanyDirectorCompanyAppointment.title);
  }

  @Override
  public int hashCode() {
    return Objects.hash(address, appointmentDate, appointmentType, dob, name, nationality, occupation, title);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CredasApiModelsStatusChecksCompanyDirectorCompanyAppointment {\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    appointmentDate: ").append(toIndentedString(appointmentDate)).append("\n");
    sb.append("    appointmentType: ").append(toIndentedString(appointmentType)).append("\n");
    sb.append("    dob: ").append(toIndentedString(dob)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    nationality: ").append(toIndentedString(nationality)).append("\n");
    sb.append("    occupation: ").append(toIndentedString(occupation)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("address");
    openapiFields.add("appointmentDate");
    openapiFields.add("appointmentType");
    openapiFields.add("dob");
    openapiFields.add("name");
    openapiFields.add("nationality");
    openapiFields.add("occupation");
    openapiFields.add("title");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CredasApiModelsStatusChecksCompanyDirectorCompanyAppointment
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CredasApiModelsStatusChecksCompanyDirectorCompanyAppointment.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CredasApiModelsStatusChecksCompanyDirectorCompanyAppointment is not found in the empty JSON string", CredasApiModelsStatusChecksCompanyDirectorCompanyAppointment.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CredasApiModelsStatusChecksCompanyDirectorCompanyAppointment.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CredasApiModelsStatusChecksCompanyDirectorCompanyAppointment` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("address") != null && !jsonObj.get("address").isJsonNull()) && !jsonObj.get("address").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `address` to be a primitive type in the JSON string but got `%s`", jsonObj.get("address").toString()));
      }
      if ((jsonObj.get("appointmentType") != null && !jsonObj.get("appointmentType").isJsonNull()) && !jsonObj.get("appointmentType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `appointmentType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("appointmentType").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("nationality") != null && !jsonObj.get("nationality").isJsonNull()) && !jsonObj.get("nationality").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `nationality` to be a primitive type in the JSON string but got `%s`", jsonObj.get("nationality").toString()));
      }
      if ((jsonObj.get("occupation") != null && !jsonObj.get("occupation").isJsonNull()) && !jsonObj.get("occupation").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `occupation` to be a primitive type in the JSON string but got `%s`", jsonObj.get("occupation").toString()));
      }
      if ((jsonObj.get("title") != null && !jsonObj.get("title").isJsonNull()) && !jsonObj.get("title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("title").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CredasApiModelsStatusChecksCompanyDirectorCompanyAppointment.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CredasApiModelsStatusChecksCompanyDirectorCompanyAppointment' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CredasApiModelsStatusChecksCompanyDirectorCompanyAppointment> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CredasApiModelsStatusChecksCompanyDirectorCompanyAppointment.class));

       return (TypeAdapter<T>) new TypeAdapter<CredasApiModelsStatusChecksCompanyDirectorCompanyAppointment>() {
           @Override
           public void write(JsonWriter out, CredasApiModelsStatusChecksCompanyDirectorCompanyAppointment value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CredasApiModelsStatusChecksCompanyDirectorCompanyAppointment read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CredasApiModelsStatusChecksCompanyDirectorCompanyAppointment given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CredasApiModelsStatusChecksCompanyDirectorCompanyAppointment
   * @throws IOException if the JSON string is invalid with respect to CredasApiModelsStatusChecksCompanyDirectorCompanyAppointment
   */
  public static CredasApiModelsStatusChecksCompanyDirectorCompanyAppointment fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CredasApiModelsStatusChecksCompanyDirectorCompanyAppointment.class);
  }

  /**
   * Convert an instance of CredasApiModelsStatusChecksCompanyDirectorCompanyAppointment to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

