/*
 * Credas API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CredasApiModelsErrorsErrorResponse;
import org.openapitools.client.model.CredasApiModelsRegistrationsAddInstantRegistrationRequest;
import org.openapitools.client.model.CredasApiModelsRegistrationsAddInstantRegistrationResponse;
import org.openapitools.client.model.CredasApiModelsRegistrationsAddRegistrationRequest;
import org.openapitools.client.model.CredasApiModelsRegistrationsAddRegistrationResponse;
import org.openapitools.client.model.CredasApiModelsRegistrationsCheckSubmittedIdDocumentsResponse;
import org.openapitools.client.model.CredasApiModelsRegistrationsPagedRegistrationSummary;
import org.openapitools.client.model.CredasApiModelsRegistrationsRegistrationSettings;
import org.openapitools.client.model.CredasApiModelsRegistrationsRegistrationSummary;
import org.openapitools.client.model.CredasApiModelsRegistrationsSupportedIdDocument;
import org.openapitools.client.model.CredasApiModelsRegistrationsUpdateContactDetailsRequest;
import org.openapitools.client.model.CredasApiModelsRegistrationsUpdateRegistrationStatusRequest;
import org.openapitools.client.model.CredasApiModelsStatusOverridesOverrideCheckStatusRequest;
import java.util.UUID;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for RegistrationsApi
 */
@Disabled
public class RegistrationsApiTest {

    private final RegistrationsApi api = new RegistrationsApi();

    /**
     * Creates new registration record, adds an ID document and optional selfie image in one go.
     *
     * It&#39;s designed to provide a quick integration path for external systems which capture these details.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addInstantRegistrationTest() throws ApiException {
        String apikey = null;
        CredasApiModelsRegistrationsAddInstantRegistrationRequest credasApiModelsRegistrationsAddInstantRegistrationRequest = null;
        CredasApiModelsRegistrationsAddInstantRegistrationResponse response = api.addInstantRegistration(apikey, credasApiModelsRegistrationsAddInstantRegistrationRequest);
        // TODO: test validations
    }

    /**
     * Creates new registration.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addRegistrationTest() throws ApiException {
        String apikey = null;
        CredasApiModelsRegistrationsAddRegistrationRequest credasApiModelsRegistrationsAddRegistrationRequest = null;
        CredasApiModelsRegistrationsAddRegistrationResponse response = api.addRegistration(apikey, credasApiModelsRegistrationsAddRegistrationRequest);
        // TODO: test validations
    }

    /**
     * Returns a PDF report for a given registration containing specified sections
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiRegistrationsIdPdfExportSectionsGetTest() throws ApiException {
        UUID id = null;
        String apikey = null;
        Boolean comments = null;
        Boolean contactDetails = null;
        Boolean standardChecks = null;
        Boolean pepSanctionChecks = null;
        Boolean proofOfOwnership = null;
        Boolean bankAccountCheck = null;
        Boolean creditStatusCheck = null;
        Boolean liveness = null;
        Boolean excludeSelfie = null;
        Boolean excludeIDDocuments = null;
        Boolean diATFSection = null;
        byte[] response = api.apiRegistrationsIdPdfExportSectionsGet(id, apikey, comments, contactDetails, standardChecks, pepSanctionChecks, proofOfOwnership, bankAccountCheck, creditStatusCheck, liveness, excludeSelfie, excludeIDDocuments, diATFSection);
        // TODO: test validations
    }

    /**
     * Checks if submitted documents are sufficient to complete registration.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void checkSubmittedIdDocumentsTest() throws ApiException {
        UUID id = null;
        String apikey = null;
        CredasApiModelsRegistrationsCheckSubmittedIdDocumentsResponse response = api.checkSubmittedIdDocuments(id, apikey);
        // TODO: test validations
    }

    /**
     * Returns PDF export for a given registration.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getRegistrationPdfExportTest() throws ApiException {
        UUID id = null;
        String apikey = null;
        byte[] response = api.getRegistrationPdfExport(id, apikey);
        // TODO: test validations
    }

    /**
     * Gets paged registration list by search criteria or nothing if there are no matching fields.  Optional parameters may be appended to the query string.  Maximum page size is 50.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getRegistrationSearchTest() throws ApiException {
        String apikey = null;
        Integer pageNum = null;
        Integer pageSize = null;
        String forename = null;
        String surname = null;
        String email = null;
        String dob = null;
        CredasApiModelsRegistrationsPagedRegistrationSummary response = api.getRegistrationSearch(apikey, pageNum, pageSize, forename, surname, email, dob);
        // TODO: test validations
    }

    /**
     * Gets registration settings or nothing if there are no settings associated with the registration.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getRegistrationSettingsTest() throws ApiException {
        UUID id = null;
        String apikey = null;
        api.getRegistrationSettings(id, apikey);
        // TODO: test validations
    }

    /**
     * Finds registrations by the ReferenceId.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getRegistrationSummariesByReferenceIdTest() throws ApiException {
        String referenceId = null;
        String apikey = null;
        List<CredasApiModelsRegistrationsRegistrationSummary> response = api.getRegistrationSummariesByReferenceId(referenceId, apikey);
        // TODO: test validations
    }

    /**
     * Finds a registration by the Id.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getRegistrationSummaryTest() throws ApiException {
        UUID id = null;
        String apikey = null;
        CredasApiModelsRegistrationsRegistrationSummary response = api.getRegistrationSummary(id, apikey);
        // TODO: test validations
    }

    /**
     * Finds a registration by the RegCode.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getRegistrationSummaryByRegCodeTest() throws ApiException {
        String regCode = null;
        String apikey = null;
        CredasApiModelsRegistrationsRegistrationSummary response = api.getRegistrationSummaryByRegCode(regCode, apikey);
        // TODO: test validations
    }

    /**
     * Get a list of supported id document for the specified registration id.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getRegistrationSupportedIdDocumentsTest() throws ApiException {
        UUID id = null;
        String apikey = null;
        CredasApiModelsRegistrationsSupportedIdDocument response = api.getRegistrationSupportedIdDocuments(id, apikey);
        // TODO: test validations
    }

    /**
     * Returns settlement status PDF (Share Code) for a given registration.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getShareCodePdfExportTest() throws ApiException {
        UUID id = null;
        String apikey = null;
        byte[] response = api.getShareCodePdfExport(id, apikey);
        // TODO: test validations
    }

    /**
     * Sets an override for a specific check on the registration.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void overrideCheckStatusTest() throws ApiException {
        UUID id = null;
        String apikey = null;
        CredasApiModelsStatusOverridesOverrideCheckStatusRequest credasApiModelsStatusOverridesOverrideCheckStatusRequest = null;
        api.overrideCheckStatus(id, apikey, credasApiModelsStatusOverridesOverrideCheckStatusRequest);
        // TODO: test validations
    }

    /**
     * Resends any invitation for the specified registration.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void resendInvitationTest() throws ApiException {
        UUID id = null;
        String apikey = null;
        api.resendInvitation(id, apikey);
        // TODO: test validations
    }

    /**
     * Updates a registration&#39;s contact details.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateContactDetailsTest() throws ApiException {
        UUID id = null;
        String apikey = null;
        CredasApiModelsRegistrationsUpdateContactDetailsRequest credasApiModelsRegistrationsUpdateContactDetailsRequest = null;
        api.updateContactDetails(id, apikey, credasApiModelsRegistrationsUpdateContactDetailsRequest);
        // TODO: test validations
    }

    /**
     * Updates registration settings.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateRegistrationSettingsTest() throws ApiException {
        UUID id = null;
        String apikey = null;
        CredasApiModelsRegistrationsRegistrationSettings credasApiModelsRegistrationsRegistrationSettings = null;
        api.updateRegistrationSettings(id, apikey, credasApiModelsRegistrationsRegistrationSettings);
        // TODO: test validations
    }

    /**
     * Updates the status of the registration to one specified in the request.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateRegistrationStatusTest() throws ApiException {
        UUID id = null;
        String apikey = null;
        CredasApiModelsRegistrationsUpdateRegistrationStatusRequest credasApiModelsRegistrationsUpdateRegistrationStatusRequest = null;
        api.updateRegistrationStatus(id, apikey, credasApiModelsRegistrationsUpdateRegistrationStatusRequest);
        // TODO: test validations
    }

}
