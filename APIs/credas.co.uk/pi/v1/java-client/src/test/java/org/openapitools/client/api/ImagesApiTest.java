/*
 * Credas API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CredasApiModelsErrorsErrorResponse;
import org.openapitools.client.model.CredasApiModelsImagesAddIdDocumentImageRequest;
import org.openapitools.client.model.CredasApiModelsImagesAddIdDocumentImageResponse;
import org.openapitools.client.model.CredasApiModelsImagesAddLivenessImageRequest;
import org.openapitools.client.model.CredasApiModelsImagesAddSelfieImageRequest;
import org.openapitools.client.model.CredasApiModelsImagesAddSelfieImageResponse;
import org.openapitools.client.model.CredasApiModelsImagesGetIdDocumentImageResponse;
import org.openapitools.client.model.CredasApiModelsImagesGetLivenessImageResponse;
import org.openapitools.client.model.CredasApiModelsImagesGetLivenessPerformedImageResponse;
import org.openapitools.client.model.CredasApiModelsImagesGetSelfieImageResponse;
import java.util.UUID;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ImagesApi
 */
@Disabled
public class ImagesApiTest {

    private final ImagesApi api = new ImagesApi();

    /**
     * Add an id document image to the specified registration.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addIdDocumentImageTest() throws ApiException {
        String apikey = null;
        CredasApiModelsImagesAddIdDocumentImageRequest credasApiModelsImagesAddIdDocumentImageRequest = null;
        CredasApiModelsImagesAddIdDocumentImageResponse response = api.addIdDocumentImage(apikey, credasApiModelsImagesAddIdDocumentImageRequest);
        // TODO: test validations
    }

    /**
     * Add a liveness image (UAP) to the specified registration.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addLivenessImageTest() throws ApiException {
        String apikey = null;
        CredasApiModelsImagesAddLivenessImageRequest credasApiModelsImagesAddLivenessImageRequest = null;
        api.addLivenessImage(apikey, credasApiModelsImagesAddLivenessImageRequest);
        // TODO: test validations
    }

    /**
     * Add a selfie image to the registration.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addSelfieImageTest() throws ApiException {
        String apikey = null;
        CredasApiModelsImagesAddSelfieImageRequest credasApiModelsImagesAddSelfieImageRequest = null;
        CredasApiModelsImagesAddSelfieImageResponse response = api.addSelfieImage(apikey, credasApiModelsImagesAddSelfieImageRequest);
        // TODO: test validations
    }

    /**
     * Get all id document images associated with a registration.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getIdDocumentImagesTest() throws ApiException {
        UUID registrationId = null;
        String apikey = null;
        List<CredasApiModelsImagesGetIdDocumentImageResponse> response = api.getIdDocumentImages(registrationId, apikey);
        // TODO: test validations
    }

    /**
     * Retrieve the liveness action image (UAP) associated with a registration.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getLivenessImageTest() throws ApiException {
        UUID registrationId = null;
        String apikey = null;
        CredasApiModelsImagesGetLivenessImageResponse response = api.getLivenessImage(registrationId, apikey);
        // TODO: test validations
    }

    /**
     * Retrieve the liveness performed image associated with a registration.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getLivenessPerformedImageTest() throws ApiException {
        UUID registrationId = null;
        String apikey = null;
        CredasApiModelsImagesGetLivenessPerformedImageResponse response = api.getLivenessPerformedImage(registrationId, apikey);
        // TODO: test validations
    }

    /**
     * Returns a detailed report on the analysis that has taken place of a scanned document
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getScanReportPdfTest() throws ApiException {
        UUID scanId = null;
        String apikey = null;
        byte[] response = api.getScanReportPdf(scanId, apikey);
        // TODO: test validations
    }

    /**
     * Retrieve the selfie image associated with a registration.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSelfieImageTest() throws ApiException {
        UUID registrationId = null;
        String apikey = null;
        CredasApiModelsImagesGetSelfieImageResponse response = api.getSelfieImage(registrationId, apikey);
        // TODO: test validations
    }

}
