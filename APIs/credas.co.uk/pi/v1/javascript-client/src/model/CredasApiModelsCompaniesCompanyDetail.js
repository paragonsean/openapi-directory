/**
 * Credas API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CredasApiModelsCompaniesSignificantPerson from './CredasApiModelsCompaniesSignificantPerson';

/**
 * The CredasApiModelsCompaniesCompanyDetail model module.
 * @module model/CredasApiModelsCompaniesCompanyDetail
 * @version v1
 */
class CredasApiModelsCompaniesCompanyDetail {
    /**
     * Constructs a new <code>CredasApiModelsCompaniesCompanyDetail</code>.
     * @alias module:model/CredasApiModelsCompaniesCompanyDetail
     */
    constructor() { 
        
        CredasApiModelsCompaniesCompanyDetail.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CredasApiModelsCompaniesCompanyDetail</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CredasApiModelsCompaniesCompanyDetail} obj Optional instance to populate.
     * @return {module:model/CredasApiModelsCompaniesCompanyDetail} The populated <code>CredasApiModelsCompaniesCompanyDetail</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CredasApiModelsCompaniesCompanyDetail();

            if (data.hasOwnProperty('addressLine1')) {
                obj['addressLine1'] = ApiClient.convertToType(data['addressLine1'], 'String');
            }
            if (data.hasOwnProperty('companyName')) {
                obj['companyName'] = ApiClient.convertToType(data['companyName'], 'String');
            }
            if (data.hasOwnProperty('companyNumber')) {
                obj['companyNumber'] = ApiClient.convertToType(data['companyNumber'], 'String');
            }
            if (data.hasOwnProperty('dateOfRegistration')) {
                obj['dateOfRegistration'] = ApiClient.convertToType(data['dateOfRegistration'], 'Date');
            }
            if (data.hasOwnProperty('duplicate')) {
                obj['duplicate'] = ApiClient.convertToType(data['duplicate'], 'Boolean');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('locality')) {
                obj['locality'] = ApiClient.convertToType(data['locality'], 'String');
            }
            if (data.hasOwnProperty('postCode')) {
                obj['postCode'] = ApiClient.convertToType(data['postCode'], 'String');
            }
            if (data.hasOwnProperty('region')) {
                obj['region'] = ApiClient.convertToType(data['region'], 'String');
            }
            if (data.hasOwnProperty('significantParentCompanies')) {
                obj['significantParentCompanies'] = ApiClient.convertToType(data['significantParentCompanies'], [CredasApiModelsCompaniesCompanyDetail]);
            }
            if (data.hasOwnProperty('significantPeople')) {
                obj['significantPeople'] = ApiClient.convertToType(data['significantPeople'], [CredasApiModelsCompaniesSignificantPerson]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CredasApiModelsCompaniesCompanyDetail</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CredasApiModelsCompaniesCompanyDetail</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['addressLine1'] && !(typeof data['addressLine1'] === 'string' || data['addressLine1'] instanceof String)) {
            throw new Error("Expected the field `addressLine1` to be a primitive type in the JSON string but got " + data['addressLine1']);
        }
        // ensure the json data is a string
        if (data['companyName'] && !(typeof data['companyName'] === 'string' || data['companyName'] instanceof String)) {
            throw new Error("Expected the field `companyName` to be a primitive type in the JSON string but got " + data['companyName']);
        }
        // ensure the json data is a string
        if (data['companyNumber'] && !(typeof data['companyNumber'] === 'string' || data['companyNumber'] instanceof String)) {
            throw new Error("Expected the field `companyNumber` to be a primitive type in the JSON string but got " + data['companyNumber']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['locality'] && !(typeof data['locality'] === 'string' || data['locality'] instanceof String)) {
            throw new Error("Expected the field `locality` to be a primitive type in the JSON string but got " + data['locality']);
        }
        // ensure the json data is a string
        if (data['postCode'] && !(typeof data['postCode'] === 'string' || data['postCode'] instanceof String)) {
            throw new Error("Expected the field `postCode` to be a primitive type in the JSON string but got " + data['postCode']);
        }
        // ensure the json data is a string
        if (data['region'] && !(typeof data['region'] === 'string' || data['region'] instanceof String)) {
            throw new Error("Expected the field `region` to be a primitive type in the JSON string but got " + data['region']);
        }
        if (data['significantParentCompanies']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['significantParentCompanies'])) {
                throw new Error("Expected the field `significantParentCompanies` to be an array in the JSON data but got " + data['significantParentCompanies']);
            }
            // validate the optional field `significantParentCompanies` (array)
            for (const item of data['significantParentCompanies']) {
                CredasApiModelsCompaniesCompanyDetail.validateJSON(item);
            };
        }
        if (data['significantPeople']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['significantPeople'])) {
                throw new Error("Expected the field `significantPeople` to be an array in the JSON data but got " + data['significantPeople']);
            }
            // validate the optional field `significantPeople` (array)
            for (const item of data['significantPeople']) {
                CredasApiModelsCompaniesSignificantPerson.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {String} addressLine1
 */
CredasApiModelsCompaniesCompanyDetail.prototype['addressLine1'] = undefined;

/**
 * @member {String} companyName
 */
CredasApiModelsCompaniesCompanyDetail.prototype['companyName'] = undefined;

/**
 * @member {String} companyNumber
 */
CredasApiModelsCompaniesCompanyDetail.prototype['companyNumber'] = undefined;

/**
 * @member {Date} dateOfRegistration
 */
CredasApiModelsCompaniesCompanyDetail.prototype['dateOfRegistration'] = undefined;

/**
 * @member {Boolean} duplicate
 */
CredasApiModelsCompaniesCompanyDetail.prototype['duplicate'] = undefined;

/**
 * @member {String} id
 */
CredasApiModelsCompaniesCompanyDetail.prototype['id'] = undefined;

/**
 * @member {String} locality
 */
CredasApiModelsCompaniesCompanyDetail.prototype['locality'] = undefined;

/**
 * @member {String} postCode
 */
CredasApiModelsCompaniesCompanyDetail.prototype['postCode'] = undefined;

/**
 * @member {String} region
 */
CredasApiModelsCompaniesCompanyDetail.prototype['region'] = undefined;

/**
 * @member {Array.<module:model/CredasApiModelsCompaniesCompanyDetail>} significantParentCompanies
 */
CredasApiModelsCompaniesCompanyDetail.prototype['significantParentCompanies'] = undefined;

/**
 * @member {Array.<module:model/CredasApiModelsCompaniesSignificantPerson>} significantPeople
 */
CredasApiModelsCompaniesCompanyDetail.prototype['significantPeople'] = undefined;






export default CredasApiModelsCompaniesCompanyDetail;

