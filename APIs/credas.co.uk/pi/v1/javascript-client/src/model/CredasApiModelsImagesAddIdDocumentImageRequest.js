/**
 * Credas API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CredasApiModelsRegistrationsKeyValueItem from './CredasApiModelsRegistrationsKeyValueItem';

/**
 * The CredasApiModelsImagesAddIdDocumentImageRequest model module.
 * @module model/CredasApiModelsImagesAddIdDocumentImageRequest
 * @version v1
 */
class CredasApiModelsImagesAddIdDocumentImageRequest {
    /**
     * Constructs a new <code>CredasApiModelsImagesAddIdDocumentImageRequest</code>.
     * @alias module:model/CredasApiModelsImagesAddIdDocumentImageRequest
     * @param documentType {module:model/CredasApiModelsImagesAddIdDocumentImageRequest.DocumentTypeEnum} Other = 0, Passport = 1, DrivingLicence = 2, Visa = 3, CscsCard = 4, HomeOfficeLetter = 5, BirthCertificate = 6, NationalIdCard = 7, ResidencePermit = 9, UtilityBill = 11
     * @param imageData {String} 
     * @param registrationId {String} 
     */
    constructor(documentType, imageData, registrationId) { 
        
        CredasApiModelsImagesAddIdDocumentImageRequest.initialize(this, documentType, imageData, registrationId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, documentType, imageData, registrationId) { 
        obj['documentType'] = documentType;
        obj['imageData'] = imageData;
        obj['registrationId'] = registrationId;
    }

    /**
     * Constructs a <code>CredasApiModelsImagesAddIdDocumentImageRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CredasApiModelsImagesAddIdDocumentImageRequest} obj Optional instance to populate.
     * @return {module:model/CredasApiModelsImagesAddIdDocumentImageRequest} The populated <code>CredasApiModelsImagesAddIdDocumentImageRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CredasApiModelsImagesAddIdDocumentImageRequest();

            if (data.hasOwnProperty('documentParameters')) {
                obj['documentParameters'] = ApiClient.convertToType(data['documentParameters'], [CredasApiModelsRegistrationsKeyValueItem]);
            }
            if (data.hasOwnProperty('documentType')) {
                obj['documentType'] = ApiClient.convertToType(data['documentType'], 'Number');
            }
            if (data.hasOwnProperty('imageData')) {
                obj['imageData'] = ApiClient.convertToType(data['imageData'], 'String');
            }
            if (data.hasOwnProperty('registrationId')) {
                obj['registrationId'] = ApiClient.convertToType(data['registrationId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CredasApiModelsImagesAddIdDocumentImageRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CredasApiModelsImagesAddIdDocumentImageRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CredasApiModelsImagesAddIdDocumentImageRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['documentParameters']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['documentParameters'])) {
                throw new Error("Expected the field `documentParameters` to be an array in the JSON data but got " + data['documentParameters']);
            }
            // validate the optional field `documentParameters` (array)
            for (const item of data['documentParameters']) {
                CredasApiModelsRegistrationsKeyValueItem.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['imageData'] && !(typeof data['imageData'] === 'string' || data['imageData'] instanceof String)) {
            throw new Error("Expected the field `imageData` to be a primitive type in the JSON string but got " + data['imageData']);
        }
        // ensure the json data is a string
        if (data['registrationId'] && !(typeof data['registrationId'] === 'string' || data['registrationId'] instanceof String)) {
            throw new Error("Expected the field `registrationId` to be a primitive type in the JSON string but got " + data['registrationId']);
        }

        return true;
    }


}

CredasApiModelsImagesAddIdDocumentImageRequest.RequiredProperties = ["documentType", "imageData", "registrationId"];

/**
 * @member {Array.<module:model/CredasApiModelsRegistrationsKeyValueItem>} documentParameters
 */
CredasApiModelsImagesAddIdDocumentImageRequest.prototype['documentParameters'] = undefined;

/**
 * Other = 0, Passport = 1, DrivingLicence = 2, Visa = 3, CscsCard = 4, HomeOfficeLetter = 5, BirthCertificate = 6, NationalIdCard = 7, ResidencePermit = 9, UtilityBill = 11
 * @member {module:model/CredasApiModelsImagesAddIdDocumentImageRequest.DocumentTypeEnum} documentType
 */
CredasApiModelsImagesAddIdDocumentImageRequest.prototype['documentType'] = undefined;

/**
 * @member {String} imageData
 */
CredasApiModelsImagesAddIdDocumentImageRequest.prototype['imageData'] = undefined;

/**
 * @member {String} registrationId
 */
CredasApiModelsImagesAddIdDocumentImageRequest.prototype['registrationId'] = undefined;





/**
 * Allowed values for the <code>documentType</code> property.
 * @enum {Number}
 * @readonly
 */
CredasApiModelsImagesAddIdDocumentImageRequest['DocumentTypeEnum'] = {

    /**
     * value: 0
     * @const
     */
    "0": 0,

    /**
     * value: 1
     * @const
     */
    "1": 1,

    /**
     * value: 2
     * @const
     */
    "2": 2,

    /**
     * value: 3
     * @const
     */
    "3": 3,

    /**
     * value: 4
     * @const
     */
    "4": 4,

    /**
     * value: 5
     * @const
     */
    "5": 5,

    /**
     * value: 6
     * @const
     */
    "6": 6,

    /**
     * value: 7
     * @const
     */
    "7": 7,

    /**
     * value: 9
     * @const
     */
    "9": 9,

    /**
     * value: 10
     * @const
     */
    "10": 10,

    /**
     * value: 11
     * @const
     */
    "11": 11
};



export default CredasApiModelsImagesAddIdDocumentImageRequest;

