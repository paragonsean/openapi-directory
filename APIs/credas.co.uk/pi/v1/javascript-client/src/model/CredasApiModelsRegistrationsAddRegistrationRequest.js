/**
 * Credas API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CredasApiModelsRegistrationsKeyValueItem from './CredasApiModelsRegistrationsKeyValueItem';
import CredasApiModelsRegistrationsRegistrationSettings from './CredasApiModelsRegistrationsRegistrationSettings';
import CredasApiModelsRegistrationsReturnUrls from './CredasApiModelsRegistrationsReturnUrls';

/**
 * The CredasApiModelsRegistrationsAddRegistrationRequest model module.
 * @module model/CredasApiModelsRegistrationsAddRegistrationRequest
 * @version v1
 */
class CredasApiModelsRegistrationsAddRegistrationRequest {
    /**
     * Constructs a new <code>CredasApiModelsRegistrationsAddRegistrationRequest</code>.
     * @alias module:model/CredasApiModelsRegistrationsAddRegistrationRequest
     * @param forename {String} 
     * @param regTypeId {String} 
     * @param sendSms {Boolean} 
     * @param surname {String} 
     */
    constructor(forename, regTypeId, sendSms, surname) { 
        
        CredasApiModelsRegistrationsAddRegistrationRequest.initialize(this, forename, regTypeId, sendSms, surname);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, forename, regTypeId, sendSms, surname) { 
        obj['forename'] = forename;
        obj['regTypeId'] = regTypeId;
        obj['sendSms'] = sendSms;
        obj['surname'] = surname;
    }

    /**
     * Constructs a <code>CredasApiModelsRegistrationsAddRegistrationRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CredasApiModelsRegistrationsAddRegistrationRequest} obj Optional instance to populate.
     * @return {module:model/CredasApiModelsRegistrationsAddRegistrationRequest} The populated <code>CredasApiModelsRegistrationsAddRegistrationRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CredasApiModelsRegistrationsAddRegistrationRequest();

            if (data.hasOwnProperty('diallingCode')) {
                obj['diallingCode'] = ApiClient.convertToType(data['diallingCode'], 'String');
            }
            if (data.hasOwnProperty('duplicateAcknowledgement')) {
                obj['duplicateAcknowledgement'] = ApiClient.convertToType(data['duplicateAcknowledgement'], 'Boolean');
            }
            if (data.hasOwnProperty('emailAddress')) {
                obj['emailAddress'] = ApiClient.convertToType(data['emailAddress'], 'String');
            }
            if (data.hasOwnProperty('forename')) {
                obj['forename'] = ApiClient.convertToType(data['forename'], 'String');
            }
            if (data.hasOwnProperty('middleName')) {
                obj['middleName'] = ApiClient.convertToType(data['middleName'], 'String');
            }
            if (data.hasOwnProperty('parameters')) {
                obj['parameters'] = ApiClient.convertToType(data['parameters'], [CredasApiModelsRegistrationsKeyValueItem]);
            }
            if (data.hasOwnProperty('phoneNumber')) {
                obj['phoneNumber'] = ApiClient.convertToType(data['phoneNumber'], 'String');
            }
            if (data.hasOwnProperty('provideWebJourneyLink')) {
                obj['provideWebJourneyLink'] = ApiClient.convertToType(data['provideWebJourneyLink'], 'Boolean');
            }
            if (data.hasOwnProperty('referenceId')) {
                obj['referenceId'] = ApiClient.convertToType(data['referenceId'], 'String');
            }
            if (data.hasOwnProperty('regTypeId')) {
                obj['regTypeId'] = ApiClient.convertToType(data['regTypeId'], 'String');
            }
            if (data.hasOwnProperty('returnUrls')) {
                obj['returnUrls'] = CredasApiModelsRegistrationsReturnUrls.constructFromObject(data['returnUrls']);
            }
            if (data.hasOwnProperty('sendEmail')) {
                obj['sendEmail'] = ApiClient.convertToType(data['sendEmail'], 'Boolean');
            }
            if (data.hasOwnProperty('sendSms')) {
                obj['sendSms'] = ApiClient.convertToType(data['sendSms'], 'Boolean');
            }
            if (data.hasOwnProperty('settings')) {
                obj['settings'] = CredasApiModelsRegistrationsRegistrationSettings.constructFromObject(data['settings']);
            }
            if (data.hasOwnProperty('significantPersonId')) {
                obj['significantPersonId'] = ApiClient.convertToType(data['significantPersonId'], 'String');
            }
            if (data.hasOwnProperty('surname')) {
                obj['surname'] = ApiClient.convertToType(data['surname'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CredasApiModelsRegistrationsAddRegistrationRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CredasApiModelsRegistrationsAddRegistrationRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CredasApiModelsRegistrationsAddRegistrationRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['diallingCode'] && !(typeof data['diallingCode'] === 'string' || data['diallingCode'] instanceof String)) {
            throw new Error("Expected the field `diallingCode` to be a primitive type in the JSON string but got " + data['diallingCode']);
        }
        // ensure the json data is a string
        if (data['emailAddress'] && !(typeof data['emailAddress'] === 'string' || data['emailAddress'] instanceof String)) {
            throw new Error("Expected the field `emailAddress` to be a primitive type in the JSON string but got " + data['emailAddress']);
        }
        // ensure the json data is a string
        if (data['forename'] && !(typeof data['forename'] === 'string' || data['forename'] instanceof String)) {
            throw new Error("Expected the field `forename` to be a primitive type in the JSON string but got " + data['forename']);
        }
        // ensure the json data is a string
        if (data['middleName'] && !(typeof data['middleName'] === 'string' || data['middleName'] instanceof String)) {
            throw new Error("Expected the field `middleName` to be a primitive type in the JSON string but got " + data['middleName']);
        }
        if (data['parameters']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['parameters'])) {
                throw new Error("Expected the field `parameters` to be an array in the JSON data but got " + data['parameters']);
            }
            // validate the optional field `parameters` (array)
            for (const item of data['parameters']) {
                CredasApiModelsRegistrationsKeyValueItem.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['phoneNumber'] && !(typeof data['phoneNumber'] === 'string' || data['phoneNumber'] instanceof String)) {
            throw new Error("Expected the field `phoneNumber` to be a primitive type in the JSON string but got " + data['phoneNumber']);
        }
        // ensure the json data is a string
        if (data['referenceId'] && !(typeof data['referenceId'] === 'string' || data['referenceId'] instanceof String)) {
            throw new Error("Expected the field `referenceId` to be a primitive type in the JSON string but got " + data['referenceId']);
        }
        // ensure the json data is a string
        if (data['regTypeId'] && !(typeof data['regTypeId'] === 'string' || data['regTypeId'] instanceof String)) {
            throw new Error("Expected the field `regTypeId` to be a primitive type in the JSON string but got " + data['regTypeId']);
        }
        // validate the optional field `returnUrls`
        if (data['returnUrls']) { // data not null
          CredasApiModelsRegistrationsReturnUrls.validateJSON(data['returnUrls']);
        }
        // validate the optional field `settings`
        if (data['settings']) { // data not null
          CredasApiModelsRegistrationsRegistrationSettings.validateJSON(data['settings']);
        }
        // ensure the json data is a string
        if (data['significantPersonId'] && !(typeof data['significantPersonId'] === 'string' || data['significantPersonId'] instanceof String)) {
            throw new Error("Expected the field `significantPersonId` to be a primitive type in the JSON string but got " + data['significantPersonId']);
        }
        // ensure the json data is a string
        if (data['surname'] && !(typeof data['surname'] === 'string' || data['surname'] instanceof String)) {
            throw new Error("Expected the field `surname` to be a primitive type in the JSON string but got " + data['surname']);
        }

        return true;
    }


}

CredasApiModelsRegistrationsAddRegistrationRequest.RequiredProperties = ["forename", "regTypeId", "sendSms", "surname"];

/**
 * @member {String} diallingCode
 */
CredasApiModelsRegistrationsAddRegistrationRequest.prototype['diallingCode'] = undefined;

/**
 * @member {Boolean} duplicateAcknowledgement
 */
CredasApiModelsRegistrationsAddRegistrationRequest.prototype['duplicateAcknowledgement'] = undefined;

/**
 * @member {String} emailAddress
 */
CredasApiModelsRegistrationsAddRegistrationRequest.prototype['emailAddress'] = undefined;

/**
 * @member {String} forename
 */
CredasApiModelsRegistrationsAddRegistrationRequest.prototype['forename'] = undefined;

/**
 * @member {String} middleName
 */
CredasApiModelsRegistrationsAddRegistrationRequest.prototype['middleName'] = undefined;

/**
 * @member {Array.<module:model/CredasApiModelsRegistrationsKeyValueItem>} parameters
 */
CredasApiModelsRegistrationsAddRegistrationRequest.prototype['parameters'] = undefined;

/**
 * @member {String} phoneNumber
 */
CredasApiModelsRegistrationsAddRegistrationRequest.prototype['phoneNumber'] = undefined;

/**
 * @member {Boolean} provideWebJourneyLink
 */
CredasApiModelsRegistrationsAddRegistrationRequest.prototype['provideWebJourneyLink'] = undefined;

/**
 * @member {String} referenceId
 */
CredasApiModelsRegistrationsAddRegistrationRequest.prototype['referenceId'] = undefined;

/**
 * @member {String} regTypeId
 */
CredasApiModelsRegistrationsAddRegistrationRequest.prototype['regTypeId'] = undefined;

/**
 * @member {module:model/CredasApiModelsRegistrationsReturnUrls} returnUrls
 */
CredasApiModelsRegistrationsAddRegistrationRequest.prototype['returnUrls'] = undefined;

/**
 * @member {Boolean} sendEmail
 */
CredasApiModelsRegistrationsAddRegistrationRequest.prototype['sendEmail'] = undefined;

/**
 * @member {Boolean} sendSms
 */
CredasApiModelsRegistrationsAddRegistrationRequest.prototype['sendSms'] = undefined;

/**
 * @member {module:model/CredasApiModelsRegistrationsRegistrationSettings} settings
 */
CredasApiModelsRegistrationsAddRegistrationRequest.prototype['settings'] = undefined;

/**
 * @member {String} significantPersonId
 */
CredasApiModelsRegistrationsAddRegistrationRequest.prototype['significantPersonId'] = undefined;

/**
 * @member {String} surname
 */
CredasApiModelsRegistrationsAddRegistrationRequest.prototype['surname'] = undefined;






export default CredasApiModelsRegistrationsAddRegistrationRequest;

