/**
 * Credas API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CredasApiModelsStatusChecksCompanyDirectorCompanyAppointment from './CredasApiModelsStatusChecksCompanyDirectorCompanyAppointment';

/**
 * The CredasApiModelsStatusChecksCompanyDirectorCompanyDirectorResult model module.
 * @module model/CredasApiModelsStatusChecksCompanyDirectorCompanyDirectorResult
 * @version v1
 */
class CredasApiModelsStatusChecksCompanyDirectorCompanyDirectorResult {
    /**
     * Constructs a new <code>CredasApiModelsStatusChecksCompanyDirectorCompanyDirectorResult</code>.
     * @alias module:model/CredasApiModelsStatusChecksCompanyDirectorCompanyDirectorResult
     */
    constructor() { 
        
        CredasApiModelsStatusChecksCompanyDirectorCompanyDirectorResult.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CredasApiModelsStatusChecksCompanyDirectorCompanyDirectorResult</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CredasApiModelsStatusChecksCompanyDirectorCompanyDirectorResult} obj Optional instance to populate.
     * @return {module:model/CredasApiModelsStatusChecksCompanyDirectorCompanyDirectorResult} The populated <code>CredasApiModelsStatusChecksCompanyDirectorCompanyDirectorResult</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CredasApiModelsStatusChecksCompanyDirectorCompanyDirectorResult();

            if (data.hasOwnProperty('companyAppointments')) {
                obj['companyAppointments'] = ApiClient.convertToType(data['companyAppointments'], [CredasApiModelsStatusChecksCompanyDirectorCompanyAppointment]);
            }
            if (data.hasOwnProperty('companyName')) {
                obj['companyName'] = ApiClient.convertToType(data['companyName'], 'String');
            }
            if (data.hasOwnProperty('companyRegNo')) {
                obj['companyRegNo'] = ApiClient.convertToType(data['companyRegNo'], 'String');
            }
            if (data.hasOwnProperty('dateAppointed')) {
                obj['dateAppointed'] = ApiClient.convertToType(data['dateAppointed'], 'Date');
            }
            if (data.hasOwnProperty('matchType')) {
                obj['matchType'] = ApiClient.convertToType(data['matchType'], 'Number');
            }
            if (data.hasOwnProperty('matchTypeText')) {
                obj['matchTypeText'] = ApiClient.convertToType(data['matchTypeText'], 'String');
            }
            if (data.hasOwnProperty('registeredOffice')) {
                obj['registeredOffice'] = ApiClient.convertToType(data['registeredOffice'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CredasApiModelsStatusChecksCompanyDirectorCompanyDirectorResult</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CredasApiModelsStatusChecksCompanyDirectorCompanyDirectorResult</code>.
     */
    static validateJSON(data) {
        if (data['companyAppointments']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['companyAppointments'])) {
                throw new Error("Expected the field `companyAppointments` to be an array in the JSON data but got " + data['companyAppointments']);
            }
            // validate the optional field `companyAppointments` (array)
            for (const item of data['companyAppointments']) {
                CredasApiModelsStatusChecksCompanyDirectorCompanyAppointment.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['companyName'] && !(typeof data['companyName'] === 'string' || data['companyName'] instanceof String)) {
            throw new Error("Expected the field `companyName` to be a primitive type in the JSON string but got " + data['companyName']);
        }
        // ensure the json data is a string
        if (data['companyRegNo'] && !(typeof data['companyRegNo'] === 'string' || data['companyRegNo'] instanceof String)) {
            throw new Error("Expected the field `companyRegNo` to be a primitive type in the JSON string but got " + data['companyRegNo']);
        }
        // ensure the json data is a string
        if (data['matchTypeText'] && !(typeof data['matchTypeText'] === 'string' || data['matchTypeText'] instanceof String)) {
            throw new Error("Expected the field `matchTypeText` to be a primitive type in the JSON string but got " + data['matchTypeText']);
        }
        // ensure the json data is a string
        if (data['registeredOffice'] && !(typeof data['registeredOffice'] === 'string' || data['registeredOffice'] instanceof String)) {
            throw new Error("Expected the field `registeredOffice` to be a primitive type in the JSON string but got " + data['registeredOffice']);
        }

        return true;
    }


}



/**
 * @member {Array.<module:model/CredasApiModelsStatusChecksCompanyDirectorCompanyAppointment>} companyAppointments
 */
CredasApiModelsStatusChecksCompanyDirectorCompanyDirectorResult.prototype['companyAppointments'] = undefined;

/**
 * @member {String} companyName
 */
CredasApiModelsStatusChecksCompanyDirectorCompanyDirectorResult.prototype['companyName'] = undefined;

/**
 * @member {String} companyRegNo
 */
CredasApiModelsStatusChecksCompanyDirectorCompanyDirectorResult.prototype['companyRegNo'] = undefined;

/**
 * @member {Date} dateAppointed
 */
CredasApiModelsStatusChecksCompanyDirectorCompanyDirectorResult.prototype['dateAppointed'] = undefined;

/**
 * Unknown = 0, NameAndDateOfBirth = 1, NameAndAddress = 2, NameAndAddressAndDateOfBirth = 3
 * @member {module:model/CredasApiModelsStatusChecksCompanyDirectorCompanyDirectorResult.MatchTypeEnum} matchType
 */
CredasApiModelsStatusChecksCompanyDirectorCompanyDirectorResult.prototype['matchType'] = undefined;

/**
 * @member {String} matchTypeText
 */
CredasApiModelsStatusChecksCompanyDirectorCompanyDirectorResult.prototype['matchTypeText'] = undefined;

/**
 * @member {String} registeredOffice
 */
CredasApiModelsStatusChecksCompanyDirectorCompanyDirectorResult.prototype['registeredOffice'] = undefined;





/**
 * Allowed values for the <code>matchType</code> property.
 * @enum {Number}
 * @readonly
 */
CredasApiModelsStatusChecksCompanyDirectorCompanyDirectorResult['MatchTypeEnum'] = {

    /**
     * value: 0
     * @const
     */
    "0": 0,

    /**
     * value: 1
     * @const
     */
    "1": 1,

    /**
     * value: 2
     * @const
     */
    "2": 2,

    /**
     * value: 3
     * @const
     */
    "3": 3
};



export default CredasApiModelsStatusChecksCompanyDirectorCompanyDirectorResult;

