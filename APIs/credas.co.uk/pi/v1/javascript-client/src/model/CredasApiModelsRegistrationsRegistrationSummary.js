/**
 * Credas API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CredasApiModelsBankAccountsAccountVerificationResponse from './CredasApiModelsBankAccountsAccountVerificationResponse';
import CredasApiModelsPropertyRegisterPropertyRegisterCheckResponse from './CredasApiModelsPropertyRegisterPropertyRegisterCheckResponse';
import CredasApiModelsRegistrationsDataCheckSourceSummary from './CredasApiModelsRegistrationsDataCheckSourceSummary';
import CredasApiModelsRegistrationsIdDocumentSummary from './CredasApiModelsRegistrationsIdDocumentSummary';
import CredasApiModelsRegistrationsIdVerification from './CredasApiModelsRegistrationsIdVerification';
import CredasApiModelsRegistrationsPersonalDetails from './CredasApiModelsRegistrationsPersonalDetails';
import CredasApiModelsRegistrationsRegistrationComment from './CredasApiModelsRegistrationsRegistrationComment';
import CredasApiModelsRegistrationsSettlementStatus from './CredasApiModelsRegistrationsSettlementStatus';
import CredasApiModelsStatusChecksStatusCheck from './CredasApiModelsStatusChecksStatusCheck';

/**
 * The CredasApiModelsRegistrationsRegistrationSummary model module.
 * @module model/CredasApiModelsRegistrationsRegistrationSummary
 * @version v1
 */
class CredasApiModelsRegistrationsRegistrationSummary {
    /**
     * Constructs a new <code>CredasApiModelsRegistrationsRegistrationSummary</code>.
     * @alias module:model/CredasApiModelsRegistrationsRegistrationSummary
     * @param dataCheckResult {module:model/CredasApiModelsRegistrationsRegistrationSummary.DataCheckResultEnum} Unknown = 0, Pass = 1, Refer = 2, Fail = 3
     * @param dataChecksPerformed {Boolean} 
     * @param dateCreated {Date} 
     * @param forename {String} 
     * @param id {String} 
     * @param livenessStatus {module:model/CredasApiModelsRegistrationsRegistrationSummary.LivenessStatusEnum} NotSubmitted = 0, Verified = 1, Unverified = 2, Unknown = 3, RetakeRequested = 4
     * @param livenessVerified {Boolean} 
     * @param regCode {String} 
     * @param regTypeId {String} 
     * @param rightToWorkDocumentsProvided {module:model/CredasApiModelsRegistrationsRegistrationSummary.RightToWorkDocumentsProvidedEnum} This property is no longer supported. Right to work is now available as an individual check.<br />  values=> Pending = 0, Pass = 1, Fail = 2
     * @param status {module:model/CredasApiModelsRegistrationsRegistrationSummary.StatusEnum} Unknown = 0, Submitted = 1, Approved = 2, Rejected = 3, Exported = 4, Invited = 6
     * @param surname {String} 
     */
    constructor(dataCheckResult, dataChecksPerformed, dateCreated, forename, id, livenessStatus, livenessVerified, regCode, regTypeId, rightToWorkDocumentsProvided, status, surname) { 
        
        CredasApiModelsRegistrationsRegistrationSummary.initialize(this, dataCheckResult, dataChecksPerformed, dateCreated, forename, id, livenessStatus, livenessVerified, regCode, regTypeId, rightToWorkDocumentsProvided, status, surname);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, dataCheckResult, dataChecksPerformed, dateCreated, forename, id, livenessStatus, livenessVerified, regCode, regTypeId, rightToWorkDocumentsProvided, status, surname) { 
        obj['dataCheckResult'] = dataCheckResult;
        obj['dataChecksPerformed'] = dataChecksPerformed;
        obj['dateCreated'] = dateCreated;
        obj['forename'] = forename;
        obj['id'] = id;
        obj['livenessStatus'] = livenessStatus;
        obj['livenessVerified'] = livenessVerified;
        obj['regCode'] = regCode;
        obj['regTypeId'] = regTypeId;
        obj['rightToWorkDocumentsProvided'] = rightToWorkDocumentsProvided;
        obj['status'] = status;
        obj['surname'] = surname;
    }

    /**
     * Constructs a <code>CredasApiModelsRegistrationsRegistrationSummary</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CredasApiModelsRegistrationsRegistrationSummary} obj Optional instance to populate.
     * @return {module:model/CredasApiModelsRegistrationsRegistrationSummary} The populated <code>CredasApiModelsRegistrationsRegistrationSummary</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CredasApiModelsRegistrationsRegistrationSummary();

            if (data.hasOwnProperty('Comments')) {
                obj['Comments'] = ApiClient.convertToType(data['Comments'], [CredasApiModelsRegistrationsRegistrationComment]);
            }
            if (data.hasOwnProperty('CreatedByAgencyUserEmail')) {
                obj['CreatedByAgencyUserEmail'] = ApiClient.convertToType(data['CreatedByAgencyUserEmail'], 'String');
            }
            if (data.hasOwnProperty('DITFDate')) {
                obj['DITFDate'] = ApiClient.convertToType(data['DITFDate'], 'Date');
            }
            if (data.hasOwnProperty('DITFStatus')) {
                obj['DITFStatus'] = ApiClient.convertToType(data['DITFStatus'], 'Number');
            }
            if (data.hasOwnProperty('IsExpired')) {
                obj['IsExpired'] = ApiClient.convertToType(data['IsExpired'], 'Boolean');
            }
            if (data.hasOwnProperty('VerifiedInAppDate')) {
                obj['VerifiedInAppDate'] = ApiClient.convertToType(data['VerifiedInAppDate'], 'Date');
            }
            if (data.hasOwnProperty('bankAccountChecks')) {
                obj['bankAccountChecks'] = ApiClient.convertToType(data['bankAccountChecks'], [CredasApiModelsBankAccountsAccountVerificationResponse]);
            }
            if (data.hasOwnProperty('createdByAgencyUserId')) {
                obj['createdByAgencyUserId'] = ApiClient.convertToType(data['createdByAgencyUserId'], 'String');
            }
            if (data.hasOwnProperty('creditStatusCheck')) {
                obj['creditStatusCheck'] = CredasApiModelsStatusChecksStatusCheck.constructFromObject(data['creditStatusCheck']);
            }
            if (data.hasOwnProperty('customTermsAccepted')) {
                obj['customTermsAccepted'] = ApiClient.convertToType(data['customTermsAccepted'], 'Boolean');
            }
            if (data.hasOwnProperty('customTermsAcceptedDateTime')) {
                obj['customTermsAcceptedDateTime'] = ApiClient.convertToType(data['customTermsAcceptedDateTime'], 'Date');
            }
            if (data.hasOwnProperty('customTermsAcceptedVersion')) {
                obj['customTermsAcceptedVersion'] = ApiClient.convertToType(data['customTermsAcceptedVersion'], 'Number');
            }
            if (data.hasOwnProperty('dataCheckResult')) {
                obj['dataCheckResult'] = ApiClient.convertToType(data['dataCheckResult'], 'Number');
            }
            if (data.hasOwnProperty('dataCheckSources')) {
                obj['dataCheckSources'] = ApiClient.convertToType(data['dataCheckSources'], [CredasApiModelsRegistrationsDataCheckSourceSummary]);
            }
            if (data.hasOwnProperty('dataChecksPerformed')) {
                obj['dataChecksPerformed'] = ApiClient.convertToType(data['dataChecksPerformed'], 'Boolean');
            }
            if (data.hasOwnProperty('dateCompleted')) {
                obj['dateCompleted'] = ApiClient.convertToType(data['dateCompleted'], 'Date');
            }
            if (data.hasOwnProperty('dateCreated')) {
                obj['dateCreated'] = ApiClient.convertToType(data['dateCreated'], 'Date');
            }
            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('forename')) {
                obj['forename'] = ApiClient.convertToType(data['forename'], 'String');
            }
            if (data.hasOwnProperty('hasLivenessPerformed')) {
                obj['hasLivenessPerformed'] = ApiClient.convertToType(data['hasLivenessPerformed'], 'Boolean');
            }
            if (data.hasOwnProperty('hasSelfie')) {
                obj['hasSelfie'] = ApiClient.convertToType(data['hasSelfie'], 'Boolean');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('idDocuments')) {
                obj['idDocuments'] = ApiClient.convertToType(data['idDocuments'], [CredasApiModelsRegistrationsIdDocumentSummary]);
            }
            if (data.hasOwnProperty('idVerification')) {
                obj['idVerification'] = CredasApiModelsRegistrationsIdVerification.constructFromObject(data['idVerification']);
            }
            if (data.hasOwnProperty('isAgentLed')) {
                obj['isAgentLed'] = ApiClient.convertToType(data['isAgentLed'], 'Boolean');
            }
            if (data.hasOwnProperty('livenessMethod')) {
                obj['livenessMethod'] = ApiClient.convertToType(data['livenessMethod'], 'Number');
            }
            if (data.hasOwnProperty('livenessStatus')) {
                obj['livenessStatus'] = ApiClient.convertToType(data['livenessStatus'], 'Number');
            }
            if (data.hasOwnProperty('livenessVerified')) {
                obj['livenessVerified'] = ApiClient.convertToType(data['livenessVerified'], 'Boolean');
            }
            if (data.hasOwnProperty('middleName')) {
                obj['middleName'] = ApiClient.convertToType(data['middleName'], 'String');
            }
            if (data.hasOwnProperty('personalDetails')) {
                obj['personalDetails'] = CredasApiModelsRegistrationsPersonalDetails.constructFromObject(data['personalDetails']);
            }
            if (data.hasOwnProperty('phoneNumber')) {
                obj['phoneNumber'] = ApiClient.convertToType(data['phoneNumber'], 'String');
            }
            if (data.hasOwnProperty('proofOfOwnershipCheck')) {
                obj['proofOfOwnershipCheck'] = CredasApiModelsPropertyRegisterPropertyRegisterCheckResponse.constructFromObject(data['proofOfOwnershipCheck']);
            }
            if (data.hasOwnProperty('referenceId')) {
                obj['referenceId'] = ApiClient.convertToType(data['referenceId'], 'String');
            }
            if (data.hasOwnProperty('regCode')) {
                obj['regCode'] = ApiClient.convertToType(data['regCode'], 'String');
            }
            if (data.hasOwnProperty('regTypeId')) {
                obj['regTypeId'] = ApiClient.convertToType(data['regTypeId'], 'String');
            }
            if (data.hasOwnProperty('rightToRentCheck')) {
                obj['rightToRentCheck'] = CredasApiModelsRegistrationsSettlementStatus.constructFromObject(data['rightToRentCheck']);
            }
            if (data.hasOwnProperty('rightToWorkCheck')) {
                obj['rightToWorkCheck'] = CredasApiModelsRegistrationsSettlementStatus.constructFromObject(data['rightToWorkCheck']);
            }
            if (data.hasOwnProperty('rightToWorkDocumentsProvided')) {
                obj['rightToWorkDocumentsProvided'] = ApiClient.convertToType(data['rightToWorkDocumentsProvided'], 'Number');
            }
            if (data.hasOwnProperty('safeHarbourVerifiedDate')) {
                obj['safeHarbourVerifiedDate'] = ApiClient.convertToType(data['safeHarbourVerifiedDate'], 'Date');
            }
            if (data.hasOwnProperty('safeHarbourVerifiedStatus')) {
                obj['safeHarbourVerifiedStatus'] = ApiClient.convertToType(data['safeHarbourVerifiedStatus'], 'Number');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'Number');
            }
            if (data.hasOwnProperty('surname')) {
                obj['surname'] = ApiClient.convertToType(data['surname'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CredasApiModelsRegistrationsRegistrationSummary</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CredasApiModelsRegistrationsRegistrationSummary</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CredasApiModelsRegistrationsRegistrationSummary.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['Comments']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['Comments'])) {
                throw new Error("Expected the field `Comments` to be an array in the JSON data but got " + data['Comments']);
            }
            // validate the optional field `Comments` (array)
            for (const item of data['Comments']) {
                CredasApiModelsRegistrationsRegistrationComment.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['CreatedByAgencyUserEmail'] && !(typeof data['CreatedByAgencyUserEmail'] === 'string' || data['CreatedByAgencyUserEmail'] instanceof String)) {
            throw new Error("Expected the field `CreatedByAgencyUserEmail` to be a primitive type in the JSON string but got " + data['CreatedByAgencyUserEmail']);
        }
        if (data['bankAccountChecks']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['bankAccountChecks'])) {
                throw new Error("Expected the field `bankAccountChecks` to be an array in the JSON data but got " + data['bankAccountChecks']);
            }
            // validate the optional field `bankAccountChecks` (array)
            for (const item of data['bankAccountChecks']) {
                CredasApiModelsBankAccountsAccountVerificationResponse.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['createdByAgencyUserId'] && !(typeof data['createdByAgencyUserId'] === 'string' || data['createdByAgencyUserId'] instanceof String)) {
            throw new Error("Expected the field `createdByAgencyUserId` to be a primitive type in the JSON string but got " + data['createdByAgencyUserId']);
        }
        // validate the optional field `creditStatusCheck`
        if (data['creditStatusCheck']) { // data not null
          CredasApiModelsStatusChecksStatusCheck.validateJSON(data['creditStatusCheck']);
        }
        if (data['dataCheckSources']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['dataCheckSources'])) {
                throw new Error("Expected the field `dataCheckSources` to be an array in the JSON data but got " + data['dataCheckSources']);
            }
            // validate the optional field `dataCheckSources` (array)
            for (const item of data['dataCheckSources']) {
                CredasApiModelsRegistrationsDataCheckSourceSummary.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['email'] && !(typeof data['email'] === 'string' || data['email'] instanceof String)) {
            throw new Error("Expected the field `email` to be a primitive type in the JSON string but got " + data['email']);
        }
        // ensure the json data is a string
        if (data['forename'] && !(typeof data['forename'] === 'string' || data['forename'] instanceof String)) {
            throw new Error("Expected the field `forename` to be a primitive type in the JSON string but got " + data['forename']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        if (data['idDocuments']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['idDocuments'])) {
                throw new Error("Expected the field `idDocuments` to be an array in the JSON data but got " + data['idDocuments']);
            }
            // validate the optional field `idDocuments` (array)
            for (const item of data['idDocuments']) {
                CredasApiModelsRegistrationsIdDocumentSummary.validateJSON(item);
            };
        }
        // validate the optional field `idVerification`
        if (data['idVerification']) { // data not null
          CredasApiModelsRegistrationsIdVerification.validateJSON(data['idVerification']);
        }
        // ensure the json data is a string
        if (data['middleName'] && !(typeof data['middleName'] === 'string' || data['middleName'] instanceof String)) {
            throw new Error("Expected the field `middleName` to be a primitive type in the JSON string but got " + data['middleName']);
        }
        // validate the optional field `personalDetails`
        if (data['personalDetails']) { // data not null
          CredasApiModelsRegistrationsPersonalDetails.validateJSON(data['personalDetails']);
        }
        // ensure the json data is a string
        if (data['phoneNumber'] && !(typeof data['phoneNumber'] === 'string' || data['phoneNumber'] instanceof String)) {
            throw new Error("Expected the field `phoneNumber` to be a primitive type in the JSON string but got " + data['phoneNumber']);
        }
        // validate the optional field `proofOfOwnershipCheck`
        if (data['proofOfOwnershipCheck']) { // data not null
          CredasApiModelsPropertyRegisterPropertyRegisterCheckResponse.validateJSON(data['proofOfOwnershipCheck']);
        }
        // ensure the json data is a string
        if (data['referenceId'] && !(typeof data['referenceId'] === 'string' || data['referenceId'] instanceof String)) {
            throw new Error("Expected the field `referenceId` to be a primitive type in the JSON string but got " + data['referenceId']);
        }
        // ensure the json data is a string
        if (data['regCode'] && !(typeof data['regCode'] === 'string' || data['regCode'] instanceof String)) {
            throw new Error("Expected the field `regCode` to be a primitive type in the JSON string but got " + data['regCode']);
        }
        // ensure the json data is a string
        if (data['regTypeId'] && !(typeof data['regTypeId'] === 'string' || data['regTypeId'] instanceof String)) {
            throw new Error("Expected the field `regTypeId` to be a primitive type in the JSON string but got " + data['regTypeId']);
        }
        // validate the optional field `rightToRentCheck`
        if (data['rightToRentCheck']) { // data not null
          CredasApiModelsRegistrationsSettlementStatus.validateJSON(data['rightToRentCheck']);
        }
        // validate the optional field `rightToWorkCheck`
        if (data['rightToWorkCheck']) { // data not null
          CredasApiModelsRegistrationsSettlementStatus.validateJSON(data['rightToWorkCheck']);
        }
        // ensure the json data is a string
        if (data['surname'] && !(typeof data['surname'] === 'string' || data['surname'] instanceof String)) {
            throw new Error("Expected the field `surname` to be a primitive type in the JSON string but got " + data['surname']);
        }

        return true;
    }


}

CredasApiModelsRegistrationsRegistrationSummary.RequiredProperties = ["dataCheckResult", "dataChecksPerformed", "dateCreated", "forename", "id", "livenessStatus", "livenessVerified", "regCode", "regTypeId", "rightToWorkDocumentsProvided", "status", "surname"];

/**
 * @member {Array.<module:model/CredasApiModelsRegistrationsRegistrationComment>} Comments
 */
CredasApiModelsRegistrationsRegistrationSummary.prototype['Comments'] = undefined;

/**
 * @member {String} CreatedByAgencyUserEmail
 */
CredasApiModelsRegistrationsRegistrationSummary.prototype['CreatedByAgencyUserEmail'] = undefined;

/**
 * @member {Date} DITFDate
 */
CredasApiModelsRegistrationsRegistrationSummary.prototype['DITFDate'] = undefined;

/**
 * No = 0, Yes = 1, Pending = 2
 * @member {module:model/CredasApiModelsRegistrationsRegistrationSummary.DITFStatusEnum} DITFStatus
 */
CredasApiModelsRegistrationsRegistrationSummary.prototype['DITFStatus'] = undefined;

/**
 * @member {Boolean} IsExpired
 */
CredasApiModelsRegistrationsRegistrationSummary.prototype['IsExpired'] = undefined;

/**
 * @member {Date} VerifiedInAppDate
 */
CredasApiModelsRegistrationsRegistrationSummary.prototype['VerifiedInAppDate'] = undefined;

/**
 * @member {Array.<module:model/CredasApiModelsBankAccountsAccountVerificationResponse>} bankAccountChecks
 */
CredasApiModelsRegistrationsRegistrationSummary.prototype['bankAccountChecks'] = undefined;

/**
 * @member {String} createdByAgencyUserId
 */
CredasApiModelsRegistrationsRegistrationSummary.prototype['createdByAgencyUserId'] = undefined;

/**
 * @member {module:model/CredasApiModelsStatusChecksStatusCheck} creditStatusCheck
 */
CredasApiModelsRegistrationsRegistrationSummary.prototype['creditStatusCheck'] = undefined;

/**
 * @member {Boolean} customTermsAccepted
 */
CredasApiModelsRegistrationsRegistrationSummary.prototype['customTermsAccepted'] = undefined;

/**
 * @member {Date} customTermsAcceptedDateTime
 */
CredasApiModelsRegistrationsRegistrationSummary.prototype['customTermsAcceptedDateTime'] = undefined;

/**
 * @member {Number} customTermsAcceptedVersion
 */
CredasApiModelsRegistrationsRegistrationSummary.prototype['customTermsAcceptedVersion'] = undefined;

/**
 * Unknown = 0, Pass = 1, Refer = 2, Fail = 3
 * @member {module:model/CredasApiModelsRegistrationsRegistrationSummary.DataCheckResultEnum} dataCheckResult
 */
CredasApiModelsRegistrationsRegistrationSummary.prototype['dataCheckResult'] = undefined;

/**
 * @member {Array.<module:model/CredasApiModelsRegistrationsDataCheckSourceSummary>} dataCheckSources
 */
CredasApiModelsRegistrationsRegistrationSummary.prototype['dataCheckSources'] = undefined;

/**
 * @member {Boolean} dataChecksPerformed
 */
CredasApiModelsRegistrationsRegistrationSummary.prototype['dataChecksPerformed'] = undefined;

/**
 * @member {Date} dateCompleted
 */
CredasApiModelsRegistrationsRegistrationSummary.prototype['dateCompleted'] = undefined;

/**
 * @member {Date} dateCreated
 */
CredasApiModelsRegistrationsRegistrationSummary.prototype['dateCreated'] = undefined;

/**
 * @member {String} email
 */
CredasApiModelsRegistrationsRegistrationSummary.prototype['email'] = undefined;

/**
 * @member {String} forename
 */
CredasApiModelsRegistrationsRegistrationSummary.prototype['forename'] = undefined;

/**
 * @member {Boolean} hasLivenessPerformed
 */
CredasApiModelsRegistrationsRegistrationSummary.prototype['hasLivenessPerformed'] = undefined;

/**
 * @member {Boolean} hasSelfie
 */
CredasApiModelsRegistrationsRegistrationSummary.prototype['hasSelfie'] = undefined;

/**
 * @member {String} id
 */
CredasApiModelsRegistrationsRegistrationSummary.prototype['id'] = undefined;

/**
 * @member {Array.<module:model/CredasApiModelsRegistrationsIdDocumentSummary>} idDocuments
 */
CredasApiModelsRegistrationsRegistrationSummary.prototype['idDocuments'] = undefined;

/**
 * @member {module:model/CredasApiModelsRegistrationsIdVerification} idVerification
 */
CredasApiModelsRegistrationsRegistrationSummary.prototype['idVerification'] = undefined;

/**
 * @member {Boolean} isAgentLed
 */
CredasApiModelsRegistrationsRegistrationSummary.prototype['isAgentLed'] = undefined;

/**
 * NotApplicable = 0, UniqueActionProcess = 1, Passive = 2
 * @member {module:model/CredasApiModelsRegistrationsRegistrationSummary.LivenessMethodEnum} livenessMethod
 */
CredasApiModelsRegistrationsRegistrationSummary.prototype['livenessMethod'] = undefined;

/**
 * NotSubmitted = 0, Verified = 1, Unverified = 2, Unknown = 3, RetakeRequested = 4
 * @member {module:model/CredasApiModelsRegistrationsRegistrationSummary.LivenessStatusEnum} livenessStatus
 */
CredasApiModelsRegistrationsRegistrationSummary.prototype['livenessStatus'] = undefined;

/**
 * @member {Boolean} livenessVerified
 */
CredasApiModelsRegistrationsRegistrationSummary.prototype['livenessVerified'] = undefined;

/**
 * @member {String} middleName
 */
CredasApiModelsRegistrationsRegistrationSummary.prototype['middleName'] = undefined;

/**
 * @member {module:model/CredasApiModelsRegistrationsPersonalDetails} personalDetails
 */
CredasApiModelsRegistrationsRegistrationSummary.prototype['personalDetails'] = undefined;

/**
 * @member {String} phoneNumber
 */
CredasApiModelsRegistrationsRegistrationSummary.prototype['phoneNumber'] = undefined;

/**
 * @member {module:model/CredasApiModelsPropertyRegisterPropertyRegisterCheckResponse} proofOfOwnershipCheck
 */
CredasApiModelsRegistrationsRegistrationSummary.prototype['proofOfOwnershipCheck'] = undefined;

/**
 * @member {String} referenceId
 */
CredasApiModelsRegistrationsRegistrationSummary.prototype['referenceId'] = undefined;

/**
 * @member {String} regCode
 */
CredasApiModelsRegistrationsRegistrationSummary.prototype['regCode'] = undefined;

/**
 * @member {String} regTypeId
 */
CredasApiModelsRegistrationsRegistrationSummary.prototype['regTypeId'] = undefined;

/**
 * @member {module:model/CredasApiModelsRegistrationsSettlementStatus} rightToRentCheck
 */
CredasApiModelsRegistrationsRegistrationSummary.prototype['rightToRentCheck'] = undefined;

/**
 * @member {module:model/CredasApiModelsRegistrationsSettlementStatus} rightToWorkCheck
 */
CredasApiModelsRegistrationsRegistrationSummary.prototype['rightToWorkCheck'] = undefined;

/**
 * This property is no longer supported. Right to work is now available as an individual check.<br />  values=> Pending = 0, Pass = 1, Fail = 2
 * @member {module:model/CredasApiModelsRegistrationsRegistrationSummary.RightToWorkDocumentsProvidedEnum} rightToWorkDocumentsProvided
 */
CredasApiModelsRegistrationsRegistrationSummary.prototype['rightToWorkDocumentsProvided'] = undefined;

/**
 * @member {Date} safeHarbourVerifiedDate
 */
CredasApiModelsRegistrationsRegistrationSummary.prototype['safeHarbourVerifiedDate'] = undefined;

/**
 * No = 0, Yes = 1, UnderReview = 2
 * @member {module:model/CredasApiModelsRegistrationsRegistrationSummary.SafeHarbourVerifiedStatusEnum} safeHarbourVerifiedStatus
 */
CredasApiModelsRegistrationsRegistrationSummary.prototype['safeHarbourVerifiedStatus'] = undefined;

/**
 * Unknown = 0, Submitted = 1, Approved = 2, Rejected = 3, Exported = 4, Invited = 6
 * @member {module:model/CredasApiModelsRegistrationsRegistrationSummary.StatusEnum} status
 */
CredasApiModelsRegistrationsRegistrationSummary.prototype['status'] = undefined;

/**
 * @member {String} surname
 */
CredasApiModelsRegistrationsRegistrationSummary.prototype['surname'] = undefined;





/**
 * Allowed values for the <code>DITFStatus</code> property.
 * @enum {Number}
 * @readonly
 */
CredasApiModelsRegistrationsRegistrationSummary['DITFStatusEnum'] = {

    /**
     * value: 0
     * @const
     */
    "0": 0,

    /**
     * value: 1
     * @const
     */
    "1": 1,

    /**
     * value: 2
     * @const
     */
    "2": 2
};


/**
 * Allowed values for the <code>dataCheckResult</code> property.
 * @enum {Number}
 * @readonly
 */
CredasApiModelsRegistrationsRegistrationSummary['DataCheckResultEnum'] = {

    /**
     * value: 0
     * @const
     */
    "0": 0,

    /**
     * value: 1
     * @const
     */
    "1": 1,

    /**
     * value: 2
     * @const
     */
    "2": 2,

    /**
     * value: 3
     * @const
     */
    "3": 3
};


/**
 * Allowed values for the <code>livenessMethod</code> property.
 * @enum {Number}
 * @readonly
 */
CredasApiModelsRegistrationsRegistrationSummary['LivenessMethodEnum'] = {

    /**
     * value: 0
     * @const
     */
    "0": 0,

    /**
     * value: 1
     * @const
     */
    "1": 1,

    /**
     * value: 2
     * @const
     */
    "2": 2
};


/**
 * Allowed values for the <code>livenessStatus</code> property.
 * @enum {Number}
 * @readonly
 */
CredasApiModelsRegistrationsRegistrationSummary['LivenessStatusEnum'] = {

    /**
     * value: 0
     * @const
     */
    "0": 0,

    /**
     * value: 1
     * @const
     */
    "1": 1,

    /**
     * value: 2
     * @const
     */
    "2": 2,

    /**
     * value: 3
     * @const
     */
    "3": 3,

    /**
     * value: 4
     * @const
     */
    "4": 4
};


/**
 * Allowed values for the <code>rightToWorkDocumentsProvided</code> property.
 * @enum {Number}
 * @readonly
 */
CredasApiModelsRegistrationsRegistrationSummary['RightToWorkDocumentsProvidedEnum'] = {

    /**
     * value: 0
     * @const
     */
    "0": 0,

    /**
     * value: 1
     * @const
     */
    "1": 1,

    /**
     * value: 2
     * @const
     */
    "2": 2
};


/**
 * Allowed values for the <code>safeHarbourVerifiedStatus</code> property.
 * @enum {Number}
 * @readonly
 */
CredasApiModelsRegistrationsRegistrationSummary['SafeHarbourVerifiedStatusEnum'] = {

    /**
     * value: 0
     * @const
     */
    "0": 0,

    /**
     * value: 1
     * @const
     */
    "1": 1,

    /**
     * value: 2
     * @const
     */
    "2": 2
};


/**
 * Allowed values for the <code>status</code> property.
 * @enum {Number}
 * @readonly
 */
CredasApiModelsRegistrationsRegistrationSummary['StatusEnum'] = {

    /**
     * value: 0
     * @const
     */
    "0": 0,

    /**
     * value: 1
     * @const
     */
    "1": 1,

    /**
     * value: 2
     * @const
     */
    "2": 2,

    /**
     * value: 3
     * @const
     */
    "3": 3,

    /**
     * value: 4
     * @const
     */
    "4": 4,

    /**
     * value: 6
     * @const
     */
    "6": 6
};



export default CredasApiModelsRegistrationsRegistrationSummary;

