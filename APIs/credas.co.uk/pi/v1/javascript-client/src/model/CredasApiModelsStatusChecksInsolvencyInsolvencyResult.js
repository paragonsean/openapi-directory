/**
 * Credas API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CredasApiModelsStatusChecksInsolvencyAddress from './CredasApiModelsStatusChecksInsolvencyAddress';

/**
 * The CredasApiModelsStatusChecksInsolvencyInsolvencyResult model module.
 * @module model/CredasApiModelsStatusChecksInsolvencyInsolvencyResult
 * @version v1
 */
class CredasApiModelsStatusChecksInsolvencyInsolvencyResult {
    /**
     * Constructs a new <code>CredasApiModelsStatusChecksInsolvencyInsolvencyResult</code>.
     * @alias module:model/CredasApiModelsStatusChecksInsolvencyInsolvencyResult
     */
    constructor() { 
        
        CredasApiModelsStatusChecksInsolvencyInsolvencyResult.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CredasApiModelsStatusChecksInsolvencyInsolvencyResult</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CredasApiModelsStatusChecksInsolvencyInsolvencyResult} obj Optional instance to populate.
     * @return {module:model/CredasApiModelsStatusChecksInsolvencyInsolvencyResult} The populated <code>CredasApiModelsStatusChecksInsolvencyInsolvencyResult</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CredasApiModelsStatusChecksInsolvencyInsolvencyResult();

            if (data.hasOwnProperty('address')) {
                obj['address'] = CredasApiModelsStatusChecksInsolvencyAddress.constructFromObject(data['address']);
            }
            if (data.hasOwnProperty('aliases')) {
                obj['aliases'] = ApiClient.convertToType(data['aliases'], 'String');
            }
            if (data.hasOwnProperty('assetTotal')) {
                obj['assetTotal'] = ApiClient.convertToType(data['assetTotal'], 'String');
            }
            if (data.hasOwnProperty('caseNo')) {
                obj['caseNo'] = ApiClient.convertToType(data['caseNo'], 'String');
            }
            if (data.hasOwnProperty('caseType')) {
                obj['caseType'] = ApiClient.convertToType(data['caseType'], 'String');
            }
            if (data.hasOwnProperty('court')) {
                obj['court'] = ApiClient.convertToType(data['court'], 'String');
            }
            if (data.hasOwnProperty('debtTotal')) {
                obj['debtTotal'] = ApiClient.convertToType(data['debtTotal'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('dob')) {
                obj['dob'] = ApiClient.convertToType(data['dob'], 'Date');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('occupation')) {
                obj['occupation'] = ApiClient.convertToType(data['occupation'], 'String');
            }
            if (data.hasOwnProperty('presentationDate')) {
                obj['presentationDate'] = ApiClient.convertToType(data['presentationDate'], 'Date');
            }
            if (data.hasOwnProperty('previousAddress')) {
                obj['previousAddress'] = CredasApiModelsStatusChecksInsolvencyAddress.constructFromObject(data['previousAddress']);
            }
            if (data.hasOwnProperty('serviceOffice')) {
                obj['serviceOffice'] = ApiClient.convertToType(data['serviceOffice'], 'String');
            }
            if (data.hasOwnProperty('startDate')) {
                obj['startDate'] = ApiClient.convertToType(data['startDate'], 'Date');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('telephoneNumber')) {
                obj['telephoneNumber'] = ApiClient.convertToType(data['telephoneNumber'], 'String');
            }
            if (data.hasOwnProperty('tradingNames')) {
                obj['tradingNames'] = ApiClient.convertToType(data['tradingNames'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'Number');
            }
            if (data.hasOwnProperty('typeText')) {
                obj['typeText'] = ApiClient.convertToType(data['typeText'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CredasApiModelsStatusChecksInsolvencyInsolvencyResult</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CredasApiModelsStatusChecksInsolvencyInsolvencyResult</code>.
     */
    static validateJSON(data) {
        // validate the optional field `address`
        if (data['address']) { // data not null
          CredasApiModelsStatusChecksInsolvencyAddress.validateJSON(data['address']);
        }
        // ensure the json data is a string
        if (data['aliases'] && !(typeof data['aliases'] === 'string' || data['aliases'] instanceof String)) {
            throw new Error("Expected the field `aliases` to be a primitive type in the JSON string but got " + data['aliases']);
        }
        // ensure the json data is a string
        if (data['assetTotal'] && !(typeof data['assetTotal'] === 'string' || data['assetTotal'] instanceof String)) {
            throw new Error("Expected the field `assetTotal` to be a primitive type in the JSON string but got " + data['assetTotal']);
        }
        // ensure the json data is a string
        if (data['caseNo'] && !(typeof data['caseNo'] === 'string' || data['caseNo'] instanceof String)) {
            throw new Error("Expected the field `caseNo` to be a primitive type in the JSON string but got " + data['caseNo']);
        }
        // ensure the json data is a string
        if (data['caseType'] && !(typeof data['caseType'] === 'string' || data['caseType'] instanceof String)) {
            throw new Error("Expected the field `caseType` to be a primitive type in the JSON string but got " + data['caseType']);
        }
        // ensure the json data is a string
        if (data['court'] && !(typeof data['court'] === 'string' || data['court'] instanceof String)) {
            throw new Error("Expected the field `court` to be a primitive type in the JSON string but got " + data['court']);
        }
        // ensure the json data is a string
        if (data['debtTotal'] && !(typeof data['debtTotal'] === 'string' || data['debtTotal'] instanceof String)) {
            throw new Error("Expected the field `debtTotal` to be a primitive type in the JSON string but got " + data['debtTotal']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['occupation'] && !(typeof data['occupation'] === 'string' || data['occupation'] instanceof String)) {
            throw new Error("Expected the field `occupation` to be a primitive type in the JSON string but got " + data['occupation']);
        }
        // validate the optional field `previousAddress`
        if (data['previousAddress']) { // data not null
          CredasApiModelsStatusChecksInsolvencyAddress.validateJSON(data['previousAddress']);
        }
        // ensure the json data is a string
        if (data['serviceOffice'] && !(typeof data['serviceOffice'] === 'string' || data['serviceOffice'] instanceof String)) {
            throw new Error("Expected the field `serviceOffice` to be a primitive type in the JSON string but got " + data['serviceOffice']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // ensure the json data is a string
        if (data['telephoneNumber'] && !(typeof data['telephoneNumber'] === 'string' || data['telephoneNumber'] instanceof String)) {
            throw new Error("Expected the field `telephoneNumber` to be a primitive type in the JSON string but got " + data['telephoneNumber']);
        }
        // ensure the json data is a string
        if (data['tradingNames'] && !(typeof data['tradingNames'] === 'string' || data['tradingNames'] instanceof String)) {
            throw new Error("Expected the field `tradingNames` to be a primitive type in the JSON string but got " + data['tradingNames']);
        }
        // ensure the json data is a string
        if (data['typeText'] && !(typeof data['typeText'] === 'string' || data['typeText'] instanceof String)) {
            throw new Error("Expected the field `typeText` to be a primitive type in the JSON string but got " + data['typeText']);
        }

        return true;
    }


}



/**
 * @member {module:model/CredasApiModelsStatusChecksInsolvencyAddress} address
 */
CredasApiModelsStatusChecksInsolvencyInsolvencyResult.prototype['address'] = undefined;

/**
 * @member {String} aliases
 */
CredasApiModelsStatusChecksInsolvencyInsolvencyResult.prototype['aliases'] = undefined;

/**
 * @member {String} assetTotal
 */
CredasApiModelsStatusChecksInsolvencyInsolvencyResult.prototype['assetTotal'] = undefined;

/**
 * @member {String} caseNo
 */
CredasApiModelsStatusChecksInsolvencyInsolvencyResult.prototype['caseNo'] = undefined;

/**
 * @member {String} caseType
 */
CredasApiModelsStatusChecksInsolvencyInsolvencyResult.prototype['caseType'] = undefined;

/**
 * @member {String} court
 */
CredasApiModelsStatusChecksInsolvencyInsolvencyResult.prototype['court'] = undefined;

/**
 * @member {String} debtTotal
 */
CredasApiModelsStatusChecksInsolvencyInsolvencyResult.prototype['debtTotal'] = undefined;

/**
 * @member {String} description
 */
CredasApiModelsStatusChecksInsolvencyInsolvencyResult.prototype['description'] = undefined;

/**
 * @member {Date} dob
 */
CredasApiModelsStatusChecksInsolvencyInsolvencyResult.prototype['dob'] = undefined;

/**
 * @member {String} name
 */
CredasApiModelsStatusChecksInsolvencyInsolvencyResult.prototype['name'] = undefined;

/**
 * @member {String} occupation
 */
CredasApiModelsStatusChecksInsolvencyInsolvencyResult.prototype['occupation'] = undefined;

/**
 * @member {Date} presentationDate
 */
CredasApiModelsStatusChecksInsolvencyInsolvencyResult.prototype['presentationDate'] = undefined;

/**
 * @member {module:model/CredasApiModelsStatusChecksInsolvencyAddress} previousAddress
 */
CredasApiModelsStatusChecksInsolvencyInsolvencyResult.prototype['previousAddress'] = undefined;

/**
 * @member {String} serviceOffice
 */
CredasApiModelsStatusChecksInsolvencyInsolvencyResult.prototype['serviceOffice'] = undefined;

/**
 * @member {Date} startDate
 */
CredasApiModelsStatusChecksInsolvencyInsolvencyResult.prototype['startDate'] = undefined;

/**
 * @member {String} status
 */
CredasApiModelsStatusChecksInsolvencyInsolvencyResult.prototype['status'] = undefined;

/**
 * @member {String} telephoneNumber
 */
CredasApiModelsStatusChecksInsolvencyInsolvencyResult.prototype['telephoneNumber'] = undefined;

/**
 * @member {String} tradingNames
 */
CredasApiModelsStatusChecksInsolvencyInsolvencyResult.prototype['tradingNames'] = undefined;

/**
 * Unknown = 0, NorthernIrelandBankruptcy = 1, ScottishSequestrationBankruptcy = 2, EnglandAndWalesIVA = 3, EnglandAndWalesDRO = 4, EnglandAndWalesBankruptcy = 5
 * @member {module:model/CredasApiModelsStatusChecksInsolvencyInsolvencyResult.TypeEnum} type
 */
CredasApiModelsStatusChecksInsolvencyInsolvencyResult.prototype['type'] = undefined;

/**
 * @member {String} typeText
 */
CredasApiModelsStatusChecksInsolvencyInsolvencyResult.prototype['typeText'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {Number}
 * @readonly
 */
CredasApiModelsStatusChecksInsolvencyInsolvencyResult['TypeEnum'] = {

    /**
     * value: 0
     * @const
     */
    "0": 0,

    /**
     * value: 1
     * @const
     */
    "1": 1,

    /**
     * value: 2
     * @const
     */
    "2": 2,

    /**
     * value: 3
     * @const
     */
    "3": 3,

    /**
     * value: 4
     * @const
     */
    "4": 4,

    /**
     * value: 5
     * @const
     */
    "5": 5
};



export default CredasApiModelsStatusChecksInsolvencyInsolvencyResult;

