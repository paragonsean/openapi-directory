/**
 * Credas API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CredasApiModelsDataCheckAddress from './CredasApiModelsDataCheckAddress';
import CredasApiModelsDataCheckPerson from './CredasApiModelsDataCheckPerson';

/**
 * The CredasApiModelsDataCheckAddDataCheckRequest model module.
 * @module model/CredasApiModelsDataCheckAddDataCheckRequest
 * @version v1
 */
class CredasApiModelsDataCheckAddDataCheckRequest {
    /**
     * Constructs a new <code>CredasApiModelsDataCheckAddDataCheckRequest</code>.
     * @alias module:model/CredasApiModelsDataCheckAddDataCheckRequest
     * @param checkType {module:model/CredasApiModelsDataCheckAddDataCheckRequest.CheckTypeEnum} The value of checkType dictates what checks are performed. <br/>The StandardAml check (value = 1) will check DOB & Mortality. <br/>The InternationalPepSanctions check (value = 3) will check just International PEP & Sanctions. <br/>The EnhancedAml check (value = 2) will perform both these checks and is equivalent to making two calls with values of 1 then 3 and will be charged accordingly. <br />  values=> None = 0, StandardAml = 1, EnhancedAml = 2, InternationalPepSanctions = 3
     * @param currentAddress {module:model/CredasApiModelsDataCheckAddress} 
     * @param person {module:model/CredasApiModelsDataCheckPerson} 
     * @param regEntryId {String} 
     */
    constructor(checkType, currentAddress, person, regEntryId) { 
        
        CredasApiModelsDataCheckAddDataCheckRequest.initialize(this, checkType, currentAddress, person, regEntryId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, checkType, currentAddress, person, regEntryId) { 
        obj['checkType'] = checkType;
        obj['currentAddress'] = currentAddress;
        obj['person'] = person;
        obj['regEntryId'] = regEntryId;
    }

    /**
     * Constructs a <code>CredasApiModelsDataCheckAddDataCheckRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CredasApiModelsDataCheckAddDataCheckRequest} obj Optional instance to populate.
     * @return {module:model/CredasApiModelsDataCheckAddDataCheckRequest} The populated <code>CredasApiModelsDataCheckAddDataCheckRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CredasApiModelsDataCheckAddDataCheckRequest();

            if (data.hasOwnProperty('checkType')) {
                obj['checkType'] = ApiClient.convertToType(data['checkType'], 'Number');
            }
            if (data.hasOwnProperty('currentAddress')) {
                obj['currentAddress'] = CredasApiModelsDataCheckAddress.constructFromObject(data['currentAddress']);
            }
            if (data.hasOwnProperty('person')) {
                obj['person'] = CredasApiModelsDataCheckPerson.constructFromObject(data['person']);
            }
            if (data.hasOwnProperty('regEntryId')) {
                obj['regEntryId'] = ApiClient.convertToType(data['regEntryId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CredasApiModelsDataCheckAddDataCheckRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CredasApiModelsDataCheckAddDataCheckRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CredasApiModelsDataCheckAddDataCheckRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `currentAddress`
        if (data['currentAddress']) { // data not null
          CredasApiModelsDataCheckAddress.validateJSON(data['currentAddress']);
        }
        // validate the optional field `person`
        if (data['person']) { // data not null
          CredasApiModelsDataCheckPerson.validateJSON(data['person']);
        }
        // ensure the json data is a string
        if (data['regEntryId'] && !(typeof data['regEntryId'] === 'string' || data['regEntryId'] instanceof String)) {
            throw new Error("Expected the field `regEntryId` to be a primitive type in the JSON string but got " + data['regEntryId']);
        }

        return true;
    }


}

CredasApiModelsDataCheckAddDataCheckRequest.RequiredProperties = ["checkType", "currentAddress", "person", "regEntryId"];

/**
 * The value of checkType dictates what checks are performed. <br/>The StandardAml check (value = 1) will check DOB & Mortality. <br/>The InternationalPepSanctions check (value = 3) will check just International PEP & Sanctions. <br/>The EnhancedAml check (value = 2) will perform both these checks and is equivalent to making two calls with values of 1 then 3 and will be charged accordingly. <br />  values=> None = 0, StandardAml = 1, EnhancedAml = 2, InternationalPepSanctions = 3
 * @member {module:model/CredasApiModelsDataCheckAddDataCheckRequest.CheckTypeEnum} checkType
 */
CredasApiModelsDataCheckAddDataCheckRequest.prototype['checkType'] = undefined;

/**
 * @member {module:model/CredasApiModelsDataCheckAddress} currentAddress
 */
CredasApiModelsDataCheckAddDataCheckRequest.prototype['currentAddress'] = undefined;

/**
 * @member {module:model/CredasApiModelsDataCheckPerson} person
 */
CredasApiModelsDataCheckAddDataCheckRequest.prototype['person'] = undefined;

/**
 * @member {String} regEntryId
 */
CredasApiModelsDataCheckAddDataCheckRequest.prototype['regEntryId'] = undefined;





/**
 * Allowed values for the <code>checkType</code> property.
 * @enum {Number}
 * @readonly
 */
CredasApiModelsDataCheckAddDataCheckRequest['CheckTypeEnum'] = {

    /**
     * value: 0
     * @const
     */
    "0": 0,

    /**
     * value: 1
     * @const
     */
    "1": 1,

    /**
     * value: 2
     * @const
     */
    "2": 2,

    /**
     * value: 3
     * @const
     */
    "3": 3
};



export default CredasApiModelsDataCheckAddDataCheckRequest;

