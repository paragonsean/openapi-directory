/**
 * Credas API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CredasApiModelsRegistrationsRegistrationComment model module.
 * @module model/CredasApiModelsRegistrationsRegistrationComment
 * @version v1
 */
class CredasApiModelsRegistrationsRegistrationComment {
    /**
     * Constructs a new <code>CredasApiModelsRegistrationsRegistrationComment</code>.
     * @alias module:model/CredasApiModelsRegistrationsRegistrationComment
     */
    constructor() { 
        
        CredasApiModelsRegistrationsRegistrationComment.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CredasApiModelsRegistrationsRegistrationComment</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CredasApiModelsRegistrationsRegistrationComment} obj Optional instance to populate.
     * @return {module:model/CredasApiModelsRegistrationsRegistrationComment} The populated <code>CredasApiModelsRegistrationsRegistrationComment</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CredasApiModelsRegistrationsRegistrationComment();

            if (data.hasOwnProperty('checkType')) {
                obj['checkType'] = ApiClient.convertToType(data['checkType'], 'Number');
            }
            if (data.hasOwnProperty('comment')) {
                obj['comment'] = ApiClient.convertToType(data['comment'], 'String');
            }
            if (data.hasOwnProperty('dateCreated')) {
                obj['dateCreated'] = ApiClient.convertToType(data['dateCreated'], 'Date');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CredasApiModelsRegistrationsRegistrationComment</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CredasApiModelsRegistrationsRegistrationComment</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['comment'] && !(typeof data['comment'] === 'string' || data['comment'] instanceof String)) {
            throw new Error("Expected the field `comment` to be a primitive type in the JSON string but got " + data['comment']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }

        return true;
    }


}



/**
 * IdDocuments = 1, StandardChecks = 2, InternationalSanctionsAndPep = 3, CreditStatusCheck = 4, BankAccountCheck = 5, ProofOfOwnership = 6, RightToWork = 7, RightToRent = 8
 * @member {module:model/CredasApiModelsRegistrationsRegistrationComment.CheckTypeEnum} checkType
 */
CredasApiModelsRegistrationsRegistrationComment.prototype['checkType'] = undefined;

/**
 * @member {String} comment
 */
CredasApiModelsRegistrationsRegistrationComment.prototype['comment'] = undefined;

/**
 * @member {Date} dateCreated
 */
CredasApiModelsRegistrationsRegistrationComment.prototype['dateCreated'] = undefined;

/**
 * @member {String} id
 */
CredasApiModelsRegistrationsRegistrationComment.prototype['id'] = undefined;

/**
 * @member {String} name
 */
CredasApiModelsRegistrationsRegistrationComment.prototype['name'] = undefined;

/**
 * General = 0, CheckRelated = 1
 * @member {module:model/CredasApiModelsRegistrationsRegistrationComment.TypeEnum} type
 */
CredasApiModelsRegistrationsRegistrationComment.prototype['type'] = undefined;





/**
 * Allowed values for the <code>checkType</code> property.
 * @enum {Number}
 * @readonly
 */
CredasApiModelsRegistrationsRegistrationComment['CheckTypeEnum'] = {

    /**
     * value: 0
     * @const
     */
    "0": 0,

    /**
     * value: 1
     * @const
     */
    "1": 1,

    /**
     * value: 2
     * @const
     */
    "2": 2,

    /**
     * value: 3
     * @const
     */
    "3": 3,

    /**
     * value: 4
     * @const
     */
    "4": 4,

    /**
     * value: 5
     * @const
     */
    "5": 5,

    /**
     * value: 6
     * @const
     */
    "6": 6,

    /**
     * value: 7
     * @const
     */
    "7": 7,

    /**
     * value: 8
     * @const
     */
    "8": 8
};


/**
 * Allowed values for the <code>type</code> property.
 * @enum {Number}
 * @readonly
 */
CredasApiModelsRegistrationsRegistrationComment['TypeEnum'] = {

    /**
     * value: 0
     * @const
     */
    "0": 0,

    /**
     * value: 1
     * @const
     */
    "1": 1
};



export default CredasApiModelsRegistrationsRegistrationComment;

