/**
 * Credas API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CredasApiModelsPropertyRegisterAddress model module.
 * @module model/CredasApiModelsPropertyRegisterAddress
 * @version v1
 */
class CredasApiModelsPropertyRegisterAddress {
    /**
     * Constructs a new <code>CredasApiModelsPropertyRegisterAddress</code>.
     * @alias module:model/CredasApiModelsPropertyRegisterAddress
     * @param addressLine1 {String} 
     * @param city {String} 
     * @param country {String} 
     * @param postcode {String} 
     */
    constructor(addressLine1, city, country, postcode) { 
        
        CredasApiModelsPropertyRegisterAddress.initialize(this, addressLine1, city, country, postcode);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, addressLine1, city, country, postcode) { 
        obj['addressLine1'] = addressLine1;
        obj['city'] = city;
        obj['country'] = country;
        obj['postcode'] = postcode;
    }

    /**
     * Constructs a <code>CredasApiModelsPropertyRegisterAddress</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CredasApiModelsPropertyRegisterAddress} obj Optional instance to populate.
     * @return {module:model/CredasApiModelsPropertyRegisterAddress} The populated <code>CredasApiModelsPropertyRegisterAddress</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CredasApiModelsPropertyRegisterAddress();

            if (data.hasOwnProperty('addressLine1')) {
                obj['addressLine1'] = ApiClient.convertToType(data['addressLine1'], 'String');
            }
            if (data.hasOwnProperty('addressLine2')) {
                obj['addressLine2'] = ApiClient.convertToType(data['addressLine2'], 'String');
            }
            if (data.hasOwnProperty('addressLine3')) {
                obj['addressLine3'] = ApiClient.convertToType(data['addressLine3'], 'String');
            }
            if (data.hasOwnProperty('city')) {
                obj['city'] = ApiClient.convertToType(data['city'], 'String');
            }
            if (data.hasOwnProperty('country')) {
                obj['country'] = ApiClient.convertToType(data['country'], 'String');
            }
            if (data.hasOwnProperty('county')) {
                obj['county'] = ApiClient.convertToType(data['county'], 'String');
            }
            if (data.hasOwnProperty('postcode')) {
                obj['postcode'] = ApiClient.convertToType(data['postcode'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CredasApiModelsPropertyRegisterAddress</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CredasApiModelsPropertyRegisterAddress</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CredasApiModelsPropertyRegisterAddress.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['addressLine1'] && !(typeof data['addressLine1'] === 'string' || data['addressLine1'] instanceof String)) {
            throw new Error("Expected the field `addressLine1` to be a primitive type in the JSON string but got " + data['addressLine1']);
        }
        // ensure the json data is a string
        if (data['addressLine2'] && !(typeof data['addressLine2'] === 'string' || data['addressLine2'] instanceof String)) {
            throw new Error("Expected the field `addressLine2` to be a primitive type in the JSON string but got " + data['addressLine2']);
        }
        // ensure the json data is a string
        if (data['addressLine3'] && !(typeof data['addressLine3'] === 'string' || data['addressLine3'] instanceof String)) {
            throw new Error("Expected the field `addressLine3` to be a primitive type in the JSON string but got " + data['addressLine3']);
        }
        // ensure the json data is a string
        if (data['city'] && !(typeof data['city'] === 'string' || data['city'] instanceof String)) {
            throw new Error("Expected the field `city` to be a primitive type in the JSON string but got " + data['city']);
        }
        // ensure the json data is a string
        if (data['country'] && !(typeof data['country'] === 'string' || data['country'] instanceof String)) {
            throw new Error("Expected the field `country` to be a primitive type in the JSON string but got " + data['country']);
        }
        // ensure the json data is a string
        if (data['county'] && !(typeof data['county'] === 'string' || data['county'] instanceof String)) {
            throw new Error("Expected the field `county` to be a primitive type in the JSON string but got " + data['county']);
        }
        // ensure the json data is a string
        if (data['postcode'] && !(typeof data['postcode'] === 'string' || data['postcode'] instanceof String)) {
            throw new Error("Expected the field `postcode` to be a primitive type in the JSON string but got " + data['postcode']);
        }

        return true;
    }


}

CredasApiModelsPropertyRegisterAddress.RequiredProperties = ["addressLine1", "city", "country", "postcode"];

/**
 * @member {String} addressLine1
 */
CredasApiModelsPropertyRegisterAddress.prototype['addressLine1'] = undefined;

/**
 * @member {String} addressLine2
 */
CredasApiModelsPropertyRegisterAddress.prototype['addressLine2'] = undefined;

/**
 * @member {String} addressLine3
 */
CredasApiModelsPropertyRegisterAddress.prototype['addressLine3'] = undefined;

/**
 * @member {String} city
 */
CredasApiModelsPropertyRegisterAddress.prototype['city'] = undefined;

/**
 * @member {String} country
 */
CredasApiModelsPropertyRegisterAddress.prototype['country'] = undefined;

/**
 * @member {String} county
 */
CredasApiModelsPropertyRegisterAddress.prototype['county'] = undefined;

/**
 * @member {String} postcode
 */
CredasApiModelsPropertyRegisterAddress.prototype['postcode'] = undefined;






export default CredasApiModelsPropertyRegisterAddress;

