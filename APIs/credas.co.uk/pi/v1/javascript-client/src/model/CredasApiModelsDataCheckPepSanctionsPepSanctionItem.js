/**
 * Credas API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CredasApiModelsDataCheckPepSanctionsSanctionAddress from './CredasApiModelsDataCheckPepSanctionsSanctionAddress';
import CredasApiModelsDataCheckPepSanctionsSanctionDate from './CredasApiModelsDataCheckPepSanctionsSanctionDate';
import CredasApiModelsDataCheckPepSanctionsSanctionPosition from './CredasApiModelsDataCheckPepSanctionsSanctionPosition';

/**
 * The CredasApiModelsDataCheckPepSanctionsPepSanctionItem model module.
 * @module model/CredasApiModelsDataCheckPepSanctionsPepSanctionItem
 * @version v1
 */
class CredasApiModelsDataCheckPepSanctionsPepSanctionItem {
    /**
     * Constructs a new <code>CredasApiModelsDataCheckPepSanctionsPepSanctionItem</code>.
     * @alias module:model/CredasApiModelsDataCheckPepSanctionsPepSanctionItem
     */
    constructor() { 
        
        CredasApiModelsDataCheckPepSanctionsPepSanctionItem.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CredasApiModelsDataCheckPepSanctionsPepSanctionItem</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CredasApiModelsDataCheckPepSanctionsPepSanctionItem} obj Optional instance to populate.
     * @return {module:model/CredasApiModelsDataCheckPepSanctionsPepSanctionItem} The populated <code>CredasApiModelsDataCheckPepSanctionsPepSanctionItem</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CredasApiModelsDataCheckPepSanctionsPepSanctionItem();

            if (data.hasOwnProperty('addresses')) {
                obj['addresses'] = ApiClient.convertToType(data['addresses'], [CredasApiModelsDataCheckPepSanctionsSanctionAddress]);
            }
            if (data.hasOwnProperty('aliases')) {
                obj['aliases'] = ApiClient.convertToType(data['aliases'], ['String']);
            }
            if (data.hasOwnProperty('fullName')) {
                obj['fullName'] = ApiClient.convertToType(data['fullName'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('positions')) {
                obj['positions'] = ApiClient.convertToType(data['positions'], [CredasApiModelsDataCheckPepSanctionsSanctionPosition]);
            }
            if (data.hasOwnProperty('sanctionBodies')) {
                obj['sanctionBodies'] = ApiClient.convertToType(data['sanctionBodies'], ['String']);
            }
            if (data.hasOwnProperty('sanctionDates')) {
                obj['sanctionDates'] = ApiClient.convertToType(data['sanctionDates'], [CredasApiModelsDataCheckPepSanctionsSanctionDate]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CredasApiModelsDataCheckPepSanctionsPepSanctionItem</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CredasApiModelsDataCheckPepSanctionsPepSanctionItem</code>.
     */
    static validateJSON(data) {
        if (data['addresses']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['addresses'])) {
                throw new Error("Expected the field `addresses` to be an array in the JSON data but got " + data['addresses']);
            }
            // validate the optional field `addresses` (array)
            for (const item of data['addresses']) {
                CredasApiModelsDataCheckPepSanctionsSanctionAddress.validateJSON(item);
            };
        }
        // ensure the json data is an array
        if (!Array.isArray(data['aliases'])) {
            throw new Error("Expected the field `aliases` to be an array in the JSON data but got " + data['aliases']);
        }
        // ensure the json data is a string
        if (data['fullName'] && !(typeof data['fullName'] === 'string' || data['fullName'] instanceof String)) {
            throw new Error("Expected the field `fullName` to be a primitive type in the JSON string but got " + data['fullName']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        if (data['positions']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['positions'])) {
                throw new Error("Expected the field `positions` to be an array in the JSON data but got " + data['positions']);
            }
            // validate the optional field `positions` (array)
            for (const item of data['positions']) {
                CredasApiModelsDataCheckPepSanctionsSanctionPosition.validateJSON(item);
            };
        }
        // ensure the json data is an array
        if (!Array.isArray(data['sanctionBodies'])) {
            throw new Error("Expected the field `sanctionBodies` to be an array in the JSON data but got " + data['sanctionBodies']);
        }
        if (data['sanctionDates']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['sanctionDates'])) {
                throw new Error("Expected the field `sanctionDates` to be an array in the JSON data but got " + data['sanctionDates']);
            }
            // validate the optional field `sanctionDates` (array)
            for (const item of data['sanctionDates']) {
                CredasApiModelsDataCheckPepSanctionsSanctionDate.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {Array.<module:model/CredasApiModelsDataCheckPepSanctionsSanctionAddress>} addresses
 */
CredasApiModelsDataCheckPepSanctionsPepSanctionItem.prototype['addresses'] = undefined;

/**
 * @member {Array.<String>} aliases
 */
CredasApiModelsDataCheckPepSanctionsPepSanctionItem.prototype['aliases'] = undefined;

/**
 * @member {String} fullName
 */
CredasApiModelsDataCheckPepSanctionsPepSanctionItem.prototype['fullName'] = undefined;

/**
 * @member {String} id
 */
CredasApiModelsDataCheckPepSanctionsPepSanctionItem.prototype['id'] = undefined;

/**
 * @member {Array.<module:model/CredasApiModelsDataCheckPepSanctionsSanctionPosition>} positions
 */
CredasApiModelsDataCheckPepSanctionsPepSanctionItem.prototype['positions'] = undefined;

/**
 * @member {Array.<String>} sanctionBodies
 */
CredasApiModelsDataCheckPepSanctionsPepSanctionItem.prototype['sanctionBodies'] = undefined;

/**
 * @member {Array.<module:model/CredasApiModelsDataCheckPepSanctionsSanctionDate>} sanctionDates
 */
CredasApiModelsDataCheckPepSanctionsPepSanctionItem.prototype['sanctionDates'] = undefined;






export default CredasApiModelsDataCheckPepSanctionsPepSanctionItem;

