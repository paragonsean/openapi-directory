/**
 * Credas API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CredasApi);
  }
}(this, function(expect, CredasApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CredasApi.RegistrationsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('RegistrationsApi', function() {
    describe('addInstantRegistration', function() {
      it('should call addInstantRegistration successfully', function(done) {
        //uncomment below and update the code to test addInstantRegistration
        //instance.addInstantRegistration(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addRegistration', function() {
      it('should call addRegistration successfully', function(done) {
        //uncomment below and update the code to test addRegistration
        //instance.addRegistration(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiRegistrationsIdPdfExportSectionsGet', function() {
      it('should call apiRegistrationsIdPdfExportSectionsGet successfully', function(done) {
        //uncomment below and update the code to test apiRegistrationsIdPdfExportSectionsGet
        //instance.apiRegistrationsIdPdfExportSectionsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('checkSubmittedIdDocuments', function() {
      it('should call checkSubmittedIdDocuments successfully', function(done) {
        //uncomment below and update the code to test checkSubmittedIdDocuments
        //instance.checkSubmittedIdDocuments(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getRegistrationPdfExport', function() {
      it('should call getRegistrationPdfExport successfully', function(done) {
        //uncomment below and update the code to test getRegistrationPdfExport
        //instance.getRegistrationPdfExport(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getRegistrationSearch', function() {
      it('should call getRegistrationSearch successfully', function(done) {
        //uncomment below and update the code to test getRegistrationSearch
        //instance.getRegistrationSearch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getRegistrationSettings', function() {
      it('should call getRegistrationSettings successfully', function(done) {
        //uncomment below and update the code to test getRegistrationSettings
        //instance.getRegistrationSettings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getRegistrationSummariesByReferenceId', function() {
      it('should call getRegistrationSummariesByReferenceId successfully', function(done) {
        //uncomment below and update the code to test getRegistrationSummariesByReferenceId
        //instance.getRegistrationSummariesByReferenceId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getRegistrationSummary', function() {
      it('should call getRegistrationSummary successfully', function(done) {
        //uncomment below and update the code to test getRegistrationSummary
        //instance.getRegistrationSummary(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getRegistrationSummaryByRegCode', function() {
      it('should call getRegistrationSummaryByRegCode successfully', function(done) {
        //uncomment below and update the code to test getRegistrationSummaryByRegCode
        //instance.getRegistrationSummaryByRegCode(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getRegistrationSupportedIdDocuments', function() {
      it('should call getRegistrationSupportedIdDocuments successfully', function(done) {
        //uncomment below and update the code to test getRegistrationSupportedIdDocuments
        //instance.getRegistrationSupportedIdDocuments(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getShareCodePdfExport', function() {
      it('should call getShareCodePdfExport successfully', function(done) {
        //uncomment below and update the code to test getShareCodePdfExport
        //instance.getShareCodePdfExport(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('overrideCheckStatus', function() {
      it('should call overrideCheckStatus successfully', function(done) {
        //uncomment below and update the code to test overrideCheckStatus
        //instance.overrideCheckStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('resendInvitation', function() {
      it('should call resendInvitation successfully', function(done) {
        //uncomment below and update the code to test resendInvitation
        //instance.resendInvitation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateContactDetails', function() {
      it('should call updateContactDetails successfully', function(done) {
        //uncomment below and update the code to test updateContactDetails
        //instance.updateContactDetails(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateRegistrationSettings', function() {
      it('should call updateRegistrationSettings successfully', function(done) {
        //uncomment below and update the code to test updateRegistrationSettings
        //instance.updateRegistrationSettings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateRegistrationStatus', function() {
      it('should call updateRegistrationStatus successfully', function(done) {
        //uncomment below and update the code to test updateRegistrationStatus
        //instance.updateRegistrationStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
