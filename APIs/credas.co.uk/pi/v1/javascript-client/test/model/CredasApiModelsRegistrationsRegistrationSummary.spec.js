/**
 * Credas API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CredasApi);
  }
}(this, function(expect, CredasApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CredasApi.CredasApiModelsRegistrationsRegistrationSummary();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CredasApiModelsRegistrationsRegistrationSummary', function() {
    it('should create an instance of CredasApiModelsRegistrationsRegistrationSummary', function() {
      // uncomment below and update the code to test CredasApiModelsRegistrationsRegistrationSummary
      //var instance = new CredasApi.CredasApiModelsRegistrationsRegistrationSummary();
      //expect(instance).to.be.a(CredasApi.CredasApiModelsRegistrationsRegistrationSummary);
    });

    it('should have the property comments (base name: "Comments")', function() {
      // uncomment below and update the code to test the property comments
      //var instance = new CredasApi.CredasApiModelsRegistrationsRegistrationSummary();
      //expect(instance).to.be();
    });

    it('should have the property createdByAgencyUserEmail (base name: "CreatedByAgencyUserEmail")', function() {
      // uncomment below and update the code to test the property createdByAgencyUserEmail
      //var instance = new CredasApi.CredasApiModelsRegistrationsRegistrationSummary();
      //expect(instance).to.be();
    });

    it('should have the property dITFDate (base name: "DITFDate")', function() {
      // uncomment below and update the code to test the property dITFDate
      //var instance = new CredasApi.CredasApiModelsRegistrationsRegistrationSummary();
      //expect(instance).to.be();
    });

    it('should have the property dITFStatus (base name: "DITFStatus")', function() {
      // uncomment below and update the code to test the property dITFStatus
      //var instance = new CredasApi.CredasApiModelsRegistrationsRegistrationSummary();
      //expect(instance).to.be();
    });

    it('should have the property isExpired (base name: "IsExpired")', function() {
      // uncomment below and update the code to test the property isExpired
      //var instance = new CredasApi.CredasApiModelsRegistrationsRegistrationSummary();
      //expect(instance).to.be();
    });

    it('should have the property verifiedInAppDate (base name: "VerifiedInAppDate")', function() {
      // uncomment below and update the code to test the property verifiedInAppDate
      //var instance = new CredasApi.CredasApiModelsRegistrationsRegistrationSummary();
      //expect(instance).to.be();
    });

    it('should have the property bankAccountChecks (base name: "bankAccountChecks")', function() {
      // uncomment below and update the code to test the property bankAccountChecks
      //var instance = new CredasApi.CredasApiModelsRegistrationsRegistrationSummary();
      //expect(instance).to.be();
    });

    it('should have the property createdByAgencyUserId (base name: "createdByAgencyUserId")', function() {
      // uncomment below and update the code to test the property createdByAgencyUserId
      //var instance = new CredasApi.CredasApiModelsRegistrationsRegistrationSummary();
      //expect(instance).to.be();
    });

    it('should have the property creditStatusCheck (base name: "creditStatusCheck")', function() {
      // uncomment below and update the code to test the property creditStatusCheck
      //var instance = new CredasApi.CredasApiModelsRegistrationsRegistrationSummary();
      //expect(instance).to.be();
    });

    it('should have the property customTermsAccepted (base name: "customTermsAccepted")', function() {
      // uncomment below and update the code to test the property customTermsAccepted
      //var instance = new CredasApi.CredasApiModelsRegistrationsRegistrationSummary();
      //expect(instance).to.be();
    });

    it('should have the property customTermsAcceptedDateTime (base name: "customTermsAcceptedDateTime")', function() {
      // uncomment below and update the code to test the property customTermsAcceptedDateTime
      //var instance = new CredasApi.CredasApiModelsRegistrationsRegistrationSummary();
      //expect(instance).to.be();
    });

    it('should have the property customTermsAcceptedVersion (base name: "customTermsAcceptedVersion")', function() {
      // uncomment below and update the code to test the property customTermsAcceptedVersion
      //var instance = new CredasApi.CredasApiModelsRegistrationsRegistrationSummary();
      //expect(instance).to.be();
    });

    it('should have the property dataCheckResult (base name: "dataCheckResult")', function() {
      // uncomment below and update the code to test the property dataCheckResult
      //var instance = new CredasApi.CredasApiModelsRegistrationsRegistrationSummary();
      //expect(instance).to.be();
    });

    it('should have the property dataCheckSources (base name: "dataCheckSources")', function() {
      // uncomment below and update the code to test the property dataCheckSources
      //var instance = new CredasApi.CredasApiModelsRegistrationsRegistrationSummary();
      //expect(instance).to.be();
    });

    it('should have the property dataChecksPerformed (base name: "dataChecksPerformed")', function() {
      // uncomment below and update the code to test the property dataChecksPerformed
      //var instance = new CredasApi.CredasApiModelsRegistrationsRegistrationSummary();
      //expect(instance).to.be();
    });

    it('should have the property dateCompleted (base name: "dateCompleted")', function() {
      // uncomment below and update the code to test the property dateCompleted
      //var instance = new CredasApi.CredasApiModelsRegistrationsRegistrationSummary();
      //expect(instance).to.be();
    });

    it('should have the property dateCreated (base name: "dateCreated")', function() {
      // uncomment below and update the code to test the property dateCreated
      //var instance = new CredasApi.CredasApiModelsRegistrationsRegistrationSummary();
      //expect(instance).to.be();
    });

    it('should have the property email (base name: "email")', function() {
      // uncomment below and update the code to test the property email
      //var instance = new CredasApi.CredasApiModelsRegistrationsRegistrationSummary();
      //expect(instance).to.be();
    });

    it('should have the property forename (base name: "forename")', function() {
      // uncomment below and update the code to test the property forename
      //var instance = new CredasApi.CredasApiModelsRegistrationsRegistrationSummary();
      //expect(instance).to.be();
    });

    it('should have the property hasLivenessPerformed (base name: "hasLivenessPerformed")', function() {
      // uncomment below and update the code to test the property hasLivenessPerformed
      //var instance = new CredasApi.CredasApiModelsRegistrationsRegistrationSummary();
      //expect(instance).to.be();
    });

    it('should have the property hasSelfie (base name: "hasSelfie")', function() {
      // uncomment below and update the code to test the property hasSelfie
      //var instance = new CredasApi.CredasApiModelsRegistrationsRegistrationSummary();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new CredasApi.CredasApiModelsRegistrationsRegistrationSummary();
      //expect(instance).to.be();
    });

    it('should have the property idDocuments (base name: "idDocuments")', function() {
      // uncomment below and update the code to test the property idDocuments
      //var instance = new CredasApi.CredasApiModelsRegistrationsRegistrationSummary();
      //expect(instance).to.be();
    });

    it('should have the property idVerification (base name: "idVerification")', function() {
      // uncomment below and update the code to test the property idVerification
      //var instance = new CredasApi.CredasApiModelsRegistrationsRegistrationSummary();
      //expect(instance).to.be();
    });

    it('should have the property isAgentLed (base name: "isAgentLed")', function() {
      // uncomment below and update the code to test the property isAgentLed
      //var instance = new CredasApi.CredasApiModelsRegistrationsRegistrationSummary();
      //expect(instance).to.be();
    });

    it('should have the property livenessMethod (base name: "livenessMethod")', function() {
      // uncomment below and update the code to test the property livenessMethod
      //var instance = new CredasApi.CredasApiModelsRegistrationsRegistrationSummary();
      //expect(instance).to.be();
    });

    it('should have the property livenessStatus (base name: "livenessStatus")', function() {
      // uncomment below and update the code to test the property livenessStatus
      //var instance = new CredasApi.CredasApiModelsRegistrationsRegistrationSummary();
      //expect(instance).to.be();
    });

    it('should have the property livenessVerified (base name: "livenessVerified")', function() {
      // uncomment below and update the code to test the property livenessVerified
      //var instance = new CredasApi.CredasApiModelsRegistrationsRegistrationSummary();
      //expect(instance).to.be();
    });

    it('should have the property middleName (base name: "middleName")', function() {
      // uncomment below and update the code to test the property middleName
      //var instance = new CredasApi.CredasApiModelsRegistrationsRegistrationSummary();
      //expect(instance).to.be();
    });

    it('should have the property personalDetails (base name: "personalDetails")', function() {
      // uncomment below and update the code to test the property personalDetails
      //var instance = new CredasApi.CredasApiModelsRegistrationsRegistrationSummary();
      //expect(instance).to.be();
    });

    it('should have the property phoneNumber (base name: "phoneNumber")', function() {
      // uncomment below and update the code to test the property phoneNumber
      //var instance = new CredasApi.CredasApiModelsRegistrationsRegistrationSummary();
      //expect(instance).to.be();
    });

    it('should have the property proofOfOwnershipCheck (base name: "proofOfOwnershipCheck")', function() {
      // uncomment below and update the code to test the property proofOfOwnershipCheck
      //var instance = new CredasApi.CredasApiModelsRegistrationsRegistrationSummary();
      //expect(instance).to.be();
    });

    it('should have the property referenceId (base name: "referenceId")', function() {
      // uncomment below and update the code to test the property referenceId
      //var instance = new CredasApi.CredasApiModelsRegistrationsRegistrationSummary();
      //expect(instance).to.be();
    });

    it('should have the property regCode (base name: "regCode")', function() {
      // uncomment below and update the code to test the property regCode
      //var instance = new CredasApi.CredasApiModelsRegistrationsRegistrationSummary();
      //expect(instance).to.be();
    });

    it('should have the property regTypeId (base name: "regTypeId")', function() {
      // uncomment below and update the code to test the property regTypeId
      //var instance = new CredasApi.CredasApiModelsRegistrationsRegistrationSummary();
      //expect(instance).to.be();
    });

    it('should have the property rightToRentCheck (base name: "rightToRentCheck")', function() {
      // uncomment below and update the code to test the property rightToRentCheck
      //var instance = new CredasApi.CredasApiModelsRegistrationsRegistrationSummary();
      //expect(instance).to.be();
    });

    it('should have the property rightToWorkCheck (base name: "rightToWorkCheck")', function() {
      // uncomment below and update the code to test the property rightToWorkCheck
      //var instance = new CredasApi.CredasApiModelsRegistrationsRegistrationSummary();
      //expect(instance).to.be();
    });

    it('should have the property rightToWorkDocumentsProvided (base name: "rightToWorkDocumentsProvided")', function() {
      // uncomment below and update the code to test the property rightToWorkDocumentsProvided
      //var instance = new CredasApi.CredasApiModelsRegistrationsRegistrationSummary();
      //expect(instance).to.be();
    });

    it('should have the property safeHarbourVerifiedDate (base name: "safeHarbourVerifiedDate")', function() {
      // uncomment below and update the code to test the property safeHarbourVerifiedDate
      //var instance = new CredasApi.CredasApiModelsRegistrationsRegistrationSummary();
      //expect(instance).to.be();
    });

    it('should have the property safeHarbourVerifiedStatus (base name: "safeHarbourVerifiedStatus")', function() {
      // uncomment below and update the code to test the property safeHarbourVerifiedStatus
      //var instance = new CredasApi.CredasApiModelsRegistrationsRegistrationSummary();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new CredasApi.CredasApiModelsRegistrationsRegistrationSummary();
      //expect(instance).to.be();
    });

    it('should have the property surname (base name: "surname")', function() {
      // uncomment below and update the code to test the property surname
      //var instance = new CredasApi.CredasApiModelsRegistrationsRegistrationSummary();
      //expect(instance).to.be();
    });

  });

}));
