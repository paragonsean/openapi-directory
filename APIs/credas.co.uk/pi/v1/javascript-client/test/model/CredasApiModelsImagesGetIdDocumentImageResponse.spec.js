/**
 * Credas API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CredasApi);
  }
}(this, function(expect, CredasApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CredasApi.CredasApiModelsImagesGetIdDocumentImageResponse();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CredasApiModelsImagesGetIdDocumentImageResponse', function() {
    it('should create an instance of CredasApiModelsImagesGetIdDocumentImageResponse', function() {
      // uncomment below and update the code to test CredasApiModelsImagesGetIdDocumentImageResponse
      //var instance = new CredasApi.CredasApiModelsImagesGetIdDocumentImageResponse();
      //expect(instance).to.be.a(CredasApi.CredasApiModelsImagesGetIdDocumentImageResponse);
    });

    it('should have the property addressCity (base name: "addressCity")', function() {
      // uncomment below and update the code to test the property addressCity
      //var instance = new CredasApi.CredasApiModelsImagesGetIdDocumentImageResponse();
      //expect(instance).to.be();
    });

    it('should have the property addressFull (base name: "addressFull")', function() {
      // uncomment below and update the code to test the property addressFull
      //var instance = new CredasApi.CredasApiModelsImagesGetIdDocumentImageResponse();
      //expect(instance).to.be();
    });

    it('should have the property addressPostcode (base name: "addressPostcode")', function() {
      // uncomment below and update the code to test the property addressPostcode
      //var instance = new CredasApi.CredasApiModelsImagesGetIdDocumentImageResponse();
      //expect(instance).to.be();
    });

    it('should have the property country (base name: "country")', function() {
      // uncomment below and update the code to test the property country
      //var instance = new CredasApi.CredasApiModelsImagesGetIdDocumentImageResponse();
      //expect(instance).to.be();
    });

    it('should have the property countryCode (base name: "countryCode")', function() {
      // uncomment below and update the code to test the property countryCode
      //var instance = new CredasApi.CredasApiModelsImagesGetIdDocumentImageResponse();
      //expect(instance).to.be();
    });

    it('should have the property dateCreated (base name: "dateCreated")', function() {
      // uncomment below and update the code to test the property dateCreated
      //var instance = new CredasApi.CredasApiModelsImagesGetIdDocumentImageResponse();
      //expect(instance).to.be();
    });

    it('should have the property dateOfBirth (base name: "dateOfBirth")', function() {
      // uncomment below and update the code to test the property dateOfBirth
      //var instance = new CredasApi.CredasApiModelsImagesGetIdDocumentImageResponse();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new CredasApi.CredasApiModelsImagesGetIdDocumentImageResponse();
      //expect(instance).to.be();
    });

    it('should have the property documentAnalysisResult (base name: "documentAnalysisResult")', function() {
      // uncomment below and update the code to test the property documentAnalysisResult
      //var instance = new CredasApi.CredasApiModelsImagesGetIdDocumentImageResponse();
      //expect(instance).to.be();
    });

    it('should have the property documentNumber (base name: "documentNumber")', function() {
      // uncomment below and update the code to test the property documentNumber
      //var instance = new CredasApi.CredasApiModelsImagesGetIdDocumentImageResponse();
      //expect(instance).to.be();
    });

    it('should have the property documentSide (base name: "documentSide")', function() {
      // uncomment below and update the code to test the property documentSide
      //var instance = new CredasApi.CredasApiModelsImagesGetIdDocumentImageResponse();
      //expect(instance).to.be();
    });

    it('should have the property expiryDate (base name: "expiryDate")', function() {
      // uncomment below and update the code to test the property expiryDate
      //var instance = new CredasApi.CredasApiModelsImagesGetIdDocumentImageResponse();
      //expect(instance).to.be();
    });

    it('should have the property facialMatch (base name: "facialMatch")', function() {
      // uncomment below and update the code to test the property facialMatch
      //var instance = new CredasApi.CredasApiModelsImagesGetIdDocumentImageResponse();
      //expect(instance).to.be();
    });

    it('should have the property forename (base name: "forename")', function() {
      // uncomment below and update the code to test the property forename
      //var instance = new CredasApi.CredasApiModelsImagesGetIdDocumentImageResponse();
      //expect(instance).to.be();
    });

    it('should have the property fullName (base name: "fullName")', function() {
      // uncomment below and update the code to test the property fullName
      //var instance = new CredasApi.CredasApiModelsImagesGetIdDocumentImageResponse();
      //expect(instance).to.be();
    });

    it('should have the property hiResUrl (base name: "hiResUrl")', function() {
      // uncomment below and update the code to test the property hiResUrl
      //var instance = new CredasApi.CredasApiModelsImagesGetIdDocumentImageResponse();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new CredasApi.CredasApiModelsImagesGetIdDocumentImageResponse();
      //expect(instance).to.be();
    });

    it('should have the property isUnderReview (base name: "isUnderReview")', function() {
      // uncomment below and update the code to test the property isUnderReview
      //var instance = new CredasApi.CredasApiModelsImagesGetIdDocumentImageResponse();
      //expect(instance).to.be();
    });

    it('should have the property manuallyVerified (base name: "manuallyVerified")', function() {
      // uncomment below and update the code to test the property manuallyVerified
      //var instance = new CredasApi.CredasApiModelsImagesGetIdDocumentImageResponse();
      //expect(instance).to.be();
    });

    it('should have the property middleName (base name: "middleName")', function() {
      // uncomment below and update the code to test the property middleName
      //var instance = new CredasApi.CredasApiModelsImagesGetIdDocumentImageResponse();
      //expect(instance).to.be();
    });

    it('should have the property mrz1 (base name: "mrz1")', function() {
      // uncomment below and update the code to test the property mrz1
      //var instance = new CredasApi.CredasApiModelsImagesGetIdDocumentImageResponse();
      //expect(instance).to.be();
    });

    it('should have the property mrz2 (base name: "mrz2")', function() {
      // uncomment below and update the code to test the property mrz2
      //var instance = new CredasApi.CredasApiModelsImagesGetIdDocumentImageResponse();
      //expect(instance).to.be();
    });

    it('should have the property mrz3 (base name: "mrz3")', function() {
      // uncomment below and update the code to test the property mrz3
      //var instance = new CredasApi.CredasApiModelsImagesGetIdDocumentImageResponse();
      //expect(instance).to.be();
    });

    it('should have the property nameCheck (base name: "nameCheck")', function() {
      // uncomment below and update the code to test the property nameCheck
      //var instance = new CredasApi.CredasApiModelsImagesGetIdDocumentImageResponse();
      //expect(instance).to.be();
    });

    it('should have the property nameCheckMethod (base name: "nameCheckMethod")', function() {
      // uncomment below and update the code to test the property nameCheckMethod
      //var instance = new CredasApi.CredasApiModelsImagesGetIdDocumentImageResponse();
      //expect(instance).to.be();
    });

    it('should have the property nfcCheck (base name: "nfcCheck")', function() {
      // uncomment below and update the code to test the property nfcCheck
      //var instance = new CredasApi.CredasApiModelsImagesGetIdDocumentImageResponse();
      //expect(instance).to.be();
    });

    it('should have the property nfcFacialUrl (base name: "nfcFacialUrl")', function() {
      // uncomment below and update the code to test the property nfcFacialUrl
      //var instance = new CredasApi.CredasApiModelsImagesGetIdDocumentImageResponse();
      //expect(instance).to.be();
    });

    it('should have the property nfcReadStatus (base name: "nfcReadStatus")', function() {
      // uncomment below and update the code to test the property nfcReadStatus
      //var instance = new CredasApi.CredasApiModelsImagesGetIdDocumentImageResponse();
      //expect(instance).to.be();
    });

    it('should have the property primaryScanId (base name: "primaryScanId")', function() {
      // uncomment below and update the code to test the property primaryScanId
      //var instance = new CredasApi.CredasApiModelsImagesGetIdDocumentImageResponse();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new CredasApi.CredasApiModelsImagesGetIdDocumentImageResponse();
      //expect(instance).to.be();
    });

    it('should have the property surname (base name: "surname")', function() {
      // uncomment below and update the code to test the property surname
      //var instance = new CredasApi.CredasApiModelsImagesGetIdDocumentImageResponse();
      //expect(instance).to.be();
    });

    it('should have the property url (base name: "url")', function() {
      // uncomment below and update the code to test the property url
      //var instance = new CredasApi.CredasApiModelsImagesGetIdDocumentImageResponse();
      //expect(instance).to.be();
    });

  });

}));
