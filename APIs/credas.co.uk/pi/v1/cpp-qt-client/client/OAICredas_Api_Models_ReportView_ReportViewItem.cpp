/**
 * Credas API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICredas_Api_Models_ReportView_ReportViewItem.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICredas_Api_Models_ReportView_ReportViewItem::OAICredas_Api_Models_ReportView_ReportViewItem(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICredas_Api_Models_ReportView_ReportViewItem::OAICredas_Api_Models_ReportView_ReportViewItem() {
    this->initializeModel();
}

OAICredas_Api_Models_ReportView_ReportViewItem::~OAICredas_Api_Models_ReportView_ReportViewItem() {}

void OAICredas_Api_Models_ReportView_ReportViewItem::initializeModel() {

    m_forename_isSet = false;
    m_forename_isValid = false;

    m_surname_isSet = false;
    m_surname_isValid = false;

    m_url_isSet = false;
    m_url_isValid = false;

    m_valid_until_isSet = false;
    m_valid_until_isValid = false;
}

void OAICredas_Api_Models_ReportView_ReportViewItem::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICredas_Api_Models_ReportView_ReportViewItem::fromJsonObject(QJsonObject json) {

    m_forename_isValid = ::OpenAPI::fromJsonValue(m_forename, json[QString("forename")]);
    m_forename_isSet = !json[QString("forename")].isNull() && m_forename_isValid;

    m_surname_isValid = ::OpenAPI::fromJsonValue(m_surname, json[QString("surname")]);
    m_surname_isSet = !json[QString("surname")].isNull() && m_surname_isValid;

    m_url_isValid = ::OpenAPI::fromJsonValue(m_url, json[QString("url")]);
    m_url_isSet = !json[QString("url")].isNull() && m_url_isValid;

    m_valid_until_isValid = ::OpenAPI::fromJsonValue(m_valid_until, json[QString("validUntil")]);
    m_valid_until_isSet = !json[QString("validUntil")].isNull() && m_valid_until_isValid;
}

QString OAICredas_Api_Models_ReportView_ReportViewItem::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICredas_Api_Models_ReportView_ReportViewItem::asJsonObject() const {
    QJsonObject obj;
    if (m_forename_isSet) {
        obj.insert(QString("forename"), ::OpenAPI::toJsonValue(m_forename));
    }
    if (m_surname_isSet) {
        obj.insert(QString("surname"), ::OpenAPI::toJsonValue(m_surname));
    }
    if (m_url_isSet) {
        obj.insert(QString("url"), ::OpenAPI::toJsonValue(m_url));
    }
    if (m_valid_until_isSet) {
        obj.insert(QString("validUntil"), ::OpenAPI::toJsonValue(m_valid_until));
    }
    return obj;
}

QString OAICredas_Api_Models_ReportView_ReportViewItem::getForename() const {
    return m_forename;
}
void OAICredas_Api_Models_ReportView_ReportViewItem::setForename(const QString &forename) {
    m_forename = forename;
    m_forename_isSet = true;
}

bool OAICredas_Api_Models_ReportView_ReportViewItem::is_forename_Set() const{
    return m_forename_isSet;
}

bool OAICredas_Api_Models_ReportView_ReportViewItem::is_forename_Valid() const{
    return m_forename_isValid;
}

QString OAICredas_Api_Models_ReportView_ReportViewItem::getSurname() const {
    return m_surname;
}
void OAICredas_Api_Models_ReportView_ReportViewItem::setSurname(const QString &surname) {
    m_surname = surname;
    m_surname_isSet = true;
}

bool OAICredas_Api_Models_ReportView_ReportViewItem::is_surname_Set() const{
    return m_surname_isSet;
}

bool OAICredas_Api_Models_ReportView_ReportViewItem::is_surname_Valid() const{
    return m_surname_isValid;
}

QString OAICredas_Api_Models_ReportView_ReportViewItem::getUrl() const {
    return m_url;
}
void OAICredas_Api_Models_ReportView_ReportViewItem::setUrl(const QString &url) {
    m_url = url;
    m_url_isSet = true;
}

bool OAICredas_Api_Models_ReportView_ReportViewItem::is_url_Set() const{
    return m_url_isSet;
}

bool OAICredas_Api_Models_ReportView_ReportViewItem::is_url_Valid() const{
    return m_url_isValid;
}

QDateTime OAICredas_Api_Models_ReportView_ReportViewItem::getValidUntil() const {
    return m_valid_until;
}
void OAICredas_Api_Models_ReportView_ReportViewItem::setValidUntil(const QDateTime &valid_until) {
    m_valid_until = valid_until;
    m_valid_until_isSet = true;
}

bool OAICredas_Api_Models_ReportView_ReportViewItem::is_valid_until_Set() const{
    return m_valid_until_isSet;
}

bool OAICredas_Api_Models_ReportView_ReportViewItem::is_valid_until_Valid() const{
    return m_valid_until_isValid;
}

bool OAICredas_Api_Models_ReportView_ReportViewItem::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_forename_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_surname_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_valid_until_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICredas_Api_Models_ReportView_ReportViewItem::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
