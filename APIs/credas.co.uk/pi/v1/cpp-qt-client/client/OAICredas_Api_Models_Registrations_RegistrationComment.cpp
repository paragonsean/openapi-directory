/**
 * Credas API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICredas_Api_Models_Registrations_RegistrationComment.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICredas_Api_Models_Registrations_RegistrationComment::OAICredas_Api_Models_Registrations_RegistrationComment(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICredas_Api_Models_Registrations_RegistrationComment::OAICredas_Api_Models_Registrations_RegistrationComment() {
    this->initializeModel();
}

OAICredas_Api_Models_Registrations_RegistrationComment::~OAICredas_Api_Models_Registrations_RegistrationComment() {}

void OAICredas_Api_Models_Registrations_RegistrationComment::initializeModel() {

    m_check_type_isSet = false;
    m_check_type_isValid = false;

    m_comment_isSet = false;
    m_comment_isValid = false;

    m_date_created_isSet = false;
    m_date_created_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAICredas_Api_Models_Registrations_RegistrationComment::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICredas_Api_Models_Registrations_RegistrationComment::fromJsonObject(QJsonObject json) {

    m_check_type_isValid = ::OpenAPI::fromJsonValue(m_check_type, json[QString("checkType")]);
    m_check_type_isSet = !json[QString("checkType")].isNull() && m_check_type_isValid;

    m_comment_isValid = ::OpenAPI::fromJsonValue(m_comment, json[QString("comment")]);
    m_comment_isSet = !json[QString("comment")].isNull() && m_comment_isValid;

    m_date_created_isValid = ::OpenAPI::fromJsonValue(m_date_created, json[QString("dateCreated")]);
    m_date_created_isSet = !json[QString("dateCreated")].isNull() && m_date_created_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAICredas_Api_Models_Registrations_RegistrationComment::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICredas_Api_Models_Registrations_RegistrationComment::asJsonObject() const {
    QJsonObject obj;
    if (m_check_type_isSet) {
        obj.insert(QString("checkType"), ::OpenAPI::toJsonValue(m_check_type));
    }
    if (m_comment_isSet) {
        obj.insert(QString("comment"), ::OpenAPI::toJsonValue(m_comment));
    }
    if (m_date_created_isSet) {
        obj.insert(QString("dateCreated"), ::OpenAPI::toJsonValue(m_date_created));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

qint32 OAICredas_Api_Models_Registrations_RegistrationComment::getCheckType() const {
    return m_check_type;
}
void OAICredas_Api_Models_Registrations_RegistrationComment::setCheckType(const qint32 &check_type) {
    m_check_type = check_type;
    m_check_type_isSet = true;
}

bool OAICredas_Api_Models_Registrations_RegistrationComment::is_check_type_Set() const{
    return m_check_type_isSet;
}

bool OAICredas_Api_Models_Registrations_RegistrationComment::is_check_type_Valid() const{
    return m_check_type_isValid;
}

QString OAICredas_Api_Models_Registrations_RegistrationComment::getComment() const {
    return m_comment;
}
void OAICredas_Api_Models_Registrations_RegistrationComment::setComment(const QString &comment) {
    m_comment = comment;
    m_comment_isSet = true;
}

bool OAICredas_Api_Models_Registrations_RegistrationComment::is_comment_Set() const{
    return m_comment_isSet;
}

bool OAICredas_Api_Models_Registrations_RegistrationComment::is_comment_Valid() const{
    return m_comment_isValid;
}

QDateTime OAICredas_Api_Models_Registrations_RegistrationComment::getDateCreated() const {
    return m_date_created;
}
void OAICredas_Api_Models_Registrations_RegistrationComment::setDateCreated(const QDateTime &date_created) {
    m_date_created = date_created;
    m_date_created_isSet = true;
}

bool OAICredas_Api_Models_Registrations_RegistrationComment::is_date_created_Set() const{
    return m_date_created_isSet;
}

bool OAICredas_Api_Models_Registrations_RegistrationComment::is_date_created_Valid() const{
    return m_date_created_isValid;
}

QString OAICredas_Api_Models_Registrations_RegistrationComment::getId() const {
    return m_id;
}
void OAICredas_Api_Models_Registrations_RegistrationComment::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAICredas_Api_Models_Registrations_RegistrationComment::is_id_Set() const{
    return m_id_isSet;
}

bool OAICredas_Api_Models_Registrations_RegistrationComment::is_id_Valid() const{
    return m_id_isValid;
}

QString OAICredas_Api_Models_Registrations_RegistrationComment::getName() const {
    return m_name;
}
void OAICredas_Api_Models_Registrations_RegistrationComment::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAICredas_Api_Models_Registrations_RegistrationComment::is_name_Set() const{
    return m_name_isSet;
}

bool OAICredas_Api_Models_Registrations_RegistrationComment::is_name_Valid() const{
    return m_name_isValid;
}

qint32 OAICredas_Api_Models_Registrations_RegistrationComment::getType() const {
    return m_type;
}
void OAICredas_Api_Models_Registrations_RegistrationComment::setType(const qint32 &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAICredas_Api_Models_Registrations_RegistrationComment::is_type_Set() const{
    return m_type_isSet;
}

bool OAICredas_Api_Models_Registrations_RegistrationComment::is_type_Valid() const{
    return m_type_isValid;
}

bool OAICredas_Api_Models_Registrations_RegistrationComment::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_check_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_comment_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_created_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICredas_Api_Models_Registrations_RegistrationComment::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
