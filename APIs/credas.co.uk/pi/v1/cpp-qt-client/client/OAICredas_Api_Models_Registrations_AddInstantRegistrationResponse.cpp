/**
 * Credas API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICredas_Api_Models_Registrations_AddInstantRegistrationResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICredas_Api_Models_Registrations_AddInstantRegistrationResponse::OAICredas_Api_Models_Registrations_AddInstantRegistrationResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICredas_Api_Models_Registrations_AddInstantRegistrationResponse::OAICredas_Api_Models_Registrations_AddInstantRegistrationResponse() {
    this->initializeModel();
}

OAICredas_Api_Models_Registrations_AddInstantRegistrationResponse::~OAICredas_Api_Models_Registrations_AddInstantRegistrationResponse() {}

void OAICredas_Api_Models_Registrations_AddInstantRegistrationResponse::initializeModel() {

    m_document_status_isSet = false;
    m_document_status_isValid = false;

    m_document_type_isSet = false;
    m_document_type_isValid = false;

    m_facial_match_isSet = false;
    m_facial_match_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_reg_code_isSet = false;
    m_reg_code_isValid = false;
}

void OAICredas_Api_Models_Registrations_AddInstantRegistrationResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICredas_Api_Models_Registrations_AddInstantRegistrationResponse::fromJsonObject(QJsonObject json) {

    m_document_status_isValid = ::OpenAPI::fromJsonValue(m_document_status, json[QString("documentStatus")]);
    m_document_status_isSet = !json[QString("documentStatus")].isNull() && m_document_status_isValid;

    m_document_type_isValid = ::OpenAPI::fromJsonValue(m_document_type, json[QString("documentType")]);
    m_document_type_isSet = !json[QString("documentType")].isNull() && m_document_type_isValid;

    m_facial_match_isValid = ::OpenAPI::fromJsonValue(m_facial_match, json[QString("facialMatch")]);
    m_facial_match_isSet = !json[QString("facialMatch")].isNull() && m_facial_match_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_reg_code_isValid = ::OpenAPI::fromJsonValue(m_reg_code, json[QString("regCode")]);
    m_reg_code_isSet = !json[QString("regCode")].isNull() && m_reg_code_isValid;
}

QString OAICredas_Api_Models_Registrations_AddInstantRegistrationResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICredas_Api_Models_Registrations_AddInstantRegistrationResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_document_status_isSet) {
        obj.insert(QString("documentStatus"), ::OpenAPI::toJsonValue(m_document_status));
    }
    if (m_document_type_isSet) {
        obj.insert(QString("documentType"), ::OpenAPI::toJsonValue(m_document_type));
    }
    if (m_facial_match_isSet) {
        obj.insert(QString("facialMatch"), ::OpenAPI::toJsonValue(m_facial_match));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_reg_code_isSet) {
        obj.insert(QString("regCode"), ::OpenAPI::toJsonValue(m_reg_code));
    }
    return obj;
}

qint32 OAICredas_Api_Models_Registrations_AddInstantRegistrationResponse::getDocumentStatus() const {
    return m_document_status;
}
void OAICredas_Api_Models_Registrations_AddInstantRegistrationResponse::setDocumentStatus(const qint32 &document_status) {
    m_document_status = document_status;
    m_document_status_isSet = true;
}

bool OAICredas_Api_Models_Registrations_AddInstantRegistrationResponse::is_document_status_Set() const{
    return m_document_status_isSet;
}

bool OAICredas_Api_Models_Registrations_AddInstantRegistrationResponse::is_document_status_Valid() const{
    return m_document_status_isValid;
}

qint32 OAICredas_Api_Models_Registrations_AddInstantRegistrationResponse::getDocumentType() const {
    return m_document_type;
}
void OAICredas_Api_Models_Registrations_AddInstantRegistrationResponse::setDocumentType(const qint32 &document_type) {
    m_document_type = document_type;
    m_document_type_isSet = true;
}

bool OAICredas_Api_Models_Registrations_AddInstantRegistrationResponse::is_document_type_Set() const{
    return m_document_type_isSet;
}

bool OAICredas_Api_Models_Registrations_AddInstantRegistrationResponse::is_document_type_Valid() const{
    return m_document_type_isValid;
}

bool OAICredas_Api_Models_Registrations_AddInstantRegistrationResponse::isFacialMatch() const {
    return m_facial_match;
}
void OAICredas_Api_Models_Registrations_AddInstantRegistrationResponse::setFacialMatch(const bool &facial_match) {
    m_facial_match = facial_match;
    m_facial_match_isSet = true;
}

bool OAICredas_Api_Models_Registrations_AddInstantRegistrationResponse::is_facial_match_Set() const{
    return m_facial_match_isSet;
}

bool OAICredas_Api_Models_Registrations_AddInstantRegistrationResponse::is_facial_match_Valid() const{
    return m_facial_match_isValid;
}

QString OAICredas_Api_Models_Registrations_AddInstantRegistrationResponse::getId() const {
    return m_id;
}
void OAICredas_Api_Models_Registrations_AddInstantRegistrationResponse::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAICredas_Api_Models_Registrations_AddInstantRegistrationResponse::is_id_Set() const{
    return m_id_isSet;
}

bool OAICredas_Api_Models_Registrations_AddInstantRegistrationResponse::is_id_Valid() const{
    return m_id_isValid;
}

QString OAICredas_Api_Models_Registrations_AddInstantRegistrationResponse::getRegCode() const {
    return m_reg_code;
}
void OAICredas_Api_Models_Registrations_AddInstantRegistrationResponse::setRegCode(const QString &reg_code) {
    m_reg_code = reg_code;
    m_reg_code_isSet = true;
}

bool OAICredas_Api_Models_Registrations_AddInstantRegistrationResponse::is_reg_code_Set() const{
    return m_reg_code_isSet;
}

bool OAICredas_Api_Models_Registrations_AddInstantRegistrationResponse::is_reg_code_Valid() const{
    return m_reg_code_isValid;
}

bool OAICredas_Api_Models_Registrations_AddInstantRegistrationResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_document_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_document_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_facial_match_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_reg_code_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICredas_Api_Models_Registrations_AddInstantRegistrationResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_document_status_isValid && m_document_type_isValid && m_facial_match_isValid && m_id_isValid && m_reg_code_isValid && true;
}

} // namespace OpenAPI
