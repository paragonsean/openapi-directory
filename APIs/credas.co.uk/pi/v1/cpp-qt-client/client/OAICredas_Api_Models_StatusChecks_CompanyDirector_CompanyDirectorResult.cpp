/**
 * Credas API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICredas_Api_Models_StatusChecks_CompanyDirector_CompanyDirectorResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICredas_Api_Models_StatusChecks_CompanyDirector_CompanyDirectorResult::OAICredas_Api_Models_StatusChecks_CompanyDirector_CompanyDirectorResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICredas_Api_Models_StatusChecks_CompanyDirector_CompanyDirectorResult::OAICredas_Api_Models_StatusChecks_CompanyDirector_CompanyDirectorResult() {
    this->initializeModel();
}

OAICredas_Api_Models_StatusChecks_CompanyDirector_CompanyDirectorResult::~OAICredas_Api_Models_StatusChecks_CompanyDirector_CompanyDirectorResult() {}

void OAICredas_Api_Models_StatusChecks_CompanyDirector_CompanyDirectorResult::initializeModel() {

    m_company_appointments_isSet = false;
    m_company_appointments_isValid = false;

    m_company_name_isSet = false;
    m_company_name_isValid = false;

    m_company_reg_no_isSet = false;
    m_company_reg_no_isValid = false;

    m_date_appointed_isSet = false;
    m_date_appointed_isValid = false;

    m_match_type_isSet = false;
    m_match_type_isValid = false;

    m_match_type_text_isSet = false;
    m_match_type_text_isValid = false;

    m_registered_office_isSet = false;
    m_registered_office_isValid = false;
}

void OAICredas_Api_Models_StatusChecks_CompanyDirector_CompanyDirectorResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICredas_Api_Models_StatusChecks_CompanyDirector_CompanyDirectorResult::fromJsonObject(QJsonObject json) {

    m_company_appointments_isValid = ::OpenAPI::fromJsonValue(m_company_appointments, json[QString("companyAppointments")]);
    m_company_appointments_isSet = !json[QString("companyAppointments")].isNull() && m_company_appointments_isValid;

    m_company_name_isValid = ::OpenAPI::fromJsonValue(m_company_name, json[QString("companyName")]);
    m_company_name_isSet = !json[QString("companyName")].isNull() && m_company_name_isValid;

    m_company_reg_no_isValid = ::OpenAPI::fromJsonValue(m_company_reg_no, json[QString("companyRegNo")]);
    m_company_reg_no_isSet = !json[QString("companyRegNo")].isNull() && m_company_reg_no_isValid;

    m_date_appointed_isValid = ::OpenAPI::fromJsonValue(m_date_appointed, json[QString("dateAppointed")]);
    m_date_appointed_isSet = !json[QString("dateAppointed")].isNull() && m_date_appointed_isValid;

    m_match_type_isValid = ::OpenAPI::fromJsonValue(m_match_type, json[QString("matchType")]);
    m_match_type_isSet = !json[QString("matchType")].isNull() && m_match_type_isValid;

    m_match_type_text_isValid = ::OpenAPI::fromJsonValue(m_match_type_text, json[QString("matchTypeText")]);
    m_match_type_text_isSet = !json[QString("matchTypeText")].isNull() && m_match_type_text_isValid;

    m_registered_office_isValid = ::OpenAPI::fromJsonValue(m_registered_office, json[QString("registeredOffice")]);
    m_registered_office_isSet = !json[QString("registeredOffice")].isNull() && m_registered_office_isValid;
}

QString OAICredas_Api_Models_StatusChecks_CompanyDirector_CompanyDirectorResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICredas_Api_Models_StatusChecks_CompanyDirector_CompanyDirectorResult::asJsonObject() const {
    QJsonObject obj;
    if (m_company_appointments.size() > 0) {
        obj.insert(QString("companyAppointments"), ::OpenAPI::toJsonValue(m_company_appointments));
    }
    if (m_company_name_isSet) {
        obj.insert(QString("companyName"), ::OpenAPI::toJsonValue(m_company_name));
    }
    if (m_company_reg_no_isSet) {
        obj.insert(QString("companyRegNo"), ::OpenAPI::toJsonValue(m_company_reg_no));
    }
    if (m_date_appointed_isSet) {
        obj.insert(QString("dateAppointed"), ::OpenAPI::toJsonValue(m_date_appointed));
    }
    if (m_match_type_isSet) {
        obj.insert(QString("matchType"), ::OpenAPI::toJsonValue(m_match_type));
    }
    if (m_match_type_text_isSet) {
        obj.insert(QString("matchTypeText"), ::OpenAPI::toJsonValue(m_match_type_text));
    }
    if (m_registered_office_isSet) {
        obj.insert(QString("registeredOffice"), ::OpenAPI::toJsonValue(m_registered_office));
    }
    return obj;
}

QList<OAICredas_Api_Models_StatusChecks_CompanyDirector_CompanyAppointment> OAICredas_Api_Models_StatusChecks_CompanyDirector_CompanyDirectorResult::getCompanyAppointments() const {
    return m_company_appointments;
}
void OAICredas_Api_Models_StatusChecks_CompanyDirector_CompanyDirectorResult::setCompanyAppointments(const QList<OAICredas_Api_Models_StatusChecks_CompanyDirector_CompanyAppointment> &company_appointments) {
    m_company_appointments = company_appointments;
    m_company_appointments_isSet = true;
}

bool OAICredas_Api_Models_StatusChecks_CompanyDirector_CompanyDirectorResult::is_company_appointments_Set() const{
    return m_company_appointments_isSet;
}

bool OAICredas_Api_Models_StatusChecks_CompanyDirector_CompanyDirectorResult::is_company_appointments_Valid() const{
    return m_company_appointments_isValid;
}

QString OAICredas_Api_Models_StatusChecks_CompanyDirector_CompanyDirectorResult::getCompanyName() const {
    return m_company_name;
}
void OAICredas_Api_Models_StatusChecks_CompanyDirector_CompanyDirectorResult::setCompanyName(const QString &company_name) {
    m_company_name = company_name;
    m_company_name_isSet = true;
}

bool OAICredas_Api_Models_StatusChecks_CompanyDirector_CompanyDirectorResult::is_company_name_Set() const{
    return m_company_name_isSet;
}

bool OAICredas_Api_Models_StatusChecks_CompanyDirector_CompanyDirectorResult::is_company_name_Valid() const{
    return m_company_name_isValid;
}

QString OAICredas_Api_Models_StatusChecks_CompanyDirector_CompanyDirectorResult::getCompanyRegNo() const {
    return m_company_reg_no;
}
void OAICredas_Api_Models_StatusChecks_CompanyDirector_CompanyDirectorResult::setCompanyRegNo(const QString &company_reg_no) {
    m_company_reg_no = company_reg_no;
    m_company_reg_no_isSet = true;
}

bool OAICredas_Api_Models_StatusChecks_CompanyDirector_CompanyDirectorResult::is_company_reg_no_Set() const{
    return m_company_reg_no_isSet;
}

bool OAICredas_Api_Models_StatusChecks_CompanyDirector_CompanyDirectorResult::is_company_reg_no_Valid() const{
    return m_company_reg_no_isValid;
}

QDateTime OAICredas_Api_Models_StatusChecks_CompanyDirector_CompanyDirectorResult::getDateAppointed() const {
    return m_date_appointed;
}
void OAICredas_Api_Models_StatusChecks_CompanyDirector_CompanyDirectorResult::setDateAppointed(const QDateTime &date_appointed) {
    m_date_appointed = date_appointed;
    m_date_appointed_isSet = true;
}

bool OAICredas_Api_Models_StatusChecks_CompanyDirector_CompanyDirectorResult::is_date_appointed_Set() const{
    return m_date_appointed_isSet;
}

bool OAICredas_Api_Models_StatusChecks_CompanyDirector_CompanyDirectorResult::is_date_appointed_Valid() const{
    return m_date_appointed_isValid;
}

qint32 OAICredas_Api_Models_StatusChecks_CompanyDirector_CompanyDirectorResult::getMatchType() const {
    return m_match_type;
}
void OAICredas_Api_Models_StatusChecks_CompanyDirector_CompanyDirectorResult::setMatchType(const qint32 &match_type) {
    m_match_type = match_type;
    m_match_type_isSet = true;
}

bool OAICredas_Api_Models_StatusChecks_CompanyDirector_CompanyDirectorResult::is_match_type_Set() const{
    return m_match_type_isSet;
}

bool OAICredas_Api_Models_StatusChecks_CompanyDirector_CompanyDirectorResult::is_match_type_Valid() const{
    return m_match_type_isValid;
}

QString OAICredas_Api_Models_StatusChecks_CompanyDirector_CompanyDirectorResult::getMatchTypeText() const {
    return m_match_type_text;
}
void OAICredas_Api_Models_StatusChecks_CompanyDirector_CompanyDirectorResult::setMatchTypeText(const QString &match_type_text) {
    m_match_type_text = match_type_text;
    m_match_type_text_isSet = true;
}

bool OAICredas_Api_Models_StatusChecks_CompanyDirector_CompanyDirectorResult::is_match_type_text_Set() const{
    return m_match_type_text_isSet;
}

bool OAICredas_Api_Models_StatusChecks_CompanyDirector_CompanyDirectorResult::is_match_type_text_Valid() const{
    return m_match_type_text_isValid;
}

QString OAICredas_Api_Models_StatusChecks_CompanyDirector_CompanyDirectorResult::getRegisteredOffice() const {
    return m_registered_office;
}
void OAICredas_Api_Models_StatusChecks_CompanyDirector_CompanyDirectorResult::setRegisteredOffice(const QString &registered_office) {
    m_registered_office = registered_office;
    m_registered_office_isSet = true;
}

bool OAICredas_Api_Models_StatusChecks_CompanyDirector_CompanyDirectorResult::is_registered_office_Set() const{
    return m_registered_office_isSet;
}

bool OAICredas_Api_Models_StatusChecks_CompanyDirector_CompanyDirectorResult::is_registered_office_Valid() const{
    return m_registered_office_isValid;
}

bool OAICredas_Api_Models_StatusChecks_CompanyDirector_CompanyDirectorResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_company_appointments.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_company_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_company_reg_no_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_appointed_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_match_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_match_type_text_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_registered_office_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICredas_Api_Models_StatusChecks_CompanyDirector_CompanyDirectorResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
