/**
 * Credas API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICredas_Api_Models_PropertyRegister_Address.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICredas_Api_Models_PropertyRegister_Address::OAICredas_Api_Models_PropertyRegister_Address(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICredas_Api_Models_PropertyRegister_Address::OAICredas_Api_Models_PropertyRegister_Address() {
    this->initializeModel();
}

OAICredas_Api_Models_PropertyRegister_Address::~OAICredas_Api_Models_PropertyRegister_Address() {}

void OAICredas_Api_Models_PropertyRegister_Address::initializeModel() {

    m_address_line1_isSet = false;
    m_address_line1_isValid = false;

    m_address_line2_isSet = false;
    m_address_line2_isValid = false;

    m_address_line3_isSet = false;
    m_address_line3_isValid = false;

    m_city_isSet = false;
    m_city_isValid = false;

    m_country_isSet = false;
    m_country_isValid = false;

    m_county_isSet = false;
    m_county_isValid = false;

    m_postcode_isSet = false;
    m_postcode_isValid = false;
}

void OAICredas_Api_Models_PropertyRegister_Address::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICredas_Api_Models_PropertyRegister_Address::fromJsonObject(QJsonObject json) {

    m_address_line1_isValid = ::OpenAPI::fromJsonValue(m_address_line1, json[QString("addressLine1")]);
    m_address_line1_isSet = !json[QString("addressLine1")].isNull() && m_address_line1_isValid;

    m_address_line2_isValid = ::OpenAPI::fromJsonValue(m_address_line2, json[QString("addressLine2")]);
    m_address_line2_isSet = !json[QString("addressLine2")].isNull() && m_address_line2_isValid;

    m_address_line3_isValid = ::OpenAPI::fromJsonValue(m_address_line3, json[QString("addressLine3")]);
    m_address_line3_isSet = !json[QString("addressLine3")].isNull() && m_address_line3_isValid;

    m_city_isValid = ::OpenAPI::fromJsonValue(m_city, json[QString("city")]);
    m_city_isSet = !json[QString("city")].isNull() && m_city_isValid;

    m_country_isValid = ::OpenAPI::fromJsonValue(m_country, json[QString("country")]);
    m_country_isSet = !json[QString("country")].isNull() && m_country_isValid;

    m_county_isValid = ::OpenAPI::fromJsonValue(m_county, json[QString("county")]);
    m_county_isSet = !json[QString("county")].isNull() && m_county_isValid;

    m_postcode_isValid = ::OpenAPI::fromJsonValue(m_postcode, json[QString("postcode")]);
    m_postcode_isSet = !json[QString("postcode")].isNull() && m_postcode_isValid;
}

QString OAICredas_Api_Models_PropertyRegister_Address::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICredas_Api_Models_PropertyRegister_Address::asJsonObject() const {
    QJsonObject obj;
    if (m_address_line1_isSet) {
        obj.insert(QString("addressLine1"), ::OpenAPI::toJsonValue(m_address_line1));
    }
    if (m_address_line2_isSet) {
        obj.insert(QString("addressLine2"), ::OpenAPI::toJsonValue(m_address_line2));
    }
    if (m_address_line3_isSet) {
        obj.insert(QString("addressLine3"), ::OpenAPI::toJsonValue(m_address_line3));
    }
    if (m_city_isSet) {
        obj.insert(QString("city"), ::OpenAPI::toJsonValue(m_city));
    }
    if (m_country_isSet) {
        obj.insert(QString("country"), ::OpenAPI::toJsonValue(m_country));
    }
    if (m_county_isSet) {
        obj.insert(QString("county"), ::OpenAPI::toJsonValue(m_county));
    }
    if (m_postcode_isSet) {
        obj.insert(QString("postcode"), ::OpenAPI::toJsonValue(m_postcode));
    }
    return obj;
}

QString OAICredas_Api_Models_PropertyRegister_Address::getAddressLine1() const {
    return m_address_line1;
}
void OAICredas_Api_Models_PropertyRegister_Address::setAddressLine1(const QString &address_line1) {
    m_address_line1 = address_line1;
    m_address_line1_isSet = true;
}

bool OAICredas_Api_Models_PropertyRegister_Address::is_address_line1_Set() const{
    return m_address_line1_isSet;
}

bool OAICredas_Api_Models_PropertyRegister_Address::is_address_line1_Valid() const{
    return m_address_line1_isValid;
}

QString OAICredas_Api_Models_PropertyRegister_Address::getAddressLine2() const {
    return m_address_line2;
}
void OAICredas_Api_Models_PropertyRegister_Address::setAddressLine2(const QString &address_line2) {
    m_address_line2 = address_line2;
    m_address_line2_isSet = true;
}

bool OAICredas_Api_Models_PropertyRegister_Address::is_address_line2_Set() const{
    return m_address_line2_isSet;
}

bool OAICredas_Api_Models_PropertyRegister_Address::is_address_line2_Valid() const{
    return m_address_line2_isValid;
}

QString OAICredas_Api_Models_PropertyRegister_Address::getAddressLine3() const {
    return m_address_line3;
}
void OAICredas_Api_Models_PropertyRegister_Address::setAddressLine3(const QString &address_line3) {
    m_address_line3 = address_line3;
    m_address_line3_isSet = true;
}

bool OAICredas_Api_Models_PropertyRegister_Address::is_address_line3_Set() const{
    return m_address_line3_isSet;
}

bool OAICredas_Api_Models_PropertyRegister_Address::is_address_line3_Valid() const{
    return m_address_line3_isValid;
}

QString OAICredas_Api_Models_PropertyRegister_Address::getCity() const {
    return m_city;
}
void OAICredas_Api_Models_PropertyRegister_Address::setCity(const QString &city) {
    m_city = city;
    m_city_isSet = true;
}

bool OAICredas_Api_Models_PropertyRegister_Address::is_city_Set() const{
    return m_city_isSet;
}

bool OAICredas_Api_Models_PropertyRegister_Address::is_city_Valid() const{
    return m_city_isValid;
}

QString OAICredas_Api_Models_PropertyRegister_Address::getCountry() const {
    return m_country;
}
void OAICredas_Api_Models_PropertyRegister_Address::setCountry(const QString &country) {
    m_country = country;
    m_country_isSet = true;
}

bool OAICredas_Api_Models_PropertyRegister_Address::is_country_Set() const{
    return m_country_isSet;
}

bool OAICredas_Api_Models_PropertyRegister_Address::is_country_Valid() const{
    return m_country_isValid;
}

QString OAICredas_Api_Models_PropertyRegister_Address::getCounty() const {
    return m_county;
}
void OAICredas_Api_Models_PropertyRegister_Address::setCounty(const QString &county) {
    m_county = county;
    m_county_isSet = true;
}

bool OAICredas_Api_Models_PropertyRegister_Address::is_county_Set() const{
    return m_county_isSet;
}

bool OAICredas_Api_Models_PropertyRegister_Address::is_county_Valid() const{
    return m_county_isValid;
}

QString OAICredas_Api_Models_PropertyRegister_Address::getPostcode() const {
    return m_postcode;
}
void OAICredas_Api_Models_PropertyRegister_Address::setPostcode(const QString &postcode) {
    m_postcode = postcode;
    m_postcode_isSet = true;
}

bool OAICredas_Api_Models_PropertyRegister_Address::is_postcode_Set() const{
    return m_postcode_isSet;
}

bool OAICredas_Api_Models_PropertyRegister_Address::is_postcode_Valid() const{
    return m_postcode_isValid;
}

bool OAICredas_Api_Models_PropertyRegister_Address::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_address_line1_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_address_line2_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_address_line3_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_city_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_country_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_county_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_postcode_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICredas_Api_Models_PropertyRegister_Address::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_address_line1_isValid && m_city_isValid && m_country_isValid && m_postcode_isValid && true;
}

} // namespace OpenAPI
