/**
 * Credas API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICredas_Api_Models_Companies_CompanyDetail.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICredas_Api_Models_Companies_CompanyDetail::OAICredas_Api_Models_Companies_CompanyDetail(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICredas_Api_Models_Companies_CompanyDetail::OAICredas_Api_Models_Companies_CompanyDetail() {
    this->initializeModel();
}

OAICredas_Api_Models_Companies_CompanyDetail::~OAICredas_Api_Models_Companies_CompanyDetail() {}

void OAICredas_Api_Models_Companies_CompanyDetail::initializeModel() {

    m_address_line1_isSet = false;
    m_address_line1_isValid = false;

    m_company_name_isSet = false;
    m_company_name_isValid = false;

    m_company_number_isSet = false;
    m_company_number_isValid = false;

    m_date_of_registration_isSet = false;
    m_date_of_registration_isValid = false;

    m_duplicate_isSet = false;
    m_duplicate_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_locality_isSet = false;
    m_locality_isValid = false;

    m_post_code_isSet = false;
    m_post_code_isValid = false;

    m_region_isSet = false;
    m_region_isValid = false;

    m_significant_parent_companies_isSet = false;
    m_significant_parent_companies_isValid = false;

    m_significant_people_isSet = false;
    m_significant_people_isValid = false;
}

void OAICredas_Api_Models_Companies_CompanyDetail::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICredas_Api_Models_Companies_CompanyDetail::fromJsonObject(QJsonObject json) {

    m_address_line1_isValid = ::OpenAPI::fromJsonValue(m_address_line1, json[QString("addressLine1")]);
    m_address_line1_isSet = !json[QString("addressLine1")].isNull() && m_address_line1_isValid;

    m_company_name_isValid = ::OpenAPI::fromJsonValue(m_company_name, json[QString("companyName")]);
    m_company_name_isSet = !json[QString("companyName")].isNull() && m_company_name_isValid;

    m_company_number_isValid = ::OpenAPI::fromJsonValue(m_company_number, json[QString("companyNumber")]);
    m_company_number_isSet = !json[QString("companyNumber")].isNull() && m_company_number_isValid;

    m_date_of_registration_isValid = ::OpenAPI::fromJsonValue(m_date_of_registration, json[QString("dateOfRegistration")]);
    m_date_of_registration_isSet = !json[QString("dateOfRegistration")].isNull() && m_date_of_registration_isValid;

    m_duplicate_isValid = ::OpenAPI::fromJsonValue(m_duplicate, json[QString("duplicate")]);
    m_duplicate_isSet = !json[QString("duplicate")].isNull() && m_duplicate_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_locality_isValid = ::OpenAPI::fromJsonValue(m_locality, json[QString("locality")]);
    m_locality_isSet = !json[QString("locality")].isNull() && m_locality_isValid;

    m_post_code_isValid = ::OpenAPI::fromJsonValue(m_post_code, json[QString("postCode")]);
    m_post_code_isSet = !json[QString("postCode")].isNull() && m_post_code_isValid;

    m_region_isValid = ::OpenAPI::fromJsonValue(m_region, json[QString("region")]);
    m_region_isSet = !json[QString("region")].isNull() && m_region_isValid;

    m_significant_parent_companies_isValid = ::OpenAPI::fromJsonValue(m_significant_parent_companies, json[QString("significantParentCompanies")]);
    m_significant_parent_companies_isSet = !json[QString("significantParentCompanies")].isNull() && m_significant_parent_companies_isValid;

    m_significant_people_isValid = ::OpenAPI::fromJsonValue(m_significant_people, json[QString("significantPeople")]);
    m_significant_people_isSet = !json[QString("significantPeople")].isNull() && m_significant_people_isValid;
}

QString OAICredas_Api_Models_Companies_CompanyDetail::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICredas_Api_Models_Companies_CompanyDetail::asJsonObject() const {
    QJsonObject obj;
    if (m_address_line1_isSet) {
        obj.insert(QString("addressLine1"), ::OpenAPI::toJsonValue(m_address_line1));
    }
    if (m_company_name_isSet) {
        obj.insert(QString("companyName"), ::OpenAPI::toJsonValue(m_company_name));
    }
    if (m_company_number_isSet) {
        obj.insert(QString("companyNumber"), ::OpenAPI::toJsonValue(m_company_number));
    }
    if (m_date_of_registration_isSet) {
        obj.insert(QString("dateOfRegistration"), ::OpenAPI::toJsonValue(m_date_of_registration));
    }
    if (m_duplicate_isSet) {
        obj.insert(QString("duplicate"), ::OpenAPI::toJsonValue(m_duplicate));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_locality_isSet) {
        obj.insert(QString("locality"), ::OpenAPI::toJsonValue(m_locality));
    }
    if (m_post_code_isSet) {
        obj.insert(QString("postCode"), ::OpenAPI::toJsonValue(m_post_code));
    }
    if (m_region_isSet) {
        obj.insert(QString("region"), ::OpenAPI::toJsonValue(m_region));
    }
    if (m_significant_parent_companies.size() > 0) {
        obj.insert(QString("significantParentCompanies"), ::OpenAPI::toJsonValue(m_significant_parent_companies));
    }
    if (m_significant_people.size() > 0) {
        obj.insert(QString("significantPeople"), ::OpenAPI::toJsonValue(m_significant_people));
    }
    return obj;
}

QString OAICredas_Api_Models_Companies_CompanyDetail::getAddressLine1() const {
    return m_address_line1;
}
void OAICredas_Api_Models_Companies_CompanyDetail::setAddressLine1(const QString &address_line1) {
    m_address_line1 = address_line1;
    m_address_line1_isSet = true;
}

bool OAICredas_Api_Models_Companies_CompanyDetail::is_address_line1_Set() const{
    return m_address_line1_isSet;
}

bool OAICredas_Api_Models_Companies_CompanyDetail::is_address_line1_Valid() const{
    return m_address_line1_isValid;
}

QString OAICredas_Api_Models_Companies_CompanyDetail::getCompanyName() const {
    return m_company_name;
}
void OAICredas_Api_Models_Companies_CompanyDetail::setCompanyName(const QString &company_name) {
    m_company_name = company_name;
    m_company_name_isSet = true;
}

bool OAICredas_Api_Models_Companies_CompanyDetail::is_company_name_Set() const{
    return m_company_name_isSet;
}

bool OAICredas_Api_Models_Companies_CompanyDetail::is_company_name_Valid() const{
    return m_company_name_isValid;
}

QString OAICredas_Api_Models_Companies_CompanyDetail::getCompanyNumber() const {
    return m_company_number;
}
void OAICredas_Api_Models_Companies_CompanyDetail::setCompanyNumber(const QString &company_number) {
    m_company_number = company_number;
    m_company_number_isSet = true;
}

bool OAICredas_Api_Models_Companies_CompanyDetail::is_company_number_Set() const{
    return m_company_number_isSet;
}

bool OAICredas_Api_Models_Companies_CompanyDetail::is_company_number_Valid() const{
    return m_company_number_isValid;
}

QDateTime OAICredas_Api_Models_Companies_CompanyDetail::getDateOfRegistration() const {
    return m_date_of_registration;
}
void OAICredas_Api_Models_Companies_CompanyDetail::setDateOfRegistration(const QDateTime &date_of_registration) {
    m_date_of_registration = date_of_registration;
    m_date_of_registration_isSet = true;
}

bool OAICredas_Api_Models_Companies_CompanyDetail::is_date_of_registration_Set() const{
    return m_date_of_registration_isSet;
}

bool OAICredas_Api_Models_Companies_CompanyDetail::is_date_of_registration_Valid() const{
    return m_date_of_registration_isValid;
}

bool OAICredas_Api_Models_Companies_CompanyDetail::isDuplicate() const {
    return m_duplicate;
}
void OAICredas_Api_Models_Companies_CompanyDetail::setDuplicate(const bool &duplicate) {
    m_duplicate = duplicate;
    m_duplicate_isSet = true;
}

bool OAICredas_Api_Models_Companies_CompanyDetail::is_duplicate_Set() const{
    return m_duplicate_isSet;
}

bool OAICredas_Api_Models_Companies_CompanyDetail::is_duplicate_Valid() const{
    return m_duplicate_isValid;
}

QString OAICredas_Api_Models_Companies_CompanyDetail::getId() const {
    return m_id;
}
void OAICredas_Api_Models_Companies_CompanyDetail::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAICredas_Api_Models_Companies_CompanyDetail::is_id_Set() const{
    return m_id_isSet;
}

bool OAICredas_Api_Models_Companies_CompanyDetail::is_id_Valid() const{
    return m_id_isValid;
}

QString OAICredas_Api_Models_Companies_CompanyDetail::getLocality() const {
    return m_locality;
}
void OAICredas_Api_Models_Companies_CompanyDetail::setLocality(const QString &locality) {
    m_locality = locality;
    m_locality_isSet = true;
}

bool OAICredas_Api_Models_Companies_CompanyDetail::is_locality_Set() const{
    return m_locality_isSet;
}

bool OAICredas_Api_Models_Companies_CompanyDetail::is_locality_Valid() const{
    return m_locality_isValid;
}

QString OAICredas_Api_Models_Companies_CompanyDetail::getPostCode() const {
    return m_post_code;
}
void OAICredas_Api_Models_Companies_CompanyDetail::setPostCode(const QString &post_code) {
    m_post_code = post_code;
    m_post_code_isSet = true;
}

bool OAICredas_Api_Models_Companies_CompanyDetail::is_post_code_Set() const{
    return m_post_code_isSet;
}

bool OAICredas_Api_Models_Companies_CompanyDetail::is_post_code_Valid() const{
    return m_post_code_isValid;
}

QString OAICredas_Api_Models_Companies_CompanyDetail::getRegion() const {
    return m_region;
}
void OAICredas_Api_Models_Companies_CompanyDetail::setRegion(const QString &region) {
    m_region = region;
    m_region_isSet = true;
}

bool OAICredas_Api_Models_Companies_CompanyDetail::is_region_Set() const{
    return m_region_isSet;
}

bool OAICredas_Api_Models_Companies_CompanyDetail::is_region_Valid() const{
    return m_region_isValid;
}

QList<OAICredas_Api_Models_Companies_CompanyDetail> OAICredas_Api_Models_Companies_CompanyDetail::getSignificantParentCompanies() const {
    return m_significant_parent_companies;
}
void OAICredas_Api_Models_Companies_CompanyDetail::setSignificantParentCompanies(const QList<OAICredas_Api_Models_Companies_CompanyDetail> &significant_parent_companies) {
    m_significant_parent_companies = significant_parent_companies;
    m_significant_parent_companies_isSet = true;
}

bool OAICredas_Api_Models_Companies_CompanyDetail::is_significant_parent_companies_Set() const{
    return m_significant_parent_companies_isSet;
}

bool OAICredas_Api_Models_Companies_CompanyDetail::is_significant_parent_companies_Valid() const{
    return m_significant_parent_companies_isValid;
}

QList<OAICredas_Api_Models_Companies_SignificantPerson> OAICredas_Api_Models_Companies_CompanyDetail::getSignificantPeople() const {
    return m_significant_people;
}
void OAICredas_Api_Models_Companies_CompanyDetail::setSignificantPeople(const QList<OAICredas_Api_Models_Companies_SignificantPerson> &significant_people) {
    m_significant_people = significant_people;
    m_significant_people_isSet = true;
}

bool OAICredas_Api_Models_Companies_CompanyDetail::is_significant_people_Set() const{
    return m_significant_people_isSet;
}

bool OAICredas_Api_Models_Companies_CompanyDetail::is_significant_people_Valid() const{
    return m_significant_people_isValid;
}

bool OAICredas_Api_Models_Companies_CompanyDetail::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_address_line1_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_company_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_company_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_of_registration_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_duplicate_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_locality_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_post_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_region_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_significant_parent_companies.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_significant_people.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICredas_Api_Models_Companies_CompanyDetail::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
