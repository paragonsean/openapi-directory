/**
 * Credas API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICredas_Api_Models_PropertyRegister_PropertyRegisterCheckResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICredas_Api_Models_PropertyRegister_PropertyRegisterCheckResponse::OAICredas_Api_Models_PropertyRegister_PropertyRegisterCheckResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICredas_Api_Models_PropertyRegister_PropertyRegisterCheckResponse::OAICredas_Api_Models_PropertyRegister_PropertyRegisterCheckResponse() {
    this->initializeModel();
}

OAICredas_Api_Models_PropertyRegister_PropertyRegisterCheckResponse::~OAICredas_Api_Models_PropertyRegister_PropertyRegisterCheckResponse() {}

void OAICredas_Api_Models_PropertyRegister_PropertyRegisterCheckResponse::initializeModel() {

    m_check_status_isSet = false;
    m_check_status_isValid = false;

    m_has_been_overridden_isSet = false;
    m_has_been_overridden_isValid = false;

    m_match_result_isSet = false;
    m_match_result_isValid = false;

    m_match_result_text_isSet = false;
    m_match_result_text_isValid = false;

    m_property_ownership_isSet = false;
    m_property_ownership_isValid = false;

    m_property_ownership_text_isSet = false;
    m_property_ownership_text_isValid = false;

    m_title_number_isSet = false;
    m_title_number_isValid = false;
}

void OAICredas_Api_Models_PropertyRegister_PropertyRegisterCheckResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICredas_Api_Models_PropertyRegister_PropertyRegisterCheckResponse::fromJsonObject(QJsonObject json) {

    m_check_status_isValid = ::OpenAPI::fromJsonValue(m_check_status, json[QString("checkStatus")]);
    m_check_status_isSet = !json[QString("checkStatus")].isNull() && m_check_status_isValid;

    m_has_been_overridden_isValid = ::OpenAPI::fromJsonValue(m_has_been_overridden, json[QString("hasBeenOverridden")]);
    m_has_been_overridden_isSet = !json[QString("hasBeenOverridden")].isNull() && m_has_been_overridden_isValid;

    m_match_result_isValid = ::OpenAPI::fromJsonValue(m_match_result, json[QString("matchResult")]);
    m_match_result_isSet = !json[QString("matchResult")].isNull() && m_match_result_isValid;

    m_match_result_text_isValid = ::OpenAPI::fromJsonValue(m_match_result_text, json[QString("matchResultText")]);
    m_match_result_text_isSet = !json[QString("matchResultText")].isNull() && m_match_result_text_isValid;

    m_property_ownership_isValid = ::OpenAPI::fromJsonValue(m_property_ownership, json[QString("propertyOwnership")]);
    m_property_ownership_isSet = !json[QString("propertyOwnership")].isNull() && m_property_ownership_isValid;

    m_property_ownership_text_isValid = ::OpenAPI::fromJsonValue(m_property_ownership_text, json[QString("propertyOwnershipText")]);
    m_property_ownership_text_isSet = !json[QString("propertyOwnershipText")].isNull() && m_property_ownership_text_isValid;

    m_title_number_isValid = ::OpenAPI::fromJsonValue(m_title_number, json[QString("titleNumber")]);
    m_title_number_isSet = !json[QString("titleNumber")].isNull() && m_title_number_isValid;
}

QString OAICredas_Api_Models_PropertyRegister_PropertyRegisterCheckResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICredas_Api_Models_PropertyRegister_PropertyRegisterCheckResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_check_status_isSet) {
        obj.insert(QString("checkStatus"), ::OpenAPI::toJsonValue(m_check_status));
    }
    if (m_has_been_overridden_isSet) {
        obj.insert(QString("hasBeenOverridden"), ::OpenAPI::toJsonValue(m_has_been_overridden));
    }
    if (m_match_result_isSet) {
        obj.insert(QString("matchResult"), ::OpenAPI::toJsonValue(m_match_result));
    }
    if (m_match_result_text_isSet) {
        obj.insert(QString("matchResultText"), ::OpenAPI::toJsonValue(m_match_result_text));
    }
    if (m_property_ownership_isSet) {
        obj.insert(QString("propertyOwnership"), ::OpenAPI::toJsonValue(m_property_ownership));
    }
    if (m_property_ownership_text_isSet) {
        obj.insert(QString("propertyOwnershipText"), ::OpenAPI::toJsonValue(m_property_ownership_text));
    }
    if (m_title_number_isSet) {
        obj.insert(QString("titleNumber"), ::OpenAPI::toJsonValue(m_title_number));
    }
    return obj;
}

qint32 OAICredas_Api_Models_PropertyRegister_PropertyRegisterCheckResponse::getCheckStatus() const {
    return m_check_status;
}
void OAICredas_Api_Models_PropertyRegister_PropertyRegisterCheckResponse::setCheckStatus(const qint32 &check_status) {
    m_check_status = check_status;
    m_check_status_isSet = true;
}

bool OAICredas_Api_Models_PropertyRegister_PropertyRegisterCheckResponse::is_check_status_Set() const{
    return m_check_status_isSet;
}

bool OAICredas_Api_Models_PropertyRegister_PropertyRegisterCheckResponse::is_check_status_Valid() const{
    return m_check_status_isValid;
}

bool OAICredas_Api_Models_PropertyRegister_PropertyRegisterCheckResponse::isHasBeenOverridden() const {
    return m_has_been_overridden;
}
void OAICredas_Api_Models_PropertyRegister_PropertyRegisterCheckResponse::setHasBeenOverridden(const bool &has_been_overridden) {
    m_has_been_overridden = has_been_overridden;
    m_has_been_overridden_isSet = true;
}

bool OAICredas_Api_Models_PropertyRegister_PropertyRegisterCheckResponse::is_has_been_overridden_Set() const{
    return m_has_been_overridden_isSet;
}

bool OAICredas_Api_Models_PropertyRegister_PropertyRegisterCheckResponse::is_has_been_overridden_Valid() const{
    return m_has_been_overridden_isValid;
}

qint32 OAICredas_Api_Models_PropertyRegister_PropertyRegisterCheckResponse::getMatchResult() const {
    return m_match_result;
}
void OAICredas_Api_Models_PropertyRegister_PropertyRegisterCheckResponse::setMatchResult(const qint32 &match_result) {
    m_match_result = match_result;
    m_match_result_isSet = true;
}

bool OAICredas_Api_Models_PropertyRegister_PropertyRegisterCheckResponse::is_match_result_Set() const{
    return m_match_result_isSet;
}

bool OAICredas_Api_Models_PropertyRegister_PropertyRegisterCheckResponse::is_match_result_Valid() const{
    return m_match_result_isValid;
}

QString OAICredas_Api_Models_PropertyRegister_PropertyRegisterCheckResponse::getMatchResultText() const {
    return m_match_result_text;
}
void OAICredas_Api_Models_PropertyRegister_PropertyRegisterCheckResponse::setMatchResultText(const QString &match_result_text) {
    m_match_result_text = match_result_text;
    m_match_result_text_isSet = true;
}

bool OAICredas_Api_Models_PropertyRegister_PropertyRegisterCheckResponse::is_match_result_text_Set() const{
    return m_match_result_text_isSet;
}

bool OAICredas_Api_Models_PropertyRegister_PropertyRegisterCheckResponse::is_match_result_text_Valid() const{
    return m_match_result_text_isValid;
}

qint32 OAICredas_Api_Models_PropertyRegister_PropertyRegisterCheckResponse::getPropertyOwnership() const {
    return m_property_ownership;
}
void OAICredas_Api_Models_PropertyRegister_PropertyRegisterCheckResponse::setPropertyOwnership(const qint32 &property_ownership) {
    m_property_ownership = property_ownership;
    m_property_ownership_isSet = true;
}

bool OAICredas_Api_Models_PropertyRegister_PropertyRegisterCheckResponse::is_property_ownership_Set() const{
    return m_property_ownership_isSet;
}

bool OAICredas_Api_Models_PropertyRegister_PropertyRegisterCheckResponse::is_property_ownership_Valid() const{
    return m_property_ownership_isValid;
}

QString OAICredas_Api_Models_PropertyRegister_PropertyRegisterCheckResponse::getPropertyOwnershipText() const {
    return m_property_ownership_text;
}
void OAICredas_Api_Models_PropertyRegister_PropertyRegisterCheckResponse::setPropertyOwnershipText(const QString &property_ownership_text) {
    m_property_ownership_text = property_ownership_text;
    m_property_ownership_text_isSet = true;
}

bool OAICredas_Api_Models_PropertyRegister_PropertyRegisterCheckResponse::is_property_ownership_text_Set() const{
    return m_property_ownership_text_isSet;
}

bool OAICredas_Api_Models_PropertyRegister_PropertyRegisterCheckResponse::is_property_ownership_text_Valid() const{
    return m_property_ownership_text_isValid;
}

QString OAICredas_Api_Models_PropertyRegister_PropertyRegisterCheckResponse::getTitleNumber() const {
    return m_title_number;
}
void OAICredas_Api_Models_PropertyRegister_PropertyRegisterCheckResponse::setTitleNumber(const QString &title_number) {
    m_title_number = title_number;
    m_title_number_isSet = true;
}

bool OAICredas_Api_Models_PropertyRegister_PropertyRegisterCheckResponse::is_title_number_Set() const{
    return m_title_number_isSet;
}

bool OAICredas_Api_Models_PropertyRegister_PropertyRegisterCheckResponse::is_title_number_Valid() const{
    return m_title_number_isValid;
}

bool OAICredas_Api_Models_PropertyRegister_PropertyRegisterCheckResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_check_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_has_been_overridden_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_match_result_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_match_result_text_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_property_ownership_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_property_ownership_text_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_title_number_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICredas_Api_Models_PropertyRegister_PropertyRegisterCheckResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
