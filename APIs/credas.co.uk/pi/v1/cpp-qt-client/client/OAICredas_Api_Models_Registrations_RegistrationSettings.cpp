/**
 * Credas API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICredas_Api_Models_Registrations_RegistrationSettings.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICredas_Api_Models_Registrations_RegistrationSettings::OAICredas_Api_Models_Registrations_RegistrationSettings(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICredas_Api_Models_Registrations_RegistrationSettings::OAICredas_Api_Models_Registrations_RegistrationSettings() {
    this->initializeModel();
}

OAICredas_Api_Models_Registrations_RegistrationSettings::~OAICredas_Api_Models_Registrations_RegistrationSettings() {}

void OAICredas_Api_Models_Registrations_RegistrationSettings::initializeModel() {

    m_capture_personal_details_isSet = false;
    m_capture_personal_details_isValid = false;

    m_name_match_routine_isSet = false;
    m_name_match_routine_isValid = false;

    m_required_checks_isSet = false;
    m_required_checks_isValid = false;

    m_skip_email_step_isSet = false;
    m_skip_email_step_isValid = false;
}

void OAICredas_Api_Models_Registrations_RegistrationSettings::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICredas_Api_Models_Registrations_RegistrationSettings::fromJsonObject(QJsonObject json) {

    m_capture_personal_details_isValid = ::OpenAPI::fromJsonValue(m_capture_personal_details, json[QString("capturePersonalDetails")]);
    m_capture_personal_details_isSet = !json[QString("capturePersonalDetails")].isNull() && m_capture_personal_details_isValid;

    m_name_match_routine_isValid = ::OpenAPI::fromJsonValue(m_name_match_routine, json[QString("nameMatchRoutine")]);
    m_name_match_routine_isSet = !json[QString("nameMatchRoutine")].isNull() && m_name_match_routine_isValid;

    m_required_checks_isValid = ::OpenAPI::fromJsonValue(m_required_checks, json[QString("requiredChecks")]);
    m_required_checks_isSet = !json[QString("requiredChecks")].isNull() && m_required_checks_isValid;

    m_skip_email_step_isValid = ::OpenAPI::fromJsonValue(m_skip_email_step, json[QString("skipEmailStep")]);
    m_skip_email_step_isSet = !json[QString("skipEmailStep")].isNull() && m_skip_email_step_isValid;
}

QString OAICredas_Api_Models_Registrations_RegistrationSettings::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICredas_Api_Models_Registrations_RegistrationSettings::asJsonObject() const {
    QJsonObject obj;
    if (m_capture_personal_details_isSet) {
        obj.insert(QString("capturePersonalDetails"), ::OpenAPI::toJsonValue(m_capture_personal_details));
    }
    if (m_name_match_routine_isSet) {
        obj.insert(QString("nameMatchRoutine"), ::OpenAPI::toJsonValue(m_name_match_routine));
    }
    if (m_required_checks.size() > 0) {
        obj.insert(QString("requiredChecks"), ::OpenAPI::toJsonValue(m_required_checks));
    }
    if (m_skip_email_step_isSet) {
        obj.insert(QString("skipEmailStep"), ::OpenAPI::toJsonValue(m_skip_email_step));
    }
    return obj;
}

bool OAICredas_Api_Models_Registrations_RegistrationSettings::isCapturePersonalDetails() const {
    return m_capture_personal_details;
}
void OAICredas_Api_Models_Registrations_RegistrationSettings::setCapturePersonalDetails(const bool &capture_personal_details) {
    m_capture_personal_details = capture_personal_details;
    m_capture_personal_details_isSet = true;
}

bool OAICredas_Api_Models_Registrations_RegistrationSettings::is_capture_personal_details_Set() const{
    return m_capture_personal_details_isSet;
}

bool OAICredas_Api_Models_Registrations_RegistrationSettings::is_capture_personal_details_Valid() const{
    return m_capture_personal_details_isValid;
}

qint32 OAICredas_Api_Models_Registrations_RegistrationSettings::getNameMatchRoutine() const {
    return m_name_match_routine;
}
void OAICredas_Api_Models_Registrations_RegistrationSettings::setNameMatchRoutine(const qint32 &name_match_routine) {
    m_name_match_routine = name_match_routine;
    m_name_match_routine_isSet = true;
}

bool OAICredas_Api_Models_Registrations_RegistrationSettings::is_name_match_routine_Set() const{
    return m_name_match_routine_isSet;
}

bool OAICredas_Api_Models_Registrations_RegistrationSettings::is_name_match_routine_Valid() const{
    return m_name_match_routine_isValid;
}

QList<qint32> OAICredas_Api_Models_Registrations_RegistrationSettings::getRequiredChecks() const {
    return m_required_checks;
}
void OAICredas_Api_Models_Registrations_RegistrationSettings::setRequiredChecks(const QList<qint32> &required_checks) {
    m_required_checks = required_checks;
    m_required_checks_isSet = true;
}

bool OAICredas_Api_Models_Registrations_RegistrationSettings::is_required_checks_Set() const{
    return m_required_checks_isSet;
}

bool OAICredas_Api_Models_Registrations_RegistrationSettings::is_required_checks_Valid() const{
    return m_required_checks_isValid;
}

bool OAICredas_Api_Models_Registrations_RegistrationSettings::isSkipEmailStep() const {
    return m_skip_email_step;
}
void OAICredas_Api_Models_Registrations_RegistrationSettings::setSkipEmailStep(const bool &skip_email_step) {
    m_skip_email_step = skip_email_step;
    m_skip_email_step_isSet = true;
}

bool OAICredas_Api_Models_Registrations_RegistrationSettings::is_skip_email_step_Set() const{
    return m_skip_email_step_isSet;
}

bool OAICredas_Api_Models_Registrations_RegistrationSettings::is_skip_email_step_Valid() const{
    return m_skip_email_step_isValid;
}

bool OAICredas_Api_Models_Registrations_RegistrationSettings::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_capture_personal_details_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_match_routine_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_required_checks.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_skip_email_step_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICredas_Api_Models_Registrations_RegistrationSettings::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
