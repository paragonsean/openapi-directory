/**
 * Credas API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICredas_Api_Models_Images_AddSelfieImageRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICredas_Api_Models_Images_AddSelfieImageRequest::OAICredas_Api_Models_Images_AddSelfieImageRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICredas_Api_Models_Images_AddSelfieImageRequest::OAICredas_Api_Models_Images_AddSelfieImageRequest() {
    this->initializeModel();
}

OAICredas_Api_Models_Images_AddSelfieImageRequest::~OAICredas_Api_Models_Images_AddSelfieImageRequest() {}

void OAICredas_Api_Models_Images_AddSelfieImageRequest::initializeModel() {

    m_image_data_isSet = false;
    m_image_data_isValid = false;

    m_registration_id_isSet = false;
    m_registration_id_isValid = false;
}

void OAICredas_Api_Models_Images_AddSelfieImageRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICredas_Api_Models_Images_AddSelfieImageRequest::fromJsonObject(QJsonObject json) {

    m_image_data_isValid = ::OpenAPI::fromJsonValue(m_image_data, json[QString("imageData")]);
    m_image_data_isSet = !json[QString("imageData")].isNull() && m_image_data_isValid;

    m_registration_id_isValid = ::OpenAPI::fromJsonValue(m_registration_id, json[QString("registrationId")]);
    m_registration_id_isSet = !json[QString("registrationId")].isNull() && m_registration_id_isValid;
}

QString OAICredas_Api_Models_Images_AddSelfieImageRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICredas_Api_Models_Images_AddSelfieImageRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_image_data_isSet) {
        obj.insert(QString("imageData"), ::OpenAPI::toJsonValue(m_image_data));
    }
    if (m_registration_id_isSet) {
        obj.insert(QString("registrationId"), ::OpenAPI::toJsonValue(m_registration_id));
    }
    return obj;
}

QString OAICredas_Api_Models_Images_AddSelfieImageRequest::getImageData() const {
    return m_image_data;
}
void OAICredas_Api_Models_Images_AddSelfieImageRequest::setImageData(const QString &image_data) {
    m_image_data = image_data;
    m_image_data_isSet = true;
}

bool OAICredas_Api_Models_Images_AddSelfieImageRequest::is_image_data_Set() const{
    return m_image_data_isSet;
}

bool OAICredas_Api_Models_Images_AddSelfieImageRequest::is_image_data_Valid() const{
    return m_image_data_isValid;
}

QString OAICredas_Api_Models_Images_AddSelfieImageRequest::getRegistrationId() const {
    return m_registration_id;
}
void OAICredas_Api_Models_Images_AddSelfieImageRequest::setRegistrationId(const QString &registration_id) {
    m_registration_id = registration_id;
    m_registration_id_isSet = true;
}

bool OAICredas_Api_Models_Images_AddSelfieImageRequest::is_registration_id_Set() const{
    return m_registration_id_isSet;
}

bool OAICredas_Api_Models_Images_AddSelfieImageRequest::is_registration_id_Valid() const{
    return m_registration_id_isValid;
}

bool OAICredas_Api_Models_Images_AddSelfieImageRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_image_data_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_registration_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICredas_Api_Models_Images_AddSelfieImageRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_image_data_isValid && m_registration_id_isValid && true;
}

} // namespace OpenAPI
