/**
 * Credas API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICredas_Api_Models_Registrations_PersonalDetails.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICredas_Api_Models_Registrations_PersonalDetails::OAICredas_Api_Models_Registrations_PersonalDetails(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICredas_Api_Models_Registrations_PersonalDetails::OAICredas_Api_Models_Registrations_PersonalDetails() {
    this->initializeModel();
}

OAICredas_Api_Models_Registrations_PersonalDetails::~OAICredas_Api_Models_Registrations_PersonalDetails() {}

void OAICredas_Api_Models_Registrations_PersonalDetails::initializeModel() {

    m_address_isSet = false;
    m_address_isValid = false;

    m_date_of_birth_isSet = false;
    m_date_of_birth_isValid = false;

    m_forename_isSet = false;
    m_forename_isValid = false;

    m_surname_isSet = false;
    m_surname_isValid = false;
}

void OAICredas_Api_Models_Registrations_PersonalDetails::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICredas_Api_Models_Registrations_PersonalDetails::fromJsonObject(QJsonObject json) {

    m_address_isValid = ::OpenAPI::fromJsonValue(m_address, json[QString("address")]);
    m_address_isSet = !json[QString("address")].isNull() && m_address_isValid;

    m_date_of_birth_isValid = ::OpenAPI::fromJsonValue(m_date_of_birth, json[QString("dateOfBirth")]);
    m_date_of_birth_isSet = !json[QString("dateOfBirth")].isNull() && m_date_of_birth_isValid;

    m_forename_isValid = ::OpenAPI::fromJsonValue(m_forename, json[QString("forename")]);
    m_forename_isSet = !json[QString("forename")].isNull() && m_forename_isValid;

    m_surname_isValid = ::OpenAPI::fromJsonValue(m_surname, json[QString("surname")]);
    m_surname_isSet = !json[QString("surname")].isNull() && m_surname_isValid;
}

QString OAICredas_Api_Models_Registrations_PersonalDetails::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICredas_Api_Models_Registrations_PersonalDetails::asJsonObject() const {
    QJsonObject obj;
    if (m_address.isSet()) {
        obj.insert(QString("address"), ::OpenAPI::toJsonValue(m_address));
    }
    if (m_date_of_birth_isSet) {
        obj.insert(QString("dateOfBirth"), ::OpenAPI::toJsonValue(m_date_of_birth));
    }
    if (m_forename_isSet) {
        obj.insert(QString("forename"), ::OpenAPI::toJsonValue(m_forename));
    }
    if (m_surname_isSet) {
        obj.insert(QString("surname"), ::OpenAPI::toJsonValue(m_surname));
    }
    return obj;
}

OAICredas_Api_Models_DataCheck_Address OAICredas_Api_Models_Registrations_PersonalDetails::getAddress() const {
    return m_address;
}
void OAICredas_Api_Models_Registrations_PersonalDetails::setAddress(const OAICredas_Api_Models_DataCheck_Address &address) {
    m_address = address;
    m_address_isSet = true;
}

bool OAICredas_Api_Models_Registrations_PersonalDetails::is_address_Set() const{
    return m_address_isSet;
}

bool OAICredas_Api_Models_Registrations_PersonalDetails::is_address_Valid() const{
    return m_address_isValid;
}

QDateTime OAICredas_Api_Models_Registrations_PersonalDetails::getDateOfBirth() const {
    return m_date_of_birth;
}
void OAICredas_Api_Models_Registrations_PersonalDetails::setDateOfBirth(const QDateTime &date_of_birth) {
    m_date_of_birth = date_of_birth;
    m_date_of_birth_isSet = true;
}

bool OAICredas_Api_Models_Registrations_PersonalDetails::is_date_of_birth_Set() const{
    return m_date_of_birth_isSet;
}

bool OAICredas_Api_Models_Registrations_PersonalDetails::is_date_of_birth_Valid() const{
    return m_date_of_birth_isValid;
}

QString OAICredas_Api_Models_Registrations_PersonalDetails::getForename() const {
    return m_forename;
}
void OAICredas_Api_Models_Registrations_PersonalDetails::setForename(const QString &forename) {
    m_forename = forename;
    m_forename_isSet = true;
}

bool OAICredas_Api_Models_Registrations_PersonalDetails::is_forename_Set() const{
    return m_forename_isSet;
}

bool OAICredas_Api_Models_Registrations_PersonalDetails::is_forename_Valid() const{
    return m_forename_isValid;
}

QString OAICredas_Api_Models_Registrations_PersonalDetails::getSurname() const {
    return m_surname;
}
void OAICredas_Api_Models_Registrations_PersonalDetails::setSurname(const QString &surname) {
    m_surname = surname;
    m_surname_isSet = true;
}

bool OAICredas_Api_Models_Registrations_PersonalDetails::is_surname_Set() const{
    return m_surname_isSet;
}

bool OAICredas_Api_Models_Registrations_PersonalDetails::is_surname_Valid() const{
    return m_surname_isValid;
}

bool OAICredas_Api_Models_Registrations_PersonalDetails::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_address.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_of_birth_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_forename_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_surname_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICredas_Api_Models_Registrations_PersonalDetails::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
