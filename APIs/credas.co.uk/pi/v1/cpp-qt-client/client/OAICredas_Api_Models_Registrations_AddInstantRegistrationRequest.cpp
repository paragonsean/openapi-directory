/**
 * Credas API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICredas_Api_Models_Registrations_AddInstantRegistrationRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICredas_Api_Models_Registrations_AddInstantRegistrationRequest::OAICredas_Api_Models_Registrations_AddInstantRegistrationRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICredas_Api_Models_Registrations_AddInstantRegistrationRequest::OAICredas_Api_Models_Registrations_AddInstantRegistrationRequest() {
    this->initializeModel();
}

OAICredas_Api_Models_Registrations_AddInstantRegistrationRequest::~OAICredas_Api_Models_Registrations_AddInstantRegistrationRequest() {}

void OAICredas_Api_Models_Registrations_AddInstantRegistrationRequest::initializeModel() {

    m_document_isSet = false;
    m_document_isValid = false;

    m_document_parameters_isSet = false;
    m_document_parameters_isValid = false;

    m_document_type_isSet = false;
    m_document_type_isValid = false;

    m_forename_isSet = false;
    m_forename_isValid = false;

    m_middle_name_isSet = false;
    m_middle_name_isValid = false;

    m_parameters_isSet = false;
    m_parameters_isValid = false;

    m_reference_id_isSet = false;
    m_reference_id_isValid = false;

    m_reg_type_id_isSet = false;
    m_reg_type_id_isValid = false;

    m_selfie_isSet = false;
    m_selfie_isValid = false;

    m_significant_person_id_isSet = false;
    m_significant_person_id_isValid = false;

    m_surname_isSet = false;
    m_surname_isValid = false;
}

void OAICredas_Api_Models_Registrations_AddInstantRegistrationRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICredas_Api_Models_Registrations_AddInstantRegistrationRequest::fromJsonObject(QJsonObject json) {

    m_document_isValid = ::OpenAPI::fromJsonValue(m_document, json[QString("document")]);
    m_document_isSet = !json[QString("document")].isNull() && m_document_isValid;

    m_document_parameters_isValid = ::OpenAPI::fromJsonValue(m_document_parameters, json[QString("documentParameters")]);
    m_document_parameters_isSet = !json[QString("documentParameters")].isNull() && m_document_parameters_isValid;

    m_document_type_isValid = ::OpenAPI::fromJsonValue(m_document_type, json[QString("documentType")]);
    m_document_type_isSet = !json[QString("documentType")].isNull() && m_document_type_isValid;

    m_forename_isValid = ::OpenAPI::fromJsonValue(m_forename, json[QString("forename")]);
    m_forename_isSet = !json[QString("forename")].isNull() && m_forename_isValid;

    m_middle_name_isValid = ::OpenAPI::fromJsonValue(m_middle_name, json[QString("middleName")]);
    m_middle_name_isSet = !json[QString("middleName")].isNull() && m_middle_name_isValid;

    m_parameters_isValid = ::OpenAPI::fromJsonValue(m_parameters, json[QString("parameters")]);
    m_parameters_isSet = !json[QString("parameters")].isNull() && m_parameters_isValid;

    m_reference_id_isValid = ::OpenAPI::fromJsonValue(m_reference_id, json[QString("referenceId")]);
    m_reference_id_isSet = !json[QString("referenceId")].isNull() && m_reference_id_isValid;

    m_reg_type_id_isValid = ::OpenAPI::fromJsonValue(m_reg_type_id, json[QString("regTypeId")]);
    m_reg_type_id_isSet = !json[QString("regTypeId")].isNull() && m_reg_type_id_isValid;

    m_selfie_isValid = ::OpenAPI::fromJsonValue(m_selfie, json[QString("selfie")]);
    m_selfie_isSet = !json[QString("selfie")].isNull() && m_selfie_isValid;

    m_significant_person_id_isValid = ::OpenAPI::fromJsonValue(m_significant_person_id, json[QString("significantPersonId")]);
    m_significant_person_id_isSet = !json[QString("significantPersonId")].isNull() && m_significant_person_id_isValid;

    m_surname_isValid = ::OpenAPI::fromJsonValue(m_surname, json[QString("surname")]);
    m_surname_isSet = !json[QString("surname")].isNull() && m_surname_isValid;
}

QString OAICredas_Api_Models_Registrations_AddInstantRegistrationRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICredas_Api_Models_Registrations_AddInstantRegistrationRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_document_isSet) {
        obj.insert(QString("document"), ::OpenAPI::toJsonValue(m_document));
    }
    if (m_document_parameters.size() > 0) {
        obj.insert(QString("documentParameters"), ::OpenAPI::toJsonValue(m_document_parameters));
    }
    if (m_document_type_isSet) {
        obj.insert(QString("documentType"), ::OpenAPI::toJsonValue(m_document_type));
    }
    if (m_forename_isSet) {
        obj.insert(QString("forename"), ::OpenAPI::toJsonValue(m_forename));
    }
    if (m_middle_name_isSet) {
        obj.insert(QString("middleName"), ::OpenAPI::toJsonValue(m_middle_name));
    }
    if (m_parameters.size() > 0) {
        obj.insert(QString("parameters"), ::OpenAPI::toJsonValue(m_parameters));
    }
    if (m_reference_id_isSet) {
        obj.insert(QString("referenceId"), ::OpenAPI::toJsonValue(m_reference_id));
    }
    if (m_reg_type_id_isSet) {
        obj.insert(QString("regTypeId"), ::OpenAPI::toJsonValue(m_reg_type_id));
    }
    if (m_selfie_isSet) {
        obj.insert(QString("selfie"), ::OpenAPI::toJsonValue(m_selfie));
    }
    if (m_significant_person_id_isSet) {
        obj.insert(QString("significantPersonId"), ::OpenAPI::toJsonValue(m_significant_person_id));
    }
    if (m_surname_isSet) {
        obj.insert(QString("surname"), ::OpenAPI::toJsonValue(m_surname));
    }
    return obj;
}

QString OAICredas_Api_Models_Registrations_AddInstantRegistrationRequest::getDocument() const {
    return m_document;
}
void OAICredas_Api_Models_Registrations_AddInstantRegistrationRequest::setDocument(const QString &document) {
    m_document = document;
    m_document_isSet = true;
}

bool OAICredas_Api_Models_Registrations_AddInstantRegistrationRequest::is_document_Set() const{
    return m_document_isSet;
}

bool OAICredas_Api_Models_Registrations_AddInstantRegistrationRequest::is_document_Valid() const{
    return m_document_isValid;
}

QList<OAICredas_Api_Models_Registrations_KeyValueItem> OAICredas_Api_Models_Registrations_AddInstantRegistrationRequest::getDocumentParameters() const {
    return m_document_parameters;
}
void OAICredas_Api_Models_Registrations_AddInstantRegistrationRequest::setDocumentParameters(const QList<OAICredas_Api_Models_Registrations_KeyValueItem> &document_parameters) {
    m_document_parameters = document_parameters;
    m_document_parameters_isSet = true;
}

bool OAICredas_Api_Models_Registrations_AddInstantRegistrationRequest::is_document_parameters_Set() const{
    return m_document_parameters_isSet;
}

bool OAICredas_Api_Models_Registrations_AddInstantRegistrationRequest::is_document_parameters_Valid() const{
    return m_document_parameters_isValid;
}

qint32 OAICredas_Api_Models_Registrations_AddInstantRegistrationRequest::getDocumentType() const {
    return m_document_type;
}
void OAICredas_Api_Models_Registrations_AddInstantRegistrationRequest::setDocumentType(const qint32 &document_type) {
    m_document_type = document_type;
    m_document_type_isSet = true;
}

bool OAICredas_Api_Models_Registrations_AddInstantRegistrationRequest::is_document_type_Set() const{
    return m_document_type_isSet;
}

bool OAICredas_Api_Models_Registrations_AddInstantRegistrationRequest::is_document_type_Valid() const{
    return m_document_type_isValid;
}

QString OAICredas_Api_Models_Registrations_AddInstantRegistrationRequest::getForename() const {
    return m_forename;
}
void OAICredas_Api_Models_Registrations_AddInstantRegistrationRequest::setForename(const QString &forename) {
    m_forename = forename;
    m_forename_isSet = true;
}

bool OAICredas_Api_Models_Registrations_AddInstantRegistrationRequest::is_forename_Set() const{
    return m_forename_isSet;
}

bool OAICredas_Api_Models_Registrations_AddInstantRegistrationRequest::is_forename_Valid() const{
    return m_forename_isValid;
}

QString OAICredas_Api_Models_Registrations_AddInstantRegistrationRequest::getMiddleName() const {
    return m_middle_name;
}
void OAICredas_Api_Models_Registrations_AddInstantRegistrationRequest::setMiddleName(const QString &middle_name) {
    m_middle_name = middle_name;
    m_middle_name_isSet = true;
}

bool OAICredas_Api_Models_Registrations_AddInstantRegistrationRequest::is_middle_name_Set() const{
    return m_middle_name_isSet;
}

bool OAICredas_Api_Models_Registrations_AddInstantRegistrationRequest::is_middle_name_Valid() const{
    return m_middle_name_isValid;
}

QList<OAICredas_Api_Models_Registrations_KeyValueItem> OAICredas_Api_Models_Registrations_AddInstantRegistrationRequest::getParameters() const {
    return m_parameters;
}
void OAICredas_Api_Models_Registrations_AddInstantRegistrationRequest::setParameters(const QList<OAICredas_Api_Models_Registrations_KeyValueItem> &parameters) {
    m_parameters = parameters;
    m_parameters_isSet = true;
}

bool OAICredas_Api_Models_Registrations_AddInstantRegistrationRequest::is_parameters_Set() const{
    return m_parameters_isSet;
}

bool OAICredas_Api_Models_Registrations_AddInstantRegistrationRequest::is_parameters_Valid() const{
    return m_parameters_isValid;
}

QString OAICredas_Api_Models_Registrations_AddInstantRegistrationRequest::getReferenceId() const {
    return m_reference_id;
}
void OAICredas_Api_Models_Registrations_AddInstantRegistrationRequest::setReferenceId(const QString &reference_id) {
    m_reference_id = reference_id;
    m_reference_id_isSet = true;
}

bool OAICredas_Api_Models_Registrations_AddInstantRegistrationRequest::is_reference_id_Set() const{
    return m_reference_id_isSet;
}

bool OAICredas_Api_Models_Registrations_AddInstantRegistrationRequest::is_reference_id_Valid() const{
    return m_reference_id_isValid;
}

QString OAICredas_Api_Models_Registrations_AddInstantRegistrationRequest::getRegTypeId() const {
    return m_reg_type_id;
}
void OAICredas_Api_Models_Registrations_AddInstantRegistrationRequest::setRegTypeId(const QString &reg_type_id) {
    m_reg_type_id = reg_type_id;
    m_reg_type_id_isSet = true;
}

bool OAICredas_Api_Models_Registrations_AddInstantRegistrationRequest::is_reg_type_id_Set() const{
    return m_reg_type_id_isSet;
}

bool OAICredas_Api_Models_Registrations_AddInstantRegistrationRequest::is_reg_type_id_Valid() const{
    return m_reg_type_id_isValid;
}

QString OAICredas_Api_Models_Registrations_AddInstantRegistrationRequest::getSelfie() const {
    return m_selfie;
}
void OAICredas_Api_Models_Registrations_AddInstantRegistrationRequest::setSelfie(const QString &selfie) {
    m_selfie = selfie;
    m_selfie_isSet = true;
}

bool OAICredas_Api_Models_Registrations_AddInstantRegistrationRequest::is_selfie_Set() const{
    return m_selfie_isSet;
}

bool OAICredas_Api_Models_Registrations_AddInstantRegistrationRequest::is_selfie_Valid() const{
    return m_selfie_isValid;
}

QString OAICredas_Api_Models_Registrations_AddInstantRegistrationRequest::getSignificantPersonId() const {
    return m_significant_person_id;
}
void OAICredas_Api_Models_Registrations_AddInstantRegistrationRequest::setSignificantPersonId(const QString &significant_person_id) {
    m_significant_person_id = significant_person_id;
    m_significant_person_id_isSet = true;
}

bool OAICredas_Api_Models_Registrations_AddInstantRegistrationRequest::is_significant_person_id_Set() const{
    return m_significant_person_id_isSet;
}

bool OAICredas_Api_Models_Registrations_AddInstantRegistrationRequest::is_significant_person_id_Valid() const{
    return m_significant_person_id_isValid;
}

QString OAICredas_Api_Models_Registrations_AddInstantRegistrationRequest::getSurname() const {
    return m_surname;
}
void OAICredas_Api_Models_Registrations_AddInstantRegistrationRequest::setSurname(const QString &surname) {
    m_surname = surname;
    m_surname_isSet = true;
}

bool OAICredas_Api_Models_Registrations_AddInstantRegistrationRequest::is_surname_Set() const{
    return m_surname_isSet;
}

bool OAICredas_Api_Models_Registrations_AddInstantRegistrationRequest::is_surname_Valid() const{
    return m_surname_isValid;
}

bool OAICredas_Api_Models_Registrations_AddInstantRegistrationRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_document_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_document_parameters.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_document_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_forename_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_middle_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_parameters.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_reference_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_reg_type_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_selfie_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_significant_person_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_surname_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICredas_Api_Models_Registrations_AddInstantRegistrationRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_document_isValid && m_document_type_isValid && m_forename_isValid && m_reg_type_id_isValid && m_surname_isValid && true;
}

} // namespace OpenAPI
