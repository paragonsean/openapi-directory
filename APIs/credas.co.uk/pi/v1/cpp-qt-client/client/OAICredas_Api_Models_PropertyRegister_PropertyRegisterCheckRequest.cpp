/**
 * Credas API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICredas_Api_Models_PropertyRegister_PropertyRegisterCheckRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICredas_Api_Models_PropertyRegister_PropertyRegisterCheckRequest::OAICredas_Api_Models_PropertyRegister_PropertyRegisterCheckRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICredas_Api_Models_PropertyRegister_PropertyRegisterCheckRequest::OAICredas_Api_Models_PropertyRegister_PropertyRegisterCheckRequest() {
    this->initializeModel();
}

OAICredas_Api_Models_PropertyRegister_PropertyRegisterCheckRequest::~OAICredas_Api_Models_PropertyRegister_PropertyRegisterCheckRequest() {}

void OAICredas_Api_Models_PropertyRegister_PropertyRegisterCheckRequest::initializeModel() {

    m_address_isSet = false;
    m_address_isValid = false;

    m_person_isSet = false;
    m_person_isValid = false;

    m_reg_entry_id_isSet = false;
    m_reg_entry_id_isValid = false;
}

void OAICredas_Api_Models_PropertyRegister_PropertyRegisterCheckRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICredas_Api_Models_PropertyRegister_PropertyRegisterCheckRequest::fromJsonObject(QJsonObject json) {

    m_address_isValid = ::OpenAPI::fromJsonValue(m_address, json[QString("address")]);
    m_address_isSet = !json[QString("address")].isNull() && m_address_isValid;

    m_person_isValid = ::OpenAPI::fromJsonValue(m_person, json[QString("person")]);
    m_person_isSet = !json[QString("person")].isNull() && m_person_isValid;

    m_reg_entry_id_isValid = ::OpenAPI::fromJsonValue(m_reg_entry_id, json[QString("regEntryId")]);
    m_reg_entry_id_isSet = !json[QString("regEntryId")].isNull() && m_reg_entry_id_isValid;
}

QString OAICredas_Api_Models_PropertyRegister_PropertyRegisterCheckRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICredas_Api_Models_PropertyRegister_PropertyRegisterCheckRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_address.isSet()) {
        obj.insert(QString("address"), ::OpenAPI::toJsonValue(m_address));
    }
    if (m_person.isSet()) {
        obj.insert(QString("person"), ::OpenAPI::toJsonValue(m_person));
    }
    if (m_reg_entry_id_isSet) {
        obj.insert(QString("regEntryId"), ::OpenAPI::toJsonValue(m_reg_entry_id));
    }
    return obj;
}

OAICredas_Api_Models_PropertyRegister_Address OAICredas_Api_Models_PropertyRegister_PropertyRegisterCheckRequest::getAddress() const {
    return m_address;
}
void OAICredas_Api_Models_PropertyRegister_PropertyRegisterCheckRequest::setAddress(const OAICredas_Api_Models_PropertyRegister_Address &address) {
    m_address = address;
    m_address_isSet = true;
}

bool OAICredas_Api_Models_PropertyRegister_PropertyRegisterCheckRequest::is_address_Set() const{
    return m_address_isSet;
}

bool OAICredas_Api_Models_PropertyRegister_PropertyRegisterCheckRequest::is_address_Valid() const{
    return m_address_isValid;
}

OAICredas_Api_Models_PropertyRegister_Person OAICredas_Api_Models_PropertyRegister_PropertyRegisterCheckRequest::getPerson() const {
    return m_person;
}
void OAICredas_Api_Models_PropertyRegister_PropertyRegisterCheckRequest::setPerson(const OAICredas_Api_Models_PropertyRegister_Person &person) {
    m_person = person;
    m_person_isSet = true;
}

bool OAICredas_Api_Models_PropertyRegister_PropertyRegisterCheckRequest::is_person_Set() const{
    return m_person_isSet;
}

bool OAICredas_Api_Models_PropertyRegister_PropertyRegisterCheckRequest::is_person_Valid() const{
    return m_person_isValid;
}

QString OAICredas_Api_Models_PropertyRegister_PropertyRegisterCheckRequest::getRegEntryId() const {
    return m_reg_entry_id;
}
void OAICredas_Api_Models_PropertyRegister_PropertyRegisterCheckRequest::setRegEntryId(const QString &reg_entry_id) {
    m_reg_entry_id = reg_entry_id;
    m_reg_entry_id_isSet = true;
}

bool OAICredas_Api_Models_PropertyRegister_PropertyRegisterCheckRequest::is_reg_entry_id_Set() const{
    return m_reg_entry_id_isSet;
}

bool OAICredas_Api_Models_PropertyRegister_PropertyRegisterCheckRequest::is_reg_entry_id_Valid() const{
    return m_reg_entry_id_isValid;
}

bool OAICredas_Api_Models_PropertyRegister_PropertyRegisterCheckRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_address.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_person.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_reg_entry_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICredas_Api_Models_PropertyRegister_PropertyRegisterCheckRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_address_isValid && m_person_isValid && m_reg_entry_id_isValid && true;
}

} // namespace OpenAPI
