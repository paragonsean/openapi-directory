/**
 * Credas API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICredas_Api_Models_StatusChecks_Insolvency_InsolvencyResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICredas_Api_Models_StatusChecks_Insolvency_InsolvencyResult::OAICredas_Api_Models_StatusChecks_Insolvency_InsolvencyResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICredas_Api_Models_StatusChecks_Insolvency_InsolvencyResult::OAICredas_Api_Models_StatusChecks_Insolvency_InsolvencyResult() {
    this->initializeModel();
}

OAICredas_Api_Models_StatusChecks_Insolvency_InsolvencyResult::~OAICredas_Api_Models_StatusChecks_Insolvency_InsolvencyResult() {}

void OAICredas_Api_Models_StatusChecks_Insolvency_InsolvencyResult::initializeModel() {

    m_address_isSet = false;
    m_address_isValid = false;

    m_aliases_isSet = false;
    m_aliases_isValid = false;

    m_asset_total_isSet = false;
    m_asset_total_isValid = false;

    m_case_no_isSet = false;
    m_case_no_isValid = false;

    m_case_type_isSet = false;
    m_case_type_isValid = false;

    m_court_isSet = false;
    m_court_isValid = false;

    m_debt_total_isSet = false;
    m_debt_total_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_dob_isSet = false;
    m_dob_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_occupation_isSet = false;
    m_occupation_isValid = false;

    m_presentation_date_isSet = false;
    m_presentation_date_isValid = false;

    m_previous_address_isSet = false;
    m_previous_address_isValid = false;

    m_service_office_isSet = false;
    m_service_office_isValid = false;

    m_start_date_isSet = false;
    m_start_date_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_telephone_number_isSet = false;
    m_telephone_number_isValid = false;

    m_trading_names_isSet = false;
    m_trading_names_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;

    m_type_text_isSet = false;
    m_type_text_isValid = false;
}

void OAICredas_Api_Models_StatusChecks_Insolvency_InsolvencyResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICredas_Api_Models_StatusChecks_Insolvency_InsolvencyResult::fromJsonObject(QJsonObject json) {

    m_address_isValid = ::OpenAPI::fromJsonValue(m_address, json[QString("address")]);
    m_address_isSet = !json[QString("address")].isNull() && m_address_isValid;

    m_aliases_isValid = ::OpenAPI::fromJsonValue(m_aliases, json[QString("aliases")]);
    m_aliases_isSet = !json[QString("aliases")].isNull() && m_aliases_isValid;

    m_asset_total_isValid = ::OpenAPI::fromJsonValue(m_asset_total, json[QString("assetTotal")]);
    m_asset_total_isSet = !json[QString("assetTotal")].isNull() && m_asset_total_isValid;

    m_case_no_isValid = ::OpenAPI::fromJsonValue(m_case_no, json[QString("caseNo")]);
    m_case_no_isSet = !json[QString("caseNo")].isNull() && m_case_no_isValid;

    m_case_type_isValid = ::OpenAPI::fromJsonValue(m_case_type, json[QString("caseType")]);
    m_case_type_isSet = !json[QString("caseType")].isNull() && m_case_type_isValid;

    m_court_isValid = ::OpenAPI::fromJsonValue(m_court, json[QString("court")]);
    m_court_isSet = !json[QString("court")].isNull() && m_court_isValid;

    m_debt_total_isValid = ::OpenAPI::fromJsonValue(m_debt_total, json[QString("debtTotal")]);
    m_debt_total_isSet = !json[QString("debtTotal")].isNull() && m_debt_total_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_dob_isValid = ::OpenAPI::fromJsonValue(m_dob, json[QString("dob")]);
    m_dob_isSet = !json[QString("dob")].isNull() && m_dob_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_occupation_isValid = ::OpenAPI::fromJsonValue(m_occupation, json[QString("occupation")]);
    m_occupation_isSet = !json[QString("occupation")].isNull() && m_occupation_isValid;

    m_presentation_date_isValid = ::OpenAPI::fromJsonValue(m_presentation_date, json[QString("presentationDate")]);
    m_presentation_date_isSet = !json[QString("presentationDate")].isNull() && m_presentation_date_isValid;

    m_previous_address_isValid = ::OpenAPI::fromJsonValue(m_previous_address, json[QString("previousAddress")]);
    m_previous_address_isSet = !json[QString("previousAddress")].isNull() && m_previous_address_isValid;

    m_service_office_isValid = ::OpenAPI::fromJsonValue(m_service_office, json[QString("serviceOffice")]);
    m_service_office_isSet = !json[QString("serviceOffice")].isNull() && m_service_office_isValid;

    m_start_date_isValid = ::OpenAPI::fromJsonValue(m_start_date, json[QString("startDate")]);
    m_start_date_isSet = !json[QString("startDate")].isNull() && m_start_date_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_telephone_number_isValid = ::OpenAPI::fromJsonValue(m_telephone_number, json[QString("telephoneNumber")]);
    m_telephone_number_isSet = !json[QString("telephoneNumber")].isNull() && m_telephone_number_isValid;

    m_trading_names_isValid = ::OpenAPI::fromJsonValue(m_trading_names, json[QString("tradingNames")]);
    m_trading_names_isSet = !json[QString("tradingNames")].isNull() && m_trading_names_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;

    m_type_text_isValid = ::OpenAPI::fromJsonValue(m_type_text, json[QString("typeText")]);
    m_type_text_isSet = !json[QString("typeText")].isNull() && m_type_text_isValid;
}

QString OAICredas_Api_Models_StatusChecks_Insolvency_InsolvencyResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICredas_Api_Models_StatusChecks_Insolvency_InsolvencyResult::asJsonObject() const {
    QJsonObject obj;
    if (m_address.isSet()) {
        obj.insert(QString("address"), ::OpenAPI::toJsonValue(m_address));
    }
    if (m_aliases_isSet) {
        obj.insert(QString("aliases"), ::OpenAPI::toJsonValue(m_aliases));
    }
    if (m_asset_total_isSet) {
        obj.insert(QString("assetTotal"), ::OpenAPI::toJsonValue(m_asset_total));
    }
    if (m_case_no_isSet) {
        obj.insert(QString("caseNo"), ::OpenAPI::toJsonValue(m_case_no));
    }
    if (m_case_type_isSet) {
        obj.insert(QString("caseType"), ::OpenAPI::toJsonValue(m_case_type));
    }
    if (m_court_isSet) {
        obj.insert(QString("court"), ::OpenAPI::toJsonValue(m_court));
    }
    if (m_debt_total_isSet) {
        obj.insert(QString("debtTotal"), ::OpenAPI::toJsonValue(m_debt_total));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_dob_isSet) {
        obj.insert(QString("dob"), ::OpenAPI::toJsonValue(m_dob));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_occupation_isSet) {
        obj.insert(QString("occupation"), ::OpenAPI::toJsonValue(m_occupation));
    }
    if (m_presentation_date_isSet) {
        obj.insert(QString("presentationDate"), ::OpenAPI::toJsonValue(m_presentation_date));
    }
    if (m_previous_address.isSet()) {
        obj.insert(QString("previousAddress"), ::OpenAPI::toJsonValue(m_previous_address));
    }
    if (m_service_office_isSet) {
        obj.insert(QString("serviceOffice"), ::OpenAPI::toJsonValue(m_service_office));
    }
    if (m_start_date_isSet) {
        obj.insert(QString("startDate"), ::OpenAPI::toJsonValue(m_start_date));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_telephone_number_isSet) {
        obj.insert(QString("telephoneNumber"), ::OpenAPI::toJsonValue(m_telephone_number));
    }
    if (m_trading_names_isSet) {
        obj.insert(QString("tradingNames"), ::OpenAPI::toJsonValue(m_trading_names));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    if (m_type_text_isSet) {
        obj.insert(QString("typeText"), ::OpenAPI::toJsonValue(m_type_text));
    }
    return obj;
}

OAICredas_Api_Models_StatusChecks_Insolvency_Address OAICredas_Api_Models_StatusChecks_Insolvency_InsolvencyResult::getAddress() const {
    return m_address;
}
void OAICredas_Api_Models_StatusChecks_Insolvency_InsolvencyResult::setAddress(const OAICredas_Api_Models_StatusChecks_Insolvency_Address &address) {
    m_address = address;
    m_address_isSet = true;
}

bool OAICredas_Api_Models_StatusChecks_Insolvency_InsolvencyResult::is_address_Set() const{
    return m_address_isSet;
}

bool OAICredas_Api_Models_StatusChecks_Insolvency_InsolvencyResult::is_address_Valid() const{
    return m_address_isValid;
}

QString OAICredas_Api_Models_StatusChecks_Insolvency_InsolvencyResult::getAliases() const {
    return m_aliases;
}
void OAICredas_Api_Models_StatusChecks_Insolvency_InsolvencyResult::setAliases(const QString &aliases) {
    m_aliases = aliases;
    m_aliases_isSet = true;
}

bool OAICredas_Api_Models_StatusChecks_Insolvency_InsolvencyResult::is_aliases_Set() const{
    return m_aliases_isSet;
}

bool OAICredas_Api_Models_StatusChecks_Insolvency_InsolvencyResult::is_aliases_Valid() const{
    return m_aliases_isValid;
}

QString OAICredas_Api_Models_StatusChecks_Insolvency_InsolvencyResult::getAssetTotal() const {
    return m_asset_total;
}
void OAICredas_Api_Models_StatusChecks_Insolvency_InsolvencyResult::setAssetTotal(const QString &asset_total) {
    m_asset_total = asset_total;
    m_asset_total_isSet = true;
}

bool OAICredas_Api_Models_StatusChecks_Insolvency_InsolvencyResult::is_asset_total_Set() const{
    return m_asset_total_isSet;
}

bool OAICredas_Api_Models_StatusChecks_Insolvency_InsolvencyResult::is_asset_total_Valid() const{
    return m_asset_total_isValid;
}

QString OAICredas_Api_Models_StatusChecks_Insolvency_InsolvencyResult::getCaseNo() const {
    return m_case_no;
}
void OAICredas_Api_Models_StatusChecks_Insolvency_InsolvencyResult::setCaseNo(const QString &case_no) {
    m_case_no = case_no;
    m_case_no_isSet = true;
}

bool OAICredas_Api_Models_StatusChecks_Insolvency_InsolvencyResult::is_case_no_Set() const{
    return m_case_no_isSet;
}

bool OAICredas_Api_Models_StatusChecks_Insolvency_InsolvencyResult::is_case_no_Valid() const{
    return m_case_no_isValid;
}

QString OAICredas_Api_Models_StatusChecks_Insolvency_InsolvencyResult::getCaseType() const {
    return m_case_type;
}
void OAICredas_Api_Models_StatusChecks_Insolvency_InsolvencyResult::setCaseType(const QString &case_type) {
    m_case_type = case_type;
    m_case_type_isSet = true;
}

bool OAICredas_Api_Models_StatusChecks_Insolvency_InsolvencyResult::is_case_type_Set() const{
    return m_case_type_isSet;
}

bool OAICredas_Api_Models_StatusChecks_Insolvency_InsolvencyResult::is_case_type_Valid() const{
    return m_case_type_isValid;
}

QString OAICredas_Api_Models_StatusChecks_Insolvency_InsolvencyResult::getCourt() const {
    return m_court;
}
void OAICredas_Api_Models_StatusChecks_Insolvency_InsolvencyResult::setCourt(const QString &court) {
    m_court = court;
    m_court_isSet = true;
}

bool OAICredas_Api_Models_StatusChecks_Insolvency_InsolvencyResult::is_court_Set() const{
    return m_court_isSet;
}

bool OAICredas_Api_Models_StatusChecks_Insolvency_InsolvencyResult::is_court_Valid() const{
    return m_court_isValid;
}

QString OAICredas_Api_Models_StatusChecks_Insolvency_InsolvencyResult::getDebtTotal() const {
    return m_debt_total;
}
void OAICredas_Api_Models_StatusChecks_Insolvency_InsolvencyResult::setDebtTotal(const QString &debt_total) {
    m_debt_total = debt_total;
    m_debt_total_isSet = true;
}

bool OAICredas_Api_Models_StatusChecks_Insolvency_InsolvencyResult::is_debt_total_Set() const{
    return m_debt_total_isSet;
}

bool OAICredas_Api_Models_StatusChecks_Insolvency_InsolvencyResult::is_debt_total_Valid() const{
    return m_debt_total_isValid;
}

QString OAICredas_Api_Models_StatusChecks_Insolvency_InsolvencyResult::getDescription() const {
    return m_description;
}
void OAICredas_Api_Models_StatusChecks_Insolvency_InsolvencyResult::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAICredas_Api_Models_StatusChecks_Insolvency_InsolvencyResult::is_description_Set() const{
    return m_description_isSet;
}

bool OAICredas_Api_Models_StatusChecks_Insolvency_InsolvencyResult::is_description_Valid() const{
    return m_description_isValid;
}

QDateTime OAICredas_Api_Models_StatusChecks_Insolvency_InsolvencyResult::getDob() const {
    return m_dob;
}
void OAICredas_Api_Models_StatusChecks_Insolvency_InsolvencyResult::setDob(const QDateTime &dob) {
    m_dob = dob;
    m_dob_isSet = true;
}

bool OAICredas_Api_Models_StatusChecks_Insolvency_InsolvencyResult::is_dob_Set() const{
    return m_dob_isSet;
}

bool OAICredas_Api_Models_StatusChecks_Insolvency_InsolvencyResult::is_dob_Valid() const{
    return m_dob_isValid;
}

QString OAICredas_Api_Models_StatusChecks_Insolvency_InsolvencyResult::getName() const {
    return m_name;
}
void OAICredas_Api_Models_StatusChecks_Insolvency_InsolvencyResult::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAICredas_Api_Models_StatusChecks_Insolvency_InsolvencyResult::is_name_Set() const{
    return m_name_isSet;
}

bool OAICredas_Api_Models_StatusChecks_Insolvency_InsolvencyResult::is_name_Valid() const{
    return m_name_isValid;
}

QString OAICredas_Api_Models_StatusChecks_Insolvency_InsolvencyResult::getOccupation() const {
    return m_occupation;
}
void OAICredas_Api_Models_StatusChecks_Insolvency_InsolvencyResult::setOccupation(const QString &occupation) {
    m_occupation = occupation;
    m_occupation_isSet = true;
}

bool OAICredas_Api_Models_StatusChecks_Insolvency_InsolvencyResult::is_occupation_Set() const{
    return m_occupation_isSet;
}

bool OAICredas_Api_Models_StatusChecks_Insolvency_InsolvencyResult::is_occupation_Valid() const{
    return m_occupation_isValid;
}

QDateTime OAICredas_Api_Models_StatusChecks_Insolvency_InsolvencyResult::getPresentationDate() const {
    return m_presentation_date;
}
void OAICredas_Api_Models_StatusChecks_Insolvency_InsolvencyResult::setPresentationDate(const QDateTime &presentation_date) {
    m_presentation_date = presentation_date;
    m_presentation_date_isSet = true;
}

bool OAICredas_Api_Models_StatusChecks_Insolvency_InsolvencyResult::is_presentation_date_Set() const{
    return m_presentation_date_isSet;
}

bool OAICredas_Api_Models_StatusChecks_Insolvency_InsolvencyResult::is_presentation_date_Valid() const{
    return m_presentation_date_isValid;
}

OAICredas_Api_Models_StatusChecks_Insolvency_Address OAICredas_Api_Models_StatusChecks_Insolvency_InsolvencyResult::getPreviousAddress() const {
    return m_previous_address;
}
void OAICredas_Api_Models_StatusChecks_Insolvency_InsolvencyResult::setPreviousAddress(const OAICredas_Api_Models_StatusChecks_Insolvency_Address &previous_address) {
    m_previous_address = previous_address;
    m_previous_address_isSet = true;
}

bool OAICredas_Api_Models_StatusChecks_Insolvency_InsolvencyResult::is_previous_address_Set() const{
    return m_previous_address_isSet;
}

bool OAICredas_Api_Models_StatusChecks_Insolvency_InsolvencyResult::is_previous_address_Valid() const{
    return m_previous_address_isValid;
}

QString OAICredas_Api_Models_StatusChecks_Insolvency_InsolvencyResult::getServiceOffice() const {
    return m_service_office;
}
void OAICredas_Api_Models_StatusChecks_Insolvency_InsolvencyResult::setServiceOffice(const QString &service_office) {
    m_service_office = service_office;
    m_service_office_isSet = true;
}

bool OAICredas_Api_Models_StatusChecks_Insolvency_InsolvencyResult::is_service_office_Set() const{
    return m_service_office_isSet;
}

bool OAICredas_Api_Models_StatusChecks_Insolvency_InsolvencyResult::is_service_office_Valid() const{
    return m_service_office_isValid;
}

QDateTime OAICredas_Api_Models_StatusChecks_Insolvency_InsolvencyResult::getStartDate() const {
    return m_start_date;
}
void OAICredas_Api_Models_StatusChecks_Insolvency_InsolvencyResult::setStartDate(const QDateTime &start_date) {
    m_start_date = start_date;
    m_start_date_isSet = true;
}

bool OAICredas_Api_Models_StatusChecks_Insolvency_InsolvencyResult::is_start_date_Set() const{
    return m_start_date_isSet;
}

bool OAICredas_Api_Models_StatusChecks_Insolvency_InsolvencyResult::is_start_date_Valid() const{
    return m_start_date_isValid;
}

QString OAICredas_Api_Models_StatusChecks_Insolvency_InsolvencyResult::getStatus() const {
    return m_status;
}
void OAICredas_Api_Models_StatusChecks_Insolvency_InsolvencyResult::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAICredas_Api_Models_StatusChecks_Insolvency_InsolvencyResult::is_status_Set() const{
    return m_status_isSet;
}

bool OAICredas_Api_Models_StatusChecks_Insolvency_InsolvencyResult::is_status_Valid() const{
    return m_status_isValid;
}

QString OAICredas_Api_Models_StatusChecks_Insolvency_InsolvencyResult::getTelephoneNumber() const {
    return m_telephone_number;
}
void OAICredas_Api_Models_StatusChecks_Insolvency_InsolvencyResult::setTelephoneNumber(const QString &telephone_number) {
    m_telephone_number = telephone_number;
    m_telephone_number_isSet = true;
}

bool OAICredas_Api_Models_StatusChecks_Insolvency_InsolvencyResult::is_telephone_number_Set() const{
    return m_telephone_number_isSet;
}

bool OAICredas_Api_Models_StatusChecks_Insolvency_InsolvencyResult::is_telephone_number_Valid() const{
    return m_telephone_number_isValid;
}

QString OAICredas_Api_Models_StatusChecks_Insolvency_InsolvencyResult::getTradingNames() const {
    return m_trading_names;
}
void OAICredas_Api_Models_StatusChecks_Insolvency_InsolvencyResult::setTradingNames(const QString &trading_names) {
    m_trading_names = trading_names;
    m_trading_names_isSet = true;
}

bool OAICredas_Api_Models_StatusChecks_Insolvency_InsolvencyResult::is_trading_names_Set() const{
    return m_trading_names_isSet;
}

bool OAICredas_Api_Models_StatusChecks_Insolvency_InsolvencyResult::is_trading_names_Valid() const{
    return m_trading_names_isValid;
}

qint32 OAICredas_Api_Models_StatusChecks_Insolvency_InsolvencyResult::getType() const {
    return m_type;
}
void OAICredas_Api_Models_StatusChecks_Insolvency_InsolvencyResult::setType(const qint32 &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAICredas_Api_Models_StatusChecks_Insolvency_InsolvencyResult::is_type_Set() const{
    return m_type_isSet;
}

bool OAICredas_Api_Models_StatusChecks_Insolvency_InsolvencyResult::is_type_Valid() const{
    return m_type_isValid;
}

QString OAICredas_Api_Models_StatusChecks_Insolvency_InsolvencyResult::getTypeText() const {
    return m_type_text;
}
void OAICredas_Api_Models_StatusChecks_Insolvency_InsolvencyResult::setTypeText(const QString &type_text) {
    m_type_text = type_text;
    m_type_text_isSet = true;
}

bool OAICredas_Api_Models_StatusChecks_Insolvency_InsolvencyResult::is_type_text_Set() const{
    return m_type_text_isSet;
}

bool OAICredas_Api_Models_StatusChecks_Insolvency_InsolvencyResult::is_type_text_Valid() const{
    return m_type_text_isValid;
}

bool OAICredas_Api_Models_StatusChecks_Insolvency_InsolvencyResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_address.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_aliases_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_asset_total_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_case_no_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_case_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_court_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_debt_total_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_dob_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_occupation_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_presentation_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_previous_address.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_service_office_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_telephone_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_trading_names_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_text_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICredas_Api_Models_StatusChecks_Insolvency_InsolvencyResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
