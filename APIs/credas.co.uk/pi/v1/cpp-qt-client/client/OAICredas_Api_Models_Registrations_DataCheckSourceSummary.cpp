/**
 * Credas API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICredas_Api_Models_Registrations_DataCheckSourceSummary.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICredas_Api_Models_Registrations_DataCheckSourceSummary::OAICredas_Api_Models_Registrations_DataCheckSourceSummary(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICredas_Api_Models_Registrations_DataCheckSourceSummary::OAICredas_Api_Models_Registrations_DataCheckSourceSummary() {
    this->initializeModel();
}

OAICredas_Api_Models_Registrations_DataCheckSourceSummary::~OAICredas_Api_Models_Registrations_DataCheckSourceSummary() {}

void OAICredas_Api_Models_Registrations_DataCheckSourceSummary::initializeModel() {

    m_address_isSet = false;
    m_address_isValid = false;

    m_date_created_isSet = false;
    m_date_created_isValid = false;

    m_has_been_overridden_isSet = false;
    m_has_been_overridden_isValid = false;

    m_has_pep_sanctions_data_isSet = false;
    m_has_pep_sanctions_data_isValid = false;

    m_label_isSet = false;
    m_label_isValid = false;

    m_pep_sanctions_data_isSet = false;
    m_pep_sanctions_data_isValid = false;

    m_person_isSet = false;
    m_person_isValid = false;

    m_remarks_isSet = false;
    m_remarks_isValid = false;

    m_source_type_isSet = false;
    m_source_type_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;
}

void OAICredas_Api_Models_Registrations_DataCheckSourceSummary::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICredas_Api_Models_Registrations_DataCheckSourceSummary::fromJsonObject(QJsonObject json) {

    m_address_isValid = ::OpenAPI::fromJsonValue(m_address, json[QString("address")]);
    m_address_isSet = !json[QString("address")].isNull() && m_address_isValid;

    m_date_created_isValid = ::OpenAPI::fromJsonValue(m_date_created, json[QString("dateCreated")]);
    m_date_created_isSet = !json[QString("dateCreated")].isNull() && m_date_created_isValid;

    m_has_been_overridden_isValid = ::OpenAPI::fromJsonValue(m_has_been_overridden, json[QString("hasBeenOverridden")]);
    m_has_been_overridden_isSet = !json[QString("hasBeenOverridden")].isNull() && m_has_been_overridden_isValid;

    m_has_pep_sanctions_data_isValid = ::OpenAPI::fromJsonValue(m_has_pep_sanctions_data, json[QString("hasPepSanctionsData")]);
    m_has_pep_sanctions_data_isSet = !json[QString("hasPepSanctionsData")].isNull() && m_has_pep_sanctions_data_isValid;

    m_label_isValid = ::OpenAPI::fromJsonValue(m_label, json[QString("label")]);
    m_label_isSet = !json[QString("label")].isNull() && m_label_isValid;

    m_pep_sanctions_data_isValid = ::OpenAPI::fromJsonValue(m_pep_sanctions_data, json[QString("pepSanctionsData")]);
    m_pep_sanctions_data_isSet = !json[QString("pepSanctionsData")].isNull() && m_pep_sanctions_data_isValid;

    m_person_isValid = ::OpenAPI::fromJsonValue(m_person, json[QString("person")]);
    m_person_isSet = !json[QString("person")].isNull() && m_person_isValid;

    m_remarks_isValid = ::OpenAPI::fromJsonValue(m_remarks, json[QString("remarks")]);
    m_remarks_isSet = !json[QString("remarks")].isNull() && m_remarks_isValid;

    m_source_type_isValid = ::OpenAPI::fromJsonValue(m_source_type, json[QString("sourceType")]);
    m_source_type_isSet = !json[QString("sourceType")].isNull() && m_source_type_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;
}

QString OAICredas_Api_Models_Registrations_DataCheckSourceSummary::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICredas_Api_Models_Registrations_DataCheckSourceSummary::asJsonObject() const {
    QJsonObject obj;
    if (m_address.isSet()) {
        obj.insert(QString("address"), ::OpenAPI::toJsonValue(m_address));
    }
    if (m_date_created_isSet) {
        obj.insert(QString("dateCreated"), ::OpenAPI::toJsonValue(m_date_created));
    }
    if (m_has_been_overridden_isSet) {
        obj.insert(QString("hasBeenOverridden"), ::OpenAPI::toJsonValue(m_has_been_overridden));
    }
    if (m_has_pep_sanctions_data_isSet) {
        obj.insert(QString("hasPepSanctionsData"), ::OpenAPI::toJsonValue(m_has_pep_sanctions_data));
    }
    if (m_label_isSet) {
        obj.insert(QString("label"), ::OpenAPI::toJsonValue(m_label));
    }
    if (m_pep_sanctions_data.size() > 0) {
        obj.insert(QString("pepSanctionsData"), ::OpenAPI::toJsonValue(m_pep_sanctions_data));
    }
    if (m_person.isSet()) {
        obj.insert(QString("person"), ::OpenAPI::toJsonValue(m_person));
    }
    if (m_remarks.size() > 0) {
        obj.insert(QString("remarks"), ::OpenAPI::toJsonValue(m_remarks));
    }
    if (m_source_type_isSet) {
        obj.insert(QString("sourceType"), ::OpenAPI::toJsonValue(m_source_type));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    return obj;
}

OAICredas_Api_Models_DataCheck_Address OAICredas_Api_Models_Registrations_DataCheckSourceSummary::getAddress() const {
    return m_address;
}
void OAICredas_Api_Models_Registrations_DataCheckSourceSummary::setAddress(const OAICredas_Api_Models_DataCheck_Address &address) {
    m_address = address;
    m_address_isSet = true;
}

bool OAICredas_Api_Models_Registrations_DataCheckSourceSummary::is_address_Set() const{
    return m_address_isSet;
}

bool OAICredas_Api_Models_Registrations_DataCheckSourceSummary::is_address_Valid() const{
    return m_address_isValid;
}

QDateTime OAICredas_Api_Models_Registrations_DataCheckSourceSummary::getDateCreated() const {
    return m_date_created;
}
void OAICredas_Api_Models_Registrations_DataCheckSourceSummary::setDateCreated(const QDateTime &date_created) {
    m_date_created = date_created;
    m_date_created_isSet = true;
}

bool OAICredas_Api_Models_Registrations_DataCheckSourceSummary::is_date_created_Set() const{
    return m_date_created_isSet;
}

bool OAICredas_Api_Models_Registrations_DataCheckSourceSummary::is_date_created_Valid() const{
    return m_date_created_isValid;
}

bool OAICredas_Api_Models_Registrations_DataCheckSourceSummary::isHasBeenOverridden() const {
    return m_has_been_overridden;
}
void OAICredas_Api_Models_Registrations_DataCheckSourceSummary::setHasBeenOverridden(const bool &has_been_overridden) {
    m_has_been_overridden = has_been_overridden;
    m_has_been_overridden_isSet = true;
}

bool OAICredas_Api_Models_Registrations_DataCheckSourceSummary::is_has_been_overridden_Set() const{
    return m_has_been_overridden_isSet;
}

bool OAICredas_Api_Models_Registrations_DataCheckSourceSummary::is_has_been_overridden_Valid() const{
    return m_has_been_overridden_isValid;
}

bool OAICredas_Api_Models_Registrations_DataCheckSourceSummary::isHasPepSanctionsData() const {
    return m_has_pep_sanctions_data;
}
void OAICredas_Api_Models_Registrations_DataCheckSourceSummary::setHasPepSanctionsData(const bool &has_pep_sanctions_data) {
    m_has_pep_sanctions_data = has_pep_sanctions_data;
    m_has_pep_sanctions_data_isSet = true;
}

bool OAICredas_Api_Models_Registrations_DataCheckSourceSummary::is_has_pep_sanctions_data_Set() const{
    return m_has_pep_sanctions_data_isSet;
}

bool OAICredas_Api_Models_Registrations_DataCheckSourceSummary::is_has_pep_sanctions_data_Valid() const{
    return m_has_pep_sanctions_data_isValid;
}

QString OAICredas_Api_Models_Registrations_DataCheckSourceSummary::getLabel() const {
    return m_label;
}
void OAICredas_Api_Models_Registrations_DataCheckSourceSummary::setLabel(const QString &label) {
    m_label = label;
    m_label_isSet = true;
}

bool OAICredas_Api_Models_Registrations_DataCheckSourceSummary::is_label_Set() const{
    return m_label_isSet;
}

bool OAICredas_Api_Models_Registrations_DataCheckSourceSummary::is_label_Valid() const{
    return m_label_isValid;
}

QList<OAICredas_Api_Models_DataCheck_PepSanctions_PepSanctionItem> OAICredas_Api_Models_Registrations_DataCheckSourceSummary::getPepSanctionsData() const {
    return m_pep_sanctions_data;
}
void OAICredas_Api_Models_Registrations_DataCheckSourceSummary::setPepSanctionsData(const QList<OAICredas_Api_Models_DataCheck_PepSanctions_PepSanctionItem> &pep_sanctions_data) {
    m_pep_sanctions_data = pep_sanctions_data;
    m_pep_sanctions_data_isSet = true;
}

bool OAICredas_Api_Models_Registrations_DataCheckSourceSummary::is_pep_sanctions_data_Set() const{
    return m_pep_sanctions_data_isSet;
}

bool OAICredas_Api_Models_Registrations_DataCheckSourceSummary::is_pep_sanctions_data_Valid() const{
    return m_pep_sanctions_data_isValid;
}

OAICredas_Api_Models_DataCheck_Person OAICredas_Api_Models_Registrations_DataCheckSourceSummary::getPerson() const {
    return m_person;
}
void OAICredas_Api_Models_Registrations_DataCheckSourceSummary::setPerson(const OAICredas_Api_Models_DataCheck_Person &person) {
    m_person = person;
    m_person_isSet = true;
}

bool OAICredas_Api_Models_Registrations_DataCheckSourceSummary::is_person_Set() const{
    return m_person_isSet;
}

bool OAICredas_Api_Models_Registrations_DataCheckSourceSummary::is_person_Valid() const{
    return m_person_isValid;
}

QList<OAICredas_Api_Models_DataCheck_CheckRemark> OAICredas_Api_Models_Registrations_DataCheckSourceSummary::getRemarks() const {
    return m_remarks;
}
void OAICredas_Api_Models_Registrations_DataCheckSourceSummary::setRemarks(const QList<OAICredas_Api_Models_DataCheck_CheckRemark> &remarks) {
    m_remarks = remarks;
    m_remarks_isSet = true;
}

bool OAICredas_Api_Models_Registrations_DataCheckSourceSummary::is_remarks_Set() const{
    return m_remarks_isSet;
}

bool OAICredas_Api_Models_Registrations_DataCheckSourceSummary::is_remarks_Valid() const{
    return m_remarks_isValid;
}

qint32 OAICredas_Api_Models_Registrations_DataCheckSourceSummary::getSourceType() const {
    return m_source_type;
}
void OAICredas_Api_Models_Registrations_DataCheckSourceSummary::setSourceType(const qint32 &source_type) {
    m_source_type = source_type;
    m_source_type_isSet = true;
}

bool OAICredas_Api_Models_Registrations_DataCheckSourceSummary::is_source_type_Set() const{
    return m_source_type_isSet;
}

bool OAICredas_Api_Models_Registrations_DataCheckSourceSummary::is_source_type_Valid() const{
    return m_source_type_isValid;
}

qint32 OAICredas_Api_Models_Registrations_DataCheckSourceSummary::getStatus() const {
    return m_status;
}
void OAICredas_Api_Models_Registrations_DataCheckSourceSummary::setStatus(const qint32 &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAICredas_Api_Models_Registrations_DataCheckSourceSummary::is_status_Set() const{
    return m_status_isSet;
}

bool OAICredas_Api_Models_Registrations_DataCheckSourceSummary::is_status_Valid() const{
    return m_status_isValid;
}

bool OAICredas_Api_Models_Registrations_DataCheckSourceSummary::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_address.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_created_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_has_been_overridden_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_has_pep_sanctions_data_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_label_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pep_sanctions_data.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_person.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_remarks.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_source_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICredas_Api_Models_Registrations_DataCheckSourceSummary::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
