/**
 * Credas API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICredas_Api_Models_Registrations_RegistrationSummary.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICredas_Api_Models_Registrations_RegistrationSummary::OAICredas_Api_Models_Registrations_RegistrationSummary(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICredas_Api_Models_Registrations_RegistrationSummary::OAICredas_Api_Models_Registrations_RegistrationSummary() {
    this->initializeModel();
}

OAICredas_Api_Models_Registrations_RegistrationSummary::~OAICredas_Api_Models_Registrations_RegistrationSummary() {}

void OAICredas_Api_Models_Registrations_RegistrationSummary::initializeModel() {

    m_comments_isSet = false;
    m_comments_isValid = false;

    m_created_by_agency_user_email_isSet = false;
    m_created_by_agency_user_email_isValid = false;

    m_ditf_date_isSet = false;
    m_ditf_date_isValid = false;

    m_ditf_status_isSet = false;
    m_ditf_status_isValid = false;

    m_is_expired_isSet = false;
    m_is_expired_isValid = false;

    m_verified_in_app_date_isSet = false;
    m_verified_in_app_date_isValid = false;

    m_bank_account_checks_isSet = false;
    m_bank_account_checks_isValid = false;

    m_created_by_agency_user_id_isSet = false;
    m_created_by_agency_user_id_isValid = false;

    m_credit_status_check_isSet = false;
    m_credit_status_check_isValid = false;

    m_custom_terms_accepted_isSet = false;
    m_custom_terms_accepted_isValid = false;

    m_custom_terms_accepted_date_time_isSet = false;
    m_custom_terms_accepted_date_time_isValid = false;

    m_custom_terms_accepted_version_isSet = false;
    m_custom_terms_accepted_version_isValid = false;

    m_data_check_result_isSet = false;
    m_data_check_result_isValid = false;

    m_data_check_sources_isSet = false;
    m_data_check_sources_isValid = false;

    m_data_checks_performed_isSet = false;
    m_data_checks_performed_isValid = false;

    m_date_completed_isSet = false;
    m_date_completed_isValid = false;

    m_date_created_isSet = false;
    m_date_created_isValid = false;

    m_email_isSet = false;
    m_email_isValid = false;

    m_forename_isSet = false;
    m_forename_isValid = false;

    m_has_liveness_performed_isSet = false;
    m_has_liveness_performed_isValid = false;

    m_has_selfie_isSet = false;
    m_has_selfie_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_id_documents_isSet = false;
    m_id_documents_isValid = false;

    m_id_verification_isSet = false;
    m_id_verification_isValid = false;

    m_is_agent_led_isSet = false;
    m_is_agent_led_isValid = false;

    m_liveness_method_isSet = false;
    m_liveness_method_isValid = false;

    m_liveness_status_isSet = false;
    m_liveness_status_isValid = false;

    m_liveness_verified_isSet = false;
    m_liveness_verified_isValid = false;

    m_middle_name_isSet = false;
    m_middle_name_isValid = false;

    m_personal_details_isSet = false;
    m_personal_details_isValid = false;

    m_phone_number_isSet = false;
    m_phone_number_isValid = false;

    m_proof_of_ownership_check_isSet = false;
    m_proof_of_ownership_check_isValid = false;

    m_reference_id_isSet = false;
    m_reference_id_isValid = false;

    m_reg_code_isSet = false;
    m_reg_code_isValid = false;

    m_reg_type_id_isSet = false;
    m_reg_type_id_isValid = false;

    m_right_to_rent_check_isSet = false;
    m_right_to_rent_check_isValid = false;

    m_right_to_work_check_isSet = false;
    m_right_to_work_check_isValid = false;

    m_right_to_work_documents_provided_isSet = false;
    m_right_to_work_documents_provided_isValid = false;

    m_safe_harbour_verified_date_isSet = false;
    m_safe_harbour_verified_date_isValid = false;

    m_safe_harbour_verified_status_isSet = false;
    m_safe_harbour_verified_status_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_surname_isSet = false;
    m_surname_isValid = false;
}

void OAICredas_Api_Models_Registrations_RegistrationSummary::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICredas_Api_Models_Registrations_RegistrationSummary::fromJsonObject(QJsonObject json) {

    m_comments_isValid = ::OpenAPI::fromJsonValue(m_comments, json[QString("Comments")]);
    m_comments_isSet = !json[QString("Comments")].isNull() && m_comments_isValid;

    m_created_by_agency_user_email_isValid = ::OpenAPI::fromJsonValue(m_created_by_agency_user_email, json[QString("CreatedByAgencyUserEmail")]);
    m_created_by_agency_user_email_isSet = !json[QString("CreatedByAgencyUserEmail")].isNull() && m_created_by_agency_user_email_isValid;

    m_ditf_date_isValid = ::OpenAPI::fromJsonValue(m_ditf_date, json[QString("DITFDate")]);
    m_ditf_date_isSet = !json[QString("DITFDate")].isNull() && m_ditf_date_isValid;

    m_ditf_status_isValid = ::OpenAPI::fromJsonValue(m_ditf_status, json[QString("DITFStatus")]);
    m_ditf_status_isSet = !json[QString("DITFStatus")].isNull() && m_ditf_status_isValid;

    m_is_expired_isValid = ::OpenAPI::fromJsonValue(m_is_expired, json[QString("IsExpired")]);
    m_is_expired_isSet = !json[QString("IsExpired")].isNull() && m_is_expired_isValid;

    m_verified_in_app_date_isValid = ::OpenAPI::fromJsonValue(m_verified_in_app_date, json[QString("VerifiedInAppDate")]);
    m_verified_in_app_date_isSet = !json[QString("VerifiedInAppDate")].isNull() && m_verified_in_app_date_isValid;

    m_bank_account_checks_isValid = ::OpenAPI::fromJsonValue(m_bank_account_checks, json[QString("bankAccountChecks")]);
    m_bank_account_checks_isSet = !json[QString("bankAccountChecks")].isNull() && m_bank_account_checks_isValid;

    m_created_by_agency_user_id_isValid = ::OpenAPI::fromJsonValue(m_created_by_agency_user_id, json[QString("createdByAgencyUserId")]);
    m_created_by_agency_user_id_isSet = !json[QString("createdByAgencyUserId")].isNull() && m_created_by_agency_user_id_isValid;

    m_credit_status_check_isValid = ::OpenAPI::fromJsonValue(m_credit_status_check, json[QString("creditStatusCheck")]);
    m_credit_status_check_isSet = !json[QString("creditStatusCheck")].isNull() && m_credit_status_check_isValid;

    m_custom_terms_accepted_isValid = ::OpenAPI::fromJsonValue(m_custom_terms_accepted, json[QString("customTermsAccepted")]);
    m_custom_terms_accepted_isSet = !json[QString("customTermsAccepted")].isNull() && m_custom_terms_accepted_isValid;

    m_custom_terms_accepted_date_time_isValid = ::OpenAPI::fromJsonValue(m_custom_terms_accepted_date_time, json[QString("customTermsAcceptedDateTime")]);
    m_custom_terms_accepted_date_time_isSet = !json[QString("customTermsAcceptedDateTime")].isNull() && m_custom_terms_accepted_date_time_isValid;

    m_custom_terms_accepted_version_isValid = ::OpenAPI::fromJsonValue(m_custom_terms_accepted_version, json[QString("customTermsAcceptedVersion")]);
    m_custom_terms_accepted_version_isSet = !json[QString("customTermsAcceptedVersion")].isNull() && m_custom_terms_accepted_version_isValid;

    m_data_check_result_isValid = ::OpenAPI::fromJsonValue(m_data_check_result, json[QString("dataCheckResult")]);
    m_data_check_result_isSet = !json[QString("dataCheckResult")].isNull() && m_data_check_result_isValid;

    m_data_check_sources_isValid = ::OpenAPI::fromJsonValue(m_data_check_sources, json[QString("dataCheckSources")]);
    m_data_check_sources_isSet = !json[QString("dataCheckSources")].isNull() && m_data_check_sources_isValid;

    m_data_checks_performed_isValid = ::OpenAPI::fromJsonValue(m_data_checks_performed, json[QString("dataChecksPerformed")]);
    m_data_checks_performed_isSet = !json[QString("dataChecksPerformed")].isNull() && m_data_checks_performed_isValid;

    m_date_completed_isValid = ::OpenAPI::fromJsonValue(m_date_completed, json[QString("dateCompleted")]);
    m_date_completed_isSet = !json[QString("dateCompleted")].isNull() && m_date_completed_isValid;

    m_date_created_isValid = ::OpenAPI::fromJsonValue(m_date_created, json[QString("dateCreated")]);
    m_date_created_isSet = !json[QString("dateCreated")].isNull() && m_date_created_isValid;

    m_email_isValid = ::OpenAPI::fromJsonValue(m_email, json[QString("email")]);
    m_email_isSet = !json[QString("email")].isNull() && m_email_isValid;

    m_forename_isValid = ::OpenAPI::fromJsonValue(m_forename, json[QString("forename")]);
    m_forename_isSet = !json[QString("forename")].isNull() && m_forename_isValid;

    m_has_liveness_performed_isValid = ::OpenAPI::fromJsonValue(m_has_liveness_performed, json[QString("hasLivenessPerformed")]);
    m_has_liveness_performed_isSet = !json[QString("hasLivenessPerformed")].isNull() && m_has_liveness_performed_isValid;

    m_has_selfie_isValid = ::OpenAPI::fromJsonValue(m_has_selfie, json[QString("hasSelfie")]);
    m_has_selfie_isSet = !json[QString("hasSelfie")].isNull() && m_has_selfie_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_id_documents_isValid = ::OpenAPI::fromJsonValue(m_id_documents, json[QString("idDocuments")]);
    m_id_documents_isSet = !json[QString("idDocuments")].isNull() && m_id_documents_isValid;

    m_id_verification_isValid = ::OpenAPI::fromJsonValue(m_id_verification, json[QString("idVerification")]);
    m_id_verification_isSet = !json[QString("idVerification")].isNull() && m_id_verification_isValid;

    m_is_agent_led_isValid = ::OpenAPI::fromJsonValue(m_is_agent_led, json[QString("isAgentLed")]);
    m_is_agent_led_isSet = !json[QString("isAgentLed")].isNull() && m_is_agent_led_isValid;

    m_liveness_method_isValid = ::OpenAPI::fromJsonValue(m_liveness_method, json[QString("livenessMethod")]);
    m_liveness_method_isSet = !json[QString("livenessMethod")].isNull() && m_liveness_method_isValid;

    m_liveness_status_isValid = ::OpenAPI::fromJsonValue(m_liveness_status, json[QString("livenessStatus")]);
    m_liveness_status_isSet = !json[QString("livenessStatus")].isNull() && m_liveness_status_isValid;

    m_liveness_verified_isValid = ::OpenAPI::fromJsonValue(m_liveness_verified, json[QString("livenessVerified")]);
    m_liveness_verified_isSet = !json[QString("livenessVerified")].isNull() && m_liveness_verified_isValid;

    m_middle_name_isValid = ::OpenAPI::fromJsonValue(m_middle_name, json[QString("middleName")]);
    m_middle_name_isSet = !json[QString("middleName")].isNull() && m_middle_name_isValid;

    m_personal_details_isValid = ::OpenAPI::fromJsonValue(m_personal_details, json[QString("personalDetails")]);
    m_personal_details_isSet = !json[QString("personalDetails")].isNull() && m_personal_details_isValid;

    m_phone_number_isValid = ::OpenAPI::fromJsonValue(m_phone_number, json[QString("phoneNumber")]);
    m_phone_number_isSet = !json[QString("phoneNumber")].isNull() && m_phone_number_isValid;

    m_proof_of_ownership_check_isValid = ::OpenAPI::fromJsonValue(m_proof_of_ownership_check, json[QString("proofOfOwnershipCheck")]);
    m_proof_of_ownership_check_isSet = !json[QString("proofOfOwnershipCheck")].isNull() && m_proof_of_ownership_check_isValid;

    m_reference_id_isValid = ::OpenAPI::fromJsonValue(m_reference_id, json[QString("referenceId")]);
    m_reference_id_isSet = !json[QString("referenceId")].isNull() && m_reference_id_isValid;

    m_reg_code_isValid = ::OpenAPI::fromJsonValue(m_reg_code, json[QString("regCode")]);
    m_reg_code_isSet = !json[QString("regCode")].isNull() && m_reg_code_isValid;

    m_reg_type_id_isValid = ::OpenAPI::fromJsonValue(m_reg_type_id, json[QString("regTypeId")]);
    m_reg_type_id_isSet = !json[QString("regTypeId")].isNull() && m_reg_type_id_isValid;

    m_right_to_rent_check_isValid = ::OpenAPI::fromJsonValue(m_right_to_rent_check, json[QString("rightToRentCheck")]);
    m_right_to_rent_check_isSet = !json[QString("rightToRentCheck")].isNull() && m_right_to_rent_check_isValid;

    m_right_to_work_check_isValid = ::OpenAPI::fromJsonValue(m_right_to_work_check, json[QString("rightToWorkCheck")]);
    m_right_to_work_check_isSet = !json[QString("rightToWorkCheck")].isNull() && m_right_to_work_check_isValid;

    m_right_to_work_documents_provided_isValid = ::OpenAPI::fromJsonValue(m_right_to_work_documents_provided, json[QString("rightToWorkDocumentsProvided")]);
    m_right_to_work_documents_provided_isSet = !json[QString("rightToWorkDocumentsProvided")].isNull() && m_right_to_work_documents_provided_isValid;

    m_safe_harbour_verified_date_isValid = ::OpenAPI::fromJsonValue(m_safe_harbour_verified_date, json[QString("safeHarbourVerifiedDate")]);
    m_safe_harbour_verified_date_isSet = !json[QString("safeHarbourVerifiedDate")].isNull() && m_safe_harbour_verified_date_isValid;

    m_safe_harbour_verified_status_isValid = ::OpenAPI::fromJsonValue(m_safe_harbour_verified_status, json[QString("safeHarbourVerifiedStatus")]);
    m_safe_harbour_verified_status_isSet = !json[QString("safeHarbourVerifiedStatus")].isNull() && m_safe_harbour_verified_status_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_surname_isValid = ::OpenAPI::fromJsonValue(m_surname, json[QString("surname")]);
    m_surname_isSet = !json[QString("surname")].isNull() && m_surname_isValid;
}

QString OAICredas_Api_Models_Registrations_RegistrationSummary::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICredas_Api_Models_Registrations_RegistrationSummary::asJsonObject() const {
    QJsonObject obj;
    if (m_comments.size() > 0) {
        obj.insert(QString("Comments"), ::OpenAPI::toJsonValue(m_comments));
    }
    if (m_created_by_agency_user_email_isSet) {
        obj.insert(QString("CreatedByAgencyUserEmail"), ::OpenAPI::toJsonValue(m_created_by_agency_user_email));
    }
    if (m_ditf_date_isSet) {
        obj.insert(QString("DITFDate"), ::OpenAPI::toJsonValue(m_ditf_date));
    }
    if (m_ditf_status_isSet) {
        obj.insert(QString("DITFStatus"), ::OpenAPI::toJsonValue(m_ditf_status));
    }
    if (m_is_expired_isSet) {
        obj.insert(QString("IsExpired"), ::OpenAPI::toJsonValue(m_is_expired));
    }
    if (m_verified_in_app_date_isSet) {
        obj.insert(QString("VerifiedInAppDate"), ::OpenAPI::toJsonValue(m_verified_in_app_date));
    }
    if (m_bank_account_checks.size() > 0) {
        obj.insert(QString("bankAccountChecks"), ::OpenAPI::toJsonValue(m_bank_account_checks));
    }
    if (m_created_by_agency_user_id_isSet) {
        obj.insert(QString("createdByAgencyUserId"), ::OpenAPI::toJsonValue(m_created_by_agency_user_id));
    }
    if (m_credit_status_check.isSet()) {
        obj.insert(QString("creditStatusCheck"), ::OpenAPI::toJsonValue(m_credit_status_check));
    }
    if (m_custom_terms_accepted_isSet) {
        obj.insert(QString("customTermsAccepted"), ::OpenAPI::toJsonValue(m_custom_terms_accepted));
    }
    if (m_custom_terms_accepted_date_time_isSet) {
        obj.insert(QString("customTermsAcceptedDateTime"), ::OpenAPI::toJsonValue(m_custom_terms_accepted_date_time));
    }
    if (m_custom_terms_accepted_version_isSet) {
        obj.insert(QString("customTermsAcceptedVersion"), ::OpenAPI::toJsonValue(m_custom_terms_accepted_version));
    }
    if (m_data_check_result_isSet) {
        obj.insert(QString("dataCheckResult"), ::OpenAPI::toJsonValue(m_data_check_result));
    }
    if (m_data_check_sources.size() > 0) {
        obj.insert(QString("dataCheckSources"), ::OpenAPI::toJsonValue(m_data_check_sources));
    }
    if (m_data_checks_performed_isSet) {
        obj.insert(QString("dataChecksPerformed"), ::OpenAPI::toJsonValue(m_data_checks_performed));
    }
    if (m_date_completed_isSet) {
        obj.insert(QString("dateCompleted"), ::OpenAPI::toJsonValue(m_date_completed));
    }
    if (m_date_created_isSet) {
        obj.insert(QString("dateCreated"), ::OpenAPI::toJsonValue(m_date_created));
    }
    if (m_email_isSet) {
        obj.insert(QString("email"), ::OpenAPI::toJsonValue(m_email));
    }
    if (m_forename_isSet) {
        obj.insert(QString("forename"), ::OpenAPI::toJsonValue(m_forename));
    }
    if (m_has_liveness_performed_isSet) {
        obj.insert(QString("hasLivenessPerformed"), ::OpenAPI::toJsonValue(m_has_liveness_performed));
    }
    if (m_has_selfie_isSet) {
        obj.insert(QString("hasSelfie"), ::OpenAPI::toJsonValue(m_has_selfie));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_id_documents.size() > 0) {
        obj.insert(QString("idDocuments"), ::OpenAPI::toJsonValue(m_id_documents));
    }
    if (m_id_verification.isSet()) {
        obj.insert(QString("idVerification"), ::OpenAPI::toJsonValue(m_id_verification));
    }
    if (m_is_agent_led_isSet) {
        obj.insert(QString("isAgentLed"), ::OpenAPI::toJsonValue(m_is_agent_led));
    }
    if (m_liveness_method_isSet) {
        obj.insert(QString("livenessMethod"), ::OpenAPI::toJsonValue(m_liveness_method));
    }
    if (m_liveness_status_isSet) {
        obj.insert(QString("livenessStatus"), ::OpenAPI::toJsonValue(m_liveness_status));
    }
    if (m_liveness_verified_isSet) {
        obj.insert(QString("livenessVerified"), ::OpenAPI::toJsonValue(m_liveness_verified));
    }
    if (m_middle_name_isSet) {
        obj.insert(QString("middleName"), ::OpenAPI::toJsonValue(m_middle_name));
    }
    if (m_personal_details.isSet()) {
        obj.insert(QString("personalDetails"), ::OpenAPI::toJsonValue(m_personal_details));
    }
    if (m_phone_number_isSet) {
        obj.insert(QString("phoneNumber"), ::OpenAPI::toJsonValue(m_phone_number));
    }
    if (m_proof_of_ownership_check.isSet()) {
        obj.insert(QString("proofOfOwnershipCheck"), ::OpenAPI::toJsonValue(m_proof_of_ownership_check));
    }
    if (m_reference_id_isSet) {
        obj.insert(QString("referenceId"), ::OpenAPI::toJsonValue(m_reference_id));
    }
    if (m_reg_code_isSet) {
        obj.insert(QString("regCode"), ::OpenAPI::toJsonValue(m_reg_code));
    }
    if (m_reg_type_id_isSet) {
        obj.insert(QString("regTypeId"), ::OpenAPI::toJsonValue(m_reg_type_id));
    }
    if (m_right_to_rent_check.isSet()) {
        obj.insert(QString("rightToRentCheck"), ::OpenAPI::toJsonValue(m_right_to_rent_check));
    }
    if (m_right_to_work_check.isSet()) {
        obj.insert(QString("rightToWorkCheck"), ::OpenAPI::toJsonValue(m_right_to_work_check));
    }
    if (m_right_to_work_documents_provided_isSet) {
        obj.insert(QString("rightToWorkDocumentsProvided"), ::OpenAPI::toJsonValue(m_right_to_work_documents_provided));
    }
    if (m_safe_harbour_verified_date_isSet) {
        obj.insert(QString("safeHarbourVerifiedDate"), ::OpenAPI::toJsonValue(m_safe_harbour_verified_date));
    }
    if (m_safe_harbour_verified_status_isSet) {
        obj.insert(QString("safeHarbourVerifiedStatus"), ::OpenAPI::toJsonValue(m_safe_harbour_verified_status));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_surname_isSet) {
        obj.insert(QString("surname"), ::OpenAPI::toJsonValue(m_surname));
    }
    return obj;
}

QList<OAICredas_Api_Models_Registrations_RegistrationComment> OAICredas_Api_Models_Registrations_RegistrationSummary::getComments() const {
    return m_comments;
}
void OAICredas_Api_Models_Registrations_RegistrationSummary::setComments(const QList<OAICredas_Api_Models_Registrations_RegistrationComment> &comments) {
    m_comments = comments;
    m_comments_isSet = true;
}

bool OAICredas_Api_Models_Registrations_RegistrationSummary::is_comments_Set() const{
    return m_comments_isSet;
}

bool OAICredas_Api_Models_Registrations_RegistrationSummary::is_comments_Valid() const{
    return m_comments_isValid;
}

QString OAICredas_Api_Models_Registrations_RegistrationSummary::getCreatedByAgencyUserEmail() const {
    return m_created_by_agency_user_email;
}
void OAICredas_Api_Models_Registrations_RegistrationSummary::setCreatedByAgencyUserEmail(const QString &created_by_agency_user_email) {
    m_created_by_agency_user_email = created_by_agency_user_email;
    m_created_by_agency_user_email_isSet = true;
}

bool OAICredas_Api_Models_Registrations_RegistrationSummary::is_created_by_agency_user_email_Set() const{
    return m_created_by_agency_user_email_isSet;
}

bool OAICredas_Api_Models_Registrations_RegistrationSummary::is_created_by_agency_user_email_Valid() const{
    return m_created_by_agency_user_email_isValid;
}

QDateTime OAICredas_Api_Models_Registrations_RegistrationSummary::getDitfDate() const {
    return m_ditf_date;
}
void OAICredas_Api_Models_Registrations_RegistrationSummary::setDitfDate(const QDateTime &ditf_date) {
    m_ditf_date = ditf_date;
    m_ditf_date_isSet = true;
}

bool OAICredas_Api_Models_Registrations_RegistrationSummary::is_ditf_date_Set() const{
    return m_ditf_date_isSet;
}

bool OAICredas_Api_Models_Registrations_RegistrationSummary::is_ditf_date_Valid() const{
    return m_ditf_date_isValid;
}

qint32 OAICredas_Api_Models_Registrations_RegistrationSummary::getDitfStatus() const {
    return m_ditf_status;
}
void OAICredas_Api_Models_Registrations_RegistrationSummary::setDitfStatus(const qint32 &ditf_status) {
    m_ditf_status = ditf_status;
    m_ditf_status_isSet = true;
}

bool OAICredas_Api_Models_Registrations_RegistrationSummary::is_ditf_status_Set() const{
    return m_ditf_status_isSet;
}

bool OAICredas_Api_Models_Registrations_RegistrationSummary::is_ditf_status_Valid() const{
    return m_ditf_status_isValid;
}

bool OAICredas_Api_Models_Registrations_RegistrationSummary::isIsExpired() const {
    return m_is_expired;
}
void OAICredas_Api_Models_Registrations_RegistrationSummary::setIsExpired(const bool &is_expired) {
    m_is_expired = is_expired;
    m_is_expired_isSet = true;
}

bool OAICredas_Api_Models_Registrations_RegistrationSummary::is_is_expired_Set() const{
    return m_is_expired_isSet;
}

bool OAICredas_Api_Models_Registrations_RegistrationSummary::is_is_expired_Valid() const{
    return m_is_expired_isValid;
}

QDateTime OAICredas_Api_Models_Registrations_RegistrationSummary::getVerifiedInAppDate() const {
    return m_verified_in_app_date;
}
void OAICredas_Api_Models_Registrations_RegistrationSummary::setVerifiedInAppDate(const QDateTime &verified_in_app_date) {
    m_verified_in_app_date = verified_in_app_date;
    m_verified_in_app_date_isSet = true;
}

bool OAICredas_Api_Models_Registrations_RegistrationSummary::is_verified_in_app_date_Set() const{
    return m_verified_in_app_date_isSet;
}

bool OAICredas_Api_Models_Registrations_RegistrationSummary::is_verified_in_app_date_Valid() const{
    return m_verified_in_app_date_isValid;
}

QList<OAICredas_Api_Models_BankAccounts_AccountVerificationResponse> OAICredas_Api_Models_Registrations_RegistrationSummary::getBankAccountChecks() const {
    return m_bank_account_checks;
}
void OAICredas_Api_Models_Registrations_RegistrationSummary::setBankAccountChecks(const QList<OAICredas_Api_Models_BankAccounts_AccountVerificationResponse> &bank_account_checks) {
    m_bank_account_checks = bank_account_checks;
    m_bank_account_checks_isSet = true;
}

bool OAICredas_Api_Models_Registrations_RegistrationSummary::is_bank_account_checks_Set() const{
    return m_bank_account_checks_isSet;
}

bool OAICredas_Api_Models_Registrations_RegistrationSummary::is_bank_account_checks_Valid() const{
    return m_bank_account_checks_isValid;
}

QString OAICredas_Api_Models_Registrations_RegistrationSummary::getCreatedByAgencyUserId() const {
    return m_created_by_agency_user_id;
}
void OAICredas_Api_Models_Registrations_RegistrationSummary::setCreatedByAgencyUserId(const QString &created_by_agency_user_id) {
    m_created_by_agency_user_id = created_by_agency_user_id;
    m_created_by_agency_user_id_isSet = true;
}

bool OAICredas_Api_Models_Registrations_RegistrationSummary::is_created_by_agency_user_id_Set() const{
    return m_created_by_agency_user_id_isSet;
}

bool OAICredas_Api_Models_Registrations_RegistrationSummary::is_created_by_agency_user_id_Valid() const{
    return m_created_by_agency_user_id_isValid;
}

OAICredas_Api_Models_StatusChecks_StatusCheck OAICredas_Api_Models_Registrations_RegistrationSummary::getCreditStatusCheck() const {
    return m_credit_status_check;
}
void OAICredas_Api_Models_Registrations_RegistrationSummary::setCreditStatusCheck(const OAICredas_Api_Models_StatusChecks_StatusCheck &credit_status_check) {
    m_credit_status_check = credit_status_check;
    m_credit_status_check_isSet = true;
}

bool OAICredas_Api_Models_Registrations_RegistrationSummary::is_credit_status_check_Set() const{
    return m_credit_status_check_isSet;
}

bool OAICredas_Api_Models_Registrations_RegistrationSummary::is_credit_status_check_Valid() const{
    return m_credit_status_check_isValid;
}

bool OAICredas_Api_Models_Registrations_RegistrationSummary::isCustomTermsAccepted() const {
    return m_custom_terms_accepted;
}
void OAICredas_Api_Models_Registrations_RegistrationSummary::setCustomTermsAccepted(const bool &custom_terms_accepted) {
    m_custom_terms_accepted = custom_terms_accepted;
    m_custom_terms_accepted_isSet = true;
}

bool OAICredas_Api_Models_Registrations_RegistrationSummary::is_custom_terms_accepted_Set() const{
    return m_custom_terms_accepted_isSet;
}

bool OAICredas_Api_Models_Registrations_RegistrationSummary::is_custom_terms_accepted_Valid() const{
    return m_custom_terms_accepted_isValid;
}

QDateTime OAICredas_Api_Models_Registrations_RegistrationSummary::getCustomTermsAcceptedDateTime() const {
    return m_custom_terms_accepted_date_time;
}
void OAICredas_Api_Models_Registrations_RegistrationSummary::setCustomTermsAcceptedDateTime(const QDateTime &custom_terms_accepted_date_time) {
    m_custom_terms_accepted_date_time = custom_terms_accepted_date_time;
    m_custom_terms_accepted_date_time_isSet = true;
}

bool OAICredas_Api_Models_Registrations_RegistrationSummary::is_custom_terms_accepted_date_time_Set() const{
    return m_custom_terms_accepted_date_time_isSet;
}

bool OAICredas_Api_Models_Registrations_RegistrationSummary::is_custom_terms_accepted_date_time_Valid() const{
    return m_custom_terms_accepted_date_time_isValid;
}

qint32 OAICredas_Api_Models_Registrations_RegistrationSummary::getCustomTermsAcceptedVersion() const {
    return m_custom_terms_accepted_version;
}
void OAICredas_Api_Models_Registrations_RegistrationSummary::setCustomTermsAcceptedVersion(const qint32 &custom_terms_accepted_version) {
    m_custom_terms_accepted_version = custom_terms_accepted_version;
    m_custom_terms_accepted_version_isSet = true;
}

bool OAICredas_Api_Models_Registrations_RegistrationSummary::is_custom_terms_accepted_version_Set() const{
    return m_custom_terms_accepted_version_isSet;
}

bool OAICredas_Api_Models_Registrations_RegistrationSummary::is_custom_terms_accepted_version_Valid() const{
    return m_custom_terms_accepted_version_isValid;
}

qint32 OAICredas_Api_Models_Registrations_RegistrationSummary::getDataCheckResult() const {
    return m_data_check_result;
}
void OAICredas_Api_Models_Registrations_RegistrationSummary::setDataCheckResult(const qint32 &data_check_result) {
    m_data_check_result = data_check_result;
    m_data_check_result_isSet = true;
}

bool OAICredas_Api_Models_Registrations_RegistrationSummary::is_data_check_result_Set() const{
    return m_data_check_result_isSet;
}

bool OAICredas_Api_Models_Registrations_RegistrationSummary::is_data_check_result_Valid() const{
    return m_data_check_result_isValid;
}

QList<OAICredas_Api_Models_Registrations_DataCheckSourceSummary> OAICredas_Api_Models_Registrations_RegistrationSummary::getDataCheckSources() const {
    return m_data_check_sources;
}
void OAICredas_Api_Models_Registrations_RegistrationSummary::setDataCheckSources(const QList<OAICredas_Api_Models_Registrations_DataCheckSourceSummary> &data_check_sources) {
    m_data_check_sources = data_check_sources;
    m_data_check_sources_isSet = true;
}

bool OAICredas_Api_Models_Registrations_RegistrationSummary::is_data_check_sources_Set() const{
    return m_data_check_sources_isSet;
}

bool OAICredas_Api_Models_Registrations_RegistrationSummary::is_data_check_sources_Valid() const{
    return m_data_check_sources_isValid;
}

bool OAICredas_Api_Models_Registrations_RegistrationSummary::isDataChecksPerformed() const {
    return m_data_checks_performed;
}
void OAICredas_Api_Models_Registrations_RegistrationSummary::setDataChecksPerformed(const bool &data_checks_performed) {
    m_data_checks_performed = data_checks_performed;
    m_data_checks_performed_isSet = true;
}

bool OAICredas_Api_Models_Registrations_RegistrationSummary::is_data_checks_performed_Set() const{
    return m_data_checks_performed_isSet;
}

bool OAICredas_Api_Models_Registrations_RegistrationSummary::is_data_checks_performed_Valid() const{
    return m_data_checks_performed_isValid;
}

QDateTime OAICredas_Api_Models_Registrations_RegistrationSummary::getDateCompleted() const {
    return m_date_completed;
}
void OAICredas_Api_Models_Registrations_RegistrationSummary::setDateCompleted(const QDateTime &date_completed) {
    m_date_completed = date_completed;
    m_date_completed_isSet = true;
}

bool OAICredas_Api_Models_Registrations_RegistrationSummary::is_date_completed_Set() const{
    return m_date_completed_isSet;
}

bool OAICredas_Api_Models_Registrations_RegistrationSummary::is_date_completed_Valid() const{
    return m_date_completed_isValid;
}

QDateTime OAICredas_Api_Models_Registrations_RegistrationSummary::getDateCreated() const {
    return m_date_created;
}
void OAICredas_Api_Models_Registrations_RegistrationSummary::setDateCreated(const QDateTime &date_created) {
    m_date_created = date_created;
    m_date_created_isSet = true;
}

bool OAICredas_Api_Models_Registrations_RegistrationSummary::is_date_created_Set() const{
    return m_date_created_isSet;
}

bool OAICredas_Api_Models_Registrations_RegistrationSummary::is_date_created_Valid() const{
    return m_date_created_isValid;
}

QString OAICredas_Api_Models_Registrations_RegistrationSummary::getEmail() const {
    return m_email;
}
void OAICredas_Api_Models_Registrations_RegistrationSummary::setEmail(const QString &email) {
    m_email = email;
    m_email_isSet = true;
}

bool OAICredas_Api_Models_Registrations_RegistrationSummary::is_email_Set() const{
    return m_email_isSet;
}

bool OAICredas_Api_Models_Registrations_RegistrationSummary::is_email_Valid() const{
    return m_email_isValid;
}

QString OAICredas_Api_Models_Registrations_RegistrationSummary::getForename() const {
    return m_forename;
}
void OAICredas_Api_Models_Registrations_RegistrationSummary::setForename(const QString &forename) {
    m_forename = forename;
    m_forename_isSet = true;
}

bool OAICredas_Api_Models_Registrations_RegistrationSummary::is_forename_Set() const{
    return m_forename_isSet;
}

bool OAICredas_Api_Models_Registrations_RegistrationSummary::is_forename_Valid() const{
    return m_forename_isValid;
}

bool OAICredas_Api_Models_Registrations_RegistrationSummary::isHasLivenessPerformed() const {
    return m_has_liveness_performed;
}
void OAICredas_Api_Models_Registrations_RegistrationSummary::setHasLivenessPerformed(const bool &has_liveness_performed) {
    m_has_liveness_performed = has_liveness_performed;
    m_has_liveness_performed_isSet = true;
}

bool OAICredas_Api_Models_Registrations_RegistrationSummary::is_has_liveness_performed_Set() const{
    return m_has_liveness_performed_isSet;
}

bool OAICredas_Api_Models_Registrations_RegistrationSummary::is_has_liveness_performed_Valid() const{
    return m_has_liveness_performed_isValid;
}

bool OAICredas_Api_Models_Registrations_RegistrationSummary::isHasSelfie() const {
    return m_has_selfie;
}
void OAICredas_Api_Models_Registrations_RegistrationSummary::setHasSelfie(const bool &has_selfie) {
    m_has_selfie = has_selfie;
    m_has_selfie_isSet = true;
}

bool OAICredas_Api_Models_Registrations_RegistrationSummary::is_has_selfie_Set() const{
    return m_has_selfie_isSet;
}

bool OAICredas_Api_Models_Registrations_RegistrationSummary::is_has_selfie_Valid() const{
    return m_has_selfie_isValid;
}

QString OAICredas_Api_Models_Registrations_RegistrationSummary::getId() const {
    return m_id;
}
void OAICredas_Api_Models_Registrations_RegistrationSummary::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAICredas_Api_Models_Registrations_RegistrationSummary::is_id_Set() const{
    return m_id_isSet;
}

bool OAICredas_Api_Models_Registrations_RegistrationSummary::is_id_Valid() const{
    return m_id_isValid;
}

QList<OAICredas_Api_Models_Registrations_IdDocumentSummary> OAICredas_Api_Models_Registrations_RegistrationSummary::getIdDocuments() const {
    return m_id_documents;
}
void OAICredas_Api_Models_Registrations_RegistrationSummary::setIdDocuments(const QList<OAICredas_Api_Models_Registrations_IdDocumentSummary> &id_documents) {
    m_id_documents = id_documents;
    m_id_documents_isSet = true;
}

bool OAICredas_Api_Models_Registrations_RegistrationSummary::is_id_documents_Set() const{
    return m_id_documents_isSet;
}

bool OAICredas_Api_Models_Registrations_RegistrationSummary::is_id_documents_Valid() const{
    return m_id_documents_isValid;
}

OAICredas_Api_Models_Registrations_IdVerification OAICredas_Api_Models_Registrations_RegistrationSummary::getIdVerification() const {
    return m_id_verification;
}
void OAICredas_Api_Models_Registrations_RegistrationSummary::setIdVerification(const OAICredas_Api_Models_Registrations_IdVerification &id_verification) {
    m_id_verification = id_verification;
    m_id_verification_isSet = true;
}

bool OAICredas_Api_Models_Registrations_RegistrationSummary::is_id_verification_Set() const{
    return m_id_verification_isSet;
}

bool OAICredas_Api_Models_Registrations_RegistrationSummary::is_id_verification_Valid() const{
    return m_id_verification_isValid;
}

bool OAICredas_Api_Models_Registrations_RegistrationSummary::isIsAgentLed() const {
    return m_is_agent_led;
}
void OAICredas_Api_Models_Registrations_RegistrationSummary::setIsAgentLed(const bool &is_agent_led) {
    m_is_agent_led = is_agent_led;
    m_is_agent_led_isSet = true;
}

bool OAICredas_Api_Models_Registrations_RegistrationSummary::is_is_agent_led_Set() const{
    return m_is_agent_led_isSet;
}

bool OAICredas_Api_Models_Registrations_RegistrationSummary::is_is_agent_led_Valid() const{
    return m_is_agent_led_isValid;
}

qint32 OAICredas_Api_Models_Registrations_RegistrationSummary::getLivenessMethod() const {
    return m_liveness_method;
}
void OAICredas_Api_Models_Registrations_RegistrationSummary::setLivenessMethod(const qint32 &liveness_method) {
    m_liveness_method = liveness_method;
    m_liveness_method_isSet = true;
}

bool OAICredas_Api_Models_Registrations_RegistrationSummary::is_liveness_method_Set() const{
    return m_liveness_method_isSet;
}

bool OAICredas_Api_Models_Registrations_RegistrationSummary::is_liveness_method_Valid() const{
    return m_liveness_method_isValid;
}

qint32 OAICredas_Api_Models_Registrations_RegistrationSummary::getLivenessStatus() const {
    return m_liveness_status;
}
void OAICredas_Api_Models_Registrations_RegistrationSummary::setLivenessStatus(const qint32 &liveness_status) {
    m_liveness_status = liveness_status;
    m_liveness_status_isSet = true;
}

bool OAICredas_Api_Models_Registrations_RegistrationSummary::is_liveness_status_Set() const{
    return m_liveness_status_isSet;
}

bool OAICredas_Api_Models_Registrations_RegistrationSummary::is_liveness_status_Valid() const{
    return m_liveness_status_isValid;
}

bool OAICredas_Api_Models_Registrations_RegistrationSummary::isLivenessVerified() const {
    return m_liveness_verified;
}
void OAICredas_Api_Models_Registrations_RegistrationSummary::setLivenessVerified(const bool &liveness_verified) {
    m_liveness_verified = liveness_verified;
    m_liveness_verified_isSet = true;
}

bool OAICredas_Api_Models_Registrations_RegistrationSummary::is_liveness_verified_Set() const{
    return m_liveness_verified_isSet;
}

bool OAICredas_Api_Models_Registrations_RegistrationSummary::is_liveness_verified_Valid() const{
    return m_liveness_verified_isValid;
}

QString OAICredas_Api_Models_Registrations_RegistrationSummary::getMiddleName() const {
    return m_middle_name;
}
void OAICredas_Api_Models_Registrations_RegistrationSummary::setMiddleName(const QString &middle_name) {
    m_middle_name = middle_name;
    m_middle_name_isSet = true;
}

bool OAICredas_Api_Models_Registrations_RegistrationSummary::is_middle_name_Set() const{
    return m_middle_name_isSet;
}

bool OAICredas_Api_Models_Registrations_RegistrationSummary::is_middle_name_Valid() const{
    return m_middle_name_isValid;
}

OAICredas_Api_Models_Registrations_PersonalDetails OAICredas_Api_Models_Registrations_RegistrationSummary::getPersonalDetails() const {
    return m_personal_details;
}
void OAICredas_Api_Models_Registrations_RegistrationSummary::setPersonalDetails(const OAICredas_Api_Models_Registrations_PersonalDetails &personal_details) {
    m_personal_details = personal_details;
    m_personal_details_isSet = true;
}

bool OAICredas_Api_Models_Registrations_RegistrationSummary::is_personal_details_Set() const{
    return m_personal_details_isSet;
}

bool OAICredas_Api_Models_Registrations_RegistrationSummary::is_personal_details_Valid() const{
    return m_personal_details_isValid;
}

QString OAICredas_Api_Models_Registrations_RegistrationSummary::getPhoneNumber() const {
    return m_phone_number;
}
void OAICredas_Api_Models_Registrations_RegistrationSummary::setPhoneNumber(const QString &phone_number) {
    m_phone_number = phone_number;
    m_phone_number_isSet = true;
}

bool OAICredas_Api_Models_Registrations_RegistrationSummary::is_phone_number_Set() const{
    return m_phone_number_isSet;
}

bool OAICredas_Api_Models_Registrations_RegistrationSummary::is_phone_number_Valid() const{
    return m_phone_number_isValid;
}

OAICredas_Api_Models_PropertyRegister_PropertyRegisterCheckResponse OAICredas_Api_Models_Registrations_RegistrationSummary::getProofOfOwnershipCheck() const {
    return m_proof_of_ownership_check;
}
void OAICredas_Api_Models_Registrations_RegistrationSummary::setProofOfOwnershipCheck(const OAICredas_Api_Models_PropertyRegister_PropertyRegisterCheckResponse &proof_of_ownership_check) {
    m_proof_of_ownership_check = proof_of_ownership_check;
    m_proof_of_ownership_check_isSet = true;
}

bool OAICredas_Api_Models_Registrations_RegistrationSummary::is_proof_of_ownership_check_Set() const{
    return m_proof_of_ownership_check_isSet;
}

bool OAICredas_Api_Models_Registrations_RegistrationSummary::is_proof_of_ownership_check_Valid() const{
    return m_proof_of_ownership_check_isValid;
}

QString OAICredas_Api_Models_Registrations_RegistrationSummary::getReferenceId() const {
    return m_reference_id;
}
void OAICredas_Api_Models_Registrations_RegistrationSummary::setReferenceId(const QString &reference_id) {
    m_reference_id = reference_id;
    m_reference_id_isSet = true;
}

bool OAICredas_Api_Models_Registrations_RegistrationSummary::is_reference_id_Set() const{
    return m_reference_id_isSet;
}

bool OAICredas_Api_Models_Registrations_RegistrationSummary::is_reference_id_Valid() const{
    return m_reference_id_isValid;
}

QString OAICredas_Api_Models_Registrations_RegistrationSummary::getRegCode() const {
    return m_reg_code;
}
void OAICredas_Api_Models_Registrations_RegistrationSummary::setRegCode(const QString &reg_code) {
    m_reg_code = reg_code;
    m_reg_code_isSet = true;
}

bool OAICredas_Api_Models_Registrations_RegistrationSummary::is_reg_code_Set() const{
    return m_reg_code_isSet;
}

bool OAICredas_Api_Models_Registrations_RegistrationSummary::is_reg_code_Valid() const{
    return m_reg_code_isValid;
}

QString OAICredas_Api_Models_Registrations_RegistrationSummary::getRegTypeId() const {
    return m_reg_type_id;
}
void OAICredas_Api_Models_Registrations_RegistrationSummary::setRegTypeId(const QString &reg_type_id) {
    m_reg_type_id = reg_type_id;
    m_reg_type_id_isSet = true;
}

bool OAICredas_Api_Models_Registrations_RegistrationSummary::is_reg_type_id_Set() const{
    return m_reg_type_id_isSet;
}

bool OAICredas_Api_Models_Registrations_RegistrationSummary::is_reg_type_id_Valid() const{
    return m_reg_type_id_isValid;
}

OAICredas_Api_Models_Registrations_SettlementStatus OAICredas_Api_Models_Registrations_RegistrationSummary::getRightToRentCheck() const {
    return m_right_to_rent_check;
}
void OAICredas_Api_Models_Registrations_RegistrationSummary::setRightToRentCheck(const OAICredas_Api_Models_Registrations_SettlementStatus &right_to_rent_check) {
    m_right_to_rent_check = right_to_rent_check;
    m_right_to_rent_check_isSet = true;
}

bool OAICredas_Api_Models_Registrations_RegistrationSummary::is_right_to_rent_check_Set() const{
    return m_right_to_rent_check_isSet;
}

bool OAICredas_Api_Models_Registrations_RegistrationSummary::is_right_to_rent_check_Valid() const{
    return m_right_to_rent_check_isValid;
}

OAICredas_Api_Models_Registrations_SettlementStatus OAICredas_Api_Models_Registrations_RegistrationSummary::getRightToWorkCheck() const {
    return m_right_to_work_check;
}
void OAICredas_Api_Models_Registrations_RegistrationSummary::setRightToWorkCheck(const OAICredas_Api_Models_Registrations_SettlementStatus &right_to_work_check) {
    m_right_to_work_check = right_to_work_check;
    m_right_to_work_check_isSet = true;
}

bool OAICredas_Api_Models_Registrations_RegistrationSummary::is_right_to_work_check_Set() const{
    return m_right_to_work_check_isSet;
}

bool OAICredas_Api_Models_Registrations_RegistrationSummary::is_right_to_work_check_Valid() const{
    return m_right_to_work_check_isValid;
}

qint32 OAICredas_Api_Models_Registrations_RegistrationSummary::getRightToWorkDocumentsProvided() const {
    return m_right_to_work_documents_provided;
}
void OAICredas_Api_Models_Registrations_RegistrationSummary::setRightToWorkDocumentsProvided(const qint32 &right_to_work_documents_provided) {
    m_right_to_work_documents_provided = right_to_work_documents_provided;
    m_right_to_work_documents_provided_isSet = true;
}

bool OAICredas_Api_Models_Registrations_RegistrationSummary::is_right_to_work_documents_provided_Set() const{
    return m_right_to_work_documents_provided_isSet;
}

bool OAICredas_Api_Models_Registrations_RegistrationSummary::is_right_to_work_documents_provided_Valid() const{
    return m_right_to_work_documents_provided_isValid;
}

QDateTime OAICredas_Api_Models_Registrations_RegistrationSummary::getSafeHarbourVerifiedDate() const {
    return m_safe_harbour_verified_date;
}
void OAICredas_Api_Models_Registrations_RegistrationSummary::setSafeHarbourVerifiedDate(const QDateTime &safe_harbour_verified_date) {
    m_safe_harbour_verified_date = safe_harbour_verified_date;
    m_safe_harbour_verified_date_isSet = true;
}

bool OAICredas_Api_Models_Registrations_RegistrationSummary::is_safe_harbour_verified_date_Set() const{
    return m_safe_harbour_verified_date_isSet;
}

bool OAICredas_Api_Models_Registrations_RegistrationSummary::is_safe_harbour_verified_date_Valid() const{
    return m_safe_harbour_verified_date_isValid;
}

qint32 OAICredas_Api_Models_Registrations_RegistrationSummary::getSafeHarbourVerifiedStatus() const {
    return m_safe_harbour_verified_status;
}
void OAICredas_Api_Models_Registrations_RegistrationSummary::setSafeHarbourVerifiedStatus(const qint32 &safe_harbour_verified_status) {
    m_safe_harbour_verified_status = safe_harbour_verified_status;
    m_safe_harbour_verified_status_isSet = true;
}

bool OAICredas_Api_Models_Registrations_RegistrationSummary::is_safe_harbour_verified_status_Set() const{
    return m_safe_harbour_verified_status_isSet;
}

bool OAICredas_Api_Models_Registrations_RegistrationSummary::is_safe_harbour_verified_status_Valid() const{
    return m_safe_harbour_verified_status_isValid;
}

qint32 OAICredas_Api_Models_Registrations_RegistrationSummary::getStatus() const {
    return m_status;
}
void OAICredas_Api_Models_Registrations_RegistrationSummary::setStatus(const qint32 &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAICredas_Api_Models_Registrations_RegistrationSummary::is_status_Set() const{
    return m_status_isSet;
}

bool OAICredas_Api_Models_Registrations_RegistrationSummary::is_status_Valid() const{
    return m_status_isValid;
}

QString OAICredas_Api_Models_Registrations_RegistrationSummary::getSurname() const {
    return m_surname;
}
void OAICredas_Api_Models_Registrations_RegistrationSummary::setSurname(const QString &surname) {
    m_surname = surname;
    m_surname_isSet = true;
}

bool OAICredas_Api_Models_Registrations_RegistrationSummary::is_surname_Set() const{
    return m_surname_isSet;
}

bool OAICredas_Api_Models_Registrations_RegistrationSummary::is_surname_Valid() const{
    return m_surname_isValid;
}

bool OAICredas_Api_Models_Registrations_RegistrationSummary::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_comments.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_by_agency_user_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ditf_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ditf_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_expired_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_verified_in_app_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_bank_account_checks.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_by_agency_user_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_credit_status_check.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_custom_terms_accepted_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_custom_terms_accepted_date_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_custom_terms_accepted_version_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_data_check_result_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_data_check_sources.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_data_checks_performed_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_completed_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_created_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_forename_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_has_liveness_performed_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_has_selfie_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_documents.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_verification.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_agent_led_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_liveness_method_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_liveness_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_liveness_verified_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_middle_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_personal_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_phone_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_proof_of_ownership_check.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_reference_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_reg_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_reg_type_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_right_to_rent_check.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_right_to_work_check.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_right_to_work_documents_provided_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_safe_harbour_verified_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_safe_harbour_verified_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_surname_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICredas_Api_Models_Registrations_RegistrationSummary::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_data_check_result_isValid && m_data_checks_performed_isValid && m_date_created_isValid && m_forename_isValid && m_id_isValid && m_liveness_status_isValid && m_liveness_verified_isValid && m_reg_code_isValid && m_reg_type_id_isValid && m_right_to_work_documents_provided_isValid && m_status_isValid && m_surname_isValid && true;
}

} // namespace OpenAPI
