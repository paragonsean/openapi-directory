/**
 * Credas API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICredas_Api_Models_StatusChecks_CompanyDirector_CompanyAppointment.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICredas_Api_Models_StatusChecks_CompanyDirector_CompanyAppointment::OAICredas_Api_Models_StatusChecks_CompanyDirector_CompanyAppointment(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICredas_Api_Models_StatusChecks_CompanyDirector_CompanyAppointment::OAICredas_Api_Models_StatusChecks_CompanyDirector_CompanyAppointment() {
    this->initializeModel();
}

OAICredas_Api_Models_StatusChecks_CompanyDirector_CompanyAppointment::~OAICredas_Api_Models_StatusChecks_CompanyDirector_CompanyAppointment() {}

void OAICredas_Api_Models_StatusChecks_CompanyDirector_CompanyAppointment::initializeModel() {

    m_address_isSet = false;
    m_address_isValid = false;

    m_appointment_date_isSet = false;
    m_appointment_date_isValid = false;

    m_appointment_type_isSet = false;
    m_appointment_type_isValid = false;

    m_dob_isSet = false;
    m_dob_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_nationality_isSet = false;
    m_nationality_isValid = false;

    m_occupation_isSet = false;
    m_occupation_isValid = false;

    m_title_isSet = false;
    m_title_isValid = false;
}

void OAICredas_Api_Models_StatusChecks_CompanyDirector_CompanyAppointment::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICredas_Api_Models_StatusChecks_CompanyDirector_CompanyAppointment::fromJsonObject(QJsonObject json) {

    m_address_isValid = ::OpenAPI::fromJsonValue(m_address, json[QString("address")]);
    m_address_isSet = !json[QString("address")].isNull() && m_address_isValid;

    m_appointment_date_isValid = ::OpenAPI::fromJsonValue(m_appointment_date, json[QString("appointmentDate")]);
    m_appointment_date_isSet = !json[QString("appointmentDate")].isNull() && m_appointment_date_isValid;

    m_appointment_type_isValid = ::OpenAPI::fromJsonValue(m_appointment_type, json[QString("appointmentType")]);
    m_appointment_type_isSet = !json[QString("appointmentType")].isNull() && m_appointment_type_isValid;

    m_dob_isValid = ::OpenAPI::fromJsonValue(m_dob, json[QString("dob")]);
    m_dob_isSet = !json[QString("dob")].isNull() && m_dob_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_nationality_isValid = ::OpenAPI::fromJsonValue(m_nationality, json[QString("nationality")]);
    m_nationality_isSet = !json[QString("nationality")].isNull() && m_nationality_isValid;

    m_occupation_isValid = ::OpenAPI::fromJsonValue(m_occupation, json[QString("occupation")]);
    m_occupation_isSet = !json[QString("occupation")].isNull() && m_occupation_isValid;

    m_title_isValid = ::OpenAPI::fromJsonValue(m_title, json[QString("title")]);
    m_title_isSet = !json[QString("title")].isNull() && m_title_isValid;
}

QString OAICredas_Api_Models_StatusChecks_CompanyDirector_CompanyAppointment::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICredas_Api_Models_StatusChecks_CompanyDirector_CompanyAppointment::asJsonObject() const {
    QJsonObject obj;
    if (m_address_isSet) {
        obj.insert(QString("address"), ::OpenAPI::toJsonValue(m_address));
    }
    if (m_appointment_date_isSet) {
        obj.insert(QString("appointmentDate"), ::OpenAPI::toJsonValue(m_appointment_date));
    }
    if (m_appointment_type_isSet) {
        obj.insert(QString("appointmentType"), ::OpenAPI::toJsonValue(m_appointment_type));
    }
    if (m_dob_isSet) {
        obj.insert(QString("dob"), ::OpenAPI::toJsonValue(m_dob));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_nationality_isSet) {
        obj.insert(QString("nationality"), ::OpenAPI::toJsonValue(m_nationality));
    }
    if (m_occupation_isSet) {
        obj.insert(QString("occupation"), ::OpenAPI::toJsonValue(m_occupation));
    }
    if (m_title_isSet) {
        obj.insert(QString("title"), ::OpenAPI::toJsonValue(m_title));
    }
    return obj;
}

QString OAICredas_Api_Models_StatusChecks_CompanyDirector_CompanyAppointment::getAddress() const {
    return m_address;
}
void OAICredas_Api_Models_StatusChecks_CompanyDirector_CompanyAppointment::setAddress(const QString &address) {
    m_address = address;
    m_address_isSet = true;
}

bool OAICredas_Api_Models_StatusChecks_CompanyDirector_CompanyAppointment::is_address_Set() const{
    return m_address_isSet;
}

bool OAICredas_Api_Models_StatusChecks_CompanyDirector_CompanyAppointment::is_address_Valid() const{
    return m_address_isValid;
}

QDateTime OAICredas_Api_Models_StatusChecks_CompanyDirector_CompanyAppointment::getAppointmentDate() const {
    return m_appointment_date;
}
void OAICredas_Api_Models_StatusChecks_CompanyDirector_CompanyAppointment::setAppointmentDate(const QDateTime &appointment_date) {
    m_appointment_date = appointment_date;
    m_appointment_date_isSet = true;
}

bool OAICredas_Api_Models_StatusChecks_CompanyDirector_CompanyAppointment::is_appointment_date_Set() const{
    return m_appointment_date_isSet;
}

bool OAICredas_Api_Models_StatusChecks_CompanyDirector_CompanyAppointment::is_appointment_date_Valid() const{
    return m_appointment_date_isValid;
}

QString OAICredas_Api_Models_StatusChecks_CompanyDirector_CompanyAppointment::getAppointmentType() const {
    return m_appointment_type;
}
void OAICredas_Api_Models_StatusChecks_CompanyDirector_CompanyAppointment::setAppointmentType(const QString &appointment_type) {
    m_appointment_type = appointment_type;
    m_appointment_type_isSet = true;
}

bool OAICredas_Api_Models_StatusChecks_CompanyDirector_CompanyAppointment::is_appointment_type_Set() const{
    return m_appointment_type_isSet;
}

bool OAICredas_Api_Models_StatusChecks_CompanyDirector_CompanyAppointment::is_appointment_type_Valid() const{
    return m_appointment_type_isValid;
}

QDateTime OAICredas_Api_Models_StatusChecks_CompanyDirector_CompanyAppointment::getDob() const {
    return m_dob;
}
void OAICredas_Api_Models_StatusChecks_CompanyDirector_CompanyAppointment::setDob(const QDateTime &dob) {
    m_dob = dob;
    m_dob_isSet = true;
}

bool OAICredas_Api_Models_StatusChecks_CompanyDirector_CompanyAppointment::is_dob_Set() const{
    return m_dob_isSet;
}

bool OAICredas_Api_Models_StatusChecks_CompanyDirector_CompanyAppointment::is_dob_Valid() const{
    return m_dob_isValid;
}

QString OAICredas_Api_Models_StatusChecks_CompanyDirector_CompanyAppointment::getName() const {
    return m_name;
}
void OAICredas_Api_Models_StatusChecks_CompanyDirector_CompanyAppointment::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAICredas_Api_Models_StatusChecks_CompanyDirector_CompanyAppointment::is_name_Set() const{
    return m_name_isSet;
}

bool OAICredas_Api_Models_StatusChecks_CompanyDirector_CompanyAppointment::is_name_Valid() const{
    return m_name_isValid;
}

QString OAICredas_Api_Models_StatusChecks_CompanyDirector_CompanyAppointment::getNationality() const {
    return m_nationality;
}
void OAICredas_Api_Models_StatusChecks_CompanyDirector_CompanyAppointment::setNationality(const QString &nationality) {
    m_nationality = nationality;
    m_nationality_isSet = true;
}

bool OAICredas_Api_Models_StatusChecks_CompanyDirector_CompanyAppointment::is_nationality_Set() const{
    return m_nationality_isSet;
}

bool OAICredas_Api_Models_StatusChecks_CompanyDirector_CompanyAppointment::is_nationality_Valid() const{
    return m_nationality_isValid;
}

QString OAICredas_Api_Models_StatusChecks_CompanyDirector_CompanyAppointment::getOccupation() const {
    return m_occupation;
}
void OAICredas_Api_Models_StatusChecks_CompanyDirector_CompanyAppointment::setOccupation(const QString &occupation) {
    m_occupation = occupation;
    m_occupation_isSet = true;
}

bool OAICredas_Api_Models_StatusChecks_CompanyDirector_CompanyAppointment::is_occupation_Set() const{
    return m_occupation_isSet;
}

bool OAICredas_Api_Models_StatusChecks_CompanyDirector_CompanyAppointment::is_occupation_Valid() const{
    return m_occupation_isValid;
}

QString OAICredas_Api_Models_StatusChecks_CompanyDirector_CompanyAppointment::getTitle() const {
    return m_title;
}
void OAICredas_Api_Models_StatusChecks_CompanyDirector_CompanyAppointment::setTitle(const QString &title) {
    m_title = title;
    m_title_isSet = true;
}

bool OAICredas_Api_Models_StatusChecks_CompanyDirector_CompanyAppointment::is_title_Set() const{
    return m_title_isSet;
}

bool OAICredas_Api_Models_StatusChecks_CompanyDirector_CompanyAppointment::is_title_Valid() const{
    return m_title_isValid;
}

bool OAICredas_Api_Models_StatusChecks_CompanyDirector_CompanyAppointment::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_appointment_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_appointment_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_dob_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_nationality_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_occupation_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_title_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICredas_Api_Models_StatusChecks_CompanyDirector_CompanyAppointment::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
