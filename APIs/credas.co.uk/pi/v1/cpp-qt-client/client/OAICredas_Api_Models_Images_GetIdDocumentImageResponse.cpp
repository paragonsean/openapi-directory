/**
 * Credas API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICredas_Api_Models_Images_GetIdDocumentImageResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICredas_Api_Models_Images_GetIdDocumentImageResponse::OAICredas_Api_Models_Images_GetIdDocumentImageResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICredas_Api_Models_Images_GetIdDocumentImageResponse::OAICredas_Api_Models_Images_GetIdDocumentImageResponse() {
    this->initializeModel();
}

OAICredas_Api_Models_Images_GetIdDocumentImageResponse::~OAICredas_Api_Models_Images_GetIdDocumentImageResponse() {}

void OAICredas_Api_Models_Images_GetIdDocumentImageResponse::initializeModel() {

    m_address_city_isSet = false;
    m_address_city_isValid = false;

    m_address_full_isSet = false;
    m_address_full_isValid = false;

    m_address_postcode_isSet = false;
    m_address_postcode_isValid = false;

    m_country_isSet = false;
    m_country_isValid = false;

    m_country_code_isSet = false;
    m_country_code_isValid = false;

    m_date_created_isSet = false;
    m_date_created_isValid = false;

    m_date_of_birth_isSet = false;
    m_date_of_birth_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_document_analysis_result_isSet = false;
    m_document_analysis_result_isValid = false;

    m_document_number_isSet = false;
    m_document_number_isValid = false;

    m_document_side_isSet = false;
    m_document_side_isValid = false;

    m_expiry_date_isSet = false;
    m_expiry_date_isValid = false;

    m_facial_match_isSet = false;
    m_facial_match_isValid = false;

    m_forename_isSet = false;
    m_forename_isValid = false;

    m_full_name_isSet = false;
    m_full_name_isValid = false;

    m_hi_res_url_isSet = false;
    m_hi_res_url_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_is_under_review_isSet = false;
    m_is_under_review_isValid = false;

    m_manually_verified_isSet = false;
    m_manually_verified_isValid = false;

    m_middle_name_isSet = false;
    m_middle_name_isValid = false;

    m_mrz1_isSet = false;
    m_mrz1_isValid = false;

    m_mrz2_isSet = false;
    m_mrz2_isValid = false;

    m_mrz3_isSet = false;
    m_mrz3_isValid = false;

    m_name_check_isSet = false;
    m_name_check_isValid = false;

    m_name_check_method_isSet = false;
    m_name_check_method_isValid = false;

    m_nfc_check_isSet = false;
    m_nfc_check_isValid = false;

    m_nfc_facial_url_isSet = false;
    m_nfc_facial_url_isValid = false;

    m_nfc_read_status_isSet = false;
    m_nfc_read_status_isValid = false;

    m_primary_scan_id_isSet = false;
    m_primary_scan_id_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_surname_isSet = false;
    m_surname_isValid = false;

    m_url_isSet = false;
    m_url_isValid = false;
}

void OAICredas_Api_Models_Images_GetIdDocumentImageResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICredas_Api_Models_Images_GetIdDocumentImageResponse::fromJsonObject(QJsonObject json) {

    m_address_city_isValid = ::OpenAPI::fromJsonValue(m_address_city, json[QString("addressCity")]);
    m_address_city_isSet = !json[QString("addressCity")].isNull() && m_address_city_isValid;

    m_address_full_isValid = ::OpenAPI::fromJsonValue(m_address_full, json[QString("addressFull")]);
    m_address_full_isSet = !json[QString("addressFull")].isNull() && m_address_full_isValid;

    m_address_postcode_isValid = ::OpenAPI::fromJsonValue(m_address_postcode, json[QString("addressPostcode")]);
    m_address_postcode_isSet = !json[QString("addressPostcode")].isNull() && m_address_postcode_isValid;

    m_country_isValid = ::OpenAPI::fromJsonValue(m_country, json[QString("country")]);
    m_country_isSet = !json[QString("country")].isNull() && m_country_isValid;

    m_country_code_isValid = ::OpenAPI::fromJsonValue(m_country_code, json[QString("countryCode")]);
    m_country_code_isSet = !json[QString("countryCode")].isNull() && m_country_code_isValid;

    m_date_created_isValid = ::OpenAPI::fromJsonValue(m_date_created, json[QString("dateCreated")]);
    m_date_created_isSet = !json[QString("dateCreated")].isNull() && m_date_created_isValid;

    m_date_of_birth_isValid = ::OpenAPI::fromJsonValue(m_date_of_birth, json[QString("dateOfBirth")]);
    m_date_of_birth_isSet = !json[QString("dateOfBirth")].isNull() && m_date_of_birth_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_document_analysis_result_isValid = ::OpenAPI::fromJsonValue(m_document_analysis_result, json[QString("documentAnalysisResult")]);
    m_document_analysis_result_isSet = !json[QString("documentAnalysisResult")].isNull() && m_document_analysis_result_isValid;

    m_document_number_isValid = ::OpenAPI::fromJsonValue(m_document_number, json[QString("documentNumber")]);
    m_document_number_isSet = !json[QString("documentNumber")].isNull() && m_document_number_isValid;

    m_document_side_isValid = ::OpenAPI::fromJsonValue(m_document_side, json[QString("documentSide")]);
    m_document_side_isSet = !json[QString("documentSide")].isNull() && m_document_side_isValid;

    m_expiry_date_isValid = ::OpenAPI::fromJsonValue(m_expiry_date, json[QString("expiryDate")]);
    m_expiry_date_isSet = !json[QString("expiryDate")].isNull() && m_expiry_date_isValid;

    m_facial_match_isValid = ::OpenAPI::fromJsonValue(m_facial_match, json[QString("facialMatch")]);
    m_facial_match_isSet = !json[QString("facialMatch")].isNull() && m_facial_match_isValid;

    m_forename_isValid = ::OpenAPI::fromJsonValue(m_forename, json[QString("forename")]);
    m_forename_isSet = !json[QString("forename")].isNull() && m_forename_isValid;

    m_full_name_isValid = ::OpenAPI::fromJsonValue(m_full_name, json[QString("fullName")]);
    m_full_name_isSet = !json[QString("fullName")].isNull() && m_full_name_isValid;

    m_hi_res_url_isValid = ::OpenAPI::fromJsonValue(m_hi_res_url, json[QString("hiResUrl")]);
    m_hi_res_url_isSet = !json[QString("hiResUrl")].isNull() && m_hi_res_url_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_is_under_review_isValid = ::OpenAPI::fromJsonValue(m_is_under_review, json[QString("isUnderReview")]);
    m_is_under_review_isSet = !json[QString("isUnderReview")].isNull() && m_is_under_review_isValid;

    m_manually_verified_isValid = ::OpenAPI::fromJsonValue(m_manually_verified, json[QString("manuallyVerified")]);
    m_manually_verified_isSet = !json[QString("manuallyVerified")].isNull() && m_manually_verified_isValid;

    m_middle_name_isValid = ::OpenAPI::fromJsonValue(m_middle_name, json[QString("middleName")]);
    m_middle_name_isSet = !json[QString("middleName")].isNull() && m_middle_name_isValid;

    m_mrz1_isValid = ::OpenAPI::fromJsonValue(m_mrz1, json[QString("mrz1")]);
    m_mrz1_isSet = !json[QString("mrz1")].isNull() && m_mrz1_isValid;

    m_mrz2_isValid = ::OpenAPI::fromJsonValue(m_mrz2, json[QString("mrz2")]);
    m_mrz2_isSet = !json[QString("mrz2")].isNull() && m_mrz2_isValid;

    m_mrz3_isValid = ::OpenAPI::fromJsonValue(m_mrz3, json[QString("mrz3")]);
    m_mrz3_isSet = !json[QString("mrz3")].isNull() && m_mrz3_isValid;

    m_name_check_isValid = ::OpenAPI::fromJsonValue(m_name_check, json[QString("nameCheck")]);
    m_name_check_isSet = !json[QString("nameCheck")].isNull() && m_name_check_isValid;

    m_name_check_method_isValid = ::OpenAPI::fromJsonValue(m_name_check_method, json[QString("nameCheckMethod")]);
    m_name_check_method_isSet = !json[QString("nameCheckMethod")].isNull() && m_name_check_method_isValid;

    m_nfc_check_isValid = ::OpenAPI::fromJsonValue(m_nfc_check, json[QString("nfcCheck")]);
    m_nfc_check_isSet = !json[QString("nfcCheck")].isNull() && m_nfc_check_isValid;

    m_nfc_facial_url_isValid = ::OpenAPI::fromJsonValue(m_nfc_facial_url, json[QString("nfcFacialUrl")]);
    m_nfc_facial_url_isSet = !json[QString("nfcFacialUrl")].isNull() && m_nfc_facial_url_isValid;

    m_nfc_read_status_isValid = ::OpenAPI::fromJsonValue(m_nfc_read_status, json[QString("nfcReadStatus")]);
    m_nfc_read_status_isSet = !json[QString("nfcReadStatus")].isNull() && m_nfc_read_status_isValid;

    m_primary_scan_id_isValid = ::OpenAPI::fromJsonValue(m_primary_scan_id, json[QString("primaryScanId")]);
    m_primary_scan_id_isSet = !json[QString("primaryScanId")].isNull() && m_primary_scan_id_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_surname_isValid = ::OpenAPI::fromJsonValue(m_surname, json[QString("surname")]);
    m_surname_isSet = !json[QString("surname")].isNull() && m_surname_isValid;

    m_url_isValid = ::OpenAPI::fromJsonValue(m_url, json[QString("url")]);
    m_url_isSet = !json[QString("url")].isNull() && m_url_isValid;
}

QString OAICredas_Api_Models_Images_GetIdDocumentImageResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICredas_Api_Models_Images_GetIdDocumentImageResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_address_city_isSet) {
        obj.insert(QString("addressCity"), ::OpenAPI::toJsonValue(m_address_city));
    }
    if (m_address_full_isSet) {
        obj.insert(QString("addressFull"), ::OpenAPI::toJsonValue(m_address_full));
    }
    if (m_address_postcode_isSet) {
        obj.insert(QString("addressPostcode"), ::OpenAPI::toJsonValue(m_address_postcode));
    }
    if (m_country_isSet) {
        obj.insert(QString("country"), ::OpenAPI::toJsonValue(m_country));
    }
    if (m_country_code_isSet) {
        obj.insert(QString("countryCode"), ::OpenAPI::toJsonValue(m_country_code));
    }
    if (m_date_created_isSet) {
        obj.insert(QString("dateCreated"), ::OpenAPI::toJsonValue(m_date_created));
    }
    if (m_date_of_birth_isSet) {
        obj.insert(QString("dateOfBirth"), ::OpenAPI::toJsonValue(m_date_of_birth));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_document_analysis_result_isSet) {
        obj.insert(QString("documentAnalysisResult"), ::OpenAPI::toJsonValue(m_document_analysis_result));
    }
    if (m_document_number_isSet) {
        obj.insert(QString("documentNumber"), ::OpenAPI::toJsonValue(m_document_number));
    }
    if (m_document_side_isSet) {
        obj.insert(QString("documentSide"), ::OpenAPI::toJsonValue(m_document_side));
    }
    if (m_expiry_date_isSet) {
        obj.insert(QString("expiryDate"), ::OpenAPI::toJsonValue(m_expiry_date));
    }
    if (m_facial_match_isSet) {
        obj.insert(QString("facialMatch"), ::OpenAPI::toJsonValue(m_facial_match));
    }
    if (m_forename_isSet) {
        obj.insert(QString("forename"), ::OpenAPI::toJsonValue(m_forename));
    }
    if (m_full_name_isSet) {
        obj.insert(QString("fullName"), ::OpenAPI::toJsonValue(m_full_name));
    }
    if (m_hi_res_url_isSet) {
        obj.insert(QString("hiResUrl"), ::OpenAPI::toJsonValue(m_hi_res_url));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_is_under_review_isSet) {
        obj.insert(QString("isUnderReview"), ::OpenAPI::toJsonValue(m_is_under_review));
    }
    if (m_manually_verified_isSet) {
        obj.insert(QString("manuallyVerified"), ::OpenAPI::toJsonValue(m_manually_verified));
    }
    if (m_middle_name_isSet) {
        obj.insert(QString("middleName"), ::OpenAPI::toJsonValue(m_middle_name));
    }
    if (m_mrz1_isSet) {
        obj.insert(QString("mrz1"), ::OpenAPI::toJsonValue(m_mrz1));
    }
    if (m_mrz2_isSet) {
        obj.insert(QString("mrz2"), ::OpenAPI::toJsonValue(m_mrz2));
    }
    if (m_mrz3_isSet) {
        obj.insert(QString("mrz3"), ::OpenAPI::toJsonValue(m_mrz3));
    }
    if (m_name_check_isSet) {
        obj.insert(QString("nameCheck"), ::OpenAPI::toJsonValue(m_name_check));
    }
    if (m_name_check_method_isSet) {
        obj.insert(QString("nameCheckMethod"), ::OpenAPI::toJsonValue(m_name_check_method));
    }
    if (m_nfc_check_isSet) {
        obj.insert(QString("nfcCheck"), ::OpenAPI::toJsonValue(m_nfc_check));
    }
    if (m_nfc_facial_url_isSet) {
        obj.insert(QString("nfcFacialUrl"), ::OpenAPI::toJsonValue(m_nfc_facial_url));
    }
    if (m_nfc_read_status_isSet) {
        obj.insert(QString("nfcReadStatus"), ::OpenAPI::toJsonValue(m_nfc_read_status));
    }
    if (m_primary_scan_id_isSet) {
        obj.insert(QString("primaryScanId"), ::OpenAPI::toJsonValue(m_primary_scan_id));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_surname_isSet) {
        obj.insert(QString("surname"), ::OpenAPI::toJsonValue(m_surname));
    }
    if (m_url_isSet) {
        obj.insert(QString("url"), ::OpenAPI::toJsonValue(m_url));
    }
    return obj;
}

QString OAICredas_Api_Models_Images_GetIdDocumentImageResponse::getAddressCity() const {
    return m_address_city;
}
void OAICredas_Api_Models_Images_GetIdDocumentImageResponse::setAddressCity(const QString &address_city) {
    m_address_city = address_city;
    m_address_city_isSet = true;
}

bool OAICredas_Api_Models_Images_GetIdDocumentImageResponse::is_address_city_Set() const{
    return m_address_city_isSet;
}

bool OAICredas_Api_Models_Images_GetIdDocumentImageResponse::is_address_city_Valid() const{
    return m_address_city_isValid;
}

QString OAICredas_Api_Models_Images_GetIdDocumentImageResponse::getAddressFull() const {
    return m_address_full;
}
void OAICredas_Api_Models_Images_GetIdDocumentImageResponse::setAddressFull(const QString &address_full) {
    m_address_full = address_full;
    m_address_full_isSet = true;
}

bool OAICredas_Api_Models_Images_GetIdDocumentImageResponse::is_address_full_Set() const{
    return m_address_full_isSet;
}

bool OAICredas_Api_Models_Images_GetIdDocumentImageResponse::is_address_full_Valid() const{
    return m_address_full_isValid;
}

QString OAICredas_Api_Models_Images_GetIdDocumentImageResponse::getAddressPostcode() const {
    return m_address_postcode;
}
void OAICredas_Api_Models_Images_GetIdDocumentImageResponse::setAddressPostcode(const QString &address_postcode) {
    m_address_postcode = address_postcode;
    m_address_postcode_isSet = true;
}

bool OAICredas_Api_Models_Images_GetIdDocumentImageResponse::is_address_postcode_Set() const{
    return m_address_postcode_isSet;
}

bool OAICredas_Api_Models_Images_GetIdDocumentImageResponse::is_address_postcode_Valid() const{
    return m_address_postcode_isValid;
}

QString OAICredas_Api_Models_Images_GetIdDocumentImageResponse::getCountry() const {
    return m_country;
}
void OAICredas_Api_Models_Images_GetIdDocumentImageResponse::setCountry(const QString &country) {
    m_country = country;
    m_country_isSet = true;
}

bool OAICredas_Api_Models_Images_GetIdDocumentImageResponse::is_country_Set() const{
    return m_country_isSet;
}

bool OAICredas_Api_Models_Images_GetIdDocumentImageResponse::is_country_Valid() const{
    return m_country_isValid;
}

QString OAICredas_Api_Models_Images_GetIdDocumentImageResponse::getCountryCode() const {
    return m_country_code;
}
void OAICredas_Api_Models_Images_GetIdDocumentImageResponse::setCountryCode(const QString &country_code) {
    m_country_code = country_code;
    m_country_code_isSet = true;
}

bool OAICredas_Api_Models_Images_GetIdDocumentImageResponse::is_country_code_Set() const{
    return m_country_code_isSet;
}

bool OAICredas_Api_Models_Images_GetIdDocumentImageResponse::is_country_code_Valid() const{
    return m_country_code_isValid;
}

QDateTime OAICredas_Api_Models_Images_GetIdDocumentImageResponse::getDateCreated() const {
    return m_date_created;
}
void OAICredas_Api_Models_Images_GetIdDocumentImageResponse::setDateCreated(const QDateTime &date_created) {
    m_date_created = date_created;
    m_date_created_isSet = true;
}

bool OAICredas_Api_Models_Images_GetIdDocumentImageResponse::is_date_created_Set() const{
    return m_date_created_isSet;
}

bool OAICredas_Api_Models_Images_GetIdDocumentImageResponse::is_date_created_Valid() const{
    return m_date_created_isValid;
}

QDateTime OAICredas_Api_Models_Images_GetIdDocumentImageResponse::getDateOfBirth() const {
    return m_date_of_birth;
}
void OAICredas_Api_Models_Images_GetIdDocumentImageResponse::setDateOfBirth(const QDateTime &date_of_birth) {
    m_date_of_birth = date_of_birth;
    m_date_of_birth_isSet = true;
}

bool OAICredas_Api_Models_Images_GetIdDocumentImageResponse::is_date_of_birth_Set() const{
    return m_date_of_birth_isSet;
}

bool OAICredas_Api_Models_Images_GetIdDocumentImageResponse::is_date_of_birth_Valid() const{
    return m_date_of_birth_isValid;
}

QString OAICredas_Api_Models_Images_GetIdDocumentImageResponse::getDescription() const {
    return m_description;
}
void OAICredas_Api_Models_Images_GetIdDocumentImageResponse::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAICredas_Api_Models_Images_GetIdDocumentImageResponse::is_description_Set() const{
    return m_description_isSet;
}

bool OAICredas_Api_Models_Images_GetIdDocumentImageResponse::is_description_Valid() const{
    return m_description_isValid;
}

qint32 OAICredas_Api_Models_Images_GetIdDocumentImageResponse::getDocumentAnalysisResult() const {
    return m_document_analysis_result;
}
void OAICredas_Api_Models_Images_GetIdDocumentImageResponse::setDocumentAnalysisResult(const qint32 &document_analysis_result) {
    m_document_analysis_result = document_analysis_result;
    m_document_analysis_result_isSet = true;
}

bool OAICredas_Api_Models_Images_GetIdDocumentImageResponse::is_document_analysis_result_Set() const{
    return m_document_analysis_result_isSet;
}

bool OAICredas_Api_Models_Images_GetIdDocumentImageResponse::is_document_analysis_result_Valid() const{
    return m_document_analysis_result_isValid;
}

QString OAICredas_Api_Models_Images_GetIdDocumentImageResponse::getDocumentNumber() const {
    return m_document_number;
}
void OAICredas_Api_Models_Images_GetIdDocumentImageResponse::setDocumentNumber(const QString &document_number) {
    m_document_number = document_number;
    m_document_number_isSet = true;
}

bool OAICredas_Api_Models_Images_GetIdDocumentImageResponse::is_document_number_Set() const{
    return m_document_number_isSet;
}

bool OAICredas_Api_Models_Images_GetIdDocumentImageResponse::is_document_number_Valid() const{
    return m_document_number_isValid;
}

qint32 OAICredas_Api_Models_Images_GetIdDocumentImageResponse::getDocumentSide() const {
    return m_document_side;
}
void OAICredas_Api_Models_Images_GetIdDocumentImageResponse::setDocumentSide(const qint32 &document_side) {
    m_document_side = document_side;
    m_document_side_isSet = true;
}

bool OAICredas_Api_Models_Images_GetIdDocumentImageResponse::is_document_side_Set() const{
    return m_document_side_isSet;
}

bool OAICredas_Api_Models_Images_GetIdDocumentImageResponse::is_document_side_Valid() const{
    return m_document_side_isValid;
}

QDateTime OAICredas_Api_Models_Images_GetIdDocumentImageResponse::getExpiryDate() const {
    return m_expiry_date;
}
void OAICredas_Api_Models_Images_GetIdDocumentImageResponse::setExpiryDate(const QDateTime &expiry_date) {
    m_expiry_date = expiry_date;
    m_expiry_date_isSet = true;
}

bool OAICredas_Api_Models_Images_GetIdDocumentImageResponse::is_expiry_date_Set() const{
    return m_expiry_date_isSet;
}

bool OAICredas_Api_Models_Images_GetIdDocumentImageResponse::is_expiry_date_Valid() const{
    return m_expiry_date_isValid;
}

bool OAICredas_Api_Models_Images_GetIdDocumentImageResponse::isFacialMatch() const {
    return m_facial_match;
}
void OAICredas_Api_Models_Images_GetIdDocumentImageResponse::setFacialMatch(const bool &facial_match) {
    m_facial_match = facial_match;
    m_facial_match_isSet = true;
}

bool OAICredas_Api_Models_Images_GetIdDocumentImageResponse::is_facial_match_Set() const{
    return m_facial_match_isSet;
}

bool OAICredas_Api_Models_Images_GetIdDocumentImageResponse::is_facial_match_Valid() const{
    return m_facial_match_isValid;
}

QString OAICredas_Api_Models_Images_GetIdDocumentImageResponse::getForename() const {
    return m_forename;
}
void OAICredas_Api_Models_Images_GetIdDocumentImageResponse::setForename(const QString &forename) {
    m_forename = forename;
    m_forename_isSet = true;
}

bool OAICredas_Api_Models_Images_GetIdDocumentImageResponse::is_forename_Set() const{
    return m_forename_isSet;
}

bool OAICredas_Api_Models_Images_GetIdDocumentImageResponse::is_forename_Valid() const{
    return m_forename_isValid;
}

QString OAICredas_Api_Models_Images_GetIdDocumentImageResponse::getFullName() const {
    return m_full_name;
}
void OAICredas_Api_Models_Images_GetIdDocumentImageResponse::setFullName(const QString &full_name) {
    m_full_name = full_name;
    m_full_name_isSet = true;
}

bool OAICredas_Api_Models_Images_GetIdDocumentImageResponse::is_full_name_Set() const{
    return m_full_name_isSet;
}

bool OAICredas_Api_Models_Images_GetIdDocumentImageResponse::is_full_name_Valid() const{
    return m_full_name_isValid;
}

QString OAICredas_Api_Models_Images_GetIdDocumentImageResponse::getHiResUrl() const {
    return m_hi_res_url;
}
void OAICredas_Api_Models_Images_GetIdDocumentImageResponse::setHiResUrl(const QString &hi_res_url) {
    m_hi_res_url = hi_res_url;
    m_hi_res_url_isSet = true;
}

bool OAICredas_Api_Models_Images_GetIdDocumentImageResponse::is_hi_res_url_Set() const{
    return m_hi_res_url_isSet;
}

bool OAICredas_Api_Models_Images_GetIdDocumentImageResponse::is_hi_res_url_Valid() const{
    return m_hi_res_url_isValid;
}

QString OAICredas_Api_Models_Images_GetIdDocumentImageResponse::getId() const {
    return m_id;
}
void OAICredas_Api_Models_Images_GetIdDocumentImageResponse::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAICredas_Api_Models_Images_GetIdDocumentImageResponse::is_id_Set() const{
    return m_id_isSet;
}

bool OAICredas_Api_Models_Images_GetIdDocumentImageResponse::is_id_Valid() const{
    return m_id_isValid;
}

bool OAICredas_Api_Models_Images_GetIdDocumentImageResponse::isIsUnderReview() const {
    return m_is_under_review;
}
void OAICredas_Api_Models_Images_GetIdDocumentImageResponse::setIsUnderReview(const bool &is_under_review) {
    m_is_under_review = is_under_review;
    m_is_under_review_isSet = true;
}

bool OAICredas_Api_Models_Images_GetIdDocumentImageResponse::is_is_under_review_Set() const{
    return m_is_under_review_isSet;
}

bool OAICredas_Api_Models_Images_GetIdDocumentImageResponse::is_is_under_review_Valid() const{
    return m_is_under_review_isValid;
}

bool OAICredas_Api_Models_Images_GetIdDocumentImageResponse::isManuallyVerified() const {
    return m_manually_verified;
}
void OAICredas_Api_Models_Images_GetIdDocumentImageResponse::setManuallyVerified(const bool &manually_verified) {
    m_manually_verified = manually_verified;
    m_manually_verified_isSet = true;
}

bool OAICredas_Api_Models_Images_GetIdDocumentImageResponse::is_manually_verified_Set() const{
    return m_manually_verified_isSet;
}

bool OAICredas_Api_Models_Images_GetIdDocumentImageResponse::is_manually_verified_Valid() const{
    return m_manually_verified_isValid;
}

QString OAICredas_Api_Models_Images_GetIdDocumentImageResponse::getMiddleName() const {
    return m_middle_name;
}
void OAICredas_Api_Models_Images_GetIdDocumentImageResponse::setMiddleName(const QString &middle_name) {
    m_middle_name = middle_name;
    m_middle_name_isSet = true;
}

bool OAICredas_Api_Models_Images_GetIdDocumentImageResponse::is_middle_name_Set() const{
    return m_middle_name_isSet;
}

bool OAICredas_Api_Models_Images_GetIdDocumentImageResponse::is_middle_name_Valid() const{
    return m_middle_name_isValid;
}

QString OAICredas_Api_Models_Images_GetIdDocumentImageResponse::getMrz1() const {
    return m_mrz1;
}
void OAICredas_Api_Models_Images_GetIdDocumentImageResponse::setMrz1(const QString &mrz1) {
    m_mrz1 = mrz1;
    m_mrz1_isSet = true;
}

bool OAICredas_Api_Models_Images_GetIdDocumentImageResponse::is_mrz1_Set() const{
    return m_mrz1_isSet;
}

bool OAICredas_Api_Models_Images_GetIdDocumentImageResponse::is_mrz1_Valid() const{
    return m_mrz1_isValid;
}

QString OAICredas_Api_Models_Images_GetIdDocumentImageResponse::getMrz2() const {
    return m_mrz2;
}
void OAICredas_Api_Models_Images_GetIdDocumentImageResponse::setMrz2(const QString &mrz2) {
    m_mrz2 = mrz2;
    m_mrz2_isSet = true;
}

bool OAICredas_Api_Models_Images_GetIdDocumentImageResponse::is_mrz2_Set() const{
    return m_mrz2_isSet;
}

bool OAICredas_Api_Models_Images_GetIdDocumentImageResponse::is_mrz2_Valid() const{
    return m_mrz2_isValid;
}

QString OAICredas_Api_Models_Images_GetIdDocumentImageResponse::getMrz3() const {
    return m_mrz3;
}
void OAICredas_Api_Models_Images_GetIdDocumentImageResponse::setMrz3(const QString &mrz3) {
    m_mrz3 = mrz3;
    m_mrz3_isSet = true;
}

bool OAICredas_Api_Models_Images_GetIdDocumentImageResponse::is_mrz3_Set() const{
    return m_mrz3_isSet;
}

bool OAICredas_Api_Models_Images_GetIdDocumentImageResponse::is_mrz3_Valid() const{
    return m_mrz3_isValid;
}

bool OAICredas_Api_Models_Images_GetIdDocumentImageResponse::isNameCheck() const {
    return m_name_check;
}
void OAICredas_Api_Models_Images_GetIdDocumentImageResponse::setNameCheck(const bool &name_check) {
    m_name_check = name_check;
    m_name_check_isSet = true;
}

bool OAICredas_Api_Models_Images_GetIdDocumentImageResponse::is_name_check_Set() const{
    return m_name_check_isSet;
}

bool OAICredas_Api_Models_Images_GetIdDocumentImageResponse::is_name_check_Valid() const{
    return m_name_check_isValid;
}

qint32 OAICredas_Api_Models_Images_GetIdDocumentImageResponse::getNameCheckMethod() const {
    return m_name_check_method;
}
void OAICredas_Api_Models_Images_GetIdDocumentImageResponse::setNameCheckMethod(const qint32 &name_check_method) {
    m_name_check_method = name_check_method;
    m_name_check_method_isSet = true;
}

bool OAICredas_Api_Models_Images_GetIdDocumentImageResponse::is_name_check_method_Set() const{
    return m_name_check_method_isSet;
}

bool OAICredas_Api_Models_Images_GetIdDocumentImageResponse::is_name_check_method_Valid() const{
    return m_name_check_method_isValid;
}

bool OAICredas_Api_Models_Images_GetIdDocumentImageResponse::isNfcCheck() const {
    return m_nfc_check;
}
void OAICredas_Api_Models_Images_GetIdDocumentImageResponse::setNfcCheck(const bool &nfc_check) {
    m_nfc_check = nfc_check;
    m_nfc_check_isSet = true;
}

bool OAICredas_Api_Models_Images_GetIdDocumentImageResponse::is_nfc_check_Set() const{
    return m_nfc_check_isSet;
}

bool OAICredas_Api_Models_Images_GetIdDocumentImageResponse::is_nfc_check_Valid() const{
    return m_nfc_check_isValid;
}

QString OAICredas_Api_Models_Images_GetIdDocumentImageResponse::getNfcFacialUrl() const {
    return m_nfc_facial_url;
}
void OAICredas_Api_Models_Images_GetIdDocumentImageResponse::setNfcFacialUrl(const QString &nfc_facial_url) {
    m_nfc_facial_url = nfc_facial_url;
    m_nfc_facial_url_isSet = true;
}

bool OAICredas_Api_Models_Images_GetIdDocumentImageResponse::is_nfc_facial_url_Set() const{
    return m_nfc_facial_url_isSet;
}

bool OAICredas_Api_Models_Images_GetIdDocumentImageResponse::is_nfc_facial_url_Valid() const{
    return m_nfc_facial_url_isValid;
}

qint32 OAICredas_Api_Models_Images_GetIdDocumentImageResponse::getNfcReadStatus() const {
    return m_nfc_read_status;
}
void OAICredas_Api_Models_Images_GetIdDocumentImageResponse::setNfcReadStatus(const qint32 &nfc_read_status) {
    m_nfc_read_status = nfc_read_status;
    m_nfc_read_status_isSet = true;
}

bool OAICredas_Api_Models_Images_GetIdDocumentImageResponse::is_nfc_read_status_Set() const{
    return m_nfc_read_status_isSet;
}

bool OAICredas_Api_Models_Images_GetIdDocumentImageResponse::is_nfc_read_status_Valid() const{
    return m_nfc_read_status_isValid;
}

QString OAICredas_Api_Models_Images_GetIdDocumentImageResponse::getPrimaryScanId() const {
    return m_primary_scan_id;
}
void OAICredas_Api_Models_Images_GetIdDocumentImageResponse::setPrimaryScanId(const QString &primary_scan_id) {
    m_primary_scan_id = primary_scan_id;
    m_primary_scan_id_isSet = true;
}

bool OAICredas_Api_Models_Images_GetIdDocumentImageResponse::is_primary_scan_id_Set() const{
    return m_primary_scan_id_isSet;
}

bool OAICredas_Api_Models_Images_GetIdDocumentImageResponse::is_primary_scan_id_Valid() const{
    return m_primary_scan_id_isValid;
}

qint32 OAICredas_Api_Models_Images_GetIdDocumentImageResponse::getStatus() const {
    return m_status;
}
void OAICredas_Api_Models_Images_GetIdDocumentImageResponse::setStatus(const qint32 &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAICredas_Api_Models_Images_GetIdDocumentImageResponse::is_status_Set() const{
    return m_status_isSet;
}

bool OAICredas_Api_Models_Images_GetIdDocumentImageResponse::is_status_Valid() const{
    return m_status_isValid;
}

QString OAICredas_Api_Models_Images_GetIdDocumentImageResponse::getSurname() const {
    return m_surname;
}
void OAICredas_Api_Models_Images_GetIdDocumentImageResponse::setSurname(const QString &surname) {
    m_surname = surname;
    m_surname_isSet = true;
}

bool OAICredas_Api_Models_Images_GetIdDocumentImageResponse::is_surname_Set() const{
    return m_surname_isSet;
}

bool OAICredas_Api_Models_Images_GetIdDocumentImageResponse::is_surname_Valid() const{
    return m_surname_isValid;
}

QString OAICredas_Api_Models_Images_GetIdDocumentImageResponse::getUrl() const {
    return m_url;
}
void OAICredas_Api_Models_Images_GetIdDocumentImageResponse::setUrl(const QString &url) {
    m_url = url;
    m_url_isSet = true;
}

bool OAICredas_Api_Models_Images_GetIdDocumentImageResponse::is_url_Set() const{
    return m_url_isSet;
}

bool OAICredas_Api_Models_Images_GetIdDocumentImageResponse::is_url_Valid() const{
    return m_url_isValid;
}

bool OAICredas_Api_Models_Images_GetIdDocumentImageResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_address_city_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_address_full_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_address_postcode_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_country_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_country_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_created_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_of_birth_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_document_analysis_result_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_document_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_document_side_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_expiry_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_facial_match_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_forename_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_full_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_hi_res_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_under_review_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_manually_verified_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_middle_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mrz1_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mrz2_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mrz3_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_check_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_check_method_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_nfc_check_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_nfc_facial_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_nfc_read_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_primary_scan_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_surname_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICredas_Api_Models_Images_GetIdDocumentImageResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_date_created_isValid && m_description_isValid && m_facial_match_isValid && m_hi_res_url_isValid && m_id_isValid && m_name_check_isValid && m_name_check_method_isValid && m_nfc_check_isValid && m_nfc_read_status_isValid && m_status_isValid && m_url_isValid && true;
}

} // namespace OpenAPI
