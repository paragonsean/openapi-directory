openapi: 3.0.0
info:
  title: Credas API
  version: v1
  x-apisguru-categories:
  - security
  x-logo:
    url: https://www.credas.co.uk/wp-content/uploads/2018/02/favicon.png
  x-origin:
  - format: openapi
    url: https://pi-api.credas.co.uk/swagger/v1/swagger.json
    version: "3.0"
  x-providerName: credas.co.uk
  x-serviceName: pi
servers:
- url: /
paths:
  /api/bank-accounts/verify:
    post:
      operationId: verify
      parameters:
      - description: ApiKey supplied.
        explode: false
        in: header
        name: apikey
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.BankAccounts.AccountVerificationRequest'
          application/*+xml:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.BankAccounts.AccountVerificationRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.BankAccounts.AccountVerificationRequest'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.BankAccounts.AccountVerificationRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.BankAccounts.AccountVerificationRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.BankAccounts.AccountVerificationRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.BankAccounts.AccountVerificationRequest'
        description: Object containing data required to perform bank account verification.
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    Address1: null
                    City: null
                    Forename: null
                    MiddleName: null
                    PostCode: null
                    Surname: null
                    accountNumber: "12345678"
                    accountNumberValidation: 2
                    accountNumberValidationText: Valid
                    accountStatus: 2
                    accountStatusText: Live
                    accountValid: true
                    addressValidation: 2
                    addressValidationText: Current address
                    checkDate: 2019-08-01T12:15:22
                    checkId: 12345678-1234-5678-abcd-1234567890ab
                    checkStatus: 1
                    error: false
                    hasBeenOverridden: false
                    nameValidation: 2
                    nameValidationText: Valid
                    referenceId: RF1234
                    sortcode: "123456"
                    sortcodeValidation: 2
                    sortcodeValidationText: Valid
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.BankAccounts.AccountVerificationResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.BankAccounts.AccountVerificationResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.BankAccounts.AccountVerificationResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.BankAccounts.AccountVerificationResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If the service was supplied invalid data.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If credentials supplied were invalid.
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: Error code meaning that the operation was aborted due to insufficient
            credits.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If an unexpected exception occurred whilst processing the request.
      summary: Verifies bank account details.
      tags:
      - BankAccounts
      x-openapi-router-controller: openapi_server.controllers.bank_accounts_controller
      x-codegen-request-body-name: body
  /api/companies:
    post:
      description: "If a company appears multiple times within the structure, it will\
        \ only be detailed in full (i.e. with significant ownership details) in its\
        \ first instance. Subsequent instances will be \r\n            marked as duplicates.\r\
        \n            Whilst duplicate instances of companies can and will be identified,\
        \ it is not possible to categorically identify duplicated people."
      operationId: search_company
      parameters:
      - description: The company registration number of the company that should be
          searched.
        explode: true
        in: query
        name: companyNumber
        required: false
        schema:
          type: string
        style: form
      - description: ApiKey supplied.
        explode: false
        in: header
        name: apikey
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    addressLine1: 25 Westgate Street
                    companyName: Widget Production Limited
                    companyNumber: "12345678"
                    dateOfRegistration: 1973-07-17T00:00:00
                    duplicate: false
                    id: 38eba446-0ff9-4602-9694-ee7f786ef9b1
                    locality: ""
                    postCode: CF101NS
                    region: Cardiff
                    significantParentCompanies:
                    - addressLine1: null
                      companyName: Widgets International Limited
                      companyNumber: "54345678"
                      dateOfRegistration: 0001-01-01T00:00:00
                      duplicate: false
                      id: ebbc9433-40a6-4197-902d-d4ff2efdbaa5
                      locality: null
                      postCode: null
                      region: null
                      significantParentCompanies: null
                      significantPeople:
                      - forename: John
                        id: b58ec846-1da1-4ac2-be27-b1dcbff8c8dd
                        regEntryId: null
                        surname: Smith
                    - addressLine1: null
                      companyName: Widget Services Limited
                      companyNumber: "23232321"
                      dateOfRegistration: 0001-01-01T00:00:00
                      duplicate: false
                      id: 48641603-7593-46a9-b993-8ead4daca09e
                      locality: null
                      postCode: null
                      region: null
                      significantParentCompanies:
                      - addressLine1: 25 Westgate Street
                        companyName: Widgets International Limited
                        companyNumber: "54345678"
                        dateOfRegistration: 1973-07-17T00:00:00
                        duplicate: true
                        id: ebbc9433-40a6-4197-902d-d4ff2efdbaa5
                        locality: ""
                        postCode: CF101NS
                        region: Cardiff
                        significantParentCompanies: null
                        significantPeople: null
                      significantPeople: null
                    significantPeople:
                    - forename: John
                      id: 108db0e1-fe11-44be-ad8f-405ed57d3fbc
                      regEntryId: a5d3b128-f65d-4e6d-a9e2-ac8f2763ec7a
                      surname: Smith
                    - forename: Jane
                      id: 965f3298-da35-4906-8d9e-d346008289dc
                      regEntryId: null
                      surname: Smith
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Companies.CompanyDetail'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Companies.CompanyDetail'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Companies.CompanyDetail'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Companies.CompanyDetail'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If the service was supplied invalid data.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If credentials supplied were invalid.
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If the consumer doesn't have the required permission to use
            the endpoint.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If an unexpected exception occurred whilst processing the request.
      summary: Searches for a company based on its Company Number and returns its
        details.
      tags:
      - Companies
      x-openapi-router-controller: openapi_server.controllers.companies_controller
  /api/companies/{companyId}:
    get:
      operationId: get_company
      parameters:
      - explode: false
        in: path
        name: companyId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: ApiKey supplied.
        explode: false
        in: header
        name: apikey
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    addressLine1: 25 Westgate Street
                    companyName: Widget Production Limited
                    companyNumber: "12345678"
                    dateOfRegistration: 1973-07-17T00:00:00
                    duplicate: false
                    id: 38eba446-0ff9-4602-9694-ee7f786ef9b1
                    locality: ""
                    postCode: CF101NS
                    region: Cardiff
                    significantParentCompanies:
                    - addressLine1: null
                      companyName: Widgets International Limited
                      companyNumber: "54345678"
                      dateOfRegistration: 0001-01-01T00:00:00
                      duplicate: false
                      id: ebbc9433-40a6-4197-902d-d4ff2efdbaa5
                      locality: null
                      postCode: null
                      region: null
                      significantParentCompanies: null
                      significantPeople:
                      - forename: John
                        id: b58ec846-1da1-4ac2-be27-b1dcbff8c8dd
                        regEntryId: null
                        surname: Smith
                    - addressLine1: null
                      companyName: Widget Services Limited
                      companyNumber: "23232321"
                      dateOfRegistration: 0001-01-01T00:00:00
                      duplicate: false
                      id: 48641603-7593-46a9-b993-8ead4daca09e
                      locality: null
                      postCode: null
                      region: null
                      significantParentCompanies:
                      - addressLine1: 25 Westgate Street
                        companyName: Widgets International Limited
                        companyNumber: "54345678"
                        dateOfRegistration: 1973-07-17T00:00:00
                        duplicate: true
                        id: ebbc9433-40a6-4197-902d-d4ff2efdbaa5
                        locality: ""
                        postCode: CF101NS
                        region: Cardiff
                        significantParentCompanies: null
                        significantPeople: null
                      significantPeople: null
                    significantPeople:
                    - forename: John
                      id: 108db0e1-fe11-44be-ad8f-405ed57d3fbc
                      regEntryId: a5d3b128-f65d-4e6d-a9e2-ac8f2763ec7a
                      surname: Smith
                    - forename: Jane
                      id: 965f3298-da35-4906-8d9e-d346008289dc
                      regEntryId: null
                      surname: Smith
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Companies.CompanyDetail'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Companies.CompanyDetail'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Companies.CompanyDetail'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Companies.CompanyDetail'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If the service was supplied invalid data.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If credentials supplied were invalid.
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If the consumer doesn't have the required permission to use
            the endpoint.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If an unexpected exception occurred whilst processing the request.
      tags:
      - Companies
      x-openapi-router-controller: openapi_server.controllers.companies_controller
  /api/credit-status/perform:
    post:
      operationId: check_credit_status
      parameters:
      - description: ApiKey supplied.
        explode: false
        in: header
        name: apikey
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.StatusChecks.StatusCheckRequest'
          application/*+xml:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.StatusChecks.StatusCheckRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.StatusChecks.StatusCheckRequest'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.StatusChecks.StatusCheckRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.StatusChecks.StatusCheckRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.StatusChecks.StatusCheckRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.StatusChecks.StatusCheckRequest'
        description: Object containing data required to perform the check.
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    address: null
                    ccj:
                    - address1: Flat 30
                      address2: "Richmond Court, St. Peters Street"
                      address3: null
                      address4: null
                      address5: null
                      amount: £5000.00
                      caseNumber: CS1113-56-33
                      courtName: CARMARTHEN COUNTY COURT
                      dateEnd: 2017-11-09T00:00:00
                      dob: 1988-12-04T00:00:00
                      judgementDate: 2017-11-09T00:00:00
                      judgementType: 2
                      judgementTypeText: Satisfaction
                      name: ANGELA ZOE SPECIMEN
                      postcode: CF24 3AZ
                    checkDate: 2019-08-01T12:33:11
                    companyDirector:
                    - companyAppointments:
                      - address: "FLAT 30, RICHMOND COURT, ST. PETERS STREET, CARDIFF,\
                          \ CF24 3AZ"
                        appointmentDate: 2015-06-11T00:00:00
                        appointmentType: Current Director
                        dob: 1988-12-04T00:00:00
                        name: Angela Zoe Specimen
                        nationality: British
                        occupation: Field Agent
                        title: Ms
                      companyName: ANGELS LIMITED
                      companyRegNo: "00123456"
                      dateAppointed: 2015-06-11T00:00:00
                      matchType: 3
                      matchTypeText: "Name, Address and Date of Birth"
                      registeredOffice: "FLAT 3, RICHMOND COURT, ST. PETERS STREET,\
                        \ CARDIFF, CF24 3AZ"
                    hasBeenOverridden: false
                    insolvency:
                    - address:
                        address1: Flat 30
                        address2: Richmond Court
                        address3: St Peters Street
                        address4: null
                        address5: null
                        dps: DPS1
                        isEmpty: false
                        postcode: CF24 3AZ
                      aliases: ANGEL UK
                      assetTotal: £2000.00
                      caseNo: IC123456789-22232
                      caseType: Standard
                      court: CARMARTHEN COUNTY COURT
                      debtTotal: £20000.00
                      description: ANGELA ZOE SPECIMEN TRADING AS ANGELS LIMITED
                      dob: 1988-12-04T00:00:00
                      name: ANGELA SPECIMEN
                      occupation: Field Agent
                      presentationDate: 2018-01-15T00:00:00
                      previousAddress: null
                      serviceOffice: MR JON WILLIAM JONES
                      startDate: 2017-12-01T00:00:00
                      status: CURRENT
                      telephoneNumber: "02920113244"
                      tradingNames: ANGELS LTD
                      type: 4
                      typeText: England and Wales DRO
                    person: null
                    status: 3
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.StatusChecks.StatusCheck'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.StatusChecks.StatusCheck'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.StatusChecks.StatusCheck'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.StatusChecks.StatusCheck'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If the service was supplied invalid data.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If credentials supplied were invalid.
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: Error code meaning that the operation was aborted due to insufficient
            credits.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If an unexpected exception occurred whilst processing the request.
      summary: "Check includes identifying bankruptcy, insolvency, CCJ's or Company\
        \ Directorship."
      tags:
      - CreditStatus
      x-openapi-router-controller: openapi_server.controllers.credit_status_controller
      x-codegen-request-body-name: body
  /api/datachecks:
    post:
      operationId: add_data_check
      parameters:
      - description: ApiKey supplied.
        explode: false
        in: header
        name: apikey
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.DataCheck.AddDataCheckRequest'
          application/*+xml:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.DataCheck.AddDataCheckRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.DataCheck.AddDataCheckRequest'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.DataCheck.AddDataCheckRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.DataCheck.AddDataCheckRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.DataCheck.AddDataCheckRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.DataCheck.AddDataCheckRequest'
        description: Object containing data check details.
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    id: abcdef12-abcd-abcd-beef-ab123cd12345
                    regCode: QX92TAG7
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.DataCheck.AddDataCheckResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.DataCheck.AddDataCheckResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.DataCheck.AddDataCheckResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.DataCheck.AddDataCheckResponse'
          description: Details of newly added data check.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If the service was supplied invalid data.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If credentials supplied were invalid.
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: Error code meaning that the operation was aborted due to insufficient
            credits.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If an unexpected exception occurred whilst processing the request.
      summary: Creates new data check against a specified registration.
      tags:
      - DataChecks
      x-openapi-router-controller: openapi_server.controllers.data_checks_controller
      x-codegen-request-body-name: body
  /api/images/id-document:
    post:
      operationId: add_id_document_image
      parameters:
      - description: ApiKey supplied.
        explode: false
        in: header
        name: apikey
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.Images.AddIdDocumentImageRequest'
          application/*+xml:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.Images.AddIdDocumentImageRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.Images.AddIdDocumentImageRequest'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.Images.AddIdDocumentImageRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.Images.AddIdDocumentImageRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.Images.AddIdDocumentImageRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.Images.AddIdDocumentImageRequest'
        description: Object containing the id document image and registration id.
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    documentStatus: 1
                    documentType: 1
                    facialMatch: true
                    id: a9c10b16-130b-4051-9d60-c0c6ee9dca76
                    regCode: 57RV4345
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Images.AddIdDocumentImageResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Images.AddIdDocumentImageResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Images.AddIdDocumentImageResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Images.AddIdDocumentImageResponse'
          description: Details of the processed id document.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If the service was supplied invalid data.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If credentials supplied were invalid.
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: Error code meaning that the operation was aborted due to insufficient
            credits.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If an unexpected exception occurred whilst processing the request.
      summary: Add an id document image to the specified registration.
      tags:
      - Images
      x-openapi-router-controller: openapi_server.controllers.images_controller
      x-codegen-request-body-name: body
  /api/images/id-document/{registrationId}:
    get:
      operationId: get_id_document_images
      parameters:
      - description: The id of the registration.
        explode: false
        in: path
        name: registrationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: ApiKey supplied.
        explode: false
        in: header
        name: apikey
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                  - addressCity: null
                    addressFull: null
                    addressPostcode: null
                    country: United Kingdom
                    countryCode: GBR
                    dateCreated: 2018-02-23T17:22:11.044
                    dateOfBirth: 1968-11-23T00:00:00
                    description: Passport
                    documentAnalysisResult: 1
                    documentNumber: "123456789"
                    documentSide: 1
                    expiryDate: 2025-04-21T00:00:00
                    facialMatch: true
                    forename: Alan
                    fullName: Alan Harper
                    hiResUrl: https://
                    id: fedcba89-dead-1278-bead-8901234abcde
                    isUnderReview: false
                    manuallyVerified: false
                    middleName: William
                    mrz1: P<GBRHARPER<<ALAN<WILLIAM<<<<<<<<<<<<<<<<<<<
                    mrz2: 1234567897GBR6811233M2504214<<<<<<<<<<<<<<06
                    mrz3: null
                    nameCheck: true
                    nameCheckMethod: 0
                    nfcCheck: true
                    nfcFacialUrl: https://
                    nfcReadStatus: 0
                    primaryScanId: null
                    status: 1
                    surname: Harper
                    url: https://
                  - addressCity: London
                    addressFull: "10 Downing St, Westminster, London, SW1A2AA"
                    addressPostcode: SW1A2AA
                    country: United Kingdom
                    countryCode: GBR
                    dateCreated: 2018-02-23T19:24:50.875
                    dateOfBirth: 1968-11-23T00:00:00
                    description: Driving Licence
                    documentAnalysisResult: 2
                    documentNumber: HARPER765453P99RT
                    documentSide: 1
                    expiryDate: 2025-04-21T00:00:00
                    facialMatch: false
                    forename: Alan
                    fullName: Alan William Harper
                    hiResUrl: https://
                    id: fedcba89-dead-1278-bead-8901234abcde
                    isUnderReview: false
                    manuallyVerified: true
                    middleName: William
                    mrz1: null
                    mrz2: null
                    mrz3: null
                    nameCheck: true
                    nameCheckMethod: 0
                    nfcCheck: false
                    nfcFacialUrl: null
                    nfcReadStatus: 0
                    primaryScanId: null
                    status: 2
                    surname: Harper
                    url: https://
                  - addressCity: null
                    addressFull: null
                    addressPostcode: null
                    country: United Kingdom
                    countryCode: GBR
                    dateCreated: 2018-02-23T19:24:51.112
                    dateOfBirth: 1968-11-23T00:00:00
                    description: Driving Licence
                    documentAnalysisResult: 2
                    documentNumber: HARPER765453P99RT
                    documentSide: 2
                    expiryDate: 2025-04-21T00:00:00
                    facialMatch: false
                    forename: Alan
                    fullName: Alan William Harper
                    hiResUrl: https://
                    id: fedcba89-dead-1278-bead-8901234abcff
                    isUnderReview: false
                    manuallyVerified: false
                    middleName: William
                    mrz1: null
                    mrz2: null
                    mrz3: null
                    nameCheck: false
                    nameCheckMethod: 0
                    nfcCheck: false
                    nfcFacialUrl: null
                    nfcReadStatus: 8
                    primaryScanId: fedcba89-dead-1278-bead-8901234abcde
                    status: 2
                    surname: Harper
                    url: https://
              schema:
                items:
                  $ref: '#/components/schemas/Credas.Api.Models.Images.GetIdDocumentImageResponse'
                type: array
                uniqueItems: false
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Credas.Api.Models.Images.GetIdDocumentImageResponse'
                type: array
                uniqueItems: false
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/Credas.Api.Models.Images.GetIdDocumentImageResponse'
                type: array
                uniqueItems: false
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Credas.Api.Models.Images.GetIdDocumentImageResponse'
                type: array
                uniqueItems: false
          description: Details of the id documents associated with the registration.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If the service was supplied invalid data.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If credentials supplied were invalid.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If requesting entity have no permission to access the resource.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If an unexpected exception occurred whilst processing the request.
      summary: Get all id document images associated with a registration.
      tags:
      - Images
      x-openapi-router-controller: openapi_server.controllers.images_controller
  /api/images/liveness:
    post:
      operationId: add_liveness_image
      parameters:
      - description: ApiKey supplied.
        explode: false
        in: header
        name: apikey
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.Images.AddLivenessImageRequest'
          application/*+xml:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.Images.AddLivenessImageRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.Images.AddLivenessImageRequest'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.Images.AddLivenessImageRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.Images.AddLivenessImageRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.Images.AddLivenessImageRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.Images.AddLivenessImageRequest'
        description: Object containing the liveness image and registration id.
        x-body-name: body
      responses:
        "200":
          description: OK response indicating a successful action.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If the service was supplied invalid data.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If credentials supplied were invalid.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If an unexpected exception occurred whilst processing the request.
      summary: Add a liveness image (UAP) to the specified registration.
      tags:
      - Images
      x-openapi-router-controller: openapi_server.controllers.images_controller
      x-codegen-request-body-name: body
  /api/images/liveness-performed/{registrationId}:
    get:
      operationId: get_liveness_performed_image
      parameters:
      - description: The id of the registration.
        explode: false
        in: path
        name: registrationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: ApiKey supplied.
        explode: false
        in: header
        name: apikey
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    base64Data: null
                    url: https://url.to/a/liveness-performed/image.jpg
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Images.GetLivenessPerformedImageResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Images.GetLivenessPerformedImageResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Images.GetLivenessPerformedImageResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Images.GetLivenessPerformedImageResponse'
          description: Response containing Liveness performed image details.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If the service was supplied invalid data.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If credentials supplied were invalid.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If requesting entity have no permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If the liveness performed image doesn't exist.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If an unexpected exception occurred whilst processing the request.
      summary: Retrieve the liveness performed image associated with a registration.
      tags:
      - Images
      x-openapi-router-controller: openapi_server.controllers.images_controller
  /api/images/liveness/{registrationId}:
    get:
      operationId: get_liveness_image
      parameters:
      - description: The id of the registration.
        explode: false
        in: path
        name: registrationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: ApiKey supplied.
        explode: false
        in: header
        name: apikey
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    description: Touch your LEFT cheek with your LEFT hand
                    id: afbaa1d2-d81a-415d-bc51-092651c84bbb
                    url: https://example.com/image.jpg
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Images.GetLivenessImageResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Images.GetLivenessImageResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Images.GetLivenessImageResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Images.GetLivenessImageResponse'
          description: Response containing Liveness image details.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If the service was supplied invalid data.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If credentials supplied were invalid.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If requesting entity have no permission to access the resource.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If an unexpected exception occurred whilst processing the request.
      summary: Retrieve the liveness action image (UAP) associated with a registration.
      tags:
      - Images
      x-openapi-router-controller: openapi_server.controllers.images_controller
  /api/images/scan-report-pdf/{scanId}:
    get:
      operationId: get_scan_report_pdf
      parameters:
      - description: Id of the individual scanned document
        explode: false
        in: path
        name: scanId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: ApiKey supplied.
        explode: false
        in: header
        name: apikey
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value: ZGVmZ2hp
              schema:
                format: byte
                type: string
            application/xml:
              schema:
                format: byte
                type: string
            text/json:
              schema:
                format: byte
                type: string
            text/xml:
              schema:
                format: byte
                type: string
          description: PDF document containing detail analysis of scanned documents
            as a byte stream.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If the service was supplied invalid data.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If credentials supplied were invalid.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If requesting entity have no permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If scan matching the scanId was not found.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If an unexpected exception occurred whilst processing the request.
      summary: Returns a detailed report on the analysis that has taken place of a
        scanned document
      tags:
      - Images
      x-openapi-router-controller: openapi_server.controllers.images_controller
  /api/images/selfie:
    post:
      operationId: add_selfie_image
      parameters:
      - description: ApiKey supplied.
        explode: false
        in: header
        name: apikey
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.Images.AddSelfieImageRequest'
          application/*+xml:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.Images.AddSelfieImageRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.Images.AddSelfieImageRequest'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.Images.AddSelfieImageRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.Images.AddSelfieImageRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.Images.AddSelfieImageRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.Images.AddSelfieImageRequest'
        description: Object containing the selfie image and registration id.
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    livenessConfirmed: true
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Images.AddSelfieImageResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Images.AddSelfieImageResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Images.AddSelfieImageResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Images.AddSelfieImageResponse'
          description: Result of uploading selfie image; including liveness check
            indicator.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If the service was supplied invalid data.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If credentials supplied were invalid.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If an unexpected exception occurred whilst processing the request.
      summary: Add a selfie image to the registration.
      tags:
      - Images
      x-openapi-router-controller: openapi_server.controllers.images_controller
      x-codegen-request-body-name: body
  /api/images/selfie/{registrationId}:
    get:
      operationId: get_selfie_image
      parameters:
      - description: The id of the registration.
        explode: false
        in: path
        name: registrationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: ApiKey supplied.
        explode: false
        in: header
        name: apikey
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    base64Data: null
                    url: https://url.to/a/selfie/image.jpg
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Images.GetSelfieImageResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Images.GetSelfieImageResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Images.GetSelfieImageResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Images.GetSelfieImageResponse'
          description: Response containing the selfie image details.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If the service was supplied invalid data.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If credentials supplied were invalid.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If requesting entity have no permission to access the resource.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If an unexpected exception occurred whilst processing the request.
      summary: Retrieve the selfie image associated with a registration.
      tags:
      - Images
      x-openapi-router-controller: openapi_server.controllers.images_controller
  /api/property-register:
    post:
      operationId: add_property_register_check
      parameters:
      - description: ApiKey supplied.
        explode: false
        in: header
        name: apikey
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.PropertyRegister.PropertyRegisterCheckRequest'
          application/*+xml:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.PropertyRegister.PropertyRegisterCheckRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.PropertyRegister.PropertyRegisterCheckRequest'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.PropertyRegister.PropertyRegisterCheckRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.PropertyRegister.PropertyRegisterCheckRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.PropertyRegister.PropertyRegisterCheckRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.PropertyRegister.PropertyRegisterCheckRequest'
        description: Object containing check details.
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    checkStatus: 1
                    hasBeenOverridden: false
                    matchResult: 1
                    matchResultText: Full Name Match
                    propertyOwnership: 2
                    propertyOwnershipText: Joint Ownership
                    titleNumber: TMP123456
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.PropertyRegister.PropertyRegisterCheckResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.PropertyRegister.PropertyRegisterCheckResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.PropertyRegister.PropertyRegisterCheckResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.PropertyRegister.PropertyRegisterCheckResponse'
          description: Details of newly added data check.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If the service was supplied invalid data.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If credentials supplied were invalid.
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: Error code meaning that the operation was aborted due to insufficient
            credits.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If an unexpected exception occurred whilst processing the request.
      summary: Creates new property registry check against the registration.
      tags:
      - PropertyRegister
      x-openapi-router-controller: openapi_server.controllers.property_register_controller
      x-codegen-request-body-name: body
  /api/property-register/{id}:
    get:
      operationId: get_property_register_check_result
      parameters:
      - description: Id of the registration.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: ApiKey supplied.
        explode: false
        in: header
        name: apikey
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    checkStatus: 1
                    hasBeenOverridden: false
                    matchResult: 1
                    matchResultText: Full Name Match
                    propertyOwnership: 2
                    propertyOwnershipText: Joint Ownership
                    titleNumber: TMP123456
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.PropertyRegister.PropertyRegisterCheckResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.PropertyRegister.PropertyRegisterCheckResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.PropertyRegister.PropertyRegisterCheckResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.PropertyRegister.PropertyRegisterCheckResponse'
          description: Details of the property register check.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If the service was supplied invalid data.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If credentials supplied were invalid.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If registration does not have associated property register
            check.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If an unexpected exception occurred whilst processing the request.
      summary: Retrieves property registry check associated with the registration.
      tags:
      - PropertyRegister
      x-openapi-router-controller: openapi_server.controllers.property_register_controller
  /api/reg-types:
    get:
      operationId: get_all
      parameters:
      - description: ApiKey supplied.
        explode: false
        in: header
        name: apikey
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                  - id: 12345678-1234-1234-1234-1234567890ab
                    name: Standard AML Checks
              schema:
                items:
                  $ref: '#/components/schemas/Credas.Api.Models.RegTypes.RegType'
                type: array
                uniqueItems: false
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Credas.Api.Models.RegTypes.RegType'
                type: array
                uniqueItems: false
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/Credas.Api.Models.RegTypes.RegType'
                type: array
                uniqueItems: false
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Credas.Api.Models.RegTypes.RegType'
                type: array
                uniqueItems: false
          description: A collection of available RegTypes.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If credentials supplied were invalid.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If an unexpected exception occurred whilst processing the request.
      summary: Gets all available RegTypes.
      tags:
      - RegTypes
      x-openapi-router-controller: openapi_server.controllers.reg_types_controller
  /api/registrations:
    post:
      operationId: add_registration
      parameters:
      - description: ApiKey supplied.
        explode: false
        in: header
        name: apikey
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.Registrations.AddRegistrationRequest'
          application/*+xml:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.Registrations.AddRegistrationRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.Registrations.AddRegistrationRequest'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.Registrations.AddRegistrationRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.Registrations.AddRegistrationRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.Registrations.AddRegistrationRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.Registrations.AddRegistrationRequest'
        description: Object containing registration details.
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    id: abcdef12-abcd-abcd-beef-ab123cd12345
                    regCode: QX92TAG7
                    webJourneyUrl:
                      url: https://pi-verify.credas.co.uk/link/f7ec8ac1-d935-413b-9100-c7b9b498ca1d
                      validUntil: 2023-04-23T08:45:37.8658081Z
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Registrations.AddRegistrationResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Registrations.AddRegistrationResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Registrations.AddRegistrationResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Registrations.AddRegistrationResponse'
          description: Details of newly added registration.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If the service was supplied invalid data.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If credentials supplied were invalid.
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: Error code meaning that the operation was aborted due to insufficient
            credits.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If an unexpected exception occurred whilst processing the request.
      summary: Creates new registration.
      tags:
      - Registrations
      x-openapi-router-controller: openapi_server.controllers.registrations_controller
      x-codegen-request-body-name: body
  /api/registrations/instant:
    post:
      description: It's designed to provide a quick integration path for external
        systems which capture these details.
      operationId: add_instant_registration
      parameters:
      - description: ApiKey supplied.
        explode: false
        in: header
        name: apikey
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.Registrations.AddInstantRegistrationRequest'
          application/*+xml:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.Registrations.AddInstantRegistrationRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.Registrations.AddInstantRegistrationRequest'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.Registrations.AddInstantRegistrationRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.Registrations.AddInstantRegistrationRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.Registrations.AddInstantRegistrationRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.Registrations.AddInstantRegistrationRequest'
        description: The Credas.Api.Models.Registrations.AddInstantRegistrationRequest
          object containing required data.
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    documentStatus: 1
                    documentType: 1
                    facialMatch: true
                    id: abcdef12-abcd-abcd-beef-ab123cd12345
                    regCode: QX92TAG7
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Registrations.AddInstantRegistrationResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Registrations.AddInstantRegistrationResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Registrations.AddInstantRegistrationResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Registrations.AddInstantRegistrationResponse'
          description: OK response with object containing the document information.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If the service was supplied invalid data.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If credentials supplied were invalid.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If an unexpected exception occurred whilst processing the request.
      summary: "Creates new registration record, adds an ID document and optional\
        \ selfie image in one go."
      tags:
      - Registrations
      x-openapi-router-controller: openapi_server.controllers.registrations_controller
      x-codegen-request-body-name: body
  /api/registrations/referenceid/{referenceId}/summary:
    get:
      operationId: get_registration_summaries_by_reference_id
      parameters:
      - description: ReferenceId - from external system to match Registrations on.
        explode: false
        in: path
        name: referenceId
        required: true
        schema:
          type: string
        style: simple
      - description: ApiKey supplied.
        explode: false
        in: header
        name: apikey
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                  - Comments: null
                    CreatedByAgencyUserEmail: null
                    DITFDate: null
                    DITFStatus: 0
                    IsExpired: false
                    VerifiedInAppDate: null
                    bankAccountChecks:
                    - Address1: null
                      City: null
                      Forename: null
                      MiddleName: null
                      PostCode: null
                      Surname: null
                      accountNumber: "12345678"
                      accountNumberValidation: 2
                      accountNumberValidationText: Valid
                      accountStatus: 2
                      accountStatusText: Live
                      accountValid: true
                      addressValidation: 2
                      addressValidationText: Current address
                      checkDate: 2019-08-01T12:15:22
                      checkId: 12345678-1234-5678-abcd-1234567890ab
                      checkStatus: 1
                      error: false
                      hasBeenOverridden: false
                      nameValidation: 2
                      nameValidationText: Valid
                      referenceId: RF1234
                      sortcode: "123456"
                      sortcodeValidation: 2
                      sortcodeValidationText: Valid
                    createdByAgencyUserId: null
                    creditStatusCheck:
                      address: null
                      ccj:
                      - address1: Flat 30
                        address2: "Richmond Court, St. Peters Street"
                        address3: null
                        address4: null
                        address5: null
                        amount: £5000.00
                        caseNumber: CS1113-56-33
                        courtName: CARMARTHEN COUNTY COURT
                        dateEnd: 2017-11-09T00:00:00
                        dob: 1988-12-04T00:00:00
                        judgementDate: 2017-11-09T00:00:00
                        judgementType: 2
                        judgementTypeText: Satisfaction
                        name: ANGELA ZOE SPECIMEN
                        postcode: CF24 3AZ
                      checkDate: 2019-08-01T12:33:11
                      companyDirector:
                      - companyAppointments:
                        - address: "FLAT 30, RICHMOND COURT, ST. PETERS STREET, CARDIFF,\
                            \ CF24 3AZ"
                          appointmentDate: 2015-06-11T00:00:00
                          appointmentType: Current Director
                          dob: 1988-12-04T00:00:00
                          name: Angela Zoe Specimen
                          nationality: British
                          occupation: Field Agent
                          title: Ms
                        companyName: ANGELS LIMITED
                        companyRegNo: "00123456"
                        dateAppointed: 2015-06-11T00:00:00
                        matchType: 3
                        matchTypeText: "Name, Address and Date of Birth"
                        registeredOffice: "FLAT 3, RICHMOND COURT, ST. PETERS STREET,\
                          \ CARDIFF, CF24 3AZ"
                      hasBeenOverridden: false
                      insolvency:
                      - address:
                          address1: Flat 30
                          address2: Richmond Court
                          address3: St Peters Street
                          address4: null
                          address5: null
                          dps: DPS1
                          isEmpty: false
                          postcode: CF24 3AZ
                        aliases: ANGEL UK
                        assetTotal: £2000.00
                        caseNo: IC123456789-22232
                        caseType: Standard
                        court: CARMARTHEN COUNTY COURT
                        debtTotal: £20000.00
                        description: ANGELA ZOE SPECIMEN TRADING AS ANGELS LIMITED
                        dob: 1988-12-04T00:00:00
                        name: ANGELA SPECIMEN
                        occupation: Field Agent
                        presentationDate: 2018-01-15T00:00:00
                        previousAddress: null
                        serviceOffice: MR JON WILLIAM JONES
                        startDate: 2017-12-01T00:00:00
                        status: CURRENT
                        telephoneNumber: "02920113244"
                        tradingNames: ANGELS LTD
                        type: 4
                        typeText: England and Wales DRO
                      person: null
                      status: 3
                    customTermsAccepted: false
                    customTermsAcceptedDateTime: null
                    customTermsAcceptedVersion: null
                    dataCheckResult: 1
                    dataCheckSources:
                    - address: null
                      dateCreated: 2018-02-23T12:54:32.017
                      hasBeenOverridden: false
                      hasPepSanctionsData: false
                      label: Mortality
                      pepSanctionsData: null
                      person: null
                      remarks:
                      - category: 1
                        description: Halo source indicates this person is not deceased
                          at address 1
                      - category: 4
                        description: No middle initial specified by user
                      sourceType: 3
                      status: 1
                    - address: null
                      dateCreated: 2018-02-23T12:54:32.017
                      hasBeenOverridden: false
                      hasPepSanctionsData: false
                      label: Address and DOB
                      pepSanctionsData: null
                      person: null
                      remarks:
                      - category: 1
                        description: "(Electoral Register) Address #1 details are\
                          \ valid"
                      - category: 2
                        description: "(Electoral Register) Surname details not matched\
                          \ address #1"
                      sourceType: 4
                      status: 2
                    - address: null
                      dateCreated: 2018-02-23T12:54:32.017
                      hasBeenOverridden: false
                      hasPepSanctionsData: true
                      label: International Sanctions
                      pepSanctionsData:
                      - addresses:
                        - lines:
                          - 44 Lowbridge Street
                          - Pasadena
                          - California
                          - USA
                        aliases: null
                        fullName: Alan Stuart Harper
                        id: null
                        positions:
                        - country: USA
                          position: Head of local gov
                        sanctionBodies: null
                        sanctionDates:
                        - date: 1937-04-03T12:00:00Z
                          day: 3
                          month: 4
                          type: 1
                          year: 1937
                      person: null
                      remarks:
                      - category: 1
                        description: Full name has not been matched.
                      sourceType: 7
                      status: 1
                    dataChecksPerformed: true
                    dateCompleted: null
                    dateCreated: 2018-02-23T12:54:31.611
                    email: alan.harper@email.com
                    forename: Alan
                    hasLivenessPerformed: false
                    hasSelfie: false
                    id: abcdef12-abcd-abcd-beef-ab123cd12345
                    idDocuments:
                    - addressCity: null
                      addressFull: null
                      addressPostcode: null
                      country: United Kingdom
                      countryCode: GBR
                      dateCreated: 2018-02-23T17:22:11.044
                      dateOfBirth: 1968-11-23T00:00:00
                      description: Passport
                      documentAnalysisResult: 1
                      documentNumber: "123456789"
                      documentSide: 1
                      expiryDate: 2025-04-21T00:00:00
                      facialMatch: true
                      forename: Alan
                      fullName: Alan Harper
                      id: fedcba89-dead-1278-bead-8901234abcde
                      isUnderReview: false
                      manuallyVerified: false
                      middleName: William
                      mrz1: P<GBRHARPER<<ALAN<WILLIAM<<<<<<<<<<<<<<<<<<<
                      mrz2: 1234567897GBR6811233M2504214<<<<<<<<<<<<<<06
                      mrz3: null
                      nameCheck: true
                      nameCheckMethod: 0
                      nfcCheck: true
                      nfcReadStatus: 1
                      primaryScanId: null
                      status: 1
                      surname: Harper
                    - addressCity: London
                      addressFull: "10 Downing St, Westminster, London, SW1A2AA"
                      addressPostcode: SW1A2AA
                      country: United Kingdom
                      countryCode: GBR
                      dateCreated: 2018-02-23T19:24:50.875
                      dateOfBirth: 1968-11-23T00:00:00
                      description: Driving Licence
                      documentAnalysisResult: 2
                      documentNumber: HARPER765453P99RT
                      documentSide: 1
                      expiryDate: 2025-04-21T00:00:00
                      facialMatch: false
                      forename: Alan
                      fullName: Alan William Harper
                      id: fedcba89-dead-1278-bead-8901234abcde
                      isUnderReview: false
                      manuallyVerified: true
                      middleName: William
                      mrz1: null
                      mrz2: null
                      mrz3: null
                      nameCheck: true
                      nameCheckMethod: 0
                      nfcCheck: false
                      nfcReadStatus: 8
                      primaryScanId: null
                      status: 2
                      surname: Harper
                    - addressCity: null
                      addressFull: null
                      addressPostcode: null
                      country: United Kingdom
                      countryCode: GBR
                      dateCreated: 2018-02-23T19:24:51.112
                      dateOfBirth: 1968-11-23T00:00:00
                      description: Driving Licence
                      documentAnalysisResult: 2
                      documentNumber: HARPER765453P99RT
                      documentSide: 2
                      expiryDate: 2025-04-21T00:00:00
                      facialMatch: false
                      forename: Alan
                      fullName: Alan William Harper
                      id: fedcba89-dead-1278-bead-8901234abcff
                      isUnderReview: false
                      manuallyVerified: false
                      middleName: William
                      mrz1: null
                      mrz2: null
                      mrz3: null
                      nameCheck: false
                      nameCheckMethod: 0
                      nfcCheck: false
                      nfcReadStatus: 8
                      primaryScanId: fedcba89-dead-1278-bead-8901234abcde
                      status: 2
                      surname: Harper
                    idVerification: null
                    isAgentLed: false
                    livenessMethod: 1
                    livenessStatus: 1
                    livenessVerified: true
                    middleName: null
                    personalDetails:
                      address:
                        addressLine1: Flat 30
                        addressLine2: "Richmond Court, St. Peters Street"
                        addressLine3: null
                        city: Cardiff
                        country: United Kingdom
                        county: null
                        postcode: CF24 3AZ
                      dateOfBirth: 1978-11-09T00:00:00
                      forename: Alan William
                      surname: Harper
                    phoneNumber: "+4471234567890"
                    proofOfOwnershipCheck:
                      checkStatus: 1
                      hasBeenOverridden: false
                      matchResult: 1
                      matchResultText: Full Name Match
                      propertyOwnership: 2
                      propertyOwnershipText: Joint Ownership
                      titleNumber: TMP123456
                    referenceId: MyRef123
                    regCode: QX92TAG7
                    regTypeId: 12345678-1234-1234-1234-1234567890ab
                    rightToRentCheck: null
                    rightToWorkCheck: null
                    rightToWorkDocumentsProvided: 1
                    safeHarbourVerifiedDate: null
                    safeHarbourVerifiedStatus: 0
                    status: 2
                    surname: Harper
              schema:
                items:
                  $ref: '#/components/schemas/Credas.Api.Models.Registrations.RegistrationSummary'
                type: array
                uniqueItems: false
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Credas.Api.Models.Registrations.RegistrationSummary'
                type: array
                uniqueItems: false
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/Credas.Api.Models.Registrations.RegistrationSummary'
                type: array
                uniqueItems: false
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Credas.Api.Models.Registrations.RegistrationSummary'
                type: array
                uniqueItems: false
          description: Collection of Registration summary objects.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If the service was supplied invalid data.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If credentials supplied were invalid.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If requesting entity have no permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If registration matching the RegCode was not found.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If an unexpected exception occurred whilst processing the request.
      summary: Finds registrations by the ReferenceId.
      tags:
      - Registrations
      x-openapi-router-controller: openapi_server.controllers.registrations_controller
  /api/registrations/regcode/{regCode}/summary:
    get:
      operationId: get_registration_summary_by_reg_code
      parameters:
      - description: RegCode - short unique identifier.
        explode: false
        in: path
        name: regCode
        required: true
        schema:
          type: string
        style: simple
      - description: ApiKey supplied.
        explode: false
        in: header
        name: apikey
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    Comments: null
                    CreatedByAgencyUserEmail: null
                    DITFDate: null
                    DITFStatus: 0
                    IsExpired: false
                    VerifiedInAppDate: null
                    bankAccountChecks:
                    - Address1: null
                      City: null
                      Forename: null
                      MiddleName: null
                      PostCode: null
                      Surname: null
                      accountNumber: "12345678"
                      accountNumberValidation: 2
                      accountNumberValidationText: Valid
                      accountStatus: 2
                      accountStatusText: Live
                      accountValid: true
                      addressValidation: 2
                      addressValidationText: Current address
                      checkDate: 2019-08-01T12:15:22
                      checkId: 12345678-1234-5678-abcd-1234567890ab
                      checkStatus: 1
                      error: false
                      hasBeenOverridden: false
                      nameValidation: 2
                      nameValidationText: Valid
                      referenceId: RF1234
                      sortcode: "123456"
                      sortcodeValidation: 2
                      sortcodeValidationText: Valid
                    createdByAgencyUserId: null
                    creditStatusCheck:
                      address: null
                      ccj:
                      - address1: Flat 30
                        address2: "Richmond Court, St. Peters Street"
                        address3: null
                        address4: null
                        address5: null
                        amount: £5000.00
                        caseNumber: CS1113-56-33
                        courtName: CARMARTHEN COUNTY COURT
                        dateEnd: 2017-11-09T00:00:00
                        dob: 1988-12-04T00:00:00
                        judgementDate: 2017-11-09T00:00:00
                        judgementType: 2
                        judgementTypeText: Satisfaction
                        name: ANGELA ZOE SPECIMEN
                        postcode: CF24 3AZ
                      checkDate: 2019-08-01T12:33:11
                      companyDirector:
                      - companyAppointments:
                        - address: "FLAT 30, RICHMOND COURT, ST. PETERS STREET, CARDIFF,\
                            \ CF24 3AZ"
                          appointmentDate: 2015-06-11T00:00:00
                          appointmentType: Current Director
                          dob: 1988-12-04T00:00:00
                          name: Angela Zoe Specimen
                          nationality: British
                          occupation: Field Agent
                          title: Ms
                        companyName: ANGELS LIMITED
                        companyRegNo: "00123456"
                        dateAppointed: 2015-06-11T00:00:00
                        matchType: 3
                        matchTypeText: "Name, Address and Date of Birth"
                        registeredOffice: "FLAT 3, RICHMOND COURT, ST. PETERS STREET,\
                          \ CARDIFF, CF24 3AZ"
                      hasBeenOverridden: false
                      insolvency:
                      - address:
                          address1: Flat 30
                          address2: Richmond Court
                          address3: St Peters Street
                          address4: null
                          address5: null
                          dps: DPS1
                          isEmpty: false
                          postcode: CF24 3AZ
                        aliases: ANGEL UK
                        assetTotal: £2000.00
                        caseNo: IC123456789-22232
                        caseType: Standard
                        court: CARMARTHEN COUNTY COURT
                        debtTotal: £20000.00
                        description: ANGELA ZOE SPECIMEN TRADING AS ANGELS LIMITED
                        dob: 1988-12-04T00:00:00
                        name: ANGELA SPECIMEN
                        occupation: Field Agent
                        presentationDate: 2018-01-15T00:00:00
                        previousAddress: null
                        serviceOffice: MR JON WILLIAM JONES
                        startDate: 2017-12-01T00:00:00
                        status: CURRENT
                        telephoneNumber: "02920113244"
                        tradingNames: ANGELS LTD
                        type: 4
                        typeText: England and Wales DRO
                      person: null
                      status: 3
                    customTermsAccepted: false
                    customTermsAcceptedDateTime: null
                    customTermsAcceptedVersion: null
                    dataCheckResult: 1
                    dataCheckSources:
                    - address: null
                      dateCreated: 2018-02-23T12:54:32.017
                      hasBeenOverridden: false
                      hasPepSanctionsData: false
                      label: Mortality
                      pepSanctionsData: null
                      person: null
                      remarks:
                      - category: 1
                        description: Halo source indicates this person is not deceased
                          at address 1
                      - category: 4
                        description: No middle initial specified by user
                      sourceType: 3
                      status: 1
                    - address: null
                      dateCreated: 2018-02-23T12:54:32.017
                      hasBeenOverridden: false
                      hasPepSanctionsData: false
                      label: Address and DOB
                      pepSanctionsData: null
                      person: null
                      remarks:
                      - category: 1
                        description: "(Electoral Register) Address #1 details are\
                          \ valid"
                      - category: 2
                        description: "(Electoral Register) Surname details not matched\
                          \ address #1"
                      sourceType: 4
                      status: 2
                    - address: null
                      dateCreated: 2018-02-23T12:54:32.017
                      hasBeenOverridden: false
                      hasPepSanctionsData: true
                      label: International Sanctions
                      pepSanctionsData:
                      - addresses:
                        - lines:
                          - 44 Lowbridge Street
                          - Pasadena
                          - California
                          - USA
                        aliases: null
                        fullName: Alan Stuart Harper
                        id: null
                        positions:
                        - country: USA
                          position: Head of local gov
                        sanctionBodies: null
                        sanctionDates:
                        - date: 1937-04-03T12:00:00Z
                          day: 3
                          month: 4
                          type: 1
                          year: 1937
                      person: null
                      remarks:
                      - category: 1
                        description: Full name has not been matched.
                      sourceType: 7
                      status: 1
                    dataChecksPerformed: true
                    dateCompleted: null
                    dateCreated: 2018-02-23T12:54:31.611
                    email: alan.harper@email.com
                    forename: Alan
                    hasLivenessPerformed: false
                    hasSelfie: false
                    id: abcdef12-abcd-abcd-beef-ab123cd12345
                    idDocuments:
                    - addressCity: null
                      addressFull: null
                      addressPostcode: null
                      country: United Kingdom
                      countryCode: GBR
                      dateCreated: 2018-02-23T17:22:11.044
                      dateOfBirth: 1968-11-23T00:00:00
                      description: Passport
                      documentAnalysisResult: 1
                      documentNumber: "123456789"
                      documentSide: 1
                      expiryDate: 2025-04-21T00:00:00
                      facialMatch: true
                      forename: Alan
                      fullName: Alan Harper
                      id: fedcba89-dead-1278-bead-8901234abcde
                      isUnderReview: false
                      manuallyVerified: false
                      middleName: William
                      mrz1: P<GBRHARPER<<ALAN<WILLIAM<<<<<<<<<<<<<<<<<<<
                      mrz2: 1234567897GBR6811233M2504214<<<<<<<<<<<<<<06
                      mrz3: null
                      nameCheck: true
                      nameCheckMethod: 0
                      nfcCheck: true
                      nfcReadStatus: 1
                      primaryScanId: null
                      status: 1
                      surname: Harper
                    - addressCity: London
                      addressFull: "10 Downing St, Westminster, London, SW1A2AA"
                      addressPostcode: SW1A2AA
                      country: United Kingdom
                      countryCode: GBR
                      dateCreated: 2018-02-23T19:24:50.875
                      dateOfBirth: 1968-11-23T00:00:00
                      description: Driving Licence
                      documentAnalysisResult: 2
                      documentNumber: HARPER765453P99RT
                      documentSide: 1
                      expiryDate: 2025-04-21T00:00:00
                      facialMatch: false
                      forename: Alan
                      fullName: Alan William Harper
                      id: fedcba89-dead-1278-bead-8901234abcde
                      isUnderReview: false
                      manuallyVerified: true
                      middleName: William
                      mrz1: null
                      mrz2: null
                      mrz3: null
                      nameCheck: true
                      nameCheckMethod: 0
                      nfcCheck: false
                      nfcReadStatus: 8
                      primaryScanId: null
                      status: 2
                      surname: Harper
                    - addressCity: null
                      addressFull: null
                      addressPostcode: null
                      country: United Kingdom
                      countryCode: GBR
                      dateCreated: 2018-02-23T19:24:51.112
                      dateOfBirth: 1968-11-23T00:00:00
                      description: Driving Licence
                      documentAnalysisResult: 2
                      documentNumber: HARPER765453P99RT
                      documentSide: 2
                      expiryDate: 2025-04-21T00:00:00
                      facialMatch: false
                      forename: Alan
                      fullName: Alan William Harper
                      id: fedcba89-dead-1278-bead-8901234abcff
                      isUnderReview: false
                      manuallyVerified: false
                      middleName: William
                      mrz1: null
                      mrz2: null
                      mrz3: null
                      nameCheck: false
                      nameCheckMethod: 0
                      nfcCheck: false
                      nfcReadStatus: 8
                      primaryScanId: fedcba89-dead-1278-bead-8901234abcde
                      status: 2
                      surname: Harper
                    idVerification: null
                    isAgentLed: false
                    livenessMethod: 1
                    livenessStatus: 1
                    livenessVerified: true
                    middleName: null
                    personalDetails:
                      address:
                        addressLine1: Flat 30
                        addressLine2: "Richmond Court, St. Peters Street"
                        addressLine3: null
                        city: Cardiff
                        country: United Kingdom
                        county: null
                        postcode: CF24 3AZ
                      dateOfBirth: 1978-11-09T00:00:00
                      forename: Alan William
                      surname: Harper
                    phoneNumber: "+4471234567890"
                    proofOfOwnershipCheck:
                      checkStatus: 1
                      hasBeenOverridden: false
                      matchResult: 1
                      matchResultText: Full Name Match
                      propertyOwnership: 2
                      propertyOwnershipText: Joint Ownership
                      titleNumber: TMP123456
                    referenceId: MyRef123
                    regCode: QX92TAG7
                    regTypeId: 12345678-1234-1234-1234-1234567890ab
                    rightToRentCheck: null
                    rightToWorkCheck: null
                    rightToWorkDocumentsProvided: 1
                    safeHarbourVerifiedDate: null
                    safeHarbourVerifiedStatus: 0
                    status: 2
                    surname: Harper
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Registrations.RegistrationSummary'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Registrations.RegistrationSummary'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Registrations.RegistrationSummary'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Registrations.RegistrationSummary'
          description: Registration summary object.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If the service was supplied invalid data.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If credentials supplied were invalid.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If requesting entity have no permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If registration matching the RegCode was not found.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If an unexpected exception occurred whilst processing the request.
      summary: Finds a registration by the RegCode.
      tags:
      - Registrations
      x-openapi-router-controller: openapi_server.controllers.registrations_controller
  /api/registrations/search:
    get:
      operationId: get_registration_search
      parameters:
      - description: Zero-based page number to retrieve.
        explode: true
        in: query
        name: pageNum
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      - description: Number of records to return on each request (Maximum value is
          50).
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 50
          format: int32
          type: integer
        style: form
      - description: Search by forename.
        explode: true
        in: query
        name: forename
        required: false
        schema:
          type: string
        style: form
      - description: Search by surname.
        explode: true
        in: query
        name: surname
        required: false
        schema:
          type: string
        style: form
      - description: Search by user email.
        explode: true
        in: query
        name: email
        required: false
        schema:
          type: string
        style: form
      - description: Date of birth in (yyyy-MM-dd) format
        explode: true
        in: query
        name: dob
        required: false
        schema:
          type: string
        style: form
      - description: ApiKey supplied.
        explode: false
        in: header
        name: apikey
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Registrations.PagedRegistrationSummary'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Registrations.PagedRegistrationSummary'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Registrations.PagedRegistrationSummary'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Registrations.PagedRegistrationSummary'
          description: Registration summary object list.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If the service was supplied invalid data.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If credentials supplied were invalid.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If requesting entity have no permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If registration matching the Id was not found.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If an unexpected exception occurred whilst processing the request.
      summary: "Gets paged registration list by search criteria or nothing if there\
        \ are no matching fields.\r\nOptional parameters may be appended to the query\
        \ string.\r\nMaximum page size is 50."
      tags:
      - Registrations
      x-openapi-router-controller: openapi_server.controllers.registrations_controller
  /api/registrations/{id}/check-submitted-id-documents:
    get:
      operationId: check_submitted_id_documents
      parameters:
      - description: Id of the registration.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: ApiKey supplied.
        explode: false
        in: header
        name: apikey
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    checkCode: 3
                    message: Please provide proof of address.
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Registrations.CheckSubmittedIdDocumentsResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Registrations.CheckSubmittedIdDocumentsResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Registrations.CheckSubmittedIdDocumentsResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Registrations.CheckSubmittedIdDocumentsResponse'
          description: OK response with object containing the result of the document
            check.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If the service was supplied invalid data.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If credentials supplied were invalid.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If an unexpected exception occurred whilst processing the request.
      summary: Checks if submitted documents are sufficient to complete registration.
      tags:
      - Registrations
      x-openapi-router-controller: openapi_server.controllers.registrations_controller
  /api/registrations/{id}/contact-details:
    put:
      operationId: update_contact_details
      parameters:
      - description: Id of the registration.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: ApiKey supplied.
        explode: false
        in: header
        name: apikey
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.Registrations.UpdateContactDetailsRequest'
          application/*+xml:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.Registrations.UpdateContactDetailsRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.Registrations.UpdateContactDetailsRequest'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.Registrations.UpdateContactDetailsRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.Registrations.UpdateContactDetailsRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.Registrations.UpdateContactDetailsRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.Registrations.UpdateContactDetailsRequest'
        description: Object containing contact details.
        x-body-name: body
      responses:
        "200":
          description: Registration contact details updated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If the service was supplied invalid data.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If credentials supplied were invalid.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If requesting entity have no permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If registration matching the Id was not found.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If an unexpected exception occurred whilst processing the request.
      summary: Updates a registration's contact details.
      tags:
      - Registrations
      x-openapi-router-controller: openapi_server.controllers.registrations_controller
      x-codegen-request-body-name: body
  /api/registrations/{id}/override-check-status:
    put:
      operationId: override_check_status
      parameters:
      - description: Id of the registration.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: ApiKey supplied.
        explode: false
        in: header
        name: apikey
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.StatusOverrides.OverrideCheckStatusRequest'
          application/*+xml:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.StatusOverrides.OverrideCheckStatusRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.StatusOverrides.OverrideCheckStatusRequest'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.StatusOverrides.OverrideCheckStatusRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.StatusOverrides.OverrideCheckStatusRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.StatusOverrides.OverrideCheckStatusRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.StatusOverrides.OverrideCheckStatusRequest'
        description: Request data.
        x-body-name: body
      responses:
        "200":
          description: Status of the operation.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If the service was supplied invalid data.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If credentials supplied were invalid.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If requesting entity have no permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If registration matching the Id was not found.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If an unexpected exception occurred whilst processing the request.
      summary: Sets an override for a specific check on the registration.
      tags:
      - Registrations
      x-openapi-router-controller: openapi_server.controllers.registrations_controller
      x-codegen-request-body-name: body
  /api/registrations/{id}/pdf-export:
    get:
      operationId: get_registration_pdf_export
      parameters:
      - description: Id of the registration.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: ApiKey supplied.
        explode: false
        in: header
        name: apikey
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value: ZGVmZ2hp
              schema:
                format: byte
                type: string
            application/xml:
              schema:
                format: byte
                type: string
            text/json:
              schema:
                format: byte
                type: string
            text/xml:
              schema:
                format: byte
                type: string
          description: PDF document containing registration extract as byte stream.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If the service was supplied invalid data.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If credentials supplied were invalid.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If requesting entity have no permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If registration matching the Id was not found.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If an unexpected exception occurred whilst processing the request.
      summary: Returns PDF export for a given registration.
      tags:
      - Registrations
      x-openapi-router-controller: openapi_server.controllers.registrations_controller
  /api/registrations/{id}/pdf-export-sections:
    get:
      operationId: api_registrations_id_pdf_export_sections_get
      parameters:
      - description: Id of the registration.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: Comments
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: ContactDetails
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: StandardChecks
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: PepSanctionChecks
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: ProofOfOwnership
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: BankAccountCheck
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: CreditStatusCheck
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: Liveness
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: ExcludeSelfie
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: ExcludeIDDocuments
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: DIATFSection
        required: false
        schema:
          type: boolean
        style: form
      - description: ApiKey supplied.
        explode: false
        in: header
        name: apikey
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value: ZGVmZ2hp
              schema:
                format: byte
                type: string
            application/xml:
              schema:
                format: byte
                type: string
            text/json:
              schema:
                format: byte
                type: string
            text/xml:
              schema:
                format: byte
                type: string
          description: PDF document containing registration extract as byte stream.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If the service was supplied invalid data.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If credentials supplied were invalid.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If requesting entity have no permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If registration matching the Id was not found.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If an unexpected exception occurred whilst processing the request.
      summary: Returns a PDF report for a given registration containing specified
        sections
      tags:
      - Registrations
      x-openapi-router-controller: openapi_server.controllers.registrations_controller
  /api/registrations/{id}/pdf-settlement-status:
    get:
      operationId: get_share_code_pdf_export
      parameters:
      - description: Id of the registration.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: ApiKey supplied.
        explode: false
        in: header
        name: apikey
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value: ZGVmZ2hp
              schema:
                format: byte
                type: string
            application/xml:
              schema:
                format: byte
                type: string
            text/json:
              schema:
                format: byte
                type: string
            text/xml:
              schema:
                format: byte
                type: string
          description: PDF document containing settlement status information extract
            as byte stream.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If the service was supplied invalid data.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If credentials supplied were invalid.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If requesting entity have no permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If registration matching the Id was not found.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If an unexpected exception occurred whilst processing the request.
      summary: Returns settlement status PDF (Share Code) for a given registration.
      tags:
      - Registrations
      x-openapi-router-controller: openapi_server.controllers.registrations_controller
  /api/registrations/{id}/resend-invitation:
    post:
      operationId: resend_invitation
      parameters:
      - description: Id of the registration.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: ApiKey supplied.
        explode: false
        in: header
        name: apikey
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Invitation sent.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If the service was supplied invalid data.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If credentials supplied were invalid.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If requesting entity have no permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If registration matching the Id was not found.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If an unexpected exception occurred whilst processing the request.
      summary: Resends any invitation for the specified registration.
      tags:
      - Registrations
      x-openapi-router-controller: openapi_server.controllers.registrations_controller
  /api/registrations/{id}/settings:
    get:
      operationId: get_registration_settings
      parameters:
      - description: Id of the registration.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: ApiKey supplied.
        explode: false
        in: header
        name: apikey
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Registration settings updated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If the service was supplied invalid data.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If credentials supplied were invalid.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If requesting entity have no permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If registration matching the Id was not found.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If an unexpected exception occurred whilst processing the request.
      summary: Gets registration settings or nothing if there are no settings associated
        with the registration.
      tags:
      - Registrations
      x-openapi-router-controller: openapi_server.controllers.registrations_controller
    put:
      operationId: update_registration_settings
      parameters:
      - description: Id of the registration.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: ApiKey supplied.
        explode: false
        in: header
        name: apikey
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.Registrations.RegistrationSettings'
          application/*+xml:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.Registrations.RegistrationSettings'
          application/json:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.Registrations.RegistrationSettings'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.Registrations.RegistrationSettings'
          application/xml:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.Registrations.RegistrationSettings'
          text/json:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.Registrations.RegistrationSettings'
          text/xml:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.Registrations.RegistrationSettings'
        description: Object containing registration settings.
        x-body-name: body
      responses:
        "200":
          description: Registration settings updated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If the service was supplied invalid data.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If credentials supplied were invalid.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If requesting entity have no permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If registration matching the Id was not found.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If an unexpected exception occurred whilst processing the request.
      summary: Updates registration settings.
      tags:
      - Registrations
      x-openapi-router-controller: openapi_server.controllers.registrations_controller
      x-codegen-request-body-name: body
  /api/registrations/{id}/status:
    put:
      operationId: update_registration_status
      parameters:
      - description: Id of the registration.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: ApiKey supplied.
        explode: false
        in: header
        name: apikey
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.Registrations.UpdateRegistrationStatusRequest'
          application/*+xml:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.Registrations.UpdateRegistrationStatusRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.Registrations.UpdateRegistrationStatusRequest'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.Registrations.UpdateRegistrationStatusRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.Registrations.UpdateRegistrationStatusRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.Registrations.UpdateRegistrationStatusRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.Registrations.UpdateRegistrationStatusRequest'
        description: Request object containing the details.
        x-body-name: body
      responses:
        "200":
          description: Update was successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If the service was supplied invalid data.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If credentials supplied were invalid.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If the registration was not found.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If an unexpected exception occurred whilst processing the request.
      summary: Updates the status of the registration to one specified in the request.
      tags:
      - Registrations
      x-openapi-router-controller: openapi_server.controllers.registrations_controller
      x-codegen-request-body-name: body
  /api/registrations/{id}/summary:
    get:
      operationId: get_registration_summary
      parameters:
      - description: Id of the registration.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: ApiKey supplied.
        explode: false
        in: header
        name: apikey
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    Comments: null
                    CreatedByAgencyUserEmail: null
                    DITFDate: null
                    DITFStatus: 0
                    IsExpired: false
                    VerifiedInAppDate: null
                    bankAccountChecks:
                    - Address1: null
                      City: null
                      Forename: null
                      MiddleName: null
                      PostCode: null
                      Surname: null
                      accountNumber: "12345678"
                      accountNumberValidation: 2
                      accountNumberValidationText: Valid
                      accountStatus: 2
                      accountStatusText: Live
                      accountValid: true
                      addressValidation: 2
                      addressValidationText: Current address
                      checkDate: 2019-08-01T12:15:22
                      checkId: 12345678-1234-5678-abcd-1234567890ab
                      checkStatus: 1
                      error: false
                      hasBeenOverridden: false
                      nameValidation: 2
                      nameValidationText: Valid
                      referenceId: RF1234
                      sortcode: "123456"
                      sortcodeValidation: 2
                      sortcodeValidationText: Valid
                    createdByAgencyUserId: null
                    creditStatusCheck:
                      address: null
                      ccj:
                      - address1: Flat 30
                        address2: "Richmond Court, St. Peters Street"
                        address3: null
                        address4: null
                        address5: null
                        amount: £5000.00
                        caseNumber: CS1113-56-33
                        courtName: CARMARTHEN COUNTY COURT
                        dateEnd: 2017-11-09T00:00:00
                        dob: 1988-12-04T00:00:00
                        judgementDate: 2017-11-09T00:00:00
                        judgementType: 2
                        judgementTypeText: Satisfaction
                        name: ANGELA ZOE SPECIMEN
                        postcode: CF24 3AZ
                      checkDate: 2019-08-01T12:33:11
                      companyDirector:
                      - companyAppointments:
                        - address: "FLAT 30, RICHMOND COURT, ST. PETERS STREET, CARDIFF,\
                            \ CF24 3AZ"
                          appointmentDate: 2015-06-11T00:00:00
                          appointmentType: Current Director
                          dob: 1988-12-04T00:00:00
                          name: Angela Zoe Specimen
                          nationality: British
                          occupation: Field Agent
                          title: Ms
                        companyName: ANGELS LIMITED
                        companyRegNo: "00123456"
                        dateAppointed: 2015-06-11T00:00:00
                        matchType: 3
                        matchTypeText: "Name, Address and Date of Birth"
                        registeredOffice: "FLAT 3, RICHMOND COURT, ST. PETERS STREET,\
                          \ CARDIFF, CF24 3AZ"
                      hasBeenOverridden: false
                      insolvency:
                      - address:
                          address1: Flat 30
                          address2: Richmond Court
                          address3: St Peters Street
                          address4: null
                          address5: null
                          dps: DPS1
                          isEmpty: false
                          postcode: CF24 3AZ
                        aliases: ANGEL UK
                        assetTotal: £2000.00
                        caseNo: IC123456789-22232
                        caseType: Standard
                        court: CARMARTHEN COUNTY COURT
                        debtTotal: £20000.00
                        description: ANGELA ZOE SPECIMEN TRADING AS ANGELS LIMITED
                        dob: 1988-12-04T00:00:00
                        name: ANGELA SPECIMEN
                        occupation: Field Agent
                        presentationDate: 2018-01-15T00:00:00
                        previousAddress: null
                        serviceOffice: MR JON WILLIAM JONES
                        startDate: 2017-12-01T00:00:00
                        status: CURRENT
                        telephoneNumber: "02920113244"
                        tradingNames: ANGELS LTD
                        type: 4
                        typeText: England and Wales DRO
                      person: null
                      status: 3
                    customTermsAccepted: false
                    customTermsAcceptedDateTime: null
                    customTermsAcceptedVersion: null
                    dataCheckResult: 1
                    dataCheckSources:
                    - address: null
                      dateCreated: 2018-02-23T12:54:32.017
                      hasBeenOverridden: false
                      hasPepSanctionsData: false
                      label: Mortality
                      pepSanctionsData: null
                      person: null
                      remarks:
                      - category: 1
                        description: Halo source indicates this person is not deceased
                          at address 1
                      - category: 4
                        description: No middle initial specified by user
                      sourceType: 3
                      status: 1
                    - address: null
                      dateCreated: 2018-02-23T12:54:32.017
                      hasBeenOverridden: false
                      hasPepSanctionsData: false
                      label: Address and DOB
                      pepSanctionsData: null
                      person: null
                      remarks:
                      - category: 1
                        description: "(Electoral Register) Address #1 details are\
                          \ valid"
                      - category: 2
                        description: "(Electoral Register) Surname details not matched\
                          \ address #1"
                      sourceType: 4
                      status: 2
                    - address: null
                      dateCreated: 2018-02-23T12:54:32.017
                      hasBeenOverridden: false
                      hasPepSanctionsData: true
                      label: International Sanctions
                      pepSanctionsData:
                      - addresses:
                        - lines:
                          - 44 Lowbridge Street
                          - Pasadena
                          - California
                          - USA
                        aliases: null
                        fullName: Alan Stuart Harper
                        id: null
                        positions:
                        - country: USA
                          position: Head of local gov
                        sanctionBodies: null
                        sanctionDates:
                        - date: 1937-04-03T12:00:00Z
                          day: 3
                          month: 4
                          type: 1
                          year: 1937
                      person: null
                      remarks:
                      - category: 1
                        description: Full name has not been matched.
                      sourceType: 7
                      status: 1
                    dataChecksPerformed: true
                    dateCompleted: null
                    dateCreated: 2018-02-23T12:54:31.611
                    email: alan.harper@email.com
                    forename: Alan
                    hasLivenessPerformed: false
                    hasSelfie: false
                    id: abcdef12-abcd-abcd-beef-ab123cd12345
                    idDocuments:
                    - addressCity: null
                      addressFull: null
                      addressPostcode: null
                      country: United Kingdom
                      countryCode: GBR
                      dateCreated: 2018-02-23T17:22:11.044
                      dateOfBirth: 1968-11-23T00:00:00
                      description: Passport
                      documentAnalysisResult: 1
                      documentNumber: "123456789"
                      documentSide: 1
                      expiryDate: 2025-04-21T00:00:00
                      facialMatch: true
                      forename: Alan
                      fullName: Alan Harper
                      id: fedcba89-dead-1278-bead-8901234abcde
                      isUnderReview: false
                      manuallyVerified: false
                      middleName: William
                      mrz1: P<GBRHARPER<<ALAN<WILLIAM<<<<<<<<<<<<<<<<<<<
                      mrz2: 1234567897GBR6811233M2504214<<<<<<<<<<<<<<06
                      mrz3: null
                      nameCheck: true
                      nameCheckMethod: 0
                      nfcCheck: true
                      nfcReadStatus: 1
                      primaryScanId: null
                      status: 1
                      surname: Harper
                    - addressCity: London
                      addressFull: "10 Downing St, Westminster, London, SW1A2AA"
                      addressPostcode: SW1A2AA
                      country: United Kingdom
                      countryCode: GBR
                      dateCreated: 2018-02-23T19:24:50.875
                      dateOfBirth: 1968-11-23T00:00:00
                      description: Driving Licence
                      documentAnalysisResult: 2
                      documentNumber: HARPER765453P99RT
                      documentSide: 1
                      expiryDate: 2025-04-21T00:00:00
                      facialMatch: false
                      forename: Alan
                      fullName: Alan William Harper
                      id: fedcba89-dead-1278-bead-8901234abcde
                      isUnderReview: false
                      manuallyVerified: true
                      middleName: William
                      mrz1: null
                      mrz2: null
                      mrz3: null
                      nameCheck: true
                      nameCheckMethod: 0
                      nfcCheck: false
                      nfcReadStatus: 8
                      primaryScanId: null
                      status: 2
                      surname: Harper
                    - addressCity: null
                      addressFull: null
                      addressPostcode: null
                      country: United Kingdom
                      countryCode: GBR
                      dateCreated: 2018-02-23T19:24:51.112
                      dateOfBirth: 1968-11-23T00:00:00
                      description: Driving Licence
                      documentAnalysisResult: 2
                      documentNumber: HARPER765453P99RT
                      documentSide: 2
                      expiryDate: 2025-04-21T00:00:00
                      facialMatch: false
                      forename: Alan
                      fullName: Alan William Harper
                      id: fedcba89-dead-1278-bead-8901234abcff
                      isUnderReview: false
                      manuallyVerified: false
                      middleName: William
                      mrz1: null
                      mrz2: null
                      mrz3: null
                      nameCheck: false
                      nameCheckMethod: 0
                      nfcCheck: false
                      nfcReadStatus: 8
                      primaryScanId: fedcba89-dead-1278-bead-8901234abcde
                      status: 2
                      surname: Harper
                    idVerification: null
                    isAgentLed: false
                    livenessMethod: 1
                    livenessStatus: 1
                    livenessVerified: true
                    middleName: null
                    personalDetails:
                      address:
                        addressLine1: Flat 30
                        addressLine2: "Richmond Court, St. Peters Street"
                        addressLine3: null
                        city: Cardiff
                        country: United Kingdom
                        county: null
                        postcode: CF24 3AZ
                      dateOfBirth: 1978-11-09T00:00:00
                      forename: Alan William
                      surname: Harper
                    phoneNumber: "+4471234567890"
                    proofOfOwnershipCheck:
                      checkStatus: 1
                      hasBeenOverridden: false
                      matchResult: 1
                      matchResultText: Full Name Match
                      propertyOwnership: 2
                      propertyOwnershipText: Joint Ownership
                      titleNumber: TMP123456
                    referenceId: MyRef123
                    regCode: QX92TAG7
                    regTypeId: 12345678-1234-1234-1234-1234567890ab
                    rightToRentCheck: null
                    rightToWorkCheck: null
                    rightToWorkDocumentsProvided: 1
                    safeHarbourVerifiedDate: null
                    safeHarbourVerifiedStatus: 0
                    status: 2
                    surname: Harper
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Registrations.RegistrationSummary'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Registrations.RegistrationSummary'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Registrations.RegistrationSummary'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Registrations.RegistrationSummary'
          description: Registration summary object.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If the service was supplied invalid data.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If credentials supplied were invalid.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If requesting entity have no permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If registration matching the Id was not found.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If an unexpected exception occurred whilst processing the request.
      summary: Finds a registration by the Id.
      tags:
      - Registrations
      x-openapi-router-controller: openapi_server.controllers.registrations_controller
  /api/registrations/{id}/supported-id-documents:
    get:
      operationId: get_registration_supported_id_documents
      parameters:
      - description: Id of the registration.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: ApiKey supplied.
        explode: false
        in: header
        name: apikey
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                  - name: Passport
                    type: 1
                  - name: Driving Licence
                    type: 2
                  - name: National ID Card
                    type: 3
                  - name: CSCS Card
                    type: 4
                  - name: Residence Permit
                    type: 5
                  - name: Visa
                    type: 6
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Registrations.SupportedIdDocument'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Registrations.SupportedIdDocument'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Registrations.SupportedIdDocument'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Registrations.SupportedIdDocument'
          description: List of supported id document objects.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If the service was supplied invalid data.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If credentials supplied were invalid.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If requesting entity have no permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If registration matching the Id was not found.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If an unexpected exception occurred whilst processing the request.
      summary: Get a list of supported id document for the specified registration
        id.
      tags:
      - Registrations
      x-openapi-router-controller: openapi_server.controllers.registrations_controller
  /api/report-view/by-referenceid:
    post:
      description: "It may return none, one or many (up to 20) matching results.\r\
        \nEach result contains a secure url; UTC date/time of when the link expires;\
        \ name details of a person associated with the registration."
      operationId: get_report_view_by_reference_id
      parameters:
      - description: ApiKey supplied.
        explode: false
        in: header
        name: apikey
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.ReportView.GetReportViewByReferenceIdRequest'
          application/*+xml:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.ReportView.GetReportViewByReferenceIdRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.ReportView.GetReportViewByReferenceIdRequest'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.ReportView.GetReportViewByReferenceIdRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.ReportView.GetReportViewByReferenceIdRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.ReportView.GetReportViewByReferenceIdRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.ReportView.GetReportViewByReferenceIdRequest'
        description: Request object
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    results:
                    - forename: Edward
                      surname: Roberts
                      url: https://report.credas.co.uk/link/f7ec8ac1-d935-413b-9100-c7b9b498ca1d
                      validUntil: 2023-04-23T08:45:37.9060623Z
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.ReportView.GetReportViewResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.ReportView.GetReportViewResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.ReportView.GetReportViewResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.ReportView.GetReportViewResponse'
          description: Results of the query
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If the service was supplied invalid data.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If credentials supplied were invalid.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If an unexpected exception occurred whilst processing the request.
      summary: Retrieves secure links to registration details pages searching by the
        Reference Id.
      tags:
      - ReportView
      x-openapi-router-controller: openapi_server.controllers.report_view_controller
      x-codegen-request-body-name: body
  /api/report-view/by-registrationid:
    post:
      description: "It may return none or one matching result.\r\nEach result contains\
        \ a secure url; UTC date/time of when the link expires; name details of a\
        \ person associated with the registration."
      operationId: get_report_view_by_registration_id
      parameters:
      - description: ApiKey supplied.
        explode: false
        in: header
        name: apikey
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.ReportView.GetReportViewByRegistrationIdRequest'
          application/*+xml:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.ReportView.GetReportViewByRegistrationIdRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.ReportView.GetReportViewByRegistrationIdRequest'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.ReportView.GetReportViewByRegistrationIdRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.ReportView.GetReportViewByRegistrationIdRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.ReportView.GetReportViewByRegistrationIdRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.ReportView.GetReportViewByRegistrationIdRequest'
        description: Request object
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    results:
                    - forename: Mike
                      surname: Jones
                      url: https://report.credas.co.uk/link/66ddf7c2-d3b1-4db3-ac13-2ef44d99da74
                      validUntil: 2023-04-23T08:45:37.9077543Z
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.ReportView.GetReportViewResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.ReportView.GetReportViewResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.ReportView.GetReportViewResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.ReportView.GetReportViewResponse'
          description: Results of the query
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If the service was supplied invalid data.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If credentials supplied were invalid.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If an unexpected exception occurred whilst processing the request.
      summary: Retrieves secure link to registration details page searching by the
        Registration Id.
      tags:
      - ReportView
      x-openapi-router-controller: openapi_server.controllers.report_view_controller
      x-codegen-request-body-name: body
  /api/web-verifications/by-referenceid:
    post:
      description: "It may return none, one or many (up to 20) matching results.\r\
        \nEach result contains a secure url; UTC date/time of when the link expires;\
        \ name details of a person associated with the registration."
      operationId: get_web_verifications_by_reference_id
      parameters:
      - description: ApiKey supplied.
        explode: false
        in: header
        name: apikey
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.WebVerifications.GetWebVerificationsByReferenceIdRequest'
          application/*+xml:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.WebVerifications.GetWebVerificationsByReferenceIdRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.WebVerifications.GetWebVerificationsByReferenceIdRequest'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.WebVerifications.GetWebVerificationsByReferenceIdRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.WebVerifications.GetWebVerificationsByReferenceIdRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.WebVerifications.GetWebVerificationsByReferenceIdRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.WebVerifications.GetWebVerificationsByReferenceIdRequest'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    results:
                    - journeyUrl:
                        url: https://pi-verify.credas.co.uk/link/f7ec8ac1-d935-413b-9100-c7b9b498ca1d
                        validUntil: 2023-04-23T08:45:37.9093959Z
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.WebVerifications.GetWebVerificationsResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.WebVerifications.GetWebVerificationsResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.WebVerifications.GetWebVerificationsResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.WebVerifications.GetWebVerificationsResponse'
          description: Results of the query
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If the service was supplied invalid data.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If credentials supplied were invalid.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If an unexpected exception occurred whilst processing the request.
      summary: Retrieves secure links to web verification pages searching by the Reference
        Id.
      tags:
      - WebVerifications
      x-openapi-router-controller: openapi_server.controllers.web_verifications_controller
      x-codegen-request-body-name: body
  /api/web-verifications/by-registrationid:
    post:
      description: "It may return none or one matching result.\r\nEach result contains\
        \ a secure url; UTC date/time of when the link expires; name details of a\
        \ person associated with the registration."
      operationId: get_web_verifications_by_registration_id
      parameters:
      - description: ApiKey supplied.
        explode: false
        in: header
        name: apikey
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.WebVerifications.GetWebVerificationsByRegistrationIdRequest'
          application/*+xml:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.WebVerifications.GetWebVerificationsByRegistrationIdRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.WebVerifications.GetWebVerificationsByRegistrationIdRequest'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.WebVerifications.GetWebVerificationsByRegistrationIdRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.WebVerifications.GetWebVerificationsByRegistrationIdRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.WebVerifications.GetWebVerificationsByRegistrationIdRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/Credas.Api.Models.WebVerifications.GetWebVerificationsByRegistrationIdRequest'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    results:
                    - journeyUrl:
                        url: https://verify.credas.co.uk/link/66ddf7c2-d3b1-4db3-ac13-2ef44d99da74
                        validUntil: 2023-04-23T08:45:37.9109194Z
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.WebVerifications.GetWebVerificationsResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.WebVerifications.GetWebVerificationsResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.WebVerifications.GetWebVerificationsResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.WebVerifications.GetWebVerificationsResponse'
          description: Results of the query
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If the service was supplied invalid data.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If credentials supplied were invalid.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Credas.Api.Models.Errors.ErrorResponse'
          description: If an unexpected exception occurred whilst processing the request.
      summary: Retrieves secure link to web verification page searching by the Registration
        Id.
      tags:
      - WebVerifications
      x-openapi-router-controller: openapi_server.controllers.web_verifications_controller
      x-codegen-request-body-name: body
components:
  schemas:
    Credas.Api.Models.BankAccounts.AccountDetails:
      properties:
        accountNumber:
          title: accountNumber
          type: string
        sortcode:
          title: sortcode
          type: string
      required:
      - accountNumber
      - sortcode
      title: Credas.Api.Models.BankAccounts.AccountDetails
      type: object
    Credas.Api.Models.BankAccounts.AccountVerificationRequest:
      example:
        accountDetails:
          accountNumber: "12345678"
          sortcode: "123456"
        address:
          addressLine1: 10 Downing St
          addressLine2: Westminster
          addressLine3: null
          city: London
          country: United Kingdom
          county: null
          postcode: SW1A2AA
        person:
          forename: Angela
          middleName: null
          surname: UK Specimen
        regEntryId: 141dbb24-c4ff-4658-9556-15ea25428d48
      properties:
        accountDetails:
          $ref: '#/components/schemas/Credas.Api.Models.BankAccounts.AccountDetails'
        address:
          $ref: '#/components/schemas/Credas.Api.Models.DataCheck.Address'
        person:
          $ref: '#/components/schemas/Credas.Api.Models.BankAccounts.Person'
        regEntryId:
          format: uuid
          type: string
      required:
      - accountDetails
      - address
      - person
      - regEntryId
      title: Credas.Api.Models.BankAccounts.AccountVerificationRequest
      type: object
    Credas.Api.Models.BankAccounts.AccountVerificationResponse:
      example:
        accountNumberValidationText: accountNumberValidationText
        addressValidation: 1
        accountValid: true
        error: true
        referenceId: referenceId
        accountStatus: 6
        checkStatus: 5
        sortcodeValidationText: sortcodeValidationText
        Forename: Forename
        hasBeenOverridden: true
        sortcodeValidation: 2
        sortcode: sortcode
        nameValidationText: nameValidationText
        Address1: Address1
        City: City
        MiddleName: MiddleName
        accountNumber: accountNumber
        checkDate: 2000-01-23T04:56:07.000+00:00
        nameValidation: 5
        accountStatusText: accountStatusText
        addressValidationText: addressValidationText
        PostCode: PostCode
        accountNumberValidation: 0
        Surname: Surname
        checkId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        Address1:
          title: Address1
          type: string
        City:
          title: City
          type: string
        Forename:
          title: Forename
          type: string
        MiddleName:
          title: MiddleName
          type: string
        PostCode:
          title: PostCode
          type: string
        Surname:
          title: Surname
          type: string
        accountNumber:
          title: accountNumber
          type: string
        accountNumberValidation:
          description: "Unknown = 0, NoMatch = 1, Valid = 2, Invalid = 3, SevenDigitsMatched\
            \ = 4, SixDigitsMatched = 5"
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          format: int32
          title: accountNumberValidation
          type: integer
        accountNumberValidationText:
          readOnly: true
          title: accountNumberValidationText
          type: string
        accountStatus:
          description: "Unknown = 0, NoMatch = 1, Live = 2, ClosedOrSettled = 3"
          enum:
          - 0
          - 1
          - 2
          - 3
          format: int32
          title: accountStatus
          type: integer
        accountStatusText:
          readOnly: true
          title: accountStatusText
          type: string
        accountValid:
          title: accountValid
          type: boolean
        addressValidation:
          description: "Unknown = 0, NoMatch = 1, CurrentAddress = 2, PreviousAddress\
            \ = 3, ForwardingAddress = 4"
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          format: int32
          title: addressValidation
          type: integer
        addressValidationText:
          readOnly: true
          title: addressValidationText
          type: string
        checkDate:
          format: date-time
          title: checkDate
          type: string
        checkId:
          format: uuid
          title: checkId
          type: string
        checkStatus:
          description: "Unknown = 0, Pass = 1, Refer = 2, Fail = 3"
          enum:
          - 0
          - 1
          - 2
          - 3
          format: int32
          title: checkStatus
          type: integer
        error:
          title: error
          type: boolean
        hasBeenOverridden:
          title: hasBeenOverridden
          type: boolean
        nameValidation:
          description: "Unknown = 0, NoMatch = 1, Valid = 2"
          enum:
          - 0
          - 1
          - 2
          format: int32
          title: nameValidation
          type: integer
        nameValidationText:
          readOnly: true
          title: nameValidationText
          type: string
        referenceId:
          title: referenceId
          type: string
        sortcode:
          title: sortcode
          type: string
        sortcodeValidation:
          description: "Unknown = 0, NoMatch = 1, Valid = 2, Invalid = 3, FiveDigitsMatched\
            \ = 4"
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          format: int32
          title: sortcodeValidation
          type: integer
        sortcodeValidationText:
          readOnly: true
          title: sortcodeValidationText
          type: string
      title: Credas.Api.Models.BankAccounts.AccountVerificationResponse
      type: object
    Credas.Api.Models.BankAccounts.Person:
      properties:
        forename:
          title: forename
          type: string
        middleName:
          title: middleName
          type: string
        surname:
          title: surname
          type: string
      required:
      - forename
      - surname
      title: Credas.Api.Models.BankAccounts.Person
      type: object
    Credas.Api.Models.Companies.CompanyDetail:
      example:
        significantParentCompanies:
        - null
        - null
        companyNumber: companyNumber
        companyName: companyName
        locality: locality
        significantPeople:
        - forename: forename
          regEntryId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          surname: surname
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - forename: forename
          regEntryId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          surname: surname
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        addressLine1: addressLine1
        dateOfRegistration: 2000-01-23T04:56:07.000+00:00
        postCode: postCode
        duplicate: true
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        region: region
      properties:
        addressLine1:
          title: addressLine1
          type: string
        companyName:
          title: companyName
          type: string
        companyNumber:
          title: companyNumber
          type: string
        dateOfRegistration:
          format: date-time
          title: dateOfRegistration
          type: string
        duplicate:
          title: duplicate
          type: boolean
        id:
          format: uuid
          title: id
          type: string
        locality:
          title: locality
          type: string
        postCode:
          title: postCode
          type: string
        region:
          title: region
          type: string
        significantParentCompanies:
          items:
            $ref: '#/components/schemas/Credas.Api.Models.Companies.CompanyDetail'
          title: significantParentCompanies
          type: array
          uniqueItems: false
        significantPeople:
          items:
            $ref: '#/components/schemas/Credas.Api.Models.Companies.SignificantPerson'
          title: significantPeople
          type: array
          uniqueItems: false
      title: Credas.Api.Models.Companies.CompanyDetail
      type: object
    Credas.Api.Models.Companies.SignificantPerson:
      example:
        forename: forename
        regEntryId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        surname: surname
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        forename:
          title: forename
          type: string
        id:
          format: uuid
          title: id
          type: string
        regEntryId:
          format: uuid
          title: regEntryId
          type: string
        surname:
          title: surname
          type: string
      title: Credas.Api.Models.Companies.SignificantPerson
      type: object
    Credas.Api.Models.DataCheck.AddDataCheckRequest:
      example:
        checkType: 2
        currentAddress:
          addressLine1: 25 Westgate Street
          addressLine2: ""
          addressLine3: ""
          city: Cardiff
          country: United Kingdom
          county: Cardiff
          postcode: CF101NS
        person:
          dateOfBirth: 1988-12-04T00:00:00
          forename: Angela
          middleName: null
          surname: UK Specimen
        regEntryId: 141dbb24-c4ff-4658-9556-15ea25428d48
      properties:
        checkType:
          description: "The value of checkType dictates what checks are performed.\
            \ <br/>The StandardAml check (value = 1) will check DOB & Mortality. <br/>The\
            \ InternationalPepSanctions check (value = 3) will check just International\
            \ PEP & Sanctions. <br/>The EnhancedAml check (value = 2) will perform\
            \ both these checks and is equivalent to making two calls with values\
            \ of 1 then 3 and will be charged accordingly. <br />  values=> None =\
            \ 0, StandardAml = 1, EnhancedAml = 2, InternationalPepSanctions = 3"
          enum:
          - 0
          - 1
          - 2
          - 3
          format: int32
          type: integer
        currentAddress:
          $ref: '#/components/schemas/Credas.Api.Models.DataCheck.Address'
        person:
          $ref: '#/components/schemas/Credas.Api.Models.DataCheck.Person'
        regEntryId:
          format: uuid
          type: string
      required:
      - checkType
      - currentAddress
      - person
      - regEntryId
      title: Credas.Api.Models.DataCheck.AddDataCheckRequest
      type: object
    Credas.Api.Models.DataCheck.AddDataCheckResponse:
      example:
        regCode: regCode
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          format: uuid
          title: id
          type: string
        regCode:
          title: regCode
          type: string
      required:
      - id
      - regCode
      title: Credas.Api.Models.DataCheck.AddDataCheckResponse
      type: object
    Credas.Api.Models.DataCheck.Address:
      example:
        country: country
        city: city
        county: county
        postcode: postcode
        addressLine1: addressLine1
        addressLine2: addressLine2
        addressLine3: addressLine3
      properties:
        addressLine1:
          pattern: "^([A-Za-z0-9 '\\.,&\\(\\)\\/-]*)$"
          title: addressLine1
          type: string
        addressLine2:
          pattern: "^([A-Za-z0-9 '\\.,&\\(\\)\\/-]*)$"
          title: addressLine2
          type: string
        addressLine3:
          pattern: "^([A-Za-z0-9 '\\.,&\\(\\)\\/-]*)$"
          title: addressLine3
          type: string
        city:
          pattern: "^([A-Za-z0-9 '\\.,&\\(\\)\\/-]*)$"
          title: city
          type: string
        country:
          pattern: "^([A-Za-z0-9 '\\.,&\\(\\)\\/-]*)$"
          title: country
          type: string
        county:
          pattern: "^([A-Za-z0-9 '\\.,&\\(\\)\\/-]*)$"
          title: county
          type: string
        postcode:
          pattern: "^([A-Za-z0-9 '\\.,&\\(\\)\\/-]*)$"
          title: postcode
          type: string
      required:
      - addressLine1
      - city
      - country
      - postcode
      title: Credas.Api.Models.DataCheck.Address
      type: object
    Credas.Api.Models.DataCheck.CheckRemark:
      example:
        description: description
        category: 2
      properties:
        category:
          description: "Match = 1, Mismatch = 2, Warning = 3, Comment = 4"
          enum:
          - 1
          - 2
          - 3
          - 4
          format: int32
          title: category
          type: integer
        description:
          title: description
          type: string
      title: Credas.Api.Models.DataCheck.CheckRemark
      type: object
    Credas.Api.Models.DataCheck.PepSanctions.PepSanctionItem:
      example:
        addresses:
        - lines:
          - lines
          - lines
        - lines:
          - lines
          - lines
        aliases:
        - aliases
        - aliases
        sanctionBodies:
        - sanctionBodies
        - sanctionBodies
        sanctionDates:
        - date: 2000-01-23T04:56:07.000+00:00
          month: 7
          year: 3
          type: 9
          day: 2
        - date: 2000-01-23T04:56:07.000+00:00
          month: 7
          year: 3
          type: 9
          day: 2
        fullName: fullName
        positions:
        - country: country
          position: position
        - country: country
          position: position
        id: id
      properties:
        addresses:
          items:
            $ref: '#/components/schemas/Credas.Api.Models.DataCheck.PepSanctions.SanctionAddress'
          title: addresses
          type: array
          uniqueItems: false
        aliases:
          items:
            type: string
          title: aliases
          type: array
          uniqueItems: false
        fullName:
          title: fullName
          type: string
        id:
          title: id
          type: string
        positions:
          items:
            $ref: '#/components/schemas/Credas.Api.Models.DataCheck.PepSanctions.SanctionPosition'
          title: positions
          type: array
          uniqueItems: false
        sanctionBodies:
          items:
            type: string
          title: sanctionBodies
          type: array
          uniqueItems: false
        sanctionDates:
          items:
            $ref: '#/components/schemas/Credas.Api.Models.DataCheck.PepSanctions.SanctionDate'
          title: sanctionDates
          type: array
          uniqueItems: false
      title: Credas.Api.Models.DataCheck.PepSanctions.PepSanctionItem
      type: object
    Credas.Api.Models.DataCheck.PepSanctions.SanctionAddress:
      example:
        lines:
        - lines
        - lines
      properties:
        lines:
          items:
            type: string
          title: lines
          type: array
          uniqueItems: false
      title: Credas.Api.Models.DataCheck.PepSanctions.SanctionAddress
      type: object
    Credas.Api.Models.DataCheck.PepSanctions.SanctionDate:
      example:
        date: 2000-01-23T04:56:07.000+00:00
        month: 7
        year: 3
        type: 9
        day: 2
      properties:
        date:
          format: date-time
          readOnly: true
          title: date
          type: string
        day:
          format: int32
          title: day
          type: integer
        month:
          format: int32
          title: month
          type: integer
        type:
          description: "Unknown = 0, Birth = 1, Death = 2"
          enum:
          - 0
          - 1
          - 2
          format: int32
          title: type
          type: integer
        year:
          format: int32
          title: year
          type: integer
      title: Credas.Api.Models.DataCheck.PepSanctions.SanctionDate
      type: object
    Credas.Api.Models.DataCheck.PepSanctions.SanctionPosition:
      example:
        country: country
        position: position
      properties:
        country:
          title: country
          type: string
        position:
          title: position
          type: string
      title: Credas.Api.Models.DataCheck.PepSanctions.SanctionPosition
      type: object
    Credas.Api.Models.DataCheck.Person:
      example:
        forename: forename
        surname: surname
        dateOfBirth: 2000-01-23T04:56:07.000+00:00
        middleName: middleName
      properties:
        dateOfBirth:
          format: date-time
          title: dateOfBirth
          type: string
        forename:
          pattern: "^([A-Za-z0-9 '\\.,&\\(\\)\\/-]*)$"
          title: forename
          type: string
        middleName:
          pattern: "^([A-Za-z0-9 '\\.,&\\(\\)\\/-]*)$"
          title: middleName
          type: string
        surname:
          pattern: "^([A-Za-z0-9 '\\.,&\\(\\)\\/-]*)$"
          title: surname
          type: string
      required:
      - dateOfBirth
      - forename
      - surname
      title: Credas.Api.Models.DataCheck.Person
      type: object
    Credas.Api.Models.Errors.ErrorResponse:
      example:
        details: "{}"
        message: message
      properties:
        details:
          title: details
          type: object
        message:
          title: message
          type: string
      title: Credas.Api.Models.Errors.ErrorResponse
      type: object
    Credas.Api.Models.Images.AddIdDocumentImageRequest:
      example:
        documentParameters: null
        documentType: 1
        imageData: Base64EncodedJpegImage
        registrationId: 141dbb24-c4ff-4658-9556-15ea25428d48
      properties:
        documentParameters:
          items:
            $ref: '#/components/schemas/Credas.Api.Models.Registrations.KeyValueItem'
          type: array
          uniqueItems: false
        documentType:
          description: "Other = 0, Passport = 1, DrivingLicence = 2, Visa = 3, CscsCard\
            \ = 4, HomeOfficeLetter = 5, BirthCertificate = 6, NationalIdCard = 7,\
            \ ResidencePermit = 9, UtilityBill = 11"
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 9
          - 10
          - 11
          format: int32
          type: integer
        imageData:
          type: string
        registrationId:
          format: uuid
          type: string
      required:
      - documentType
      - imageData
      - registrationId
      title: Credas.Api.Models.Images.AddIdDocumentImageRequest
      type: object
    Credas.Api.Models.Images.AddIdDocumentImageResponse:
      example:
        facialMatch: true
        documentType: 6
        documentStatus: 0
        regCode: regCode
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        documentStatus:
          description: "Active = 1, Deleted = 2, UnderReview = 3"
          enum:
          - 1
          - 2
          - 3
          format: int32
          title: documentStatus
          type: integer
        documentType:
          description: "Unknown = 0, Passport = 1, DrivingLicense = 2, IdentificationCard\
            \ = 3, TaxLetter = 4, NIC_Letter = 5, TV_Licence = 6, UtilityBill = 7,\
            \ HighRiskWorkLicence = 8, TravelPermit = 9, BankLetter = 10, BenefitLetter\
            \ = 11, BankStatement = 12, NINO_Letter = 13, CouncilTax = 14, ResidentPermit\
            \ = 15, PhotoCard = 16, RepaymentLetter = 17, Invoice = 18, Visa = 19,\
            \ AgeIdentificationCard = 20, MedicareCard = 21, MilitaryIdentificationCard\
            \ = 22, UtilityLetter = 23, CouncilDocument = 24, JobLicence = 25, MembershipIDCard\
            \ = 26, MilitaryIDCard = 27, ProofOfAgeCard = 28, TravelPermitNew = 29,\
            \ WeaponsLicence = 30, AccountStatement = 41, TenancyAgreement = 42, BankDocument\
            \ = 43, BankLetterNew = 44, BankStatementNew = 45, BenefitLetterNew =\
            \ 46, CouncilDocumentNew = 48, CouncilLetter = 49, CouncilTaxNew = 50,\
            \ DWPDocument = 51, HMRCDocument = 52, InformationSheet = 53, InsuranceDocument\
            \ = 54, InsuranceLetter = 55, InvoiceNew = 56, NICLetter = 57, NINOLetter\
            \ = 58, OfficialDocument = 59, OfficialLetter = 60, RepaymentLetterNew\
            \ = 61, TaxLetterNew = 62, TaxStatement = 63, TelBill = 64, TelLetter\
            \ = 65, TelecommunicationDocument = 66, TVLicence = 67, UniversityLetter\
            \ = 68, UtilityBillNew = 69, UtilityDocument = 70, UtilityLetterNew =\
            \ 71, WaterBill = 72, WaterDocument = 73, HighRiskWorkLicenceNew = 74,\
            \ PhotoCardNew = 75, MedicareCardNew = 76, Certificate = 77"
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - 9
          - 10
          - 11
          - 12
          - 13
          - 14
          - 15
          - 16
          - 17
          - 18
          - 19
          - 20
          - 21
          - 22
          - 23
          - 24
          - 25
          - 26
          - 27
          - 28
          - 29
          - 30
          - 41
          - 42
          - 43
          - 44
          - 45
          - 46
          - 48
          - 49
          - 50
          - 51
          - 52
          - 53
          - 54
          - 55
          - 56
          - 57
          - 58
          - 59
          - 60
          - 61
          - 62
          - 63
          - 64
          - 65
          - 66
          - 67
          - 68
          - 69
          - 70
          - 71
          - 72
          - 73
          - 74
          - 75
          - 76
          - 77
          format: int32
          title: documentType
          type: integer
        facialMatch:
          title: facialMatch
          type: boolean
        id:
          format: uuid
          title: id
          type: string
        regCode:
          title: regCode
          type: string
      required:
      - documentStatus
      - documentType
      - facialMatch
      - id
      - regCode
      title: Credas.Api.Models.Images.AddIdDocumentImageResponse
      type: object
    Credas.Api.Models.Images.AddLivenessImageRequest:
      example:
        imageData: Base64EncodedJpegImage
        registrationId: 141dbb24-c4ff-4658-9556-15ea25428d48
      properties:
        imageData:
          type: string
        registrationId:
          format: uuid
          type: string
      required:
      - imageData
      - registrationId
      title: Credas.Api.Models.Images.AddLivenessImageRequest
      type: object
    Credas.Api.Models.Images.AddSelfieImageRequest:
      example:
        imageData: Base64EncodedJpegImage
        registrationId: 141dbb24-c4ff-4658-9556-15ea25428d48
      properties:
        imageData:
          type: string
        registrationId:
          format: uuid
          type: string
      required:
      - imageData
      - registrationId
      title: Credas.Api.Models.Images.AddSelfieImageRequest
      type: object
    Credas.Api.Models.Images.AddSelfieImageResponse:
      example:
        livenessConfirmed: true
      properties:
        livenessConfirmed:
          title: livenessConfirmed
          type: boolean
      required:
      - livenessConfirmed
      title: Credas.Api.Models.Images.AddSelfieImageResponse
      type: object
    Credas.Api.Models.Images.GetIdDocumentImageResponse:
      example:
        addressFull: addressFull
        country: country
        documentAnalysisResult: 0
        documentNumber: documentNumber
        nameCheck: true
        description: description
        hiResUrl: hiResUrl
        nfcReadStatus: 5
        expiryDate: 2000-01-23T04:56:07.000+00:00
        nfcCheck: true
        primaryScanId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        forename: forename
        dateCreated: 2000-01-23T04:56:07.000+00:00
        isUnderReview: true
        countryCode: countryCode
        surname: surname
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        addressCity: addressCity
        facialMatch: true
        documentSide: 6
        nameCheckMethod: 1
        addressPostcode: addressPostcode
        fullName: fullName
        dateOfBirth: 2000-01-23T04:56:07.000+00:00
        mrz3: mrz3
        mrz2: mrz2
        url: url
        mrz1: mrz1
        middleName: middleName
        nfcFacialUrl: nfcFacialUrl
        manuallyVerified: true
        status: 5
      properties:
        addressCity:
          title: addressCity
          type: string
        addressFull:
          title: addressFull
          type: string
        addressPostcode:
          title: addressPostcode
          type: string
        country:
          title: country
          type: string
        countryCode:
          title: countryCode
          type: string
        dateCreated:
          format: date-time
          title: dateCreated
          type: string
        dateOfBirth:
          format: date-time
          title: dateOfBirth
          type: string
        description:
          title: description
          type: string
        documentAnalysisResult:
          description: "Unknown = 0, Passed = 1, Refer = 2, Expired = 3, NotSupported\
            \ = 4, Undefined = 5, Fail = 10, NotPerformed = 11"
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 10
          - 11
          format: int32
          title: documentAnalysisResult
          type: integer
        documentNumber:
          title: documentNumber
          type: string
        documentSide:
          description: "Front = 1, Back = 2"
          enum:
          - 0
          - 1
          - 2
          format: int32
          title: documentSide
          type: integer
        expiryDate:
          format: date-time
          title: expiryDate
          type: string
        facialMatch:
          title: facialMatch
          type: boolean
        forename:
          title: forename
          type: string
        fullName:
          title: fullName
          type: string
        hiResUrl:
          title: hiResUrl
          type: string
        id:
          format: uuid
          title: id
          type: string
        isUnderReview:
          title: isUnderReview
          type: boolean
        manuallyVerified:
          title: manuallyVerified
          type: boolean
        middleName:
          title: middleName
          type: string
        mrz1:
          title: mrz1
          type: string
        mrz2:
          title: mrz2
          type: string
        mrz3:
          title: mrz3
          type: string
        nameCheck:
          title: nameCheck
          type: boolean
        nameCheckMethod:
          description: "Unknown = 0, Automatic = 1, Manual = 2"
          enum:
          - 0
          - 1
          - 2
          format: int32
          title: nameCheckMethod
          type: integer
        nfcCheck:
          title: nfcCheck
          type: boolean
        nfcFacialUrl:
          title: nfcFacialUrl
          type: string
        nfcReadStatus:
          description: "Unknown = 0, Passed = 1, Failed = 2, NotAttempted = 3, Skipped\
            \ = 4, Unavailable = 5, NotAllowed = 6, NotTrusted = 7, NotApplicable\
            \ = 8, Expired = 9, UnavailableWebJourney = 10"
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - 9
          - 10
          format: int32
          title: nfcReadStatus
          type: integer
        primaryScanId:
          format: uuid
          title: primaryScanId
          type: string
        status:
          description: "Indicates the verification status of the document itself by\
            \ combining visual analysis and NFC verification results. </br>Note that\
            \ this may be a pass even if facial or name matches have failed.<br />\
            \  values=> Unknown = 0, Pass = 1, Refer = 2, Fail = 3"
          enum:
          - 0
          - 1
          - 2
          - 3
          format: int32
          title: status
          type: integer
        surname:
          title: surname
          type: string
        url:
          title: url
          type: string
      required:
      - dateCreated
      - description
      - facialMatch
      - hiResUrl
      - id
      - nameCheck
      - nameCheckMethod
      - nfcCheck
      - nfcReadStatus
      - status
      - url
      title: Credas.Api.Models.Images.GetIdDocumentImageResponse
      type: object
    Credas.Api.Models.Images.GetLivenessImageResponse:
      example:
        description: description
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        url: url
      properties:
        description:
          title: description
          type: string
        id:
          format: uuid
          title: id
          type: string
        url:
          title: url
          type: string
      title: Credas.Api.Models.Images.GetLivenessImageResponse
      type: object
    Credas.Api.Models.Images.GetLivenessPerformedImageResponse:
      example:
        base64Data: base64Data
        url: url
      properties:
        base64Data:
          title: base64Data
          type: string
        url:
          title: url
          type: string
      title: Credas.Api.Models.Images.GetLivenessPerformedImageResponse
      type: object
    Credas.Api.Models.Images.GetSelfieImageResponse:
      example:
        base64Data: base64Data
        url: url
      properties:
        base64Data:
          title: base64Data
          type: string
        url:
          title: url
          type: string
      title: Credas.Api.Models.Images.GetSelfieImageResponse
      type: object
    Credas.Api.Models.PropertyRegister.Address:
      properties:
        addressLine1:
          title: addressLine1
          type: string
        addressLine2:
          title: addressLine2
          type: string
        addressLine3:
          title: addressLine3
          type: string
        city:
          title: city
          type: string
        country:
          title: country
          type: string
        county:
          title: county
          type: string
        postcode:
          title: postcode
          type: string
      required:
      - addressLine1
      - city
      - country
      - postcode
      title: Credas.Api.Models.PropertyRegister.Address
      type: object
    Credas.Api.Models.PropertyRegister.Person:
      properties:
        forename:
          title: forename
          type: string
        middleName:
          title: middleName
          type: string
        surname:
          title: surname
          type: string
      required:
      - forename
      - surname
      title: Credas.Api.Models.PropertyRegister.Person
      type: object
    Credas.Api.Models.PropertyRegister.PropertyRegisterCheckRequest:
      example:
        address:
          addressLine1: 25 Westgate Street
          addressLine2: null
          addressLine3: null
          city: Cardiff
          country: United Kingdom
          county: Cardiff
          postcode: CF101NS
        person:
          forename: Angela
          middleName: null
          surname: UK Specimen
        regEntryId: 12345678-1234-1234-1234-1234567890ab
      properties:
        address:
          $ref: '#/components/schemas/Credas.Api.Models.PropertyRegister.Address'
        person:
          $ref: '#/components/schemas/Credas.Api.Models.PropertyRegister.Person'
        regEntryId:
          format: uuid
          type: string
      required:
      - address
      - person
      - regEntryId
      title: Credas.Api.Models.PropertyRegister.PropertyRegisterCheckRequest
      type: object
    Credas.Api.Models.PropertyRegister.PropertyRegisterCheckResponse:
      example:
        checkStatus: 0
        matchResultText: matchResultText
        propertyOwnershipText: propertyOwnershipText
        titleNumber: titleNumber
        matchResult: 6
        hasBeenOverridden: true
        propertyOwnership: 1
      properties:
        checkStatus:
          description: "Unknown = 0, Pass = 1, Refer = 2, Fail = 3"
          enum:
          - 0
          - 1
          - 2
          - 3
          format: int32
          title: checkStatus
          type: integer
        hasBeenOverridden:
          title: hasBeenOverridden
          type: boolean
        matchResult:
          description: "Unknown = 0, FullNameMatch = 1, SurnameMatch = 2, NoNameMatch\
            \ = 3, NoAddressMatch = 4, TitleNotRegistered = 5, Unavailable = 6, OutOfHours\
            \ = 7"
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          format: int32
          title: matchResult
          type: integer
        matchResultText:
          title: matchResultText
          type: string
        propertyOwnership:
          description: "Unknown = 0, SoleOwnership = 1, JointOwnership = 2"
          enum:
          - 0
          - 1
          - 2
          format: int32
          title: propertyOwnership
          type: integer
        propertyOwnershipText:
          title: propertyOwnershipText
          type: string
        titleNumber:
          title: titleNumber
          type: string
      title: Credas.Api.Models.PropertyRegister.PropertyRegisterCheckResponse
      type: object
    Credas.Api.Models.RegTypes.RegType:
      example:
        name: name
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          format: uuid
          title: id
          type: string
        name:
          title: name
          type: string
      title: Credas.Api.Models.RegTypes.RegType
      type: object
    Credas.Api.Models.Registrations.AddInstantRegistrationRequest:
      example:
        document: Base64EncodedJpegImage
        documentParameters: null
        documentType: 1
        forename: Alan
        middleName: null
        parameters:
        - key: Param1
          value: Value 1
        - key: Param2
          value: "123456"
        - key: Param3
          value: "true"
        referenceId: MyRef123
        regTypeId: 12345678-1234-1234-1234-1234567890ab
        selfie: Base64EncodedJpegImage
        significantPersonId: null
        surname: Harper
      properties:
        document:
          type: string
        documentParameters:
          items:
            $ref: '#/components/schemas/Credas.Api.Models.Registrations.KeyValueItem'
          type: array
          uniqueItems: false
        documentType:
          description: "Other = 0, Passport = 1, DrivingLicence = 2, Visa = 3, CscsCard\
            \ = 4, HomeOfficeLetter = 5, BirthCertificate = 6, NationalIdCard = 7,\
            \ ResidencePermit = 9, UtilityBill = 11"
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 9
          - 10
          - 11
          format: int32
          type: integer
        forename:
          maxLength: 50
          minLength: 1
          type: string
        middleName:
          maxLength: 50
          minLength: 1
          type: string
        parameters:
          items:
            $ref: '#/components/schemas/Credas.Api.Models.Registrations.KeyValueItem'
          type: array
          uniqueItems: false
        referenceId:
          maxLength: 255
          minLength: 0
          type: string
        regTypeId:
          format: uuid
          type: string
        selfie:
          type: string
        significantPersonId:
          format: uuid
          type: string
        surname:
          maxLength: 50
          minLength: 1
          type: string
      required:
      - document
      - documentType
      - forename
      - regTypeId
      - surname
      title: Credas.Api.Models.Registrations.AddInstantRegistrationRequest
      type: object
    Credas.Api.Models.Registrations.AddInstantRegistrationResponse:
      example:
        facialMatch: true
        documentType: 6
        documentStatus: 0
        regCode: regCode
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        documentStatus:
          description: "Active = 1, Deleted = 2, UnderReview = 3"
          enum:
          - 1
          - 2
          - 3
          format: int32
          title: documentStatus
          type: integer
        documentType:
          description: "Unknown = 0, Passport = 1, DrivingLicense = 2, IdentificationCard\
            \ = 3, TaxLetter = 4, NIC_Letter = 5, TV_Licence = 6, UtilityBill = 7,\
            \ HighRiskWorkLicence = 8, TravelPermit = 9, BankLetter = 10, BenefitLetter\
            \ = 11, BankStatement = 12, NINO_Letter = 13, CouncilTax = 14, ResidentPermit\
            \ = 15, PhotoCard = 16, RepaymentLetter = 17, Invoice = 18, Visa = 19,\
            \ AgeIdentificationCard = 20, MedicareCard = 21, MilitaryIdentificationCard\
            \ = 22, UtilityLetter = 23, CouncilDocument = 24, JobLicence = 25, MembershipIDCard\
            \ = 26, MilitaryIDCard = 27, ProofOfAgeCard = 28, TravelPermitNew = 29,\
            \ WeaponsLicence = 30, AccountStatement = 41, TenancyAgreement = 42, BankDocument\
            \ = 43, BankLetterNew = 44, BankStatementNew = 45, BenefitLetterNew =\
            \ 46, CouncilDocumentNew = 48, CouncilLetter = 49, CouncilTaxNew = 50,\
            \ DWPDocument = 51, HMRCDocument = 52, InformationSheet = 53, InsuranceDocument\
            \ = 54, InsuranceLetter = 55, InvoiceNew = 56, NICLetter = 57, NINOLetter\
            \ = 58, OfficialDocument = 59, OfficialLetter = 60, RepaymentLetterNew\
            \ = 61, TaxLetterNew = 62, TaxStatement = 63, TelBill = 64, TelLetter\
            \ = 65, TelecommunicationDocument = 66, TVLicence = 67, UniversityLetter\
            \ = 68, UtilityBillNew = 69, UtilityDocument = 70, UtilityLetterNew =\
            \ 71, WaterBill = 72, WaterDocument = 73, HighRiskWorkLicenceNew = 74,\
            \ PhotoCardNew = 75, MedicareCardNew = 76, Certificate = 77"
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - 9
          - 10
          - 11
          - 12
          - 13
          - 14
          - 15
          - 16
          - 17
          - 18
          - 19
          - 20
          - 21
          - 22
          - 23
          - 24
          - 25
          - 26
          - 27
          - 28
          - 29
          - 30
          - 41
          - 42
          - 43
          - 44
          - 45
          - 46
          - 48
          - 49
          - 50
          - 51
          - 52
          - 53
          - 54
          - 55
          - 56
          - 57
          - 58
          - 59
          - 60
          - 61
          - 62
          - 63
          - 64
          - 65
          - 66
          - 67
          - 68
          - 69
          - 70
          - 71
          - 72
          - 73
          - 74
          - 75
          - 76
          - 77
          format: int32
          title: documentType
          type: integer
        facialMatch:
          title: facialMatch
          type: boolean
        id:
          format: uuid
          title: id
          type: string
        regCode:
          title: regCode
          type: string
      required:
      - documentStatus
      - documentType
      - facialMatch
      - id
      - regCode
      title: Credas.Api.Models.Registrations.AddInstantRegistrationResponse
      type: object
    Credas.Api.Models.Registrations.AddRegistrationRequest:
      example:
        diallingCode: "+44"
        duplicateAcknowledgement: false
        emailAddress: user@email.com
        forename: Alan
        middleName: null
        parameters:
        - key: Param1
          value: Value 1
        - key: Param2
          value: "123456"
        - key: Param3
          value: "true"
        phoneNumber: "7123456789"
        provideWebJourneyLink: true
        referenceId: HID-12345-336-10
        regTypeId: 12345678-1234-1234-1234-1234567890ab
        returnUrls:
          returnUrl: https://www.example.com/registration-complete/123456
        sendEmail: true
        sendSms: false
        settings:
          capturePersonalDetails: true
          checkProfile: 2
          legislation: 3
          nameMatchRoutine: null
          requiredChecks: null
          skipEmailStep: true
        significantPersonId: null
        surname: Harper
      properties:
        diallingCode:
          maxLength: 10
          minLength: 1
          type: string
        duplicateAcknowledgement:
          type: boolean
        emailAddress:
          maxLength: 250
          minLength: 0
          type: string
        forename:
          maxLength: 50
          minLength: 1
          type: string
        middleName:
          maxLength: 50
          minLength: 1
          type: string
        parameters:
          items:
            $ref: '#/components/schemas/Credas.Api.Models.Registrations.KeyValueItem'
          type: array
          uniqueItems: false
        phoneNumber:
          maxLength: 20
          minLength: 1
          type: string
        provideWebJourneyLink:
          type: boolean
        referenceId:
          maxLength: 255
          minLength: 0
          type: string
        regTypeId:
          format: uuid
          type: string
        returnUrls:
          $ref: '#/components/schemas/Credas.Api.Models.Registrations.ReturnUrls'
        sendEmail:
          type: boolean
        sendSms:
          type: boolean
        settings:
          $ref: '#/components/schemas/Credas.Api.Models.Registrations.RegistrationSettings'
        significantPersonId:
          format: uuid
          type: string
        surname:
          maxLength: 50
          minLength: 1
          type: string
      required:
      - forename
      - regTypeId
      - sendSms
      - surname
      title: Credas.Api.Models.Registrations.AddRegistrationRequest
      type: object
    Credas.Api.Models.Registrations.AddRegistrationResponse:
      example:
        regCode: regCode
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        webJourneyUrl:
          validUntil: 2000-01-23T04:56:07.000+00:00
          url: url
      properties:
        id:
          format: uuid
          title: id
          type: string
        regCode:
          title: regCode
          type: string
        webJourneyUrl:
          $ref: '#/components/schemas/Credas.Api.Models.Registrations.JourneyUrl'
      required:
      - id
      - regCode
      title: Credas.Api.Models.Registrations.AddRegistrationResponse
      type: object
    Credas.Api.Models.Registrations.CheckSubmittedIdDocumentsResponse:
      example:
        message: message
        checkCode: 0
      properties:
        checkCode:
          description: "Ok = 1, MayContinue = 2, CannotContinue = 3"
          enum:
          - 1
          - 2
          - 3
          format: int32
          title: checkCode
          type: integer
        message:
          title: message
          type: string
      title: Credas.Api.Models.Registrations.CheckSubmittedIdDocumentsResponse
      type: object
    Credas.Api.Models.Registrations.DataCheckSourceSummary:
      example:
        pepSanctionsData:
        - addresses:
          - lines:
            - lines
            - lines
          - lines:
            - lines
            - lines
          aliases:
          - aliases
          - aliases
          sanctionBodies:
          - sanctionBodies
          - sanctionBodies
          sanctionDates:
          - date: 2000-01-23T04:56:07.000+00:00
            month: 7
            year: 3
            type: 9
            day: 2
          - date: 2000-01-23T04:56:07.000+00:00
            month: 7
            year: 3
            type: 9
            day: 2
          fullName: fullName
          positions:
          - country: country
            position: position
          - country: country
            position: position
          id: id
        - addresses:
          - lines:
            - lines
            - lines
          - lines:
            - lines
            - lines
          aliases:
          - aliases
          - aliases
          sanctionBodies:
          - sanctionBodies
          - sanctionBodies
          sanctionDates:
          - date: 2000-01-23T04:56:07.000+00:00
            month: 7
            year: 3
            type: 9
            day: 2
          - date: 2000-01-23T04:56:07.000+00:00
            month: 7
            year: 3
            type: 9
            day: 2
          fullName: fullName
          positions:
          - country: country
            position: position
          - country: country
            position: position
          id: id
        address:
          country: country
          city: city
          county: county
          postcode: postcode
          addressLine1: addressLine1
          addressLine2: addressLine2
          addressLine3: addressLine3
        dateCreated: 2000-01-23T04:56:07.000+00:00
        sourceType: 4
        person:
          forename: forename
          surname: surname
          dateOfBirth: 2000-01-23T04:56:07.000+00:00
          middleName: middleName
        hasPepSanctionsData: true
        hasBeenOverridden: true
        label: label
        remarks:
        - description: description
          category: 2
        - description: description
          category: 2
        status: 7
      properties:
        address:
          $ref: '#/components/schemas/Credas.Api.Models.DataCheck.Address'
        dateCreated:
          format: date-time
          title: dateCreated
          type: string
        hasBeenOverridden:
          title: hasBeenOverridden
          type: boolean
        hasPepSanctionsData:
          readOnly: true
          title: hasPepSanctionsData
          type: boolean
        label:
          title: label
          type: string
        pepSanctionsData:
          items:
            $ref: '#/components/schemas/Credas.Api.Models.DataCheck.PepSanctions.PepSanctionItem'
          title: pepSanctionsData
          type: array
          uniqueItems: false
        person:
          $ref: '#/components/schemas/Credas.Api.Models.DataCheck.Person'
        remarks:
          items:
            $ref: '#/components/schemas/Credas.Api.Models.DataCheck.CheckRemark'
          title: remarks
          type: array
          uniqueItems: false
        sourceType:
          description: "Unknown = 0, EditedElectoralRollUk = 1, LandlineAppendUk =\
            \ 2, MortalityUk = 3, CreaditHeaderAmlUk = 4, NcoaAlertFlagUk = 5, NcoaAlertFullUk\
            \ = 6, SanctionsEnhancedInternational = 7, PepEnhancedInternational =\
            \ 8, NationalIdentityRegisterUk = 9, LandRegistry = 10"
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - 9
          - 10
          format: int32
          title: sourceType
          type: integer
        status:
          description: "Unknown = 0, Pass = 1, Refer = 2, Fail = 3"
          enum:
          - 0
          - 1
          - 2
          - 3
          format: int32
          title: status
          type: integer
      title: Credas.Api.Models.Registrations.DataCheckSourceSummary
      type: object
    Credas.Api.Models.Registrations.IdDocumentSummary:
      example:
        addressFull: addressFull
        country: country
        documentAnalysisResult: 1
        documentNumber: documentNumber
        nameCheck: true
        description: description
        nfcReadStatus: 6
        expiryDate: 2000-01-23T04:56:07.000+00:00
        nfcCheck: true
        primaryScanId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        forename: forename
        dateCreated: 2000-01-23T04:56:07.000+00:00
        isUnderReview: true
        countryCode: countryCode
        surname: surname
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        addressCity: addressCity
        facialMatch: true
        documentSide: 1
        nameCheckMethod: 1
        addressPostcode: addressPostcode
        fullName: fullName
        dateOfBirth: 2000-01-23T04:56:07.000+00:00
        mrz3: mrz3
        mrz2: mrz2
        mrz1: mrz1
        middleName: middleName
        manuallyVerified: true
        status: 7
      properties:
        addressCity:
          title: addressCity
          type: string
        addressFull:
          title: addressFull
          type: string
        addressPostcode:
          title: addressPostcode
          type: string
        country:
          title: country
          type: string
        countryCode:
          title: countryCode
          type: string
        dateCreated:
          format: date-time
          title: dateCreated
          type: string
        dateOfBirth:
          format: date-time
          title: dateOfBirth
          type: string
        description:
          title: description
          type: string
        documentAnalysisResult:
          description: "Unknown = 0, Passed = 1, Refer = 2, Expired = 3, NotSupported\
            \ = 4, Undefined = 5, Fail = 10, NotPerformed = 11"
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 10
          - 11
          format: int32
          title: documentAnalysisResult
          type: integer
        documentNumber:
          title: documentNumber
          type: string
        documentSide:
          description: "Front = 1, Back = 2"
          enum:
          - 0
          - 1
          - 2
          format: int32
          title: documentSide
          type: integer
        expiryDate:
          format: date-time
          title: expiryDate
          type: string
        facialMatch:
          title: facialMatch
          type: boolean
        forename:
          title: forename
          type: string
        fullName:
          title: fullName
          type: string
        id:
          format: uuid
          title: id
          type: string
        isUnderReview:
          title: isUnderReview
          type: boolean
        manuallyVerified:
          title: manuallyVerified
          type: boolean
        middleName:
          title: middleName
          type: string
        mrz1:
          title: mrz1
          type: string
        mrz2:
          title: mrz2
          type: string
        mrz3:
          title: mrz3
          type: string
        nameCheck:
          title: nameCheck
          type: boolean
        nameCheckMethod:
          description: "Unknown = 0, Automatic = 1, Manual = 2"
          enum:
          - 0
          - 1
          - 2
          format: int32
          title: nameCheckMethod
          type: integer
        nfcCheck:
          title: nfcCheck
          type: boolean
        nfcReadStatus:
          description: "Unknown = 0, Passed = 1, Failed = 2, NotAttempted = 3, Skipped\
            \ = 4, Unavailable = 5, NotAllowed = 6, NotTrusted = 7, NotApplicable\
            \ = 8, Expired = 9, UnavailableWebJourney = 10"
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - 9
          - 10
          format: int32
          title: nfcReadStatus
          type: integer
        primaryScanId:
          format: uuid
          title: primaryScanId
          type: string
        status:
          description: "Indicates the verification status of the document itself by\
            \ combining visual analysis and NFC verification results. </br>Note that\
            \ this may be a pass even if facial or name matches have failed.<br />\
            \  values=> Unknown = 0, Pass = 1, Refer = 2, Fail = 3"
          enum:
          - 0
          - 1
          - 2
          - 3
          format: int32
          title: status
          type: integer
        surname:
          title: surname
          type: string
      required:
      - dateCreated
      - description
      - facialMatch
      - id
      - nameCheck
      - nameCheckMethod
      - nfcCheck
      - nfcReadStatus
      - status
      title: Credas.Api.Models.Registrations.IdDocumentSummary
      type: object
    Credas.Api.Models.Registrations.IdVerification:
      example:
        checkStatus: 1
        hasBeenOverridden: true
      properties:
        checkStatus:
          description: "Unknown = 0, Pass = 1, Refer = 2, Fail = 3"
          enum:
          - 0
          - 1
          - 2
          - 3
          format: int32
          title: checkStatus
          type: integer
        hasBeenOverridden:
          title: hasBeenOverridden
          type: boolean
      title: Credas.Api.Models.Registrations.IdVerification
      type: object
    Credas.Api.Models.Registrations.JourneyUrl:
      example:
        validUntil: 2000-01-23T04:56:07.000+00:00
        url: url
      properties:
        url:
          title: url
          type: string
        validUntil:
          format: date-time
          title: validUntil
          type: string
      title: Credas.Api.Models.Registrations.JourneyUrl
      type: object
    Credas.Api.Models.Registrations.KeyValueItem:
      properties:
        key:
          title: key
          type: string
        value:
          title: value
          type: string
      title: Credas.Api.Models.Registrations.KeyValueItem
      type: object
    Credas.Api.Models.Registrations.PagedRegistrationSummary:
      example:
        registrationSummaries:
        - DITFStatus: 1
          regCode: regCode
          proofOfOwnershipCheck:
            checkStatus: 0
            matchResultText: matchResultText
            propertyOwnershipText: propertyOwnershipText
            titleNumber: titleNumber
            matchResult: 6
            hasBeenOverridden: true
            propertyOwnership: 1
          DITFDate: 2000-01-23T04:56:07.000+00:00
          hasSelfie: true
          referenceId: referenceId
          regTypeId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          forename: forename
          livenessVerified: true
          dateCreated: 2000-01-23T04:56:07.000+00:00
          livenessStatus: 5
          dateCompleted: 2000-01-23T04:56:07.000+00:00
          rightToRentCheck:
            shareCodeNameCheckStatus: 6
            checkStatus: 9
            hasBeenOverridden: true
            hasShareCodePdf: true
            shareCodeFacialMatchStatus: 9
          surname: surname
          CreatedByAgencyUserEmail: CreatedByAgencyUserEmail
          isAgentLed: true
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          email: email
          IsExpired: true
          customTermsAcceptedDateTime: 2000-01-23T04:56:07.000+00:00
          idVerification:
            checkStatus: 1
            hasBeenOverridden: true
          dataCheckResult: 5
          Comments:
          - checkType: 0
            dateCreated: 2000-01-23T04:56:07.000+00:00
            name: name
            comment: comment
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: 6
          - checkType: 0
            dateCreated: 2000-01-23T04:56:07.000+00:00
            name: name
            comment: comment
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: 6
          rightToWorkDocumentsProvided: 8
          VerifiedInAppDate: 2000-01-23T04:56:07.000+00:00
          creditStatusCheck:
            insolvency:
            - assetTotal: assetTotal
              address:
                address3: address3
                address2: address2
                address1: address1
                dps: dps
                isEmpty: true
                postcode: postcode
                address5: address5
                address4: address4
              aliases: aliases
              occupation: occupation
              telephoneNumber: telephoneNumber
              previousAddress:
                address3: address3
                address2: address2
                address1: address1
                dps: dps
                isEmpty: true
                postcode: postcode
                address5: address5
                address4: address4
              description: description
              presentationDate: 2000-01-23T04:56:07.000+00:00
              serviceOffice: serviceOffice
              debtTotal: debtTotal
              court: court
              type: 1
              caseNo: caseNo
              tradingNames: tradingNames
              caseType: caseType
              dob: 2000-01-23T04:56:07.000+00:00
              typeText: typeText
              name: name
              startDate: 2000-01-23T04:56:07.000+00:00
              status: status
            - assetTotal: assetTotal
              address:
                address3: address3
                address2: address2
                address1: address1
                dps: dps
                isEmpty: true
                postcode: postcode
                address5: address5
                address4: address4
              aliases: aliases
              occupation: occupation
              telephoneNumber: telephoneNumber
              previousAddress:
                address3: address3
                address2: address2
                address1: address1
                dps: dps
                isEmpty: true
                postcode: postcode
                address5: address5
                address4: address4
              description: description
              presentationDate: 2000-01-23T04:56:07.000+00:00
              serviceOffice: serviceOffice
              debtTotal: debtTotal
              court: court
              type: 1
              caseNo: caseNo
              tradingNames: tradingNames
              caseType: caseType
              dob: 2000-01-23T04:56:07.000+00:00
              typeText: typeText
              name: name
              startDate: 2000-01-23T04:56:07.000+00:00
              status: status
            address:
              country: country
              city: city
              county: county
              postcode: postcode
              addressLine1: addressLine1
              addressLine2: addressLine2
              addressLine3: addressLine3
            companyDirector:
            - matchTypeText: matchTypeText
              matchType: 6
              companyName: companyName
              companyRegNo: companyRegNo
              companyAppointments:
              - appointmentType: appointmentType
                address: address
                occupation: occupation
                nationality: nationality
                dob: 2000-01-23T04:56:07.000+00:00
                name: name
                title: title
                appointmentDate: 2000-01-23T04:56:07.000+00:00
              - appointmentType: appointmentType
                address: address
                occupation: occupation
                nationality: nationality
                dob: 2000-01-23T04:56:07.000+00:00
                name: name
                title: title
                appointmentDate: 2000-01-23T04:56:07.000+00:00
              dateAppointed: 2000-01-23T04:56:07.000+00:00
              registeredOffice: registeredOffice
            - matchTypeText: matchTypeText
              matchType: 6
              companyName: companyName
              companyRegNo: companyRegNo
              companyAppointments:
              - appointmentType: appointmentType
                address: address
                occupation: occupation
                nationality: nationality
                dob: 2000-01-23T04:56:07.000+00:00
                name: name
                title: title
                appointmentDate: 2000-01-23T04:56:07.000+00:00
              - appointmentType: appointmentType
                address: address
                occupation: occupation
                nationality: nationality
                dob: 2000-01-23T04:56:07.000+00:00
                name: name
                title: title
                appointmentDate: 2000-01-23T04:56:07.000+00:00
              dateAppointed: 2000-01-23T04:56:07.000+00:00
              registeredOffice: registeredOffice
            person:
              forename: forename
              surname: surname
              dateOfBirth: 2000-01-23T04:56:07.000+00:00
              middleName: middleName
            hasBeenOverridden: true
            ccj:
            - judgementTypeText: judgementTypeText
              amount: amount
              judgementDate: 2000-01-23T04:56:07.000+00:00
              address3: address3
              address2: address2
              address1: address1
              judgementType: 0
              postcode: postcode
              dateEnd: 2000-01-23T04:56:07.000+00:00
              courtName: courtName
              caseNumber: caseNumber
              dob: 2000-01-23T04:56:07.000+00:00
              name: name
              address5: address5
              address4: address4
            - judgementTypeText: judgementTypeText
              amount: amount
              judgementDate: 2000-01-23T04:56:07.000+00:00
              address3: address3
              address2: address2
              address1: address1
              judgementType: 0
              postcode: postcode
              dateEnd: 2000-01-23T04:56:07.000+00:00
              courtName: courtName
              caseNumber: caseNumber
              dob: 2000-01-23T04:56:07.000+00:00
              name: name
              address5: address5
              address4: address4
            checkDate: 2000-01-23T04:56:07.000+00:00
            status: 5
          rightToWorkCheck:
            shareCodeNameCheckStatus: 6
            checkStatus: 9
            hasBeenOverridden: true
            hasShareCodePdf: true
            shareCodeFacialMatchStatus: 9
          createdByAgencyUserId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          idDocuments:
          - addressFull: addressFull
            country: country
            documentAnalysisResult: 1
            documentNumber: documentNumber
            nameCheck: true
            description: description
            nfcReadStatus: 6
            expiryDate: 2000-01-23T04:56:07.000+00:00
            nfcCheck: true
            primaryScanId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            forename: forename
            dateCreated: 2000-01-23T04:56:07.000+00:00
            isUnderReview: true
            countryCode: countryCode
            surname: surname
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            addressCity: addressCity
            facialMatch: true
            documentSide: 1
            nameCheckMethod: 1
            addressPostcode: addressPostcode
            fullName: fullName
            dateOfBirth: 2000-01-23T04:56:07.000+00:00
            mrz3: mrz3
            mrz2: mrz2
            mrz1: mrz1
            middleName: middleName
            manuallyVerified: true
            status: 7
          - addressFull: addressFull
            country: country
            documentAnalysisResult: 1
            documentNumber: documentNumber
            nameCheck: true
            description: description
            nfcReadStatus: 6
            expiryDate: 2000-01-23T04:56:07.000+00:00
            nfcCheck: true
            primaryScanId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            forename: forename
            dateCreated: 2000-01-23T04:56:07.000+00:00
            isUnderReview: true
            countryCode: countryCode
            surname: surname
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            addressCity: addressCity
            facialMatch: true
            documentSide: 1
            nameCheckMethod: 1
            addressPostcode: addressPostcode
            fullName: fullName
            dateOfBirth: 2000-01-23T04:56:07.000+00:00
            mrz3: mrz3
            mrz2: mrz2
            mrz1: mrz1
            middleName: middleName
            manuallyVerified: true
            status: 7
          phoneNumber: phoneNumber
          dataCheckSources:
          - pepSanctionsData:
            - addresses:
              - lines:
                - lines
                - lines
              - lines:
                - lines
                - lines
              aliases:
              - aliases
              - aliases
              sanctionBodies:
              - sanctionBodies
              - sanctionBodies
              sanctionDates:
              - date: 2000-01-23T04:56:07.000+00:00
                month: 7
                year: 3
                type: 9
                day: 2
              - date: 2000-01-23T04:56:07.000+00:00
                month: 7
                year: 3
                type: 9
                day: 2
              fullName: fullName
              positions:
              - country: country
                position: position
              - country: country
                position: position
              id: id
            - addresses:
              - lines:
                - lines
                - lines
              - lines:
                - lines
                - lines
              aliases:
              - aliases
              - aliases
              sanctionBodies:
              - sanctionBodies
              - sanctionBodies
              sanctionDates:
              - date: 2000-01-23T04:56:07.000+00:00
                month: 7
                year: 3
                type: 9
                day: 2
              - date: 2000-01-23T04:56:07.000+00:00
                month: 7
                year: 3
                type: 9
                day: 2
              fullName: fullName
              positions:
              - country: country
                position: position
              - country: country
                position: position
              id: id
            address:
              country: country
              city: city
              county: county
              postcode: postcode
              addressLine1: addressLine1
              addressLine2: addressLine2
              addressLine3: addressLine3
            dateCreated: 2000-01-23T04:56:07.000+00:00
            sourceType: 4
            person:
              forename: forename
              surname: surname
              dateOfBirth: 2000-01-23T04:56:07.000+00:00
              middleName: middleName
            hasPepSanctionsData: true
            hasBeenOverridden: true
            label: label
            remarks:
            - description: description
              category: 2
            - description: description
              category: 2
            status: 7
          - pepSanctionsData:
            - addresses:
              - lines:
                - lines
                - lines
              - lines:
                - lines
                - lines
              aliases:
              - aliases
              - aliases
              sanctionBodies:
              - sanctionBodies
              - sanctionBodies
              sanctionDates:
              - date: 2000-01-23T04:56:07.000+00:00
                month: 7
                year: 3
                type: 9
                day: 2
              - date: 2000-01-23T04:56:07.000+00:00
                month: 7
                year: 3
                type: 9
                day: 2
              fullName: fullName
              positions:
              - country: country
                position: position
              - country: country
                position: position
              id: id
            - addresses:
              - lines:
                - lines
                - lines
              - lines:
                - lines
                - lines
              aliases:
              - aliases
              - aliases
              sanctionBodies:
              - sanctionBodies
              - sanctionBodies
              sanctionDates:
              - date: 2000-01-23T04:56:07.000+00:00
                month: 7
                year: 3
                type: 9
                day: 2
              - date: 2000-01-23T04:56:07.000+00:00
                month: 7
                year: 3
                type: 9
                day: 2
              fullName: fullName
              positions:
              - country: country
                position: position
              - country: country
                position: position
              id: id
            address:
              country: country
              city: city
              county: county
              postcode: postcode
              addressLine1: addressLine1
              addressLine2: addressLine2
              addressLine3: addressLine3
            dateCreated: 2000-01-23T04:56:07.000+00:00
            sourceType: 4
            person:
              forename: forename
              surname: surname
              dateOfBirth: 2000-01-23T04:56:07.000+00:00
              middleName: middleName
            hasPepSanctionsData: true
            hasBeenOverridden: true
            label: label
            remarks:
            - description: description
              category: 2
            - description: description
              category: 2
            status: 7
          dataChecksPerformed: true
          personalDetails:
            forename: forename
            address:
              country: country
              city: city
              county: county
              postcode: postcode
              addressLine1: addressLine1
              addressLine2: addressLine2
              addressLine3: addressLine3
            surname: surname
            dateOfBirth: 2000-01-23T04:56:07.000+00:00
          safeHarbourVerifiedDate: 2000-01-23T04:56:07.000+00:00
          hasLivenessPerformed: true
          middleName: middleName
          customTermsAcceptedVersion: 5
          bankAccountChecks:
          - accountNumberValidationText: accountNumberValidationText
            addressValidation: 1
            accountValid: true
            error: true
            referenceId: referenceId
            accountStatus: 6
            checkStatus: 5
            sortcodeValidationText: sortcodeValidationText
            Forename: Forename
            hasBeenOverridden: true
            sortcodeValidation: 2
            sortcode: sortcode
            nameValidationText: nameValidationText
            Address1: Address1
            City: City
            MiddleName: MiddleName
            accountNumber: accountNumber
            checkDate: 2000-01-23T04:56:07.000+00:00
            nameValidation: 5
            accountStatusText: accountStatusText
            addressValidationText: addressValidationText
            PostCode: PostCode
            accountNumberValidation: 0
            Surname: Surname
            checkId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - accountNumberValidationText: accountNumberValidationText
            addressValidation: 1
            accountValid: true
            error: true
            referenceId: referenceId
            accountStatus: 6
            checkStatus: 5
            sortcodeValidationText: sortcodeValidationText
            Forename: Forename
            hasBeenOverridden: true
            sortcodeValidation: 2
            sortcode: sortcode
            nameValidationText: nameValidationText
            Address1: Address1
            City: City
            MiddleName: MiddleName
            accountNumber: accountNumber
            checkDate: 2000-01-23T04:56:07.000+00:00
            nameValidation: 5
            accountStatusText: accountStatusText
            addressValidationText: addressValidationText
            PostCode: PostCode
            accountNumberValidation: 0
            Surname: Surname
            checkId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          customTermsAccepted: true
          livenessMethod: 4
          safeHarbourVerifiedStatus: 9
          status: 6
        - DITFStatus: 1
          regCode: regCode
          proofOfOwnershipCheck:
            checkStatus: 0
            matchResultText: matchResultText
            propertyOwnershipText: propertyOwnershipText
            titleNumber: titleNumber
            matchResult: 6
            hasBeenOverridden: true
            propertyOwnership: 1
          DITFDate: 2000-01-23T04:56:07.000+00:00
          hasSelfie: true
          referenceId: referenceId
          regTypeId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          forename: forename
          livenessVerified: true
          dateCreated: 2000-01-23T04:56:07.000+00:00
          livenessStatus: 5
          dateCompleted: 2000-01-23T04:56:07.000+00:00
          rightToRentCheck:
            shareCodeNameCheckStatus: 6
            checkStatus: 9
            hasBeenOverridden: true
            hasShareCodePdf: true
            shareCodeFacialMatchStatus: 9
          surname: surname
          CreatedByAgencyUserEmail: CreatedByAgencyUserEmail
          isAgentLed: true
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          email: email
          IsExpired: true
          customTermsAcceptedDateTime: 2000-01-23T04:56:07.000+00:00
          idVerification:
            checkStatus: 1
            hasBeenOverridden: true
          dataCheckResult: 5
          Comments:
          - checkType: 0
            dateCreated: 2000-01-23T04:56:07.000+00:00
            name: name
            comment: comment
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: 6
          - checkType: 0
            dateCreated: 2000-01-23T04:56:07.000+00:00
            name: name
            comment: comment
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: 6
          rightToWorkDocumentsProvided: 8
          VerifiedInAppDate: 2000-01-23T04:56:07.000+00:00
          creditStatusCheck:
            insolvency:
            - assetTotal: assetTotal
              address:
                address3: address3
                address2: address2
                address1: address1
                dps: dps
                isEmpty: true
                postcode: postcode
                address5: address5
                address4: address4
              aliases: aliases
              occupation: occupation
              telephoneNumber: telephoneNumber
              previousAddress:
                address3: address3
                address2: address2
                address1: address1
                dps: dps
                isEmpty: true
                postcode: postcode
                address5: address5
                address4: address4
              description: description
              presentationDate: 2000-01-23T04:56:07.000+00:00
              serviceOffice: serviceOffice
              debtTotal: debtTotal
              court: court
              type: 1
              caseNo: caseNo
              tradingNames: tradingNames
              caseType: caseType
              dob: 2000-01-23T04:56:07.000+00:00
              typeText: typeText
              name: name
              startDate: 2000-01-23T04:56:07.000+00:00
              status: status
            - assetTotal: assetTotal
              address:
                address3: address3
                address2: address2
                address1: address1
                dps: dps
                isEmpty: true
                postcode: postcode
                address5: address5
                address4: address4
              aliases: aliases
              occupation: occupation
              telephoneNumber: telephoneNumber
              previousAddress:
                address3: address3
                address2: address2
                address1: address1
                dps: dps
                isEmpty: true
                postcode: postcode
                address5: address5
                address4: address4
              description: description
              presentationDate: 2000-01-23T04:56:07.000+00:00
              serviceOffice: serviceOffice
              debtTotal: debtTotal
              court: court
              type: 1
              caseNo: caseNo
              tradingNames: tradingNames
              caseType: caseType
              dob: 2000-01-23T04:56:07.000+00:00
              typeText: typeText
              name: name
              startDate: 2000-01-23T04:56:07.000+00:00
              status: status
            address:
              country: country
              city: city
              county: county
              postcode: postcode
              addressLine1: addressLine1
              addressLine2: addressLine2
              addressLine3: addressLine3
            companyDirector:
            - matchTypeText: matchTypeText
              matchType: 6
              companyName: companyName
              companyRegNo: companyRegNo
              companyAppointments:
              - appointmentType: appointmentType
                address: address
                occupation: occupation
                nationality: nationality
                dob: 2000-01-23T04:56:07.000+00:00
                name: name
                title: title
                appointmentDate: 2000-01-23T04:56:07.000+00:00
              - appointmentType: appointmentType
                address: address
                occupation: occupation
                nationality: nationality
                dob: 2000-01-23T04:56:07.000+00:00
                name: name
                title: title
                appointmentDate: 2000-01-23T04:56:07.000+00:00
              dateAppointed: 2000-01-23T04:56:07.000+00:00
              registeredOffice: registeredOffice
            - matchTypeText: matchTypeText
              matchType: 6
              companyName: companyName
              companyRegNo: companyRegNo
              companyAppointments:
              - appointmentType: appointmentType
                address: address
                occupation: occupation
                nationality: nationality
                dob: 2000-01-23T04:56:07.000+00:00
                name: name
                title: title
                appointmentDate: 2000-01-23T04:56:07.000+00:00
              - appointmentType: appointmentType
                address: address
                occupation: occupation
                nationality: nationality
                dob: 2000-01-23T04:56:07.000+00:00
                name: name
                title: title
                appointmentDate: 2000-01-23T04:56:07.000+00:00
              dateAppointed: 2000-01-23T04:56:07.000+00:00
              registeredOffice: registeredOffice
            person:
              forename: forename
              surname: surname
              dateOfBirth: 2000-01-23T04:56:07.000+00:00
              middleName: middleName
            hasBeenOverridden: true
            ccj:
            - judgementTypeText: judgementTypeText
              amount: amount
              judgementDate: 2000-01-23T04:56:07.000+00:00
              address3: address3
              address2: address2
              address1: address1
              judgementType: 0
              postcode: postcode
              dateEnd: 2000-01-23T04:56:07.000+00:00
              courtName: courtName
              caseNumber: caseNumber
              dob: 2000-01-23T04:56:07.000+00:00
              name: name
              address5: address5
              address4: address4
            - judgementTypeText: judgementTypeText
              amount: amount
              judgementDate: 2000-01-23T04:56:07.000+00:00
              address3: address3
              address2: address2
              address1: address1
              judgementType: 0
              postcode: postcode
              dateEnd: 2000-01-23T04:56:07.000+00:00
              courtName: courtName
              caseNumber: caseNumber
              dob: 2000-01-23T04:56:07.000+00:00
              name: name
              address5: address5
              address4: address4
            checkDate: 2000-01-23T04:56:07.000+00:00
            status: 5
          rightToWorkCheck:
            shareCodeNameCheckStatus: 6
            checkStatus: 9
            hasBeenOverridden: true
            hasShareCodePdf: true
            shareCodeFacialMatchStatus: 9
          createdByAgencyUserId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          idDocuments:
          - addressFull: addressFull
            country: country
            documentAnalysisResult: 1
            documentNumber: documentNumber
            nameCheck: true
            description: description
            nfcReadStatus: 6
            expiryDate: 2000-01-23T04:56:07.000+00:00
            nfcCheck: true
            primaryScanId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            forename: forename
            dateCreated: 2000-01-23T04:56:07.000+00:00
            isUnderReview: true
            countryCode: countryCode
            surname: surname
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            addressCity: addressCity
            facialMatch: true
            documentSide: 1
            nameCheckMethod: 1
            addressPostcode: addressPostcode
            fullName: fullName
            dateOfBirth: 2000-01-23T04:56:07.000+00:00
            mrz3: mrz3
            mrz2: mrz2
            mrz1: mrz1
            middleName: middleName
            manuallyVerified: true
            status: 7
          - addressFull: addressFull
            country: country
            documentAnalysisResult: 1
            documentNumber: documentNumber
            nameCheck: true
            description: description
            nfcReadStatus: 6
            expiryDate: 2000-01-23T04:56:07.000+00:00
            nfcCheck: true
            primaryScanId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            forename: forename
            dateCreated: 2000-01-23T04:56:07.000+00:00
            isUnderReview: true
            countryCode: countryCode
            surname: surname
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            addressCity: addressCity
            facialMatch: true
            documentSide: 1
            nameCheckMethod: 1
            addressPostcode: addressPostcode
            fullName: fullName
            dateOfBirth: 2000-01-23T04:56:07.000+00:00
            mrz3: mrz3
            mrz2: mrz2
            mrz1: mrz1
            middleName: middleName
            manuallyVerified: true
            status: 7
          phoneNumber: phoneNumber
          dataCheckSources:
          - pepSanctionsData:
            - addresses:
              - lines:
                - lines
                - lines
              - lines:
                - lines
                - lines
              aliases:
              - aliases
              - aliases
              sanctionBodies:
              - sanctionBodies
              - sanctionBodies
              sanctionDates:
              - date: 2000-01-23T04:56:07.000+00:00
                month: 7
                year: 3
                type: 9
                day: 2
              - date: 2000-01-23T04:56:07.000+00:00
                month: 7
                year: 3
                type: 9
                day: 2
              fullName: fullName
              positions:
              - country: country
                position: position
              - country: country
                position: position
              id: id
            - addresses:
              - lines:
                - lines
                - lines
              - lines:
                - lines
                - lines
              aliases:
              - aliases
              - aliases
              sanctionBodies:
              - sanctionBodies
              - sanctionBodies
              sanctionDates:
              - date: 2000-01-23T04:56:07.000+00:00
                month: 7
                year: 3
                type: 9
                day: 2
              - date: 2000-01-23T04:56:07.000+00:00
                month: 7
                year: 3
                type: 9
                day: 2
              fullName: fullName
              positions:
              - country: country
                position: position
              - country: country
                position: position
              id: id
            address:
              country: country
              city: city
              county: county
              postcode: postcode
              addressLine1: addressLine1
              addressLine2: addressLine2
              addressLine3: addressLine3
            dateCreated: 2000-01-23T04:56:07.000+00:00
            sourceType: 4
            person:
              forename: forename
              surname: surname
              dateOfBirth: 2000-01-23T04:56:07.000+00:00
              middleName: middleName
            hasPepSanctionsData: true
            hasBeenOverridden: true
            label: label
            remarks:
            - description: description
              category: 2
            - description: description
              category: 2
            status: 7
          - pepSanctionsData:
            - addresses:
              - lines:
                - lines
                - lines
              - lines:
                - lines
                - lines
              aliases:
              - aliases
              - aliases
              sanctionBodies:
              - sanctionBodies
              - sanctionBodies
              sanctionDates:
              - date: 2000-01-23T04:56:07.000+00:00
                month: 7
                year: 3
                type: 9
                day: 2
              - date: 2000-01-23T04:56:07.000+00:00
                month: 7
                year: 3
                type: 9
                day: 2
              fullName: fullName
              positions:
              - country: country
                position: position
              - country: country
                position: position
              id: id
            - addresses:
              - lines:
                - lines
                - lines
              - lines:
                - lines
                - lines
              aliases:
              - aliases
              - aliases
              sanctionBodies:
              - sanctionBodies
              - sanctionBodies
              sanctionDates:
              - date: 2000-01-23T04:56:07.000+00:00
                month: 7
                year: 3
                type: 9
                day: 2
              - date: 2000-01-23T04:56:07.000+00:00
                month: 7
                year: 3
                type: 9
                day: 2
              fullName: fullName
              positions:
              - country: country
                position: position
              - country: country
                position: position
              id: id
            address:
              country: country
              city: city
              county: county
              postcode: postcode
              addressLine1: addressLine1
              addressLine2: addressLine2
              addressLine3: addressLine3
            dateCreated: 2000-01-23T04:56:07.000+00:00
            sourceType: 4
            person:
              forename: forename
              surname: surname
              dateOfBirth: 2000-01-23T04:56:07.000+00:00
              middleName: middleName
            hasPepSanctionsData: true
            hasBeenOverridden: true
            label: label
            remarks:
            - description: description
              category: 2
            - description: description
              category: 2
            status: 7
          dataChecksPerformed: true
          personalDetails:
            forename: forename
            address:
              country: country
              city: city
              county: county
              postcode: postcode
              addressLine1: addressLine1
              addressLine2: addressLine2
              addressLine3: addressLine3
            surname: surname
            dateOfBirth: 2000-01-23T04:56:07.000+00:00
          safeHarbourVerifiedDate: 2000-01-23T04:56:07.000+00:00
          hasLivenessPerformed: true
          middleName: middleName
          customTermsAcceptedVersion: 5
          bankAccountChecks:
          - accountNumberValidationText: accountNumberValidationText
            addressValidation: 1
            accountValid: true
            error: true
            referenceId: referenceId
            accountStatus: 6
            checkStatus: 5
            sortcodeValidationText: sortcodeValidationText
            Forename: Forename
            hasBeenOverridden: true
            sortcodeValidation: 2
            sortcode: sortcode
            nameValidationText: nameValidationText
            Address1: Address1
            City: City
            MiddleName: MiddleName
            accountNumber: accountNumber
            checkDate: 2000-01-23T04:56:07.000+00:00
            nameValidation: 5
            accountStatusText: accountStatusText
            addressValidationText: addressValidationText
            PostCode: PostCode
            accountNumberValidation: 0
            Surname: Surname
            checkId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - accountNumberValidationText: accountNumberValidationText
            addressValidation: 1
            accountValid: true
            error: true
            referenceId: referenceId
            accountStatus: 6
            checkStatus: 5
            sortcodeValidationText: sortcodeValidationText
            Forename: Forename
            hasBeenOverridden: true
            sortcodeValidation: 2
            sortcode: sortcode
            nameValidationText: nameValidationText
            Address1: Address1
            City: City
            MiddleName: MiddleName
            accountNumber: accountNumber
            checkDate: 2000-01-23T04:56:07.000+00:00
            nameValidation: 5
            accountStatusText: accountStatusText
            addressValidationText: addressValidationText
            PostCode: PostCode
            accountNumberValidation: 0
            Surname: Surname
            checkId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          customTermsAccepted: true
          livenessMethod: 4
          safeHarbourVerifiedStatus: 9
          status: 6
        totalCount: 0
      properties:
        registrationSummaries:
          items:
            $ref: '#/components/schemas/Credas.Api.Models.Registrations.RegistrationSummary'
          title: registrationSummaries
          type: array
          uniqueItems: false
        totalCount:
          format: int32
          title: totalCount
          type: integer
      title: Credas.Api.Models.Registrations.PagedRegistrationSummary
      type: object
    Credas.Api.Models.Registrations.PersonalDetails:
      example:
        forename: forename
        address:
          country: country
          city: city
          county: county
          postcode: postcode
          addressLine1: addressLine1
          addressLine2: addressLine2
          addressLine3: addressLine3
        surname: surname
        dateOfBirth: 2000-01-23T04:56:07.000+00:00
      properties:
        address:
          $ref: '#/components/schemas/Credas.Api.Models.DataCheck.Address'
        dateOfBirth:
          format: date-time
          title: dateOfBirth
          type: string
        forename:
          title: forename
          type: string
        surname:
          title: surname
          type: string
      title: Credas.Api.Models.Registrations.PersonalDetails
      type: object
    Credas.Api.Models.Registrations.RegistrationComment:
      example:
        checkType: 0
        dateCreated: 2000-01-23T04:56:07.000+00:00
        name: name
        comment: comment
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        type: 6
      properties:
        checkType:
          description: "IdDocuments = 1, StandardChecks = 2, InternationalSanctionsAndPep\
            \ = 3, CreditStatusCheck = 4, BankAccountCheck = 5, ProofOfOwnership =\
            \ 6, RightToWork = 7, RightToRent = 8"
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          format: int32
          title: checkType
          type: integer
        comment:
          title: comment
          type: string
        dateCreated:
          format: date-time
          title: dateCreated
          type: string
        id:
          format: uuid
          title: id
          type: string
        name:
          title: name
          type: string
        type:
          description: "General = 0, CheckRelated = 1"
          enum:
          - 0
          - 1
          format: int32
          title: type
          type: integer
      title: Credas.Api.Models.Registrations.RegistrationComment
      type: object
    Credas.Api.Models.Registrations.RegistrationSettings:
      properties:
        capturePersonalDetails:
          title: capturePersonalDetails
          type: boolean
        nameMatchRoutine:
          description: "Fuzzy = 1, Strict = 2"
          enum:
          - 1
          - 2
          format: int32
          title: nameMatchRoutine
          type: integer
        requiredChecks:
          description: "The value of required checks determines what checks are performed.\
            \ <br/>Unknown = 0,Id Documents = 1, Standard Checks = 2, International\
            \ Sanctions and Pep = 3, Credit Status Check = 4, Bank Account Check =\
            \ 5, Proof of Ownership = 6, Right to Work = 7, Right to Rent = 8<br />"
          items:
            enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            format: int32
            type: integer
          title: requiredChecks
          type: array
          uniqueItems: false
        skipEmailStep:
          title: skipEmailStep
          type: boolean
      title: Credas.Api.Models.Registrations.RegistrationSettings
      type: object
    Credas.Api.Models.Registrations.RegistrationSummary:
      example:
        DITFStatus: 1
        regCode: regCode
        proofOfOwnershipCheck:
          checkStatus: 0
          matchResultText: matchResultText
          propertyOwnershipText: propertyOwnershipText
          titleNumber: titleNumber
          matchResult: 6
          hasBeenOverridden: true
          propertyOwnership: 1
        DITFDate: 2000-01-23T04:56:07.000+00:00
        hasSelfie: true
        referenceId: referenceId
        regTypeId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        forename: forename
        livenessVerified: true
        dateCreated: 2000-01-23T04:56:07.000+00:00
        livenessStatus: 5
        dateCompleted: 2000-01-23T04:56:07.000+00:00
        rightToRentCheck:
          shareCodeNameCheckStatus: 6
          checkStatus: 9
          hasBeenOverridden: true
          hasShareCodePdf: true
          shareCodeFacialMatchStatus: 9
        surname: surname
        CreatedByAgencyUserEmail: CreatedByAgencyUserEmail
        isAgentLed: true
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        email: email
        IsExpired: true
        customTermsAcceptedDateTime: 2000-01-23T04:56:07.000+00:00
        idVerification:
          checkStatus: 1
          hasBeenOverridden: true
        dataCheckResult: 5
        Comments:
        - checkType: 0
          dateCreated: 2000-01-23T04:56:07.000+00:00
          name: name
          comment: comment
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: 6
        - checkType: 0
          dateCreated: 2000-01-23T04:56:07.000+00:00
          name: name
          comment: comment
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: 6
        rightToWorkDocumentsProvided: 8
        VerifiedInAppDate: 2000-01-23T04:56:07.000+00:00
        creditStatusCheck:
          insolvency:
          - assetTotal: assetTotal
            address:
              address3: address3
              address2: address2
              address1: address1
              dps: dps
              isEmpty: true
              postcode: postcode
              address5: address5
              address4: address4
            aliases: aliases
            occupation: occupation
            telephoneNumber: telephoneNumber
            previousAddress:
              address3: address3
              address2: address2
              address1: address1
              dps: dps
              isEmpty: true
              postcode: postcode
              address5: address5
              address4: address4
            description: description
            presentationDate: 2000-01-23T04:56:07.000+00:00
            serviceOffice: serviceOffice
            debtTotal: debtTotal
            court: court
            type: 1
            caseNo: caseNo
            tradingNames: tradingNames
            caseType: caseType
            dob: 2000-01-23T04:56:07.000+00:00
            typeText: typeText
            name: name
            startDate: 2000-01-23T04:56:07.000+00:00
            status: status
          - assetTotal: assetTotal
            address:
              address3: address3
              address2: address2
              address1: address1
              dps: dps
              isEmpty: true
              postcode: postcode
              address5: address5
              address4: address4
            aliases: aliases
            occupation: occupation
            telephoneNumber: telephoneNumber
            previousAddress:
              address3: address3
              address2: address2
              address1: address1
              dps: dps
              isEmpty: true
              postcode: postcode
              address5: address5
              address4: address4
            description: description
            presentationDate: 2000-01-23T04:56:07.000+00:00
            serviceOffice: serviceOffice
            debtTotal: debtTotal
            court: court
            type: 1
            caseNo: caseNo
            tradingNames: tradingNames
            caseType: caseType
            dob: 2000-01-23T04:56:07.000+00:00
            typeText: typeText
            name: name
            startDate: 2000-01-23T04:56:07.000+00:00
            status: status
          address:
            country: country
            city: city
            county: county
            postcode: postcode
            addressLine1: addressLine1
            addressLine2: addressLine2
            addressLine3: addressLine3
          companyDirector:
          - matchTypeText: matchTypeText
            matchType: 6
            companyName: companyName
            companyRegNo: companyRegNo
            companyAppointments:
            - appointmentType: appointmentType
              address: address
              occupation: occupation
              nationality: nationality
              dob: 2000-01-23T04:56:07.000+00:00
              name: name
              title: title
              appointmentDate: 2000-01-23T04:56:07.000+00:00
            - appointmentType: appointmentType
              address: address
              occupation: occupation
              nationality: nationality
              dob: 2000-01-23T04:56:07.000+00:00
              name: name
              title: title
              appointmentDate: 2000-01-23T04:56:07.000+00:00
            dateAppointed: 2000-01-23T04:56:07.000+00:00
            registeredOffice: registeredOffice
          - matchTypeText: matchTypeText
            matchType: 6
            companyName: companyName
            companyRegNo: companyRegNo
            companyAppointments:
            - appointmentType: appointmentType
              address: address
              occupation: occupation
              nationality: nationality
              dob: 2000-01-23T04:56:07.000+00:00
              name: name
              title: title
              appointmentDate: 2000-01-23T04:56:07.000+00:00
            - appointmentType: appointmentType
              address: address
              occupation: occupation
              nationality: nationality
              dob: 2000-01-23T04:56:07.000+00:00
              name: name
              title: title
              appointmentDate: 2000-01-23T04:56:07.000+00:00
            dateAppointed: 2000-01-23T04:56:07.000+00:00
            registeredOffice: registeredOffice
          person:
            forename: forename
            surname: surname
            dateOfBirth: 2000-01-23T04:56:07.000+00:00
            middleName: middleName
          hasBeenOverridden: true
          ccj:
          - judgementTypeText: judgementTypeText
            amount: amount
            judgementDate: 2000-01-23T04:56:07.000+00:00
            address3: address3
            address2: address2
            address1: address1
            judgementType: 0
            postcode: postcode
            dateEnd: 2000-01-23T04:56:07.000+00:00
            courtName: courtName
            caseNumber: caseNumber
            dob: 2000-01-23T04:56:07.000+00:00
            name: name
            address5: address5
            address4: address4
          - judgementTypeText: judgementTypeText
            amount: amount
            judgementDate: 2000-01-23T04:56:07.000+00:00
            address3: address3
            address2: address2
            address1: address1
            judgementType: 0
            postcode: postcode
            dateEnd: 2000-01-23T04:56:07.000+00:00
            courtName: courtName
            caseNumber: caseNumber
            dob: 2000-01-23T04:56:07.000+00:00
            name: name
            address5: address5
            address4: address4
          checkDate: 2000-01-23T04:56:07.000+00:00
          status: 5
        rightToWorkCheck:
          shareCodeNameCheckStatus: 6
          checkStatus: 9
          hasBeenOverridden: true
          hasShareCodePdf: true
          shareCodeFacialMatchStatus: 9
        createdByAgencyUserId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        idDocuments:
        - addressFull: addressFull
          country: country
          documentAnalysisResult: 1
          documentNumber: documentNumber
          nameCheck: true
          description: description
          nfcReadStatus: 6
          expiryDate: 2000-01-23T04:56:07.000+00:00
          nfcCheck: true
          primaryScanId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          forename: forename
          dateCreated: 2000-01-23T04:56:07.000+00:00
          isUnderReview: true
          countryCode: countryCode
          surname: surname
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          addressCity: addressCity
          facialMatch: true
          documentSide: 1
          nameCheckMethod: 1
          addressPostcode: addressPostcode
          fullName: fullName
          dateOfBirth: 2000-01-23T04:56:07.000+00:00
          mrz3: mrz3
          mrz2: mrz2
          mrz1: mrz1
          middleName: middleName
          manuallyVerified: true
          status: 7
        - addressFull: addressFull
          country: country
          documentAnalysisResult: 1
          documentNumber: documentNumber
          nameCheck: true
          description: description
          nfcReadStatus: 6
          expiryDate: 2000-01-23T04:56:07.000+00:00
          nfcCheck: true
          primaryScanId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          forename: forename
          dateCreated: 2000-01-23T04:56:07.000+00:00
          isUnderReview: true
          countryCode: countryCode
          surname: surname
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          addressCity: addressCity
          facialMatch: true
          documentSide: 1
          nameCheckMethod: 1
          addressPostcode: addressPostcode
          fullName: fullName
          dateOfBirth: 2000-01-23T04:56:07.000+00:00
          mrz3: mrz3
          mrz2: mrz2
          mrz1: mrz1
          middleName: middleName
          manuallyVerified: true
          status: 7
        phoneNumber: phoneNumber
        dataCheckSources:
        - pepSanctionsData:
          - addresses:
            - lines:
              - lines
              - lines
            - lines:
              - lines
              - lines
            aliases:
            - aliases
            - aliases
            sanctionBodies:
            - sanctionBodies
            - sanctionBodies
            sanctionDates:
            - date: 2000-01-23T04:56:07.000+00:00
              month: 7
              year: 3
              type: 9
              day: 2
            - date: 2000-01-23T04:56:07.000+00:00
              month: 7
              year: 3
              type: 9
              day: 2
            fullName: fullName
            positions:
            - country: country
              position: position
            - country: country
              position: position
            id: id
          - addresses:
            - lines:
              - lines
              - lines
            - lines:
              - lines
              - lines
            aliases:
            - aliases
            - aliases
            sanctionBodies:
            - sanctionBodies
            - sanctionBodies
            sanctionDates:
            - date: 2000-01-23T04:56:07.000+00:00
              month: 7
              year: 3
              type: 9
              day: 2
            - date: 2000-01-23T04:56:07.000+00:00
              month: 7
              year: 3
              type: 9
              day: 2
            fullName: fullName
            positions:
            - country: country
              position: position
            - country: country
              position: position
            id: id
          address:
            country: country
            city: city
            county: county
            postcode: postcode
            addressLine1: addressLine1
            addressLine2: addressLine2
            addressLine3: addressLine3
          dateCreated: 2000-01-23T04:56:07.000+00:00
          sourceType: 4
          person:
            forename: forename
            surname: surname
            dateOfBirth: 2000-01-23T04:56:07.000+00:00
            middleName: middleName
          hasPepSanctionsData: true
          hasBeenOverridden: true
          label: label
          remarks:
          - description: description
            category: 2
          - description: description
            category: 2
          status: 7
        - pepSanctionsData:
          - addresses:
            - lines:
              - lines
              - lines
            - lines:
              - lines
              - lines
            aliases:
            - aliases
            - aliases
            sanctionBodies:
            - sanctionBodies
            - sanctionBodies
            sanctionDates:
            - date: 2000-01-23T04:56:07.000+00:00
              month: 7
              year: 3
              type: 9
              day: 2
            - date: 2000-01-23T04:56:07.000+00:00
              month: 7
              year: 3
              type: 9
              day: 2
            fullName: fullName
            positions:
            - country: country
              position: position
            - country: country
              position: position
            id: id
          - addresses:
            - lines:
              - lines
              - lines
            - lines:
              - lines
              - lines
            aliases:
            - aliases
            - aliases
            sanctionBodies:
            - sanctionBodies
            - sanctionBodies
            sanctionDates:
            - date: 2000-01-23T04:56:07.000+00:00
              month: 7
              year: 3
              type: 9
              day: 2
            - date: 2000-01-23T04:56:07.000+00:00
              month: 7
              year: 3
              type: 9
              day: 2
            fullName: fullName
            positions:
            - country: country
              position: position
            - country: country
              position: position
            id: id
          address:
            country: country
            city: city
            county: county
            postcode: postcode
            addressLine1: addressLine1
            addressLine2: addressLine2
            addressLine3: addressLine3
          dateCreated: 2000-01-23T04:56:07.000+00:00
          sourceType: 4
          person:
            forename: forename
            surname: surname
            dateOfBirth: 2000-01-23T04:56:07.000+00:00
            middleName: middleName
          hasPepSanctionsData: true
          hasBeenOverridden: true
          label: label
          remarks:
          - description: description
            category: 2
          - description: description
            category: 2
          status: 7
        dataChecksPerformed: true
        personalDetails:
          forename: forename
          address:
            country: country
            city: city
            county: county
            postcode: postcode
            addressLine1: addressLine1
            addressLine2: addressLine2
            addressLine3: addressLine3
          surname: surname
          dateOfBirth: 2000-01-23T04:56:07.000+00:00
        safeHarbourVerifiedDate: 2000-01-23T04:56:07.000+00:00
        hasLivenessPerformed: true
        middleName: middleName
        customTermsAcceptedVersion: 5
        bankAccountChecks:
        - accountNumberValidationText: accountNumberValidationText
          addressValidation: 1
          accountValid: true
          error: true
          referenceId: referenceId
          accountStatus: 6
          checkStatus: 5
          sortcodeValidationText: sortcodeValidationText
          Forename: Forename
          hasBeenOverridden: true
          sortcodeValidation: 2
          sortcode: sortcode
          nameValidationText: nameValidationText
          Address1: Address1
          City: City
          MiddleName: MiddleName
          accountNumber: accountNumber
          checkDate: 2000-01-23T04:56:07.000+00:00
          nameValidation: 5
          accountStatusText: accountStatusText
          addressValidationText: addressValidationText
          PostCode: PostCode
          accountNumberValidation: 0
          Surname: Surname
          checkId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - accountNumberValidationText: accountNumberValidationText
          addressValidation: 1
          accountValid: true
          error: true
          referenceId: referenceId
          accountStatus: 6
          checkStatus: 5
          sortcodeValidationText: sortcodeValidationText
          Forename: Forename
          hasBeenOverridden: true
          sortcodeValidation: 2
          sortcode: sortcode
          nameValidationText: nameValidationText
          Address1: Address1
          City: City
          MiddleName: MiddleName
          accountNumber: accountNumber
          checkDate: 2000-01-23T04:56:07.000+00:00
          nameValidation: 5
          accountStatusText: accountStatusText
          addressValidationText: addressValidationText
          PostCode: PostCode
          accountNumberValidation: 0
          Surname: Surname
          checkId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        customTermsAccepted: true
        livenessMethod: 4
        safeHarbourVerifiedStatus: 9
        status: 6
      properties:
        Comments:
          items:
            $ref: '#/components/schemas/Credas.Api.Models.Registrations.RegistrationComment'
          title: Comments
          type: array
          uniqueItems: false
        CreatedByAgencyUserEmail:
          title: CreatedByAgencyUserEmail
          type: string
        DITFDate:
          format: date-time
          title: DITFDate
          type: string
        DITFStatus:
          description: "No = 0, Yes = 1, Pending = 2"
          enum:
          - 0
          - 1
          - 2
          format: int32
          title: DITFStatus
          type: integer
        IsExpired:
          title: IsExpired
          type: boolean
        VerifiedInAppDate:
          format: date-time
          title: VerifiedInAppDate
          type: string
        bankAccountChecks:
          items:
            $ref: '#/components/schemas/Credas.Api.Models.BankAccounts.AccountVerificationResponse'
          title: bankAccountChecks
          type: array
          uniqueItems: false
        createdByAgencyUserId:
          format: uuid
          title: createdByAgencyUserId
          type: string
        creditStatusCheck:
          $ref: '#/components/schemas/Credas.Api.Models.StatusChecks.StatusCheck'
        customTermsAccepted:
          title: customTermsAccepted
          type: boolean
        customTermsAcceptedDateTime:
          format: date-time
          title: customTermsAcceptedDateTime
          type: string
        customTermsAcceptedVersion:
          format: int32
          title: customTermsAcceptedVersion
          type: integer
        dataCheckResult:
          description: "Unknown = 0, Pass = 1, Refer = 2, Fail = 3"
          enum:
          - 0
          - 1
          - 2
          - 3
          format: int32
          title: dataCheckResult
          type: integer
        dataCheckSources:
          items:
            $ref: '#/components/schemas/Credas.Api.Models.Registrations.DataCheckSourceSummary'
          title: dataCheckSources
          type: array
          uniqueItems: false
        dataChecksPerformed:
          title: dataChecksPerformed
          type: boolean
        dateCompleted:
          format: date-time
          title: dateCompleted
          type: string
        dateCreated:
          format: date-time
          title: dateCreated
          type: string
        email:
          title: email
          type: string
        forename:
          title: forename
          type: string
        hasLivenessPerformed:
          title: hasLivenessPerformed
          type: boolean
        hasSelfie:
          title: hasSelfie
          type: boolean
        id:
          format: uuid
          title: id
          type: string
        idDocuments:
          items:
            $ref: '#/components/schemas/Credas.Api.Models.Registrations.IdDocumentSummary'
          title: idDocuments
          type: array
          uniqueItems: false
        idVerification:
          $ref: '#/components/schemas/Credas.Api.Models.Registrations.IdVerification'
        isAgentLed:
          title: isAgentLed
          type: boolean
        livenessMethod:
          description: "NotApplicable = 0, UniqueActionProcess = 1, Passive = 2"
          enum:
          - 0
          - 1
          - 2
          format: int32
          title: livenessMethod
          type: integer
        livenessStatus:
          description: "NotSubmitted = 0, Verified = 1, Unverified = 2, Unknown =\
            \ 3, RetakeRequested = 4"
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          format: int32
          title: livenessStatus
          type: integer
        livenessVerified:
          title: livenessVerified
          type: boolean
        middleName:
          title: middleName
          type: string
        personalDetails:
          $ref: '#/components/schemas/Credas.Api.Models.Registrations.PersonalDetails'
        phoneNumber:
          title: phoneNumber
          type: string
        proofOfOwnershipCheck:
          $ref: '#/components/schemas/Credas.Api.Models.PropertyRegister.PropertyRegisterCheckResponse'
        referenceId:
          maxLength: 255
          minLength: 0
          title: referenceId
          type: string
        regCode:
          title: regCode
          type: string
        regTypeId:
          format: uuid
          title: regTypeId
          type: string
        rightToRentCheck:
          $ref: '#/components/schemas/Credas.Api.Models.Registrations.SettlementStatus'
        rightToWorkCheck:
          $ref: '#/components/schemas/Credas.Api.Models.Registrations.SettlementStatus'
        rightToWorkDocumentsProvided:
          description: "This property is no longer supported. Right to work is now\
            \ available as an individual check.<br />  values=> Pending = 0, Pass\
            \ = 1, Fail = 2"
          enum:
          - 0
          - 1
          - 2
          format: int32
          title: rightToWorkDocumentsProvided
          type: integer
        safeHarbourVerifiedDate:
          format: date-time
          title: safeHarbourVerifiedDate
          type: string
        safeHarbourVerifiedStatus:
          description: "No = 0, Yes = 1, UnderReview = 2"
          enum:
          - 0
          - 1
          - 2
          format: int32
          title: safeHarbourVerifiedStatus
          type: integer
        status:
          description: "Unknown = 0, Submitted = 1, Approved = 2, Rejected = 3, Exported\
            \ = 4, Invited = 6"
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 6
          format: int32
          title: status
          type: integer
        surname:
          title: surname
          type: string
      required:
      - dataCheckResult
      - dataChecksPerformed
      - dateCreated
      - forename
      - id
      - livenessStatus
      - livenessVerified
      - regCode
      - regTypeId
      - rightToWorkDocumentsProvided
      - status
      - surname
      title: Credas.Api.Models.Registrations.RegistrationSummary
      type: object
    Credas.Api.Models.Registrations.ReturnUrls:
      properties:
        returnUrl:
          title: returnUrl
          type: string
      title: Credas.Api.Models.Registrations.ReturnUrls
      type: object
    Credas.Api.Models.Registrations.SettlementStatus:
      example:
        shareCodeNameCheckStatus: 6
        checkStatus: 9
        hasBeenOverridden: true
        hasShareCodePdf: true
        shareCodeFacialMatchStatus: 9
      properties:
        checkStatus:
          description: "Unknown = 0, Pass = 1, Refer = 2, Fail = 3"
          enum:
          - 0
          - 1
          - 2
          - 3
          format: int32
          title: checkStatus
          type: integer
        hasBeenOverridden:
          title: hasBeenOverridden
          type: boolean
        hasShareCodePdf:
          title: hasShareCodePdf
          type: boolean
        shareCodeFacialMatchStatus:
          description: "Unknown = 0, Pass = 1, Refer = 2, Fail = 3"
          enum:
          - 0
          - 1
          - 2
          - 3
          format: int32
          title: shareCodeFacialMatchStatus
          type: integer
        shareCodeNameCheckStatus:
          description: "Unknown = 0, Pass = 1, Refer = 2, Fail = 3"
          enum:
          - 0
          - 1
          - 2
          - 3
          format: int32
          title: shareCodeNameCheckStatus
          type: integer
      title: Credas.Api.Models.Registrations.SettlementStatus
      type: object
    Credas.Api.Models.Registrations.SupportedIdDocument:
      example:
        name: name
        type: 0
      properties:
        name:
          title: name
          type: string
        type:
          description: "Passport = 1, DrivingLicence = 2, NationalIdCard = 3, CscsCard\
            \ = 4, ResidencePermit = 5, Visa = 6, BirthCertificate = 7, HomeOfficeLetter\
            \ = 8, Other = 9"
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - 9
          format: int32
          title: type
          type: integer
      title: Credas.Api.Models.Registrations.SupportedIdDocument
      type: object
    Credas.Api.Models.Registrations.UpdateContactDetailsRequest:
      example:
        deliveryMethod: 1
        diallingCode: "+44"
        email: alan.harper@example.com
        forename: Alun
        middleName: null
        phoneNumber: "07123456780"
        surname: Harpers
      properties:
        deliveryMethod:
          description: "None = 0, Email = 1, Sms = 2"
          enum:
          - 0
          - 1
          - 2
          format: int32
          type: integer
        diallingCode:
          maxLength: 10
          minLength: 1
          type: string
        email:
          maxLength: 250
          minLength: 0
          type: string
        forename:
          maxLength: 50
          minLength: 1
          type: string
        middleName:
          maxLength: 50
          minLength: 1
          type: string
        phoneNumber:
          maxLength: 20
          minLength: 1
          type: string
        surname:
          maxLength: 50
          minLength: 1
          type: string
      required:
      - forename
      - surname
      title: Credas.Api.Models.Registrations.UpdateContactDetailsRequest
      type: object
    Credas.Api.Models.Registrations.UpdateRegistrationStatusRequest:
      example:
        status: 2
      properties:
        status:
          description: "Unknown = 0, Submitted = 1, Approved = 2, Rejected = 3, Exported\
            \ = 4, Invited = 6"
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 6
          format: int32
          type: integer
      required:
      - status
      title: Credas.Api.Models.Registrations.UpdateRegistrationStatusRequest
      type: object
    Credas.Api.Models.ReportView.GetReportViewByReferenceIdRequest:
      example:
        canChangeStatus: false
        canVerify: true
        referenceId: JD0387152001
        user: Emily Jones
      properties:
        canChangeStatus:
          type: boolean
        canVerify:
          type: boolean
        referenceId:
          maxLength: 255
          minLength: 0
          type: string
        user:
          maxLength: 200
          minLength: 0
          type: string
      required:
      - referenceId
      title: Credas.Api.Models.ReportView.GetReportViewByReferenceIdRequest
      type: object
    Credas.Api.Models.ReportView.GetReportViewByRegistrationIdRequest:
      example:
        canChangeStatus: true
        canVerify: true
        registrationId: 4bf4db0a-1c0c-4acd-8e92-701f55163891
        user: Rob Starr
      properties:
        canChangeStatus:
          type: boolean
        canVerify:
          type: boolean
        registrationId:
          format: uuid
          type: string
        user:
          maxLength: 200
          minLength: 0
          type: string
      required:
      - registrationId
      title: Credas.Api.Models.ReportView.GetReportViewByRegistrationIdRequest
      type: object
    Credas.Api.Models.ReportView.GetReportViewResponse:
      example:
        results:
        - forename: forename
          surname: surname
          validUntil: 2000-01-23T04:56:07.000+00:00
          url: url
        - forename: forename
          surname: surname
          validUntil: 2000-01-23T04:56:07.000+00:00
          url: url
      properties:
        results:
          items:
            $ref: '#/components/schemas/Credas.Api.Models.ReportView.ReportViewItem'
          readOnly: true
          title: results
          type: array
          uniqueItems: false
      title: Credas.Api.Models.ReportView.GetReportViewResponse
      type: object
    Credas.Api.Models.ReportView.ReportViewItem:
      example:
        forename: forename
        surname: surname
        validUntil: 2000-01-23T04:56:07.000+00:00
        url: url
      properties:
        forename:
          title: forename
          type: string
        surname:
          title: surname
          type: string
        url:
          title: url
          type: string
        validUntil:
          format: date-time
          title: validUntil
          type: string
      title: Credas.Api.Models.ReportView.ReportViewItem
      type: object
    Credas.Api.Models.StatusChecks.CCJ.CcjResult:
      example:
        judgementTypeText: judgementTypeText
        amount: amount
        judgementDate: 2000-01-23T04:56:07.000+00:00
        address3: address3
        address2: address2
        address1: address1
        judgementType: 0
        postcode: postcode
        dateEnd: 2000-01-23T04:56:07.000+00:00
        courtName: courtName
        caseNumber: caseNumber
        dob: 2000-01-23T04:56:07.000+00:00
        name: name
        address5: address5
        address4: address4
      properties:
        address1:
          title: address1
          type: string
        address2:
          title: address2
          type: string
        address3:
          title: address3
          type: string
        address4:
          title: address4
          type: string
        address5:
          title: address5
          type: string
        amount:
          title: amount
          type: string
        caseNumber:
          title: caseNumber
          type: string
        courtName:
          title: courtName
          type: string
        dateEnd:
          format: date-time
          title: dateEnd
          type: string
        dob:
          format: date-time
          title: dob
          type: string
        judgementDate:
          format: date-time
          title: judgementDate
          type: string
        judgementType:
          description: "Unknown = 0, Judgement = 1, Satisfaction = 2, Revocation =\
            \ 3, SetAside = 4, AdministrationOrder = 5"
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          format: int32
          title: judgementType
          type: integer
        judgementTypeText:
          readOnly: true
          title: judgementTypeText
          type: string
        name:
          title: name
          type: string
        postcode:
          title: postcode
          type: string
      title: Credas.Api.Models.StatusChecks.CCJ.CcjResult
      type: object
    Credas.Api.Models.StatusChecks.CompanyDirector.CompanyAppointment:
      example:
        appointmentType: appointmentType
        address: address
        occupation: occupation
        nationality: nationality
        dob: 2000-01-23T04:56:07.000+00:00
        name: name
        title: title
        appointmentDate: 2000-01-23T04:56:07.000+00:00
      properties:
        address:
          title: address
          type: string
        appointmentDate:
          format: date-time
          title: appointmentDate
          type: string
        appointmentType:
          title: appointmentType
          type: string
        dob:
          format: date-time
          title: dob
          type: string
        name:
          title: name
          type: string
        nationality:
          title: nationality
          type: string
        occupation:
          title: occupation
          type: string
        title:
          title: title
          type: string
      title: Credas.Api.Models.StatusChecks.CompanyDirector.CompanyAppointment
      type: object
    Credas.Api.Models.StatusChecks.CompanyDirector.CompanyDirectorResult:
      example:
        matchTypeText: matchTypeText
        matchType: 6
        companyName: companyName
        companyRegNo: companyRegNo
        companyAppointments:
        - appointmentType: appointmentType
          address: address
          occupation: occupation
          nationality: nationality
          dob: 2000-01-23T04:56:07.000+00:00
          name: name
          title: title
          appointmentDate: 2000-01-23T04:56:07.000+00:00
        - appointmentType: appointmentType
          address: address
          occupation: occupation
          nationality: nationality
          dob: 2000-01-23T04:56:07.000+00:00
          name: name
          title: title
          appointmentDate: 2000-01-23T04:56:07.000+00:00
        dateAppointed: 2000-01-23T04:56:07.000+00:00
        registeredOffice: registeredOffice
      properties:
        companyAppointments:
          items:
            $ref: '#/components/schemas/Credas.Api.Models.StatusChecks.CompanyDirector.CompanyAppointment'
          title: companyAppointments
          type: array
          uniqueItems: false
        companyName:
          title: companyName
          type: string
        companyRegNo:
          title: companyRegNo
          type: string
        dateAppointed:
          format: date-time
          title: dateAppointed
          type: string
        matchType:
          description: "Unknown = 0, NameAndDateOfBirth = 1, NameAndAddress = 2, NameAndAddressAndDateOfBirth\
            \ = 3"
          enum:
          - 0
          - 1
          - 2
          - 3
          format: int32
          title: matchType
          type: integer
        matchTypeText:
          readOnly: true
          title: matchTypeText
          type: string
        registeredOffice:
          title: registeredOffice
          type: string
      title: Credas.Api.Models.StatusChecks.CompanyDirector.CompanyDirectorResult
      type: object
    Credas.Api.Models.StatusChecks.Insolvency.Address:
      example:
        address3: address3
        address2: address2
        address1: address1
        dps: dps
        isEmpty: true
        postcode: postcode
        address5: address5
        address4: address4
      properties:
        address1:
          title: address1
          type: string
        address2:
          title: address2
          type: string
        address3:
          title: address3
          type: string
        address4:
          title: address4
          type: string
        address5:
          title: address5
          type: string
        dps:
          title: dps
          type: string
        isEmpty:
          readOnly: true
          title: isEmpty
          type: boolean
        postcode:
          title: postcode
          type: string
      title: Credas.Api.Models.StatusChecks.Insolvency.Address
      type: object
    Credas.Api.Models.StatusChecks.Insolvency.InsolvencyResult:
      example:
        assetTotal: assetTotal
        address:
          address3: address3
          address2: address2
          address1: address1
          dps: dps
          isEmpty: true
          postcode: postcode
          address5: address5
          address4: address4
        aliases: aliases
        occupation: occupation
        telephoneNumber: telephoneNumber
        previousAddress:
          address3: address3
          address2: address2
          address1: address1
          dps: dps
          isEmpty: true
          postcode: postcode
          address5: address5
          address4: address4
        description: description
        presentationDate: 2000-01-23T04:56:07.000+00:00
        serviceOffice: serviceOffice
        debtTotal: debtTotal
        court: court
        type: 1
        caseNo: caseNo
        tradingNames: tradingNames
        caseType: caseType
        dob: 2000-01-23T04:56:07.000+00:00
        typeText: typeText
        name: name
        startDate: 2000-01-23T04:56:07.000+00:00
        status: status
      properties:
        address:
          $ref: '#/components/schemas/Credas.Api.Models.StatusChecks.Insolvency.Address'
        aliases:
          title: aliases
          type: string
        assetTotal:
          title: assetTotal
          type: string
        caseNo:
          title: caseNo
          type: string
        caseType:
          title: caseType
          type: string
        court:
          title: court
          type: string
        debtTotal:
          title: debtTotal
          type: string
        description:
          title: description
          type: string
        dob:
          format: date-time
          title: dob
          type: string
        name:
          title: name
          type: string
        occupation:
          title: occupation
          type: string
        presentationDate:
          format: date-time
          title: presentationDate
          type: string
        previousAddress:
          $ref: '#/components/schemas/Credas.Api.Models.StatusChecks.Insolvency.Address'
        serviceOffice:
          title: serviceOffice
          type: string
        startDate:
          format: date-time
          title: startDate
          type: string
        status:
          title: status
          type: string
        telephoneNumber:
          title: telephoneNumber
          type: string
        tradingNames:
          title: tradingNames
          type: string
        type:
          description: "Unknown = 0, NorthernIrelandBankruptcy = 1, ScottishSequestrationBankruptcy\
            \ = 2, EnglandAndWalesIVA = 3, EnglandAndWalesDRO = 4, EnglandAndWalesBankruptcy\
            \ = 5"
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          format: int32
          title: type
          type: integer
        typeText:
          readOnly: true
          title: typeText
          type: string
      title: Credas.Api.Models.StatusChecks.Insolvency.InsolvencyResult
      type: object
    Credas.Api.Models.StatusChecks.StatusCheck:
      example:
        insolvency:
        - assetTotal: assetTotal
          address:
            address3: address3
            address2: address2
            address1: address1
            dps: dps
            isEmpty: true
            postcode: postcode
            address5: address5
            address4: address4
          aliases: aliases
          occupation: occupation
          telephoneNumber: telephoneNumber
          previousAddress:
            address3: address3
            address2: address2
            address1: address1
            dps: dps
            isEmpty: true
            postcode: postcode
            address5: address5
            address4: address4
          description: description
          presentationDate: 2000-01-23T04:56:07.000+00:00
          serviceOffice: serviceOffice
          debtTotal: debtTotal
          court: court
          type: 1
          caseNo: caseNo
          tradingNames: tradingNames
          caseType: caseType
          dob: 2000-01-23T04:56:07.000+00:00
          typeText: typeText
          name: name
          startDate: 2000-01-23T04:56:07.000+00:00
          status: status
        - assetTotal: assetTotal
          address:
            address3: address3
            address2: address2
            address1: address1
            dps: dps
            isEmpty: true
            postcode: postcode
            address5: address5
            address4: address4
          aliases: aliases
          occupation: occupation
          telephoneNumber: telephoneNumber
          previousAddress:
            address3: address3
            address2: address2
            address1: address1
            dps: dps
            isEmpty: true
            postcode: postcode
            address5: address5
            address4: address4
          description: description
          presentationDate: 2000-01-23T04:56:07.000+00:00
          serviceOffice: serviceOffice
          debtTotal: debtTotal
          court: court
          type: 1
          caseNo: caseNo
          tradingNames: tradingNames
          caseType: caseType
          dob: 2000-01-23T04:56:07.000+00:00
          typeText: typeText
          name: name
          startDate: 2000-01-23T04:56:07.000+00:00
          status: status
        address:
          country: country
          city: city
          county: county
          postcode: postcode
          addressLine1: addressLine1
          addressLine2: addressLine2
          addressLine3: addressLine3
        companyDirector:
        - matchTypeText: matchTypeText
          matchType: 6
          companyName: companyName
          companyRegNo: companyRegNo
          companyAppointments:
          - appointmentType: appointmentType
            address: address
            occupation: occupation
            nationality: nationality
            dob: 2000-01-23T04:56:07.000+00:00
            name: name
            title: title
            appointmentDate: 2000-01-23T04:56:07.000+00:00
          - appointmentType: appointmentType
            address: address
            occupation: occupation
            nationality: nationality
            dob: 2000-01-23T04:56:07.000+00:00
            name: name
            title: title
            appointmentDate: 2000-01-23T04:56:07.000+00:00
          dateAppointed: 2000-01-23T04:56:07.000+00:00
          registeredOffice: registeredOffice
        - matchTypeText: matchTypeText
          matchType: 6
          companyName: companyName
          companyRegNo: companyRegNo
          companyAppointments:
          - appointmentType: appointmentType
            address: address
            occupation: occupation
            nationality: nationality
            dob: 2000-01-23T04:56:07.000+00:00
            name: name
            title: title
            appointmentDate: 2000-01-23T04:56:07.000+00:00
          - appointmentType: appointmentType
            address: address
            occupation: occupation
            nationality: nationality
            dob: 2000-01-23T04:56:07.000+00:00
            name: name
            title: title
            appointmentDate: 2000-01-23T04:56:07.000+00:00
          dateAppointed: 2000-01-23T04:56:07.000+00:00
          registeredOffice: registeredOffice
        person:
          forename: forename
          surname: surname
          dateOfBirth: 2000-01-23T04:56:07.000+00:00
          middleName: middleName
        hasBeenOverridden: true
        ccj:
        - judgementTypeText: judgementTypeText
          amount: amount
          judgementDate: 2000-01-23T04:56:07.000+00:00
          address3: address3
          address2: address2
          address1: address1
          judgementType: 0
          postcode: postcode
          dateEnd: 2000-01-23T04:56:07.000+00:00
          courtName: courtName
          caseNumber: caseNumber
          dob: 2000-01-23T04:56:07.000+00:00
          name: name
          address5: address5
          address4: address4
        - judgementTypeText: judgementTypeText
          amount: amount
          judgementDate: 2000-01-23T04:56:07.000+00:00
          address3: address3
          address2: address2
          address1: address1
          judgementType: 0
          postcode: postcode
          dateEnd: 2000-01-23T04:56:07.000+00:00
          courtName: courtName
          caseNumber: caseNumber
          dob: 2000-01-23T04:56:07.000+00:00
          name: name
          address5: address5
          address4: address4
        checkDate: 2000-01-23T04:56:07.000+00:00
        status: 5
      properties:
        address:
          $ref: '#/components/schemas/Credas.Api.Models.DataCheck.Address'
        ccj:
          items:
            $ref: '#/components/schemas/Credas.Api.Models.StatusChecks.CCJ.CcjResult'
          title: ccj
          type: array
          uniqueItems: false
        checkDate:
          format: date-time
          title: checkDate
          type: string
        companyDirector:
          items:
            $ref: '#/components/schemas/Credas.Api.Models.StatusChecks.CompanyDirector.CompanyDirectorResult'
          title: companyDirector
          type: array
          uniqueItems: false
        hasBeenOverridden:
          title: hasBeenOverridden
          type: boolean
        insolvency:
          items:
            $ref: '#/components/schemas/Credas.Api.Models.StatusChecks.Insolvency.InsolvencyResult'
          title: insolvency
          type: array
          uniqueItems: false
        person:
          $ref: '#/components/schemas/Credas.Api.Models.DataCheck.Person'
        status:
          description: "Unknown = 0, Pass = 1, Refer = 2, Fail = 3"
          enum:
          - 0
          - 1
          - 2
          - 3
          format: int32
          title: status
          type: integer
      title: Credas.Api.Models.StatusChecks.StatusCheck
      type: object
    Credas.Api.Models.StatusChecks.StatusCheckRequest:
      properties:
        address:
          $ref: '#/components/schemas/Credas.Api.Models.DataCheck.Address'
        person:
          $ref: '#/components/schemas/Credas.Api.Models.DataCheck.Person'
        regEntryId:
          format: uuid
          title: regEntryId
          type: string
      required:
      - address
      - person
      - regEntryId
      title: Credas.Api.Models.StatusChecks.StatusCheckRequest
      type: object
    Credas.Api.Models.StatusOverrides.OverrideCheckStatusRequest:
      example:
        checkType: 1
        comment: Documents look genuine.
        status: 1
      properties:
        checkType:
          description: "IdDocuments = 1, StandardChecks = 2, InternationalSanctionsAndPep\
            \ = 3, CreditStatusCheck = 4, BankAccountCheck = 5, ProofOfOwnership =\
            \ 6, RightToWork = 7, RightToRent = 8"
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          format: int32
          type: integer
        comment:
          type: string
        status:
          description: "Unknown = 0, Pass = 1, Refer = 2, Fail = 3"
          enum:
          - 0
          - 1
          - 2
          - 3
          format: int32
          type: integer
      required:
      - checkType
      - comment
      - status
      title: Credas.Api.Models.StatusOverrides.OverrideCheckStatusRequest
      type: object
    Credas.Api.Models.WebVerifications.GetWebVerificationsByReferenceIdRequest:
      example:
        referenceId: JD0387152001
        returnUrls:
          returnUrl: https://www.company.co.uk/registration-completed
      properties:
        referenceId:
          maxLength: 255
          minLength: 0
          type: string
        returnUrls:
          $ref: '#/components/schemas/Credas.Api.Models.Registrations.ReturnUrls'
      required:
      - referenceId
      title: Credas.Api.Models.WebVerifications.GetWebVerificationsByReferenceIdRequest
      type: object
    Credas.Api.Models.WebVerifications.GetWebVerificationsByRegistrationIdRequest:
      example:
        registrationId: 4bf4db0a-1c0c-4acd-8e92-701f55163891
        returnUrls:
          returnUrl: https://www.company.co.uk/registration-completed
      properties:
        registrationId:
          format: uuid
          type: string
        returnUrls:
          $ref: '#/components/schemas/Credas.Api.Models.Registrations.ReturnUrls'
      required:
      - registrationId
      title: Credas.Api.Models.WebVerifications.GetWebVerificationsByRegistrationIdRequest
      type: object
    Credas.Api.Models.WebVerifications.GetWebVerificationsResponse:
      example:
        results:
        - journeyUrl:
            validUntil: 2000-01-23T04:56:07.000+00:00
            url: url
        - journeyUrl:
            validUntil: 2000-01-23T04:56:07.000+00:00
            url: url
      properties:
        results:
          items:
            $ref: '#/components/schemas/Credas.Api.Models.WebVerifications.WebVerificationsItem'
          readOnly: true
          title: results
          type: array
          uniqueItems: false
      title: Credas.Api.Models.WebVerifications.GetWebVerificationsResponse
      type: object
    Credas.Api.Models.WebVerifications.WebVerificationsItem:
      example:
        journeyUrl:
          validUntil: 2000-01-23T04:56:07.000+00:00
          url: url
      properties:
        journeyUrl:
          $ref: '#/components/schemas/Credas.Api.Models.Registrations.JourneyUrl'
      title: Credas.Api.Models.WebVerifications.WebVerificationsItem
      type: object
