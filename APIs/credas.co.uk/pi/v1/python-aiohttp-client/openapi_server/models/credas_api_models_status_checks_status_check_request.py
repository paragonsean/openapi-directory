# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.credas_api_models_data_check_address import CredasApiModelsDataCheckAddress
from openapi_server.models.credas_api_models_data_check_person import CredasApiModelsDataCheckPerson
from openapi_server import util


class CredasApiModelsStatusChecksStatusCheckRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, address: CredasApiModelsDataCheckAddress=None, person: CredasApiModelsDataCheckPerson=None, reg_entry_id: str=None):
        """CredasApiModelsStatusChecksStatusCheckRequest - a model defined in OpenAPI

        :param address: The address of this CredasApiModelsStatusChecksStatusCheckRequest.
        :param person: The person of this CredasApiModelsStatusChecksStatusCheckRequest.
        :param reg_entry_id: The reg_entry_id of this CredasApiModelsStatusChecksStatusCheckRequest.
        """
        self.openapi_types = {
            'address': CredasApiModelsDataCheckAddress,
            'person': CredasApiModelsDataCheckPerson,
            'reg_entry_id': str
        }

        self.attribute_map = {
            'address': 'address',
            'person': 'person',
            'reg_entry_id': 'regEntryId'
        }

        self._address = address
        self._person = person
        self._reg_entry_id = reg_entry_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CredasApiModelsStatusChecksStatusCheckRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Credas.Api.Models.StatusChecks.StatusCheckRequest of this CredasApiModelsStatusChecksStatusCheckRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def address(self):
        """Gets the address of this CredasApiModelsStatusChecksStatusCheckRequest.


        :return: The address of this CredasApiModelsStatusChecksStatusCheckRequest.
        :rtype: CredasApiModelsDataCheckAddress
        """
        return self._address

    @address.setter
    def address(self, address):
        """Sets the address of this CredasApiModelsStatusChecksStatusCheckRequest.


        :param address: The address of this CredasApiModelsStatusChecksStatusCheckRequest.
        :type address: CredasApiModelsDataCheckAddress
        """
        if address is None:
            raise ValueError("Invalid value for `address`, must not be `None`")

        self._address = address

    @property
    def person(self):
        """Gets the person of this CredasApiModelsStatusChecksStatusCheckRequest.


        :return: The person of this CredasApiModelsStatusChecksStatusCheckRequest.
        :rtype: CredasApiModelsDataCheckPerson
        """
        return self._person

    @person.setter
    def person(self, person):
        """Sets the person of this CredasApiModelsStatusChecksStatusCheckRequest.


        :param person: The person of this CredasApiModelsStatusChecksStatusCheckRequest.
        :type person: CredasApiModelsDataCheckPerson
        """
        if person is None:
            raise ValueError("Invalid value for `person`, must not be `None`")

        self._person = person

    @property
    def reg_entry_id(self):
        """Gets the reg_entry_id of this CredasApiModelsStatusChecksStatusCheckRequest.


        :return: The reg_entry_id of this CredasApiModelsStatusChecksStatusCheckRequest.
        :rtype: str
        """
        return self._reg_entry_id

    @reg_entry_id.setter
    def reg_entry_id(self, reg_entry_id):
        """Sets the reg_entry_id of this CredasApiModelsStatusChecksStatusCheckRequest.


        :param reg_entry_id: The reg_entry_id of this CredasApiModelsStatusChecksStatusCheckRequest.
        :type reg_entry_id: str
        """
        if reg_entry_id is None:
            raise ValueError("Invalid value for `reg_entry_id`, must not be `None`")

        self._reg_entry_id = reg_entry_id
