# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CredasApiModelsCompaniesSignificantPerson(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, forename: str=None, id: str=None, reg_entry_id: str=None, surname: str=None):
        """CredasApiModelsCompaniesSignificantPerson - a model defined in OpenAPI

        :param forename: The forename of this CredasApiModelsCompaniesSignificantPerson.
        :param id: The id of this CredasApiModelsCompaniesSignificantPerson.
        :param reg_entry_id: The reg_entry_id of this CredasApiModelsCompaniesSignificantPerson.
        :param surname: The surname of this CredasApiModelsCompaniesSignificantPerson.
        """
        self.openapi_types = {
            'forename': str,
            'id': str,
            'reg_entry_id': str,
            'surname': str
        }

        self.attribute_map = {
            'forename': 'forename',
            'id': 'id',
            'reg_entry_id': 'regEntryId',
            'surname': 'surname'
        }

        self._forename = forename
        self._id = id
        self._reg_entry_id = reg_entry_id
        self._surname = surname

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CredasApiModelsCompaniesSignificantPerson':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Credas.Api.Models.Companies.SignificantPerson of this CredasApiModelsCompaniesSignificantPerson.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def forename(self):
        """Gets the forename of this CredasApiModelsCompaniesSignificantPerson.


        :return: The forename of this CredasApiModelsCompaniesSignificantPerson.
        :rtype: str
        """
        return self._forename

    @forename.setter
    def forename(self, forename):
        """Sets the forename of this CredasApiModelsCompaniesSignificantPerson.


        :param forename: The forename of this CredasApiModelsCompaniesSignificantPerson.
        :type forename: str
        """

        self._forename = forename

    @property
    def id(self):
        """Gets the id of this CredasApiModelsCompaniesSignificantPerson.


        :return: The id of this CredasApiModelsCompaniesSignificantPerson.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this CredasApiModelsCompaniesSignificantPerson.


        :param id: The id of this CredasApiModelsCompaniesSignificantPerson.
        :type id: str
        """

        self._id = id

    @property
    def reg_entry_id(self):
        """Gets the reg_entry_id of this CredasApiModelsCompaniesSignificantPerson.


        :return: The reg_entry_id of this CredasApiModelsCompaniesSignificantPerson.
        :rtype: str
        """
        return self._reg_entry_id

    @reg_entry_id.setter
    def reg_entry_id(self, reg_entry_id):
        """Sets the reg_entry_id of this CredasApiModelsCompaniesSignificantPerson.


        :param reg_entry_id: The reg_entry_id of this CredasApiModelsCompaniesSignificantPerson.
        :type reg_entry_id: str
        """

        self._reg_entry_id = reg_entry_id

    @property
    def surname(self):
        """Gets the surname of this CredasApiModelsCompaniesSignificantPerson.


        :return: The surname of this CredasApiModelsCompaniesSignificantPerson.
        :rtype: str
        """
        return self._surname

    @surname.setter
    def surname(self, surname):
        """Sets the surname of this CredasApiModelsCompaniesSignificantPerson.


        :param surname: The surname of this CredasApiModelsCompaniesSignificantPerson.
        :type surname: str
        """

        self._surname = surname
