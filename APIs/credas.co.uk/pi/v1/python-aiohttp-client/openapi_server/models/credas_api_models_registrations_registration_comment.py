# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CredasApiModelsRegistrationsRegistrationComment(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, check_type: int=None, comment: str=None, date_created: datetime=None, id: str=None, name: str=None, type: int=None):
        """CredasApiModelsRegistrationsRegistrationComment - a model defined in OpenAPI

        :param check_type: The check_type of this CredasApiModelsRegistrationsRegistrationComment.
        :param comment: The comment of this CredasApiModelsRegistrationsRegistrationComment.
        :param date_created: The date_created of this CredasApiModelsRegistrationsRegistrationComment.
        :param id: The id of this CredasApiModelsRegistrationsRegistrationComment.
        :param name: The name of this CredasApiModelsRegistrationsRegistrationComment.
        :param type: The type of this CredasApiModelsRegistrationsRegistrationComment.
        """
        self.openapi_types = {
            'check_type': int,
            'comment': str,
            'date_created': datetime,
            'id': str,
            'name': str,
            'type': int
        }

        self.attribute_map = {
            'check_type': 'checkType',
            'comment': 'comment',
            'date_created': 'dateCreated',
            'id': 'id',
            'name': 'name',
            'type': 'type'
        }

        self._check_type = check_type
        self._comment = comment
        self._date_created = date_created
        self._id = id
        self._name = name
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CredasApiModelsRegistrationsRegistrationComment':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Credas.Api.Models.Registrations.RegistrationComment of this CredasApiModelsRegistrationsRegistrationComment.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def check_type(self):
        """Gets the check_type of this CredasApiModelsRegistrationsRegistrationComment.

        IdDocuments = 1, StandardChecks = 2, InternationalSanctionsAndPep = 3, CreditStatusCheck = 4, BankAccountCheck = 5, ProofOfOwnership = 6, RightToWork = 7, RightToRent = 8

        :return: The check_type of this CredasApiModelsRegistrationsRegistrationComment.
        :rtype: int
        """
        return self._check_type

    @check_type.setter
    def check_type(self, check_type):
        """Sets the check_type of this CredasApiModelsRegistrationsRegistrationComment.

        IdDocuments = 1, StandardChecks = 2, InternationalSanctionsAndPep = 3, CreditStatusCheck = 4, BankAccountCheck = 5, ProofOfOwnership = 6, RightToWork = 7, RightToRent = 8

        :param check_type: The check_type of this CredasApiModelsRegistrationsRegistrationComment.
        :type check_type: int
        """
        allowed_values = [0, 1, 2, 3, 4, 5, 6, 7, 8]  # noqa: E501
        if check_type not in allowed_values:
            raise ValueError(
                "Invalid value for `check_type` ({0}), must be one of {1}"
                .format(check_type, allowed_values)
            )

        self._check_type = check_type

    @property
    def comment(self):
        """Gets the comment of this CredasApiModelsRegistrationsRegistrationComment.


        :return: The comment of this CredasApiModelsRegistrationsRegistrationComment.
        :rtype: str
        """
        return self._comment

    @comment.setter
    def comment(self, comment):
        """Sets the comment of this CredasApiModelsRegistrationsRegistrationComment.


        :param comment: The comment of this CredasApiModelsRegistrationsRegistrationComment.
        :type comment: str
        """

        self._comment = comment

    @property
    def date_created(self):
        """Gets the date_created of this CredasApiModelsRegistrationsRegistrationComment.


        :return: The date_created of this CredasApiModelsRegistrationsRegistrationComment.
        :rtype: datetime
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this CredasApiModelsRegistrationsRegistrationComment.


        :param date_created: The date_created of this CredasApiModelsRegistrationsRegistrationComment.
        :type date_created: datetime
        """

        self._date_created = date_created

    @property
    def id(self):
        """Gets the id of this CredasApiModelsRegistrationsRegistrationComment.


        :return: The id of this CredasApiModelsRegistrationsRegistrationComment.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this CredasApiModelsRegistrationsRegistrationComment.


        :param id: The id of this CredasApiModelsRegistrationsRegistrationComment.
        :type id: str
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this CredasApiModelsRegistrationsRegistrationComment.


        :return: The name of this CredasApiModelsRegistrationsRegistrationComment.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this CredasApiModelsRegistrationsRegistrationComment.


        :param name: The name of this CredasApiModelsRegistrationsRegistrationComment.
        :type name: str
        """

        self._name = name

    @property
    def type(self):
        """Gets the type of this CredasApiModelsRegistrationsRegistrationComment.

        General = 0, CheckRelated = 1

        :return: The type of this CredasApiModelsRegistrationsRegistrationComment.
        :rtype: int
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this CredasApiModelsRegistrationsRegistrationComment.

        General = 0, CheckRelated = 1

        :param type: The type of this CredasApiModelsRegistrationsRegistrationComment.
        :type type: int
        """
        allowed_values = [0, 1]  # noqa: E501
        if type not in allowed_values:
            raise ValueError(
                "Invalid value for `type` ({0}), must be one of {1}"
                .format(type, allowed_values)
            )

        self._type = type
