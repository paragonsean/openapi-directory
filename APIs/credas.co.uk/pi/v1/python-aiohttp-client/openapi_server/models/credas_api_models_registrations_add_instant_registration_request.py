# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.credas_api_models_registrations_key_value_item import CredasApiModelsRegistrationsKeyValueItem
from openapi_server import util


class CredasApiModelsRegistrationsAddInstantRegistrationRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, document: str=None, document_parameters: List[CredasApiModelsRegistrationsKeyValueItem]=None, document_type: int=None, forename: str=None, middle_name: str=None, parameters: List[CredasApiModelsRegistrationsKeyValueItem]=None, reference_id: str=None, reg_type_id: str=None, selfie: str=None, significant_person_id: str=None, surname: str=None):
        """CredasApiModelsRegistrationsAddInstantRegistrationRequest - a model defined in OpenAPI

        :param document: The document of this CredasApiModelsRegistrationsAddInstantRegistrationRequest.
        :param document_parameters: The document_parameters of this CredasApiModelsRegistrationsAddInstantRegistrationRequest.
        :param document_type: The document_type of this CredasApiModelsRegistrationsAddInstantRegistrationRequest.
        :param forename: The forename of this CredasApiModelsRegistrationsAddInstantRegistrationRequest.
        :param middle_name: The middle_name of this CredasApiModelsRegistrationsAddInstantRegistrationRequest.
        :param parameters: The parameters of this CredasApiModelsRegistrationsAddInstantRegistrationRequest.
        :param reference_id: The reference_id of this CredasApiModelsRegistrationsAddInstantRegistrationRequest.
        :param reg_type_id: The reg_type_id of this CredasApiModelsRegistrationsAddInstantRegistrationRequest.
        :param selfie: The selfie of this CredasApiModelsRegistrationsAddInstantRegistrationRequest.
        :param significant_person_id: The significant_person_id of this CredasApiModelsRegistrationsAddInstantRegistrationRequest.
        :param surname: The surname of this CredasApiModelsRegistrationsAddInstantRegistrationRequest.
        """
        self.openapi_types = {
            'document': str,
            'document_parameters': List[CredasApiModelsRegistrationsKeyValueItem],
            'document_type': int,
            'forename': str,
            'middle_name': str,
            'parameters': List[CredasApiModelsRegistrationsKeyValueItem],
            'reference_id': str,
            'reg_type_id': str,
            'selfie': str,
            'significant_person_id': str,
            'surname': str
        }

        self.attribute_map = {
            'document': 'document',
            'document_parameters': 'documentParameters',
            'document_type': 'documentType',
            'forename': 'forename',
            'middle_name': 'middleName',
            'parameters': 'parameters',
            'reference_id': 'referenceId',
            'reg_type_id': 'regTypeId',
            'selfie': 'selfie',
            'significant_person_id': 'significantPersonId',
            'surname': 'surname'
        }

        self._document = document
        self._document_parameters = document_parameters
        self._document_type = document_type
        self._forename = forename
        self._middle_name = middle_name
        self._parameters = parameters
        self._reference_id = reference_id
        self._reg_type_id = reg_type_id
        self._selfie = selfie
        self._significant_person_id = significant_person_id
        self._surname = surname

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CredasApiModelsRegistrationsAddInstantRegistrationRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Credas.Api.Models.Registrations.AddInstantRegistrationRequest of this CredasApiModelsRegistrationsAddInstantRegistrationRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def document(self):
        """Gets the document of this CredasApiModelsRegistrationsAddInstantRegistrationRequest.


        :return: The document of this CredasApiModelsRegistrationsAddInstantRegistrationRequest.
        :rtype: str
        """
        return self._document

    @document.setter
    def document(self, document):
        """Sets the document of this CredasApiModelsRegistrationsAddInstantRegistrationRequest.


        :param document: The document of this CredasApiModelsRegistrationsAddInstantRegistrationRequest.
        :type document: str
        """
        if document is None:
            raise ValueError("Invalid value for `document`, must not be `None`")

        self._document = document

    @property
    def document_parameters(self):
        """Gets the document_parameters of this CredasApiModelsRegistrationsAddInstantRegistrationRequest.


        :return: The document_parameters of this CredasApiModelsRegistrationsAddInstantRegistrationRequest.
        :rtype: List[CredasApiModelsRegistrationsKeyValueItem]
        """
        return self._document_parameters

    @document_parameters.setter
    def document_parameters(self, document_parameters):
        """Sets the document_parameters of this CredasApiModelsRegistrationsAddInstantRegistrationRequest.


        :param document_parameters: The document_parameters of this CredasApiModelsRegistrationsAddInstantRegistrationRequest.
        :type document_parameters: List[CredasApiModelsRegistrationsKeyValueItem]
        """

        self._document_parameters = document_parameters

    @property
    def document_type(self):
        """Gets the document_type of this CredasApiModelsRegistrationsAddInstantRegistrationRequest.

        Other = 0, Passport = 1, DrivingLicence = 2, Visa = 3, CscsCard = 4, HomeOfficeLetter = 5, BirthCertificate = 6, NationalIdCard = 7, ResidencePermit = 9, UtilityBill = 11

        :return: The document_type of this CredasApiModelsRegistrationsAddInstantRegistrationRequest.
        :rtype: int
        """
        return self._document_type

    @document_type.setter
    def document_type(self, document_type):
        """Sets the document_type of this CredasApiModelsRegistrationsAddInstantRegistrationRequest.

        Other = 0, Passport = 1, DrivingLicence = 2, Visa = 3, CscsCard = 4, HomeOfficeLetter = 5, BirthCertificate = 6, NationalIdCard = 7, ResidencePermit = 9, UtilityBill = 11

        :param document_type: The document_type of this CredasApiModelsRegistrationsAddInstantRegistrationRequest.
        :type document_type: int
        """
        allowed_values = [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11]  # noqa: E501
        if document_type not in allowed_values:
            raise ValueError(
                "Invalid value for `document_type` ({0}), must be one of {1}"
                .format(document_type, allowed_values)
            )

        self._document_type = document_type

    @property
    def forename(self):
        """Gets the forename of this CredasApiModelsRegistrationsAddInstantRegistrationRequest.


        :return: The forename of this CredasApiModelsRegistrationsAddInstantRegistrationRequest.
        :rtype: str
        """
        return self._forename

    @forename.setter
    def forename(self, forename):
        """Sets the forename of this CredasApiModelsRegistrationsAddInstantRegistrationRequest.


        :param forename: The forename of this CredasApiModelsRegistrationsAddInstantRegistrationRequest.
        :type forename: str
        """
        if forename is None:
            raise ValueError("Invalid value for `forename`, must not be `None`")
        if forename is not None and len(forename) > 50:
            raise ValueError("Invalid value for `forename`, length must be less than or equal to `50`")
        if forename is not None and len(forename) < 1:
            raise ValueError("Invalid value for `forename`, length must be greater than or equal to `1`")

        self._forename = forename

    @property
    def middle_name(self):
        """Gets the middle_name of this CredasApiModelsRegistrationsAddInstantRegistrationRequest.


        :return: The middle_name of this CredasApiModelsRegistrationsAddInstantRegistrationRequest.
        :rtype: str
        """
        return self._middle_name

    @middle_name.setter
    def middle_name(self, middle_name):
        """Sets the middle_name of this CredasApiModelsRegistrationsAddInstantRegistrationRequest.


        :param middle_name: The middle_name of this CredasApiModelsRegistrationsAddInstantRegistrationRequest.
        :type middle_name: str
        """
        if middle_name is not None and len(middle_name) > 50:
            raise ValueError("Invalid value for `middle_name`, length must be less than or equal to `50`")
        if middle_name is not None and len(middle_name) < 1:
            raise ValueError("Invalid value for `middle_name`, length must be greater than or equal to `1`")

        self._middle_name = middle_name

    @property
    def parameters(self):
        """Gets the parameters of this CredasApiModelsRegistrationsAddInstantRegistrationRequest.


        :return: The parameters of this CredasApiModelsRegistrationsAddInstantRegistrationRequest.
        :rtype: List[CredasApiModelsRegistrationsKeyValueItem]
        """
        return self._parameters

    @parameters.setter
    def parameters(self, parameters):
        """Sets the parameters of this CredasApiModelsRegistrationsAddInstantRegistrationRequest.


        :param parameters: The parameters of this CredasApiModelsRegistrationsAddInstantRegistrationRequest.
        :type parameters: List[CredasApiModelsRegistrationsKeyValueItem]
        """

        self._parameters = parameters

    @property
    def reference_id(self):
        """Gets the reference_id of this CredasApiModelsRegistrationsAddInstantRegistrationRequest.


        :return: The reference_id of this CredasApiModelsRegistrationsAddInstantRegistrationRequest.
        :rtype: str
        """
        return self._reference_id

    @reference_id.setter
    def reference_id(self, reference_id):
        """Sets the reference_id of this CredasApiModelsRegistrationsAddInstantRegistrationRequest.


        :param reference_id: The reference_id of this CredasApiModelsRegistrationsAddInstantRegistrationRequest.
        :type reference_id: str
        """
        if reference_id is not None and len(reference_id) > 255:
            raise ValueError("Invalid value for `reference_id`, length must be less than or equal to `255`")
        if reference_id is not None and len(reference_id) < 0:
            raise ValueError("Invalid value for `reference_id`, length must be greater than or equal to `0`")

        self._reference_id = reference_id

    @property
    def reg_type_id(self):
        """Gets the reg_type_id of this CredasApiModelsRegistrationsAddInstantRegistrationRequest.


        :return: The reg_type_id of this CredasApiModelsRegistrationsAddInstantRegistrationRequest.
        :rtype: str
        """
        return self._reg_type_id

    @reg_type_id.setter
    def reg_type_id(self, reg_type_id):
        """Sets the reg_type_id of this CredasApiModelsRegistrationsAddInstantRegistrationRequest.


        :param reg_type_id: The reg_type_id of this CredasApiModelsRegistrationsAddInstantRegistrationRequest.
        :type reg_type_id: str
        """
        if reg_type_id is None:
            raise ValueError("Invalid value for `reg_type_id`, must not be `None`")

        self._reg_type_id = reg_type_id

    @property
    def selfie(self):
        """Gets the selfie of this CredasApiModelsRegistrationsAddInstantRegistrationRequest.


        :return: The selfie of this CredasApiModelsRegistrationsAddInstantRegistrationRequest.
        :rtype: str
        """
        return self._selfie

    @selfie.setter
    def selfie(self, selfie):
        """Sets the selfie of this CredasApiModelsRegistrationsAddInstantRegistrationRequest.


        :param selfie: The selfie of this CredasApiModelsRegistrationsAddInstantRegistrationRequest.
        :type selfie: str
        """

        self._selfie = selfie

    @property
    def significant_person_id(self):
        """Gets the significant_person_id of this CredasApiModelsRegistrationsAddInstantRegistrationRequest.


        :return: The significant_person_id of this CredasApiModelsRegistrationsAddInstantRegistrationRequest.
        :rtype: str
        """
        return self._significant_person_id

    @significant_person_id.setter
    def significant_person_id(self, significant_person_id):
        """Sets the significant_person_id of this CredasApiModelsRegistrationsAddInstantRegistrationRequest.


        :param significant_person_id: The significant_person_id of this CredasApiModelsRegistrationsAddInstantRegistrationRequest.
        :type significant_person_id: str
        """

        self._significant_person_id = significant_person_id

    @property
    def surname(self):
        """Gets the surname of this CredasApiModelsRegistrationsAddInstantRegistrationRequest.


        :return: The surname of this CredasApiModelsRegistrationsAddInstantRegistrationRequest.
        :rtype: str
        """
        return self._surname

    @surname.setter
    def surname(self, surname):
        """Sets the surname of this CredasApiModelsRegistrationsAddInstantRegistrationRequest.


        :param surname: The surname of this CredasApiModelsRegistrationsAddInstantRegistrationRequest.
        :type surname: str
        """
        if surname is None:
            raise ValueError("Invalid value for `surname`, must not be `None`")
        if surname is not None and len(surname) > 50:
            raise ValueError("Invalid value for `surname`, length must be less than or equal to `50`")
        if surname is not None and len(surname) < 1:
            raise ValueError("Invalid value for `surname`, length must be greater than or equal to `1`")

        self._surname = surname
