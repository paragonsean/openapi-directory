# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CredasApiModelsDataCheckPepSanctionsSanctionDate(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, _date: datetime=None, day: int=None, month: int=None, type: int=None, year: int=None):
        """CredasApiModelsDataCheckPepSanctionsSanctionDate - a model defined in OpenAPI

        :param _date: The _date of this CredasApiModelsDataCheckPepSanctionsSanctionDate.
        :param day: The day of this CredasApiModelsDataCheckPepSanctionsSanctionDate.
        :param month: The month of this CredasApiModelsDataCheckPepSanctionsSanctionDate.
        :param type: The type of this CredasApiModelsDataCheckPepSanctionsSanctionDate.
        :param year: The year of this CredasApiModelsDataCheckPepSanctionsSanctionDate.
        """
        self.openapi_types = {
            '_date': datetime,
            'day': int,
            'month': int,
            'type': int,
            'year': int
        }

        self.attribute_map = {
            '_date': 'date',
            'day': 'day',
            'month': 'month',
            'type': 'type',
            'year': 'year'
        }

        self.__date = _date
        self._day = day
        self._month = month
        self._type = type
        self._year = year

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CredasApiModelsDataCheckPepSanctionsSanctionDate':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Credas.Api.Models.DataCheck.PepSanctions.SanctionDate of this CredasApiModelsDataCheckPepSanctionsSanctionDate.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def _date(self):
        """Gets the _date of this CredasApiModelsDataCheckPepSanctionsSanctionDate.


        :return: The _date of this CredasApiModelsDataCheckPepSanctionsSanctionDate.
        :rtype: datetime
        """
        return self.__date

    @_date.setter
    def _date(self, _date):
        """Sets the _date of this CredasApiModelsDataCheckPepSanctionsSanctionDate.


        :param _date: The _date of this CredasApiModelsDataCheckPepSanctionsSanctionDate.
        :type _date: datetime
        """

        self.__date = _date

    @property
    def day(self):
        """Gets the day of this CredasApiModelsDataCheckPepSanctionsSanctionDate.


        :return: The day of this CredasApiModelsDataCheckPepSanctionsSanctionDate.
        :rtype: int
        """
        return self._day

    @day.setter
    def day(self, day):
        """Sets the day of this CredasApiModelsDataCheckPepSanctionsSanctionDate.


        :param day: The day of this CredasApiModelsDataCheckPepSanctionsSanctionDate.
        :type day: int
        """

        self._day = day

    @property
    def month(self):
        """Gets the month of this CredasApiModelsDataCheckPepSanctionsSanctionDate.


        :return: The month of this CredasApiModelsDataCheckPepSanctionsSanctionDate.
        :rtype: int
        """
        return self._month

    @month.setter
    def month(self, month):
        """Sets the month of this CredasApiModelsDataCheckPepSanctionsSanctionDate.


        :param month: The month of this CredasApiModelsDataCheckPepSanctionsSanctionDate.
        :type month: int
        """

        self._month = month

    @property
    def type(self):
        """Gets the type of this CredasApiModelsDataCheckPepSanctionsSanctionDate.

        Unknown = 0, Birth = 1, Death = 2

        :return: The type of this CredasApiModelsDataCheckPepSanctionsSanctionDate.
        :rtype: int
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this CredasApiModelsDataCheckPepSanctionsSanctionDate.

        Unknown = 0, Birth = 1, Death = 2

        :param type: The type of this CredasApiModelsDataCheckPepSanctionsSanctionDate.
        :type type: int
        """
        allowed_values = [0, 1, 2]  # noqa: E501
        if type not in allowed_values:
            raise ValueError(
                "Invalid value for `type` ({0}), must be one of {1}"
                .format(type, allowed_values)
            )

        self._type = type

    @property
    def year(self):
        """Gets the year of this CredasApiModelsDataCheckPepSanctionsSanctionDate.


        :return: The year of this CredasApiModelsDataCheckPepSanctionsSanctionDate.
        :rtype: int
        """
        return self._year

    @year.setter
    def year(self, year):
        """Sets the year of this CredasApiModelsDataCheckPepSanctionsSanctionDate.


        :param year: The year of this CredasApiModelsDataCheckPepSanctionsSanctionDate.
        :type year: int
        """

        self._year = year
