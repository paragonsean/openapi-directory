# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.credas_api_models_bank_accounts_account_verification_response import CredasApiModelsBankAccountsAccountVerificationResponse
from openapi_server.models.credas_api_models_property_register_property_register_check_response import CredasApiModelsPropertyRegisterPropertyRegisterCheckResponse
from openapi_server.models.credas_api_models_registrations_data_check_source_summary import CredasApiModelsRegistrationsDataCheckSourceSummary
from openapi_server.models.credas_api_models_registrations_id_document_summary import CredasApiModelsRegistrationsIdDocumentSummary
from openapi_server.models.credas_api_models_registrations_id_verification import CredasApiModelsRegistrationsIdVerification
from openapi_server.models.credas_api_models_registrations_personal_details import CredasApiModelsRegistrationsPersonalDetails
from openapi_server.models.credas_api_models_registrations_registration_comment import CredasApiModelsRegistrationsRegistrationComment
from openapi_server.models.credas_api_models_registrations_settlement_status import CredasApiModelsRegistrationsSettlementStatus
from openapi_server.models.credas_api_models_status_checks_status_check import CredasApiModelsStatusChecksStatusCheck
from openapi_server import util


class CredasApiModelsRegistrationsRegistrationSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, comments: List[CredasApiModelsRegistrationsRegistrationComment]=None, created_by_agency_user_email: str=None, ditf_date: datetime=None, ditf_status: int=None, is_expired: bool=None, verified_in_app_date: datetime=None, bank_account_checks: List[CredasApiModelsBankAccountsAccountVerificationResponse]=None, created_by_agency_user_id: str=None, credit_status_check: CredasApiModelsStatusChecksStatusCheck=None, custom_terms_accepted: bool=None, custom_terms_accepted_date_time: datetime=None, custom_terms_accepted_version: int=None, data_check_result: int=None, data_check_sources: List[CredasApiModelsRegistrationsDataCheckSourceSummary]=None, data_checks_performed: bool=None, date_completed: datetime=None, date_created: datetime=None, email: str=None, forename: str=None, has_liveness_performed: bool=None, has_selfie: bool=None, id: str=None, id_documents: List[CredasApiModelsRegistrationsIdDocumentSummary]=None, id_verification: CredasApiModelsRegistrationsIdVerification=None, is_agent_led: bool=None, liveness_method: int=None, liveness_status: int=None, liveness_verified: bool=None, middle_name: str=None, personal_details: CredasApiModelsRegistrationsPersonalDetails=None, phone_number: str=None, proof_of_ownership_check: CredasApiModelsPropertyRegisterPropertyRegisterCheckResponse=None, reference_id: str=None, reg_code: str=None, reg_type_id: str=None, right_to_rent_check: CredasApiModelsRegistrationsSettlementStatus=None, right_to_work_check: CredasApiModelsRegistrationsSettlementStatus=None, right_to_work_documents_provided: int=None, safe_harbour_verified_date: datetime=None, safe_harbour_verified_status: int=None, status: int=None, surname: str=None):
        """CredasApiModelsRegistrationsRegistrationSummary - a model defined in OpenAPI

        :param comments: The comments of this CredasApiModelsRegistrationsRegistrationSummary.
        :param created_by_agency_user_email: The created_by_agency_user_email of this CredasApiModelsRegistrationsRegistrationSummary.
        :param ditf_date: The ditf_date of this CredasApiModelsRegistrationsRegistrationSummary.
        :param ditf_status: The ditf_status of this CredasApiModelsRegistrationsRegistrationSummary.
        :param is_expired: The is_expired of this CredasApiModelsRegistrationsRegistrationSummary.
        :param verified_in_app_date: The verified_in_app_date of this CredasApiModelsRegistrationsRegistrationSummary.
        :param bank_account_checks: The bank_account_checks of this CredasApiModelsRegistrationsRegistrationSummary.
        :param created_by_agency_user_id: The created_by_agency_user_id of this CredasApiModelsRegistrationsRegistrationSummary.
        :param credit_status_check: The credit_status_check of this CredasApiModelsRegistrationsRegistrationSummary.
        :param custom_terms_accepted: The custom_terms_accepted of this CredasApiModelsRegistrationsRegistrationSummary.
        :param custom_terms_accepted_date_time: The custom_terms_accepted_date_time of this CredasApiModelsRegistrationsRegistrationSummary.
        :param custom_terms_accepted_version: The custom_terms_accepted_version of this CredasApiModelsRegistrationsRegistrationSummary.
        :param data_check_result: The data_check_result of this CredasApiModelsRegistrationsRegistrationSummary.
        :param data_check_sources: The data_check_sources of this CredasApiModelsRegistrationsRegistrationSummary.
        :param data_checks_performed: The data_checks_performed of this CredasApiModelsRegistrationsRegistrationSummary.
        :param date_completed: The date_completed of this CredasApiModelsRegistrationsRegistrationSummary.
        :param date_created: The date_created of this CredasApiModelsRegistrationsRegistrationSummary.
        :param email: The email of this CredasApiModelsRegistrationsRegistrationSummary.
        :param forename: The forename of this CredasApiModelsRegistrationsRegistrationSummary.
        :param has_liveness_performed: The has_liveness_performed of this CredasApiModelsRegistrationsRegistrationSummary.
        :param has_selfie: The has_selfie of this CredasApiModelsRegistrationsRegistrationSummary.
        :param id: The id of this CredasApiModelsRegistrationsRegistrationSummary.
        :param id_documents: The id_documents of this CredasApiModelsRegistrationsRegistrationSummary.
        :param id_verification: The id_verification of this CredasApiModelsRegistrationsRegistrationSummary.
        :param is_agent_led: The is_agent_led of this CredasApiModelsRegistrationsRegistrationSummary.
        :param liveness_method: The liveness_method of this CredasApiModelsRegistrationsRegistrationSummary.
        :param liveness_status: The liveness_status of this CredasApiModelsRegistrationsRegistrationSummary.
        :param liveness_verified: The liveness_verified of this CredasApiModelsRegistrationsRegistrationSummary.
        :param middle_name: The middle_name of this CredasApiModelsRegistrationsRegistrationSummary.
        :param personal_details: The personal_details of this CredasApiModelsRegistrationsRegistrationSummary.
        :param phone_number: The phone_number of this CredasApiModelsRegistrationsRegistrationSummary.
        :param proof_of_ownership_check: The proof_of_ownership_check of this CredasApiModelsRegistrationsRegistrationSummary.
        :param reference_id: The reference_id of this CredasApiModelsRegistrationsRegistrationSummary.
        :param reg_code: The reg_code of this CredasApiModelsRegistrationsRegistrationSummary.
        :param reg_type_id: The reg_type_id of this CredasApiModelsRegistrationsRegistrationSummary.
        :param right_to_rent_check: The right_to_rent_check of this CredasApiModelsRegistrationsRegistrationSummary.
        :param right_to_work_check: The right_to_work_check of this CredasApiModelsRegistrationsRegistrationSummary.
        :param right_to_work_documents_provided: The right_to_work_documents_provided of this CredasApiModelsRegistrationsRegistrationSummary.
        :param safe_harbour_verified_date: The safe_harbour_verified_date of this CredasApiModelsRegistrationsRegistrationSummary.
        :param safe_harbour_verified_status: The safe_harbour_verified_status of this CredasApiModelsRegistrationsRegistrationSummary.
        :param status: The status of this CredasApiModelsRegistrationsRegistrationSummary.
        :param surname: The surname of this CredasApiModelsRegistrationsRegistrationSummary.
        """
        self.openapi_types = {
            'comments': List[CredasApiModelsRegistrationsRegistrationComment],
            'created_by_agency_user_email': str,
            'ditf_date': datetime,
            'ditf_status': int,
            'is_expired': bool,
            'verified_in_app_date': datetime,
            'bank_account_checks': List[CredasApiModelsBankAccountsAccountVerificationResponse],
            'created_by_agency_user_id': str,
            'credit_status_check': CredasApiModelsStatusChecksStatusCheck,
            'custom_terms_accepted': bool,
            'custom_terms_accepted_date_time': datetime,
            'custom_terms_accepted_version': int,
            'data_check_result': int,
            'data_check_sources': List[CredasApiModelsRegistrationsDataCheckSourceSummary],
            'data_checks_performed': bool,
            'date_completed': datetime,
            'date_created': datetime,
            'email': str,
            'forename': str,
            'has_liveness_performed': bool,
            'has_selfie': bool,
            'id': str,
            'id_documents': List[CredasApiModelsRegistrationsIdDocumentSummary],
            'id_verification': CredasApiModelsRegistrationsIdVerification,
            'is_agent_led': bool,
            'liveness_method': int,
            'liveness_status': int,
            'liveness_verified': bool,
            'middle_name': str,
            'personal_details': CredasApiModelsRegistrationsPersonalDetails,
            'phone_number': str,
            'proof_of_ownership_check': CredasApiModelsPropertyRegisterPropertyRegisterCheckResponse,
            'reference_id': str,
            'reg_code': str,
            'reg_type_id': str,
            'right_to_rent_check': CredasApiModelsRegistrationsSettlementStatus,
            'right_to_work_check': CredasApiModelsRegistrationsSettlementStatus,
            'right_to_work_documents_provided': int,
            'safe_harbour_verified_date': datetime,
            'safe_harbour_verified_status': int,
            'status': int,
            'surname': str
        }

        self.attribute_map = {
            'comments': 'Comments',
            'created_by_agency_user_email': 'CreatedByAgencyUserEmail',
            'ditf_date': 'DITFDate',
            'ditf_status': 'DITFStatus',
            'is_expired': 'IsExpired',
            'verified_in_app_date': 'VerifiedInAppDate',
            'bank_account_checks': 'bankAccountChecks',
            'created_by_agency_user_id': 'createdByAgencyUserId',
            'credit_status_check': 'creditStatusCheck',
            'custom_terms_accepted': 'customTermsAccepted',
            'custom_terms_accepted_date_time': 'customTermsAcceptedDateTime',
            'custom_terms_accepted_version': 'customTermsAcceptedVersion',
            'data_check_result': 'dataCheckResult',
            'data_check_sources': 'dataCheckSources',
            'data_checks_performed': 'dataChecksPerformed',
            'date_completed': 'dateCompleted',
            'date_created': 'dateCreated',
            'email': 'email',
            'forename': 'forename',
            'has_liveness_performed': 'hasLivenessPerformed',
            'has_selfie': 'hasSelfie',
            'id': 'id',
            'id_documents': 'idDocuments',
            'id_verification': 'idVerification',
            'is_agent_led': 'isAgentLed',
            'liveness_method': 'livenessMethod',
            'liveness_status': 'livenessStatus',
            'liveness_verified': 'livenessVerified',
            'middle_name': 'middleName',
            'personal_details': 'personalDetails',
            'phone_number': 'phoneNumber',
            'proof_of_ownership_check': 'proofOfOwnershipCheck',
            'reference_id': 'referenceId',
            'reg_code': 'regCode',
            'reg_type_id': 'regTypeId',
            'right_to_rent_check': 'rightToRentCheck',
            'right_to_work_check': 'rightToWorkCheck',
            'right_to_work_documents_provided': 'rightToWorkDocumentsProvided',
            'safe_harbour_verified_date': 'safeHarbourVerifiedDate',
            'safe_harbour_verified_status': 'safeHarbourVerifiedStatus',
            'status': 'status',
            'surname': 'surname'
        }

        self._comments = comments
        self._created_by_agency_user_email = created_by_agency_user_email
        self._ditf_date = ditf_date
        self._ditf_status = ditf_status
        self._is_expired = is_expired
        self._verified_in_app_date = verified_in_app_date
        self._bank_account_checks = bank_account_checks
        self._created_by_agency_user_id = created_by_agency_user_id
        self._credit_status_check = credit_status_check
        self._custom_terms_accepted = custom_terms_accepted
        self._custom_terms_accepted_date_time = custom_terms_accepted_date_time
        self._custom_terms_accepted_version = custom_terms_accepted_version
        self._data_check_result = data_check_result
        self._data_check_sources = data_check_sources
        self._data_checks_performed = data_checks_performed
        self._date_completed = date_completed
        self._date_created = date_created
        self._email = email
        self._forename = forename
        self._has_liveness_performed = has_liveness_performed
        self._has_selfie = has_selfie
        self._id = id
        self._id_documents = id_documents
        self._id_verification = id_verification
        self._is_agent_led = is_agent_led
        self._liveness_method = liveness_method
        self._liveness_status = liveness_status
        self._liveness_verified = liveness_verified
        self._middle_name = middle_name
        self._personal_details = personal_details
        self._phone_number = phone_number
        self._proof_of_ownership_check = proof_of_ownership_check
        self._reference_id = reference_id
        self._reg_code = reg_code
        self._reg_type_id = reg_type_id
        self._right_to_rent_check = right_to_rent_check
        self._right_to_work_check = right_to_work_check
        self._right_to_work_documents_provided = right_to_work_documents_provided
        self._safe_harbour_verified_date = safe_harbour_verified_date
        self._safe_harbour_verified_status = safe_harbour_verified_status
        self._status = status
        self._surname = surname

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CredasApiModelsRegistrationsRegistrationSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Credas.Api.Models.Registrations.RegistrationSummary of this CredasApiModelsRegistrationsRegistrationSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def comments(self):
        """Gets the comments of this CredasApiModelsRegistrationsRegistrationSummary.


        :return: The comments of this CredasApiModelsRegistrationsRegistrationSummary.
        :rtype: List[CredasApiModelsRegistrationsRegistrationComment]
        """
        return self._comments

    @comments.setter
    def comments(self, comments):
        """Sets the comments of this CredasApiModelsRegistrationsRegistrationSummary.


        :param comments: The comments of this CredasApiModelsRegistrationsRegistrationSummary.
        :type comments: List[CredasApiModelsRegistrationsRegistrationComment]
        """

        self._comments = comments

    @property
    def created_by_agency_user_email(self):
        """Gets the created_by_agency_user_email of this CredasApiModelsRegistrationsRegistrationSummary.


        :return: The created_by_agency_user_email of this CredasApiModelsRegistrationsRegistrationSummary.
        :rtype: str
        """
        return self._created_by_agency_user_email

    @created_by_agency_user_email.setter
    def created_by_agency_user_email(self, created_by_agency_user_email):
        """Sets the created_by_agency_user_email of this CredasApiModelsRegistrationsRegistrationSummary.


        :param created_by_agency_user_email: The created_by_agency_user_email of this CredasApiModelsRegistrationsRegistrationSummary.
        :type created_by_agency_user_email: str
        """

        self._created_by_agency_user_email = created_by_agency_user_email

    @property
    def ditf_date(self):
        """Gets the ditf_date of this CredasApiModelsRegistrationsRegistrationSummary.


        :return: The ditf_date of this CredasApiModelsRegistrationsRegistrationSummary.
        :rtype: datetime
        """
        return self._ditf_date

    @ditf_date.setter
    def ditf_date(self, ditf_date):
        """Sets the ditf_date of this CredasApiModelsRegistrationsRegistrationSummary.


        :param ditf_date: The ditf_date of this CredasApiModelsRegistrationsRegistrationSummary.
        :type ditf_date: datetime
        """

        self._ditf_date = ditf_date

    @property
    def ditf_status(self):
        """Gets the ditf_status of this CredasApiModelsRegistrationsRegistrationSummary.

        No = 0, Yes = 1, Pending = 2

        :return: The ditf_status of this CredasApiModelsRegistrationsRegistrationSummary.
        :rtype: int
        """
        return self._ditf_status

    @ditf_status.setter
    def ditf_status(self, ditf_status):
        """Sets the ditf_status of this CredasApiModelsRegistrationsRegistrationSummary.

        No = 0, Yes = 1, Pending = 2

        :param ditf_status: The ditf_status of this CredasApiModelsRegistrationsRegistrationSummary.
        :type ditf_status: int
        """
        allowed_values = [0, 1, 2]  # noqa: E501
        if ditf_status not in allowed_values:
            raise ValueError(
                "Invalid value for `ditf_status` ({0}), must be one of {1}"
                .format(ditf_status, allowed_values)
            )

        self._ditf_status = ditf_status

    @property
    def is_expired(self):
        """Gets the is_expired of this CredasApiModelsRegistrationsRegistrationSummary.


        :return: The is_expired of this CredasApiModelsRegistrationsRegistrationSummary.
        :rtype: bool
        """
        return self._is_expired

    @is_expired.setter
    def is_expired(self, is_expired):
        """Sets the is_expired of this CredasApiModelsRegistrationsRegistrationSummary.


        :param is_expired: The is_expired of this CredasApiModelsRegistrationsRegistrationSummary.
        :type is_expired: bool
        """

        self._is_expired = is_expired

    @property
    def verified_in_app_date(self):
        """Gets the verified_in_app_date of this CredasApiModelsRegistrationsRegistrationSummary.


        :return: The verified_in_app_date of this CredasApiModelsRegistrationsRegistrationSummary.
        :rtype: datetime
        """
        return self._verified_in_app_date

    @verified_in_app_date.setter
    def verified_in_app_date(self, verified_in_app_date):
        """Sets the verified_in_app_date of this CredasApiModelsRegistrationsRegistrationSummary.


        :param verified_in_app_date: The verified_in_app_date of this CredasApiModelsRegistrationsRegistrationSummary.
        :type verified_in_app_date: datetime
        """

        self._verified_in_app_date = verified_in_app_date

    @property
    def bank_account_checks(self):
        """Gets the bank_account_checks of this CredasApiModelsRegistrationsRegistrationSummary.


        :return: The bank_account_checks of this CredasApiModelsRegistrationsRegistrationSummary.
        :rtype: List[CredasApiModelsBankAccountsAccountVerificationResponse]
        """
        return self._bank_account_checks

    @bank_account_checks.setter
    def bank_account_checks(self, bank_account_checks):
        """Sets the bank_account_checks of this CredasApiModelsRegistrationsRegistrationSummary.


        :param bank_account_checks: The bank_account_checks of this CredasApiModelsRegistrationsRegistrationSummary.
        :type bank_account_checks: List[CredasApiModelsBankAccountsAccountVerificationResponse]
        """

        self._bank_account_checks = bank_account_checks

    @property
    def created_by_agency_user_id(self):
        """Gets the created_by_agency_user_id of this CredasApiModelsRegistrationsRegistrationSummary.


        :return: The created_by_agency_user_id of this CredasApiModelsRegistrationsRegistrationSummary.
        :rtype: str
        """
        return self._created_by_agency_user_id

    @created_by_agency_user_id.setter
    def created_by_agency_user_id(self, created_by_agency_user_id):
        """Sets the created_by_agency_user_id of this CredasApiModelsRegistrationsRegistrationSummary.


        :param created_by_agency_user_id: The created_by_agency_user_id of this CredasApiModelsRegistrationsRegistrationSummary.
        :type created_by_agency_user_id: str
        """

        self._created_by_agency_user_id = created_by_agency_user_id

    @property
    def credit_status_check(self):
        """Gets the credit_status_check of this CredasApiModelsRegistrationsRegistrationSummary.


        :return: The credit_status_check of this CredasApiModelsRegistrationsRegistrationSummary.
        :rtype: CredasApiModelsStatusChecksStatusCheck
        """
        return self._credit_status_check

    @credit_status_check.setter
    def credit_status_check(self, credit_status_check):
        """Sets the credit_status_check of this CredasApiModelsRegistrationsRegistrationSummary.


        :param credit_status_check: The credit_status_check of this CredasApiModelsRegistrationsRegistrationSummary.
        :type credit_status_check: CredasApiModelsStatusChecksStatusCheck
        """

        self._credit_status_check = credit_status_check

    @property
    def custom_terms_accepted(self):
        """Gets the custom_terms_accepted of this CredasApiModelsRegistrationsRegistrationSummary.


        :return: The custom_terms_accepted of this CredasApiModelsRegistrationsRegistrationSummary.
        :rtype: bool
        """
        return self._custom_terms_accepted

    @custom_terms_accepted.setter
    def custom_terms_accepted(self, custom_terms_accepted):
        """Sets the custom_terms_accepted of this CredasApiModelsRegistrationsRegistrationSummary.


        :param custom_terms_accepted: The custom_terms_accepted of this CredasApiModelsRegistrationsRegistrationSummary.
        :type custom_terms_accepted: bool
        """

        self._custom_terms_accepted = custom_terms_accepted

    @property
    def custom_terms_accepted_date_time(self):
        """Gets the custom_terms_accepted_date_time of this CredasApiModelsRegistrationsRegistrationSummary.


        :return: The custom_terms_accepted_date_time of this CredasApiModelsRegistrationsRegistrationSummary.
        :rtype: datetime
        """
        return self._custom_terms_accepted_date_time

    @custom_terms_accepted_date_time.setter
    def custom_terms_accepted_date_time(self, custom_terms_accepted_date_time):
        """Sets the custom_terms_accepted_date_time of this CredasApiModelsRegistrationsRegistrationSummary.


        :param custom_terms_accepted_date_time: The custom_terms_accepted_date_time of this CredasApiModelsRegistrationsRegistrationSummary.
        :type custom_terms_accepted_date_time: datetime
        """

        self._custom_terms_accepted_date_time = custom_terms_accepted_date_time

    @property
    def custom_terms_accepted_version(self):
        """Gets the custom_terms_accepted_version of this CredasApiModelsRegistrationsRegistrationSummary.


        :return: The custom_terms_accepted_version of this CredasApiModelsRegistrationsRegistrationSummary.
        :rtype: int
        """
        return self._custom_terms_accepted_version

    @custom_terms_accepted_version.setter
    def custom_terms_accepted_version(self, custom_terms_accepted_version):
        """Sets the custom_terms_accepted_version of this CredasApiModelsRegistrationsRegistrationSummary.


        :param custom_terms_accepted_version: The custom_terms_accepted_version of this CredasApiModelsRegistrationsRegistrationSummary.
        :type custom_terms_accepted_version: int
        """

        self._custom_terms_accepted_version = custom_terms_accepted_version

    @property
    def data_check_result(self):
        """Gets the data_check_result of this CredasApiModelsRegistrationsRegistrationSummary.

        Unknown = 0, Pass = 1, Refer = 2, Fail = 3

        :return: The data_check_result of this CredasApiModelsRegistrationsRegistrationSummary.
        :rtype: int
        """
        return self._data_check_result

    @data_check_result.setter
    def data_check_result(self, data_check_result):
        """Sets the data_check_result of this CredasApiModelsRegistrationsRegistrationSummary.

        Unknown = 0, Pass = 1, Refer = 2, Fail = 3

        :param data_check_result: The data_check_result of this CredasApiModelsRegistrationsRegistrationSummary.
        :type data_check_result: int
        """
        allowed_values = [0, 1, 2, 3]  # noqa: E501
        if data_check_result not in allowed_values:
            raise ValueError(
                "Invalid value for `data_check_result` ({0}), must be one of {1}"
                .format(data_check_result, allowed_values)
            )

        self._data_check_result = data_check_result

    @property
    def data_check_sources(self):
        """Gets the data_check_sources of this CredasApiModelsRegistrationsRegistrationSummary.


        :return: The data_check_sources of this CredasApiModelsRegistrationsRegistrationSummary.
        :rtype: List[CredasApiModelsRegistrationsDataCheckSourceSummary]
        """
        return self._data_check_sources

    @data_check_sources.setter
    def data_check_sources(self, data_check_sources):
        """Sets the data_check_sources of this CredasApiModelsRegistrationsRegistrationSummary.


        :param data_check_sources: The data_check_sources of this CredasApiModelsRegistrationsRegistrationSummary.
        :type data_check_sources: List[CredasApiModelsRegistrationsDataCheckSourceSummary]
        """

        self._data_check_sources = data_check_sources

    @property
    def data_checks_performed(self):
        """Gets the data_checks_performed of this CredasApiModelsRegistrationsRegistrationSummary.


        :return: The data_checks_performed of this CredasApiModelsRegistrationsRegistrationSummary.
        :rtype: bool
        """
        return self._data_checks_performed

    @data_checks_performed.setter
    def data_checks_performed(self, data_checks_performed):
        """Sets the data_checks_performed of this CredasApiModelsRegistrationsRegistrationSummary.


        :param data_checks_performed: The data_checks_performed of this CredasApiModelsRegistrationsRegistrationSummary.
        :type data_checks_performed: bool
        """
        if data_checks_performed is None:
            raise ValueError("Invalid value for `data_checks_performed`, must not be `None`")

        self._data_checks_performed = data_checks_performed

    @property
    def date_completed(self):
        """Gets the date_completed of this CredasApiModelsRegistrationsRegistrationSummary.


        :return: The date_completed of this CredasApiModelsRegistrationsRegistrationSummary.
        :rtype: datetime
        """
        return self._date_completed

    @date_completed.setter
    def date_completed(self, date_completed):
        """Sets the date_completed of this CredasApiModelsRegistrationsRegistrationSummary.


        :param date_completed: The date_completed of this CredasApiModelsRegistrationsRegistrationSummary.
        :type date_completed: datetime
        """

        self._date_completed = date_completed

    @property
    def date_created(self):
        """Gets the date_created of this CredasApiModelsRegistrationsRegistrationSummary.


        :return: The date_created of this CredasApiModelsRegistrationsRegistrationSummary.
        :rtype: datetime
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this CredasApiModelsRegistrationsRegistrationSummary.


        :param date_created: The date_created of this CredasApiModelsRegistrationsRegistrationSummary.
        :type date_created: datetime
        """
        if date_created is None:
            raise ValueError("Invalid value for `date_created`, must not be `None`")

        self._date_created = date_created

    @property
    def email(self):
        """Gets the email of this CredasApiModelsRegistrationsRegistrationSummary.


        :return: The email of this CredasApiModelsRegistrationsRegistrationSummary.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this CredasApiModelsRegistrationsRegistrationSummary.


        :param email: The email of this CredasApiModelsRegistrationsRegistrationSummary.
        :type email: str
        """

        self._email = email

    @property
    def forename(self):
        """Gets the forename of this CredasApiModelsRegistrationsRegistrationSummary.


        :return: The forename of this CredasApiModelsRegistrationsRegistrationSummary.
        :rtype: str
        """
        return self._forename

    @forename.setter
    def forename(self, forename):
        """Sets the forename of this CredasApiModelsRegistrationsRegistrationSummary.


        :param forename: The forename of this CredasApiModelsRegistrationsRegistrationSummary.
        :type forename: str
        """
        if forename is None:
            raise ValueError("Invalid value for `forename`, must not be `None`")

        self._forename = forename

    @property
    def has_liveness_performed(self):
        """Gets the has_liveness_performed of this CredasApiModelsRegistrationsRegistrationSummary.


        :return: The has_liveness_performed of this CredasApiModelsRegistrationsRegistrationSummary.
        :rtype: bool
        """
        return self._has_liveness_performed

    @has_liveness_performed.setter
    def has_liveness_performed(self, has_liveness_performed):
        """Sets the has_liveness_performed of this CredasApiModelsRegistrationsRegistrationSummary.


        :param has_liveness_performed: The has_liveness_performed of this CredasApiModelsRegistrationsRegistrationSummary.
        :type has_liveness_performed: bool
        """

        self._has_liveness_performed = has_liveness_performed

    @property
    def has_selfie(self):
        """Gets the has_selfie of this CredasApiModelsRegistrationsRegistrationSummary.


        :return: The has_selfie of this CredasApiModelsRegistrationsRegistrationSummary.
        :rtype: bool
        """
        return self._has_selfie

    @has_selfie.setter
    def has_selfie(self, has_selfie):
        """Sets the has_selfie of this CredasApiModelsRegistrationsRegistrationSummary.


        :param has_selfie: The has_selfie of this CredasApiModelsRegistrationsRegistrationSummary.
        :type has_selfie: bool
        """

        self._has_selfie = has_selfie

    @property
    def id(self):
        """Gets the id of this CredasApiModelsRegistrationsRegistrationSummary.


        :return: The id of this CredasApiModelsRegistrationsRegistrationSummary.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this CredasApiModelsRegistrationsRegistrationSummary.


        :param id: The id of this CredasApiModelsRegistrationsRegistrationSummary.
        :type id: str
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")

        self._id = id

    @property
    def id_documents(self):
        """Gets the id_documents of this CredasApiModelsRegistrationsRegistrationSummary.


        :return: The id_documents of this CredasApiModelsRegistrationsRegistrationSummary.
        :rtype: List[CredasApiModelsRegistrationsIdDocumentSummary]
        """
        return self._id_documents

    @id_documents.setter
    def id_documents(self, id_documents):
        """Sets the id_documents of this CredasApiModelsRegistrationsRegistrationSummary.


        :param id_documents: The id_documents of this CredasApiModelsRegistrationsRegistrationSummary.
        :type id_documents: List[CredasApiModelsRegistrationsIdDocumentSummary]
        """

        self._id_documents = id_documents

    @property
    def id_verification(self):
        """Gets the id_verification of this CredasApiModelsRegistrationsRegistrationSummary.


        :return: The id_verification of this CredasApiModelsRegistrationsRegistrationSummary.
        :rtype: CredasApiModelsRegistrationsIdVerification
        """
        return self._id_verification

    @id_verification.setter
    def id_verification(self, id_verification):
        """Sets the id_verification of this CredasApiModelsRegistrationsRegistrationSummary.


        :param id_verification: The id_verification of this CredasApiModelsRegistrationsRegistrationSummary.
        :type id_verification: CredasApiModelsRegistrationsIdVerification
        """

        self._id_verification = id_verification

    @property
    def is_agent_led(self):
        """Gets the is_agent_led of this CredasApiModelsRegistrationsRegistrationSummary.


        :return: The is_agent_led of this CredasApiModelsRegistrationsRegistrationSummary.
        :rtype: bool
        """
        return self._is_agent_led

    @is_agent_led.setter
    def is_agent_led(self, is_agent_led):
        """Sets the is_agent_led of this CredasApiModelsRegistrationsRegistrationSummary.


        :param is_agent_led: The is_agent_led of this CredasApiModelsRegistrationsRegistrationSummary.
        :type is_agent_led: bool
        """

        self._is_agent_led = is_agent_led

    @property
    def liveness_method(self):
        """Gets the liveness_method of this CredasApiModelsRegistrationsRegistrationSummary.

        NotApplicable = 0, UniqueActionProcess = 1, Passive = 2

        :return: The liveness_method of this CredasApiModelsRegistrationsRegistrationSummary.
        :rtype: int
        """
        return self._liveness_method

    @liveness_method.setter
    def liveness_method(self, liveness_method):
        """Sets the liveness_method of this CredasApiModelsRegistrationsRegistrationSummary.

        NotApplicable = 0, UniqueActionProcess = 1, Passive = 2

        :param liveness_method: The liveness_method of this CredasApiModelsRegistrationsRegistrationSummary.
        :type liveness_method: int
        """
        allowed_values = [0, 1, 2]  # noqa: E501
        if liveness_method not in allowed_values:
            raise ValueError(
                "Invalid value for `liveness_method` ({0}), must be one of {1}"
                .format(liveness_method, allowed_values)
            )

        self._liveness_method = liveness_method

    @property
    def liveness_status(self):
        """Gets the liveness_status of this CredasApiModelsRegistrationsRegistrationSummary.

        NotSubmitted = 0, Verified = 1, Unverified = 2, Unknown = 3, RetakeRequested = 4

        :return: The liveness_status of this CredasApiModelsRegistrationsRegistrationSummary.
        :rtype: int
        """
        return self._liveness_status

    @liveness_status.setter
    def liveness_status(self, liveness_status):
        """Sets the liveness_status of this CredasApiModelsRegistrationsRegistrationSummary.

        NotSubmitted = 0, Verified = 1, Unverified = 2, Unknown = 3, RetakeRequested = 4

        :param liveness_status: The liveness_status of this CredasApiModelsRegistrationsRegistrationSummary.
        :type liveness_status: int
        """
        allowed_values = [0, 1, 2, 3, 4]  # noqa: E501
        if liveness_status not in allowed_values:
            raise ValueError(
                "Invalid value for `liveness_status` ({0}), must be one of {1}"
                .format(liveness_status, allowed_values)
            )

        self._liveness_status = liveness_status

    @property
    def liveness_verified(self):
        """Gets the liveness_verified of this CredasApiModelsRegistrationsRegistrationSummary.


        :return: The liveness_verified of this CredasApiModelsRegistrationsRegistrationSummary.
        :rtype: bool
        """
        return self._liveness_verified

    @liveness_verified.setter
    def liveness_verified(self, liveness_verified):
        """Sets the liveness_verified of this CredasApiModelsRegistrationsRegistrationSummary.


        :param liveness_verified: The liveness_verified of this CredasApiModelsRegistrationsRegistrationSummary.
        :type liveness_verified: bool
        """
        if liveness_verified is None:
            raise ValueError("Invalid value for `liveness_verified`, must not be `None`")

        self._liveness_verified = liveness_verified

    @property
    def middle_name(self):
        """Gets the middle_name of this CredasApiModelsRegistrationsRegistrationSummary.


        :return: The middle_name of this CredasApiModelsRegistrationsRegistrationSummary.
        :rtype: str
        """
        return self._middle_name

    @middle_name.setter
    def middle_name(self, middle_name):
        """Sets the middle_name of this CredasApiModelsRegistrationsRegistrationSummary.


        :param middle_name: The middle_name of this CredasApiModelsRegistrationsRegistrationSummary.
        :type middle_name: str
        """

        self._middle_name = middle_name

    @property
    def personal_details(self):
        """Gets the personal_details of this CredasApiModelsRegistrationsRegistrationSummary.


        :return: The personal_details of this CredasApiModelsRegistrationsRegistrationSummary.
        :rtype: CredasApiModelsRegistrationsPersonalDetails
        """
        return self._personal_details

    @personal_details.setter
    def personal_details(self, personal_details):
        """Sets the personal_details of this CredasApiModelsRegistrationsRegistrationSummary.


        :param personal_details: The personal_details of this CredasApiModelsRegistrationsRegistrationSummary.
        :type personal_details: CredasApiModelsRegistrationsPersonalDetails
        """

        self._personal_details = personal_details

    @property
    def phone_number(self):
        """Gets the phone_number of this CredasApiModelsRegistrationsRegistrationSummary.


        :return: The phone_number of this CredasApiModelsRegistrationsRegistrationSummary.
        :rtype: str
        """
        return self._phone_number

    @phone_number.setter
    def phone_number(self, phone_number):
        """Sets the phone_number of this CredasApiModelsRegistrationsRegistrationSummary.


        :param phone_number: The phone_number of this CredasApiModelsRegistrationsRegistrationSummary.
        :type phone_number: str
        """

        self._phone_number = phone_number

    @property
    def proof_of_ownership_check(self):
        """Gets the proof_of_ownership_check of this CredasApiModelsRegistrationsRegistrationSummary.


        :return: The proof_of_ownership_check of this CredasApiModelsRegistrationsRegistrationSummary.
        :rtype: CredasApiModelsPropertyRegisterPropertyRegisterCheckResponse
        """
        return self._proof_of_ownership_check

    @proof_of_ownership_check.setter
    def proof_of_ownership_check(self, proof_of_ownership_check):
        """Sets the proof_of_ownership_check of this CredasApiModelsRegistrationsRegistrationSummary.


        :param proof_of_ownership_check: The proof_of_ownership_check of this CredasApiModelsRegistrationsRegistrationSummary.
        :type proof_of_ownership_check: CredasApiModelsPropertyRegisterPropertyRegisterCheckResponse
        """

        self._proof_of_ownership_check = proof_of_ownership_check

    @property
    def reference_id(self):
        """Gets the reference_id of this CredasApiModelsRegistrationsRegistrationSummary.


        :return: The reference_id of this CredasApiModelsRegistrationsRegistrationSummary.
        :rtype: str
        """
        return self._reference_id

    @reference_id.setter
    def reference_id(self, reference_id):
        """Sets the reference_id of this CredasApiModelsRegistrationsRegistrationSummary.


        :param reference_id: The reference_id of this CredasApiModelsRegistrationsRegistrationSummary.
        :type reference_id: str
        """
        if reference_id is not None and len(reference_id) > 255:
            raise ValueError("Invalid value for `reference_id`, length must be less than or equal to `255`")
        if reference_id is not None and len(reference_id) < 0:
            raise ValueError("Invalid value for `reference_id`, length must be greater than or equal to `0`")

        self._reference_id = reference_id

    @property
    def reg_code(self):
        """Gets the reg_code of this CredasApiModelsRegistrationsRegistrationSummary.


        :return: The reg_code of this CredasApiModelsRegistrationsRegistrationSummary.
        :rtype: str
        """
        return self._reg_code

    @reg_code.setter
    def reg_code(self, reg_code):
        """Sets the reg_code of this CredasApiModelsRegistrationsRegistrationSummary.


        :param reg_code: The reg_code of this CredasApiModelsRegistrationsRegistrationSummary.
        :type reg_code: str
        """
        if reg_code is None:
            raise ValueError("Invalid value for `reg_code`, must not be `None`")

        self._reg_code = reg_code

    @property
    def reg_type_id(self):
        """Gets the reg_type_id of this CredasApiModelsRegistrationsRegistrationSummary.


        :return: The reg_type_id of this CredasApiModelsRegistrationsRegistrationSummary.
        :rtype: str
        """
        return self._reg_type_id

    @reg_type_id.setter
    def reg_type_id(self, reg_type_id):
        """Sets the reg_type_id of this CredasApiModelsRegistrationsRegistrationSummary.


        :param reg_type_id: The reg_type_id of this CredasApiModelsRegistrationsRegistrationSummary.
        :type reg_type_id: str
        """
        if reg_type_id is None:
            raise ValueError("Invalid value for `reg_type_id`, must not be `None`")

        self._reg_type_id = reg_type_id

    @property
    def right_to_rent_check(self):
        """Gets the right_to_rent_check of this CredasApiModelsRegistrationsRegistrationSummary.


        :return: The right_to_rent_check of this CredasApiModelsRegistrationsRegistrationSummary.
        :rtype: CredasApiModelsRegistrationsSettlementStatus
        """
        return self._right_to_rent_check

    @right_to_rent_check.setter
    def right_to_rent_check(self, right_to_rent_check):
        """Sets the right_to_rent_check of this CredasApiModelsRegistrationsRegistrationSummary.


        :param right_to_rent_check: The right_to_rent_check of this CredasApiModelsRegistrationsRegistrationSummary.
        :type right_to_rent_check: CredasApiModelsRegistrationsSettlementStatus
        """

        self._right_to_rent_check = right_to_rent_check

    @property
    def right_to_work_check(self):
        """Gets the right_to_work_check of this CredasApiModelsRegistrationsRegistrationSummary.


        :return: The right_to_work_check of this CredasApiModelsRegistrationsRegistrationSummary.
        :rtype: CredasApiModelsRegistrationsSettlementStatus
        """
        return self._right_to_work_check

    @right_to_work_check.setter
    def right_to_work_check(self, right_to_work_check):
        """Sets the right_to_work_check of this CredasApiModelsRegistrationsRegistrationSummary.


        :param right_to_work_check: The right_to_work_check of this CredasApiModelsRegistrationsRegistrationSummary.
        :type right_to_work_check: CredasApiModelsRegistrationsSettlementStatus
        """

        self._right_to_work_check = right_to_work_check

    @property
    def right_to_work_documents_provided(self):
        """Gets the right_to_work_documents_provided of this CredasApiModelsRegistrationsRegistrationSummary.

        This property is no longer supported. Right to work is now available as an individual check.<br />  values=> Pending = 0, Pass = 1, Fail = 2

        :return: The right_to_work_documents_provided of this CredasApiModelsRegistrationsRegistrationSummary.
        :rtype: int
        """
        return self._right_to_work_documents_provided

    @right_to_work_documents_provided.setter
    def right_to_work_documents_provided(self, right_to_work_documents_provided):
        """Sets the right_to_work_documents_provided of this CredasApiModelsRegistrationsRegistrationSummary.

        This property is no longer supported. Right to work is now available as an individual check.<br />  values=> Pending = 0, Pass = 1, Fail = 2

        :param right_to_work_documents_provided: The right_to_work_documents_provided of this CredasApiModelsRegistrationsRegistrationSummary.
        :type right_to_work_documents_provided: int
        """
        allowed_values = [0, 1, 2]  # noqa: E501
        if right_to_work_documents_provided not in allowed_values:
            raise ValueError(
                "Invalid value for `right_to_work_documents_provided` ({0}), must be one of {1}"
                .format(right_to_work_documents_provided, allowed_values)
            )

        self._right_to_work_documents_provided = right_to_work_documents_provided

    @property
    def safe_harbour_verified_date(self):
        """Gets the safe_harbour_verified_date of this CredasApiModelsRegistrationsRegistrationSummary.


        :return: The safe_harbour_verified_date of this CredasApiModelsRegistrationsRegistrationSummary.
        :rtype: datetime
        """
        return self._safe_harbour_verified_date

    @safe_harbour_verified_date.setter
    def safe_harbour_verified_date(self, safe_harbour_verified_date):
        """Sets the safe_harbour_verified_date of this CredasApiModelsRegistrationsRegistrationSummary.


        :param safe_harbour_verified_date: The safe_harbour_verified_date of this CredasApiModelsRegistrationsRegistrationSummary.
        :type safe_harbour_verified_date: datetime
        """

        self._safe_harbour_verified_date = safe_harbour_verified_date

    @property
    def safe_harbour_verified_status(self):
        """Gets the safe_harbour_verified_status of this CredasApiModelsRegistrationsRegistrationSummary.

        No = 0, Yes = 1, UnderReview = 2

        :return: The safe_harbour_verified_status of this CredasApiModelsRegistrationsRegistrationSummary.
        :rtype: int
        """
        return self._safe_harbour_verified_status

    @safe_harbour_verified_status.setter
    def safe_harbour_verified_status(self, safe_harbour_verified_status):
        """Sets the safe_harbour_verified_status of this CredasApiModelsRegistrationsRegistrationSummary.

        No = 0, Yes = 1, UnderReview = 2

        :param safe_harbour_verified_status: The safe_harbour_verified_status of this CredasApiModelsRegistrationsRegistrationSummary.
        :type safe_harbour_verified_status: int
        """
        allowed_values = [0, 1, 2]  # noqa: E501
        if safe_harbour_verified_status not in allowed_values:
            raise ValueError(
                "Invalid value for `safe_harbour_verified_status` ({0}), must be one of {1}"
                .format(safe_harbour_verified_status, allowed_values)
            )

        self._safe_harbour_verified_status = safe_harbour_verified_status

    @property
    def status(self):
        """Gets the status of this CredasApiModelsRegistrationsRegistrationSummary.

        Unknown = 0, Submitted = 1, Approved = 2, Rejected = 3, Exported = 4, Invited = 6

        :return: The status of this CredasApiModelsRegistrationsRegistrationSummary.
        :rtype: int
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this CredasApiModelsRegistrationsRegistrationSummary.

        Unknown = 0, Submitted = 1, Approved = 2, Rejected = 3, Exported = 4, Invited = 6

        :param status: The status of this CredasApiModelsRegistrationsRegistrationSummary.
        :type status: int
        """
        allowed_values = [0, 1, 2, 3, 4, 6]  # noqa: E501
        if status not in allowed_values:
            raise ValueError(
                "Invalid value for `status` ({0}), must be one of {1}"
                .format(status, allowed_values)
            )

        self._status = status

    @property
    def surname(self):
        """Gets the surname of this CredasApiModelsRegistrationsRegistrationSummary.


        :return: The surname of this CredasApiModelsRegistrationsRegistrationSummary.
        :rtype: str
        """
        return self._surname

    @surname.setter
    def surname(self, surname):
        """Sets the surname of this CredasApiModelsRegistrationsRegistrationSummary.


        :param surname: The surname of this CredasApiModelsRegistrationsRegistrationSummary.
        :type surname: str
        """
        if surname is None:
            raise ValueError("Invalid value for `surname`, must not be `None`")

        self._surname = surname
