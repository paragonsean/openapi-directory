# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.credas_api_models_registrations_registration_summary import CredasApiModelsRegistrationsRegistrationSummary
from openapi_server import util


class CredasApiModelsRegistrationsPagedRegistrationSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, registration_summaries: List[CredasApiModelsRegistrationsRegistrationSummary]=None, total_count: int=None):
        """CredasApiModelsRegistrationsPagedRegistrationSummary - a model defined in OpenAPI

        :param registration_summaries: The registration_summaries of this CredasApiModelsRegistrationsPagedRegistrationSummary.
        :param total_count: The total_count of this CredasApiModelsRegistrationsPagedRegistrationSummary.
        """
        self.openapi_types = {
            'registration_summaries': List[CredasApiModelsRegistrationsRegistrationSummary],
            'total_count': int
        }

        self.attribute_map = {
            'registration_summaries': 'registrationSummaries',
            'total_count': 'totalCount'
        }

        self._registration_summaries = registration_summaries
        self._total_count = total_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CredasApiModelsRegistrationsPagedRegistrationSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Credas.Api.Models.Registrations.PagedRegistrationSummary of this CredasApiModelsRegistrationsPagedRegistrationSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def registration_summaries(self):
        """Gets the registration_summaries of this CredasApiModelsRegistrationsPagedRegistrationSummary.


        :return: The registration_summaries of this CredasApiModelsRegistrationsPagedRegistrationSummary.
        :rtype: List[CredasApiModelsRegistrationsRegistrationSummary]
        """
        return self._registration_summaries

    @registration_summaries.setter
    def registration_summaries(self, registration_summaries):
        """Sets the registration_summaries of this CredasApiModelsRegistrationsPagedRegistrationSummary.


        :param registration_summaries: The registration_summaries of this CredasApiModelsRegistrationsPagedRegistrationSummary.
        :type registration_summaries: List[CredasApiModelsRegistrationsRegistrationSummary]
        """

        self._registration_summaries = registration_summaries

    @property
    def total_count(self):
        """Gets the total_count of this CredasApiModelsRegistrationsPagedRegistrationSummary.


        :return: The total_count of this CredasApiModelsRegistrationsPagedRegistrationSummary.
        :rtype: int
        """
        return self._total_count

    @total_count.setter
    def total_count(self, total_count):
        """Sets the total_count of this CredasApiModelsRegistrationsPagedRegistrationSummary.


        :param total_count: The total_count of this CredasApiModelsRegistrationsPagedRegistrationSummary.
        :type total_count: int
        """

        self._total_count = total_count
