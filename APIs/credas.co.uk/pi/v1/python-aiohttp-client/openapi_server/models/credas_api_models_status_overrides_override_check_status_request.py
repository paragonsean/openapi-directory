# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CredasApiModelsStatusOverridesOverrideCheckStatusRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, check_type: int=None, comment: str=None, status: int=None):
        """CredasApiModelsStatusOverridesOverrideCheckStatusRequest - a model defined in OpenAPI

        :param check_type: The check_type of this CredasApiModelsStatusOverridesOverrideCheckStatusRequest.
        :param comment: The comment of this CredasApiModelsStatusOverridesOverrideCheckStatusRequest.
        :param status: The status of this CredasApiModelsStatusOverridesOverrideCheckStatusRequest.
        """
        self.openapi_types = {
            'check_type': int,
            'comment': str,
            'status': int
        }

        self.attribute_map = {
            'check_type': 'checkType',
            'comment': 'comment',
            'status': 'status'
        }

        self._check_type = check_type
        self._comment = comment
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CredasApiModelsStatusOverridesOverrideCheckStatusRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Credas.Api.Models.StatusOverrides.OverrideCheckStatusRequest of this CredasApiModelsStatusOverridesOverrideCheckStatusRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def check_type(self):
        """Gets the check_type of this CredasApiModelsStatusOverridesOverrideCheckStatusRequest.

        IdDocuments = 1, StandardChecks = 2, InternationalSanctionsAndPep = 3, CreditStatusCheck = 4, BankAccountCheck = 5, ProofOfOwnership = 6, RightToWork = 7, RightToRent = 8

        :return: The check_type of this CredasApiModelsStatusOverridesOverrideCheckStatusRequest.
        :rtype: int
        """
        return self._check_type

    @check_type.setter
    def check_type(self, check_type):
        """Sets the check_type of this CredasApiModelsStatusOverridesOverrideCheckStatusRequest.

        IdDocuments = 1, StandardChecks = 2, InternationalSanctionsAndPep = 3, CreditStatusCheck = 4, BankAccountCheck = 5, ProofOfOwnership = 6, RightToWork = 7, RightToRent = 8

        :param check_type: The check_type of this CredasApiModelsStatusOverridesOverrideCheckStatusRequest.
        :type check_type: int
        """
        allowed_values = [0, 1, 2, 3, 4, 5, 6, 7, 8]  # noqa: E501
        if check_type not in allowed_values:
            raise ValueError(
                "Invalid value for `check_type` ({0}), must be one of {1}"
                .format(check_type, allowed_values)
            )

        self._check_type = check_type

    @property
    def comment(self):
        """Gets the comment of this CredasApiModelsStatusOverridesOverrideCheckStatusRequest.


        :return: The comment of this CredasApiModelsStatusOverridesOverrideCheckStatusRequest.
        :rtype: str
        """
        return self._comment

    @comment.setter
    def comment(self, comment):
        """Sets the comment of this CredasApiModelsStatusOverridesOverrideCheckStatusRequest.


        :param comment: The comment of this CredasApiModelsStatusOverridesOverrideCheckStatusRequest.
        :type comment: str
        """
        if comment is None:
            raise ValueError("Invalid value for `comment`, must not be `None`")

        self._comment = comment

    @property
    def status(self):
        """Gets the status of this CredasApiModelsStatusOverridesOverrideCheckStatusRequest.

        Unknown = 0, Pass = 1, Refer = 2, Fail = 3

        :return: The status of this CredasApiModelsStatusOverridesOverrideCheckStatusRequest.
        :rtype: int
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this CredasApiModelsStatusOverridesOverrideCheckStatusRequest.

        Unknown = 0, Pass = 1, Refer = 2, Fail = 3

        :param status: The status of this CredasApiModelsStatusOverridesOverrideCheckStatusRequest.
        :type status: int
        """
        allowed_values = [0, 1, 2, 3]  # noqa: E501
        if status not in allowed_values:
            raise ValueError(
                "Invalid value for `status` ({0}), must be one of {1}"
                .format(status, allowed_values)
            )

        self._status = status
