# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CredasApiModelsPropertyRegisterPropertyRegisterCheckResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, check_status: int=None, has_been_overridden: bool=None, match_result: int=None, match_result_text: str=None, property_ownership: int=None, property_ownership_text: str=None, title_number: str=None):
        """CredasApiModelsPropertyRegisterPropertyRegisterCheckResponse - a model defined in OpenAPI

        :param check_status: The check_status of this CredasApiModelsPropertyRegisterPropertyRegisterCheckResponse.
        :param has_been_overridden: The has_been_overridden of this CredasApiModelsPropertyRegisterPropertyRegisterCheckResponse.
        :param match_result: The match_result of this CredasApiModelsPropertyRegisterPropertyRegisterCheckResponse.
        :param match_result_text: The match_result_text of this CredasApiModelsPropertyRegisterPropertyRegisterCheckResponse.
        :param property_ownership: The property_ownership of this CredasApiModelsPropertyRegisterPropertyRegisterCheckResponse.
        :param property_ownership_text: The property_ownership_text of this CredasApiModelsPropertyRegisterPropertyRegisterCheckResponse.
        :param title_number: The title_number of this CredasApiModelsPropertyRegisterPropertyRegisterCheckResponse.
        """
        self.openapi_types = {
            'check_status': int,
            'has_been_overridden': bool,
            'match_result': int,
            'match_result_text': str,
            'property_ownership': int,
            'property_ownership_text': str,
            'title_number': str
        }

        self.attribute_map = {
            'check_status': 'checkStatus',
            'has_been_overridden': 'hasBeenOverridden',
            'match_result': 'matchResult',
            'match_result_text': 'matchResultText',
            'property_ownership': 'propertyOwnership',
            'property_ownership_text': 'propertyOwnershipText',
            'title_number': 'titleNumber'
        }

        self._check_status = check_status
        self._has_been_overridden = has_been_overridden
        self._match_result = match_result
        self._match_result_text = match_result_text
        self._property_ownership = property_ownership
        self._property_ownership_text = property_ownership_text
        self._title_number = title_number

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CredasApiModelsPropertyRegisterPropertyRegisterCheckResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Credas.Api.Models.PropertyRegister.PropertyRegisterCheckResponse of this CredasApiModelsPropertyRegisterPropertyRegisterCheckResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def check_status(self):
        """Gets the check_status of this CredasApiModelsPropertyRegisterPropertyRegisterCheckResponse.

        Unknown = 0, Pass = 1, Refer = 2, Fail = 3

        :return: The check_status of this CredasApiModelsPropertyRegisterPropertyRegisterCheckResponse.
        :rtype: int
        """
        return self._check_status

    @check_status.setter
    def check_status(self, check_status):
        """Sets the check_status of this CredasApiModelsPropertyRegisterPropertyRegisterCheckResponse.

        Unknown = 0, Pass = 1, Refer = 2, Fail = 3

        :param check_status: The check_status of this CredasApiModelsPropertyRegisterPropertyRegisterCheckResponse.
        :type check_status: int
        """
        allowed_values = [0, 1, 2, 3]  # noqa: E501
        if check_status not in allowed_values:
            raise ValueError(
                "Invalid value for `check_status` ({0}), must be one of {1}"
                .format(check_status, allowed_values)
            )

        self._check_status = check_status

    @property
    def has_been_overridden(self):
        """Gets the has_been_overridden of this CredasApiModelsPropertyRegisterPropertyRegisterCheckResponse.


        :return: The has_been_overridden of this CredasApiModelsPropertyRegisterPropertyRegisterCheckResponse.
        :rtype: bool
        """
        return self._has_been_overridden

    @has_been_overridden.setter
    def has_been_overridden(self, has_been_overridden):
        """Sets the has_been_overridden of this CredasApiModelsPropertyRegisterPropertyRegisterCheckResponse.


        :param has_been_overridden: The has_been_overridden of this CredasApiModelsPropertyRegisterPropertyRegisterCheckResponse.
        :type has_been_overridden: bool
        """

        self._has_been_overridden = has_been_overridden

    @property
    def match_result(self):
        """Gets the match_result of this CredasApiModelsPropertyRegisterPropertyRegisterCheckResponse.

        Unknown = 0, FullNameMatch = 1, SurnameMatch = 2, NoNameMatch = 3, NoAddressMatch = 4, TitleNotRegistered = 5, Unavailable = 6, OutOfHours = 7

        :return: The match_result of this CredasApiModelsPropertyRegisterPropertyRegisterCheckResponse.
        :rtype: int
        """
        return self._match_result

    @match_result.setter
    def match_result(self, match_result):
        """Sets the match_result of this CredasApiModelsPropertyRegisterPropertyRegisterCheckResponse.

        Unknown = 0, FullNameMatch = 1, SurnameMatch = 2, NoNameMatch = 3, NoAddressMatch = 4, TitleNotRegistered = 5, Unavailable = 6, OutOfHours = 7

        :param match_result: The match_result of this CredasApiModelsPropertyRegisterPropertyRegisterCheckResponse.
        :type match_result: int
        """
        allowed_values = [0, 1, 2, 3, 4, 5, 6, 7]  # noqa: E501
        if match_result not in allowed_values:
            raise ValueError(
                "Invalid value for `match_result` ({0}), must be one of {1}"
                .format(match_result, allowed_values)
            )

        self._match_result = match_result

    @property
    def match_result_text(self):
        """Gets the match_result_text of this CredasApiModelsPropertyRegisterPropertyRegisterCheckResponse.


        :return: The match_result_text of this CredasApiModelsPropertyRegisterPropertyRegisterCheckResponse.
        :rtype: str
        """
        return self._match_result_text

    @match_result_text.setter
    def match_result_text(self, match_result_text):
        """Sets the match_result_text of this CredasApiModelsPropertyRegisterPropertyRegisterCheckResponse.


        :param match_result_text: The match_result_text of this CredasApiModelsPropertyRegisterPropertyRegisterCheckResponse.
        :type match_result_text: str
        """

        self._match_result_text = match_result_text

    @property
    def property_ownership(self):
        """Gets the property_ownership of this CredasApiModelsPropertyRegisterPropertyRegisterCheckResponse.

        Unknown = 0, SoleOwnership = 1, JointOwnership = 2

        :return: The property_ownership of this CredasApiModelsPropertyRegisterPropertyRegisterCheckResponse.
        :rtype: int
        """
        return self._property_ownership

    @property_ownership.setter
    def property_ownership(self, property_ownership):
        """Sets the property_ownership of this CredasApiModelsPropertyRegisterPropertyRegisterCheckResponse.

        Unknown = 0, SoleOwnership = 1, JointOwnership = 2

        :param property_ownership: The property_ownership of this CredasApiModelsPropertyRegisterPropertyRegisterCheckResponse.
        :type property_ownership: int
        """
        allowed_values = [0, 1, 2]  # noqa: E501
        if property_ownership not in allowed_values:
            raise ValueError(
                "Invalid value for `property_ownership` ({0}), must be one of {1}"
                .format(property_ownership, allowed_values)
            )

        self._property_ownership = property_ownership

    @property
    def property_ownership_text(self):
        """Gets the property_ownership_text of this CredasApiModelsPropertyRegisterPropertyRegisterCheckResponse.


        :return: The property_ownership_text of this CredasApiModelsPropertyRegisterPropertyRegisterCheckResponse.
        :rtype: str
        """
        return self._property_ownership_text

    @property_ownership_text.setter
    def property_ownership_text(self, property_ownership_text):
        """Sets the property_ownership_text of this CredasApiModelsPropertyRegisterPropertyRegisterCheckResponse.


        :param property_ownership_text: The property_ownership_text of this CredasApiModelsPropertyRegisterPropertyRegisterCheckResponse.
        :type property_ownership_text: str
        """

        self._property_ownership_text = property_ownership_text

    @property
    def title_number(self):
        """Gets the title_number of this CredasApiModelsPropertyRegisterPropertyRegisterCheckResponse.


        :return: The title_number of this CredasApiModelsPropertyRegisterPropertyRegisterCheckResponse.
        :rtype: str
        """
        return self._title_number

    @title_number.setter
    def title_number(self, title_number):
        """Sets the title_number of this CredasApiModelsPropertyRegisterPropertyRegisterCheckResponse.


        :param title_number: The title_number of this CredasApiModelsPropertyRegisterPropertyRegisterCheckResponse.
        :type title_number: str
        """

        self._title_number = title_number
