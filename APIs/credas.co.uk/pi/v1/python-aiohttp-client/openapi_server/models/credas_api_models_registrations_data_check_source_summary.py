# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.credas_api_models_data_check_address import CredasApiModelsDataCheckAddress
from openapi_server.models.credas_api_models_data_check_check_remark import CredasApiModelsDataCheckCheckRemark
from openapi_server.models.credas_api_models_data_check_pep_sanctions_pep_sanction_item import CredasApiModelsDataCheckPepSanctionsPepSanctionItem
from openapi_server.models.credas_api_models_data_check_person import CredasApiModelsDataCheckPerson
from openapi_server import util


class CredasApiModelsRegistrationsDataCheckSourceSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, address: CredasApiModelsDataCheckAddress=None, date_created: datetime=None, has_been_overridden: bool=None, has_pep_sanctions_data: bool=None, label: str=None, pep_sanctions_data: List[CredasApiModelsDataCheckPepSanctionsPepSanctionItem]=None, person: CredasApiModelsDataCheckPerson=None, remarks: List[CredasApiModelsDataCheckCheckRemark]=None, source_type: int=None, status: int=None):
        """CredasApiModelsRegistrationsDataCheckSourceSummary - a model defined in OpenAPI

        :param address: The address of this CredasApiModelsRegistrationsDataCheckSourceSummary.
        :param date_created: The date_created of this CredasApiModelsRegistrationsDataCheckSourceSummary.
        :param has_been_overridden: The has_been_overridden of this CredasApiModelsRegistrationsDataCheckSourceSummary.
        :param has_pep_sanctions_data: The has_pep_sanctions_data of this CredasApiModelsRegistrationsDataCheckSourceSummary.
        :param label: The label of this CredasApiModelsRegistrationsDataCheckSourceSummary.
        :param pep_sanctions_data: The pep_sanctions_data of this CredasApiModelsRegistrationsDataCheckSourceSummary.
        :param person: The person of this CredasApiModelsRegistrationsDataCheckSourceSummary.
        :param remarks: The remarks of this CredasApiModelsRegistrationsDataCheckSourceSummary.
        :param source_type: The source_type of this CredasApiModelsRegistrationsDataCheckSourceSummary.
        :param status: The status of this CredasApiModelsRegistrationsDataCheckSourceSummary.
        """
        self.openapi_types = {
            'address': CredasApiModelsDataCheckAddress,
            'date_created': datetime,
            'has_been_overridden': bool,
            'has_pep_sanctions_data': bool,
            'label': str,
            'pep_sanctions_data': List[CredasApiModelsDataCheckPepSanctionsPepSanctionItem],
            'person': CredasApiModelsDataCheckPerson,
            'remarks': List[CredasApiModelsDataCheckCheckRemark],
            'source_type': int,
            'status': int
        }

        self.attribute_map = {
            'address': 'address',
            'date_created': 'dateCreated',
            'has_been_overridden': 'hasBeenOverridden',
            'has_pep_sanctions_data': 'hasPepSanctionsData',
            'label': 'label',
            'pep_sanctions_data': 'pepSanctionsData',
            'person': 'person',
            'remarks': 'remarks',
            'source_type': 'sourceType',
            'status': 'status'
        }

        self._address = address
        self._date_created = date_created
        self._has_been_overridden = has_been_overridden
        self._has_pep_sanctions_data = has_pep_sanctions_data
        self._label = label
        self._pep_sanctions_data = pep_sanctions_data
        self._person = person
        self._remarks = remarks
        self._source_type = source_type
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CredasApiModelsRegistrationsDataCheckSourceSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Credas.Api.Models.Registrations.DataCheckSourceSummary of this CredasApiModelsRegistrationsDataCheckSourceSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def address(self):
        """Gets the address of this CredasApiModelsRegistrationsDataCheckSourceSummary.


        :return: The address of this CredasApiModelsRegistrationsDataCheckSourceSummary.
        :rtype: CredasApiModelsDataCheckAddress
        """
        return self._address

    @address.setter
    def address(self, address):
        """Sets the address of this CredasApiModelsRegistrationsDataCheckSourceSummary.


        :param address: The address of this CredasApiModelsRegistrationsDataCheckSourceSummary.
        :type address: CredasApiModelsDataCheckAddress
        """

        self._address = address

    @property
    def date_created(self):
        """Gets the date_created of this CredasApiModelsRegistrationsDataCheckSourceSummary.


        :return: The date_created of this CredasApiModelsRegistrationsDataCheckSourceSummary.
        :rtype: datetime
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this CredasApiModelsRegistrationsDataCheckSourceSummary.


        :param date_created: The date_created of this CredasApiModelsRegistrationsDataCheckSourceSummary.
        :type date_created: datetime
        """

        self._date_created = date_created

    @property
    def has_been_overridden(self):
        """Gets the has_been_overridden of this CredasApiModelsRegistrationsDataCheckSourceSummary.


        :return: The has_been_overridden of this CredasApiModelsRegistrationsDataCheckSourceSummary.
        :rtype: bool
        """
        return self._has_been_overridden

    @has_been_overridden.setter
    def has_been_overridden(self, has_been_overridden):
        """Sets the has_been_overridden of this CredasApiModelsRegistrationsDataCheckSourceSummary.


        :param has_been_overridden: The has_been_overridden of this CredasApiModelsRegistrationsDataCheckSourceSummary.
        :type has_been_overridden: bool
        """

        self._has_been_overridden = has_been_overridden

    @property
    def has_pep_sanctions_data(self):
        """Gets the has_pep_sanctions_data of this CredasApiModelsRegistrationsDataCheckSourceSummary.


        :return: The has_pep_sanctions_data of this CredasApiModelsRegistrationsDataCheckSourceSummary.
        :rtype: bool
        """
        return self._has_pep_sanctions_data

    @has_pep_sanctions_data.setter
    def has_pep_sanctions_data(self, has_pep_sanctions_data):
        """Sets the has_pep_sanctions_data of this CredasApiModelsRegistrationsDataCheckSourceSummary.


        :param has_pep_sanctions_data: The has_pep_sanctions_data of this CredasApiModelsRegistrationsDataCheckSourceSummary.
        :type has_pep_sanctions_data: bool
        """

        self._has_pep_sanctions_data = has_pep_sanctions_data

    @property
    def label(self):
        """Gets the label of this CredasApiModelsRegistrationsDataCheckSourceSummary.


        :return: The label of this CredasApiModelsRegistrationsDataCheckSourceSummary.
        :rtype: str
        """
        return self._label

    @label.setter
    def label(self, label):
        """Sets the label of this CredasApiModelsRegistrationsDataCheckSourceSummary.


        :param label: The label of this CredasApiModelsRegistrationsDataCheckSourceSummary.
        :type label: str
        """

        self._label = label

    @property
    def pep_sanctions_data(self):
        """Gets the pep_sanctions_data of this CredasApiModelsRegistrationsDataCheckSourceSummary.


        :return: The pep_sanctions_data of this CredasApiModelsRegistrationsDataCheckSourceSummary.
        :rtype: List[CredasApiModelsDataCheckPepSanctionsPepSanctionItem]
        """
        return self._pep_sanctions_data

    @pep_sanctions_data.setter
    def pep_sanctions_data(self, pep_sanctions_data):
        """Sets the pep_sanctions_data of this CredasApiModelsRegistrationsDataCheckSourceSummary.


        :param pep_sanctions_data: The pep_sanctions_data of this CredasApiModelsRegistrationsDataCheckSourceSummary.
        :type pep_sanctions_data: List[CredasApiModelsDataCheckPepSanctionsPepSanctionItem]
        """

        self._pep_sanctions_data = pep_sanctions_data

    @property
    def person(self):
        """Gets the person of this CredasApiModelsRegistrationsDataCheckSourceSummary.


        :return: The person of this CredasApiModelsRegistrationsDataCheckSourceSummary.
        :rtype: CredasApiModelsDataCheckPerson
        """
        return self._person

    @person.setter
    def person(self, person):
        """Sets the person of this CredasApiModelsRegistrationsDataCheckSourceSummary.


        :param person: The person of this CredasApiModelsRegistrationsDataCheckSourceSummary.
        :type person: CredasApiModelsDataCheckPerson
        """

        self._person = person

    @property
    def remarks(self):
        """Gets the remarks of this CredasApiModelsRegistrationsDataCheckSourceSummary.


        :return: The remarks of this CredasApiModelsRegistrationsDataCheckSourceSummary.
        :rtype: List[CredasApiModelsDataCheckCheckRemark]
        """
        return self._remarks

    @remarks.setter
    def remarks(self, remarks):
        """Sets the remarks of this CredasApiModelsRegistrationsDataCheckSourceSummary.


        :param remarks: The remarks of this CredasApiModelsRegistrationsDataCheckSourceSummary.
        :type remarks: List[CredasApiModelsDataCheckCheckRemark]
        """

        self._remarks = remarks

    @property
    def source_type(self):
        """Gets the source_type of this CredasApiModelsRegistrationsDataCheckSourceSummary.

        Unknown = 0, EditedElectoralRollUk = 1, LandlineAppendUk = 2, MortalityUk = 3, CreaditHeaderAmlUk = 4, NcoaAlertFlagUk = 5, NcoaAlertFullUk = 6, SanctionsEnhancedInternational = 7, PepEnhancedInternational = 8, NationalIdentityRegisterUk = 9, LandRegistry = 10

        :return: The source_type of this CredasApiModelsRegistrationsDataCheckSourceSummary.
        :rtype: int
        """
        return self._source_type

    @source_type.setter
    def source_type(self, source_type):
        """Sets the source_type of this CredasApiModelsRegistrationsDataCheckSourceSummary.

        Unknown = 0, EditedElectoralRollUk = 1, LandlineAppendUk = 2, MortalityUk = 3, CreaditHeaderAmlUk = 4, NcoaAlertFlagUk = 5, NcoaAlertFullUk = 6, SanctionsEnhancedInternational = 7, PepEnhancedInternational = 8, NationalIdentityRegisterUk = 9, LandRegistry = 10

        :param source_type: The source_type of this CredasApiModelsRegistrationsDataCheckSourceSummary.
        :type source_type: int
        """
        allowed_values = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]  # noqa: E501
        if source_type not in allowed_values:
            raise ValueError(
                "Invalid value for `source_type` ({0}), must be one of {1}"
                .format(source_type, allowed_values)
            )

        self._source_type = source_type

    @property
    def status(self):
        """Gets the status of this CredasApiModelsRegistrationsDataCheckSourceSummary.

        Unknown = 0, Pass = 1, Refer = 2, Fail = 3

        :return: The status of this CredasApiModelsRegistrationsDataCheckSourceSummary.
        :rtype: int
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this CredasApiModelsRegistrationsDataCheckSourceSummary.

        Unknown = 0, Pass = 1, Refer = 2, Fail = 3

        :param status: The status of this CredasApiModelsRegistrationsDataCheckSourceSummary.
        :type status: int
        """
        allowed_values = [0, 1, 2, 3]  # noqa: E501
        if status not in allowed_values:
            raise ValueError(
                "Invalid value for `status` ({0}), must be one of {1}"
                .format(status, allowed_values)
            )

        self._status = status
