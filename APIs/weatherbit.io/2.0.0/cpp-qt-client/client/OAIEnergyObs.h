/**
 * Weatherbit - Interactive Swagger UI Documentation
 * This an interactive version of the documentation for the Weatherbit API.  The base URL for the API is [http://api.weatherbit.io/v2.0/](http://api.weatherbit.io/v2.0/) or [https://api.weatherbit.io/v2.0/](http://api.weatherbit.io/v2.0/). Below is the Swagger UI documentation for the API. All API requests require the `key` parameter.        An Example for a 48 hour forecast for London, UK would be `http://api.weatherbit.io/v2.0/forecast/hourly?lat=51.5072`&`lon=-0.1276`. See our [Weather API description page](https://www.weatherbit.io/api) for the full documentation.
 *
 * The version of the OpenAPI document: 2.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEnergyObs.h
 *
 * 
 */

#ifndef OAIEnergyObs_H
#define OAIEnergyObs_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIEnergyObs : public OAIObject {
public:
    OAIEnergyObs();
    OAIEnergyObs(QString json);
    ~OAIEnergyObs() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getCdd() const;
    void setCdd(const double &cdd);
    bool is_cdd_Set() const;
    bool is_cdd_Valid() const;

    QString getCityName() const;
    void setCityName(const QString &city_name);
    bool is_city_name_Set() const;
    bool is_city_name_Valid() const;

    qint32 getClouds() const;
    void setClouds(const qint32 &clouds);
    bool is_clouds_Set() const;
    bool is_clouds_Valid() const;

    QString getCountryCode() const;
    void setCountryCode(const QString &country_code);
    bool is_country_code_Set() const;
    bool is_country_code_Valid() const;

    double getDewpt() const;
    void setDewpt(const double &dewpt);
    bool is_dewpt_Set() const;
    bool is_dewpt_Valid() const;

    double getHdd() const;
    void setHdd(const double &hdd);
    bool is_hdd_Set() const;
    bool is_hdd_Valid() const;

    QString getLat() const;
    void setLat(const QString &lat);
    bool is_lat_Set() const;
    bool is_lat_Valid() const;

    QString getLon() const;
    void setLon(const QString &lon);
    bool is_lon_Set() const;
    bool is_lon_Valid() const;

    double getPrecip() const;
    void setPrecip(const double &precip);
    bool is_precip_Set() const;
    bool is_precip_Valid() const;

    qint32 getRh() const;
    void setRh(const qint32 &rh);
    bool is_rh_Set() const;
    bool is_rh_Valid() const;

    double getSnow() const;
    void setSnow(const double &snow);
    bool is_snow_Set() const;
    bool is_snow_Valid() const;

    QList<QString> getSources() const;
    void setSources(const QList<QString> &sources);
    bool is_sources_Set() const;
    bool is_sources_Valid() const;

    QString getStateCode() const;
    void setStateCode(const QString &state_code);
    bool is_state_code_Set() const;
    bool is_state_code_Valid() const;

    QString getStationId() const;
    void setStationId(const QString &station_id);
    bool is_station_id_Set() const;
    bool is_station_id_Valid() const;

    double getSunHours() const;
    void setSunHours(const double &sun_hours);
    bool is_sun_hours_Set() const;
    bool is_sun_hours_Valid() const;

    double getTDhi() const;
    void setTDhi(const double &t_dhi);
    bool is_t_dhi_Set() const;
    bool is_t_dhi_Valid() const;

    double getTDni() const;
    void setTDni(const double &t_dni);
    bool is_t_dni_Set() const;
    bool is_t_dni_Valid() const;

    double getTGhi() const;
    void setTGhi(const double &t_ghi);
    bool is_t_ghi_Set() const;
    bool is_t_ghi_Valid() const;

    double getTemp() const;
    void setTemp(const double &temp);
    bool is_temp_Set() const;
    bool is_temp_Valid() const;

    QString getTimezone() const;
    void setTimezone(const QString &timezone);
    bool is_timezone_Set() const;
    bool is_timezone_Valid() const;

    qint32 getWindDir() const;
    void setWindDir(const qint32 &wind_dir);
    bool is_wind_dir_Set() const;
    bool is_wind_dir_Valid() const;

    double getWindSpd() const;
    void setWindSpd(const double &wind_spd);
    bool is_wind_spd_Set() const;
    bool is_wind_spd_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_cdd;
    bool m_cdd_isSet;
    bool m_cdd_isValid;

    QString m_city_name;
    bool m_city_name_isSet;
    bool m_city_name_isValid;

    qint32 m_clouds;
    bool m_clouds_isSet;
    bool m_clouds_isValid;

    QString m_country_code;
    bool m_country_code_isSet;
    bool m_country_code_isValid;

    double m_dewpt;
    bool m_dewpt_isSet;
    bool m_dewpt_isValid;

    double m_hdd;
    bool m_hdd_isSet;
    bool m_hdd_isValid;

    QString m_lat;
    bool m_lat_isSet;
    bool m_lat_isValid;

    QString m_lon;
    bool m_lon_isSet;
    bool m_lon_isValid;

    double m_precip;
    bool m_precip_isSet;
    bool m_precip_isValid;

    qint32 m_rh;
    bool m_rh_isSet;
    bool m_rh_isValid;

    double m_snow;
    bool m_snow_isSet;
    bool m_snow_isValid;

    QList<QString> m_sources;
    bool m_sources_isSet;
    bool m_sources_isValid;

    QString m_state_code;
    bool m_state_code_isSet;
    bool m_state_code_isValid;

    QString m_station_id;
    bool m_station_id_isSet;
    bool m_station_id_isValid;

    double m_sun_hours;
    bool m_sun_hours_isSet;
    bool m_sun_hours_isValid;

    double m_t_dhi;
    bool m_t_dhi_isSet;
    bool m_t_dhi_isValid;

    double m_t_dni;
    bool m_t_dni_isSet;
    bool m_t_dni_isValid;

    double m_t_ghi;
    bool m_t_ghi_isSet;
    bool m_t_ghi_isValid;

    double m_temp;
    bool m_temp_isSet;
    bool m_temp_isValid;

    QString m_timezone;
    bool m_timezone_isSet;
    bool m_timezone_isValid;

    qint32 m_wind_dir;
    bool m_wind_dir_isSet;
    bool m_wind_dir_isValid;

    double m_wind_spd;
    bool m_wind_spd_isSet;
    bool m_wind_spd_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEnergyObs)

#endif // OAIEnergyObs_H
