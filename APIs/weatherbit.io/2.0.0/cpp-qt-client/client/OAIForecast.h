/**
 * Weatherbit - Interactive Swagger UI Documentation
 * This an interactive version of the documentation for the Weatherbit API.  The base URL for the API is [http://api.weatherbit.io/v2.0/](http://api.weatherbit.io/v2.0/) or [https://api.weatherbit.io/v2.0/](http://api.weatherbit.io/v2.0/). Below is the Swagger UI documentation for the API. All API requests require the `key` parameter.        An Example for a 48 hour forecast for London, UK would be `http://api.weatherbit.io/v2.0/forecast/hourly?lat=51.5072`&`lon=-0.1276`. See our [Weather API description page](https://www.weatherbit.io/api) for the full documentation.
 *
 * The version of the OpenAPI document: 2.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIForecast.h
 *
 * 
 */

#ifndef OAIForecast_H
#define OAIForecast_H

#include <QJsonObject>

#include "OAIForecast_weather.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIForecast_weather;

class OAIForecast : public OAIObject {
public:
    OAIForecast();
    OAIForecast(QString json);
    ~OAIForecast() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getAppMaxTemp() const;
    void setAppMaxTemp(const double &app_max_temp);
    bool is_app_max_temp_Set() const;
    bool is_app_max_temp_Valid() const;

    double getAppMinTemp() const;
    void setAppMinTemp(const double &app_min_temp);
    bool is_app_min_temp_Set() const;
    bool is_app_min_temp_Valid() const;

    qint32 getClouds() const;
    void setClouds(const qint32 &clouds);
    bool is_clouds_Set() const;
    bool is_clouds_Valid() const;

    QString getDatetime() const;
    void setDatetime(const QString &datetime);
    bool is_datetime_Set() const;
    bool is_datetime_Valid() const;

    double getDewpt() const;
    void setDewpt(const double &dewpt);
    bool is_dewpt_Set() const;
    bool is_dewpt_Valid() const;

    double getMaxDhi() const;
    void setMaxDhi(const double &max_dhi);
    bool is_max_dhi_Set() const;
    bool is_max_dhi_Valid() const;

    double getMaxTemp() const;
    void setMaxTemp(const double &max_temp);
    bool is_max_temp_Set() const;
    bool is_max_temp_Valid() const;

    double getMinTemp() const;
    void setMinTemp(const double &min_temp);
    bool is_min_temp_Set() const;
    bool is_min_temp_Valid() const;

    double getMoonPhase() const;
    void setMoonPhase(const double &moon_phase);
    bool is_moon_phase_Set() const;
    bool is_moon_phase_Valid() const;

    qint32 getMoonriseTs() const;
    void setMoonriseTs(const qint32 &moonrise_ts);
    bool is_moonrise_ts_Set() const;
    bool is_moonrise_ts_Valid() const;

    qint32 getMoonsetTs() const;
    void setMoonsetTs(const qint32 &moonset_ts);
    bool is_moonset_ts_Set() const;
    bool is_moonset_ts_Valid() const;

    QString getPod() const;
    void setPod(const QString &pod);
    bool is_pod_Set() const;
    bool is_pod_Valid() const;

    double getPop() const;
    void setPop(const double &pop);
    bool is_pop_Set() const;
    bool is_pop_Valid() const;

    double getPrecip() const;
    void setPrecip(const double &precip);
    bool is_precip_Set() const;
    bool is_precip_Valid() const;

    double getPres() const;
    void setPres(const double &pres);
    bool is_pres_Set() const;
    bool is_pres_Valid() const;

    qint32 getRh() const;
    void setRh(const qint32 &rh);
    bool is_rh_Set() const;
    bool is_rh_Valid() const;

    double getSlp() const;
    void setSlp(const double &slp);
    bool is_slp_Set() const;
    bool is_slp_Valid() const;

    double getSnow() const;
    void setSnow(const double &snow);
    bool is_snow_Set() const;
    bool is_snow_Valid() const;

    double getSnowDepth() const;
    void setSnowDepth(const double &snow_depth);
    bool is_snow_depth_Set() const;
    bool is_snow_depth_Valid() const;

    qint32 getSunriseTs() const;
    void setSunriseTs(const qint32 &sunrise_ts);
    bool is_sunrise_ts_Set() const;
    bool is_sunrise_ts_Valid() const;

    qint32 getSunsetTs() const;
    void setSunsetTs(const qint32 &sunset_ts);
    bool is_sunset_ts_Set() const;
    bool is_sunset_ts_Valid() const;

    double getTemp() const;
    void setTemp(const double &temp);
    bool is_temp_Set() const;
    bool is_temp_Valid() const;

    QString getTimestampLocal() const;
    void setTimestampLocal(const QString &timestamp_local);
    bool is_timestamp_local_Set() const;
    bool is_timestamp_local_Valid() const;

    QString getTimestampUtc() const;
    void setTimestampUtc(const QString &timestamp_utc);
    bool is_timestamp_utc_Set() const;
    bool is_timestamp_utc_Valid() const;

    double getTs() const;
    void setTs(const double &ts);
    bool is_ts_Set() const;
    bool is_ts_Valid() const;

    double getUv() const;
    void setUv(const double &uv);
    bool is_uv_Set() const;
    bool is_uv_Valid() const;

    double getVis() const;
    void setVis(const double &vis);
    bool is_vis_Set() const;
    bool is_vis_Valid() const;

    OAIForecast_weather getWeather() const;
    void setWeather(const OAIForecast_weather &weather);
    bool is_weather_Set() const;
    bool is_weather_Valid() const;

    QString getWindCdir() const;
    void setWindCdir(const QString &wind_cdir);
    bool is_wind_cdir_Set() const;
    bool is_wind_cdir_Valid() const;

    QString getWindCdirFull() const;
    void setWindCdirFull(const QString &wind_cdir_full);
    bool is_wind_cdir_full_Set() const;
    bool is_wind_cdir_full_Valid() const;

    qint32 getWindDir() const;
    void setWindDir(const qint32 &wind_dir);
    bool is_wind_dir_Set() const;
    bool is_wind_dir_Valid() const;

    double getWindSpd() const;
    void setWindSpd(const double &wind_spd);
    bool is_wind_spd_Set() const;
    bool is_wind_spd_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_app_max_temp;
    bool m_app_max_temp_isSet;
    bool m_app_max_temp_isValid;

    double m_app_min_temp;
    bool m_app_min_temp_isSet;
    bool m_app_min_temp_isValid;

    qint32 m_clouds;
    bool m_clouds_isSet;
    bool m_clouds_isValid;

    QString m_datetime;
    bool m_datetime_isSet;
    bool m_datetime_isValid;

    double m_dewpt;
    bool m_dewpt_isSet;
    bool m_dewpt_isValid;

    double m_max_dhi;
    bool m_max_dhi_isSet;
    bool m_max_dhi_isValid;

    double m_max_temp;
    bool m_max_temp_isSet;
    bool m_max_temp_isValid;

    double m_min_temp;
    bool m_min_temp_isSet;
    bool m_min_temp_isValid;

    double m_moon_phase;
    bool m_moon_phase_isSet;
    bool m_moon_phase_isValid;

    qint32 m_moonrise_ts;
    bool m_moonrise_ts_isSet;
    bool m_moonrise_ts_isValid;

    qint32 m_moonset_ts;
    bool m_moonset_ts_isSet;
    bool m_moonset_ts_isValid;

    QString m_pod;
    bool m_pod_isSet;
    bool m_pod_isValid;

    double m_pop;
    bool m_pop_isSet;
    bool m_pop_isValid;

    double m_precip;
    bool m_precip_isSet;
    bool m_precip_isValid;

    double m_pres;
    bool m_pres_isSet;
    bool m_pres_isValid;

    qint32 m_rh;
    bool m_rh_isSet;
    bool m_rh_isValid;

    double m_slp;
    bool m_slp_isSet;
    bool m_slp_isValid;

    double m_snow;
    bool m_snow_isSet;
    bool m_snow_isValid;

    double m_snow_depth;
    bool m_snow_depth_isSet;
    bool m_snow_depth_isValid;

    qint32 m_sunrise_ts;
    bool m_sunrise_ts_isSet;
    bool m_sunrise_ts_isValid;

    qint32 m_sunset_ts;
    bool m_sunset_ts_isSet;
    bool m_sunset_ts_isValid;

    double m_temp;
    bool m_temp_isSet;
    bool m_temp_isValid;

    QString m_timestamp_local;
    bool m_timestamp_local_isSet;
    bool m_timestamp_local_isValid;

    QString m_timestamp_utc;
    bool m_timestamp_utc_isSet;
    bool m_timestamp_utc_isValid;

    double m_ts;
    bool m_ts_isSet;
    bool m_ts_isValid;

    double m_uv;
    bool m_uv_isSet;
    bool m_uv_isValid;

    double m_vis;
    bool m_vis_isSet;
    bool m_vis_isValid;

    OAIForecast_weather m_weather;
    bool m_weather_isSet;
    bool m_weather_isValid;

    QString m_wind_cdir;
    bool m_wind_cdir_isSet;
    bool m_wind_cdir_isValid;

    QString m_wind_cdir_full;
    bool m_wind_cdir_full_isSet;
    bool m_wind_cdir_full_isValid;

    qint32 m_wind_dir;
    bool m_wind_dir_isSet;
    bool m_wind_dir_isValid;

    double m_wind_spd;
    bool m_wind_spd_isSet;
    bool m_wind_spd_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIForecast)

#endif // OAIForecast_H
