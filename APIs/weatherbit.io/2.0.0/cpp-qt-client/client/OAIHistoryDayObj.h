/**
 * Weatherbit - Interactive Swagger UI Documentation
 * This an interactive version of the documentation for the Weatherbit API.  The base URL for the API is [http://api.weatherbit.io/v2.0/](http://api.weatherbit.io/v2.0/) or [https://api.weatherbit.io/v2.0/](http://api.weatherbit.io/v2.0/). Below is the Swagger UI documentation for the API. All API requests require the `key` parameter.        An Example for a 48 hour forecast for London, UK would be `http://api.weatherbit.io/v2.0/forecast/hourly?lat=51.5072`&`lon=-0.1276`. See our [Weather API description page](https://www.weatherbit.io/api) for the full documentation.
 *
 * The version of the OpenAPI document: 2.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIHistoryDayObj.h
 *
 * 
 */

#ifndef OAIHistoryDayObj_H
#define OAIHistoryDayObj_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIHistoryDayObj : public OAIObject {
public:
    OAIHistoryDayObj();
    OAIHistoryDayObj(QString json);
    ~OAIHistoryDayObj() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDatetime() const;
    void setDatetime(const QString &datetime);
    bool is_datetime_Set() const;
    bool is_datetime_Valid() const;

    double getDewpt() const;
    void setDewpt(const double &dewpt);
    bool is_dewpt_Set() const;
    bool is_dewpt_Valid() const;

    qint32 getDhi() const;
    void setDhi(const qint32 &dhi);
    bool is_dhi_Set() const;
    bool is_dhi_Valid() const;

    qint32 getDni() const;
    void setDni(const qint32 &dni);
    bool is_dni_Set() const;
    bool is_dni_Valid() const;

    qint32 getGhi() const;
    void setGhi(const qint32 &ghi);
    bool is_ghi_Set() const;
    bool is_ghi_Valid() const;

    double getMaxTemp() const;
    void setMaxTemp(const double &max_temp);
    bool is_max_temp_Set() const;
    bool is_max_temp_Valid() const;

    double getMaxTempTs() const;
    void setMaxTempTs(const double &max_temp_ts);
    bool is_max_temp_ts_Set() const;
    bool is_max_temp_ts_Valid() const;

    double getMaxUv() const;
    void setMaxUv(const double &max_uv);
    bool is_max_uv_Set() const;
    bool is_max_uv_Valid() const;

    qint32 getMaxWindDir() const;
    void setMaxWindDir(const qint32 &max_wind_dir);
    bool is_max_wind_dir_Set() const;
    bool is_max_wind_dir_Valid() const;

    double getMaxWindSpd() const;
    void setMaxWindSpd(const double &max_wind_spd);
    bool is_max_wind_spd_Set() const;
    bool is_max_wind_spd_Valid() const;

    double getMaxWindSpdTs() const;
    void setMaxWindSpdTs(const double &max_wind_spd_ts);
    bool is_max_wind_spd_ts_Set() const;
    bool is_max_wind_spd_ts_Valid() const;

    double getMinTemp() const;
    void setMinTemp(const double &min_temp);
    bool is_min_temp_Set() const;
    bool is_min_temp_Valid() const;

    double getMinTempTs() const;
    void setMinTempTs(const double &min_temp_ts);
    bool is_min_temp_ts_Set() const;
    bool is_min_temp_ts_Valid() const;

    double getPrecip() const;
    void setPrecip(const double &precip);
    bool is_precip_Set() const;
    bool is_precip_Valid() const;

    double getPrecipGpm() const;
    void setPrecipGpm(const double &precip_gpm);
    bool is_precip_gpm_Set() const;
    bool is_precip_gpm_Valid() const;

    double getPres() const;
    void setPres(const double &pres);
    bool is_pres_Set() const;
    bool is_pres_Valid() const;

    QString getRevisionStatus() const;
    void setRevisionStatus(const QString &revision_status);
    bool is_revision_status_Set() const;
    bool is_revision_status_Valid() const;

    qint32 getRh() const;
    void setRh(const qint32 &rh);
    bool is_rh_Set() const;
    bool is_rh_Valid() const;

    double getSlp() const;
    void setSlp(const double &slp);
    bool is_slp_Set() const;
    bool is_slp_Valid() const;

    double getSnow() const;
    void setSnow(const double &snow);
    bool is_snow_Set() const;
    bool is_snow_Valid() const;

    double getSnowDepth() const;
    void setSnowDepth(const double &snow_depth);
    bool is_snow_depth_Set() const;
    bool is_snow_depth_Valid() const;

    qint32 getTDhi() const;
    void setTDhi(const qint32 &t_dhi);
    bool is_t_dhi_Set() const;
    bool is_t_dhi_Valid() const;

    qint32 getTDni() const;
    void setTDni(const qint32 &t_dni);
    bool is_t_dni_Set() const;
    bool is_t_dni_Valid() const;

    qint32 getTGhi() const;
    void setTGhi(const qint32 &t_ghi);
    bool is_t_ghi_Set() const;
    bool is_t_ghi_Valid() const;

    double getTemp() const;
    void setTemp(const double &temp);
    bool is_temp_Set() const;
    bool is_temp_Valid() const;

    qint32 getTs() const;
    void setTs(const qint32 &ts);
    bool is_ts_Set() const;
    bool is_ts_Valid() const;

    qint32 getWindDir() const;
    void setWindDir(const qint32 &wind_dir);
    bool is_wind_dir_Set() const;
    bool is_wind_dir_Valid() const;

    double getWindGustSpd() const;
    void setWindGustSpd(const double &wind_gust_spd);
    bool is_wind_gust_spd_Set() const;
    bool is_wind_gust_spd_Valid() const;

    double getWindSpd() const;
    void setWindSpd(const double &wind_spd);
    bool is_wind_spd_Set() const;
    bool is_wind_spd_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_datetime;
    bool m_datetime_isSet;
    bool m_datetime_isValid;

    double m_dewpt;
    bool m_dewpt_isSet;
    bool m_dewpt_isValid;

    qint32 m_dhi;
    bool m_dhi_isSet;
    bool m_dhi_isValid;

    qint32 m_dni;
    bool m_dni_isSet;
    bool m_dni_isValid;

    qint32 m_ghi;
    bool m_ghi_isSet;
    bool m_ghi_isValid;

    double m_max_temp;
    bool m_max_temp_isSet;
    bool m_max_temp_isValid;

    double m_max_temp_ts;
    bool m_max_temp_ts_isSet;
    bool m_max_temp_ts_isValid;

    double m_max_uv;
    bool m_max_uv_isSet;
    bool m_max_uv_isValid;

    qint32 m_max_wind_dir;
    bool m_max_wind_dir_isSet;
    bool m_max_wind_dir_isValid;

    double m_max_wind_spd;
    bool m_max_wind_spd_isSet;
    bool m_max_wind_spd_isValid;

    double m_max_wind_spd_ts;
    bool m_max_wind_spd_ts_isSet;
    bool m_max_wind_spd_ts_isValid;

    double m_min_temp;
    bool m_min_temp_isSet;
    bool m_min_temp_isValid;

    double m_min_temp_ts;
    bool m_min_temp_ts_isSet;
    bool m_min_temp_ts_isValid;

    double m_precip;
    bool m_precip_isSet;
    bool m_precip_isValid;

    double m_precip_gpm;
    bool m_precip_gpm_isSet;
    bool m_precip_gpm_isValid;

    double m_pres;
    bool m_pres_isSet;
    bool m_pres_isValid;

    QString m_revision_status;
    bool m_revision_status_isSet;
    bool m_revision_status_isValid;

    qint32 m_rh;
    bool m_rh_isSet;
    bool m_rh_isValid;

    double m_slp;
    bool m_slp_isSet;
    bool m_slp_isValid;

    double m_snow;
    bool m_snow_isSet;
    bool m_snow_isValid;

    double m_snow_depth;
    bool m_snow_depth_isSet;
    bool m_snow_depth_isValid;

    qint32 m_t_dhi;
    bool m_t_dhi_isSet;
    bool m_t_dhi_isValid;

    qint32 m_t_dni;
    bool m_t_dni_isSet;
    bool m_t_dni_isValid;

    qint32 m_t_ghi;
    bool m_t_ghi_isSet;
    bool m_t_ghi_isValid;

    double m_temp;
    bool m_temp_isSet;
    bool m_temp_isValid;

    qint32 m_ts;
    bool m_ts_isSet;
    bool m_ts_isValid;

    qint32 m_wind_dir;
    bool m_wind_dir_isSet;
    bool m_wind_dir_isValid;

    double m_wind_gust_spd;
    bool m_wind_gust_spd_isSet;
    bool m_wind_gust_spd_isValid;

    double m_wind_spd;
    bool m_wind_spd_isSet;
    bool m_wind_spd_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIHistoryDayObj)

#endif // OAIHistoryDayObj_H
