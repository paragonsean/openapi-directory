/**
 * Weatherbit - Interactive Swagger UI Documentation
 * This an interactive version of the documentation for the Weatherbit API.  The base URL for the API is [http://api.weatherbit.io/v2.0/](http://api.weatherbit.io/v2.0/) or [https://api.weatherbit.io/v2.0/](http://api.weatherbit.io/v2.0/). Below is the Swagger UI documentation for the API. All API requests require the `key` parameter.        An Example for a 48 hour forecast for London, UK would be `http://api.weatherbit.io/v2.0/forecast/hourly?lat=51.5072`&`lon=-0.1276`. See our [Weather API description page](https://www.weatherbit.io/api) for the full documentation.
 *
 * The version of the OpenAPI document: 2.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGeoIPObj.h
 *
 * 
 */

#ifndef OAIGeoIPObj_H
#define OAIGeoIPObj_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGeoIPObj : public OAIObject {
public:
    OAIGeoIPObj();
    OAIGeoIPObj(QString json);
    ~OAIGeoIPObj() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAreaCode() const;
    void setAreaCode(const QString &area_code);
    bool is_area_code_Set() const;
    bool is_area_code_Valid() const;

    QString getCharset() const;
    void setCharset(const QString &charset);
    bool is_charset_Set() const;
    bool is_charset_Valid() const;

    QString getCity() const;
    void setCity(const QString &city);
    bool is_city_Set() const;
    bool is_city_Valid() const;

    QString getContinentCode() const;
    void setContinentCode(const QString &continent_code);
    bool is_continent_code_Set() const;
    bool is_continent_code_Valid() const;

    QString getCountryCode() const;
    void setCountryCode(const QString &country_code);
    bool is_country_code_Set() const;
    bool is_country_code_Valid() const;

    QString getCountryCode3() const;
    void setCountryCode3(const QString &country_code3);
    bool is_country_code3_Set() const;
    bool is_country_code3_Valid() const;

    QString getDmaCode() const;
    void setDmaCode(const QString &dma_code);
    bool is_dma_code_Set() const;
    bool is_dma_code_Valid() const;

    QString getIp() const;
    void setIp(const QString &ip);
    bool is_ip_Set() const;
    bool is_ip_Valid() const;

    QString getLatitude() const;
    void setLatitude(const QString &latitude);
    bool is_latitude_Set() const;
    bool is_latitude_Valid() const;

    QString getLongitude() const;
    void setLongitude(const QString &longitude);
    bool is_longitude_Set() const;
    bool is_longitude_Valid() const;

    QString getMetroCode() const;
    void setMetroCode(const QString &metro_code);
    bool is_metro_code_Set() const;
    bool is_metro_code_Valid() const;

    QString getOffset() const;
    void setOffset(const QString &offset);
    bool is_offset_Set() const;
    bool is_offset_Valid() const;

    QString getOrganization() const;
    void setOrganization(const QString &organization);
    bool is_organization_Set() const;
    bool is_organization_Valid() const;

    QString getPostalCode() const;
    void setPostalCode(const QString &postal_code);
    bool is_postal_code_Set() const;
    bool is_postal_code_Valid() const;

    QString getRegion() const;
    void setRegion(const QString &region);
    bool is_region_Set() const;
    bool is_region_Valid() const;

    QString getTimezone() const;
    void setTimezone(const QString &timezone);
    bool is_timezone_Set() const;
    bool is_timezone_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_area_code;
    bool m_area_code_isSet;
    bool m_area_code_isValid;

    QString m_charset;
    bool m_charset_isSet;
    bool m_charset_isValid;

    QString m_city;
    bool m_city_isSet;
    bool m_city_isValid;

    QString m_continent_code;
    bool m_continent_code_isSet;
    bool m_continent_code_isValid;

    QString m_country_code;
    bool m_country_code_isSet;
    bool m_country_code_isValid;

    QString m_country_code3;
    bool m_country_code3_isSet;
    bool m_country_code3_isValid;

    QString m_dma_code;
    bool m_dma_code_isSet;
    bool m_dma_code_isValid;

    QString m_ip;
    bool m_ip_isSet;
    bool m_ip_isValid;

    QString m_latitude;
    bool m_latitude_isSet;
    bool m_latitude_isValid;

    QString m_longitude;
    bool m_longitude_isSet;
    bool m_longitude_isValid;

    QString m_metro_code;
    bool m_metro_code_isSet;
    bool m_metro_code_isValid;

    QString m_offset;
    bool m_offset_isSet;
    bool m_offset_isValid;

    QString m_organization;
    bool m_organization_isSet;
    bool m_organization_isValid;

    QString m_postal_code;
    bool m_postal_code_isSet;
    bool m_postal_code_isValid;

    QString m_region;
    bool m_region_isSet;
    bool m_region_isValid;

    QString m_timezone;
    bool m_timezone_isSet;
    bool m_timezone_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGeoIPObj)

#endif // OAIGeoIPObj_H
