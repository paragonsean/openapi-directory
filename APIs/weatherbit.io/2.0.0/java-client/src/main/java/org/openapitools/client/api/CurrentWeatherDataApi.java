/*
 * Weatherbit - Interactive Swagger UI Documentation
 * This an interactive version of the documentation for the Weatherbit API.  The base URL for the API is [http://api.weatherbit.io/v2.0/](http://api.weatherbit.io/v2.0/) or [https://api.weatherbit.io/v2.0/](http://api.weatherbit.io/v2.0/). Below is the Swagger UI documentation for the API. All API requests require the `key` parameter.        An Example for a 48 hour forecast for London, UK would be `http://api.weatherbit.io/v2.0/forecast/hourly?lat=51.5072`&`lon=-0.1276`. See our [Weather API description page](https://www.weatherbit.io/api) for the full documentation.
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.CurrentObsGroup;
import org.openapitools.client.model.Error;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class CurrentWeatherDataApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public CurrentWeatherDataApi() {
        this(Configuration.getDefaultApiClient());
    }

    public CurrentWeatherDataApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for currentcitiescitiesGet
     * @param cities Comma separated list of City ID&#39;s. Example: 4487042, 4494942, 4504871 (required)
     * @param key Your registered API key. (required)
     * @param units Convert to units. Default Metric See &lt;a target&#x3D;&#39;blank&#39; href&#x3D;&#39;/api/requests&#39;&gt;units field description&lt;/a&gt; (optional)
     * @param marine Marine stations only (buoys, oil platforms, etc) (optional)
     * @param lang Language (Default: English) See &lt;a target&#x3D;&#39;blank&#39; href&#x3D;&#39;/api/requests&#39;&gt;language field description&lt;/a&gt; (optional)
     * @param paramCallback Wraps return in jsonp callback - Example - callback&#x3D;func (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> An Observation Group object. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> No Data. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call currentcitiescitiesGetCall(String cities, String key, String units, String marine, String lang, String paramCallback, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/current?cities={cities}"
            .replace("{" + "cities" + "}", localVarApiClient.escapeString(cities.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (units != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("units", units));
        }

        if (marine != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("marine", marine));
        }

        if (lang != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("lang", lang));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        if (key != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("key", key));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call currentcitiescitiesGetValidateBeforeCall(String cities, String key, String units, String marine, String lang, String paramCallback, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'cities' is set
        if (cities == null) {
            throw new ApiException("Missing the required parameter 'cities' when calling currentcitiescitiesGet(Async)");
        }

        // verify the required parameter 'key' is set
        if (key == null) {
            throw new ApiException("Missing the required parameter 'key' when calling currentcitiescitiesGet(Async)");
        }

        return currentcitiescitiesGetCall(cities, key, units, marine, lang, paramCallback, _callback);

    }

    /**
     * Returns a group of observations given a list of cities
     * Returns a group of Current Observations - Given a list of City IDs. 
     * @param cities Comma separated list of City ID&#39;s. Example: 4487042, 4494942, 4504871 (required)
     * @param key Your registered API key. (required)
     * @param units Convert to units. Default Metric See &lt;a target&#x3D;&#39;blank&#39; href&#x3D;&#39;/api/requests&#39;&gt;units field description&lt;/a&gt; (optional)
     * @param marine Marine stations only (buoys, oil platforms, etc) (optional)
     * @param lang Language (Default: English) See &lt;a target&#x3D;&#39;blank&#39; href&#x3D;&#39;/api/requests&#39;&gt;language field description&lt;/a&gt; (optional)
     * @param paramCallback Wraps return in jsonp callback - Example - callback&#x3D;func (optional)
     * @return CurrentObsGroup
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> An Observation Group object. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> No Data. </td><td>  -  </td></tr>
     </table>
     */
    public CurrentObsGroup currentcitiescitiesGet(String cities, String key, String units, String marine, String lang, String paramCallback) throws ApiException {
        ApiResponse<CurrentObsGroup> localVarResp = currentcitiescitiesGetWithHttpInfo(cities, key, units, marine, lang, paramCallback);
        return localVarResp.getData();
    }

    /**
     * Returns a group of observations given a list of cities
     * Returns a group of Current Observations - Given a list of City IDs. 
     * @param cities Comma separated list of City ID&#39;s. Example: 4487042, 4494942, 4504871 (required)
     * @param key Your registered API key. (required)
     * @param units Convert to units. Default Metric See &lt;a target&#x3D;&#39;blank&#39; href&#x3D;&#39;/api/requests&#39;&gt;units field description&lt;/a&gt; (optional)
     * @param marine Marine stations only (buoys, oil platforms, etc) (optional)
     * @param lang Language (Default: English) See &lt;a target&#x3D;&#39;blank&#39; href&#x3D;&#39;/api/requests&#39;&gt;language field description&lt;/a&gt; (optional)
     * @param paramCallback Wraps return in jsonp callback - Example - callback&#x3D;func (optional)
     * @return ApiResponse&lt;CurrentObsGroup&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> An Observation Group object. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> No Data. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<CurrentObsGroup> currentcitiescitiesGetWithHttpInfo(String cities, String key, String units, String marine, String lang, String paramCallback) throws ApiException {
        okhttp3.Call localVarCall = currentcitiescitiesGetValidateBeforeCall(cities, key, units, marine, lang, paramCallback, null);
        Type localVarReturnType = new TypeToken<CurrentObsGroup>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Returns a group of observations given a list of cities (asynchronously)
     * Returns a group of Current Observations - Given a list of City IDs. 
     * @param cities Comma separated list of City ID&#39;s. Example: 4487042, 4494942, 4504871 (required)
     * @param key Your registered API key. (required)
     * @param units Convert to units. Default Metric See &lt;a target&#x3D;&#39;blank&#39; href&#x3D;&#39;/api/requests&#39;&gt;units field description&lt;/a&gt; (optional)
     * @param marine Marine stations only (buoys, oil platforms, etc) (optional)
     * @param lang Language (Default: English) See &lt;a target&#x3D;&#39;blank&#39; href&#x3D;&#39;/api/requests&#39;&gt;language field description&lt;/a&gt; (optional)
     * @param paramCallback Wraps return in jsonp callback - Example - callback&#x3D;func (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> An Observation Group object. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> No Data. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call currentcitiescitiesGetAsync(String cities, String key, String units, String marine, String lang, String paramCallback, final ApiCallback<CurrentObsGroup> _callback) throws ApiException {

        okhttp3.Call localVarCall = currentcitiescitiesGetValidateBeforeCall(cities, key, units, marine, lang, paramCallback, _callback);
        Type localVarReturnType = new TypeToken<CurrentObsGroup>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for currentcityIdcityIdGet
     * @param cityId City ID. Example: 4487042 (required)
     * @param key Your registered API key. (required)
     * @param units Convert to units. Default Metric See &lt;a target&#x3D;&#39;blank&#39; href&#x3D;&#39;/api/requests&#39;&gt;units field description&lt;/a&gt; (optional)
     * @param include Include 1 hour - minutely forecast in the response (optional)
     * @param marine Marine stations only (buoys, oil platforms, etc) (optional)
     * @param lang Language (Default: English) See &lt;a target&#x3D;&#39;blank&#39; href&#x3D;&#39;/api/requests&#39;&gt;language field description&lt;/a&gt; (optional)
     * @param paramCallback Wraps return in jsonp callback - Example - callback&#x3D;func (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> An Observation Group object. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> No Data. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call currentcityIdcityIdGetCall(String cityId, String key, String units, String include, String marine, String lang, String paramCallback, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/current?city_id={city_id}"
            .replace("{" + "city_id" + "}", localVarApiClient.escapeString(cityId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (units != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("units", units));
        }

        if (include != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("include", include));
        }

        if (marine != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("marine", marine));
        }

        if (lang != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("lang", lang));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        if (key != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("key", key));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call currentcityIdcityIdGetValidateBeforeCall(String cityId, String key, String units, String include, String marine, String lang, String paramCallback, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'cityId' is set
        if (cityId == null) {
            throw new ApiException("Missing the required parameter 'cityId' when calling currentcityIdcityIdGet(Async)");
        }

        // verify the required parameter 'key' is set
        if (key == null) {
            throw new ApiException("Missing the required parameter 'key' when calling currentcityIdcityIdGet(Async)");
        }

        return currentcityIdcityIdGetCall(cityId, key, units, include, marine, lang, paramCallback, _callback);

    }

    /**
     * Returns a current observation by city id.
     * Returns current weather observation - Given a City ID. 
     * @param cityId City ID. Example: 4487042 (required)
     * @param key Your registered API key. (required)
     * @param units Convert to units. Default Metric See &lt;a target&#x3D;&#39;blank&#39; href&#x3D;&#39;/api/requests&#39;&gt;units field description&lt;/a&gt; (optional)
     * @param include Include 1 hour - minutely forecast in the response (optional)
     * @param marine Marine stations only (buoys, oil platforms, etc) (optional)
     * @param lang Language (Default: English) See &lt;a target&#x3D;&#39;blank&#39; href&#x3D;&#39;/api/requests&#39;&gt;language field description&lt;/a&gt; (optional)
     * @param paramCallback Wraps return in jsonp callback - Example - callback&#x3D;func (optional)
     * @return CurrentObsGroup
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> An Observation Group object. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> No Data. </td><td>  -  </td></tr>
     </table>
     */
    public CurrentObsGroup currentcityIdcityIdGet(String cityId, String key, String units, String include, String marine, String lang, String paramCallback) throws ApiException {
        ApiResponse<CurrentObsGroup> localVarResp = currentcityIdcityIdGetWithHttpInfo(cityId, key, units, include, marine, lang, paramCallback);
        return localVarResp.getData();
    }

    /**
     * Returns a current observation by city id.
     * Returns current weather observation - Given a City ID. 
     * @param cityId City ID. Example: 4487042 (required)
     * @param key Your registered API key. (required)
     * @param units Convert to units. Default Metric See &lt;a target&#x3D;&#39;blank&#39; href&#x3D;&#39;/api/requests&#39;&gt;units field description&lt;/a&gt; (optional)
     * @param include Include 1 hour - minutely forecast in the response (optional)
     * @param marine Marine stations only (buoys, oil platforms, etc) (optional)
     * @param lang Language (Default: English) See &lt;a target&#x3D;&#39;blank&#39; href&#x3D;&#39;/api/requests&#39;&gt;language field description&lt;/a&gt; (optional)
     * @param paramCallback Wraps return in jsonp callback - Example - callback&#x3D;func (optional)
     * @return ApiResponse&lt;CurrentObsGroup&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> An Observation Group object. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> No Data. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<CurrentObsGroup> currentcityIdcityIdGetWithHttpInfo(String cityId, String key, String units, String include, String marine, String lang, String paramCallback) throws ApiException {
        okhttp3.Call localVarCall = currentcityIdcityIdGetValidateBeforeCall(cityId, key, units, include, marine, lang, paramCallback, null);
        Type localVarReturnType = new TypeToken<CurrentObsGroup>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Returns a current observation by city id. (asynchronously)
     * Returns current weather observation - Given a City ID. 
     * @param cityId City ID. Example: 4487042 (required)
     * @param key Your registered API key. (required)
     * @param units Convert to units. Default Metric See &lt;a target&#x3D;&#39;blank&#39; href&#x3D;&#39;/api/requests&#39;&gt;units field description&lt;/a&gt; (optional)
     * @param include Include 1 hour - minutely forecast in the response (optional)
     * @param marine Marine stations only (buoys, oil platforms, etc) (optional)
     * @param lang Language (Default: English) See &lt;a target&#x3D;&#39;blank&#39; href&#x3D;&#39;/api/requests&#39;&gt;language field description&lt;/a&gt; (optional)
     * @param paramCallback Wraps return in jsonp callback - Example - callback&#x3D;func (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> An Observation Group object. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> No Data. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call currentcityIdcityIdGetAsync(String cityId, String key, String units, String include, String marine, String lang, String paramCallback, final ApiCallback<CurrentObsGroup> _callback) throws ApiException {

        okhttp3.Call localVarCall = currentcityIdcityIdGetValidateBeforeCall(cityId, key, units, include, marine, lang, paramCallback, _callback);
        Type localVarReturnType = new TypeToken<CurrentObsGroup>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for currentcitycitycountrycountryGet
     * @param city City search.. Example - &amp;city&#x3D;Raleigh,NC or &amp;city&#x3D;Berlin,DE or city&#x3D;Paris&amp;country&#x3D;FR (required)
     * @param country Country Code (2 letter). (required)
     * @param key Your registered API key. (required)
     * @param include Include 1 hour - minutely forecast in the response (optional)
     * @param state Full name of state. (optional)
     * @param marine Marine stations only (buoys, oil platforms, etc) (optional)
     * @param units Convert to units. Default Metric See &lt;a target&#x3D;&#39;blank&#39; href&#x3D;&#39;/api/requests&#39;&gt;units field description&lt;/a&gt; (optional)
     * @param lang Language (Default: English) See &lt;a target&#x3D;&#39;blank&#39; href&#x3D;&#39;/api/requests&#39;&gt;language field description&lt;/a&gt; (optional)
     * @param paramCallback Wraps return in jsonp callback - Example - callback&#x3D;func (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> An Observation Group object. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> No Data. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call currentcitycitycountrycountryGetCall(String city, String country, String key, String include, String state, String marine, String units, String lang, String paramCallback, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/current?city={city}&country={country}"
            .replace("{" + "city" + "}", localVarApiClient.escapeString(city.toString()))
            .replace("{" + "country" + "}", localVarApiClient.escapeString(country.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (include != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("include", include));
        }

        if (state != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("state", state));
        }

        if (marine != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("marine", marine));
        }

        if (units != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("units", units));
        }

        if (lang != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("lang", lang));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        if (key != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("key", key));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call currentcitycitycountrycountryGetValidateBeforeCall(String city, String country, String key, String include, String state, String marine, String units, String lang, String paramCallback, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'city' is set
        if (city == null) {
            throw new ApiException("Missing the required parameter 'city' when calling currentcitycitycountrycountryGet(Async)");
        }

        // verify the required parameter 'country' is set
        if (country == null) {
            throw new ApiException("Missing the required parameter 'country' when calling currentcitycitycountrycountryGet(Async)");
        }

        // verify the required parameter 'key' is set
        if (key == null) {
            throw new ApiException("Missing the required parameter 'key' when calling currentcitycitycountrycountryGet(Async)");
        }

        return currentcitycitycountrycountryGetCall(city, country, key, include, state, marine, units, lang, paramCallback, _callback);

    }

    /**
     * Returns a Current Observation - Given City and/or State, Country.
     * Returns a Current Observation - Given a city in the format of City,ST or City. The state, and country parameters can be provided to make the search more accurate.
     * @param city City search.. Example - &amp;city&#x3D;Raleigh,NC or &amp;city&#x3D;Berlin,DE or city&#x3D;Paris&amp;country&#x3D;FR (required)
     * @param country Country Code (2 letter). (required)
     * @param key Your registered API key. (required)
     * @param include Include 1 hour - minutely forecast in the response (optional)
     * @param state Full name of state. (optional)
     * @param marine Marine stations only (buoys, oil platforms, etc) (optional)
     * @param units Convert to units. Default Metric See &lt;a target&#x3D;&#39;blank&#39; href&#x3D;&#39;/api/requests&#39;&gt;units field description&lt;/a&gt; (optional)
     * @param lang Language (Default: English) See &lt;a target&#x3D;&#39;blank&#39; href&#x3D;&#39;/api/requests&#39;&gt;language field description&lt;/a&gt; (optional)
     * @param paramCallback Wraps return in jsonp callback - Example - callback&#x3D;func (optional)
     * @return CurrentObsGroup
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> An Observation Group object. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> No Data. </td><td>  -  </td></tr>
     </table>
     */
    public CurrentObsGroup currentcitycitycountrycountryGet(String city, String country, String key, String include, String state, String marine, String units, String lang, String paramCallback) throws ApiException {
        ApiResponse<CurrentObsGroup> localVarResp = currentcitycitycountrycountryGetWithHttpInfo(city, country, key, include, state, marine, units, lang, paramCallback);
        return localVarResp.getData();
    }

    /**
     * Returns a Current Observation - Given City and/or State, Country.
     * Returns a Current Observation - Given a city in the format of City,ST or City. The state, and country parameters can be provided to make the search more accurate.
     * @param city City search.. Example - &amp;city&#x3D;Raleigh,NC or &amp;city&#x3D;Berlin,DE or city&#x3D;Paris&amp;country&#x3D;FR (required)
     * @param country Country Code (2 letter). (required)
     * @param key Your registered API key. (required)
     * @param include Include 1 hour - minutely forecast in the response (optional)
     * @param state Full name of state. (optional)
     * @param marine Marine stations only (buoys, oil platforms, etc) (optional)
     * @param units Convert to units. Default Metric See &lt;a target&#x3D;&#39;blank&#39; href&#x3D;&#39;/api/requests&#39;&gt;units field description&lt;/a&gt; (optional)
     * @param lang Language (Default: English) See &lt;a target&#x3D;&#39;blank&#39; href&#x3D;&#39;/api/requests&#39;&gt;language field description&lt;/a&gt; (optional)
     * @param paramCallback Wraps return in jsonp callback - Example - callback&#x3D;func (optional)
     * @return ApiResponse&lt;CurrentObsGroup&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> An Observation Group object. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> No Data. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<CurrentObsGroup> currentcitycitycountrycountryGetWithHttpInfo(String city, String country, String key, String include, String state, String marine, String units, String lang, String paramCallback) throws ApiException {
        okhttp3.Call localVarCall = currentcitycitycountrycountryGetValidateBeforeCall(city, country, key, include, state, marine, units, lang, paramCallback, null);
        Type localVarReturnType = new TypeToken<CurrentObsGroup>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Returns a Current Observation - Given City and/or State, Country. (asynchronously)
     * Returns a Current Observation - Given a city in the format of City,ST or City. The state, and country parameters can be provided to make the search more accurate.
     * @param city City search.. Example - &amp;city&#x3D;Raleigh,NC or &amp;city&#x3D;Berlin,DE or city&#x3D;Paris&amp;country&#x3D;FR (required)
     * @param country Country Code (2 letter). (required)
     * @param key Your registered API key. (required)
     * @param include Include 1 hour - minutely forecast in the response (optional)
     * @param state Full name of state. (optional)
     * @param marine Marine stations only (buoys, oil platforms, etc) (optional)
     * @param units Convert to units. Default Metric See &lt;a target&#x3D;&#39;blank&#39; href&#x3D;&#39;/api/requests&#39;&gt;units field description&lt;/a&gt; (optional)
     * @param lang Language (Default: English) See &lt;a target&#x3D;&#39;blank&#39; href&#x3D;&#39;/api/requests&#39;&gt;language field description&lt;/a&gt; (optional)
     * @param paramCallback Wraps return in jsonp callback - Example - callback&#x3D;func (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> An Observation Group object. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> No Data. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call currentcitycitycountrycountryGetAsync(String city, String country, String key, String include, String state, String marine, String units, String lang, String paramCallback, final ApiCallback<CurrentObsGroup> _callback) throws ApiException {

        okhttp3.Call localVarCall = currentcitycitycountrycountryGetValidateBeforeCall(city, country, key, include, state, marine, units, lang, paramCallback, _callback);
        Type localVarReturnType = new TypeToken<CurrentObsGroup>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for currentlatlatlonlonGet
     * @param lat Latitude component of location. (required)
     * @param lon Longitude component of location. (required)
     * @param key Your registered API key. (required)
     * @param include Include 1 hour - minutely forecast in the response (optional)
     * @param marine Marine stations only (buoys, oil platforms, etc) (optional)
     * @param units Convert to units. Default Metric See &lt;a target&#x3D;&#39;blank&#39; href&#x3D;&#39;/api/requests&#39;&gt;units field description&lt;/a&gt; (optional)
     * @param lang Language (Default: English) See &lt;a target&#x3D;&#39;blank&#39; href&#x3D;&#39;/api/requests&#39;&gt;language field description&lt;/a&gt; (optional)
     * @param paramCallback Wraps return in jsonp callback - Example - callback&#x3D;func (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> An Observation Group object. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> No Data. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call currentlatlatlonlonGetCall(Double lat, Double lon, String key, String include, String marine, String units, String lang, String paramCallback, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/current?lat={lat}&lon={lon}"
            .replace("{" + "lat" + "}", localVarApiClient.escapeString(lat.toString()))
            .replace("{" + "lon" + "}", localVarApiClient.escapeString(lon.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (include != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("include", include));
        }

        if (marine != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("marine", marine));
        }

        if (units != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("units", units));
        }

        if (lang != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("lang", lang));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        if (key != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("key", key));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call currentlatlatlonlonGetValidateBeforeCall(Double lat, Double lon, String key, String include, String marine, String units, String lang, String paramCallback, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'lat' is set
        if (lat == null) {
            throw new ApiException("Missing the required parameter 'lat' when calling currentlatlatlonlonGet(Async)");
        }

        // verify the required parameter 'lon' is set
        if (lon == null) {
            throw new ApiException("Missing the required parameter 'lon' when calling currentlatlatlonlonGet(Async)");
        }

        // verify the required parameter 'key' is set
        if (key == null) {
            throw new ApiException("Missing the required parameter 'key' when calling currentlatlatlonlonGet(Async)");
        }

        return currentlatlatlonlonGetCall(lat, lon, key, include, marine, units, lang, paramCallback, _callback);

    }

    /**
     * Returns a Current Observation - Given a lat/lon.
     * Returns a Current Observation - given a lat, and a lon.
     * @param lat Latitude component of location. (required)
     * @param lon Longitude component of location. (required)
     * @param key Your registered API key. (required)
     * @param include Include 1 hour - minutely forecast in the response (optional)
     * @param marine Marine stations only (buoys, oil platforms, etc) (optional)
     * @param units Convert to units. Default Metric See &lt;a target&#x3D;&#39;blank&#39; href&#x3D;&#39;/api/requests&#39;&gt;units field description&lt;/a&gt; (optional)
     * @param lang Language (Default: English) See &lt;a target&#x3D;&#39;blank&#39; href&#x3D;&#39;/api/requests&#39;&gt;language field description&lt;/a&gt; (optional)
     * @param paramCallback Wraps return in jsonp callback - Example - callback&#x3D;func (optional)
     * @return CurrentObsGroup
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> An Observation Group object. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> No Data. </td><td>  -  </td></tr>
     </table>
     */
    public CurrentObsGroup currentlatlatlonlonGet(Double lat, Double lon, String key, String include, String marine, String units, String lang, String paramCallback) throws ApiException {
        ApiResponse<CurrentObsGroup> localVarResp = currentlatlatlonlonGetWithHttpInfo(lat, lon, key, include, marine, units, lang, paramCallback);
        return localVarResp.getData();
    }

    /**
     * Returns a Current Observation - Given a lat/lon.
     * Returns a Current Observation - given a lat, and a lon.
     * @param lat Latitude component of location. (required)
     * @param lon Longitude component of location. (required)
     * @param key Your registered API key. (required)
     * @param include Include 1 hour - minutely forecast in the response (optional)
     * @param marine Marine stations only (buoys, oil platforms, etc) (optional)
     * @param units Convert to units. Default Metric See &lt;a target&#x3D;&#39;blank&#39; href&#x3D;&#39;/api/requests&#39;&gt;units field description&lt;/a&gt; (optional)
     * @param lang Language (Default: English) See &lt;a target&#x3D;&#39;blank&#39; href&#x3D;&#39;/api/requests&#39;&gt;language field description&lt;/a&gt; (optional)
     * @param paramCallback Wraps return in jsonp callback - Example - callback&#x3D;func (optional)
     * @return ApiResponse&lt;CurrentObsGroup&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> An Observation Group object. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> No Data. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<CurrentObsGroup> currentlatlatlonlonGetWithHttpInfo(Double lat, Double lon, String key, String include, String marine, String units, String lang, String paramCallback) throws ApiException {
        okhttp3.Call localVarCall = currentlatlatlonlonGetValidateBeforeCall(lat, lon, key, include, marine, units, lang, paramCallback, null);
        Type localVarReturnType = new TypeToken<CurrentObsGroup>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Returns a Current Observation - Given a lat/lon. (asynchronously)
     * Returns a Current Observation - given a lat, and a lon.
     * @param lat Latitude component of location. (required)
     * @param lon Longitude component of location. (required)
     * @param key Your registered API key. (required)
     * @param include Include 1 hour - minutely forecast in the response (optional)
     * @param marine Marine stations only (buoys, oil platforms, etc) (optional)
     * @param units Convert to units. Default Metric See &lt;a target&#x3D;&#39;blank&#39; href&#x3D;&#39;/api/requests&#39;&gt;units field description&lt;/a&gt; (optional)
     * @param lang Language (Default: English) See &lt;a target&#x3D;&#39;blank&#39; href&#x3D;&#39;/api/requests&#39;&gt;language field description&lt;/a&gt; (optional)
     * @param paramCallback Wraps return in jsonp callback - Example - callback&#x3D;func (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> An Observation Group object. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> No Data. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call currentlatlatlonlonGetAsync(Double lat, Double lon, String key, String include, String marine, String units, String lang, String paramCallback, final ApiCallback<CurrentObsGroup> _callback) throws ApiException {

        okhttp3.Call localVarCall = currentlatlatlonlonGetValidateBeforeCall(lat, lon, key, include, marine, units, lang, paramCallback, _callback);
        Type localVarReturnType = new TypeToken<CurrentObsGroup>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for currentpointspointsGet
     * @param points Comma separated list of points. Example: (35.5, -75.5),(45, 65),(45.12, -130.5) (required)
     * @param key Your registered API key. (required)
     * @param units Convert to units. Default Metric See &lt;a target&#x3D;&#39;blank&#39; href&#x3D;&#39;/api/requests&#39;&gt;units field description&lt;/a&gt; (optional)
     * @param lang Language (Default: English) See &lt;a target&#x3D;&#39;blank&#39; href&#x3D;&#39;/api/requests&#39;&gt;language field description&lt;/a&gt; (optional)
     * @param paramCallback Wraps return in jsonp callback. Example: callback&#x3D;func (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> An Observation Group object. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> No Data. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call currentpointspointsGetCall(String points, String key, String units, String lang, String paramCallback, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/current?points={points}"
            .replace("{" + "points" + "}", localVarApiClient.escapeString(points.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (units != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("units", units));
        }

        if (lang != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("lang", lang));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        if (key != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("key", key));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call currentpointspointsGetValidateBeforeCall(String points, String key, String units, String lang, String paramCallback, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'points' is set
        if (points == null) {
            throw new ApiException("Missing the required parameter 'points' when calling currentpointspointsGet(Async)");
        }

        // verify the required parameter 'key' is set
        if (key == null) {
            throw new ApiException("Missing the required parameter 'key' when calling currentpointspointsGet(Async)");
        }

        return currentpointspointsGetCall(points, key, units, lang, paramCallback, _callback);

    }

    /**
     * Returns a group of observations given a list of points in the format (lat1, lon1), (lat2, lon2), (latN, lonN), ...
     * Returns a group of Current Observations - Given a list of points (lat1, lon1), (lat2, lon2), (latN, lonN), ...
     * @param points Comma separated list of points. Example: (35.5, -75.5),(45, 65),(45.12, -130.5) (required)
     * @param key Your registered API key. (required)
     * @param units Convert to units. Default Metric See &lt;a target&#x3D;&#39;blank&#39; href&#x3D;&#39;/api/requests&#39;&gt;units field description&lt;/a&gt; (optional)
     * @param lang Language (Default: English) See &lt;a target&#x3D;&#39;blank&#39; href&#x3D;&#39;/api/requests&#39;&gt;language field description&lt;/a&gt; (optional)
     * @param paramCallback Wraps return in jsonp callback. Example: callback&#x3D;func (optional)
     * @return CurrentObsGroup
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> An Observation Group object. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> No Data. </td><td>  -  </td></tr>
     </table>
     */
    public CurrentObsGroup currentpointspointsGet(String points, String key, String units, String lang, String paramCallback) throws ApiException {
        ApiResponse<CurrentObsGroup> localVarResp = currentpointspointsGetWithHttpInfo(points, key, units, lang, paramCallback);
        return localVarResp.getData();
    }

    /**
     * Returns a group of observations given a list of points in the format (lat1, lon1), (lat2, lon2), (latN, lonN), ...
     * Returns a group of Current Observations - Given a list of points (lat1, lon1), (lat2, lon2), (latN, lonN), ...
     * @param points Comma separated list of points. Example: (35.5, -75.5),(45, 65),(45.12, -130.5) (required)
     * @param key Your registered API key. (required)
     * @param units Convert to units. Default Metric See &lt;a target&#x3D;&#39;blank&#39; href&#x3D;&#39;/api/requests&#39;&gt;units field description&lt;/a&gt; (optional)
     * @param lang Language (Default: English) See &lt;a target&#x3D;&#39;blank&#39; href&#x3D;&#39;/api/requests&#39;&gt;language field description&lt;/a&gt; (optional)
     * @param paramCallback Wraps return in jsonp callback. Example: callback&#x3D;func (optional)
     * @return ApiResponse&lt;CurrentObsGroup&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> An Observation Group object. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> No Data. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<CurrentObsGroup> currentpointspointsGetWithHttpInfo(String points, String key, String units, String lang, String paramCallback) throws ApiException {
        okhttp3.Call localVarCall = currentpointspointsGetValidateBeforeCall(points, key, units, lang, paramCallback, null);
        Type localVarReturnType = new TypeToken<CurrentObsGroup>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Returns a group of observations given a list of points in the format (lat1, lon1), (lat2, lon2), (latN, lonN), ... (asynchronously)
     * Returns a group of Current Observations - Given a list of points (lat1, lon1), (lat2, lon2), (latN, lonN), ...
     * @param points Comma separated list of points. Example: (35.5, -75.5),(45, 65),(45.12, -130.5) (required)
     * @param key Your registered API key. (required)
     * @param units Convert to units. Default Metric See &lt;a target&#x3D;&#39;blank&#39; href&#x3D;&#39;/api/requests&#39;&gt;units field description&lt;/a&gt; (optional)
     * @param lang Language (Default: English) See &lt;a target&#x3D;&#39;blank&#39; href&#x3D;&#39;/api/requests&#39;&gt;language field description&lt;/a&gt; (optional)
     * @param paramCallback Wraps return in jsonp callback. Example: callback&#x3D;func (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> An Observation Group object. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> No Data. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call currentpointspointsGetAsync(String points, String key, String units, String lang, String paramCallback, final ApiCallback<CurrentObsGroup> _callback) throws ApiException {

        okhttp3.Call localVarCall = currentpointspointsGetValidateBeforeCall(points, key, units, lang, paramCallback, _callback);
        Type localVarReturnType = new TypeToken<CurrentObsGroup>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for currentpostalCodepostalCodeGet
     * @param postalCode Postal Code. Example: 28546 (required)
     * @param key Your registered API key. (required)
     * @param country Country Code (2 letter). (optional)
     * @param include Include 1 hour - minutely forecast in the response (optional)
     * @param marine Marine stations only (buoys, oil platforms, etc) (optional)
     * @param units Convert to units. Default Metric See &lt;a target&#x3D;&#39;blank&#39; href&#x3D;&#39;/api/requests&#39;&gt;units field description&lt;/a&gt; (optional)
     * @param lang Language (Default: English) See &lt;a target&#x3D;&#39;blank&#39; href&#x3D;&#39;/api/requests&#39;&gt;language field description&lt;/a&gt; (optional)
     * @param paramCallback Wraps return in jsonp callback - Example - callback&#x3D;func (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> An Observation Group object. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> No Data. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call currentpostalCodepostalCodeGetCall(String postalCode, String key, String country, String include, String marine, String units, String lang, String paramCallback, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/current?postal_code={postal_code}"
            .replace("{" + "postal_code" + "}", localVarApiClient.escapeString(postalCode.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (country != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("country", country));
        }

        if (include != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("include", include));
        }

        if (marine != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("marine", marine));
        }

        if (units != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("units", units));
        }

        if (lang != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("lang", lang));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        if (key != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("key", key));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call currentpostalCodepostalCodeGetValidateBeforeCall(String postalCode, String key, String country, String include, String marine, String units, String lang, String paramCallback, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'postalCode' is set
        if (postalCode == null) {
            throw new ApiException("Missing the required parameter 'postalCode' when calling currentpostalCodepostalCodeGet(Async)");
        }

        // verify the required parameter 'key' is set
        if (key == null) {
            throw new ApiException("Missing the required parameter 'key' when calling currentpostalCodepostalCodeGet(Async)");
        }

        return currentpostalCodepostalCodeGetCall(postalCode, key, country, include, marine, units, lang, paramCallback, _callback);

    }

    /**
     * Returns a current observation by postal code.
     * Returns current weather observation - Given a Postal Code. 
     * @param postalCode Postal Code. Example: 28546 (required)
     * @param key Your registered API key. (required)
     * @param country Country Code (2 letter). (optional)
     * @param include Include 1 hour - minutely forecast in the response (optional)
     * @param marine Marine stations only (buoys, oil platforms, etc) (optional)
     * @param units Convert to units. Default Metric See &lt;a target&#x3D;&#39;blank&#39; href&#x3D;&#39;/api/requests&#39;&gt;units field description&lt;/a&gt; (optional)
     * @param lang Language (Default: English) See &lt;a target&#x3D;&#39;blank&#39; href&#x3D;&#39;/api/requests&#39;&gt;language field description&lt;/a&gt; (optional)
     * @param paramCallback Wraps return in jsonp callback - Example - callback&#x3D;func (optional)
     * @return CurrentObsGroup
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> An Observation Group object. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> No Data. </td><td>  -  </td></tr>
     </table>
     */
    public CurrentObsGroup currentpostalCodepostalCodeGet(String postalCode, String key, String country, String include, String marine, String units, String lang, String paramCallback) throws ApiException {
        ApiResponse<CurrentObsGroup> localVarResp = currentpostalCodepostalCodeGetWithHttpInfo(postalCode, key, country, include, marine, units, lang, paramCallback);
        return localVarResp.getData();
    }

    /**
     * Returns a current observation by postal code.
     * Returns current weather observation - Given a Postal Code. 
     * @param postalCode Postal Code. Example: 28546 (required)
     * @param key Your registered API key. (required)
     * @param country Country Code (2 letter). (optional)
     * @param include Include 1 hour - minutely forecast in the response (optional)
     * @param marine Marine stations only (buoys, oil platforms, etc) (optional)
     * @param units Convert to units. Default Metric See &lt;a target&#x3D;&#39;blank&#39; href&#x3D;&#39;/api/requests&#39;&gt;units field description&lt;/a&gt; (optional)
     * @param lang Language (Default: English) See &lt;a target&#x3D;&#39;blank&#39; href&#x3D;&#39;/api/requests&#39;&gt;language field description&lt;/a&gt; (optional)
     * @param paramCallback Wraps return in jsonp callback - Example - callback&#x3D;func (optional)
     * @return ApiResponse&lt;CurrentObsGroup&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> An Observation Group object. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> No Data. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<CurrentObsGroup> currentpostalCodepostalCodeGetWithHttpInfo(String postalCode, String key, String country, String include, String marine, String units, String lang, String paramCallback) throws ApiException {
        okhttp3.Call localVarCall = currentpostalCodepostalCodeGetValidateBeforeCall(postalCode, key, country, include, marine, units, lang, paramCallback, null);
        Type localVarReturnType = new TypeToken<CurrentObsGroup>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Returns a current observation by postal code. (asynchronously)
     * Returns current weather observation - Given a Postal Code. 
     * @param postalCode Postal Code. Example: 28546 (required)
     * @param key Your registered API key. (required)
     * @param country Country Code (2 letter). (optional)
     * @param include Include 1 hour - minutely forecast in the response (optional)
     * @param marine Marine stations only (buoys, oil platforms, etc) (optional)
     * @param units Convert to units. Default Metric See &lt;a target&#x3D;&#39;blank&#39; href&#x3D;&#39;/api/requests&#39;&gt;units field description&lt;/a&gt; (optional)
     * @param lang Language (Default: English) See &lt;a target&#x3D;&#39;blank&#39; href&#x3D;&#39;/api/requests&#39;&gt;language field description&lt;/a&gt; (optional)
     * @param paramCallback Wraps return in jsonp callback - Example - callback&#x3D;func (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> An Observation Group object. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> No Data. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call currentpostalCodepostalCodeGetAsync(String postalCode, String key, String country, String include, String marine, String units, String lang, String paramCallback, final ApiCallback<CurrentObsGroup> _callback) throws ApiException {

        okhttp3.Call localVarCall = currentpostalCodepostalCodeGetValidateBeforeCall(postalCode, key, country, include, marine, units, lang, paramCallback, _callback);
        Type localVarReturnType = new TypeToken<CurrentObsGroup>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for currentstationsstationsGet
     * @param stations Comma separated list of Station Call ID&#39;s. Example: KRDU,KBFI,KVNY (required)
     * @param key Your registered API key. (required)
     * @param units Convert to units. Default Metric See &lt;a target&#x3D;&#39;blank&#39; href&#x3D;&#39;/api/requests&#39;&gt;units field description&lt;/a&gt; (optional)
     * @param lang Language (Default: English) See &lt;a target&#x3D;&#39;blank&#39; href&#x3D;&#39;/api/requests&#39;&gt;language field description&lt;/a&gt; (optional)
     * @param paramCallback Wraps return in jsonp callback. Example: callback&#x3D;func (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> An Observation Group object. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> No Data. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call currentstationsstationsGetCall(String stations, String key, String units, String lang, String paramCallback, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/current?stations={stations}"
            .replace("{" + "stations" + "}", localVarApiClient.escapeString(stations.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (units != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("units", units));
        }

        if (lang != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("lang", lang));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        if (key != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("key", key));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call currentstationsstationsGetValidateBeforeCall(String stations, String key, String units, String lang, String paramCallback, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'stations' is set
        if (stations == null) {
            throw new ApiException("Missing the required parameter 'stations' when calling currentstationsstationsGet(Async)");
        }

        // verify the required parameter 'key' is set
        if (key == null) {
            throw new ApiException("Missing the required parameter 'key' when calling currentstationsstationsGet(Async)");
        }

        return currentstationsstationsGetCall(stations, key, units, lang, paramCallback, _callback);

    }

    /**
     * Returns a group of observations given a list of stations
     * Returns a group of Current Observations - Given a list of Station Call IDs. 
     * @param stations Comma separated list of Station Call ID&#39;s. Example: KRDU,KBFI,KVNY (required)
     * @param key Your registered API key. (required)
     * @param units Convert to units. Default Metric See &lt;a target&#x3D;&#39;blank&#39; href&#x3D;&#39;/api/requests&#39;&gt;units field description&lt;/a&gt; (optional)
     * @param lang Language (Default: English) See &lt;a target&#x3D;&#39;blank&#39; href&#x3D;&#39;/api/requests&#39;&gt;language field description&lt;/a&gt; (optional)
     * @param paramCallback Wraps return in jsonp callback. Example: callback&#x3D;func (optional)
     * @return CurrentObsGroup
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> An Observation Group object. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> No Data. </td><td>  -  </td></tr>
     </table>
     */
    public CurrentObsGroup currentstationsstationsGet(String stations, String key, String units, String lang, String paramCallback) throws ApiException {
        ApiResponse<CurrentObsGroup> localVarResp = currentstationsstationsGetWithHttpInfo(stations, key, units, lang, paramCallback);
        return localVarResp.getData();
    }

    /**
     * Returns a group of observations given a list of stations
     * Returns a group of Current Observations - Given a list of Station Call IDs. 
     * @param stations Comma separated list of Station Call ID&#39;s. Example: KRDU,KBFI,KVNY (required)
     * @param key Your registered API key. (required)
     * @param units Convert to units. Default Metric See &lt;a target&#x3D;&#39;blank&#39; href&#x3D;&#39;/api/requests&#39;&gt;units field description&lt;/a&gt; (optional)
     * @param lang Language (Default: English) See &lt;a target&#x3D;&#39;blank&#39; href&#x3D;&#39;/api/requests&#39;&gt;language field description&lt;/a&gt; (optional)
     * @param paramCallback Wraps return in jsonp callback. Example: callback&#x3D;func (optional)
     * @return ApiResponse&lt;CurrentObsGroup&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> An Observation Group object. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> No Data. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<CurrentObsGroup> currentstationsstationsGetWithHttpInfo(String stations, String key, String units, String lang, String paramCallback) throws ApiException {
        okhttp3.Call localVarCall = currentstationsstationsGetValidateBeforeCall(stations, key, units, lang, paramCallback, null);
        Type localVarReturnType = new TypeToken<CurrentObsGroup>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Returns a group of observations given a list of stations (asynchronously)
     * Returns a group of Current Observations - Given a list of Station Call IDs. 
     * @param stations Comma separated list of Station Call ID&#39;s. Example: KRDU,KBFI,KVNY (required)
     * @param key Your registered API key. (required)
     * @param units Convert to units. Default Metric See &lt;a target&#x3D;&#39;blank&#39; href&#x3D;&#39;/api/requests&#39;&gt;units field description&lt;/a&gt; (optional)
     * @param lang Language (Default: English) See &lt;a target&#x3D;&#39;blank&#39; href&#x3D;&#39;/api/requests&#39;&gt;language field description&lt;/a&gt; (optional)
     * @param paramCallback Wraps return in jsonp callback. Example: callback&#x3D;func (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> An Observation Group object. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> No Data. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call currentstationsstationsGetAsync(String stations, String key, String units, String lang, String paramCallback, final ApiCallback<CurrentObsGroup> _callback) throws ApiException {

        okhttp3.Call localVarCall = currentstationsstationsGetValidateBeforeCall(stations, key, units, lang, paramCallback, _callback);
        Type localVarReturnType = new TypeToken<CurrentObsGroup>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for currentstationstationGet
     * @param station Station Call ID. (required)
     * @param key Your registered API key. (required)
     * @param include Include 1 hour - minutely forecast in the response (optional)
     * @param units Convert to units. Default Metric See &lt;a target&#x3D;&#39;blank&#39; href&#x3D;&#39;/api/requests&#39;&gt;units field description&lt;/a&gt; (optional)
     * @param lang Language (Default: English) See &lt;a target&#x3D;&#39;blank&#39; href&#x3D;&#39;/api/requests&#39;&gt;language field description&lt;/a&gt; (optional)
     * @param paramCallback Wraps return in jsonp callback. Example: callback&#x3D;func (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> An Observation Group object. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> No Data. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call currentstationstationGetCall(String station, String key, String include, String units, String lang, String paramCallback, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/current?station={station}"
            .replace("{" + "station" + "}", localVarApiClient.escapeString(station.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (include != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("include", include));
        }

        if (units != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("units", units));
        }

        if (lang != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("lang", lang));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        if (key != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("key", key));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call currentstationstationGetValidateBeforeCall(String station, String key, String include, String units, String lang, String paramCallback, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'station' is set
        if (station == null) {
            throw new ApiException("Missing the required parameter 'station' when calling currentstationstationGet(Async)");
        }

        // verify the required parameter 'key' is set
        if (key == null) {
            throw new ApiException("Missing the required parameter 'key' when calling currentstationstationGet(Async)");
        }

        return currentstationstationGetCall(station, key, include, units, lang, paramCallback, _callback);

    }

    /**
     * Returns a Current Observation. - Given a station ID.
     * Returns a Current Observation - Given a station ID.
     * @param station Station Call ID. (required)
     * @param key Your registered API key. (required)
     * @param include Include 1 hour - minutely forecast in the response (optional)
     * @param units Convert to units. Default Metric See &lt;a target&#x3D;&#39;blank&#39; href&#x3D;&#39;/api/requests&#39;&gt;units field description&lt;/a&gt; (optional)
     * @param lang Language (Default: English) See &lt;a target&#x3D;&#39;blank&#39; href&#x3D;&#39;/api/requests&#39;&gt;language field description&lt;/a&gt; (optional)
     * @param paramCallback Wraps return in jsonp callback. Example: callback&#x3D;func (optional)
     * @return CurrentObsGroup
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> An Observation Group object. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> No Data. </td><td>  -  </td></tr>
     </table>
     */
    public CurrentObsGroup currentstationstationGet(String station, String key, String include, String units, String lang, String paramCallback) throws ApiException {
        ApiResponse<CurrentObsGroup> localVarResp = currentstationstationGetWithHttpInfo(station, key, include, units, lang, paramCallback);
        return localVarResp.getData();
    }

    /**
     * Returns a Current Observation. - Given a station ID.
     * Returns a Current Observation - Given a station ID.
     * @param station Station Call ID. (required)
     * @param key Your registered API key. (required)
     * @param include Include 1 hour - minutely forecast in the response (optional)
     * @param units Convert to units. Default Metric See &lt;a target&#x3D;&#39;blank&#39; href&#x3D;&#39;/api/requests&#39;&gt;units field description&lt;/a&gt; (optional)
     * @param lang Language (Default: English) See &lt;a target&#x3D;&#39;blank&#39; href&#x3D;&#39;/api/requests&#39;&gt;language field description&lt;/a&gt; (optional)
     * @param paramCallback Wraps return in jsonp callback. Example: callback&#x3D;func (optional)
     * @return ApiResponse&lt;CurrentObsGroup&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> An Observation Group object. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> No Data. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<CurrentObsGroup> currentstationstationGetWithHttpInfo(String station, String key, String include, String units, String lang, String paramCallback) throws ApiException {
        okhttp3.Call localVarCall = currentstationstationGetValidateBeforeCall(station, key, include, units, lang, paramCallback, null);
        Type localVarReturnType = new TypeToken<CurrentObsGroup>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Returns a Current Observation. - Given a station ID. (asynchronously)
     * Returns a Current Observation - Given a station ID.
     * @param station Station Call ID. (required)
     * @param key Your registered API key. (required)
     * @param include Include 1 hour - minutely forecast in the response (optional)
     * @param units Convert to units. Default Metric See &lt;a target&#x3D;&#39;blank&#39; href&#x3D;&#39;/api/requests&#39;&gt;units field description&lt;/a&gt; (optional)
     * @param lang Language (Default: English) See &lt;a target&#x3D;&#39;blank&#39; href&#x3D;&#39;/api/requests&#39;&gt;language field description&lt;/a&gt; (optional)
     * @param paramCallback Wraps return in jsonp callback. Example: callback&#x3D;func (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> An Observation Group object. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> No Data. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call currentstationstationGetAsync(String station, String key, String include, String units, String lang, String paramCallback, final ApiCallback<CurrentObsGroup> _callback) throws ApiException {

        okhttp3.Call localVarCall = currentstationstationGetValidateBeforeCall(station, key, include, units, lang, paramCallback, _callback);
        Type localVarReturnType = new TypeToken<CurrentObsGroup>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
