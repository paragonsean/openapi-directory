/*
 * Weatherbit - Interactive Swagger UI Documentation
 * This an interactive version of the documentation for the Weatherbit API.  The base URL for the API is [http://api.weatherbit.io/v2.0/](http://api.weatherbit.io/v2.0/) or [https://api.weatherbit.io/v2.0/](http://api.weatherbit.io/v2.0/). Below is the Swagger UI documentation for the API. All API requests require the `key` parameter.        An Example for a 48 hour forecast for London, UK would be `http://api.weatherbit.io/v2.0/forecast/hourly?lat=51.5072`&`lon=-0.1276`. See our [Weather API description page](https://www.weatherbit.io/api) for the full documentation.
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Error;
import org.openapitools.client.model.HistoryDay;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DailyHistoricalWeatherDataApi
 */
@Disabled
public class DailyHistoricalWeatherDataApiTest {

    private final DailyHistoricalWeatherDataApi api = new DailyHistoricalWeatherDataApi();

    /**
     * Returns Historical Observations - Given a City ID
     *
     * Returns Historical Observations - Given a City ID. **(LIMIT 1 year per request)**
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void historyDailycityIdcityIdGetTest() throws ApiException {
        String cityId = null;
        String startDate = null;
        String endDate = null;
        String key = null;
        String units = null;
        String lang = null;
        String paramCallback = null;
        HistoryDay response = api.historyDailycityIdcityIdGet(cityId, startDate, endDate, key, units, lang, paramCallback);
        // TODO: test validations
    }

    /**
     * Returns Historical Observations - Given City and/or State, Country.
     *
     * Returns Historical Observations - Given a city in the format of City,ST or City. The state, and country parameters can be provided to make the search more accurate. **(LIMIT 1 year per request)**
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void historyDailycitycitycountrycountryGetTest() throws ApiException {
        String city = null;
        String country = null;
        String startDate = null;
        String endDate = null;
        String key = null;
        String state = null;
        String units = null;
        String lang = null;
        String paramCallback = null;
        HistoryDay response = api.historyDailycitycitycountrycountryGet(city, country, startDate, endDate, key, state, units, lang, paramCallback);
        // TODO: test validations
    }

    /**
     * Returns Historical Observations - Given a lat/lon.
     *
     * Returns Historical Observations - Given a lat, and lon. **(LIMIT 1 year per request)**
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void historyDailylatlatlonlonGetTest() throws ApiException {
        Double lat = null;
        Double lon = null;
        String startDate = null;
        String endDate = null;
        String key = null;
        String units = null;
        String lang = null;
        String paramCallback = null;
        HistoryDay response = api.historyDailylatlatlonlonGet(lat, lon, startDate, endDate, key, units, lang, paramCallback);
        // TODO: test validations
    }

    /**
     * Returns Historical Observations - Given a Postal Code
     *
     * Returns Historical Observations - Given a Postal Code. **(LIMIT 1 year per request)**
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void historyDailypostalCodepostalCodeGetTest() throws ApiException {
        String postalCode = null;
        String startDate = null;
        String endDate = null;
        String key = null;
        String country = null;
        String units = null;
        String lang = null;
        String paramCallback = null;
        HistoryDay response = api.historyDailypostalCodepostalCodeGet(postalCode, startDate, endDate, key, country, units, lang, paramCallback);
        // TODO: test validations
    }

    /**
     * Returns Historical Observations - Given a station ID.
     *
     * Returns Historical Observations - Given a station ID. **(LIMIT 1 year per request)**
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void historyDailystationstationGetTest() throws ApiException {
        String station = null;
        String startDate = null;
        String endDate = null;
        String key = null;
        String units = null;
        String lang = null;
        String paramCallback = null;
        HistoryDay response = api.historyDailystationstationGet(station, startDate, endDate, key, units, lang, paramCallback);
        // TODO: test validations
    }

}
