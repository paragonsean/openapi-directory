/*
 * Weatherbit - Interactive Swagger UI Documentation
 * This an interactive version of the documentation for the Weatherbit API.  The base URL for the API is [http://api.weatherbit.io/v2.0/](http://api.weatherbit.io/v2.0/) or [https://api.weatherbit.io/v2.0/](http://api.weatherbit.io/v2.0/). Below is the Swagger UI documentation for the API. All API requests require the `key` parameter.        An Example for a 48 hour forecast for London, UK would be `http://api.weatherbit.io/v2.0/forecast/hourly?lat=51.5072`&`lon=-0.1276`. See our [Weather API description page](https://www.weatherbit.io/api) for the full documentation.
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import java.math.BigDecimal;
import org.openapitools.client.model.Error;
import org.openapitools.client.model.ForecastDay;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for Class16DayDailyForecastApi
 */
@Disabled
public class Class16DayDailyForecastApiTest {

    private final Class16DayDailyForecastApi api = new Class16DayDailyForecastApi();

    /**
     * Returns a daily forecast - Given a City ID.
     *
     * Returns a daily forecast, where each point represents one day (24hr) period. Every point has a datetime string in the format \&quot;YYYY-MM-DD\&quot;. One day begins at 00:00 UTC, and ends at 23:59 UTC. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void forecastDailycityIdcityIdGetTest() throws ApiException {
        Integer cityId = null;
        String key = null;
        BigDecimal days = null;
        String units = null;
        String lang = null;
        String paramCallback = null;
        ForecastDay response = api.forecastDailycityIdcityIdGet(cityId, key, days, units, lang, paramCallback);
        // TODO: test validations
    }

    /**
     * Returns a daily forecast - Given City and/or State, Country.
     *
     * Returns a daily forecast, where each point represents one day (24hr) period. Every point has a datetime string in the format \&quot;YYYY-MM-DD\&quot;. One day begins at 00:00 UTC, and ends at 23:59 UTC. Accepts a city in the format of City,ST or City. The state, and country parameters can be provided to make the search more accurate. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void forecastDailycitycitycountrycountryGetTest() throws ApiException {
        String city = null;
        String country = null;
        String key = null;
        String state = null;
        BigDecimal days = null;
        String units = null;
        String lang = null;
        String paramCallback = null;
        ForecastDay response = api.forecastDailycitycitycountrycountryGet(city, country, key, state, days, units, lang, paramCallback);
        // TODO: test validations
    }

    /**
     * Returns a daily forecast - Given Lat/Lon.
     *
     * Returns a daily forecast, where each point represents one day (24hr) period. Every point has a datetime string in the format \&quot;YYYY-MM-DD\&quot;. One day begins at 00:00 UTC, and ends at 23:59 UTC.  
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void forecastDailylatlatlonlonGetTest() throws ApiException {
        Double lat = null;
        Double lon = null;
        String key = null;
        BigDecimal days = null;
        String units = null;
        String lang = null;
        String paramCallback = null;
        ForecastDay response = api.forecastDailylatlatlonlonGet(lat, lon, key, days, units, lang, paramCallback);
        // TODO: test validations
    }

    /**
     * Returns a daily forecast - Given a Postal Code.
     *
     * Returns a daily forecast, where each point represents one day (24hr) period. Every point has a datetime string in the format \&quot;YYYY-MM-DD\&quot;. One day begins at 00:00 UTC, and ends at 23:59 UTC. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void forecastDailypostalCodepostalCodeGetTest() throws ApiException {
        Integer postalCode = null;
        String key = null;
        String country = null;
        BigDecimal days = null;
        String units = null;
        String lang = null;
        String paramCallback = null;
        ForecastDay response = api.forecastDailypostalCodepostalCodeGet(postalCode, key, country, days, units, lang, paramCallback);
        // TODO: test validations
    }

}
