# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.aq_hour import AQHour
from openapi_server import util


class AQHourly(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, city_name: str=None, country_code: str=None, data: List[AQHour]=None, lat: str=None, lon: str=None, state_code: str=None, timezone: str=None):
        """AQHourly - a model defined in OpenAPI

        :param city_name: The city_name of this AQHourly.
        :param country_code: The country_code of this AQHourly.
        :param data: The data of this AQHourly.
        :param lat: The lat of this AQHourly.
        :param lon: The lon of this AQHourly.
        :param state_code: The state_code of this AQHourly.
        :param timezone: The timezone of this AQHourly.
        """
        self.openapi_types = {
            'city_name': str,
            'country_code': str,
            'data': List[AQHour],
            'lat': str,
            'lon': str,
            'state_code': str,
            'timezone': str
        }

        self.attribute_map = {
            'city_name': 'city_name',
            'country_code': 'country_code',
            'data': 'data',
            'lat': 'lat',
            'lon': 'lon',
            'state_code': 'state_code',
            'timezone': 'timezone'
        }

        self._city_name = city_name
        self._country_code = country_code
        self._data = data
        self._lat = lat
        self._lon = lon
        self._state_code = state_code
        self._timezone = timezone

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AQHourly':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AQHourly of this AQHourly.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def city_name(self):
        """Gets the city_name of this AQHourly.

        City Name

        :return: The city_name of this AQHourly.
        :rtype: str
        """
        return self._city_name

    @city_name.setter
    def city_name(self, city_name):
        """Sets the city_name of this AQHourly.

        City Name

        :param city_name: The city_name of this AQHourly.
        :type city_name: str
        """

        self._city_name = city_name

    @property
    def country_code(self):
        """Gets the country_code of this AQHourly.

        Country Abbreviation

        :return: The country_code of this AQHourly.
        :rtype: str
        """
        return self._country_code

    @country_code.setter
    def country_code(self, country_code):
        """Sets the country_code of this AQHourly.

        Country Abbreviation

        :param country_code: The country_code of this AQHourly.
        :type country_code: str
        """

        self._country_code = country_code

    @property
    def data(self):
        """Gets the data of this AQHourly.


        :return: The data of this AQHourly.
        :rtype: List[AQHour]
        """
        return self._data

    @data.setter
    def data(self, data):
        """Sets the data of this AQHourly.


        :param data: The data of this AQHourly.
        :type data: List[AQHour]
        """

        self._data = data

    @property
    def lat(self):
        """Gets the lat of this AQHourly.

        Latitude

        :return: The lat of this AQHourly.
        :rtype: str
        """
        return self._lat

    @lat.setter
    def lat(self, lat):
        """Sets the lat of this AQHourly.

        Latitude

        :param lat: The lat of this AQHourly.
        :type lat: str
        """

        self._lat = lat

    @property
    def lon(self):
        """Gets the lon of this AQHourly.

        Longitude

        :return: The lon of this AQHourly.
        :rtype: str
        """
        return self._lon

    @lon.setter
    def lon(self, lon):
        """Sets the lon of this AQHourly.

        Longitude

        :param lon: The lon of this AQHourly.
        :type lon: str
        """

        self._lon = lon

    @property
    def state_code(self):
        """Gets the state_code of this AQHourly.

        State Abbreviation

        :return: The state_code of this AQHourly.
        :rtype: str
        """
        return self._state_code

    @state_code.setter
    def state_code(self, state_code):
        """Sets the state_code of this AQHourly.

        State Abbreviation

        :param state_code: The state_code of this AQHourly.
        :type state_code: str
        """

        self._state_code = state_code

    @property
    def timezone(self):
        """Gets the timezone of this AQHourly.

        Local IANA time zone

        :return: The timezone of this AQHourly.
        :rtype: str
        """
        return self._timezone

    @timezone.setter
    def timezone(self, timezone):
        """Sets the timezone of this AQHourly.

        Local IANA time zone

        :param timezone: The timezone of this AQHourly.
        :type timezone: str
        """

        self._timezone = timezone
