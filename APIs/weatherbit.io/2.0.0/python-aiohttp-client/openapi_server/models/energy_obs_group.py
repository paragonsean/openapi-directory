# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.energy_obs import EnergyObs
from openapi_server import util


class EnergyObsGroup(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, count: int=None, data: List[EnergyObs]=None, end_date: int=None, start_date: int=None):
        """EnergyObsGroup - a model defined in OpenAPI

        :param count: The count of this EnergyObsGroup.
        :param data: The data of this EnergyObsGroup.
        :param end_date: The end_date of this EnergyObsGroup.
        :param start_date: The start_date of this EnergyObsGroup.
        """
        self.openapi_types = {
            'count': int,
            'data': List[EnergyObs],
            'end_date': int,
            'start_date': int
        }

        self.attribute_map = {
            'count': 'count',
            'data': 'data',
            'end_date': 'end_date',
            'start_date': 'start_date'
        }

        self._count = count
        self._data = data
        self._end_date = end_date
        self._start_date = start_date

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EnergyObsGroup':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EnergyObsGroup of this EnergyObsGroup.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def count(self):
        """Gets the count of this EnergyObsGroup.

        Count of found observations

        :return: The count of this EnergyObsGroup.
        :rtype: int
        """
        return self._count

    @count.setter
    def count(self, count):
        """Sets the count of this EnergyObsGroup.

        Count of found observations

        :param count: The count of this EnergyObsGroup.
        :type count: int
        """

        self._count = count

    @property
    def data(self):
        """Gets the data of this EnergyObsGroup.


        :return: The data of this EnergyObsGroup.
        :rtype: List[EnergyObs]
        """
        return self._data

    @data.setter
    def data(self, data):
        """Sets the data of this EnergyObsGroup.


        :param data: The data of this EnergyObsGroup.
        :type data: List[EnergyObs]
        """

        self._data = data

    @property
    def end_date(self):
        """Gets the end_date of this EnergyObsGroup.

        End Date

        :return: The end_date of this EnergyObsGroup.
        :rtype: int
        """
        return self._end_date

    @end_date.setter
    def end_date(self, end_date):
        """Sets the end_date of this EnergyObsGroup.

        End Date

        :param end_date: The end_date of this EnergyObsGroup.
        :type end_date: int
        """

        self._end_date = end_date

    @property
    def start_date(self):
        """Gets the start_date of this EnergyObsGroup.

        Start Date

        :return: The start_date of this EnergyObsGroup.
        :rtype: int
        """
        return self._start_date

    @start_date.setter
    def start_date(self, start_date):
        """Sets the start_date of this EnergyObsGroup.

        Start Date

        :param start_date: The start_date of this EnergyObsGroup.
        :type start_date: int
        """

        self._start_date = start_date
