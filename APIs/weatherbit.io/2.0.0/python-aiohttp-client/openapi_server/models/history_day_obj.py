# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class HistoryDayObj(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, datetime: str=None, dewpt: float=None, dhi: int=None, dni: int=None, ghi: int=None, max_temp: float=None, max_temp_ts: float=None, max_uv: float=None, max_wind_dir: int=None, max_wind_spd: float=None, max_wind_spd_ts: float=None, min_temp: float=None, min_temp_ts: float=None, precip: float=None, precip_gpm: float=None, pres: float=None, revision_status: str=None, rh: int=None, slp: float=None, snow: float=None, snow_depth: float=None, t_dhi: int=None, t_dni: int=None, t_ghi: int=None, temp: float=None, ts: int=None, wind_dir: int=None, wind_gust_spd: float=None, wind_spd: float=None):
        """HistoryDayObj - a model defined in OpenAPI

        :param datetime: The datetime of this HistoryDayObj.
        :param dewpt: The dewpt of this HistoryDayObj.
        :param dhi: The dhi of this HistoryDayObj.
        :param dni: The dni of this HistoryDayObj.
        :param ghi: The ghi of this HistoryDayObj.
        :param max_temp: The max_temp of this HistoryDayObj.
        :param max_temp_ts: The max_temp_ts of this HistoryDayObj.
        :param max_uv: The max_uv of this HistoryDayObj.
        :param max_wind_dir: The max_wind_dir of this HistoryDayObj.
        :param max_wind_spd: The max_wind_spd of this HistoryDayObj.
        :param max_wind_spd_ts: The max_wind_spd_ts of this HistoryDayObj.
        :param min_temp: The min_temp of this HistoryDayObj.
        :param min_temp_ts: The min_temp_ts of this HistoryDayObj.
        :param precip: The precip of this HistoryDayObj.
        :param precip_gpm: The precip_gpm of this HistoryDayObj.
        :param pres: The pres of this HistoryDayObj.
        :param revision_status: The revision_status of this HistoryDayObj.
        :param rh: The rh of this HistoryDayObj.
        :param slp: The slp of this HistoryDayObj.
        :param snow: The snow of this HistoryDayObj.
        :param snow_depth: The snow_depth of this HistoryDayObj.
        :param t_dhi: The t_dhi of this HistoryDayObj.
        :param t_dni: The t_dni of this HistoryDayObj.
        :param t_ghi: The t_ghi of this HistoryDayObj.
        :param temp: The temp of this HistoryDayObj.
        :param ts: The ts of this HistoryDayObj.
        :param wind_dir: The wind_dir of this HistoryDayObj.
        :param wind_gust_spd: The wind_gust_spd of this HistoryDayObj.
        :param wind_spd: The wind_spd of this HistoryDayObj.
        """
        self.openapi_types = {
            'datetime': str,
            'dewpt': float,
            'dhi': int,
            'dni': int,
            'ghi': int,
            'max_temp': float,
            'max_temp_ts': float,
            'max_uv': float,
            'max_wind_dir': int,
            'max_wind_spd': float,
            'max_wind_spd_ts': float,
            'min_temp': float,
            'min_temp_ts': float,
            'precip': float,
            'precip_gpm': float,
            'pres': float,
            'revision_status': str,
            'rh': int,
            'slp': float,
            'snow': float,
            'snow_depth': float,
            't_dhi': int,
            't_dni': int,
            't_ghi': int,
            'temp': float,
            'ts': int,
            'wind_dir': int,
            'wind_gust_spd': float,
            'wind_spd': float
        }

        self.attribute_map = {
            'datetime': 'datetime',
            'dewpt': 'dewpt',
            'dhi': 'dhi',
            'dni': 'dni',
            'ghi': 'ghi',
            'max_temp': 'max_temp',
            'max_temp_ts': 'max_temp_ts',
            'max_uv': 'max_uv',
            'max_wind_dir': 'max_wind_dir',
            'max_wind_spd': 'max_wind_spd',
            'max_wind_spd_ts': 'max_wind_spd_ts',
            'min_temp': 'min_temp',
            'min_temp_ts': 'min_temp_ts',
            'precip': 'precip',
            'precip_gpm': 'precip_gpm',
            'pres': 'pres',
            'revision_status': 'revision_status',
            'rh': 'rh',
            'slp': 'slp',
            'snow': 'snow',
            'snow_depth': 'snow_depth',
            't_dhi': 't_dhi',
            't_dni': 't_dni',
            't_ghi': 't_ghi',
            'temp': 'temp',
            'ts': 'ts',
            'wind_dir': 'wind_dir',
            'wind_gust_spd': 'wind_gust_spd',
            'wind_spd': 'wind_spd'
        }

        self._datetime = datetime
        self._dewpt = dewpt
        self._dhi = dhi
        self._dni = dni
        self._ghi = ghi
        self._max_temp = max_temp
        self._max_temp_ts = max_temp_ts
        self._max_uv = max_uv
        self._max_wind_dir = max_wind_dir
        self._max_wind_spd = max_wind_spd
        self._max_wind_spd_ts = max_wind_spd_ts
        self._min_temp = min_temp
        self._min_temp_ts = min_temp_ts
        self._precip = precip
        self._precip_gpm = precip_gpm
        self._pres = pres
        self._revision_status = revision_status
        self._rh = rh
        self._slp = slp
        self._snow = snow
        self._snow_depth = snow_depth
        self._t_dhi = t_dhi
        self._t_dni = t_dni
        self._t_ghi = t_ghi
        self._temp = temp
        self._ts = ts
        self._wind_dir = wind_dir
        self._wind_gust_spd = wind_gust_spd
        self._wind_spd = wind_spd

    @classmethod
    def from_dict(cls, dikt: dict) -> 'HistoryDayObj':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The HistoryDayObj of this HistoryDayObj.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def datetime(self):
        """Gets the datetime of this HistoryDayObj.

        Date in format \"YYYY-MM-DD\". All datetime is in (UTC)

        :return: The datetime of this HistoryDayObj.
        :rtype: str
        """
        return self._datetime

    @datetime.setter
    def datetime(self, datetime):
        """Sets the datetime of this HistoryDayObj.

        Date in format \"YYYY-MM-DD\". All datetime is in (UTC)

        :param datetime: The datetime of this HistoryDayObj.
        :type datetime: str
        """

        self._datetime = datetime

    @property
    def dewpt(self):
        """Gets the dewpt of this HistoryDayObj.

        Average dewpoint - Default (C)

        :return: The dewpt of this HistoryDayObj.
        :rtype: float
        """
        return self._dewpt

    @dewpt.setter
    def dewpt(self, dewpt):
        """Sets the dewpt of this HistoryDayObj.

        Average dewpoint - Default (C)

        :param dewpt: The dewpt of this HistoryDayObj.
        :type dewpt: float
        """

        self._dewpt = dewpt

    @property
    def dhi(self):
        """Gets the dhi of this HistoryDayObj.

        Average hourly diffuse horizontal solar irradiance (W/m^2)

        :return: The dhi of this HistoryDayObj.
        :rtype: int
        """
        return self._dhi

    @dhi.setter
    def dhi(self, dhi):
        """Sets the dhi of this HistoryDayObj.

        Average hourly diffuse horizontal solar irradiance (W/m^2)

        :param dhi: The dhi of this HistoryDayObj.
        :type dhi: int
        """

        self._dhi = dhi

    @property
    def dni(self):
        """Gets the dni of this HistoryDayObj.

        Average direct normal solar irradiance (W/m^2)

        :return: The dni of this HistoryDayObj.
        :rtype: int
        """
        return self._dni

    @dni.setter
    def dni(self, dni):
        """Sets the dni of this HistoryDayObj.

        Average direct normal solar irradiance (W/m^2)

        :param dni: The dni of this HistoryDayObj.
        :type dni: int
        """

        self._dni = dni

    @property
    def ghi(self):
        """Gets the ghi of this HistoryDayObj.

        Average hourly global horizontal solar irradiance (W/m^2)

        :return: The ghi of this HistoryDayObj.
        :rtype: int
        """
        return self._ghi

    @ghi.setter
    def ghi(self, ghi):
        """Sets the ghi of this HistoryDayObj.

        Average hourly global horizontal solar irradiance (W/m^2)

        :param ghi: The ghi of this HistoryDayObj.
        :type ghi: int
        """

        self._ghi = ghi

    @property
    def max_temp(self):
        """Gets the max_temp of this HistoryDayObj.

        Max temperature - Default (C)

        :return: The max_temp of this HistoryDayObj.
        :rtype: float
        """
        return self._max_temp

    @max_temp.setter
    def max_temp(self, max_temp):
        """Sets the max_temp of this HistoryDayObj.

        Max temperature - Default (C)

        :param max_temp: The max_temp of this HistoryDayObj.
        :type max_temp: float
        """

        self._max_temp = max_temp

    @property
    def max_temp_ts(self):
        """Gets the max_temp_ts of this HistoryDayObj.

        Time of max memperature - Unix Timestamp

        :return: The max_temp_ts of this HistoryDayObj.
        :rtype: float
        """
        return self._max_temp_ts

    @max_temp_ts.setter
    def max_temp_ts(self, max_temp_ts):
        """Sets the max_temp_ts of this HistoryDayObj.

        Time of max memperature - Unix Timestamp

        :param max_temp_ts: The max_temp_ts of this HistoryDayObj.
        :type max_temp_ts: float
        """

        self._max_temp_ts = max_temp_ts

    @property
    def max_uv(self):
        """Gets the max_uv of this HistoryDayObj.

        Max UV Index (1-11+)

        :return: The max_uv of this HistoryDayObj.
        :rtype: float
        """
        return self._max_uv

    @max_uv.setter
    def max_uv(self, max_uv):
        """Sets the max_uv of this HistoryDayObj.

        Max UV Index (1-11+)

        :param max_uv: The max_uv of this HistoryDayObj.
        :type max_uv: float
        """

        self._max_uv = max_uv

    @property
    def max_wind_dir(self):
        """Gets the max_wind_dir of this HistoryDayObj.

        Direction of wind at time of max 2min wind (degrees)

        :return: The max_wind_dir of this HistoryDayObj.
        :rtype: int
        """
        return self._max_wind_dir

    @max_wind_dir.setter
    def max_wind_dir(self, max_wind_dir):
        """Sets the max_wind_dir of this HistoryDayObj.

        Direction of wind at time of max 2min wind (degrees)

        :param max_wind_dir: The max_wind_dir of this HistoryDayObj.
        :type max_wind_dir: int
        """

        self._max_wind_dir = max_wind_dir

    @property
    def max_wind_spd(self):
        """Gets the max_wind_spd of this HistoryDayObj.

        Max 2min Wind Speed - default (m/s)

        :return: The max_wind_spd of this HistoryDayObj.
        :rtype: float
        """
        return self._max_wind_spd

    @max_wind_spd.setter
    def max_wind_spd(self, max_wind_spd):
        """Sets the max_wind_spd of this HistoryDayObj.

        Max 2min Wind Speed - default (m/s)

        :param max_wind_spd: The max_wind_spd of this HistoryDayObj.
        :type max_wind_spd: float
        """

        self._max_wind_spd = max_wind_spd

    @property
    def max_wind_spd_ts(self):
        """Gets the max_wind_spd_ts of this HistoryDayObj.

        Time of max 2min wind - unix timestamp

        :return: The max_wind_spd_ts of this HistoryDayObj.
        :rtype: float
        """
        return self._max_wind_spd_ts

    @max_wind_spd_ts.setter
    def max_wind_spd_ts(self, max_wind_spd_ts):
        """Sets the max_wind_spd_ts of this HistoryDayObj.

        Time of max 2min wind - unix timestamp

        :param max_wind_spd_ts: The max_wind_spd_ts of this HistoryDayObj.
        :type max_wind_spd_ts: float
        """

        self._max_wind_spd_ts = max_wind_spd_ts

    @property
    def min_temp(self):
        """Gets the min_temp of this HistoryDayObj.

        Min temperature - Default (C)

        :return: The min_temp of this HistoryDayObj.
        :rtype: float
        """
        return self._min_temp

    @min_temp.setter
    def min_temp(self, min_temp):
        """Sets the min_temp of this HistoryDayObj.

        Min temperature - Default (C)

        :param min_temp: The min_temp of this HistoryDayObj.
        :type min_temp: float
        """

        self._min_temp = min_temp

    @property
    def min_temp_ts(self):
        """Gets the min_temp_ts of this HistoryDayObj.

        Time of max temperature - unix timestamp

        :return: The min_temp_ts of this HistoryDayObj.
        :rtype: float
        """
        return self._min_temp_ts

    @min_temp_ts.setter
    def min_temp_ts(self, min_temp_ts):
        """Sets the min_temp_ts of this HistoryDayObj.

        Time of max temperature - unix timestamp

        :param min_temp_ts: The min_temp_ts of this HistoryDayObj.
        :type min_temp_ts: float
        """

        self._min_temp_ts = min_temp_ts

    @property
    def precip(self):
        """Gets the precip of this HistoryDayObj.

        Liquid equivalent precipitation - default (mm)

        :return: The precip of this HistoryDayObj.
        :rtype: float
        """
        return self._precip

    @precip.setter
    def precip(self, precip):
        """Sets the precip of this HistoryDayObj.

        Liquid equivalent precipitation - default (mm)

        :param precip: The precip of this HistoryDayObj.
        :type precip: float
        """

        self._precip = precip

    @property
    def precip_gpm(self):
        """Gets the precip_gpm of this HistoryDayObj.

        Satellite estimated liquid equivalent precipitation - default (mm)

        :return: The precip_gpm of this HistoryDayObj.
        :rtype: float
        """
        return self._precip_gpm

    @precip_gpm.setter
    def precip_gpm(self, precip_gpm):
        """Sets the precip_gpm of this HistoryDayObj.

        Satellite estimated liquid equivalent precipitation - default (mm)

        :param precip_gpm: The precip_gpm of this HistoryDayObj.
        :type precip_gpm: float
        """

        self._precip_gpm = precip_gpm

    @property
    def pres(self):
        """Gets the pres of this HistoryDayObj.

        Average pressure (mb)

        :return: The pres of this HistoryDayObj.
        :rtype: float
        """
        return self._pres

    @pres.setter
    def pres(self, pres):
        """Sets the pres of this HistoryDayObj.

        Average pressure (mb)

        :param pres: The pres of this HistoryDayObj.
        :type pres: float
        """

        self._pres = pres

    @property
    def revision_status(self):
        """Gets the revision_status of this HistoryDayObj.

        Data revision status (interim or final)

        :return: The revision_status of this HistoryDayObj.
        :rtype: str
        """
        return self._revision_status

    @revision_status.setter
    def revision_status(self, revision_status):
        """Sets the revision_status of this HistoryDayObj.

        Data revision status (interim or final)

        :param revision_status: The revision_status of this HistoryDayObj.
        :type revision_status: str
        """

        self._revision_status = revision_status

    @property
    def rh(self):
        """Gets the rh of this HistoryDayObj.

        Average relative humidity as a percentage (%)

        :return: The rh of this HistoryDayObj.
        :rtype: int
        """
        return self._rh

    @rh.setter
    def rh(self, rh):
        """Sets the rh of this HistoryDayObj.

        Average relative humidity as a percentage (%)

        :param rh: The rh of this HistoryDayObj.
        :type rh: int
        """

        self._rh = rh

    @property
    def slp(self):
        """Gets the slp of this HistoryDayObj.

        Average sea level pressure (mb)

        :return: The slp of this HistoryDayObj.
        :rtype: float
        """
        return self._slp

    @slp.setter
    def slp(self, slp):
        """Sets the slp of this HistoryDayObj.

        Average sea level pressure (mb)

        :param slp: The slp of this HistoryDayObj.
        :type slp: float
        """

        self._slp = slp

    @property
    def snow(self):
        """Gets the snow of this HistoryDayObj.

        Snowfall - default (mm)

        :return: The snow of this HistoryDayObj.
        :rtype: float
        """
        return self._snow

    @snow.setter
    def snow(self, snow):
        """Sets the snow of this HistoryDayObj.

        Snowfall - default (mm)

        :param snow: The snow of this HistoryDayObj.
        :type snow: float
        """

        self._snow = snow

    @property
    def snow_depth(self):
        """Gets the snow_depth of this HistoryDayObj.

        Snow Depth - default (mm)

        :return: The snow_depth of this HistoryDayObj.
        :rtype: float
        """
        return self._snow_depth

    @snow_depth.setter
    def snow_depth(self, snow_depth):
        """Sets the snow_depth of this HistoryDayObj.

        Snow Depth - default (mm)

        :param snow_depth: The snow_depth of this HistoryDayObj.
        :type snow_depth: float
        """

        self._snow_depth = snow_depth

    @property
    def t_dhi(self):
        """Gets the t_dhi of this HistoryDayObj.

        Total diffuse horizontal solar irradiance (W/m^2)

        :return: The t_dhi of this HistoryDayObj.
        :rtype: int
        """
        return self._t_dhi

    @t_dhi.setter
    def t_dhi(self, t_dhi):
        """Sets the t_dhi of this HistoryDayObj.

        Total diffuse horizontal solar irradiance (W/m^2)

        :param t_dhi: The t_dhi of this HistoryDayObj.
        :type t_dhi: int
        """

        self._t_dhi = t_dhi

    @property
    def t_dni(self):
        """Gets the t_dni of this HistoryDayObj.

        Total direct normal solar irradiance (W/m^2)

        :return: The t_dni of this HistoryDayObj.
        :rtype: int
        """
        return self._t_dni

    @t_dni.setter
    def t_dni(self, t_dni):
        """Sets the t_dni of this HistoryDayObj.

        Total direct normal solar irradiance (W/m^2)

        :param t_dni: The t_dni of this HistoryDayObj.
        :type t_dni: int
        """

        self._t_dni = t_dni

    @property
    def t_ghi(self):
        """Gets the t_ghi of this HistoryDayObj.

        Total global horizontal solar irradiance (W/m^2)

        :return: The t_ghi of this HistoryDayObj.
        :rtype: int
        """
        return self._t_ghi

    @t_ghi.setter
    def t_ghi(self, t_ghi):
        """Sets the t_ghi of this HistoryDayObj.

        Total global horizontal solar irradiance (W/m^2)

        :param t_ghi: The t_ghi of this HistoryDayObj.
        :type t_ghi: int
        """

        self._t_ghi = t_ghi

    @property
    def temp(self):
        """Gets the temp of this HistoryDayObj.

        Average temperature - Default (C)

        :return: The temp of this HistoryDayObj.
        :rtype: float
        """
        return self._temp

    @temp.setter
    def temp(self, temp):
        """Sets the temp of this HistoryDayObj.

        Average temperature - Default (C)

        :param temp: The temp of this HistoryDayObj.
        :type temp: float
        """

        self._temp = temp

    @property
    def ts(self):
        """Gets the ts of this HistoryDayObj.

        Unix timestamp of datetime (Midnight UTC)

        :return: The ts of this HistoryDayObj.
        :rtype: int
        """
        return self._ts

    @ts.setter
    def ts(self, ts):
        """Sets the ts of this HistoryDayObj.

        Unix timestamp of datetime (Midnight UTC)

        :param ts: The ts of this HistoryDayObj.
        :type ts: int
        """

        self._ts = ts

    @property
    def wind_dir(self):
        """Gets the wind_dir of this HistoryDayObj.

        Average wind direction (degrees)

        :return: The wind_dir of this HistoryDayObj.
        :rtype: int
        """
        return self._wind_dir

    @wind_dir.setter
    def wind_dir(self, wind_dir):
        """Sets the wind_dir of this HistoryDayObj.

        Average wind direction (degrees)

        :param wind_dir: The wind_dir of this HistoryDayObj.
        :type wind_dir: int
        """

        self._wind_dir = wind_dir

    @property
    def wind_gust_spd(self):
        """Gets the wind_gust_spd of this HistoryDayObj.

        Wind gust speed - default (m/s)

        :return: The wind_gust_spd of this HistoryDayObj.
        :rtype: float
        """
        return self._wind_gust_spd

    @wind_gust_spd.setter
    def wind_gust_spd(self, wind_gust_spd):
        """Sets the wind_gust_spd of this HistoryDayObj.

        Wind gust speed - default (m/s)

        :param wind_gust_spd: The wind_gust_spd of this HistoryDayObj.
        :type wind_gust_spd: float
        """

        self._wind_gust_spd = wind_gust_spd

    @property
    def wind_spd(self):
        """Gets the wind_spd of this HistoryDayObj.

        Average wind speed - default (m/s)

        :return: The wind_spd of this HistoryDayObj.
        :rtype: float
        """
        return self._wind_spd

    @wind_spd.setter
    def wind_spd(self, wind_spd):
        """Sets the wind_spd of this HistoryDayObj.

        Average wind speed - default (m/s)

        :param wind_spd: The wind_spd of this HistoryDayObj.
        :type wind_spd: float
        """

        self._wind_spd = wind_spd
