# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class HistoryObjWeather(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, code: str=None, description: str=None, icon: str=None):
        """HistoryObjWeather - a model defined in OpenAPI

        :param code: The code of this HistoryObjWeather.
        :param description: The description of this HistoryObjWeather.
        :param icon: The icon of this HistoryObjWeather.
        """
        self.openapi_types = {
            'code': str,
            'description': str,
            'icon': str
        }

        self.attribute_map = {
            'code': 'code',
            'description': 'description',
            'icon': 'icon'
        }

        self._code = code
        self._description = description
        self._icon = icon

    @classmethod
    def from_dict(cls, dikt: dict) -> 'HistoryObjWeather':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The HistoryObj_weather of this HistoryObjWeather.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def code(self):
        """Gets the code of this HistoryObjWeather.

        Weather Condition code

        :return: The code of this HistoryObjWeather.
        :rtype: str
        """
        return self._code

    @code.setter
    def code(self, code):
        """Sets the code of this HistoryObjWeather.

        Weather Condition code

        :param code: The code of this HistoryObjWeather.
        :type code: str
        """

        self._code = code

    @property
    def description(self):
        """Gets the description of this HistoryObjWeather.

        Weather Condition description

        :return: The description of this HistoryObjWeather.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this HistoryObjWeather.

        Weather Condition description

        :param description: The description of this HistoryObjWeather.
        :type description: str
        """

        self._description = description

    @property
    def icon(self):
        """Gets the icon of this HistoryObjWeather.

        Icon code for forecast image display

        :return: The icon of this HistoryObjWeather.
        :rtype: str
        """
        return self._icon

    @icon.setter
    def icon(self, icon):
        """Sets the icon of this HistoryObjWeather.

        Icon code for forecast image display

        :param icon: The icon of this HistoryObjWeather.
        :type icon: str
        """

        self._icon = icon
