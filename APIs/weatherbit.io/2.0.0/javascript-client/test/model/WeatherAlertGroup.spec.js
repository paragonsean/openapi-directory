/**
 * Weatherbit - Interactive Swagger UI Documentation
 * This an interactive version of the documentation for the Weatherbit API.  The base URL for the API is [http://api.weatherbit.io/v2.0/](http://api.weatherbit.io/v2.0/) or [https://api.weatherbit.io/v2.0/](http://api.weatherbit.io/v2.0/). Below is the Swagger UI documentation for the API. All API requests require the `key` parameter.        An Example for a 48 hour forecast for London, UK would be `http://api.weatherbit.io/v2.0/forecast/hourly?lat=51.5072`&`lon=-0.1276`. See our [Weather API description page](https://www.weatherbit.io/api) for the full documentation.
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.WeatherbitInteractiveSwaggerUiDocumentation);
  }
}(this, function(expect, WeatherbitInteractiveSwaggerUiDocumentation) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new WeatherbitInteractiveSwaggerUiDocumentation.WeatherAlertGroup();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('WeatherAlertGroup', function() {
    it('should create an instance of WeatherAlertGroup', function() {
      // uncomment below and update the code to test WeatherAlertGroup
      //var instance = new WeatherbitInteractiveSwaggerUiDocumentation.WeatherAlertGroup();
      //expect(instance).to.be.a(WeatherbitInteractiveSwaggerUiDocumentation.WeatherAlertGroup);
    });

    it('should have the property alerts (base name: "alerts")', function() {
      // uncomment below and update the code to test the property alerts
      //var instance = new WeatherbitInteractiveSwaggerUiDocumentation.WeatherAlertGroup();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new WeatherbitInteractiveSwaggerUiDocumentation.WeatherAlertGroup();
      //expect(instance).to.be();
    });

    it('should have the property effectiveLocal (base name: "effective_local")', function() {
      // uncomment below and update the code to test the property effectiveLocal
      //var instance = new WeatherbitInteractiveSwaggerUiDocumentation.WeatherAlertGroup();
      //expect(instance).to.be();
    });

    it('should have the property effectiveUtc (base name: "effective_utc")', function() {
      // uncomment below and update the code to test the property effectiveUtc
      //var instance = new WeatherbitInteractiveSwaggerUiDocumentation.WeatherAlertGroup();
      //expect(instance).to.be();
    });

    it('should have the property expiresLocal (base name: "expires_local")', function() {
      // uncomment below and update the code to test the property expiresLocal
      //var instance = new WeatherbitInteractiveSwaggerUiDocumentation.WeatherAlertGroup();
      //expect(instance).to.be();
    });

    it('should have the property expiresUtc (base name: "expires_utc")', function() {
      // uncomment below and update the code to test the property expiresUtc
      //var instance = new WeatherbitInteractiveSwaggerUiDocumentation.WeatherAlertGroup();
      //expect(instance).to.be();
    });

    it('should have the property severity (base name: "severity")', function() {
      // uncomment below and update the code to test the property severity
      //var instance = new WeatherbitInteractiveSwaggerUiDocumentation.WeatherAlertGroup();
      //expect(instance).to.be();
    });

    it('should have the property title (base name: "title")', function() {
      // uncomment below and update the code to test the property title
      //var instance = new WeatherbitInteractiveSwaggerUiDocumentation.WeatherAlertGroup();
      //expect(instance).to.be();
    });

    it('should have the property uri (base name: "uri")', function() {
      // uncomment below and update the code to test the property uri
      //var instance = new WeatherbitInteractiveSwaggerUiDocumentation.WeatherAlertGroup();
      //expect(instance).to.be();
    });

  });

}));
