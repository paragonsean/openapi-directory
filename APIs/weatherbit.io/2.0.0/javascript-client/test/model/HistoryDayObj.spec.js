/**
 * Weatherbit - Interactive Swagger UI Documentation
 * This an interactive version of the documentation for the Weatherbit API.  The base URL for the API is [http://api.weatherbit.io/v2.0/](http://api.weatherbit.io/v2.0/) or [https://api.weatherbit.io/v2.0/](http://api.weatherbit.io/v2.0/). Below is the Swagger UI documentation for the API. All API requests require the `key` parameter.        An Example for a 48 hour forecast for London, UK would be `http://api.weatherbit.io/v2.0/forecast/hourly?lat=51.5072`&`lon=-0.1276`. See our [Weather API description page](https://www.weatherbit.io/api) for the full documentation.
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.WeatherbitInteractiveSwaggerUiDocumentation);
  }
}(this, function(expect, WeatherbitInteractiveSwaggerUiDocumentation) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new WeatherbitInteractiveSwaggerUiDocumentation.HistoryDayObj();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('HistoryDayObj', function() {
    it('should create an instance of HistoryDayObj', function() {
      // uncomment below and update the code to test HistoryDayObj
      //var instance = new WeatherbitInteractiveSwaggerUiDocumentation.HistoryDayObj();
      //expect(instance).to.be.a(WeatherbitInteractiveSwaggerUiDocumentation.HistoryDayObj);
    });

    it('should have the property datetime (base name: "datetime")', function() {
      // uncomment below and update the code to test the property datetime
      //var instance = new WeatherbitInteractiveSwaggerUiDocumentation.HistoryDayObj();
      //expect(instance).to.be();
    });

    it('should have the property dewpt (base name: "dewpt")', function() {
      // uncomment below and update the code to test the property dewpt
      //var instance = new WeatherbitInteractiveSwaggerUiDocumentation.HistoryDayObj();
      //expect(instance).to.be();
    });

    it('should have the property dhi (base name: "dhi")', function() {
      // uncomment below and update the code to test the property dhi
      //var instance = new WeatherbitInteractiveSwaggerUiDocumentation.HistoryDayObj();
      //expect(instance).to.be();
    });

    it('should have the property dni (base name: "dni")', function() {
      // uncomment below and update the code to test the property dni
      //var instance = new WeatherbitInteractiveSwaggerUiDocumentation.HistoryDayObj();
      //expect(instance).to.be();
    });

    it('should have the property ghi (base name: "ghi")', function() {
      // uncomment below and update the code to test the property ghi
      //var instance = new WeatherbitInteractiveSwaggerUiDocumentation.HistoryDayObj();
      //expect(instance).to.be();
    });

    it('should have the property maxTemp (base name: "max_temp")', function() {
      // uncomment below and update the code to test the property maxTemp
      //var instance = new WeatherbitInteractiveSwaggerUiDocumentation.HistoryDayObj();
      //expect(instance).to.be();
    });

    it('should have the property maxTempTs (base name: "max_temp_ts")', function() {
      // uncomment below and update the code to test the property maxTempTs
      //var instance = new WeatherbitInteractiveSwaggerUiDocumentation.HistoryDayObj();
      //expect(instance).to.be();
    });

    it('should have the property maxUv (base name: "max_uv")', function() {
      // uncomment below and update the code to test the property maxUv
      //var instance = new WeatherbitInteractiveSwaggerUiDocumentation.HistoryDayObj();
      //expect(instance).to.be();
    });

    it('should have the property maxWindDir (base name: "max_wind_dir")', function() {
      // uncomment below and update the code to test the property maxWindDir
      //var instance = new WeatherbitInteractiveSwaggerUiDocumentation.HistoryDayObj();
      //expect(instance).to.be();
    });

    it('should have the property maxWindSpd (base name: "max_wind_spd")', function() {
      // uncomment below and update the code to test the property maxWindSpd
      //var instance = new WeatherbitInteractiveSwaggerUiDocumentation.HistoryDayObj();
      //expect(instance).to.be();
    });

    it('should have the property maxWindSpdTs (base name: "max_wind_spd_ts")', function() {
      // uncomment below and update the code to test the property maxWindSpdTs
      //var instance = new WeatherbitInteractiveSwaggerUiDocumentation.HistoryDayObj();
      //expect(instance).to.be();
    });

    it('should have the property minTemp (base name: "min_temp")', function() {
      // uncomment below and update the code to test the property minTemp
      //var instance = new WeatherbitInteractiveSwaggerUiDocumentation.HistoryDayObj();
      //expect(instance).to.be();
    });

    it('should have the property minTempTs (base name: "min_temp_ts")', function() {
      // uncomment below and update the code to test the property minTempTs
      //var instance = new WeatherbitInteractiveSwaggerUiDocumentation.HistoryDayObj();
      //expect(instance).to.be();
    });

    it('should have the property precip (base name: "precip")', function() {
      // uncomment below and update the code to test the property precip
      //var instance = new WeatherbitInteractiveSwaggerUiDocumentation.HistoryDayObj();
      //expect(instance).to.be();
    });

    it('should have the property precipGpm (base name: "precip_gpm")', function() {
      // uncomment below and update the code to test the property precipGpm
      //var instance = new WeatherbitInteractiveSwaggerUiDocumentation.HistoryDayObj();
      //expect(instance).to.be();
    });

    it('should have the property pres (base name: "pres")', function() {
      // uncomment below and update the code to test the property pres
      //var instance = new WeatherbitInteractiveSwaggerUiDocumentation.HistoryDayObj();
      //expect(instance).to.be();
    });

    it('should have the property revisionStatus (base name: "revision_status")', function() {
      // uncomment below and update the code to test the property revisionStatus
      //var instance = new WeatherbitInteractiveSwaggerUiDocumentation.HistoryDayObj();
      //expect(instance).to.be();
    });

    it('should have the property rh (base name: "rh")', function() {
      // uncomment below and update the code to test the property rh
      //var instance = new WeatherbitInteractiveSwaggerUiDocumentation.HistoryDayObj();
      //expect(instance).to.be();
    });

    it('should have the property slp (base name: "slp")', function() {
      // uncomment below and update the code to test the property slp
      //var instance = new WeatherbitInteractiveSwaggerUiDocumentation.HistoryDayObj();
      //expect(instance).to.be();
    });

    it('should have the property snow (base name: "snow")', function() {
      // uncomment below and update the code to test the property snow
      //var instance = new WeatherbitInteractiveSwaggerUiDocumentation.HistoryDayObj();
      //expect(instance).to.be();
    });

    it('should have the property snowDepth (base name: "snow_depth")', function() {
      // uncomment below and update the code to test the property snowDepth
      //var instance = new WeatherbitInteractiveSwaggerUiDocumentation.HistoryDayObj();
      //expect(instance).to.be();
    });

    it('should have the property tDhi (base name: "t_dhi")', function() {
      // uncomment below and update the code to test the property tDhi
      //var instance = new WeatherbitInteractiveSwaggerUiDocumentation.HistoryDayObj();
      //expect(instance).to.be();
    });

    it('should have the property tDni (base name: "t_dni")', function() {
      // uncomment below and update the code to test the property tDni
      //var instance = new WeatherbitInteractiveSwaggerUiDocumentation.HistoryDayObj();
      //expect(instance).to.be();
    });

    it('should have the property tGhi (base name: "t_ghi")', function() {
      // uncomment below and update the code to test the property tGhi
      //var instance = new WeatherbitInteractiveSwaggerUiDocumentation.HistoryDayObj();
      //expect(instance).to.be();
    });

    it('should have the property temp (base name: "temp")', function() {
      // uncomment below and update the code to test the property temp
      //var instance = new WeatherbitInteractiveSwaggerUiDocumentation.HistoryDayObj();
      //expect(instance).to.be();
    });

    it('should have the property ts (base name: "ts")', function() {
      // uncomment below and update the code to test the property ts
      //var instance = new WeatherbitInteractiveSwaggerUiDocumentation.HistoryDayObj();
      //expect(instance).to.be();
    });

    it('should have the property windDir (base name: "wind_dir")', function() {
      // uncomment below and update the code to test the property windDir
      //var instance = new WeatherbitInteractiveSwaggerUiDocumentation.HistoryDayObj();
      //expect(instance).to.be();
    });

    it('should have the property windGustSpd (base name: "wind_gust_spd")', function() {
      // uncomment below and update the code to test the property windGustSpd
      //var instance = new WeatherbitInteractiveSwaggerUiDocumentation.HistoryDayObj();
      //expect(instance).to.be();
    });

    it('should have the property windSpd (base name: "wind_spd")', function() {
      // uncomment below and update the code to test the property windSpd
      //var instance = new WeatherbitInteractiveSwaggerUiDocumentation.HistoryDayObj();
      //expect(instance).to.be();
    });

  });

}));
