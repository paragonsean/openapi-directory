/**
 * Weatherbit - Interactive Swagger UI Documentation
 * This an interactive version of the documentation for the Weatherbit API.  The base URL for the API is [http://api.weatherbit.io/v2.0/](http://api.weatherbit.io/v2.0/) or [https://api.weatherbit.io/v2.0/](http://api.weatherbit.io/v2.0/). Below is the Swagger UI documentation for the API. All API requests require the `key` parameter.        An Example for a 48 hour forecast for London, UK would be `http://api.weatherbit.io/v2.0/forecast/hourly?lat=51.5072`&`lon=-0.1276`. See our [Weather API description page](https://www.weatherbit.io/api) for the full documentation.
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.WeatherbitInteractiveSwaggerUiDocumentation);
  }
}(this, function(expect, WeatherbitInteractiveSwaggerUiDocumentation) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new WeatherbitInteractiveSwaggerUiDocumentation.EnergyObsGroupForecast();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('EnergyObsGroupForecast', function() {
    it('should create an instance of EnergyObsGroupForecast', function() {
      // uncomment below and update the code to test EnergyObsGroupForecast
      //var instance = new WeatherbitInteractiveSwaggerUiDocumentation.EnergyObsGroupForecast();
      //expect(instance).to.be.a(WeatherbitInteractiveSwaggerUiDocumentation.EnergyObsGroupForecast);
    });

    it('should have the property cityName (base name: "city_name")', function() {
      // uncomment below and update the code to test the property cityName
      //var instance = new WeatherbitInteractiveSwaggerUiDocumentation.EnergyObsGroupForecast();
      //expect(instance).to.be();
    });

    it('should have the property countryCode (base name: "country_code")', function() {
      // uncomment below and update the code to test the property countryCode
      //var instance = new WeatherbitInteractiveSwaggerUiDocumentation.EnergyObsGroupForecast();
      //expect(instance).to.be();
    });

    it('should have the property data (base name: "data")', function() {
      // uncomment below and update the code to test the property data
      //var instance = new WeatherbitInteractiveSwaggerUiDocumentation.EnergyObsGroupForecast();
      //expect(instance).to.be();
    });

    it('should have the property lat (base name: "lat")', function() {
      // uncomment below and update the code to test the property lat
      //var instance = new WeatherbitInteractiveSwaggerUiDocumentation.EnergyObsGroupForecast();
      //expect(instance).to.be();
    });

    it('should have the property lon (base name: "lon")', function() {
      // uncomment below and update the code to test the property lon
      //var instance = new WeatherbitInteractiveSwaggerUiDocumentation.EnergyObsGroupForecast();
      //expect(instance).to.be();
    });

    it('should have the property stateCode (base name: "state_code")', function() {
      // uncomment below and update the code to test the property stateCode
      //var instance = new WeatherbitInteractiveSwaggerUiDocumentation.EnergyObsGroupForecast();
      //expect(instance).to.be();
    });

    it('should have the property thresholdUnits (base name: "threshold_units")', function() {
      // uncomment below and update the code to test the property thresholdUnits
      //var instance = new WeatherbitInteractiveSwaggerUiDocumentation.EnergyObsGroupForecast();
      //expect(instance).to.be();
    });

    it('should have the property thresholdValue (base name: "threshold_value")', function() {
      // uncomment below and update the code to test the property thresholdValue
      //var instance = new WeatherbitInteractiveSwaggerUiDocumentation.EnergyObsGroupForecast();
      //expect(instance).to.be();
    });

    it('should have the property timezone (base name: "timezone")', function() {
      // uncomment below and update the code to test the property timezone
      //var instance = new WeatherbitInteractiveSwaggerUiDocumentation.EnergyObsGroupForecast();
      //expect(instance).to.be();
    });

  });

}));
