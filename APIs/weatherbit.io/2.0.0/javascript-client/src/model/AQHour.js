/**
 * Weatherbit - Interactive Swagger UI Documentation
 * This an interactive version of the documentation for the Weatherbit API.  The base URL for the API is [http://api.weatherbit.io/v2.0/](http://api.weatherbit.io/v2.0/) or [https://api.weatherbit.io/v2.0/](http://api.weatherbit.io/v2.0/). Below is the Swagger UI documentation for the API. All API requests require the `key` parameter.        An Example for a 48 hour forecast for London, UK would be `http://api.weatherbit.io/v2.0/forecast/hourly?lat=51.5072`&`lon=-0.1276`. See our [Weather API description page](https://www.weatherbit.io/api) for the full documentation.
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AQHour model module.
 * @module model/AQHour
 * @version 2.0.0
 */
class AQHour {
    /**
     * Constructs a new <code>AQHour</code>.
     * @alias module:model/AQHour
     */
    constructor() { 
        
        AQHour.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AQHour</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AQHour} obj Optional instance to populate.
     * @return {module:model/AQHour} The populated <code>AQHour</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AQHour();

            if (data.hasOwnProperty('aqi')) {
                obj['aqi'] = ApiClient.convertToType(data['aqi'], 'Number');
            }
            if (data.hasOwnProperty('no2')) {
                obj['no2'] = ApiClient.convertToType(data['no2'], 'Number');
            }
            if (data.hasOwnProperty('o3')) {
                obj['o3'] = ApiClient.convertToType(data['o3'], 'Number');
            }
            if (data.hasOwnProperty('pm10')) {
                obj['pm10'] = ApiClient.convertToType(data['pm10'], 'Number');
            }
            if (data.hasOwnProperty('pm25')) {
                obj['pm25'] = ApiClient.convertToType(data['pm25'], 'Number');
            }
            if (data.hasOwnProperty('so2')) {
                obj['so2'] = ApiClient.convertToType(data['so2'], 'Number');
            }
            if (data.hasOwnProperty('timestamp_local')) {
                obj['timestamp_local'] = ApiClient.convertToType(data['timestamp_local'], 'String');
            }
            if (data.hasOwnProperty('timestamp_utc')) {
                obj['timestamp_utc'] = ApiClient.convertToType(data['timestamp_utc'], 'String');
            }
            if (data.hasOwnProperty('ts')) {
                obj['ts'] = ApiClient.convertToType(data['ts'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AQHour</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AQHour</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['timestamp_local'] && !(typeof data['timestamp_local'] === 'string' || data['timestamp_local'] instanceof String)) {
            throw new Error("Expected the field `timestamp_local` to be a primitive type in the JSON string but got " + data['timestamp_local']);
        }
        // ensure the json data is a string
        if (data['timestamp_utc'] && !(typeof data['timestamp_utc'] === 'string' || data['timestamp_utc'] instanceof String)) {
            throw new Error("Expected the field `timestamp_utc` to be a primitive type in the JSON string but got " + data['timestamp_utc']);
        }

        return true;
    }


}



/**
 * Cloud cover as a percentage (%)
 * @member {Number} aqi
 */
AQHour.prototype['aqi'] = undefined;

/**
 * Concentration of NO2 (µg/m³)
 * @member {Number} no2
 */
AQHour.prototype['no2'] = undefined;

/**
 * Concentration of O3 (µg/m³)
 * @member {Number} o3
 */
AQHour.prototype['o3'] = undefined;

/**
 * Concentration of PM 10 (µg/m³)
 * @member {Number} pm10
 */
AQHour.prototype['pm10'] = undefined;

/**
 * Concentration of PM 2.5 (µg/m³)
 * @member {Number} pm25
 */
AQHour.prototype['pm25'] = undefined;

/**
 * Concentration of SO2 (µg/m³)
 * @member {Number} so2
 */
AQHour.prototype['so2'] = undefined;

/**
 * Timestamp in local time
 * @member {String} timestamp_local
 */
AQHour.prototype['timestamp_local'] = undefined;

/**
 * Timestamp UTC
 * @member {String} timestamp_utc
 */
AQHour.prototype['timestamp_utc'] = undefined;

/**
 * Unix Timestamp
 * @member {Number} ts
 */
AQHour.prototype['ts'] = undefined;






export default AQHour;

