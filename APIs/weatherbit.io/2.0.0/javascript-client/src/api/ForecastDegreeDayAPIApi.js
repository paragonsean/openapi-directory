/**
 * Weatherbit - Interactive Swagger UI Documentation
 * This an interactive version of the documentation for the Weatherbit API.  The base URL for the API is [http://api.weatherbit.io/v2.0/](http://api.weatherbit.io/v2.0/) or [https://api.weatherbit.io/v2.0/](http://api.weatherbit.io/v2.0/). Below is the Swagger UI documentation for the API. All API requests require the `key` parameter.        An Example for a 48 hour forecast for London, UK would be `http://api.weatherbit.io/v2.0/forecast/hourly?lat=51.5072`&`lon=-0.1276`. See our [Weather API description page](https://www.weatherbit.io/api) for the full documentation.
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import EnergyObsGroupForecast from '../model/EnergyObsGroupForecast';
import Error from '../model/Error';

/**
* ForecastDegreeDayAPI service.
* @module api/ForecastDegreeDayAPIApi
* @version 2.0.0
*/
export default class ForecastDegreeDayAPIApi {

    /**
    * Constructs a new ForecastDegreeDayAPIApi. 
    * @alias module:api/ForecastDegreeDayAPIApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the forecastEnergylatlatlonlonGet operation.
     * @callback module:api/ForecastDegreeDayAPIApi~forecastEnergylatlatlonlonGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/EnergyObsGroupForecast} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns Energy Forecast API response  - Given a single lat/lon. 
     * Retrieve an 8 day forecast relevant to te Energy Sector (degree days, solar radiation, precipitation, wind).
     * @param {Number} lat Latitude component of location.
     * @param {Number} lon Longitude component of location.
     * @param {String} key Your registered API key.
     * @param {Object} opts Optional parameters
     * @param {Number} [threshold] Temperature threshold to use to calculate degree days (default 18 C) 
     * @param {module:model/String} [units] Convert to units. Default Metric See <a target='blank' href='/api/requests'>units field description</a>
     * @param {module:model/String} [tp] Time period (default: daily)
     * @param {String} [callback] Wraps return in jsonp callback. Example: callback=func
     * @param {module:api/ForecastDegreeDayAPIApi~forecastEnergylatlatlonlonGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/EnergyObsGroupForecast}
     */
    forecastEnergylatlatlonlonGet(lat, lon, key, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'lat' is set
      if (lat === undefined || lat === null) {
        throw new Error("Missing the required parameter 'lat' when calling forecastEnergylatlatlonlonGet");
      }
      // verify the required parameter 'lon' is set
      if (lon === undefined || lon === null) {
        throw new Error("Missing the required parameter 'lon' when calling forecastEnergylatlatlonlonGet");
      }
      // verify the required parameter 'key' is set
      if (key === undefined || key === null) {
        throw new Error("Missing the required parameter 'key' when calling forecastEnergylatlatlonlonGet");
      }

      let pathParams = {
        'lat': lat,
        'lon': lon
      };
      let queryParams = {
        'threshold': opts['threshold'],
        'units': opts['units'],
        'tp': opts['tp'],
        'callback': opts['callback'],
        'key': key
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = EnergyObsGroupForecast;
      return this.apiClient.callApi(
        '/forecast/energy?lat={lat}&lon={lon}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
