/*
 * Discovery Market Research
 * <p>This API drives the <a href=\"https://discovery.gsa.gov\">Discovery Market Research Tool</a>. It contains information on the vendors that are part of the OASIS and OASIS Small Business contracting vehicles, such as their contracting history, their elligibility for contract awards, and their small business designations. To learn more about the tool, please visit <a href=\"https://discovery.gsa.gov\">Discovery</a> or see the README on our <a href=\"https://github.com/PSHCDevOps/discovery\">GitHub repository</a>.</p> <p><strong>Please note that the base path for this API is <code>https://api.data.gov/gsa/discovery/</code></strong></p> <p>It requires an API key, obtainable at <a href=\"http://api.data.gov/\">api.data.gov</a>. It must be passed in the <code>api_key</code> parameter with each request.</p>
 *
 * The version of the OpenAPI document: 0.1
 * Contact: discovery-18f@gsa.gov
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;



import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ContractsApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public ContractsApi() {
        this(Configuration.getDefaultApiClient());
    }

    public ContractsApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for listContractsGET
     * @param duns A 9-digit DUNS number that uniquely identifies a vendor (required). (required)
     * @param naics a six digit NAICS code used to filter by contracts with a certain NAICS (optional)
     * @param sort a field to sort on. Choices are date, status, agency, and amount (optional)
     * @param direction The sort direction of the results. Choices are asc or desc. (optional)
     * @param page the page to start on. Results are paginated in increments of 100. Begins at page&#x3D;1. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> No response was specified </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call listContractsGETCall(String duns, String naics, String sort, String direction, String page, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/contracts/";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (duns != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("duns", duns));
        }

        if (naics != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("naics", naics));
        }

        if (sort != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sort", sort));
        }

        if (direction != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("direction", direction));
        }

        if (page != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("page", page));
        }

        final String[] localVarAccepts = {
            "*/*"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call listContractsGETValidateBeforeCall(String duns, String naics, String sort, String direction, String page, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'duns' is set
        if (duns == null) {
            throw new ApiException("Missing the required parameter 'duns' when calling listContractsGET(Async)");
        }

        return listContractsGETCall(duns, naics, sort, direction, page, _callback);

    }

    /**
     * This endpoint returns contract history from FPDS for a specific vendor
     * &lt;p&gt;This endpoint returns contract history from FPDS for a specific vendor. The vendor&#39;s DUNS number is a required parameter. You can also filter contracts by their NAICS code to find contracts relevant to a particular category.&lt;/p&gt;
     * @param duns A 9-digit DUNS number that uniquely identifies a vendor (required). (required)
     * @param naics a six digit NAICS code used to filter by contracts with a certain NAICS (optional)
     * @param sort a field to sort on. Choices are date, status, agency, and amount (optional)
     * @param direction The sort direction of the results. Choices are asc or desc. (optional)
     * @param page the page to start on. Results are paginated in increments of 100. Begins at page&#x3D;1. (optional)
     * @return Object
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> No response was specified </td><td>  -  </td></tr>
     </table>
     */
    public Object listContractsGET(String duns, String naics, String sort, String direction, String page) throws ApiException {
        ApiResponse<Object> localVarResp = listContractsGETWithHttpInfo(duns, naics, sort, direction, page);
        return localVarResp.getData();
    }

    /**
     * This endpoint returns contract history from FPDS for a specific vendor
     * &lt;p&gt;This endpoint returns contract history from FPDS for a specific vendor. The vendor&#39;s DUNS number is a required parameter. You can also filter contracts by their NAICS code to find contracts relevant to a particular category.&lt;/p&gt;
     * @param duns A 9-digit DUNS number that uniquely identifies a vendor (required). (required)
     * @param naics a six digit NAICS code used to filter by contracts with a certain NAICS (optional)
     * @param sort a field to sort on. Choices are date, status, agency, and amount (optional)
     * @param direction The sort direction of the results. Choices are asc or desc. (optional)
     * @param page the page to start on. Results are paginated in increments of 100. Begins at page&#x3D;1. (optional)
     * @return ApiResponse&lt;Object&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> No response was specified </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Object> listContractsGETWithHttpInfo(String duns, String naics, String sort, String direction, String page) throws ApiException {
        okhttp3.Call localVarCall = listContractsGETValidateBeforeCall(duns, naics, sort, direction, page, null);
        Type localVarReturnType = new TypeToken<Object>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * This endpoint returns contract history from FPDS for a specific vendor (asynchronously)
     * &lt;p&gt;This endpoint returns contract history from FPDS for a specific vendor. The vendor&#39;s DUNS number is a required parameter. You can also filter contracts by their NAICS code to find contracts relevant to a particular category.&lt;/p&gt;
     * @param duns A 9-digit DUNS number that uniquely identifies a vendor (required). (required)
     * @param naics a six digit NAICS code used to filter by contracts with a certain NAICS (optional)
     * @param sort a field to sort on. Choices are date, status, agency, and amount (optional)
     * @param direction The sort direction of the results. Choices are asc or desc. (optional)
     * @param page the page to start on. Results are paginated in increments of 100. Begins at page&#x3D;1. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> No response was specified </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call listContractsGETAsync(String duns, String naics, String sort, String direction, String page, final ApiCallback<Object> _callback) throws ApiException {

        okhttp3.Call localVarCall = listContractsGETValidateBeforeCall(duns, naics, sort, direction, page, _callback);
        Type localVarReturnType = new TypeToken<Object>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
