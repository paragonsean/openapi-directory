# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EndpointGetUsersIDSynergiesDataInnerMatchIndustry(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, complementary: bool=None, mutual_match: bool=None, similar: bool=None):
        """EndpointGetUsersIDSynergiesDataInnerMatchIndustry - a model defined in OpenAPI

        :param complementary: The complementary of this EndpointGetUsersIDSynergiesDataInnerMatchIndustry.
        :param mutual_match: The mutual_match of this EndpointGetUsersIDSynergiesDataInnerMatchIndustry.
        :param similar: The similar of this EndpointGetUsersIDSynergiesDataInnerMatchIndustry.
        """
        self.openapi_types = {
            'complementary': bool,
            'mutual_match': bool,
            'similar': bool
        }

        self.attribute_map = {
            'complementary': 'complementary',
            'mutual_match': 'mutual_match',
            'similar': 'similar'
        }

        self._complementary = complementary
        self._mutual_match = mutual_match
        self._similar = similar

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EndpointGetUsersIDSynergiesDataInnerMatchIndustry':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Endpoint_get_users_ID_synergies_data_inner_match_industry of this EndpointGetUsersIDSynergiesDataInnerMatchIndustry.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def complementary(self):
        """Gets the complementary of this EndpointGetUsersIDSynergiesDataInnerMatchIndustry.


        :return: The complementary of this EndpointGetUsersIDSynergiesDataInnerMatchIndustry.
        :rtype: bool
        """
        return self._complementary

    @complementary.setter
    def complementary(self, complementary):
        """Sets the complementary of this EndpointGetUsersIDSynergiesDataInnerMatchIndustry.


        :param complementary: The complementary of this EndpointGetUsersIDSynergiesDataInnerMatchIndustry.
        :type complementary: bool
        """

        self._complementary = complementary

    @property
    def mutual_match(self):
        """Gets the mutual_match of this EndpointGetUsersIDSynergiesDataInnerMatchIndustry.


        :return: The mutual_match of this EndpointGetUsersIDSynergiesDataInnerMatchIndustry.
        :rtype: bool
        """
        return self._mutual_match

    @mutual_match.setter
    def mutual_match(self, mutual_match):
        """Sets the mutual_match of this EndpointGetUsersIDSynergiesDataInnerMatchIndustry.


        :param mutual_match: The mutual_match of this EndpointGetUsersIDSynergiesDataInnerMatchIndustry.
        :type mutual_match: bool
        """

        self._mutual_match = mutual_match

    @property
    def similar(self):
        """Gets the similar of this EndpointGetUsersIDSynergiesDataInnerMatchIndustry.


        :return: The similar of this EndpointGetUsersIDSynergiesDataInnerMatchIndustry.
        :rtype: bool
        """
        return self._similar

    @similar.setter
    def similar(self, similar):
        """Sets the similar of this EndpointGetUsersIDSynergiesDataInnerMatchIndustry.


        :param similar: The similar of this EndpointGetUsersIDSynergiesDataInnerMatchIndustry.
        :type similar: bool
        """

        self._similar = similar
