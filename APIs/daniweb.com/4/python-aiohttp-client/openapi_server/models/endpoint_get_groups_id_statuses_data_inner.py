# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.group import Group
from openapi_server.models.group_message import GroupMessage
from openapi_server import util


class EndpointGetGroupsIDStatusesDataInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, earliest_unseen_message: GroupMessage=None, group: Group=None, membership_status: bool=None, new_message_count: float=None):
        """EndpointGetGroupsIDStatusesDataInner - a model defined in OpenAPI

        :param earliest_unseen_message: The earliest_unseen_message of this EndpointGetGroupsIDStatusesDataInner.
        :param group: The group of this EndpointGetGroupsIDStatusesDataInner.
        :param membership_status: The membership_status of this EndpointGetGroupsIDStatusesDataInner.
        :param new_message_count: The new_message_count of this EndpointGetGroupsIDStatusesDataInner.
        """
        self.openapi_types = {
            'earliest_unseen_message': GroupMessage,
            'group': Group,
            'membership_status': bool,
            'new_message_count': float
        }

        self.attribute_map = {
            'earliest_unseen_message': 'earliest_unseen_message',
            'group': 'group',
            'membership_status': 'membership_status',
            'new_message_count': 'new_message_count'
        }

        self._earliest_unseen_message = earliest_unseen_message
        self._group = group
        self._membership_status = membership_status
        self._new_message_count = new_message_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EndpointGetGroupsIDStatusesDataInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Endpoint_get_groups_ID_statuses_data_inner of this EndpointGetGroupsIDStatusesDataInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def earliest_unseen_message(self):
        """Gets the earliest_unseen_message of this EndpointGetGroupsIDStatusesDataInner.


        :return: The earliest_unseen_message of this EndpointGetGroupsIDStatusesDataInner.
        :rtype: GroupMessage
        """
        return self._earliest_unseen_message

    @earliest_unseen_message.setter
    def earliest_unseen_message(self, earliest_unseen_message):
        """Sets the earliest_unseen_message of this EndpointGetGroupsIDStatusesDataInner.


        :param earliest_unseen_message: The earliest_unseen_message of this EndpointGetGroupsIDStatusesDataInner.
        :type earliest_unseen_message: GroupMessage
        """

        self._earliest_unseen_message = earliest_unseen_message

    @property
    def group(self):
        """Gets the group of this EndpointGetGroupsIDStatusesDataInner.


        :return: The group of this EndpointGetGroupsIDStatusesDataInner.
        :rtype: Group
        """
        return self._group

    @group.setter
    def group(self, group):
        """Sets the group of this EndpointGetGroupsIDStatusesDataInner.


        :param group: The group of this EndpointGetGroupsIDStatusesDataInner.
        :type group: Group
        """

        self._group = group

    @property
    def membership_status(self):
        """Gets the membership_status of this EndpointGetGroupsIDStatusesDataInner.


        :return: The membership_status of this EndpointGetGroupsIDStatusesDataInner.
        :rtype: bool
        """
        return self._membership_status

    @membership_status.setter
    def membership_status(self, membership_status):
        """Sets the membership_status of this EndpointGetGroupsIDStatusesDataInner.


        :param membership_status: The membership_status of this EndpointGetGroupsIDStatusesDataInner.
        :type membership_status: bool
        """

        self._membership_status = membership_status

    @property
    def new_message_count(self):
        """Gets the new_message_count of this EndpointGetGroupsIDStatusesDataInner.


        :return: The new_message_count of this EndpointGetGroupsIDStatusesDataInner.
        :rtype: float
        """
        return self._new_message_count

    @new_message_count.setter
    def new_message_count(self, new_message_count):
        """Sets the new_message_count of this EndpointGetGroupsIDStatusesDataInner.


        :param new_message_count: The new_message_count of this EndpointGetGroupsIDStatusesDataInner.
        :type new_message_count: float
        """

        self._new_message_count = new_message_count
