# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.conversation import Conversation
from openapi_server.models.endpoint_get_users_id_synergies_data_inner_additional import EndpointGetUsersIDSynergiesDataInnerAdditional
from openapi_server.models.endpoint_get_users_id_synergies_data_inner_match import EndpointGetUsersIDSynergiesDataInnerMatch
from openapi_server.models.endpoint_get_users_id_synergies_data_inner_meet import EndpointGetUsersIDSynergiesDataInnerMeet
from openapi_server.models.endpoint_get_users_id_synergies_data_inner_relationship import EndpointGetUsersIDSynergiesDataInnerRelationship
from openapi_server import util


class EndpointGetUsersIDSynergiesDataInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, additional: EndpointGetUsersIDSynergiesDataInnerAdditional=None, conversation: Conversation=None, match: EndpointGetUsersIDSynergiesDataInnerMatch=None, meet: EndpointGetUsersIDSynergiesDataInnerMeet=None, relationship: EndpointGetUsersIDSynergiesDataInnerRelationship=None):
        """EndpointGetUsersIDSynergiesDataInner - a model defined in OpenAPI

        :param additional: The additional of this EndpointGetUsersIDSynergiesDataInner.
        :param conversation: The conversation of this EndpointGetUsersIDSynergiesDataInner.
        :param match: The match of this EndpointGetUsersIDSynergiesDataInner.
        :param meet: The meet of this EndpointGetUsersIDSynergiesDataInner.
        :param relationship: The relationship of this EndpointGetUsersIDSynergiesDataInner.
        """
        self.openapi_types = {
            'additional': EndpointGetUsersIDSynergiesDataInnerAdditional,
            'conversation': Conversation,
            'match': EndpointGetUsersIDSynergiesDataInnerMatch,
            'meet': EndpointGetUsersIDSynergiesDataInnerMeet,
            'relationship': EndpointGetUsersIDSynergiesDataInnerRelationship
        }

        self.attribute_map = {
            'additional': 'additional',
            'conversation': 'conversation',
            'match': 'match',
            'meet': 'meet',
            'relationship': 'relationship'
        }

        self._additional = additional
        self._conversation = conversation
        self._match = match
        self._meet = meet
        self._relationship = relationship

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EndpointGetUsersIDSynergiesDataInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Endpoint_get_users_ID_synergies_data_inner of this EndpointGetUsersIDSynergiesDataInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def additional(self):
        """Gets the additional of this EndpointGetUsersIDSynergiesDataInner.


        :return: The additional of this EndpointGetUsersIDSynergiesDataInner.
        :rtype: EndpointGetUsersIDSynergiesDataInnerAdditional
        """
        return self._additional

    @additional.setter
    def additional(self, additional):
        """Sets the additional of this EndpointGetUsersIDSynergiesDataInner.


        :param additional: The additional of this EndpointGetUsersIDSynergiesDataInner.
        :type additional: EndpointGetUsersIDSynergiesDataInnerAdditional
        """

        self._additional = additional

    @property
    def conversation(self):
        """Gets the conversation of this EndpointGetUsersIDSynergiesDataInner.


        :return: The conversation of this EndpointGetUsersIDSynergiesDataInner.
        :rtype: Conversation
        """
        return self._conversation

    @conversation.setter
    def conversation(self, conversation):
        """Sets the conversation of this EndpointGetUsersIDSynergiesDataInner.


        :param conversation: The conversation of this EndpointGetUsersIDSynergiesDataInner.
        :type conversation: Conversation
        """

        self._conversation = conversation

    @property
    def match(self):
        """Gets the match of this EndpointGetUsersIDSynergiesDataInner.


        :return: The match of this EndpointGetUsersIDSynergiesDataInner.
        :rtype: EndpointGetUsersIDSynergiesDataInnerMatch
        """
        return self._match

    @match.setter
    def match(self, match):
        """Sets the match of this EndpointGetUsersIDSynergiesDataInner.


        :param match: The match of this EndpointGetUsersIDSynergiesDataInner.
        :type match: EndpointGetUsersIDSynergiesDataInnerMatch
        """

        self._match = match

    @property
    def meet(self):
        """Gets the meet of this EndpointGetUsersIDSynergiesDataInner.


        :return: The meet of this EndpointGetUsersIDSynergiesDataInner.
        :rtype: EndpointGetUsersIDSynergiesDataInnerMeet
        """
        return self._meet

    @meet.setter
    def meet(self, meet):
        """Sets the meet of this EndpointGetUsersIDSynergiesDataInner.


        :param meet: The meet of this EndpointGetUsersIDSynergiesDataInner.
        :type meet: EndpointGetUsersIDSynergiesDataInnerMeet
        """

        self._meet = meet

    @property
    def relationship(self):
        """Gets the relationship of this EndpointGetUsersIDSynergiesDataInner.


        :return: The relationship of this EndpointGetUsersIDSynergiesDataInner.
        :rtype: EndpointGetUsersIDSynergiesDataInnerRelationship
        """
        return self._relationship

    @relationship.setter
    def relationship(self, relationship):
        """Sets the relationship of this EndpointGetUsersIDSynergiesDataInner.


        :param relationship: The relationship of this EndpointGetUsersIDSynergiesDataInner.
        :type relationship: EndpointGetUsersIDSynergiesDataInnerRelationship
        """

        self._relationship = relationship
