# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GroupProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, name: str=None, privacy: str=None, slug: str=None):
        """GroupProperties - a model defined in OpenAPI

        :param description: The description of this GroupProperties.
        :param name: The name of this GroupProperties.
        :param privacy: The privacy of this GroupProperties.
        :param slug: The slug of this GroupProperties.
        """
        self.openapi_types = {
            'description': str,
            'name': str,
            'privacy': str,
            'slug': str
        }

        self.attribute_map = {
            'description': 'description',
            'name': 'name',
            'privacy': 'privacy',
            'slug': 'slug'
        }

        self._description = description
        self._name = name
        self._privacy = privacy
        self._slug = slug

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GroupProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Group_properties of this GroupProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this GroupProperties.


        :return: The description of this GroupProperties.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this GroupProperties.


        :param description: The description of this GroupProperties.
        :type description: str
        """

        self._description = description

    @property
    def name(self):
        """Gets the name of this GroupProperties.


        :return: The name of this GroupProperties.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GroupProperties.


        :param name: The name of this GroupProperties.
        :type name: str
        """

        self._name = name

    @property
    def privacy(self):
        """Gets the privacy of this GroupProperties.


        :return: The privacy of this GroupProperties.
        :rtype: str
        """
        return self._privacy

    @privacy.setter
    def privacy(self, privacy):
        """Sets the privacy of this GroupProperties.


        :param privacy: The privacy of this GroupProperties.
        :type privacy: str
        """

        self._privacy = privacy

    @property
    def slug(self):
        """Gets the slug of this GroupProperties.


        :return: The slug of this GroupProperties.
        :rtype: str
        """
        return self._slug

    @slug.setter
    def slug(self, slug):
        """Sets the slug of this GroupProperties.


        :param slug: The slug of this GroupProperties.
        :type slug: str
        """

        self._slug = slug
