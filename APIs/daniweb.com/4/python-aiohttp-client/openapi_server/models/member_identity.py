# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MemberIdentity(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, avatar_uri: str=None, badge: str=None, profile_url: str=None, username: str=None):
        """MemberIdentity - a model defined in OpenAPI

        :param avatar_uri: The avatar_uri of this MemberIdentity.
        :param badge: The badge of this MemberIdentity.
        :param profile_url: The profile_url of this MemberIdentity.
        :param username: The username of this MemberIdentity.
        """
        self.openapi_types = {
            'avatar_uri': str,
            'badge': str,
            'profile_url': str,
            'username': str
        }

        self.attribute_map = {
            'avatar_uri': 'avatar_uri',
            'badge': 'badge',
            'profile_url': 'profile_url',
            'username': 'username'
        }

        self._avatar_uri = avatar_uri
        self._badge = badge
        self._profile_url = profile_url
        self._username = username

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MemberIdentity':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Member_identity of this MemberIdentity.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def avatar_uri(self):
        """Gets the avatar_uri of this MemberIdentity.


        :return: The avatar_uri of this MemberIdentity.
        :rtype: str
        """
        return self._avatar_uri

    @avatar_uri.setter
    def avatar_uri(self, avatar_uri):
        """Sets the avatar_uri of this MemberIdentity.


        :param avatar_uri: The avatar_uri of this MemberIdentity.
        :type avatar_uri: str
        """

        self._avatar_uri = avatar_uri

    @property
    def badge(self):
        """Gets the badge of this MemberIdentity.


        :return: The badge of this MemberIdentity.
        :rtype: str
        """
        return self._badge

    @badge.setter
    def badge(self, badge):
        """Sets the badge of this MemberIdentity.


        :param badge: The badge of this MemberIdentity.
        :type badge: str
        """

        self._badge = badge

    @property
    def profile_url(self):
        """Gets the profile_url of this MemberIdentity.


        :return: The profile_url of this MemberIdentity.
        :rtype: str
        """
        return self._profile_url

    @profile_url.setter
    def profile_url(self, profile_url):
        """Sets the profile_url of this MemberIdentity.


        :param profile_url: The profile_url of this MemberIdentity.
        :type profile_url: str
        """

        self._profile_url = profile_url

    @property
    def username(self):
        """Gets the username of this MemberIdentity.


        :return: The username of this MemberIdentity.
        :rtype: str
        """
        return self._username

    @username.setter
    def username(self, username):
        """Sets the username of this MemberIdentity.


        :param username: The username of this MemberIdentity.
        :type username: str
        """

        self._username = username
