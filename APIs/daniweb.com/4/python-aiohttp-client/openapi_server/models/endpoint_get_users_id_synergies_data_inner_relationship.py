# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EndpointGetUsersIDSynergiesDataInnerRelationship(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, existing_bubbled_conversation: bool=None, existing_conversation: bool=None, muted: bool=None, skipped: bool=None):
        """EndpointGetUsersIDSynergiesDataInnerRelationship - a model defined in OpenAPI

        :param existing_bubbled_conversation: The existing_bubbled_conversation of this EndpointGetUsersIDSynergiesDataInnerRelationship.
        :param existing_conversation: The existing_conversation of this EndpointGetUsersIDSynergiesDataInnerRelationship.
        :param muted: The muted of this EndpointGetUsersIDSynergiesDataInnerRelationship.
        :param skipped: The skipped of this EndpointGetUsersIDSynergiesDataInnerRelationship.
        """
        self.openapi_types = {
            'existing_bubbled_conversation': bool,
            'existing_conversation': bool,
            'muted': bool,
            'skipped': bool
        }

        self.attribute_map = {
            'existing_bubbled_conversation': 'existing_bubbled_conversation',
            'existing_conversation': 'existing_conversation',
            'muted': 'muted',
            'skipped': 'skipped'
        }

        self._existing_bubbled_conversation = existing_bubbled_conversation
        self._existing_conversation = existing_conversation
        self._muted = muted
        self._skipped = skipped

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EndpointGetUsersIDSynergiesDataInnerRelationship':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Endpoint_get_users_ID_synergies_data_inner_relationship of this EndpointGetUsersIDSynergiesDataInnerRelationship.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def existing_bubbled_conversation(self):
        """Gets the existing_bubbled_conversation of this EndpointGetUsersIDSynergiesDataInnerRelationship.


        :return: The existing_bubbled_conversation of this EndpointGetUsersIDSynergiesDataInnerRelationship.
        :rtype: bool
        """
        return self._existing_bubbled_conversation

    @existing_bubbled_conversation.setter
    def existing_bubbled_conversation(self, existing_bubbled_conversation):
        """Sets the existing_bubbled_conversation of this EndpointGetUsersIDSynergiesDataInnerRelationship.


        :param existing_bubbled_conversation: The existing_bubbled_conversation of this EndpointGetUsersIDSynergiesDataInnerRelationship.
        :type existing_bubbled_conversation: bool
        """

        self._existing_bubbled_conversation = existing_bubbled_conversation

    @property
    def existing_conversation(self):
        """Gets the existing_conversation of this EndpointGetUsersIDSynergiesDataInnerRelationship.


        :return: The existing_conversation of this EndpointGetUsersIDSynergiesDataInnerRelationship.
        :rtype: bool
        """
        return self._existing_conversation

    @existing_conversation.setter
    def existing_conversation(self, existing_conversation):
        """Sets the existing_conversation of this EndpointGetUsersIDSynergiesDataInnerRelationship.


        :param existing_conversation: The existing_conversation of this EndpointGetUsersIDSynergiesDataInnerRelationship.
        :type existing_conversation: bool
        """

        self._existing_conversation = existing_conversation

    @property
    def muted(self):
        """Gets the muted of this EndpointGetUsersIDSynergiesDataInnerRelationship.


        :return: The muted of this EndpointGetUsersIDSynergiesDataInnerRelationship.
        :rtype: bool
        """
        return self._muted

    @muted.setter
    def muted(self, muted):
        """Sets the muted of this EndpointGetUsersIDSynergiesDataInnerRelationship.


        :param muted: The muted of this EndpointGetUsersIDSynergiesDataInnerRelationship.
        :type muted: bool
        """

        self._muted = muted

    @property
    def skipped(self):
        """Gets the skipped of this EndpointGetUsersIDSynergiesDataInnerRelationship.


        :return: The skipped of this EndpointGetUsersIDSynergiesDataInnerRelationship.
        :rtype: bool
        """
        return self._skipped

    @skipped.setter
    def skipped(self, skipped):
        """Sets the skipped of this EndpointGetUsersIDSynergiesDataInnerRelationship.


        :param skipped: The skipped of this EndpointGetUsersIDSynergiesDataInnerRelationship.
        :type skipped: bool
        """

        self._skipped = skipped
