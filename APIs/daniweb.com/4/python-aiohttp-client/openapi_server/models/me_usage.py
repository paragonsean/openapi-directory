# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MeUsage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, available_status: bool=None, joined_timestamp: datetime=None, last_activity_timestamp: datetime=None, online_status: bool=None):
        """MeUsage - a model defined in OpenAPI

        :param available_status: The available_status of this MeUsage.
        :param joined_timestamp: The joined_timestamp of this MeUsage.
        :param last_activity_timestamp: The last_activity_timestamp of this MeUsage.
        :param online_status: The online_status of this MeUsage.
        """
        self.openapi_types = {
            'available_status': bool,
            'joined_timestamp': datetime,
            'last_activity_timestamp': datetime,
            'online_status': bool
        }

        self.attribute_map = {
            'available_status': 'available_status',
            'joined_timestamp': 'joined_timestamp',
            'last_activity_timestamp': 'last_activity_timestamp',
            'online_status': 'online_status'
        }

        self._available_status = available_status
        self._joined_timestamp = joined_timestamp
        self._last_activity_timestamp = last_activity_timestamp
        self._online_status = online_status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MeUsage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Me_usage of this MeUsage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def available_status(self):
        """Gets the available_status of this MeUsage.


        :return: The available_status of this MeUsage.
        :rtype: bool
        """
        return self._available_status

    @available_status.setter
    def available_status(self, available_status):
        """Sets the available_status of this MeUsage.


        :param available_status: The available_status of this MeUsage.
        :type available_status: bool
        """

        self._available_status = available_status

    @property
    def joined_timestamp(self):
        """Gets the joined_timestamp of this MeUsage.


        :return: The joined_timestamp of this MeUsage.
        :rtype: datetime
        """
        return self._joined_timestamp

    @joined_timestamp.setter
    def joined_timestamp(self, joined_timestamp):
        """Sets the joined_timestamp of this MeUsage.


        :param joined_timestamp: The joined_timestamp of this MeUsage.
        :type joined_timestamp: datetime
        """

        self._joined_timestamp = joined_timestamp

    @property
    def last_activity_timestamp(self):
        """Gets the last_activity_timestamp of this MeUsage.


        :return: The last_activity_timestamp of this MeUsage.
        :rtype: datetime
        """
        return self._last_activity_timestamp

    @last_activity_timestamp.setter
    def last_activity_timestamp(self, last_activity_timestamp):
        """Sets the last_activity_timestamp of this MeUsage.


        :param last_activity_timestamp: The last_activity_timestamp of this MeUsage.
        :type last_activity_timestamp: datetime
        """

        self._last_activity_timestamp = last_activity_timestamp

    @property
    def online_status(self):
        """Gets the online_status of this MeUsage.


        :return: The online_status of this MeUsage.
        :rtype: bool
        """
        return self._online_status

    @online_status.setter
    def online_status(self, online_status):
        """Sets the online_status of this MeUsage.


        :param online_status: The online_status of this MeUsage.
        :type online_status: bool
        """

        self._online_status = online_status
