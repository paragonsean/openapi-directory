# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EndpointGetUsersIDSynergiesDataInnerAdditional(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, metadata_count: float=None, positions_count: float=None):
        """EndpointGetUsersIDSynergiesDataInnerAdditional - a model defined in OpenAPI

        :param metadata_count: The metadata_count of this EndpointGetUsersIDSynergiesDataInnerAdditional.
        :param positions_count: The positions_count of this EndpointGetUsersIDSynergiesDataInnerAdditional.
        """
        self.openapi_types = {
            'metadata_count': float,
            'positions_count': float
        }

        self.attribute_map = {
            'metadata_count': 'metadata_count',
            'positions_count': 'positions_count'
        }

        self._metadata_count = metadata_count
        self._positions_count = positions_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EndpointGetUsersIDSynergiesDataInnerAdditional':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Endpoint_get_users_ID_synergies_data_inner_additional of this EndpointGetUsersIDSynergiesDataInnerAdditional.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def metadata_count(self):
        """Gets the metadata_count of this EndpointGetUsersIDSynergiesDataInnerAdditional.


        :return: The metadata_count of this EndpointGetUsersIDSynergiesDataInnerAdditional.
        :rtype: float
        """
        return self._metadata_count

    @metadata_count.setter
    def metadata_count(self, metadata_count):
        """Sets the metadata_count of this EndpointGetUsersIDSynergiesDataInnerAdditional.


        :param metadata_count: The metadata_count of this EndpointGetUsersIDSynergiesDataInnerAdditional.
        :type metadata_count: float
        """

        self._metadata_count = metadata_count

    @property
    def positions_count(self):
        """Gets the positions_count of this EndpointGetUsersIDSynergiesDataInnerAdditional.


        :return: The positions_count of this EndpointGetUsersIDSynergiesDataInnerAdditional.
        :rtype: float
        """
        return self._positions_count

    @positions_count.setter
    def positions_count(self, positions_count):
        """Sets the positions_count of this EndpointGetUsersIDSynergiesDataInnerAdditional.


        :param positions_count: The positions_count of this EndpointGetUsersIDSynergiesDataInnerAdditional.
        :type positions_count: float
        """

        self._positions_count = positions_count
