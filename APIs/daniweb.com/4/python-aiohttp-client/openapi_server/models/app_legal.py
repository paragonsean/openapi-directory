# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AppLegal(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, privacy_url: str=None, tos_url: str=None):
        """AppLegal - a model defined in OpenAPI

        :param privacy_url: The privacy_url of this AppLegal.
        :param tos_url: The tos_url of this AppLegal.
        """
        self.openapi_types = {
            'privacy_url': str,
            'tos_url': str
        }

        self.attribute_map = {
            'privacy_url': 'privacy_url',
            'tos_url': 'tos_url'
        }

        self._privacy_url = privacy_url
        self._tos_url = tos_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AppLegal':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The App_legal of this AppLegal.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def privacy_url(self):
        """Gets the privacy_url of this AppLegal.


        :return: The privacy_url of this AppLegal.
        :rtype: str
        """
        return self._privacy_url

    @privacy_url.setter
    def privacy_url(self, privacy_url):
        """Sets the privacy_url of this AppLegal.


        :param privacy_url: The privacy_url of this AppLegal.
        :type privacy_url: str
        """

        self._privacy_url = privacy_url

    @property
    def tos_url(self):
        """Gets the tos_url of this AppLegal.


        :return: The tos_url of this AppLegal.
        :rtype: str
        """
        return self._tos_url

    @tos_url.setter
    def tos_url(self, tos_url):
        """Sets the tos_url of this AppLegal.


        :param tos_url: The tos_url of this AppLegal.
        :type tos_url: str
        """

        self._tos_url = tos_url
