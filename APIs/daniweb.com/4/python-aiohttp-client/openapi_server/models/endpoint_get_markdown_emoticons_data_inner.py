# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EndpointGetMarkdownEmoticonsDataInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, alt: str=None, emoticon: str=None, image: str=None):
        """EndpointGetMarkdownEmoticonsDataInner - a model defined in OpenAPI

        :param alt: The alt of this EndpointGetMarkdownEmoticonsDataInner.
        :param emoticon: The emoticon of this EndpointGetMarkdownEmoticonsDataInner.
        :param image: The image of this EndpointGetMarkdownEmoticonsDataInner.
        """
        self.openapi_types = {
            'alt': str,
            'emoticon': str,
            'image': str
        }

        self.attribute_map = {
            'alt': 'alt',
            'emoticon': 'emoticon',
            'image': 'image'
        }

        self._alt = alt
        self._emoticon = emoticon
        self._image = image

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EndpointGetMarkdownEmoticonsDataInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Endpoint_get_markdown_emoticons_data_inner of this EndpointGetMarkdownEmoticonsDataInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def alt(self):
        """Gets the alt of this EndpointGetMarkdownEmoticonsDataInner.


        :return: The alt of this EndpointGetMarkdownEmoticonsDataInner.
        :rtype: str
        """
        return self._alt

    @alt.setter
    def alt(self, alt):
        """Sets the alt of this EndpointGetMarkdownEmoticonsDataInner.


        :param alt: The alt of this EndpointGetMarkdownEmoticonsDataInner.
        :type alt: str
        """

        self._alt = alt

    @property
    def emoticon(self):
        """Gets the emoticon of this EndpointGetMarkdownEmoticonsDataInner.


        :return: The emoticon of this EndpointGetMarkdownEmoticonsDataInner.
        :rtype: str
        """
        return self._emoticon

    @emoticon.setter
    def emoticon(self, emoticon):
        """Sets the emoticon of this EndpointGetMarkdownEmoticonsDataInner.


        :param emoticon: The emoticon of this EndpointGetMarkdownEmoticonsDataInner.
        :type emoticon: str
        """

        self._emoticon = emoticon

    @property
    def image(self):
        """Gets the image of this EndpointGetMarkdownEmoticonsDataInner.


        :return: The image of this EndpointGetMarkdownEmoticonsDataInner.
        :rtype: str
        """
        return self._image

    @image.setter
    def image(self, image):
        """Sets the image of this EndpointGetMarkdownEmoticonsDataInner.


        :param image: The image of this EndpointGetMarkdownEmoticonsDataInner.
        :type image: str
        """

        self._image = image
