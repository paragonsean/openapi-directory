# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.app import App
from openapi_server.models.user import User
from openapi_server.models.webhook_event import WebhookEvent
from openapi_server.models.webhook_object import WebhookObject
from openapi_server import util


class Webhook(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, app: App=None, event: WebhookEvent=None, id: float=None, name: str=None, object: WebhookObject=None, uri: str=None, user: User=None):
        """Webhook - a model defined in OpenAPI

        :param app: The app of this Webhook.
        :param event: The event of this Webhook.
        :param id: The id of this Webhook.
        :param name: The name of this Webhook.
        :param object: The object of this Webhook.
        :param uri: The uri of this Webhook.
        :param user: The user of this Webhook.
        """
        self.openapi_types = {
            'app': App,
            'event': WebhookEvent,
            'id': float,
            'name': str,
            'object': WebhookObject,
            'uri': str,
            'user': User
        }

        self.attribute_map = {
            'app': 'app',
            'event': 'event',
            'id': 'id',
            'name': 'name',
            'object': 'object',
            'uri': 'uri',
            'user': 'user'
        }

        self._app = app
        self._event = event
        self._id = id
        self._name = name
        self._object = object
        self._uri = uri
        self._user = user

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Webhook':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Webhook of this Webhook.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def app(self):
        """Gets the app of this Webhook.


        :return: The app of this Webhook.
        :rtype: App
        """
        return self._app

    @app.setter
    def app(self, app):
        """Sets the app of this Webhook.


        :param app: The app of this Webhook.
        :type app: App
        """

        self._app = app

    @property
    def event(self):
        """Gets the event of this Webhook.


        :return: The event of this Webhook.
        :rtype: WebhookEvent
        """
        return self._event

    @event.setter
    def event(self, event):
        """Sets the event of this Webhook.


        :param event: The event of this Webhook.
        :type event: WebhookEvent
        """

        self._event = event

    @property
    def id(self):
        """Gets the id of this Webhook.


        :return: The id of this Webhook.
        :rtype: float
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Webhook.


        :param id: The id of this Webhook.
        :type id: float
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")

        self._id = id

    @property
    def name(self):
        """Gets the name of this Webhook.


        :return: The name of this Webhook.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Webhook.


        :param name: The name of this Webhook.
        :type name: str
        """

        self._name = name

    @property
    def object(self):
        """Gets the object of this Webhook.


        :return: The object of this Webhook.
        :rtype: WebhookObject
        """
        return self._object

    @object.setter
    def object(self, object):
        """Sets the object of this Webhook.


        :param object: The object of this Webhook.
        :type object: WebhookObject
        """

        self._object = object

    @property
    def uri(self):
        """Gets the uri of this Webhook.


        :return: The uri of this Webhook.
        :rtype: str
        """
        return self._uri

    @uri.setter
    def uri(self, uri):
        """Sets the uri of this Webhook.


        :param uri: The uri of this Webhook.
        :type uri: str
        """

        self._uri = uri

    @property
    def user(self):
        """Gets the user of this Webhook.


        :return: The user of this Webhook.
        :rtype: User
        """
        return self._user

    @user.setter
    def user(self, user):
        """Sets the user of this Webhook.


        :param user: The user of this Webhook.
        :type user: User
        """

        self._user = user
