# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GroupMessageText(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, parsed: str=None):
        """GroupMessageText - a model defined in OpenAPI

        :param parsed: The parsed of this GroupMessageText.
        """
        self.openapi_types = {
            'parsed': str
        }

        self.attribute_map = {
            'parsed': 'parsed'
        }

        self._parsed = parsed

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GroupMessageText':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Group_message_text of this GroupMessageText.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def parsed(self):
        """Gets the parsed of this GroupMessageText.


        :return: The parsed of this GroupMessageText.
        :rtype: str
        """
        return self._parsed

    @parsed.setter
    def parsed(self, parsed):
        """Sets the parsed of this GroupMessageText.


        :param parsed: The parsed of this GroupMessageText.
        :type parsed: str
        """

        self._parsed = parsed
