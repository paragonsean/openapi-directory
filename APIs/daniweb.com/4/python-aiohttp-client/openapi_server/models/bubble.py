# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.bubble_about import BubbleAbout
from openapi_server import util


class Bubble(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, about: BubbleAbout=None, id: float=None):
        """Bubble - a model defined in OpenAPI

        :param about: The about of this Bubble.
        :param id: The id of this Bubble.
        """
        self.openapi_types = {
            'about': BubbleAbout,
            'id': float
        }

        self.attribute_map = {
            'about': 'about',
            'id': 'id'
        }

        self._about = about
        self._id = id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Bubble':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Bubble of this Bubble.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def about(self):
        """Gets the about of this Bubble.


        :return: The about of this Bubble.
        :rtype: BubbleAbout
        """
        return self._about

    @about.setter
    def about(self, about):
        """Sets the about of this Bubble.


        :param about: The about of this Bubble.
        :type about: BubbleAbout
        """

        self._about = about

    @property
    def id(self):
        """Gets the id of this Bubble.


        :return: The id of this Bubble.
        :rtype: float
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Bubble.


        :param id: The id of this Bubble.
        :type id: float
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")

        self._id = id
