# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.user import User
from openapi_server import util


class EndpointPostUsersMetadataFiltersDataInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, matched_metadata: Dict[str, List[str]]=None, user: User=None):
        """EndpointPostUsersMetadataFiltersDataInner - a model defined in OpenAPI

        :param matched_metadata: The matched_metadata of this EndpointPostUsersMetadataFiltersDataInner.
        :param user: The user of this EndpointPostUsersMetadataFiltersDataInner.
        """
        self.openapi_types = {
            'matched_metadata': Dict[str, List[str]],
            'user': User
        }

        self.attribute_map = {
            'matched_metadata': 'matched_metadata',
            'user': 'user'
        }

        self._matched_metadata = matched_metadata
        self._user = user

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EndpointPostUsersMetadataFiltersDataInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Endpoint_post_users_metadata_filters_data_inner of this EndpointPostUsersMetadataFiltersDataInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def matched_metadata(self):
        """Gets the matched_metadata of this EndpointPostUsersMetadataFiltersDataInner.


        :return: The matched_metadata of this EndpointPostUsersMetadataFiltersDataInner.
        :rtype: Dict[str, List[str]]
        """
        return self._matched_metadata

    @matched_metadata.setter
    def matched_metadata(self, matched_metadata):
        """Sets the matched_metadata of this EndpointPostUsersMetadataFiltersDataInner.


        :param matched_metadata: The matched_metadata of this EndpointPostUsersMetadataFiltersDataInner.
        :type matched_metadata: Dict[str, List[str]]
        """

        self._matched_metadata = matched_metadata

    @property
    def user(self):
        """Gets the user of this EndpointPostUsersMetadataFiltersDataInner.


        :return: The user of this EndpointPostUsersMetadataFiltersDataInner.
        :rtype: User
        """
        return self._user

    @user.setter
    def user(self, user):
        """Sets the user of this EndpointPostUsersMetadataFiltersDataInner.


        :param user: The user of this EndpointPostUsersMetadataFiltersDataInner.
        :type user: User
        """

        self._user = user
