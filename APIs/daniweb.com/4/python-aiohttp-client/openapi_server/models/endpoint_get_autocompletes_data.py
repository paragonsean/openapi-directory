# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EndpointGetAutocompletesData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, conversations: List[str]=None, locations: List[str]=None, matches: List[str]=None, people: List[str]=None):
        """EndpointGetAutocompletesData - a model defined in OpenAPI

        :param conversations: The conversations of this EndpointGetAutocompletesData.
        :param locations: The locations of this EndpointGetAutocompletesData.
        :param matches: The matches of this EndpointGetAutocompletesData.
        :param people: The people of this EndpointGetAutocompletesData.
        """
        self.openapi_types = {
            'conversations': List[str],
            'locations': List[str],
            'matches': List[str],
            'people': List[str]
        }

        self.attribute_map = {
            'conversations': 'conversations',
            'locations': 'locations',
            'matches': 'matches',
            'people': 'people'
        }

        self._conversations = conversations
        self._locations = locations
        self._matches = matches
        self._people = people

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EndpointGetAutocompletesData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Endpoint_get_autocompletes_data of this EndpointGetAutocompletesData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def conversations(self):
        """Gets the conversations of this EndpointGetAutocompletesData.


        :return: The conversations of this EndpointGetAutocompletesData.
        :rtype: List[str]
        """
        return self._conversations

    @conversations.setter
    def conversations(self, conversations):
        """Sets the conversations of this EndpointGetAutocompletesData.


        :param conversations: The conversations of this EndpointGetAutocompletesData.
        :type conversations: List[str]
        """

        self._conversations = conversations

    @property
    def locations(self):
        """Gets the locations of this EndpointGetAutocompletesData.


        :return: The locations of this EndpointGetAutocompletesData.
        :rtype: List[str]
        """
        return self._locations

    @locations.setter
    def locations(self, locations):
        """Sets the locations of this EndpointGetAutocompletesData.


        :param locations: The locations of this EndpointGetAutocompletesData.
        :type locations: List[str]
        """

        self._locations = locations

    @property
    def matches(self):
        """Gets the matches of this EndpointGetAutocompletesData.


        :return: The matches of this EndpointGetAutocompletesData.
        :rtype: List[str]
        """
        return self._matches

    @matches.setter
    def matches(self, matches):
        """Sets the matches of this EndpointGetAutocompletesData.


        :param matches: The matches of this EndpointGetAutocompletesData.
        :type matches: List[str]
        """

        self._matches = matches

    @property
    def people(self):
        """Gets the people of this EndpointGetAutocompletesData.


        :return: The people of this EndpointGetAutocompletesData.
        :rtype: List[str]
        """
        return self._people

    @people.setter
    def people(self, people):
        """Sets the people of this EndpointGetAutocompletesData.


        :param people: The people of this EndpointGetAutocompletesData.
        :type people: List[str]
        """

        self._people = people
