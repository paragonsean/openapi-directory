/**
 * DaniWeb Connect API
 * User Recommendation Engine and Chat Network
 *
 * The version of the OpenAPI document: 4
 * Contact: dani@daniwebmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEndpoint_get_users_ID_synergies_data_inner_additional.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEndpoint_get_users_ID_synergies_data_inner_additional::OAIEndpoint_get_users_ID_synergies_data_inner_additional(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEndpoint_get_users_ID_synergies_data_inner_additional::OAIEndpoint_get_users_ID_synergies_data_inner_additional() {
    this->initializeModel();
}

OAIEndpoint_get_users_ID_synergies_data_inner_additional::~OAIEndpoint_get_users_ID_synergies_data_inner_additional() {}

void OAIEndpoint_get_users_ID_synergies_data_inner_additional::initializeModel() {

    m_metadata_count_isSet = false;
    m_metadata_count_isValid = false;

    m_positions_count_isSet = false;
    m_positions_count_isValid = false;
}

void OAIEndpoint_get_users_ID_synergies_data_inner_additional::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEndpoint_get_users_ID_synergies_data_inner_additional::fromJsonObject(QJsonObject json) {

    m_metadata_count_isValid = ::OpenAPI::fromJsonValue(m_metadata_count, json[QString("metadata_count")]);
    m_metadata_count_isSet = !json[QString("metadata_count")].isNull() && m_metadata_count_isValid;

    m_positions_count_isValid = ::OpenAPI::fromJsonValue(m_positions_count, json[QString("positions_count")]);
    m_positions_count_isSet = !json[QString("positions_count")].isNull() && m_positions_count_isValid;
}

QString OAIEndpoint_get_users_ID_synergies_data_inner_additional::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEndpoint_get_users_ID_synergies_data_inner_additional::asJsonObject() const {
    QJsonObject obj;
    if (m_metadata_count_isSet) {
        obj.insert(QString("metadata_count"), ::OpenAPI::toJsonValue(m_metadata_count));
    }
    if (m_positions_count_isSet) {
        obj.insert(QString("positions_count"), ::OpenAPI::toJsonValue(m_positions_count));
    }
    return obj;
}

double OAIEndpoint_get_users_ID_synergies_data_inner_additional::getMetadataCount() const {
    return m_metadata_count;
}
void OAIEndpoint_get_users_ID_synergies_data_inner_additional::setMetadataCount(const double &metadata_count) {
    m_metadata_count = metadata_count;
    m_metadata_count_isSet = true;
}

bool OAIEndpoint_get_users_ID_synergies_data_inner_additional::is_metadata_count_Set() const{
    return m_metadata_count_isSet;
}

bool OAIEndpoint_get_users_ID_synergies_data_inner_additional::is_metadata_count_Valid() const{
    return m_metadata_count_isValid;
}

double OAIEndpoint_get_users_ID_synergies_data_inner_additional::getPositionsCount() const {
    return m_positions_count;
}
void OAIEndpoint_get_users_ID_synergies_data_inner_additional::setPositionsCount(const double &positions_count) {
    m_positions_count = positions_count;
    m_positions_count_isSet = true;
}

bool OAIEndpoint_get_users_ID_synergies_data_inner_additional::is_positions_count_Set() const{
    return m_positions_count_isSet;
}

bool OAIEndpoint_get_users_ID_synergies_data_inner_additional::is_positions_count_Valid() const{
    return m_positions_count_isValid;
}

bool OAIEndpoint_get_users_ID_synergies_data_inner_additional::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_metadata_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_positions_count_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEndpoint_get_users_ID_synergies_data_inner_additional::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
