/**
 * DaniWeb Connect API
 * User Recommendation Engine and Chat Network
 *
 * The version of the OpenAPI document: 4
 * Contact: dani@daniwebmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMember_personal.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMember_personal::OAIMember_personal(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMember_personal::OAIMember_personal() {
    this->initializeModel();
}

OAIMember_personal::~OAIMember_personal() {}

void OAIMember_personal::initializeModel() {

    m_about_me_isSet = false;
    m_about_me_isValid = false;

    m_birthday_isSet = false;
    m_birthday_isValid = false;

    m_interests_isSet = false;
    m_interests_isValid = false;

    m_pc_specs_isSet = false;
    m_pc_specs_isValid = false;
}

void OAIMember_personal::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMember_personal::fromJsonObject(QJsonObject json) {

    m_about_me_isValid = ::OpenAPI::fromJsonValue(m_about_me, json[QString("about_me")]);
    m_about_me_isSet = !json[QString("about_me")].isNull() && m_about_me_isValid;

    m_birthday_isValid = ::OpenAPI::fromJsonValue(m_birthday, json[QString("birthday")]);
    m_birthday_isSet = !json[QString("birthday")].isNull() && m_birthday_isValid;

    m_interests_isValid = ::OpenAPI::fromJsonValue(m_interests, json[QString("interests")]);
    m_interests_isSet = !json[QString("interests")].isNull() && m_interests_isValid;

    m_pc_specs_isValid = ::OpenAPI::fromJsonValue(m_pc_specs, json[QString("pc_specs")]);
    m_pc_specs_isSet = !json[QString("pc_specs")].isNull() && m_pc_specs_isValid;
}

QString OAIMember_personal::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMember_personal::asJsonObject() const {
    QJsonObject obj;
    if (m_about_me_isSet) {
        obj.insert(QString("about_me"), ::OpenAPI::toJsonValue(m_about_me));
    }
    if (m_birthday_isSet) {
        obj.insert(QString("birthday"), ::OpenAPI::toJsonValue(m_birthday));
    }
    if (m_interests_isSet) {
        obj.insert(QString("interests"), ::OpenAPI::toJsonValue(m_interests));
    }
    if (m_pc_specs_isSet) {
        obj.insert(QString("pc_specs"), ::OpenAPI::toJsonValue(m_pc_specs));
    }
    return obj;
}

QString OAIMember_personal::getAboutMe() const {
    return m_about_me;
}
void OAIMember_personal::setAboutMe(const QString &about_me) {
    m_about_me = about_me;
    m_about_me_isSet = true;
}

bool OAIMember_personal::is_about_me_Set() const{
    return m_about_me_isSet;
}

bool OAIMember_personal::is_about_me_Valid() const{
    return m_about_me_isValid;
}

QString OAIMember_personal::getBirthday() const {
    return m_birthday;
}
void OAIMember_personal::setBirthday(const QString &birthday) {
    m_birthday = birthday;
    m_birthday_isSet = true;
}

bool OAIMember_personal::is_birthday_Set() const{
    return m_birthday_isSet;
}

bool OAIMember_personal::is_birthday_Valid() const{
    return m_birthday_isValid;
}

QString OAIMember_personal::getInterests() const {
    return m_interests;
}
void OAIMember_personal::setInterests(const QString &interests) {
    m_interests = interests;
    m_interests_isSet = true;
}

bool OAIMember_personal::is_interests_Set() const{
    return m_interests_isSet;
}

bool OAIMember_personal::is_interests_Valid() const{
    return m_interests_isValid;
}

QString OAIMember_personal::getPcSpecs() const {
    return m_pc_specs;
}
void OAIMember_personal::setPcSpecs(const QString &pc_specs) {
    m_pc_specs = pc_specs;
    m_pc_specs_isSet = true;
}

bool OAIMember_personal::is_pc_specs_Set() const{
    return m_pc_specs_isSet;
}

bool OAIMember_personal::is_pc_specs_Valid() const{
    return m_pc_specs_isValid;
}

bool OAIMember_personal::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_about_me_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_birthday_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_interests_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pc_specs_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMember_personal::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
