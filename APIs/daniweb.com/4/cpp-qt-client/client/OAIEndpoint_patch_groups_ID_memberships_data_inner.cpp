/**
 * DaniWeb Connect API
 * User Recommendation Engine and Chat Network
 *
 * The version of the OpenAPI document: 4
 * Contact: dani@daniwebmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEndpoint_patch_groups_ID_memberships_data_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEndpoint_patch_groups_ID_memberships_data_inner::OAIEndpoint_patch_groups_ID_memberships_data_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEndpoint_patch_groups_ID_memberships_data_inner::OAIEndpoint_patch_groups_ID_memberships_data_inner() {
    this->initializeModel();
}

OAIEndpoint_patch_groups_ID_memberships_data_inner::~OAIEndpoint_patch_groups_ID_memberships_data_inner() {}

void OAIEndpoint_patch_groups_ID_memberships_data_inner::initializeModel() {

    m_group_isSet = false;
    m_group_isValid = false;

    m_member_isSet = false;
    m_member_isValid = false;

    m_privileges_isSet = false;
    m_privileges_isValid = false;
}

void OAIEndpoint_patch_groups_ID_memberships_data_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEndpoint_patch_groups_ID_memberships_data_inner::fromJsonObject(QJsonObject json) {

    m_group_isValid = ::OpenAPI::fromJsonValue(m_group, json[QString("group")]);
    m_group_isSet = !json[QString("group")].isNull() && m_group_isValid;

    m_member_isValid = ::OpenAPI::fromJsonValue(m_member, json[QString("member")]);
    m_member_isSet = !json[QString("member")].isNull() && m_member_isValid;

    m_privileges_isValid = ::OpenAPI::fromJsonValue(m_privileges, json[QString("privileges")]);
    m_privileges_isSet = !json[QString("privileges")].isNull() && m_privileges_isValid;
}

QString OAIEndpoint_patch_groups_ID_memberships_data_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEndpoint_patch_groups_ID_memberships_data_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_group.isSet()) {
        obj.insert(QString("group"), ::OpenAPI::toJsonValue(m_group));
    }
    if (m_member.isSet()) {
        obj.insert(QString("member"), ::OpenAPI::toJsonValue(m_member));
    }
    if (m_privileges.isSet()) {
        obj.insert(QString("privileges"), ::OpenAPI::toJsonValue(m_privileges));
    }
    return obj;
}

OAIGroup OAIEndpoint_patch_groups_ID_memberships_data_inner::getGroup() const {
    return m_group;
}
void OAIEndpoint_patch_groups_ID_memberships_data_inner::setGroup(const OAIGroup &group) {
    m_group = group;
    m_group_isSet = true;
}

bool OAIEndpoint_patch_groups_ID_memberships_data_inner::is_group_Set() const{
    return m_group_isSet;
}

bool OAIEndpoint_patch_groups_ID_memberships_data_inner::is_group_Valid() const{
    return m_group_isValid;
}

OAIUser OAIEndpoint_patch_groups_ID_memberships_data_inner::getMember() const {
    return m_member;
}
void OAIEndpoint_patch_groups_ID_memberships_data_inner::setMember(const OAIUser &member) {
    m_member = member;
    m_member_isSet = true;
}

bool OAIEndpoint_patch_groups_ID_memberships_data_inner::is_member_Set() const{
    return m_member_isSet;
}

bool OAIEndpoint_patch_groups_ID_memberships_data_inner::is_member_Valid() const{
    return m_member_isValid;
}

OAIEndpoint_patch_groups_ID_memberships_data_inner_privileges OAIEndpoint_patch_groups_ID_memberships_data_inner::getPrivileges() const {
    return m_privileges;
}
void OAIEndpoint_patch_groups_ID_memberships_data_inner::setPrivileges(const OAIEndpoint_patch_groups_ID_memberships_data_inner_privileges &privileges) {
    m_privileges = privileges;
    m_privileges_isSet = true;
}

bool OAIEndpoint_patch_groups_ID_memberships_data_inner::is_privileges_Set() const{
    return m_privileges_isSet;
}

bool OAIEndpoint_patch_groups_ID_memberships_data_inner::is_privileges_Valid() const{
    return m_privileges_isValid;
}

bool OAIEndpoint_patch_groups_ID_memberships_data_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_group.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_member.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_privileges.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEndpoint_patch_groups_ID_memberships_data_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
