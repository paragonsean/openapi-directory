/**
 * DaniWeb Connect API
 * User Recommendation Engine and Chat Network
 *
 * The version of the OpenAPI document: 4
 * Contact: dani@daniwebmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMe_settings.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMe_settings::OAIMe_settings(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMe_settings::OAIMe_settings() {
    this->initializeModel();
}

OAIMe_settings::~OAIMe_settings() {}

void OAIMe_settings::initializeModel() {

    m_email_isSet = false;
    m_email_isValid = false;

    m_email_verified_isSet = false;
    m_email_verified_isValid = false;

    m_notifications_isSet = false;
    m_notifications_isValid = false;

    m_timezone_isSet = false;
    m_timezone_isValid = false;
}

void OAIMe_settings::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMe_settings::fromJsonObject(QJsonObject json) {

    m_email_isValid = ::OpenAPI::fromJsonValue(m_email, json[QString("email")]);
    m_email_isSet = !json[QString("email")].isNull() && m_email_isValid;

    m_email_verified_isValid = ::OpenAPI::fromJsonValue(m_email_verified, json[QString("email_verified")]);
    m_email_verified_isSet = !json[QString("email_verified")].isNull() && m_email_verified_isValid;

    m_notifications_isValid = ::OpenAPI::fromJsonValue(m_notifications, json[QString("notifications")]);
    m_notifications_isSet = !json[QString("notifications")].isNull() && m_notifications_isValid;

    m_timezone_isValid = ::OpenAPI::fromJsonValue(m_timezone, json[QString("timezone")]);
    m_timezone_isSet = !json[QString("timezone")].isNull() && m_timezone_isValid;
}

QString OAIMe_settings::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMe_settings::asJsonObject() const {
    QJsonObject obj;
    if (m_email_isSet) {
        obj.insert(QString("email"), ::OpenAPI::toJsonValue(m_email));
    }
    if (m_email_verified_isSet) {
        obj.insert(QString("email_verified"), ::OpenAPI::toJsonValue(m_email_verified));
    }
    if (m_notifications_isSet) {
        obj.insert(QString("notifications"), ::OpenAPI::toJsonValue(m_notifications));
    }
    if (m_timezone_isSet) {
        obj.insert(QString("timezone"), ::OpenAPI::toJsonValue(m_timezone));
    }
    return obj;
}

QString OAIMe_settings::getEmail() const {
    return m_email;
}
void OAIMe_settings::setEmail(const QString &email) {
    m_email = email;
    m_email_isSet = true;
}

bool OAIMe_settings::is_email_Set() const{
    return m_email_isSet;
}

bool OAIMe_settings::is_email_Valid() const{
    return m_email_isValid;
}

bool OAIMe_settings::isEmailVerified() const {
    return m_email_verified;
}
void OAIMe_settings::setEmailVerified(const bool &email_verified) {
    m_email_verified = email_verified;
    m_email_verified_isSet = true;
}

bool OAIMe_settings::is_email_verified_Set() const{
    return m_email_verified_isSet;
}

bool OAIMe_settings::is_email_verified_Valid() const{
    return m_email_verified_isValid;
}

QString OAIMe_settings::getNotifications() const {
    return m_notifications;
}
void OAIMe_settings::setNotifications(const QString &notifications) {
    m_notifications = notifications;
    m_notifications_isSet = true;
}

bool OAIMe_settings::is_notifications_Set() const{
    return m_notifications_isSet;
}

bool OAIMe_settings::is_notifications_Valid() const{
    return m_notifications_isValid;
}

double OAIMe_settings::getTimezone() const {
    return m_timezone;
}
void OAIMe_settings::setTimezone(const double &timezone) {
    m_timezone = timezone;
    m_timezone_isSet = true;
}

bool OAIMe_settings::is_timezone_Set() const{
    return m_timezone_isSet;
}

bool OAIMe_settings::is_timezone_Valid() const{
    return m_timezone_isValid;
}

bool OAIMe_settings::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_verified_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_notifications_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_timezone_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMe_settings::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
