/**
 * DaniWeb Connect API
 * User Recommendation Engine and Chat Network
 *
 * The version of the OpenAPI document: 4
 * Contact: dani@daniwebmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEndpoint_post_markdown_data.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEndpoint_post_markdown_data::OAIEndpoint_post_markdown_data(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEndpoint_post_markdown_data::OAIEndpoint_post_markdown_data() {
    this->initializeModel();
}

OAIEndpoint_post_markdown_data::~OAIEndpoint_post_markdown_data() {}

void OAIEndpoint_post_markdown_data::initializeModel() {

    m_parsed_isSet = false;
    m_parsed_isValid = false;

    m_raw_isSet = false;
    m_raw_isValid = false;
}

void OAIEndpoint_post_markdown_data::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEndpoint_post_markdown_data::fromJsonObject(QJsonObject json) {

    m_parsed_isValid = ::OpenAPI::fromJsonValue(m_parsed, json[QString("parsed")]);
    m_parsed_isSet = !json[QString("parsed")].isNull() && m_parsed_isValid;

    m_raw_isValid = ::OpenAPI::fromJsonValue(m_raw, json[QString("raw")]);
    m_raw_isSet = !json[QString("raw")].isNull() && m_raw_isValid;
}

QString OAIEndpoint_post_markdown_data::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEndpoint_post_markdown_data::asJsonObject() const {
    QJsonObject obj;
    if (m_parsed_isSet) {
        obj.insert(QString("parsed"), ::OpenAPI::toJsonValue(m_parsed));
    }
    if (m_raw_isSet) {
        obj.insert(QString("raw"), ::OpenAPI::toJsonValue(m_raw));
    }
    return obj;
}

QString OAIEndpoint_post_markdown_data::getParsed() const {
    return m_parsed;
}
void OAIEndpoint_post_markdown_data::setParsed(const QString &parsed) {
    m_parsed = parsed;
    m_parsed_isSet = true;
}

bool OAIEndpoint_post_markdown_data::is_parsed_Set() const{
    return m_parsed_isSet;
}

bool OAIEndpoint_post_markdown_data::is_parsed_Valid() const{
    return m_parsed_isValid;
}

QString OAIEndpoint_post_markdown_data::getRaw() const {
    return m_raw;
}
void OAIEndpoint_post_markdown_data::setRaw(const QString &raw) {
    m_raw = raw;
    m_raw_isSet = true;
}

bool OAIEndpoint_post_markdown_data::is_raw_Set() const{
    return m_raw_isSet;
}

bool OAIEndpoint_post_markdown_data::is_raw_Valid() const{
    return m_raw_isValid;
}

bool OAIEndpoint_post_markdown_data::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_parsed_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_raw_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEndpoint_post_markdown_data::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
