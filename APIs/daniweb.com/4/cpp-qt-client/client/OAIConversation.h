/**
 * DaniWeb Connect API
 * User Recommendation Engine and Chat Network
 *
 * The version of the OpenAPI document: 4
 * Contact: dani@daniwebmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIConversation.h
 *
 * 
 */

#ifndef OAIConversation_H
#define OAIConversation_H

#include <QJsonObject>

#include "OAIConversation_first_message.h"
#include "OAIMessage.h"
#include "OAIUser.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIConversation_first_message;
class OAIMessage;
class OAIUser;

class OAIConversation : public OAIObject {
public:
    OAIConversation();
    OAIConversation(QString json);
    ~OAIConversation() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIConversation_first_message getFirstMessage() const;
    void setFirstMessage(const OAIConversation_first_message &first_message);
    bool is_first_message_Set() const;
    bool is_first_message_Valid() const;

    double getId() const;
    void setId(const double &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAIMessage getLatestMessage() const;
    void setLatestMessage(const OAIMessage &latest_message);
    bool is_latest_message_Set() const;
    bool is_latest_message_Valid() const;

    OAIUser getUserA() const;
    void setUserA(const OAIUser &user_a);
    bool is_user_a_Set() const;
    bool is_user_a_Valid() const;

    OAIUser getUserB() const;
    void setUserB(const OAIUser &user_b);
    bool is_user_b_Set() const;
    bool is_user_b_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIConversation_first_message m_first_message;
    bool m_first_message_isSet;
    bool m_first_message_isValid;

    double m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAIMessage m_latest_message;
    bool m_latest_message_isSet;
    bool m_latest_message_isValid;

    OAIUser m_user_a;
    bool m_user_a_isSet;
    bool m_user_a_isValid;

    OAIUser m_user_b;
    bool m_user_b_isSet;
    bool m_user_b_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIConversation)

#endif // OAIConversation_H
