/**
 * DaniWeb Connect API
 * User Recommendation Engine and Chat Network
 *
 * The version of the OpenAPI document: 4
 * Contact: dani@daniwebmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEndpoint_get_users_ID_synergies_data_inner_meet.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEndpoint_get_users_ID_synergies_data_inner_meet::OAIEndpoint_get_users_ID_synergies_data_inner_meet(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEndpoint_get_users_ID_synergies_data_inner_meet::OAIEndpoint_get_users_ID_synergies_data_inner_meet() {
    this->initializeModel();
}

OAIEndpoint_get_users_ID_synergies_data_inner_meet::~OAIEndpoint_get_users_ID_synergies_data_inner_meet() {}

void OAIEndpoint_get_users_ID_synergies_data_inner_meet::initializeModel() {

    m_payment_isSet = false;
    m_payment_isValid = false;

    m_price_usd_isSet = false;
    m_price_usd_isValid = false;
}

void OAIEndpoint_get_users_ID_synergies_data_inner_meet::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEndpoint_get_users_ID_synergies_data_inner_meet::fromJsonObject(QJsonObject json) {

    m_payment_isValid = ::OpenAPI::fromJsonValue(m_payment, json[QString("payment")]);
    m_payment_isSet = !json[QString("payment")].isNull() && m_payment_isValid;

    m_price_usd_isValid = ::OpenAPI::fromJsonValue(m_price_usd, json[QString("price_usd")]);
    m_price_usd_isSet = !json[QString("price_usd")].isNull() && m_price_usd_isValid;
}

QString OAIEndpoint_get_users_ID_synergies_data_inner_meet::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEndpoint_get_users_ID_synergies_data_inner_meet::asJsonObject() const {
    QJsonObject obj;
    if (m_payment.isSet()) {
        obj.insert(QString("payment"), ::OpenAPI::toJsonValue(m_payment));
    }
    if (m_price_usd_isSet) {
        obj.insert(QString("price_usd"), ::OpenAPI::toJsonValue(m_price_usd));
    }
    return obj;
}

OAIEndpoint_get_users_ID_synergies_data_inner_meet_payment OAIEndpoint_get_users_ID_synergies_data_inner_meet::getPayment() const {
    return m_payment;
}
void OAIEndpoint_get_users_ID_synergies_data_inner_meet::setPayment(const OAIEndpoint_get_users_ID_synergies_data_inner_meet_payment &payment) {
    m_payment = payment;
    m_payment_isSet = true;
}

bool OAIEndpoint_get_users_ID_synergies_data_inner_meet::is_payment_Set() const{
    return m_payment_isSet;
}

bool OAIEndpoint_get_users_ID_synergies_data_inner_meet::is_payment_Valid() const{
    return m_payment_isValid;
}

float OAIEndpoint_get_users_ID_synergies_data_inner_meet::getPriceUsd() const {
    return m_price_usd;
}
void OAIEndpoint_get_users_ID_synergies_data_inner_meet::setPriceUsd(const float &price_usd) {
    m_price_usd = price_usd;
    m_price_usd_isSet = true;
}

bool OAIEndpoint_get_users_ID_synergies_data_inner_meet::is_price_usd_Set() const{
    return m_price_usd_isSet;
}

bool OAIEndpoint_get_users_ID_synergies_data_inner_meet::is_price_usd_Valid() const{
    return m_price_usd_isValid;
}

bool OAIEndpoint_get_users_ID_synergies_data_inner_meet::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_payment.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_price_usd_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEndpoint_get_users_ID_synergies_data_inner_meet::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
