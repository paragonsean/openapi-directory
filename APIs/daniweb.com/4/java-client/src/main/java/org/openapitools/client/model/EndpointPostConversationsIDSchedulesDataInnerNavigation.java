/*
 * DaniWeb Connect API
 * User Recommendation Engine and Chat Network
 *
 * The version of the OpenAPI document: 4
 * Contact: dani@daniwebmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.LocalDate;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * EndpointPostConversationsIDSchedulesDataInnerNavigation
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:04:21.899808-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class EndpointPostConversationsIDSchedulesDataInnerNavigation {
  public static final String SERIALIZED_NAME_EARLIEST_DATE = "earliest_date";
  @SerializedName(SERIALIZED_NAME_EARLIEST_DATE)
  private LocalDate earliestDate;

  public static final String SERIALIZED_NAME_NEXT_DATE = "next_date";
  @SerializedName(SERIALIZED_NAME_NEXT_DATE)
  private LocalDate nextDate;

  public static final String SERIALIZED_NAME_PREVIOUS_DATE = "previous_date";
  @SerializedName(SERIALIZED_NAME_PREVIOUS_DATE)
  private LocalDate previousDate;

  public EndpointPostConversationsIDSchedulesDataInnerNavigation() {
  }

  public EndpointPostConversationsIDSchedulesDataInnerNavigation earliestDate(LocalDate earliestDate) {
    this.earliestDate = earliestDate;
    return this;
  }

  /**
   * Get earliestDate
   * @return earliestDate
   */
  @javax.annotation.Nullable
  public LocalDate getEarliestDate() {
    return earliestDate;
  }

  public void setEarliestDate(LocalDate earliestDate) {
    this.earliestDate = earliestDate;
  }


  public EndpointPostConversationsIDSchedulesDataInnerNavigation nextDate(LocalDate nextDate) {
    this.nextDate = nextDate;
    return this;
  }

  /**
   * Get nextDate
   * @return nextDate
   */
  @javax.annotation.Nullable
  public LocalDate getNextDate() {
    return nextDate;
  }

  public void setNextDate(LocalDate nextDate) {
    this.nextDate = nextDate;
  }


  public EndpointPostConversationsIDSchedulesDataInnerNavigation previousDate(LocalDate previousDate) {
    this.previousDate = previousDate;
    return this;
  }

  /**
   * Get previousDate
   * @return previousDate
   */
  @javax.annotation.Nullable
  public LocalDate getPreviousDate() {
    return previousDate;
  }

  public void setPreviousDate(LocalDate previousDate) {
    this.previousDate = previousDate;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EndpointPostConversationsIDSchedulesDataInnerNavigation endpointPostConversationsIDSchedulesDataInnerNavigation = (EndpointPostConversationsIDSchedulesDataInnerNavigation) o;
    return Objects.equals(this.earliestDate, endpointPostConversationsIDSchedulesDataInnerNavigation.earliestDate) &&
        Objects.equals(this.nextDate, endpointPostConversationsIDSchedulesDataInnerNavigation.nextDate) &&
        Objects.equals(this.previousDate, endpointPostConversationsIDSchedulesDataInnerNavigation.previousDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(earliestDate, nextDate, previousDate);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EndpointPostConversationsIDSchedulesDataInnerNavigation {\n");
    sb.append("    earliestDate: ").append(toIndentedString(earliestDate)).append("\n");
    sb.append("    nextDate: ").append(toIndentedString(nextDate)).append("\n");
    sb.append("    previousDate: ").append(toIndentedString(previousDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("earliest_date");
    openapiFields.add("next_date");
    openapiFields.add("previous_date");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to EndpointPostConversationsIDSchedulesDataInnerNavigation
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!EndpointPostConversationsIDSchedulesDataInnerNavigation.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in EndpointPostConversationsIDSchedulesDataInnerNavigation is not found in the empty JSON string", EndpointPostConversationsIDSchedulesDataInnerNavigation.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!EndpointPostConversationsIDSchedulesDataInnerNavigation.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `EndpointPostConversationsIDSchedulesDataInnerNavigation` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EndpointPostConversationsIDSchedulesDataInnerNavigation.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EndpointPostConversationsIDSchedulesDataInnerNavigation' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EndpointPostConversationsIDSchedulesDataInnerNavigation> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EndpointPostConversationsIDSchedulesDataInnerNavigation.class));

       return (TypeAdapter<T>) new TypeAdapter<EndpointPostConversationsIDSchedulesDataInnerNavigation>() {
           @Override
           public void write(JsonWriter out, EndpointPostConversationsIDSchedulesDataInnerNavigation value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public EndpointPostConversationsIDSchedulesDataInnerNavigation read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of EndpointPostConversationsIDSchedulesDataInnerNavigation given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of EndpointPostConversationsIDSchedulesDataInnerNavigation
   * @throws IOException if the JSON string is invalid with respect to EndpointPostConversationsIDSchedulesDataInnerNavigation
   */
  public static EndpointPostConversationsIDSchedulesDataInnerNavigation fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EndpointPostConversationsIDSchedulesDataInnerNavigation.class);
  }

  /**
   * Convert an instance of EndpointPostConversationsIDSchedulesDataInnerNavigation to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

