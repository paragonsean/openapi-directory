/**
 * DaniWeb Connect API
 * User Recommendation Engine and Chat Network
 *
 * The version of the OpenAPI document: 4
 * Contact: dani@daniwebmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import App from './App';
import GroupMessage from './GroupMessage';
import GroupMessageDataContent from './GroupMessageDataContent';
import GroupMessageDataSettings from './GroupMessageDataSettings';
import GroupMessageDataStatus from './GroupMessageDataStatus';
import User from './User';

/**
 * The GroupMessageData model module.
 * @module model/GroupMessageData
 * @version 4
 */
class GroupMessageData {
    /**
     * Constructs a new <code>GroupMessageData</code>.
     * @alias module:model/GroupMessageData
     * @param id {Number} 
     */
    constructor(id) { 
        
        GroupMessageData.initialize(this, id);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id) { 
        obj['id'] = id;
    }

    /**
     * Constructs a <code>GroupMessageData</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GroupMessageData} obj Optional instance to populate.
     * @return {module:model/GroupMessageData} The populated <code>GroupMessageData</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GroupMessageData();

            if (data.hasOwnProperty('app')) {
                obj['app'] = App.constructFromObject(data['app']);
            }
            if (data.hasOwnProperty('content')) {
                obj['content'] = GroupMessageDataContent.constructFromObject(data['content']);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('message')) {
                obj['message'] = GroupMessage.constructFromObject(data['message']);
            }
            if (data.hasOwnProperty('owner')) {
                obj['owner'] = User.constructFromObject(data['owner']);
            }
            if (data.hasOwnProperty('settings')) {
                obj['settings'] = GroupMessageDataSettings.constructFromObject(data['settings']);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = GroupMessageDataStatus.constructFromObject(data['status']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GroupMessageData</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GroupMessageData</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of GroupMessageData.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `app`
        if (data['app']) { // data not null
          App.validateJSON(data['app']);
        }
        // validate the optional field `content`
        if (data['content']) { // data not null
          GroupMessageDataContent.validateJSON(data['content']);
        }
        // validate the optional field `message`
        if (data['message']) { // data not null
          GroupMessage.validateJSON(data['message']);
        }
        // validate the optional field `owner`
        if (data['owner']) { // data not null
          User.validateJSON(data['owner']);
        }
        // validate the optional field `settings`
        if (data['settings']) { // data not null
          GroupMessageDataSettings.validateJSON(data['settings']);
        }
        // validate the optional field `status`
        if (data['status']) { // data not null
          GroupMessageDataStatus.validateJSON(data['status']);
        }

        return true;
    }


}

GroupMessageData.RequiredProperties = ["id"];

/**
 * @member {module:model/App} app
 */
GroupMessageData.prototype['app'] = undefined;

/**
 * @member {module:model/GroupMessageDataContent} content
 */
GroupMessageData.prototype['content'] = undefined;

/**
 * @member {Number} id
 */
GroupMessageData.prototype['id'] = undefined;

/**
 * @member {module:model/GroupMessage} message
 */
GroupMessageData.prototype['message'] = undefined;

/**
 * @member {module:model/User} owner
 */
GroupMessageData.prototype['owner'] = undefined;

/**
 * @member {module:model/GroupMessageDataSettings} settings
 */
GroupMessageData.prototype['settings'] = undefined;

/**
 * @member {module:model/GroupMessageDataStatus} status
 */
GroupMessageData.prototype['status'] = undefined;






export default GroupMessageData;

