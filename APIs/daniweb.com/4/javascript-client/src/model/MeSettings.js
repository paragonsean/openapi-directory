/**
 * DaniWeb Connect API
 * User Recommendation Engine and Chat Network
 *
 * The version of the OpenAPI document: 4
 * Contact: dani@daniwebmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The MeSettings model module.
 * @module model/MeSettings
 * @version 4
 */
class MeSettings {
    /**
     * Constructs a new <code>MeSettings</code>.
     * @alias module:model/MeSettings
     */
    constructor() { 
        
        MeSettings.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MeSettings</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MeSettings} obj Optional instance to populate.
     * @return {module:model/MeSettings} The populated <code>MeSettings</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MeSettings();

            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('email_verified')) {
                obj['email_verified'] = ApiClient.convertToType(data['email_verified'], 'Boolean');
            }
            if (data.hasOwnProperty('notifications')) {
                obj['notifications'] = ApiClient.convertToType(data['notifications'], 'String');
            }
            if (data.hasOwnProperty('timezone')) {
                obj['timezone'] = ApiClient.convertToType(data['timezone'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MeSettings</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MeSettings</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['email'] && !(typeof data['email'] === 'string' || data['email'] instanceof String)) {
            throw new Error("Expected the field `email` to be a primitive type in the JSON string but got " + data['email']);
        }
        // ensure the json data is a string
        if (data['notifications'] && !(typeof data['notifications'] === 'string' || data['notifications'] instanceof String)) {
            throw new Error("Expected the field `notifications` to be a primitive type in the JSON string but got " + data['notifications']);
        }

        return true;
    }


}



/**
 * @member {String} email
 */
MeSettings.prototype['email'] = undefined;

/**
 * @member {Boolean} email_verified
 */
MeSettings.prototype['email_verified'] = undefined;

/**
 * @member {String} notifications
 */
MeSettings.prototype['notifications'] = undefined;

/**
 * @member {Number} timezone
 */
MeSettings.prototype['timezone'] = undefined;






export default MeSettings;

