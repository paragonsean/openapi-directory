/**
 * DaniWeb Connect API
 * User Recommendation Engine and Chat Network
 *
 * The version of the OpenAPI document: 4
 * Contact: dani@daniwebmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Conversation from './Conversation';
import GroupMessageLastSeen from './GroupMessageLastSeen';
import GroupMessageText from './GroupMessageText';
import User from './User';

/**
 * The Message model module.
 * @module model/Message
 * @version 4
 */
class Message {
    /**
     * Constructs a new <code>Message</code>.
     * @alias module:model/Message
     * @param id {Number} 
     */
    constructor(id) { 
        
        Message.initialize(this, id);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id) { 
        obj['id'] = id;
    }

    /**
     * Constructs a <code>Message</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Message} obj Optional instance to populate.
     * @return {module:model/Message} The populated <code>Message</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Message();

            if (data.hasOwnProperty('author')) {
                obj['author'] = User.constructFromObject(data['author']);
            }
            if (data.hasOwnProperty('conversation')) {
                obj['conversation'] = Conversation.constructFromObject(data['conversation']);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('last_seen')) {
                obj['last_seen'] = GroupMessageLastSeen.constructFromObject(data['last_seen']);
            }
            if (data.hasOwnProperty('text')) {
                obj['text'] = GroupMessageText.constructFromObject(data['text']);
            }
            if (data.hasOwnProperty('timestamp')) {
                obj['timestamp'] = ApiClient.convertToType(data['timestamp'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Message</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Message</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Message.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `author`
        if (data['author']) { // data not null
          User.validateJSON(data['author']);
        }
        // validate the optional field `conversation`
        if (data['conversation']) { // data not null
          Conversation.validateJSON(data['conversation']);
        }
        // validate the optional field `last_seen`
        if (data['last_seen']) { // data not null
          GroupMessageLastSeen.validateJSON(data['last_seen']);
        }
        // validate the optional field `text`
        if (data['text']) { // data not null
          GroupMessageText.validateJSON(data['text']);
        }

        return true;
    }


}

Message.RequiredProperties = ["id"];

/**
 * @member {module:model/User} author
 */
Message.prototype['author'] = undefined;

/**
 * @member {module:model/Conversation} conversation
 */
Message.prototype['conversation'] = undefined;

/**
 * @member {Number} id
 */
Message.prototype['id'] = undefined;

/**
 * @member {module:model/GroupMessageLastSeen} last_seen
 */
Message.prototype['last_seen'] = undefined;

/**
 * @member {module:model/GroupMessageText} text
 */
Message.prototype['text'] = undefined;

/**
 * @member {Date} timestamp
 */
Message.prototype['timestamp'] = undefined;






export default Message;

