/**
 * DaniWeb Connect API
 * User Recommendation Engine and Chat Network
 *
 * The version of the OpenAPI document: 4
 * Contact: dani@daniwebmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The MeMatching model module.
 * @module model/MeMatching
 * @version 4
 */
class MeMatching {
    /**
     * Constructs a new <code>MeMatching</code>.
     * @alias module:model/MeMatching
     */
    constructor() { 
        
        MeMatching.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MeMatching</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MeMatching} obj Optional instance to populate.
     * @return {module:model/MeMatching} The populated <code>MeMatching</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MeMatching();

            if (data.hasOwnProperty('goals')) {
                obj['goals'] = ApiClient.convertToType(data['goals'], ['String']);
            }
            if (data.hasOwnProperty('interest_tags')) {
                obj['interest_tags'] = ApiClient.convertToType(data['interest_tags'], ['String']);
            }
            if (data.hasOwnProperty('location_importance')) {
                obj['location_importance'] = ApiClient.convertToType(data['location_importance'], 'String');
            }
            if (data.hasOwnProperty('targeted_industry')) {
                obj['targeted_industry'] = ApiClient.convertToType(data['targeted_industry'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MeMatching</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MeMatching</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['goals'])) {
            throw new Error("Expected the field `goals` to be an array in the JSON data but got " + data['goals']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['interest_tags'])) {
            throw new Error("Expected the field `interest_tags` to be an array in the JSON data but got " + data['interest_tags']);
        }
        // ensure the json data is a string
        if (data['location_importance'] && !(typeof data['location_importance'] === 'string' || data['location_importance'] instanceof String)) {
            throw new Error("Expected the field `location_importance` to be a primitive type in the JSON string but got " + data['location_importance']);
        }
        // ensure the json data is a string
        if (data['targeted_industry'] && !(typeof data['targeted_industry'] === 'string' || data['targeted_industry'] instanceof String)) {
            throw new Error("Expected the field `targeted_industry` to be a primitive type in the JSON string but got " + data['targeted_industry']);
        }

        return true;
    }


}



/**
 * @member {Array.<String>} goals
 */
MeMatching.prototype['goals'] = undefined;

/**
 * @member {Array.<String>} interest_tags
 */
MeMatching.prototype['interest_tags'] = undefined;

/**
 * @member {String} location_importance
 */
MeMatching.prototype['location_importance'] = undefined;

/**
 * @member {String} targeted_industry
 */
MeMatching.prototype['targeted_industry'] = undefined;






export default MeMatching;

