/**
 * DaniWeb Connect API
 * User Recommendation Engine and Chat Network
 *
 * The version of the OpenAPI document: 4
 * Contact: dani@daniwebmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The MemberIdentity model module.
 * @module model/MemberIdentity
 * @version 4
 */
class MemberIdentity {
    /**
     * Constructs a new <code>MemberIdentity</code>.
     * @alias module:model/MemberIdentity
     */
    constructor() { 
        
        MemberIdentity.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MemberIdentity</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MemberIdentity} obj Optional instance to populate.
     * @return {module:model/MemberIdentity} The populated <code>MemberIdentity</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MemberIdentity();

            if (data.hasOwnProperty('avatar_uri')) {
                obj['avatar_uri'] = ApiClient.convertToType(data['avatar_uri'], 'String');
            }
            if (data.hasOwnProperty('badge')) {
                obj['badge'] = ApiClient.convertToType(data['badge'], 'String');
            }
            if (data.hasOwnProperty('profile_url')) {
                obj['profile_url'] = ApiClient.convertToType(data['profile_url'], 'String');
            }
            if (data.hasOwnProperty('username')) {
                obj['username'] = ApiClient.convertToType(data['username'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MemberIdentity</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MemberIdentity</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['avatar_uri'] && !(typeof data['avatar_uri'] === 'string' || data['avatar_uri'] instanceof String)) {
            throw new Error("Expected the field `avatar_uri` to be a primitive type in the JSON string but got " + data['avatar_uri']);
        }
        // ensure the json data is a string
        if (data['badge'] && !(typeof data['badge'] === 'string' || data['badge'] instanceof String)) {
            throw new Error("Expected the field `badge` to be a primitive type in the JSON string but got " + data['badge']);
        }
        // ensure the json data is a string
        if (data['profile_url'] && !(typeof data['profile_url'] === 'string' || data['profile_url'] instanceof String)) {
            throw new Error("Expected the field `profile_url` to be a primitive type in the JSON string but got " + data['profile_url']);
        }
        // ensure the json data is a string
        if (data['username'] && !(typeof data['username'] === 'string' || data['username'] instanceof String)) {
            throw new Error("Expected the field `username` to be a primitive type in the JSON string but got " + data['username']);
        }

        return true;
    }


}



/**
 * @member {String} avatar_uri
 */
MemberIdentity.prototype['avatar_uri'] = undefined;

/**
 * @member {String} badge
 */
MemberIdentity.prototype['badge'] = undefined;

/**
 * @member {String} profile_url
 */
MemberIdentity.prototype['profile_url'] = undefined;

/**
 * @member {String} username
 */
MemberIdentity.prototype['username'] = undefined;






export default MemberIdentity;

