/**
 * DaniWeb Connect API
 * User Recommendation Engine and Chat Network
 *
 * The version of the OpenAPI document: 4
 * Contact: dani@daniwebmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.DaniWebConnectApi);
  }
}(this, function(expect, DaniWebConnectApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new DaniWebConnectApi.ConversationsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ConversationsApi', function() {
    describe('conversationsIDGet', function() {
      it('should call conversationsIDGet successfully', function(done) {
        //uncomment below and update the code to test conversationsIDGet
        //instance.conversationsIDGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('conversationsIDMessagesGet', function() {
      it('should call conversationsIDMessagesGet successfully', function(done) {
        //uncomment below and update the code to test conversationsIDMessagesGet
        //instance.conversationsIDMessagesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('conversationsIDMessagesPost', function() {
      it('should call conversationsIDMessagesPost successfully', function(done) {
        //uncomment below and update the code to test conversationsIDMessagesPost
        //instance.conversationsIDMessagesPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('conversationsIDSchedulesPost', function() {
      it('should call conversationsIDSchedulesPost successfully', function(done) {
        //uncomment below and update the code to test conversationsIDSchedulesPost
        //instance.conversationsIDSchedulesPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('conversationsIDSearchesPost', function() {
      it('should call conversationsIDSearchesPost successfully', function(done) {
        //uncomment below and update the code to test conversationsIDSearchesPost
        //instance.conversationsIDSearchesPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('conversationsIDStatusesGet', function() {
      it('should call conversationsIDStatusesGet successfully', function(done) {
        //uncomment below and update the code to test conversationsIDStatusesGet
        //instance.conversationsIDStatusesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('conversationsIDStatusesPatch', function() {
      it('should call conversationsIDStatusesPatch successfully', function(done) {
        //uncomment below and update the code to test conversationsIDStatusesPatch
        //instance.conversationsIDStatusesPatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('conversationsSchedulesPost', function() {
      it('should call conversationsSchedulesPost successfully', function(done) {
        //uncomment below and update the code to test conversationsSchedulesPost
        //instance.conversationsSchedulesPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('conversationsSearchesPost', function() {
      it('should call conversationsSearchesPost successfully', function(done) {
        //uncomment below and update the code to test conversationsSearchesPost
        //instance.conversationsSearchesPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('conversationsStatusesGet', function() {
      it('should call conversationsStatusesGet successfully', function(done) {
        //uncomment below and update the code to test conversationsStatusesGet
        //instance.conversationsStatusesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
