# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SamlConfigurationPropertyItemsString(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, is_set: bool=None, name: str=None, optional: bool=None, type: int=None, value: str=None):
        """SamlConfigurationPropertyItemsString - a model defined in OpenAPI

        :param description: The description of this SamlConfigurationPropertyItemsString.
        :param is_set: The is_set of this SamlConfigurationPropertyItemsString.
        :param name: The name of this SamlConfigurationPropertyItemsString.
        :param optional: The optional of this SamlConfigurationPropertyItemsString.
        :param type: The type of this SamlConfigurationPropertyItemsString.
        :param value: The value of this SamlConfigurationPropertyItemsString.
        """
        self.openapi_types = {
            'description': str,
            'is_set': bool,
            'name': str,
            'optional': bool,
            'type': int,
            'value': str
        }

        self.attribute_map = {
            'description': 'description',
            'is_set': 'is_set',
            'name': 'name',
            'optional': 'optional',
            'type': 'type',
            'value': 'value'
        }

        self._description = description
        self._is_set = is_set
        self._name = name
        self._optional = optional
        self._type = type
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SamlConfigurationPropertyItemsString':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SamlConfigurationPropertyItemsString of this SamlConfigurationPropertyItemsString.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this SamlConfigurationPropertyItemsString.

        Property description

        :return: The description of this SamlConfigurationPropertyItemsString.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this SamlConfigurationPropertyItemsString.

        Property description

        :param description: The description of this SamlConfigurationPropertyItemsString.
        :type description: str
        """

        self._description = description

    @property
    def is_set(self):
        """Gets the is_set of this SamlConfigurationPropertyItemsString.

        True if property is set

        :return: The is_set of this SamlConfigurationPropertyItemsString.
        :rtype: bool
        """
        return self._is_set

    @is_set.setter
    def is_set(self, is_set):
        """Sets the is_set of this SamlConfigurationPropertyItemsString.

        True if property is set

        :param is_set: The is_set of this SamlConfigurationPropertyItemsString.
        :type is_set: bool
        """

        self._is_set = is_set

    @property
    def name(self):
        """Gets the name of this SamlConfigurationPropertyItemsString.

        property name

        :return: The name of this SamlConfigurationPropertyItemsString.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this SamlConfigurationPropertyItemsString.

        property name

        :param name: The name of this SamlConfigurationPropertyItemsString.
        :type name: str
        """

        self._name = name

    @property
    def optional(self):
        """Gets the optional of this SamlConfigurationPropertyItemsString.

        True if optional

        :return: The optional of this SamlConfigurationPropertyItemsString.
        :rtype: bool
        """
        return self._optional

    @optional.setter
    def optional(self, optional):
        """Sets the optional of this SamlConfigurationPropertyItemsString.

        True if optional

        :param optional: The optional of this SamlConfigurationPropertyItemsString.
        :type optional: bool
        """

        self._optional = optional

    @property
    def type(self):
        """Gets the type of this SamlConfigurationPropertyItemsString.

        Property type, 1=String, 3=long, 11=boolean, 12=Password

        :return: The type of this SamlConfigurationPropertyItemsString.
        :rtype: int
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this SamlConfigurationPropertyItemsString.

        Property type, 1=String, 3=long, 11=boolean, 12=Password

        :param type: The type of this SamlConfigurationPropertyItemsString.
        :type type: int
        """

        self._type = type

    @property
    def value(self):
        """Gets the value of this SamlConfigurationPropertyItemsString.

        Property value

        :return: The value of this SamlConfigurationPropertyItemsString.
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this SamlConfigurationPropertyItemsString.

        Property value

        :param value: The value of this SamlConfigurationPropertyItemsString.
        :type value: str
        """

        self._value = value
