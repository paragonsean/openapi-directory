/**
 * Adobe Experience Manager (AEM) API
 * Swagger AEM is an OpenAPI specification for Adobe Experience Manager (AEM) API
 *
 * The version of the OpenAPI document: 3.7.1-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBundleData.h
 *
 * 
 */

#ifndef OAIBundleData_H
#define OAIBundleData_H

#include <QJsonObject>

#include "OAIBundleDataProp.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIBundleDataProp;

class OAIBundleData : public OAIObject {
public:
    OAIBundleData();
    OAIBundleData(QString json);
    ~OAIBundleData() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCategory() const;
    void setCategory(const QString &category);
    bool is_category_Set() const;
    bool is_category_Valid() const;

    bool isFragment() const;
    void setFragment(const bool &fragment);
    bool is_fragment_Set() const;
    bool is_fragment_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QList<OAIBundleDataProp> getProps() const;
    void setProps(const QList<OAIBundleDataProp> &props);
    bool is_props_Set() const;
    bool is_props_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    qint32 getStateRaw() const;
    void setStateRaw(const qint32 &state_raw);
    bool is_state_raw_Set() const;
    bool is_state_raw_Valid() const;

    QString getSymbolicName() const;
    void setSymbolicName(const QString &symbolic_name);
    bool is_symbolic_name_Set() const;
    bool is_symbolic_name_Valid() const;

    QString getVersion() const;
    void setVersion(const QString &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_category;
    bool m_category_isSet;
    bool m_category_isValid;

    bool m_fragment;
    bool m_fragment_isSet;
    bool m_fragment_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QList<OAIBundleDataProp> m_props;
    bool m_props_isSet;
    bool m_props_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    qint32 m_state_raw;
    bool m_state_raw_isSet;
    bool m_state_raw_isValid;

    QString m_symbolic_name;
    bool m_symbolic_name_isSet;
    bool m_symbolic_name_isValid;

    QString m_version;
    bool m_version_isSet;
    bool m_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBundleData)

#endif // OAIBundleData_H
