/**
 * EAN-Search.org API
 * Documentation of the EAN-Search.org API, see [https://www.ean-search.org/ean-database-api.html](https://www.ean-search.org/ean-database-api.html). Please consult the PDF manual in your account for more details.
 *
 * The version of the OpenAPI document: 1.50.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBarcode.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBarcode::OAIBarcode(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBarcode::OAIBarcode() {
    this->initializeModel();
}

OAIBarcode::~OAIBarcode() {}

void OAIBarcode::initializeModel() {

    m_barcode_isSet = false;
    m_barcode_isValid = false;

    m_ean_isSet = false;
    m_ean_isValid = false;
}

void OAIBarcode::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBarcode::fromJsonObject(QJsonObject json) {

    m_barcode_isValid = ::OpenAPI::fromJsonValue(m_barcode, json[QString("barcode")]);
    m_barcode_isSet = !json[QString("barcode")].isNull() && m_barcode_isValid;

    m_ean_isValid = ::OpenAPI::fromJsonValue(m_ean, json[QString("ean")]);
    m_ean_isSet = !json[QString("ean")].isNull() && m_ean_isValid;
}

QString OAIBarcode::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBarcode::asJsonObject() const {
    QJsonObject obj;
    if (m_barcode_isSet) {
        obj.insert(QString("barcode"), ::OpenAPI::toJsonValue(m_barcode));
    }
    if (m_ean_isSet) {
        obj.insert(QString("ean"), ::OpenAPI::toJsonValue(m_ean));
    }
    return obj;
}

QString OAIBarcode::getBarcode() const {
    return m_barcode;
}
void OAIBarcode::setBarcode(const QString &barcode) {
    m_barcode = barcode;
    m_barcode_isSet = true;
}

bool OAIBarcode::is_barcode_Set() const{
    return m_barcode_isSet;
}

bool OAIBarcode::is_barcode_Valid() const{
    return m_barcode_isValid;
}

QString OAIBarcode::getEan() const {
    return m_ean;
}
void OAIBarcode::setEan(const QString &ean) {
    m_ean = ean;
    m_ean_isSet = true;
}

bool OAIBarcode::is_ean_Set() const{
    return m_ean_isSet;
}

bool OAIBarcode::is_ean_Valid() const{
    return m_ean_isValid;
}

bool OAIBarcode::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_barcode_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ean_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBarcode::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_barcode_isValid && m_ean_isValid && true;
}

} // namespace OpenAPI
