/*
 * EAN-Search.org API
 * Documentation of the EAN-Search.org API, see [https://www.ean-search.org/ean-database-api.html](https://www.ean-search.org/ean-database-api.html). Please consult the PDF manual in your account for more details.
 *
 * The version of the OpenAPI document: 1.50.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Barcode;
import org.openapitools.client.model.IssuingCountry;
import org.openapitools.client.model.Product;
import org.openapitools.client.model.VerifyChecksum;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Disabled
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    /**
     * Generate a PNG barcode image
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void barcodeImageTest() throws ApiException {
        String op = null;
        Integer ean = null;
        Integer width = null;
        Integer height = null;
        String format = null;
        List<Barcode> response = api.barcodeImage(op, ean, width, height, format);
        // TODO: test validations
    }

    /**
     * Look up an EAN
     *
     * Search by EAN code
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void barcodeLookupTest() throws ApiException {
        String op = null;
        Integer ean = null;
        Integer language = null;
        String format = null;
        List<Product> response = api.barcodeLookup(op, ean, language, format);
        // TODO: test validations
    }

    /**
     * Query the database for all barcodes with the same beginning
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void barcodePrefixSearchTest() throws ApiException {
        String op = null;
        String prefix = null;
        Integer language = null;
        Integer page = null;
        String format = null;
        List<Product> response = api.barcodePrefixSearch(op, prefix, language, page, format);
        // TODO: test validations
    }

    /**
     * Search for products form a certain category
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void categorySearchTest() throws ApiException {
        String op = null;
        Integer category = null;
        String name = null;
        Integer language = null;
        Integer page = null;
        String format = null;
        List<Product> response = api.categorySearch(op, category, name, language, page, format);
        // TODO: test validations
    }

    /**
     * Search for a issuing country of a barcode
     *
     * Search for a issuing country of a barcode. In contrast to barcode-lookup, this will always give a result, even if we don&#39;t know the product name.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void issuingCountryTest() throws ApiException {
        String op = null;
        Integer ean = null;
        String format = null;
        List<IssuingCountry> response = api.issuingCountry(op, ean, format);
        // TODO: test validations
    }

    /**
     * Search by product name
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void productSearchTest() throws ApiException {
        String op = null;
        String name = null;
        Integer language = null;
        Integer page = null;
        String format = null;
        List<Product> response = api.productSearch(op, name, language, page, format);
        // TODO: test validations
    }

    /**
     * Verify the checksum of an EAN code
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void verifyChecksumTest() throws ApiException {
        String op = null;
        Integer ean = null;
        String format = null;
        List<VerifyChecksum> response = api.verifyChecksum(op, ean, format);
        // TODO: test validations
    }

}
