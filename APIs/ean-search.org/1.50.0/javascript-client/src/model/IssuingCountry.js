/**
 * EAN-Search.org API
 * Documentation of the EAN-Search.org API, see [https://www.ean-search.org/ean-database-api.html](https://www.ean-search.org/ean-database-api.html). Please consult the PDF manual in your account for more details.
 *
 * The version of the OpenAPI document: 1.50.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The IssuingCountry model module.
 * @module model/IssuingCountry
 * @version 1.50.0
 */
class IssuingCountry {
    /**
     * Constructs a new <code>IssuingCountry</code>.
     * @alias module:model/IssuingCountry
     * @param ean {String} 
     * @param issuingCountry {String} 
     */
    constructor(ean, issuingCountry) { 
        
        IssuingCountry.initialize(this, ean, issuingCountry);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, ean, issuingCountry) { 
        obj['ean'] = ean;
        obj['issuingCountry'] = issuingCountry;
    }

    /**
     * Constructs a <code>IssuingCountry</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IssuingCountry} obj Optional instance to populate.
     * @return {module:model/IssuingCountry} The populated <code>IssuingCountry</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IssuingCountry();

            if (data.hasOwnProperty('ean')) {
                obj['ean'] = ApiClient.convertToType(data['ean'], 'String');
            }
            if (data.hasOwnProperty('issuingCountry')) {
                obj['issuingCountry'] = ApiClient.convertToType(data['issuingCountry'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IssuingCountry</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IssuingCountry</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of IssuingCountry.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['ean'] && !(typeof data['ean'] === 'string' || data['ean'] instanceof String)) {
            throw new Error("Expected the field `ean` to be a primitive type in the JSON string but got " + data['ean']);
        }
        // ensure the json data is a string
        if (data['issuingCountry'] && !(typeof data['issuingCountry'] === 'string' || data['issuingCountry'] instanceof String)) {
            throw new Error("Expected the field `issuingCountry` to be a primitive type in the JSON string but got " + data['issuingCountry']);
        }

        return true;
    }


}

IssuingCountry.RequiredProperties = ["ean", "issuingCountry"];

/**
 * @member {String} ean
 */
IssuingCountry.prototype['ean'] = undefined;

/**
 * @member {String} issuingCountry
 */
IssuingCountry.prototype['issuingCountry'] = undefined;






export default IssuingCountry;

