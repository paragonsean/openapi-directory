# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Scroll(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, scroll_by_pixels: float=None, scrolling_element_selector: str=None, selector: str=None, times: int=None):
        """Scroll - a model defined in OpenAPI

        :param scroll_by_pixels: The scroll_by_pixels of this Scroll.
        :param scrolling_element_selector: The scrolling_element_selector of this Scroll.
        :param selector: The selector of this Scroll.
        :param times: The times of this Scroll.
        """
        self.openapi_types = {
            'scroll_by_pixels': float,
            'scrolling_element_selector': str,
            'selector': str,
            'times': int
        }

        self.attribute_map = {
            'scroll_by_pixels': 'scrollByPixels',
            'scrolling_element_selector': 'scrollingElementSelector',
            'selector': 'selector',
            'times': 'times'
        }

        self._scroll_by_pixels = scroll_by_pixels
        self._scrolling_element_selector = scrolling_element_selector
        self._selector = selector
        self._times = times

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Scroll':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The scroll of this Scroll.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def scroll_by_pixels(self):
        """Gets the scroll_by_pixels of this Scroll.

        Scrolls a web page by the number of pixels specified by 'scrollByPixels' parameter.

        :return: The scroll_by_pixels of this Scroll.
        :rtype: float
        """
        return self._scroll_by_pixels

    @scroll_by_pixels.setter
    def scroll_by_pixels(self, scroll_by_pixels):
        """Sets the scroll_by_pixels of this Scroll.

        Scrolls a web page by the number of pixels specified by 'scrollByPixels' parameter.

        :param scroll_by_pixels: The scroll_by_pixels of this Scroll.
        :type scroll_by_pixels: float
        """

        self._scroll_by_pixels = scroll_by_pixels

    @property
    def scrolling_element_selector(self):
        """Gets the scrolling_element_selector of this Scroll.

        Optionally specify here a valid CSS Selector of scrolling element.

        :return: The scrolling_element_selector of this Scroll.
        :rtype: str
        """
        return self._scrolling_element_selector

    @scrolling_element_selector.setter
    def scrolling_element_selector(self, scrolling_element_selector):
        """Sets the scrolling_element_selector of this Scroll.

        Optionally specify here a valid CSS Selector of scrolling element.

        :param scrolling_element_selector: The scrolling_element_selector of this Scroll.
        :type scrolling_element_selector: str
        """

        self._scrolling_element_selector = scrolling_element_selector

    @property
    def selector(self):
        """Gets the selector of this Scroll.

        Some websites require clicking 'More' button while scrolling a page. Put here 'More' button valid CSS Selector.

        :return: The selector of this Scroll.
        :rtype: str
        """
        return self._selector

    @selector.setter
    def selector(self, selector):
        """Sets the selector of this Scroll.

        Some websites require clicking 'More' button while scrolling a page. Put here 'More' button valid CSS Selector.

        :param selector: The selector of this Scroll.
        :type selector: str
        """

        self._selector = selector

    @property
    def times(self):
        """Gets the times of this Scroll.

        The number of times to scroll down a web page.

        :return: The times of this Scroll.
        :rtype: int
        """
        return self._times

    @times.setter
    def times(self, times):
        """Sets the times of this Scroll.

        The number of times to scroll down a web page.

        :param times: The times of this Scroll.
        :type times: int
        """

        self._times = times
