# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.action import Action
from openapi_server import util


class LoopTimes(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, actions: List[Action]=[], times: float=None):
        """LoopTimes - a model defined in OpenAPI

        :param actions: The actions of this LoopTimes.
        :param times: The times of this LoopTimes.
        """
        self.openapi_types = {
            'actions': List[Action],
            'times': float
        }

        self.attribute_map = {
            'actions': 'actions',
            'times': 'times'
        }

        self._actions = actions
        self._times = times

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LoopTimes':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The loop____times of this LoopTimes.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def actions(self):
        """Gets the actions of this LoopTimes.

        list of actions combined in the loop are executed step-by-step

        :return: The actions of this LoopTimes.
        :rtype: List[Action]
        """
        return self._actions

    @actions.setter
    def actions(self, actions):
        """Sets the actions of this LoopTimes.

        list of actions combined in the loop are executed step-by-step

        :param actions: The actions of this LoopTimes.
        :type actions: List[Action]
        """

        self._actions = actions

    @property
    def times(self):
        """Gets the times of this LoopTimes.

        the number of times to execute the wrapped actions within the 'loop .. times' construction.

        :return: The times of this LoopTimes.
        :rtype: float
        """
        return self._times

    @times.setter
    def times(self, times):
        """Sets the times of this LoopTimes.

        the number of times to execute the wrapped actions within the 'loop .. times' construction.

        :param times: The times of this LoopTimes.
        :type times: float
        """

        self._times = times
