/*
 * Dataflow Kit Web Scraper
 * Render Javascript driven pages, while we internally manage Headless Chrome and proxies for you.   - Build a custom web scraper with our Visual point-and-click toolkit. - Scrape the most popular Search engines result pages (SERP). - Convert web pages to PDF and capture screenshots. *** ### Authentication Dataflow Kit API require you to sign up for an API key in order to use the API.   The API key can be found in the [DFK Dashboard](https://account.dataflowkit.com) after _free registration_.  Pass a secret API Key to all API requests to the server as the `api_key` query parameter.  
 *
 * The version of the OpenAPI document: 1.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import java.io.File;
import org.openapitools.client.model.Url2pdfrequest;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class UrlToPdfApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public UrlToPdfApi() {
        this(Configuration.getDefaultApiClient());
    }

    public UrlToPdfApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for urlToPdf
     * @param url2pdfrequest  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A PDF file. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad Request. Invalid payload specified. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Unauthorized. &#x60;api_key&#x60; parameter is missed or incorrect </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error is a very general HTTP status code that means something has gone wrong on the web site&#39;s server. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call urlToPdfCall(Url2pdfrequest url2pdfrequest, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = url2pdfrequest;

        // create path and map variables
        String localVarPath = "/convert/url/pdf";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/pdf",
            "text/plain; charset=utf-8"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "ApiKeyAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call urlToPdfValidateBeforeCall(Url2pdfrequest url2pdfrequest, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'url2pdfrequest' is set
        if (url2pdfrequest == null) {
            throw new ApiException("Missing the required parameter 'url2pdfrequest' when calling urlToPdf(Async)");
        }

        return urlToPdfCall(url2pdfrequest, _callback);

    }

    /**
     * Save web page as PDF
     * Automate URL to PDF Conversion right in your application.  Specify request parameters like URL, Proxy, and actions to render web pages to PDF using Headless Chrome.  Get resulted PDF even from websites blocked in your area for some reason utilizing our worldwide pool of proxies.  Simulate real-world human interaction with the page. For example, before saving a web page to PDF, you may need to scroll it.  Generate ready-to-run code for your favorite language at [https://dataflowkit.com/url-to-pdf](https://dataflowkit.com/url-to-pdf)
     * @param url2pdfrequest  (required)
     * @return File
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A PDF file. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad Request. Invalid payload specified. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Unauthorized. &#x60;api_key&#x60; parameter is missed or incorrect </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error is a very general HTTP status code that means something has gone wrong on the web site&#39;s server. </td><td>  -  </td></tr>
     </table>
     */
    public File urlToPdf(Url2pdfrequest url2pdfrequest) throws ApiException {
        ApiResponse<File> localVarResp = urlToPdfWithHttpInfo(url2pdfrequest);
        return localVarResp.getData();
    }

    /**
     * Save web page as PDF
     * Automate URL to PDF Conversion right in your application.  Specify request parameters like URL, Proxy, and actions to render web pages to PDF using Headless Chrome.  Get resulted PDF even from websites blocked in your area for some reason utilizing our worldwide pool of proxies.  Simulate real-world human interaction with the page. For example, before saving a web page to PDF, you may need to scroll it.  Generate ready-to-run code for your favorite language at [https://dataflowkit.com/url-to-pdf](https://dataflowkit.com/url-to-pdf)
     * @param url2pdfrequest  (required)
     * @return ApiResponse&lt;File&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A PDF file. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad Request. Invalid payload specified. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Unauthorized. &#x60;api_key&#x60; parameter is missed or incorrect </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error is a very general HTTP status code that means something has gone wrong on the web site&#39;s server. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<File> urlToPdfWithHttpInfo(Url2pdfrequest url2pdfrequest) throws ApiException {
        okhttp3.Call localVarCall = urlToPdfValidateBeforeCall(url2pdfrequest, null);
        Type localVarReturnType = new TypeToken<File>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Save web page as PDF (asynchronously)
     * Automate URL to PDF Conversion right in your application.  Specify request parameters like URL, Proxy, and actions to render web pages to PDF using Headless Chrome.  Get resulted PDF even from websites blocked in your area for some reason utilizing our worldwide pool of proxies.  Simulate real-world human interaction with the page. For example, before saving a web page to PDF, you may need to scroll it.  Generate ready-to-run code for your favorite language at [https://dataflowkit.com/url-to-pdf](https://dataflowkit.com/url-to-pdf)
     * @param url2pdfrequest  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A PDF file. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad Request. Invalid payload specified. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Unauthorized. &#x60;api_key&#x60; parameter is missed or incorrect </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error is a very general HTTP status code that means something has gone wrong on the web site&#39;s server. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call urlToPdfAsync(Url2pdfrequest url2pdfrequest, final ApiCallback<File> _callback) throws ApiException {

        okhttp3.Call localVarCall = urlToPdfValidateBeforeCall(url2pdfrequest, _callback);
        Type localVarReturnType = new TypeToken<File>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
