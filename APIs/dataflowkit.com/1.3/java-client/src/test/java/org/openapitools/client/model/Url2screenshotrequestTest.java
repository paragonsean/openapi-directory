/*
 * Dataflow Kit Web Scraper
 * Render Javascript driven pages, while we internally manage Headless Chrome and proxies for you.   - Build a custom web scraper with our Visual point-and-click toolkit. - Scrape the most popular Search engines result pages (SERP). - Convert web pages to PDF and capture screenshots. *** ### Authentication Dataflow Kit API require you to sign up for an API key in order to use the API.   The API key can be found in the [DFK Dashboard](https://account.dataflowkit.com) after _free registration_.  Pass a secret API Key to all API requests to the server as the `api_key` query parameter.  
 *
 * The version of the OpenAPI document: 1.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.Action;
import org.openapitools.client.model.InitialCookie;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Url2screenshotrequest
 */
public class Url2screenshotrequestTest {
    private final Url2screenshotrequest model = new Url2screenshotrequest();

    /**
     * Model tests for Url2screenshotrequest
     */
    @Test
    public void testUrl2screenshotrequest() {
        // TODO: test Url2screenshotrequest
    }

    /**
     * Test the property 'actions'
     */
    @Test
    public void actionsTest() {
        // TODO: test actions
    }

    /**
     * Test the property 'clipSelector'
     */
    @Test
    public void clipSelectorTest() {
        // TODO: test clipSelector
    }

    /**
     * Test the property 'format'
     */
    @Test
    public void formatTest() {
        // TODO: test format
    }

    /**
     * Test the property 'fullPage'
     */
    @Test
    public void fullPageTest() {
        // TODO: test fullPage
    }

    /**
     * Test the property 'height'
     */
    @Test
    public void heightTest() {
        // TODO: test height
    }

    /**
     * Test the property 'ignoreHTTPStatusErrCodes'
     */
    @Test
    public void ignoreHTTPStatusErrCodesTest() {
        // TODO: test ignoreHTTPStatusErrCodes
    }

    /**
     * Test the property 'initialCookies'
     */
    @Test
    public void initialCookiesTest() {
        // TODO: test initialCookies
    }

    /**
     * Test the property 'offsetx'
     */
    @Test
    public void offsetxTest() {
        // TODO: test offsetx
    }

    /**
     * Test the property 'offsety'
     */
    @Test
    public void offsetyTest() {
        // TODO: test offsety
    }

    /**
     * Test the property 'output'
     */
    @Test
    public void outputTest() {
        // TODO: test output
    }

    /**
     * Test the property 'printBackground'
     */
    @Test
    public void printBackgroundTest() {
        // TODO: test printBackground
    }

    /**
     * Test the property 'proxy'
     */
    @Test
    public void proxyTest() {
        // TODO: test proxy
    }

    /**
     * Test the property 'quality'
     */
    @Test
    public void qualityTest() {
        // TODO: test quality
    }

    /**
     * Test the property 'scale'
     */
    @Test
    public void scaleTest() {
        // TODO: test scale
    }

    /**
     * Test the property 'url'
     */
    @Test
    public void urlTest() {
        // TODO: test url
    }

    /**
     * Test the property 'waitDelay'
     */
    @Test
    public void waitDelayTest() {
        // TODO: test waitDelay
    }

    /**
     * Test the property 'width'
     */
    @Test
    public void widthTest() {
        // TODO: test width
    }

}
