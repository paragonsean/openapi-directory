/**
 * Dataflow Kit Web Scraper
 * Render Javascript driven pages, while we internally manage Headless Chrome and proxies for you.   - Build a custom web scraper with our Visual point-and-click toolkit. - Scrape the most popular Search engines result pages (SERP). - Convert web pages to PDF and capture screenshots. *** ### Authentication Dataflow Kit API require you to sign up for an API key in order to use the API.   The API key can be found in the [DFK Dashboard](https://account.dataflowkit.com) after _free registration_.  Pass a secret API Key to all API requests to the server as the `api_key` query parameter.  
 *
 * The version of the OpenAPI document: 1.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Action from './Action';

/**
 * The LoopTimes model module.
 * @module model/LoopTimes
 * @version 1.3
 */
class LoopTimes {
    /**
     * Constructs a new <code>LoopTimes</code>.
     * Loop action combines a set of actions and executes it as many times as specified in the \&quot;times\&quot; parameter.
     * @alias module:model/LoopTimes
     */
    constructor() { 
        
        LoopTimes.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LoopTimes</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LoopTimes} obj Optional instance to populate.
     * @return {module:model/LoopTimes} The populated <code>LoopTimes</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LoopTimes();

            if (data.hasOwnProperty('actions')) {
                obj['actions'] = ApiClient.convertToType(data['actions'], [Action]);
            }
            if (data.hasOwnProperty('times')) {
                obj['times'] = ApiClient.convertToType(data['times'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LoopTimes</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LoopTimes</code>.
     */
    static validateJSON(data) {
        if (data['actions']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['actions'])) {
                throw new Error("Expected the field `actions` to be an array in the JSON data but got " + data['actions']);
            }
            // validate the optional field `actions` (array)
            for (const item of data['actions']) {
                Action.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * list of actions combined in the loop are executed step-by-step
 * @member {Array.<module:model/Action>} actions
 */
LoopTimes.prototype['actions'] = undefined;

/**
 * the number of times to execute the wrapped actions within the 'loop .. times' construction.
 * @member {Number} times
 */
LoopTimes.prototype['times'] = undefined;






export default LoopTimes;

