/**
 * Dataflow Kit Web Scraper
 * Render Javascript driven pages, while we internally manage Headless Chrome and proxies for you.   - Build a custom web scraper with our Visual point-and-click toolkit. - Scrape the most popular Search engines result pages (SERP). - Convert web pages to PDF and capture screenshots. *** ### Authentication Dataflow Kit API require you to sign up for an API key in order to use the API.   The API key can be found in the [DFK Dashboard](https://account.dataflowkit.com) after _free registration_.  Pass a secret API Key to all API requests to the server as the `api_key` query parameter.  
 *
 * The version of the OpenAPI document: 1.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The InitialCookie model module.
 * @module model/InitialCookie
 * @version 1.3
 */
class InitialCookie {
    /**
     * Constructs a new <code>InitialCookie</code>.
     * InitialCookie structure keep cookies that optionally can be passed to the new fetcher crawl a website that requires a login. Generate Cookies array with EditThisCookie chrome extension.
     * @alias module:model/InitialCookie
     */
    constructor() { 
        
        InitialCookie.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InitialCookie</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InitialCookie} obj Optional instance to populate.
     * @return {module:model/InitialCookie} The populated <code>InitialCookie</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InitialCookie();

            if (data.hasOwnProperty('domain')) {
                obj['domain'] = ApiClient.convertToType(data['domain'], 'String');
            }
            if (data.hasOwnProperty('expirationDate')) {
                obj['expirationDate'] = ApiClient.convertToType(data['expirationDate'], 'Number');
            }
            if (data.hasOwnProperty('hostOnly')) {
                obj['hostOnly'] = ApiClient.convertToType(data['hostOnly'], 'Boolean');
            }
            if (data.hasOwnProperty('httpOnly')) {
                obj['httpOnly'] = ApiClient.convertToType(data['httpOnly'], 'Boolean');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('path')) {
                obj['path'] = ApiClient.convertToType(data['path'], 'String');
            }
            if (data.hasOwnProperty('sameSite')) {
                obj['sameSite'] = ApiClient.convertToType(data['sameSite'], 'String');
            }
            if (data.hasOwnProperty('secure')) {
                obj['secure'] = ApiClient.convertToType(data['secure'], 'Boolean');
            }
            if (data.hasOwnProperty('session')) {
                obj['session'] = ApiClient.convertToType(data['session'], 'Boolean');
            }
            if (data.hasOwnProperty('storeID')) {
                obj['storeID'] = ApiClient.convertToType(data['storeID'], 'String');
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InitialCookie</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InitialCookie</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['domain'] && !(typeof data['domain'] === 'string' || data['domain'] instanceof String)) {
            throw new Error("Expected the field `domain` to be a primitive type in the JSON string but got " + data['domain']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['path'] && !(typeof data['path'] === 'string' || data['path'] instanceof String)) {
            throw new Error("Expected the field `path` to be a primitive type in the JSON string but got " + data['path']);
        }
        // ensure the json data is a string
        if (data['sameSite'] && !(typeof data['sameSite'] === 'string' || data['sameSite'] instanceof String)) {
            throw new Error("Expected the field `sameSite` to be a primitive type in the JSON string but got " + data['sameSite']);
        }
        // ensure the json data is a string
        if (data['storeID'] && !(typeof data['storeID'] === 'string' || data['storeID'] instanceof String)) {
            throw new Error("Expected the field `storeID` to be a primitive type in the JSON string but got " + data['storeID']);
        }
        // ensure the json data is a string
        if (data['value'] && !(typeof data['value'] === 'string' || data['value'] instanceof String)) {
            throw new Error("Expected the field `value` to be a primitive type in the JSON string but got " + data['value']);
        }

        return true;
    }


}



/**
 * @member {String} domain
 */
InitialCookie.prototype['domain'] = undefined;

/**
 * @member {Number} expirationDate
 */
InitialCookie.prototype['expirationDate'] = undefined;

/**
 * @member {Boolean} hostOnly
 */
InitialCookie.prototype['hostOnly'] = undefined;

/**
 * @member {Boolean} httpOnly
 */
InitialCookie.prototype['httpOnly'] = undefined;

/**
 * @member {Number} id
 */
InitialCookie.prototype['id'] = undefined;

/**
 * @member {String} name
 */
InitialCookie.prototype['name'] = undefined;

/**
 * @member {String} path
 */
InitialCookie.prototype['path'] = undefined;

/**
 * @member {module:model/InitialCookie.SameSiteEnum} sameSite
 */
InitialCookie.prototype['sameSite'] = undefined;

/**
 * @member {Boolean} secure
 */
InitialCookie.prototype['secure'] = undefined;

/**
 * @member {Boolean} session
 */
InitialCookie.prototype['session'] = undefined;

/**
 * @member {String} storeID
 */
InitialCookie.prototype['storeID'] = undefined;

/**
 * @member {String} value
 */
InitialCookie.prototype['value'] = undefined;





/**
 * Allowed values for the <code>sameSite</code> property.
 * @enum {String}
 * @readonly
 */
InitialCookie['SameSiteEnum'] = {

    /**
     * value: "unspecified"
     * @const
     */
    "unspecified": "unspecified",

    /**
     * value: "strict"
     * @const
     */
    "strict": "strict",

    /**
     * value: "lax"
     * @const
     */
    "lax": "lax",

    /**
     * value: "no_restriction"
     * @const
     */
    "no_restriction": "no_restriction"
};



export default InitialCookie;

