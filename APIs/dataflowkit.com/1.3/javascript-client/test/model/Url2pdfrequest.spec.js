/**
 * Dataflow Kit Web Scraper
 * Render Javascript driven pages, while we internally manage Headless Chrome and proxies for you.   - Build a custom web scraper with our Visual point-and-click toolkit. - Scrape the most popular Search engines result pages (SERP). - Convert web pages to PDF and capture screenshots. *** ### Authentication Dataflow Kit API require you to sign up for an API key in order to use the API.   The API key can be found in the [DFK Dashboard](https://account.dataflowkit.com) after _free registration_.  Pass a secret API Key to all API requests to the server as the `api_key` query parameter.  
 *
 * The version of the OpenAPI document: 1.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.DataflowKitWebScraper);
  }
}(this, function(expect, DataflowKitWebScraper) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new DataflowKitWebScraper.Url2pdfrequest();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Url2pdfrequest', function() {
    it('should create an instance of Url2pdfrequest', function() {
      // uncomment below and update the code to test Url2pdfrequest
      //var instance = new DataflowKitWebScraper.Url2pdfrequest();
      //expect(instance).to.be.a(DataflowKitWebScraper.Url2pdfrequest);
    });

    it('should have the property actions (base name: "actions")', function() {
      // uncomment below and update the code to test the property actions
      //var instance = new DataflowKitWebScraper.Url2pdfrequest();
      //expect(instance).to.be();
    });

    it('should have the property ignoreHTTPStatusErrCodes (base name: "ignoreHTTPStatusErrCodes")', function() {
      // uncomment below and update the code to test the property ignoreHTTPStatusErrCodes
      //var instance = new DataflowKitWebScraper.Url2pdfrequest();
      //expect(instance).to.be();
    });

    it('should have the property initialCookies (base name: "initialCookies")', function() {
      // uncomment below and update the code to test the property initialCookies
      //var instance = new DataflowKitWebScraper.Url2pdfrequest();
      //expect(instance).to.be();
    });

    it('should have the property landscape (base name: "landscape")', function() {
      // uncomment below and update the code to test the property landscape
      //var instance = new DataflowKitWebScraper.Url2pdfrequest();
      //expect(instance).to.be();
    });

    it('should have the property marginBottom (base name: "marginBottom")', function() {
      // uncomment below and update the code to test the property marginBottom
      //var instance = new DataflowKitWebScraper.Url2pdfrequest();
      //expect(instance).to.be();
    });

    it('should have the property marginLeft (base name: "marginLeft")', function() {
      // uncomment below and update the code to test the property marginLeft
      //var instance = new DataflowKitWebScraper.Url2pdfrequest();
      //expect(instance).to.be();
    });

    it('should have the property marginRight (base name: "marginRight")', function() {
      // uncomment below and update the code to test the property marginRight
      //var instance = new DataflowKitWebScraper.Url2pdfrequest();
      //expect(instance).to.be();
    });

    it('should have the property marginTop (base name: "marginTop")', function() {
      // uncomment below and update the code to test the property marginTop
      //var instance = new DataflowKitWebScraper.Url2pdfrequest();
      //expect(instance).to.be();
    });

    it('should have the property output (base name: "output")', function() {
      // uncomment below and update the code to test the property output
      //var instance = new DataflowKitWebScraper.Url2pdfrequest();
      //expect(instance).to.be();
    });

    it('should have the property pageRanges (base name: "pageRanges")', function() {
      // uncomment below and update the code to test the property pageRanges
      //var instance = new DataflowKitWebScraper.Url2pdfrequest();
      //expect(instance).to.be();
    });

    it('should have the property paperSize (base name: "paperSize")', function() {
      // uncomment below and update the code to test the property paperSize
      //var instance = new DataflowKitWebScraper.Url2pdfrequest();
      //expect(instance).to.be();
    });

    it('should have the property printBackground (base name: "printBackground")', function() {
      // uncomment below and update the code to test the property printBackground
      //var instance = new DataflowKitWebScraper.Url2pdfrequest();
      //expect(instance).to.be();
    });

    it('should have the property printHeaderFooter (base name: "printHeaderFooter")', function() {
      // uncomment below and update the code to test the property printHeaderFooter
      //var instance = new DataflowKitWebScraper.Url2pdfrequest();
      //expect(instance).to.be();
    });

    it('should have the property proxy (base name: "proxy")', function() {
      // uncomment below and update the code to test the property proxy
      //var instance = new DataflowKitWebScraper.Url2pdfrequest();
      //expect(instance).to.be();
    });

    it('should have the property scale (base name: "scale")', function() {
      // uncomment below and update the code to test the property scale
      //var instance = new DataflowKitWebScraper.Url2pdfrequest();
      //expect(instance).to.be();
    });

    it('should have the property url (base name: "url")', function() {
      // uncomment below and update the code to test the property url
      //var instance = new DataflowKitWebScraper.Url2pdfrequest();
      //expect(instance).to.be();
    });

    it('should have the property waitDelay (base name: "waitDelay")', function() {
      // uncomment below and update the code to test the property waitDelay
      //var instance = new DataflowKitWebScraper.Url2pdfrequest();
      //expect(instance).to.be();
    });

  });

}));
