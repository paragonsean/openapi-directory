openapi: 3.0.1
info:
  description: "Cambase.io is a project by Evercam.io in order to make it easier for\
    \ software developers to have a reliable, up to date source of model hardware\
    \ information available via a public API."
  title: Cambase.io
  version: "1.0"
  x-logo:
    url: https://twitter.com/evrcm/profile_image?size=original
  x-origin:
  - converter:
      url: https://github.com/lucybot/api-spec-converter
      version: 2.6.2
    format: swagger
    url: http://api.cambase.io/api-docs/api-docs.json
    version: "1.2"
  x-providerName: cambase.io
servers:
- url: http://api.cambase.io/
tags:
- description: Models
  name: models
- description: Recorders
  name: recorders
- description: Vendors
  name: vendors
paths:
  /api/v1/models.json:
    get:
      operationId: Api::V1::Models#index
      parameters:
      - description: Page number
        in: query
        name: page
        schema:
          type: integer
      - description: Sort order
        in: query
        name: order
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: No response was specified
        "401":
          content: {}
          description: Unauthorized
        "406":
          content: {}
          description: The request you made is not acceptable
        "416":
          content: {}
          description: Requested Range Not Satisfiable
      summary: Fetches all Models
      tags:
      - models
      x-accepts:
      - application/json
    post:
      operationId: Api::V1::Models#create
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Api__V1__Models_create_request'
        required: true
      responses:
        "200":
          content: {}
          description: No response was specified
        "401":
          content: {}
          description: Unauthorized
        "406":
          content: {}
          description: Not Acceptable
      summary: Creates a new Model
      tags:
      - models
      x-content-type: multipart/form-data
      x-accepts:
      - application/json
  /api/v1/models/search.json:
    get:
      operationId: Api::V1::Models#search
      parameters:
      - description: Page number
        in: query
        name: page
        schema:
          type: integer
      - description: Model
        in: query
        name: "q[model_cont]"
        schema:
          type: string
      - description: Vendor
        in: query
        name: "q[manufacturer_name_cont]"
        schema:
          type: string
      - description: Shape
        in: query
        name: "q[shape_eq]"
        schema:
          type: string
      - description: Resolution
        in: query
        name: "q[resolution_eq]"
        schema:
          type: string
      - description: ONVIF
        in: query
        name: "q[onvif_true]"
        schema:
          type: string
      - description: PSIA
        in: query
        name: "q[psia_true]"
        schema:
          type: string
      - description: PTZ
        in: query
        name: "q[ptz_true]"
        schema:
          type: string
      - description: Infrared
        in: query
        name: "q[infrared_true]"
        schema:
          type: string
      - description: Varifocal
        in: query
        name: "q[varifocal_true]"
        schema:
          type: string
      - description: SD Card
        in: query
        name: "q[sd_card_true]"
        schema:
          type: string
      - description: UPnP
        in: query
        name: "q[upnp_true]"
        schema:
          type: string
      - description: Audio In
        in: query
        name: "q[audio_in_true]"
        schema:
          type: string
      - description: Audio Out
        in: query
        name: "q[audio_out_true]"
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: No response was specified
        "401":
          content: {}
          description: Unauthorized
        "406":
          content: {}
          description: The request you made is not acceptable
        "416":
          content: {}
          description: Requested Range Not Satisfiable
      summary: Searches all Models
      tags:
      - models
      x-accepts:
      - application/json
  /api/v1/models/{id}.json:
    get:
      operationId: Api::V1::Models#show
      parameters:
      - description: Model ID
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        "200":
          content: {}
          description: No response was specified
        "401":
          content: {}
          description: Unauthorized
        "404":
          content: {}
          description: Not Found
        "406":
          content: {}
          description: Not Acceptable
      summary: Fetches a single Model
      tags:
      - models
      x-accepts:
      - application/json
    patch:
      parameters:
      - description: Model ID
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/_api_v1_models__id__json_put_request'
        required: true
      responses:
        "200":
          content: {}
          description: No response was specified
        "401":
          content: {}
          description: Unauthorized
        "404":
          content: {}
          description: Not Found
        "406":
          content: {}
          description: Not Acceptable
      summary: Updates an existing Model
      tags:
      - models
      x-content-type: multipart/form-data
      x-accepts:
      - application/json
    put:
      parameters:
      - description: Model ID
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/_api_v1_models__id__json_put_request'
        required: true
      responses:
        "200":
          content: {}
          description: No response was specified
        "401":
          content: {}
          description: Unauthorized
        "404":
          content: {}
          description: Not Found
        "406":
          content: {}
          description: Not Acceptable
      summary: Updates an existing Model
      tags:
      - models
      x-content-type: multipart/form-data
      x-accepts:
      - application/json
  /api/v1/recorders.json:
    get:
      operationId: Api::V1::Recorders#index
      parameters:
      - description: Page number
        in: query
        name: page
        schema:
          type: integer
      - description: Sort order
        in: query
        name: order
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: No response was specified
        "401":
          content: {}
          description: Unauthorized
        "406":
          content: {}
          description: The request you made is not acceptable
        "416":
          content: {}
          description: Requested Range Not Satisfiable
      summary: Fetches all Recorders
      tags:
      - recorders
      x-accepts:
      - application/json
    post:
      operationId: Api::V1::Recorders#create
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Api__V1__Recorders_create_request'
        required: true
      responses:
        "200":
          content: {}
          description: No response was specified
        "401":
          content: {}
          description: Unauthorized
        "406":
          content: {}
          description: Not Acceptable
      summary: Creates a new Recorder
      tags:
      - recorders
      x-content-type: multipart/form-data
      x-accepts:
      - application/json
  /api/v1/recorders/search.json:
    get:
      operationId: Api::V1::Recorders#search
      parameters:
      - description: Page number
        in: query
        name: page
        schema:
          type: integer
      - description: Model
        in: query
        name: "q[model_cont]"
        schema:
          type: string
      - description: Vendor
        in: query
        name: "q[vendor_name_cont]"
        schema:
          type: string
      - description: SD Card (GB)
        in: query
        name: "q[sdhc_eq]"
        schema:
          type: string
      - description: Type
        in: query
        name: "q[type_eq]"
        schema:
          type: string
      - description: Resolution
        in: query
        name: "q[resolution_eq]"
        schema:
          type: string
      - description: Input Channels
        in: query
        name: "q[input_channels_eq]"
        schema:
          type: string
      - description: Playback Channels
        in: query
        name: "q[playback_channels_eq]"
        schema:
          type: string
      - description: ONVIF
        in: query
        name: "q[onvif_true]"
        schema:
          type: string
      - description: PSIA
        in: query
        name: "q[psia_true]"
        schema:
          type: string
      - description: PTZ
        in: query
        name: "q[ptz_true]"
        schema:
          type: string
      - description: SD Card
        in: query
        name: "q[sd_card_true]"
        schema:
          type: string
      - description: UPnP
        in: query
        name: "q[upnp_true]"
        schema:
          type: string
      - description: Audio In
        in: query
        name: "q[audio_in_true]"
        schema:
          type: string
      - description: Audio Out
        in: query
        name: "q[audio_out_true]"
        schema:
          type: string
      - description: HDMI Support
        in: query
        name: "q[hdmi_true]"
        schema:
          type: string
      - description: Hot Swap
        in: query
        name: "q[hot_swap_true]"
        schema:
          type: string
      - description: 3rd pparty Camera Support
        in: query
        name: "q[support_3rdparty_true]"
        schema:
          type: string
      - description: Digital I/O
        in: query
        name: "q[digital_io_true]"
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: No response was specified
        "401":
          content: {}
          description: Unauthorized
        "406":
          content: {}
          description: The request you made is not acceptable
        "416":
          content: {}
          description: Requested Range Not Satisfiable
      summary: Searches all Recorders
      tags:
      - recorders
      x-accepts:
      - application/json
  /api/v1/recorders/{id}.json:
    get:
      operationId: Api::V1::Recorders#show
      parameters:
      - description: Recorder ID
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        "200":
          content: {}
          description: No response was specified
        "401":
          content: {}
          description: Unauthorized
        "404":
          content: {}
          description: Not Found
        "406":
          content: {}
          description: Not Acceptable
      summary: Fetches a single Recorder
      tags:
      - recorders
      x-accepts:
      - application/json
    patch:
      parameters:
      - description: Recorder ID
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Api__V1__Recorders_create_request'
        required: true
      responses:
        "200":
          content: {}
          description: No response was specified
        "401":
          content: {}
          description: Unauthorized
        "404":
          content: {}
          description: Not Found
        "406":
          content: {}
          description: Not Acceptable
      summary: Updates an existing Recorder
      tags:
      - recorders
      x-content-type: multipart/form-data
      x-accepts:
      - application/json
    put:
      parameters:
      - description: Recorder ID
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Api__V1__Recorders_create_request'
        required: true
      responses:
        "200":
          content: {}
          description: No response was specified
        "401":
          content: {}
          description: Unauthorized
        "404":
          content: {}
          description: Not Found
        "406":
          content: {}
          description: Not Acceptable
      summary: Updates an existing Recorder
      tags:
      - recorders
      x-content-type: multipart/form-data
      x-accepts:
      - application/json
  /api/v1/vendors.json:
    get:
      operationId: Api::V1::Vendors#index
      parameters:
      - description: Page number
        in: query
        name: page
        schema:
          type: integer
      - description: Sort order
        in: query
        name: order
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: No response was specified
        "401":
          content: {}
          description: Unauthorized
        "406":
          content: {}
          description: The request you made is not acceptable
        "416":
          content: {}
          description: Requested Range Not Satisfiable
      summary: Fetches all Vendors
      tags:
      - vendors
      x-accepts:
      - application/json
    post:
      operationId: Api::V1::Vendors#create
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Api__V1__Vendors_create_request'
        required: true
      responses:
        "200":
          content: {}
          description: No response was specified
        "401":
          content: {}
          description: Unauthorized
        "406":
          content: {}
          description: Not Acceptable
      summary: Creates a new Vendor
      tags:
      - vendors
      x-content-type: multipart/form-data
      x-accepts:
      - application/json
  /api/v1/vendors/{id}.json:
    get:
      operationId: Api::V1::Vendors#show
      parameters:
      - description: Vendor ID
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Sort order
        in: query
        name: order
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: No response was specified
        "401":
          content: {}
          description: Unauthorized
        "404":
          content: {}
          description: Not Found
        "406":
          content: {}
          description: Not Acceptable
      summary: Fetches a single Vendor
      tags:
      - vendors
      x-accepts:
      - application/json
    patch:
      parameters:
      - description: Vendor ID
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/_api_v1_vendors__id__json_put_request'
      responses:
        "200":
          content: {}
          description: No response was specified
        "401":
          content: {}
          description: Unauthorized
        "404":
          content: {}
          description: Not Found
        "406":
          content: {}
          description: Not Acceptable
      summary: Updates an existing Vendor
      tags:
      - vendors
      x-content-type: multipart/form-data
      x-accepts:
      - application/json
    put:
      parameters:
      - description: Vendor ID
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/_api_v1_vendors__id__json_put_request'
      responses:
        "200":
          content: {}
          description: No response was specified
        "401":
          content: {}
          description: Unauthorized
        "404":
          content: {}
          description: Not Found
        "406":
          content: {}
          description: Not Acceptable
      summary: Updates an existing Vendor
      tags:
      - vendors
      x-content-type: multipart/form-data
      x-accepts:
      - application/json
components:
  schemas:
    Api__V1__Vendors_create_request:
      properties:
        vendor[name]:
          description: Name
          type: string
        vendor[info]:
          description: Info.
          type: string
        vendor[url]:
          description: Website
          type: string
        vendor[mac]:
          description: MAC
          type: string
      required:
      - "vendor[name]"
      type: object
    _api_v1_vendors__id__json_put_request:
      properties:
        vendor[name]:
          description: Name
          type: string
        vendor[info]:
          description: Info.
          type: string
        vendor[url]:
          description: Website
          type: string
        vendor[mac]:
          description: MAC
          type: string
      type: object
    Api__V1__Models_create_request:
      properties:
        vendor_id:
          description: Vendor ID
          type: string
        model[model]:
          description: Model
          type: string
        model[shape]:
          description: Shape
          type: string
        model[resolution]:
          description: Resolution
          type: string
        model[onvif]:
          description: ONVIF
          type: string
        model[psia]:
          description: PSIA
          type: string
        model[ptz]:
          description: PTZ
          type: string
        model[infrared]:
          description: Infrared
          type: string
        model[varifocal]:
          description: Varifocal
          type: string
        model[sd_card]:
          description: SD Card
          type: string
        model[upnp]:
          description: UPnP
          type: string
        model[audio_in]:
          description: UPnP
          type: string
        model[audio_out]:
          description: UPnP
          type: string
        model[default_username]:
          description: Default Username
          type: string
        model[default_password]:
          description: Default Password
          type: string
        model[jpeg_url]:
          description: JPEG URL
          type: string
        model[h264_url]:
          description: H264 URL
          type: string
        model[mjpeg_url]:
          description: MJPEG URL
          type: string
      required:
      - "model[model]"
      - vendor_id
      type: object
    _api_v1_models__id__json_put_request:
      properties:
        vendor_id:
          description: Vendor ID
          type: string
        model[model]:
          description: Model
          type: string
        model[shape]:
          description: Shape
          type: string
        model[resolution]:
          description: Resolution
          type: string
        model[onvif]:
          description: ONVIF
          type: string
        model[psia]:
          description: PSIA
          type: string
        model[ptz]:
          description: PTZ
          type: string
        model[infrared]:
          description: Infrared
          type: string
        model[varifocal]:
          description: Varifocal
          type: string
        model[sd_card]:
          description: SD Card
          type: string
        model[upnp]:
          description: UPnP
          type: string
        model[audio_in]:
          description: Audio In
          type: string
        model[audio_out]:
          description: Audio Out
          type: string
        model[default_username]:
          description: Default Username
          type: string
        model[default_password]:
          description: Default Password
          type: string
        model[jpeg_url]:
          description: JPEG URL
          type: string
        model[h264_url]:
          description: H264 URL
          type: string
        model[mjpeg_url]:
          description: MJPEG URL
          type: string
      required:
      - vendor_id
      type: object
    Api__V1__Recorders_create_request:
      properties:
        vendor_id:
          description: Vendor ID
          type: string
        recorder[model]:
          description: Model
          type: string
        recorder[name]:
          description: Name
          type: string
        recorder[recorder_type]:
          description: Type
          type: string
        recorder[resolution]:
          description: Resolution
          type: string
        recorder[onvif]:
          description: ONVIF
          type: string
        recorder[psia]:
          description: PSIA
          type: string
        recorder[ptz]:
          description: PTZ
          type: string
        recorder[discontinued]:
          description: Discontinued
          type: string
        recorder[support_3rdparty]:
          description: 3rd pparty Camera Support
          type: string
        recorder[sd_card]:
          description: SD Card
          type: string
        recorder[upnp]:
          description: UPnP
          type: string
        recorder[hot_swap]:
          description: Hot Swap
          type: string
        recorder[hdmi]:
          description: HDMI Support
          type: string
        recorder[digital_io]:
          description: Digital I/O
          type: string
        recorder[audio_in]:
          description: Audio In
          type: string
        recorder[audio_out]:
          description: Audio Out
          type: string
        recorder[input_channels]:
          description: Input Channels
          type: string
        recorder[playback_channels]:
          description: Playback Channels
          type: string
        recorder[usb]:
          description: USB Ports
          type: string
        recorder[sdhc]:
          description: SD Card (GB)
          type: string
        recorder[mobile_access]:
          description: Mobile Access
          type: string
        recorder[alarms]:
          description: Alarms
          type: string
        recorder[raid_support]:
          description: Raid Support
          type: string
        recorder[storage]:
          description: Internal Storage
          type: string
        recorder[additional_information]:
          description: Additional Information
          type: string
        recorder[default_username]:
          description: Default Username
          type: string
        recorder[default_password]:
          description: Default Password
          type: string
        recorder[jpeg_url]:
          description: JPEG URL
          type: string
        recorder[h264_url]:
          description: H264 URL
          type: string
        recorder[mjpeg_url]:
          description: MJPEG URL
          type: string
        recorder[official_url]:
          description: Official URL
          type: string
      required:
      - "recorder[model]"
      - "recorder[name]"
      - "recorder[recorder_type]"
      - vendor_id
      type: object
x-original-swagger-version: "2.0"

