/**
 * bng2latlong
 * Convert an OSGB36 easting and northing (British National Grid) to WGS84 latitude and longitude.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: info@getthedata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Bng2latlongEastingNorthingGet200Response model module.
 * @module model/Bng2latlongEastingNorthingGet200Response
 * @version 1.0
 */
class Bng2latlongEastingNorthingGet200Response {
    /**
     * Constructs a new <code>Bng2latlongEastingNorthingGet200Response</code>.
     * @alias module:model/Bng2latlongEastingNorthingGet200Response
     */
    constructor() { 
        
        Bng2latlongEastingNorthingGet200Response.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Bng2latlongEastingNorthingGet200Response</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Bng2latlongEastingNorthingGet200Response} obj Optional instance to populate.
     * @return {module:model/Bng2latlongEastingNorthingGet200Response} The populated <code>Bng2latlongEastingNorthingGet200Response</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Bng2latlongEastingNorthingGet200Response();

            if (data.hasOwnProperty('easting')) {
                obj['easting'] = ApiClient.convertToType(data['easting'], 'Number');
            }
            if (data.hasOwnProperty('error')) {
                obj['error'] = ApiClient.convertToType(data['error'], 'String');
            }
            if (data.hasOwnProperty('latitude')) {
                obj['latitude'] = ApiClient.convertToType(data['latitude'], 'Number');
            }
            if (data.hasOwnProperty('longitude')) {
                obj['longitude'] = ApiClient.convertToType(data['longitude'], 'Number');
            }
            if (data.hasOwnProperty('northing')) {
                obj['northing'] = ApiClient.convertToType(data['northing'], 'Number');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Bng2latlongEastingNorthingGet200Response</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Bng2latlongEastingNorthingGet200Response</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['error'] && !(typeof data['error'] === 'string' || data['error'] instanceof String)) {
            throw new Error("Expected the field `error` to be a primitive type in the JSON string but got " + data['error']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }

        return true;
    }


}



/**
 * @member {Number} easting
 */
Bng2latlongEastingNorthingGet200Response.prototype['easting'] = undefined;

/**
 * @member {String} error
 */
Bng2latlongEastingNorthingGet200Response.prototype['error'] = undefined;

/**
 * @member {Number} latitude
 */
Bng2latlongEastingNorthingGet200Response.prototype['latitude'] = undefined;

/**
 * @member {Number} longitude
 */
Bng2latlongEastingNorthingGet200Response.prototype['longitude'] = undefined;

/**
 * @member {Number} northing
 */
Bng2latlongEastingNorthingGet200Response.prototype['northing'] = undefined;

/**
 * @member {module:model/Bng2latlongEastingNorthingGet200Response.StatusEnum} status
 */
Bng2latlongEastingNorthingGet200Response.prototype['status'] = undefined;





/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
Bng2latlongEastingNorthingGet200Response['StatusEnum'] = {

    /**
     * value: "ok"
     * @const
     */
    "ok": "ok",

    /**
     * value: "error"
     * @const
     */
    "error": "error"
};



export default Bng2latlongEastingNorthingGet200Response;

