/**
 * Tafqit
 * Convert numbers to their Arabic text representation
 *
 * The version of the OpenAPI document: v1
 * Contact: info@tafqit.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";

/**
* Default service.
* @module api/DefaultApi
* @version v1
*/
export default class DefaultApi {

    /**
    * Constructs a new DefaultApi. 
    * @alias module:api/DefaultApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the convert operation.
     * @callback module:api/DefaultApi~convertCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Convert the number into its Arabic text representation حول العدد إلى ما يقابله كتابة
     * @param {Object} opts Optional parameters
     * @param {String} [hundredsForm] Some use مائة others use مئة , both works in Arabic. If left empty the default is مائة 
     * @param {String} [theNumber] Put the number here. Decimal is supported by most units.
     * @param {String} [unit] The counted subject, be it a currency like درهم إماراتي  or a size unit like متر مربع If the unit does not appear in the text result, it may not be supported. Please contact us to add it.
     * @param {module:api/DefaultApi~convertCallback} callback The callback function, accepting three arguments: error, data, response
     */
    convert(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'hundreds_form': opts['hundredsForm'],
        'the_number': opts['theNumber'],
        'unit': opts['unit']
      };

      let authNames = [];
      let contentTypes = ['multipart/form-data'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/convert', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
