/**
 * Discourse API Documentation
 * This page contains the documentation on how to use Discourse through API calls.  > Note: For any endpoints not listed you can follow the [reverse engineer the Discourse API](https://meta.discourse.org/t/-/20576) guide to figure out how to use an API endpoint.  ### Request Content-Type  The Content-Type for POST and PUT requests can be set to `application/x-www-form-urlencoded`, `multipart/form-data`, or `application/json`.  ### Endpoint Names and Response Content-Type  Most API endpoints provide the same content as their HTML counterparts. For example the URL `/categories` serves a list of categories, the `/categories.json` API provides the same information in JSON format.  Instead of sending API requests to `/categories.json` you may also send them to `/categories` and add an `Accept: application/json` header to the request to get the JSON response. Sending requests with the `Accept` header is necessary if you want to use URLs for related endpoints returned by the API, such as pagination URLs. These URLs are returned without the `.json` prefix so you need to add the header in order to get the correct response format.  ### Authentication  Some endpoints do not require any authentication, pretty much anything else will require you to be authenticated.  To become authenticated you will need to create an API Key from the admin panel.  Once you have your API Key you can pass it in along with your API Username as an HTTP header like this:  ``` curl -X GET \"http://127.0.0.1:3000/admin/users/list/active.json\" \\ -H \"Api-Key: 714552c6148e1617aeab526d0606184b94a80ec048fc09894ff1a72b740c5f19\" \\ -H \"Api-Username: system\" ```  and this is how POST requests will look:  ``` curl -X POST \"http://127.0.0.1:3000/categories\" \\ -H \"Content-Type: multipart/form-data;\" \\ -H \"Api-Key: 714552c6148e1617aeab526d0606184b94a80ec048fc09894ff1a72b740c5f19\" \\ -H \"Api-Username: system\" \\ -F \"name=89853c20-4409-e91a-a8ea-f6cdff96aaaa\" \\ -F \"color=49d9e9\" \\ -F \"text_color=f0fcfd\" ```  ### Boolean values  If an endpoint accepts a boolean be sure to specify it as a lowercase `true` or `false` value unless noted otherwise. 
 *
 * The version of the OpenAPI document: latest
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDeleteUser_request.h
 *
 * 
 */

#ifndef OAIDeleteUser_request_H
#define OAIDeleteUser_request_H

#include <QJsonObject>

#include <QJsonValue>
#include <QMap>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDeleteUser_request : public OAIObject {
public:
    OAIDeleteUser_request();
    OAIDeleteUser_request(QString json);
    ~OAIDeleteUser_request() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isBlockEmail() const;
    void setBlockEmail(const bool &block_email);
    bool is_block_email_Set() const;
    bool is_block_email_Valid() const;

    bool isBlockIp() const;
    void setBlockIp(const bool &block_ip);
    bool is_block_ip_Set() const;
    bool is_block_ip_Valid() const;

    bool isBlockUrls() const;
    void setBlockUrls(const bool &block_urls);
    bool is_block_urls_Set() const;
    bool is_block_urls_Valid() const;

    bool isDeletePosts() const;
    void setDeletePosts(const bool &delete_posts);
    bool is_delete_posts_Set() const;
    bool is_delete_posts_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_block_email;
    bool m_block_email_isSet;
    bool m_block_email_isValid;

    bool m_block_ip;
    bool m_block_ip_isSet;
    bool m_block_ip_isValid;

    bool m_block_urls;
    bool m_block_urls_isSet;
    bool m_block_urls_isValid;

    bool m_delete_posts;
    bool m_delete_posts_isSet;
    bool m_delete_posts_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDeleteUser_request)

#endif // OAIDeleteUser_request_H
