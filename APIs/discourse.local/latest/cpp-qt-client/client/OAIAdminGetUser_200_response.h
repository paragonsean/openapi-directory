/**
 * Discourse API Documentation
 * This page contains the documentation on how to use Discourse through API calls.  > Note: For any endpoints not listed you can follow the [reverse engineer the Discourse API](https://meta.discourse.org/t/-/20576) guide to figure out how to use an API endpoint.  ### Request Content-Type  The Content-Type for POST and PUT requests can be set to `application/x-www-form-urlencoded`, `multipart/form-data`, or `application/json`.  ### Endpoint Names and Response Content-Type  Most API endpoints provide the same content as their HTML counterparts. For example the URL `/categories` serves a list of categories, the `/categories.json` API provides the same information in JSON format.  Instead of sending API requests to `/categories.json` you may also send them to `/categories` and add an `Accept: application/json` header to the request to get the JSON response. Sending requests with the `Accept` header is necessary if you want to use URLs for related endpoints returned by the API, such as pagination URLs. These URLs are returned without the `.json` prefix so you need to add the header in order to get the correct response format.  ### Authentication  Some endpoints do not require any authentication, pretty much anything else will require you to be authenticated.  To become authenticated you will need to create an API Key from the admin panel.  Once you have your API Key you can pass it in along with your API Username as an HTTP header like this:  ``` curl -X GET \"http://127.0.0.1:3000/admin/users/list/active.json\" \\ -H \"Api-Key: 714552c6148e1617aeab526d0606184b94a80ec048fc09894ff1a72b740c5f19\" \\ -H \"Api-Username: system\" ```  and this is how POST requests will look:  ``` curl -X POST \"http://127.0.0.1:3000/categories\" \\ -H \"Content-Type: multipart/form-data;\" \\ -H \"Api-Key: 714552c6148e1617aeab526d0606184b94a80ec048fc09894ff1a72b740c5f19\" \\ -H \"Api-Username: system\" \\ -F \"name=89853c20-4409-e91a-a8ea-f6cdff96aaaa\" \\ -F \"color=49d9e9\" \\ -F \"text_color=f0fcfd\" ```  ### Boolean values  If an endpoint accepts a boolean be sure to specify it as a lowercase `true` or `false` value unless noted otherwise. 
 *
 * The version of the OpenAPI document: latest
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAdminGetUser_200_response.h
 *
 * 
 */

#ifndef OAIAdminGetUser_200_response_H
#define OAIAdminGetUser_200_response_H

#include <QJsonObject>

#include "OAIAdminGetUser_200_response_approved_by.h"
#include "OAIAdminGetUser_200_response_groups_inner.h"
#include "OAIAdminGetUser_200_response_penalty_counts.h"
#include "OAIAdminGetUser_200_response_tl3_requirements.h"
#include "OAIObject.h"
#include <QJsonValue>
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAdminGetUser_200_response : public OAIObject {
public:
    OAIAdminGetUser_200_response();
    OAIAdminGetUser_200_response(QString json);
    ~OAIAdminGetUser_200_response() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isActive() const;
    void setActive(const bool &active);
    bool is_active_Set() const;
    bool is_active_Valid() const;

    bool isAdmin() const;
    void setAdmin(const bool &admin);
    bool is_admin_Set() const;
    bool is_admin_Valid() const;

    qint32 getApiKeyCount() const;
    void setApiKeyCount(const qint32 &api_key_count);
    bool is_api_key_count_Set() const;
    bool is_api_key_count_Valid() const;

    OAIAdminGetUser_200_response_approved_by getApprovedBy() const;
    void setApprovedBy(const OAIAdminGetUser_200_response_approved_by &approved_by);
    bool is_approved_by_Set() const;
    bool is_approved_by_Valid() const;

    QList<QJsonValue> getAssociatedAccounts() const;
    void setAssociatedAccounts(const QList<QJsonValue> &associated_accounts);
    bool is_associated_accounts_Set() const;
    bool is_associated_accounts_Valid() const;

    QString getAvatarTemplate() const;
    void setAvatarTemplate(const QString &avatar_template);
    bool is_avatar_template_Set() const;
    bool is_avatar_template_Valid() const;

    qint32 getBadgeCount() const;
    void setBadgeCount(const qint32 &badge_count);
    bool is_badge_count_Set() const;
    bool is_badge_count_Valid() const;

    qint32 getBounceScore() const;
    void setBounceScore(const qint32 &bounce_score);
    bool is_bounce_score_Set() const;
    bool is_bounce_score_Valid() const;

    bool isCanActivate() const;
    void setCanActivate(const bool &can_activate);
    bool is_can_activate_Set() const;
    bool is_can_activate_Valid() const;

    bool isCanBeAnonymized() const;
    void setCanBeAnonymized(const bool &can_be_anonymized);
    bool is_can_be_anonymized_Set() const;
    bool is_can_be_anonymized_Valid() const;

    bool isCanBeDeleted() const;
    void setCanBeDeleted(const bool &can_be_deleted);
    bool is_can_be_deleted_Set() const;
    bool is_can_be_deleted_Valid() const;

    bool isCanBeMerged() const;
    void setCanBeMerged(const bool &can_be_merged);
    bool is_can_be_merged_Set() const;
    bool is_can_be_merged_Valid() const;

    bool isCanDeactivate() const;
    void setCanDeactivate(const bool &can_deactivate);
    bool is_can_deactivate_Set() const;
    bool is_can_deactivate_Valid() const;

    bool isCanDeleteAllPosts() const;
    void setCanDeleteAllPosts(const bool &can_delete_all_posts);
    bool is_can_delete_all_posts_Set() const;
    bool is_can_delete_all_posts_Valid() const;

    bool isCanDeleteSsoRecord() const;
    void setCanDeleteSsoRecord(const bool &can_delete_sso_record);
    bool is_can_delete_sso_record_Set() const;
    bool is_can_delete_sso_record_Valid() const;

    bool isCanDisableSecondFactor() const;
    void setCanDisableSecondFactor(const bool &can_disable_second_factor);
    bool is_can_disable_second_factor_Set() const;
    bool is_can_disable_second_factor_Valid() const;

    bool isCanGrantAdmin() const;
    void setCanGrantAdmin(const bool &can_grant_admin);
    bool is_can_grant_admin_Set() const;
    bool is_can_grant_admin_Valid() const;

    bool isCanGrantModeration() const;
    void setCanGrantModeration(const bool &can_grant_moderation);
    bool is_can_grant_moderation_Set() const;
    bool is_can_grant_moderation_Valid() const;

    bool isCanImpersonate() const;
    void setCanImpersonate(const bool &can_impersonate);
    bool is_can_impersonate_Set() const;
    bool is_can_impersonate_Valid() const;

    bool isCanRevokeAdmin() const;
    void setCanRevokeAdmin(const bool &can_revoke_admin);
    bool is_can_revoke_admin_Set() const;
    bool is_can_revoke_admin_Valid() const;

    bool isCanRevokeModeration() const;
    void setCanRevokeModeration(const bool &can_revoke_moderation);
    bool is_can_revoke_moderation_Set() const;
    bool is_can_revoke_moderation_Valid() const;

    bool isCanSendActivationEmail() const;
    void setCanSendActivationEmail(const bool &can_send_activation_email);
    bool is_can_send_activation_email_Set() const;
    bool is_can_send_activation_email_Valid() const;

    bool isCanViewActionLogs() const;
    void setCanViewActionLogs(const bool &can_view_action_logs);
    bool is_can_view_action_logs_Set() const;
    bool is_can_view_action_logs_Valid() const;

    QString getCreatedAt() const;
    void setCreatedAt(const QString &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    double getCreatedAtAge() const;
    void setCreatedAtAge(const double &created_at_age);
    bool is_created_at_age_Set() const;
    bool is_created_at_age_Valid() const;

    qint32 getDaysVisited() const;
    void setDaysVisited(const qint32 &days_visited);
    bool is_days_visited_Set() const;
    bool is_days_visited_Valid() const;

    OAIObject getExternalIds() const;
    void setExternalIds(const OAIObject &external_ids);
    bool is_external_ids_Set() const;
    bool is_external_ids_Valid() const;

    qint32 getFlagLevel() const;
    void setFlagLevel(const qint32 &flag_level);
    bool is_flag_level_Set() const;
    bool is_flag_level_Valid() const;

    qint32 getFlagsGivenCount() const;
    void setFlagsGivenCount(const qint32 &flags_given_count);
    bool is_flags_given_count_Set() const;
    bool is_flags_given_count_Valid() const;

    qint32 getFlagsReceivedCount() const;
    void setFlagsReceivedCount(const qint32 &flags_received_count);
    bool is_flags_received_count_Set() const;
    bool is_flags_received_count_Valid() const;

    QString getFullSuspendReason() const;
    void setFullSuspendReason(const QString &full_suspend_reason);
    bool is_full_suspend_reason_Set() const;
    bool is_full_suspend_reason_Valid() const;

    QList<OAIAdminGetUser_200_response_groups_inner> getGroups() const;
    void setGroups(const QList<OAIAdminGetUser_200_response_groups_inner> &groups);
    bool is_groups_Set() const;
    bool is_groups_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getIpAddress() const;
    void setIpAddress(const QString &ip_address);
    bool is_ip_address_Set() const;
    bool is_ip_address_Valid() const;

    double getLastEmailedAge() const;
    void setLastEmailedAge(const double &last_emailed_age);
    bool is_last_emailed_age_Set() const;
    bool is_last_emailed_age_Valid() const;

    QString getLastEmailedAt() const;
    void setLastEmailedAt(const QString &last_emailed_at);
    bool is_last_emailed_at_Set() const;
    bool is_last_emailed_at_Valid() const;

    double getLastSeenAge() const;
    void setLastSeenAge(const double &last_seen_age);
    bool is_last_seen_age_Set() const;
    bool is_last_seen_age_Valid() const;

    QString getLastSeenAt() const;
    void setLastSeenAt(const QString &last_seen_at);
    bool is_last_seen_at_Set() const;
    bool is_last_seen_at_Valid() const;

    qint32 getLikeCount() const;
    void setLikeCount(const qint32 &like_count);
    bool is_like_count_Set() const;
    bool is_like_count_Valid() const;

    qint32 getLikeGivenCount() const;
    void setLikeGivenCount(const qint32 &like_given_count);
    bool is_like_given_count_Set() const;
    bool is_like_given_count_Valid() const;

    QString getManualLockedTrustLevel() const;
    void setManualLockedTrustLevel(const QString &manual_locked_trust_level);
    bool is_manual_locked_trust_level_Set() const;
    bool is_manual_locked_trust_level_Valid() const;

    bool isModerator() const;
    void setModerator(const bool &moderator);
    bool is_moderator_Set() const;
    bool is_moderator_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getNextPenalty() const;
    void setNextPenalty(const QString &next_penalty);
    bool is_next_penalty_Set() const;
    bool is_next_penalty_Valid() const;

    OAIAdminGetUser_200_response_penalty_counts getPenaltyCounts() const;
    void setPenaltyCounts(const OAIAdminGetUser_200_response_penalty_counts &penalty_counts);
    bool is_penalty_counts_Set() const;
    bool is_penalty_counts_Valid() const;

    qint32 getPostCount() const;
    void setPostCount(const qint32 &post_count);
    bool is_post_count_Set() const;
    bool is_post_count_Valid() const;

    qint32 getPostEditsCount() const;
    void setPostEditsCount(const qint32 &post_edits_count);
    bool is_post_edits_count_Set() const;
    bool is_post_edits_count_Valid() const;

    qint32 getPostsReadCount() const;
    void setPostsReadCount(const qint32 &posts_read_count);
    bool is_posts_read_count_Set() const;
    bool is_posts_read_count_Valid() const;

    QString getPrimaryGroupId() const;
    void setPrimaryGroupId(const QString &primary_group_id);
    bool is_primary_group_id_Set() const;
    bool is_primary_group_id_Valid() const;

    qint32 getPrivateTopicsCount() const;
    void setPrivateTopicsCount(const qint32 &private_topics_count);
    bool is_private_topics_count_Set() const;
    bool is_private_topics_count_Valid() const;

    QString getRegistrationIpAddress() const;
    void setRegistrationIpAddress(const QString &registration_ip_address);
    bool is_registration_ip_address_Set() const;
    bool is_registration_ip_address_Valid() const;

    QString getResetBounceScoreAfter() const;
    void setResetBounceScoreAfter(const QString &reset_bounce_score_after);
    bool is_reset_bounce_score_after_Set() const;
    bool is_reset_bounce_score_after_Valid() const;

    QString getSilenceReason() const;
    void setSilenceReason(const QString &silence_reason);
    bool is_silence_reason_Set() const;
    bool is_silence_reason_Valid() const;

    QString getSilencedBy() const;
    void setSilencedBy(const QString &silenced_by);
    bool is_silenced_by_Set() const;
    bool is_silenced_by_Valid() const;

    QString getSingleSignOnRecord() const;
    void setSingleSignOnRecord(const QString &single_sign_on_record);
    bool is_single_sign_on_record_Set() const;
    bool is_single_sign_on_record_Valid() const;

    bool isStaged() const;
    void setStaged(const bool &staged);
    bool is_staged_Set() const;
    bool is_staged_Valid() const;

    QString getSuspendedBy() const;
    void setSuspendedBy(const QString &suspended_by);
    bool is_suspended_by_Set() const;
    bool is_suspended_by_Valid() const;

    qint32 getTimeRead() const;
    void setTimeRead(const qint32 &time_read);
    bool is_time_read_Set() const;
    bool is_time_read_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    OAIAdminGetUser_200_response_tl3_requirements getTl3Requirements() const;
    void setTl3Requirements(const OAIAdminGetUser_200_response_tl3_requirements &tl3_requirements);
    bool is_tl3_requirements_Set() const;
    bool is_tl3_requirements_Valid() const;

    qint32 getTopicCount() const;
    void setTopicCount(const qint32 &topic_count);
    bool is_topic_count_Set() const;
    bool is_topic_count_Valid() const;

    qint32 getTopicsEntered() const;
    void setTopicsEntered(const qint32 &topics_entered);
    bool is_topics_entered_Set() const;
    bool is_topics_entered_Valid() const;

    qint32 getTrustLevel() const;
    void setTrustLevel(const qint32 &trust_level);
    bool is_trust_level_Set() const;
    bool is_trust_level_Valid() const;

    QString getUsername() const;
    void setUsername(const QString &username);
    bool is_username_Set() const;
    bool is_username_Valid() const;

    qint32 getWarningsReceivedCount() const;
    void setWarningsReceivedCount(const qint32 &warnings_received_count);
    bool is_warnings_received_count_Set() const;
    bool is_warnings_received_count_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_active;
    bool m_active_isSet;
    bool m_active_isValid;

    bool m_admin;
    bool m_admin_isSet;
    bool m_admin_isValid;

    qint32 m_api_key_count;
    bool m_api_key_count_isSet;
    bool m_api_key_count_isValid;

    OAIAdminGetUser_200_response_approved_by m_approved_by;
    bool m_approved_by_isSet;
    bool m_approved_by_isValid;

    QList<QJsonValue> m_associated_accounts;
    bool m_associated_accounts_isSet;
    bool m_associated_accounts_isValid;

    QString m_avatar_template;
    bool m_avatar_template_isSet;
    bool m_avatar_template_isValid;

    qint32 m_badge_count;
    bool m_badge_count_isSet;
    bool m_badge_count_isValid;

    qint32 m_bounce_score;
    bool m_bounce_score_isSet;
    bool m_bounce_score_isValid;

    bool m_can_activate;
    bool m_can_activate_isSet;
    bool m_can_activate_isValid;

    bool m_can_be_anonymized;
    bool m_can_be_anonymized_isSet;
    bool m_can_be_anonymized_isValid;

    bool m_can_be_deleted;
    bool m_can_be_deleted_isSet;
    bool m_can_be_deleted_isValid;

    bool m_can_be_merged;
    bool m_can_be_merged_isSet;
    bool m_can_be_merged_isValid;

    bool m_can_deactivate;
    bool m_can_deactivate_isSet;
    bool m_can_deactivate_isValid;

    bool m_can_delete_all_posts;
    bool m_can_delete_all_posts_isSet;
    bool m_can_delete_all_posts_isValid;

    bool m_can_delete_sso_record;
    bool m_can_delete_sso_record_isSet;
    bool m_can_delete_sso_record_isValid;

    bool m_can_disable_second_factor;
    bool m_can_disable_second_factor_isSet;
    bool m_can_disable_second_factor_isValid;

    bool m_can_grant_admin;
    bool m_can_grant_admin_isSet;
    bool m_can_grant_admin_isValid;

    bool m_can_grant_moderation;
    bool m_can_grant_moderation_isSet;
    bool m_can_grant_moderation_isValid;

    bool m_can_impersonate;
    bool m_can_impersonate_isSet;
    bool m_can_impersonate_isValid;

    bool m_can_revoke_admin;
    bool m_can_revoke_admin_isSet;
    bool m_can_revoke_admin_isValid;

    bool m_can_revoke_moderation;
    bool m_can_revoke_moderation_isSet;
    bool m_can_revoke_moderation_isValid;

    bool m_can_send_activation_email;
    bool m_can_send_activation_email_isSet;
    bool m_can_send_activation_email_isValid;

    bool m_can_view_action_logs;
    bool m_can_view_action_logs_isSet;
    bool m_can_view_action_logs_isValid;

    QString m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    double m_created_at_age;
    bool m_created_at_age_isSet;
    bool m_created_at_age_isValid;

    qint32 m_days_visited;
    bool m_days_visited_isSet;
    bool m_days_visited_isValid;

    OAIObject m_external_ids;
    bool m_external_ids_isSet;
    bool m_external_ids_isValid;

    qint32 m_flag_level;
    bool m_flag_level_isSet;
    bool m_flag_level_isValid;

    qint32 m_flags_given_count;
    bool m_flags_given_count_isSet;
    bool m_flags_given_count_isValid;

    qint32 m_flags_received_count;
    bool m_flags_received_count_isSet;
    bool m_flags_received_count_isValid;

    QString m_full_suspend_reason;
    bool m_full_suspend_reason_isSet;
    bool m_full_suspend_reason_isValid;

    QList<OAIAdminGetUser_200_response_groups_inner> m_groups;
    bool m_groups_isSet;
    bool m_groups_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_ip_address;
    bool m_ip_address_isSet;
    bool m_ip_address_isValid;

    double m_last_emailed_age;
    bool m_last_emailed_age_isSet;
    bool m_last_emailed_age_isValid;

    QString m_last_emailed_at;
    bool m_last_emailed_at_isSet;
    bool m_last_emailed_at_isValid;

    double m_last_seen_age;
    bool m_last_seen_age_isSet;
    bool m_last_seen_age_isValid;

    QString m_last_seen_at;
    bool m_last_seen_at_isSet;
    bool m_last_seen_at_isValid;

    qint32 m_like_count;
    bool m_like_count_isSet;
    bool m_like_count_isValid;

    qint32 m_like_given_count;
    bool m_like_given_count_isSet;
    bool m_like_given_count_isValid;

    QString m_manual_locked_trust_level;
    bool m_manual_locked_trust_level_isSet;
    bool m_manual_locked_trust_level_isValid;

    bool m_moderator;
    bool m_moderator_isSet;
    bool m_moderator_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_next_penalty;
    bool m_next_penalty_isSet;
    bool m_next_penalty_isValid;

    OAIAdminGetUser_200_response_penalty_counts m_penalty_counts;
    bool m_penalty_counts_isSet;
    bool m_penalty_counts_isValid;

    qint32 m_post_count;
    bool m_post_count_isSet;
    bool m_post_count_isValid;

    qint32 m_post_edits_count;
    bool m_post_edits_count_isSet;
    bool m_post_edits_count_isValid;

    qint32 m_posts_read_count;
    bool m_posts_read_count_isSet;
    bool m_posts_read_count_isValid;

    QString m_primary_group_id;
    bool m_primary_group_id_isSet;
    bool m_primary_group_id_isValid;

    qint32 m_private_topics_count;
    bool m_private_topics_count_isSet;
    bool m_private_topics_count_isValid;

    QString m_registration_ip_address;
    bool m_registration_ip_address_isSet;
    bool m_registration_ip_address_isValid;

    QString m_reset_bounce_score_after;
    bool m_reset_bounce_score_after_isSet;
    bool m_reset_bounce_score_after_isValid;

    QString m_silence_reason;
    bool m_silence_reason_isSet;
    bool m_silence_reason_isValid;

    QString m_silenced_by;
    bool m_silenced_by_isSet;
    bool m_silenced_by_isValid;

    QString m_single_sign_on_record;
    bool m_single_sign_on_record_isSet;
    bool m_single_sign_on_record_isValid;

    bool m_staged;
    bool m_staged_isSet;
    bool m_staged_isValid;

    QString m_suspended_by;
    bool m_suspended_by_isSet;
    bool m_suspended_by_isValid;

    qint32 m_time_read;
    bool m_time_read_isSet;
    bool m_time_read_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;

    OAIAdminGetUser_200_response_tl3_requirements m_tl3_requirements;
    bool m_tl3_requirements_isSet;
    bool m_tl3_requirements_isValid;

    qint32 m_topic_count;
    bool m_topic_count_isSet;
    bool m_topic_count_isValid;

    qint32 m_topics_entered;
    bool m_topics_entered_isSet;
    bool m_topics_entered_isValid;

    qint32 m_trust_level;
    bool m_trust_level_isSet;
    bool m_trust_level_isValid;

    QString m_username;
    bool m_username_isSet;
    bool m_username_isValid;

    qint32 m_warnings_received_count;
    bool m_warnings_received_count_isSet;
    bool m_warnings_received_count_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAdminGetUser_200_response)

#endif // OAIAdminGetUser_200_response_H
