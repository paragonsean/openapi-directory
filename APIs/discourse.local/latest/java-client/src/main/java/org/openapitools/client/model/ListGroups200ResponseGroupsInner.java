/*
 * Discourse API Documentation
 * This page contains the documentation on how to use Discourse through API calls.  > Note: For any endpoints not listed you can follow the [reverse engineer the Discourse API](https://meta.discourse.org/t/-/20576) guide to figure out how to use an API endpoint.  ### Request Content-Type  The Content-Type for POST and PUT requests can be set to `application/x-www-form-urlencoded`, `multipart/form-data`, or `application/json`.  ### Endpoint Names and Response Content-Type  Most API endpoints provide the same content as their HTML counterparts. For example the URL `/categories` serves a list of categories, the `/categories.json` API provides the same information in JSON format.  Instead of sending API requests to `/categories.json` you may also send them to `/categories` and add an `Accept: application/json` header to the request to get the JSON response. Sending requests with the `Accept` header is necessary if you want to use URLs for related endpoints returned by the API, such as pagination URLs. These URLs are returned without the `.json` prefix so you need to add the header in order to get the correct response format.  ### Authentication  Some endpoints do not require any authentication, pretty much anything else will require you to be authenticated.  To become authenticated you will need to create an API Key from the admin panel.  Once you have your API Key you can pass it in along with your API Username as an HTTP header like this:  ``` curl -X GET \"http://127.0.0.1:3000/admin/users/list/active.json\" \\ -H \"Api-Key: 714552c6148e1617aeab526d0606184b94a80ec048fc09894ff1a72b740c5f19\" \\ -H \"Api-Username: system\" ```  and this is how POST requests will look:  ``` curl -X POST \"http://127.0.0.1:3000/categories\" \\ -H \"Content-Type: multipart/form-data;\" \\ -H \"Api-Key: 714552c6148e1617aeab526d0606184b94a80ec048fc09894ff1a72b740c5f19\" \\ -H \"Api-Username: system\" \\ -F \"name=89853c20-4409-e91a-a8ea-f6cdff96aaaa\" \\ -F \"color=49d9e9\" \\ -F \"text_color=f0fcfd\" ```  ### Boolean values  If an endpoint accepts a boolean be sure to specify it as a lowercase `true` or `false` value unless noted otherwise. 
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ListGroups200ResponseGroupsInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:12:34.324076-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ListGroups200ResponseGroupsInner {
  public static final String SERIALIZED_NAME_ALLOW_MEMBERSHIP_REQUESTS = "allow_membership_requests";
  @SerializedName(SERIALIZED_NAME_ALLOW_MEMBERSHIP_REQUESTS)
  private Boolean allowMembershipRequests;

  public static final String SERIALIZED_NAME_AUTOMATIC = "automatic";
  @SerializedName(SERIALIZED_NAME_AUTOMATIC)
  private Boolean automatic;

  public static final String SERIALIZED_NAME_BIO_COOKED = "bio_cooked";
  @SerializedName(SERIALIZED_NAME_BIO_COOKED)
  private String bioCooked;

  public static final String SERIALIZED_NAME_BIO_EXCERPT = "bio_excerpt";
  @SerializedName(SERIALIZED_NAME_BIO_EXCERPT)
  private String bioExcerpt;

  public static final String SERIALIZED_NAME_BIO_RAW = "bio_raw";
  @SerializedName(SERIALIZED_NAME_BIO_RAW)
  private String bioRaw;

  public static final String SERIALIZED_NAME_CAN_ADMIN_GROUP = "can_admin_group";
  @SerializedName(SERIALIZED_NAME_CAN_ADMIN_GROUP)
  private Boolean canAdminGroup;

  public static final String SERIALIZED_NAME_CAN_EDIT_GROUP = "can_edit_group";
  @SerializedName(SERIALIZED_NAME_CAN_EDIT_GROUP)
  private Boolean canEditGroup;

  public static final String SERIALIZED_NAME_CAN_SEE_MEMBERS = "can_see_members";
  @SerializedName(SERIALIZED_NAME_CAN_SEE_MEMBERS)
  private Boolean canSeeMembers;

  public static final String SERIALIZED_NAME_DEFAULT_NOTIFICATION_LEVEL = "default_notification_level";
  @SerializedName(SERIALIZED_NAME_DEFAULT_NOTIFICATION_LEVEL)
  private Integer defaultNotificationLevel;

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "display_name";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_FLAIR_BG_COLOR = "flair_bg_color";
  @SerializedName(SERIALIZED_NAME_FLAIR_BG_COLOR)
  private String flairBgColor;

  public static final String SERIALIZED_NAME_FLAIR_COLOR = "flair_color";
  @SerializedName(SERIALIZED_NAME_FLAIR_COLOR)
  private String flairColor;

  public static final String SERIALIZED_NAME_FLAIR_URL = "flair_url";
  @SerializedName(SERIALIZED_NAME_FLAIR_URL)
  private String flairUrl;

  public static final String SERIALIZED_NAME_FULL_NAME = "full_name";
  @SerializedName(SERIALIZED_NAME_FULL_NAME)
  private String fullName;

  public static final String SERIALIZED_NAME_GRANT_TRUST_LEVEL = "grant_trust_level";
  @SerializedName(SERIALIZED_NAME_GRANT_TRUST_LEVEL)
  private String grantTrustLevel;

  public static final String SERIALIZED_NAME_HAS_MESSAGES = "has_messages";
  @SerializedName(SERIALIZED_NAME_HAS_MESSAGES)
  private Boolean hasMessages;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_INCOMING_EMAIL = "incoming_email";
  @SerializedName(SERIALIZED_NAME_INCOMING_EMAIL)
  private String incomingEmail;

  public static final String SERIALIZED_NAME_IS_GROUP_OWNER = "is_group_owner";
  @SerializedName(SERIALIZED_NAME_IS_GROUP_OWNER)
  private Boolean isGroupOwner;

  public static final String SERIALIZED_NAME_IS_GROUP_USER = "is_group_user";
  @SerializedName(SERIALIZED_NAME_IS_GROUP_USER)
  private Boolean isGroupUser;

  public static final String SERIALIZED_NAME_MEMBERS_VISIBILITY_LEVEL = "members_visibility_level";
  @SerializedName(SERIALIZED_NAME_MEMBERS_VISIBILITY_LEVEL)
  private Integer membersVisibilityLevel;

  public static final String SERIALIZED_NAME_MEMBERSHIP_REQUEST_TEMPLATE = "membership_request_template";
  @SerializedName(SERIALIZED_NAME_MEMBERSHIP_REQUEST_TEMPLATE)
  private String membershipRequestTemplate;

  public static final String SERIALIZED_NAME_MENTIONABLE_LEVEL = "mentionable_level";
  @SerializedName(SERIALIZED_NAME_MENTIONABLE_LEVEL)
  private Integer mentionableLevel;

  public static final String SERIALIZED_NAME_MESSAGEABLE_LEVEL = "messageable_level";
  @SerializedName(SERIALIZED_NAME_MESSAGEABLE_LEVEL)
  private Integer messageableLevel;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PRIMARY_GROUP = "primary_group";
  @SerializedName(SERIALIZED_NAME_PRIMARY_GROUP)
  private Boolean primaryGroup;

  public static final String SERIALIZED_NAME_PUBLIC_ADMISSION = "public_admission";
  @SerializedName(SERIALIZED_NAME_PUBLIC_ADMISSION)
  private Boolean publicAdmission;

  public static final String SERIALIZED_NAME_PUBLIC_EXIT = "public_exit";
  @SerializedName(SERIALIZED_NAME_PUBLIC_EXIT)
  private Boolean publicExit;

  public static final String SERIALIZED_NAME_PUBLISH_READ_STATE = "publish_read_state";
  @SerializedName(SERIALIZED_NAME_PUBLISH_READ_STATE)
  private Boolean publishReadState;

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_USER_COUNT = "user_count";
  @SerializedName(SERIALIZED_NAME_USER_COUNT)
  private Integer userCount;

  public static final String SERIALIZED_NAME_VISIBILITY_LEVEL = "visibility_level";
  @SerializedName(SERIALIZED_NAME_VISIBILITY_LEVEL)
  private Integer visibilityLevel;

  public ListGroups200ResponseGroupsInner() {
  }

  public ListGroups200ResponseGroupsInner allowMembershipRequests(Boolean allowMembershipRequests) {
    this.allowMembershipRequests = allowMembershipRequests;
    return this;
  }

  /**
   * Get allowMembershipRequests
   * @return allowMembershipRequests
   */
  @javax.annotation.Nonnull
  public Boolean getAllowMembershipRequests() {
    return allowMembershipRequests;
  }

  public void setAllowMembershipRequests(Boolean allowMembershipRequests) {
    this.allowMembershipRequests = allowMembershipRequests;
  }


  public ListGroups200ResponseGroupsInner automatic(Boolean automatic) {
    this.automatic = automatic;
    return this;
  }

  /**
   * Get automatic
   * @return automatic
   */
  @javax.annotation.Nonnull
  public Boolean getAutomatic() {
    return automatic;
  }

  public void setAutomatic(Boolean automatic) {
    this.automatic = automatic;
  }


  public ListGroups200ResponseGroupsInner bioCooked(String bioCooked) {
    this.bioCooked = bioCooked;
    return this;
  }

  /**
   * Get bioCooked
   * @return bioCooked
   */
  @javax.annotation.Nullable
  public String getBioCooked() {
    return bioCooked;
  }

  public void setBioCooked(String bioCooked) {
    this.bioCooked = bioCooked;
  }


  public ListGroups200ResponseGroupsInner bioExcerpt(String bioExcerpt) {
    this.bioExcerpt = bioExcerpt;
    return this;
  }

  /**
   * Get bioExcerpt
   * @return bioExcerpt
   */
  @javax.annotation.Nullable
  public String getBioExcerpt() {
    return bioExcerpt;
  }

  public void setBioExcerpt(String bioExcerpt) {
    this.bioExcerpt = bioExcerpt;
  }


  public ListGroups200ResponseGroupsInner bioRaw(String bioRaw) {
    this.bioRaw = bioRaw;
    return this;
  }

  /**
   * Get bioRaw
   * @return bioRaw
   */
  @javax.annotation.Nullable
  public String getBioRaw() {
    return bioRaw;
  }

  public void setBioRaw(String bioRaw) {
    this.bioRaw = bioRaw;
  }


  public ListGroups200ResponseGroupsInner canAdminGroup(Boolean canAdminGroup) {
    this.canAdminGroup = canAdminGroup;
    return this;
  }

  /**
   * Get canAdminGroup
   * @return canAdminGroup
   */
  @javax.annotation.Nonnull
  public Boolean getCanAdminGroup() {
    return canAdminGroup;
  }

  public void setCanAdminGroup(Boolean canAdminGroup) {
    this.canAdminGroup = canAdminGroup;
  }


  public ListGroups200ResponseGroupsInner canEditGroup(Boolean canEditGroup) {
    this.canEditGroup = canEditGroup;
    return this;
  }

  /**
   * Get canEditGroup
   * @return canEditGroup
   */
  @javax.annotation.Nullable
  public Boolean getCanEditGroup() {
    return canEditGroup;
  }

  public void setCanEditGroup(Boolean canEditGroup) {
    this.canEditGroup = canEditGroup;
  }


  public ListGroups200ResponseGroupsInner canSeeMembers(Boolean canSeeMembers) {
    this.canSeeMembers = canSeeMembers;
    return this;
  }

  /**
   * Get canSeeMembers
   * @return canSeeMembers
   */
  @javax.annotation.Nonnull
  public Boolean getCanSeeMembers() {
    return canSeeMembers;
  }

  public void setCanSeeMembers(Boolean canSeeMembers) {
    this.canSeeMembers = canSeeMembers;
  }


  public ListGroups200ResponseGroupsInner defaultNotificationLevel(Integer defaultNotificationLevel) {
    this.defaultNotificationLevel = defaultNotificationLevel;
    return this;
  }

  /**
   * Get defaultNotificationLevel
   * @return defaultNotificationLevel
   */
  @javax.annotation.Nonnull
  public Integer getDefaultNotificationLevel() {
    return defaultNotificationLevel;
  }

  public void setDefaultNotificationLevel(Integer defaultNotificationLevel) {
    this.defaultNotificationLevel = defaultNotificationLevel;
  }


  public ListGroups200ResponseGroupsInner displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Get displayName
   * @return displayName
   */
  @javax.annotation.Nonnull
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public ListGroups200ResponseGroupsInner flairBgColor(String flairBgColor) {
    this.flairBgColor = flairBgColor;
    return this;
  }

  /**
   * Get flairBgColor
   * @return flairBgColor
   */
  @javax.annotation.Nullable
  public String getFlairBgColor() {
    return flairBgColor;
  }

  public void setFlairBgColor(String flairBgColor) {
    this.flairBgColor = flairBgColor;
  }


  public ListGroups200ResponseGroupsInner flairColor(String flairColor) {
    this.flairColor = flairColor;
    return this;
  }

  /**
   * Get flairColor
   * @return flairColor
   */
  @javax.annotation.Nullable
  public String getFlairColor() {
    return flairColor;
  }

  public void setFlairColor(String flairColor) {
    this.flairColor = flairColor;
  }


  public ListGroups200ResponseGroupsInner flairUrl(String flairUrl) {
    this.flairUrl = flairUrl;
    return this;
  }

  /**
   * Get flairUrl
   * @return flairUrl
   */
  @javax.annotation.Nullable
  public String getFlairUrl() {
    return flairUrl;
  }

  public void setFlairUrl(String flairUrl) {
    this.flairUrl = flairUrl;
  }


  public ListGroups200ResponseGroupsInner fullName(String fullName) {
    this.fullName = fullName;
    return this;
  }

  /**
   * Get fullName
   * @return fullName
   */
  @javax.annotation.Nullable
  public String getFullName() {
    return fullName;
  }

  public void setFullName(String fullName) {
    this.fullName = fullName;
  }


  public ListGroups200ResponseGroupsInner grantTrustLevel(String grantTrustLevel) {
    this.grantTrustLevel = grantTrustLevel;
    return this;
  }

  /**
   * Get grantTrustLevel
   * @return grantTrustLevel
   */
  @javax.annotation.Nullable
  public String getGrantTrustLevel() {
    return grantTrustLevel;
  }

  public void setGrantTrustLevel(String grantTrustLevel) {
    this.grantTrustLevel = grantTrustLevel;
  }


  public ListGroups200ResponseGroupsInner hasMessages(Boolean hasMessages) {
    this.hasMessages = hasMessages;
    return this;
  }

  /**
   * Get hasMessages
   * @return hasMessages
   */
  @javax.annotation.Nonnull
  public Boolean getHasMessages() {
    return hasMessages;
  }

  public void setHasMessages(Boolean hasMessages) {
    this.hasMessages = hasMessages;
  }


  public ListGroups200ResponseGroupsInner id(Integer id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nonnull
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }


  public ListGroups200ResponseGroupsInner incomingEmail(String incomingEmail) {
    this.incomingEmail = incomingEmail;
    return this;
  }

  /**
   * Get incomingEmail
   * @return incomingEmail
   */
  @javax.annotation.Nullable
  public String getIncomingEmail() {
    return incomingEmail;
  }

  public void setIncomingEmail(String incomingEmail) {
    this.incomingEmail = incomingEmail;
  }


  public ListGroups200ResponseGroupsInner isGroupOwner(Boolean isGroupOwner) {
    this.isGroupOwner = isGroupOwner;
    return this;
  }

  /**
   * Get isGroupOwner
   * @return isGroupOwner
   */
  @javax.annotation.Nullable
  public Boolean getIsGroupOwner() {
    return isGroupOwner;
  }

  public void setIsGroupOwner(Boolean isGroupOwner) {
    this.isGroupOwner = isGroupOwner;
  }


  public ListGroups200ResponseGroupsInner isGroupUser(Boolean isGroupUser) {
    this.isGroupUser = isGroupUser;
    return this;
  }

  /**
   * Get isGroupUser
   * @return isGroupUser
   */
  @javax.annotation.Nullable
  public Boolean getIsGroupUser() {
    return isGroupUser;
  }

  public void setIsGroupUser(Boolean isGroupUser) {
    this.isGroupUser = isGroupUser;
  }


  public ListGroups200ResponseGroupsInner membersVisibilityLevel(Integer membersVisibilityLevel) {
    this.membersVisibilityLevel = membersVisibilityLevel;
    return this;
  }

  /**
   * Get membersVisibilityLevel
   * @return membersVisibilityLevel
   */
  @javax.annotation.Nonnull
  public Integer getMembersVisibilityLevel() {
    return membersVisibilityLevel;
  }

  public void setMembersVisibilityLevel(Integer membersVisibilityLevel) {
    this.membersVisibilityLevel = membersVisibilityLevel;
  }


  public ListGroups200ResponseGroupsInner membershipRequestTemplate(String membershipRequestTemplate) {
    this.membershipRequestTemplate = membershipRequestTemplate;
    return this;
  }

  /**
   * Get membershipRequestTemplate
   * @return membershipRequestTemplate
   */
  @javax.annotation.Nullable
  public String getMembershipRequestTemplate() {
    return membershipRequestTemplate;
  }

  public void setMembershipRequestTemplate(String membershipRequestTemplate) {
    this.membershipRequestTemplate = membershipRequestTemplate;
  }


  public ListGroups200ResponseGroupsInner mentionableLevel(Integer mentionableLevel) {
    this.mentionableLevel = mentionableLevel;
    return this;
  }

  /**
   * Get mentionableLevel
   * @return mentionableLevel
   */
  @javax.annotation.Nonnull
  public Integer getMentionableLevel() {
    return mentionableLevel;
  }

  public void setMentionableLevel(Integer mentionableLevel) {
    this.mentionableLevel = mentionableLevel;
  }


  public ListGroups200ResponseGroupsInner messageableLevel(Integer messageableLevel) {
    this.messageableLevel = messageableLevel;
    return this;
  }

  /**
   * Get messageableLevel
   * @return messageableLevel
   */
  @javax.annotation.Nonnull
  public Integer getMessageableLevel() {
    return messageableLevel;
  }

  public void setMessageableLevel(Integer messageableLevel) {
    this.messageableLevel = messageableLevel;
  }


  public ListGroups200ResponseGroupsInner name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nonnull
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public ListGroups200ResponseGroupsInner primaryGroup(Boolean primaryGroup) {
    this.primaryGroup = primaryGroup;
    return this;
  }

  /**
   * Get primaryGroup
   * @return primaryGroup
   */
  @javax.annotation.Nonnull
  public Boolean getPrimaryGroup() {
    return primaryGroup;
  }

  public void setPrimaryGroup(Boolean primaryGroup) {
    this.primaryGroup = primaryGroup;
  }


  public ListGroups200ResponseGroupsInner publicAdmission(Boolean publicAdmission) {
    this.publicAdmission = publicAdmission;
    return this;
  }

  /**
   * Get publicAdmission
   * @return publicAdmission
   */
  @javax.annotation.Nonnull
  public Boolean getPublicAdmission() {
    return publicAdmission;
  }

  public void setPublicAdmission(Boolean publicAdmission) {
    this.publicAdmission = publicAdmission;
  }


  public ListGroups200ResponseGroupsInner publicExit(Boolean publicExit) {
    this.publicExit = publicExit;
    return this;
  }

  /**
   * Get publicExit
   * @return publicExit
   */
  @javax.annotation.Nonnull
  public Boolean getPublicExit() {
    return publicExit;
  }

  public void setPublicExit(Boolean publicExit) {
    this.publicExit = publicExit;
  }


  public ListGroups200ResponseGroupsInner publishReadState(Boolean publishReadState) {
    this.publishReadState = publishReadState;
    return this;
  }

  /**
   * Get publishReadState
   * @return publishReadState
   */
  @javax.annotation.Nonnull
  public Boolean getPublishReadState() {
    return publishReadState;
  }

  public void setPublishReadState(Boolean publishReadState) {
    this.publishReadState = publishReadState;
  }


  public ListGroups200ResponseGroupsInner title(String title) {
    this.title = title;
    return this;
  }

  /**
   * Get title
   * @return title
   */
  @javax.annotation.Nullable
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }


  public ListGroups200ResponseGroupsInner userCount(Integer userCount) {
    this.userCount = userCount;
    return this;
  }

  /**
   * Get userCount
   * @return userCount
   */
  @javax.annotation.Nonnull
  public Integer getUserCount() {
    return userCount;
  }

  public void setUserCount(Integer userCount) {
    this.userCount = userCount;
  }


  public ListGroups200ResponseGroupsInner visibilityLevel(Integer visibilityLevel) {
    this.visibilityLevel = visibilityLevel;
    return this;
  }

  /**
   * Get visibilityLevel
   * @return visibilityLevel
   */
  @javax.annotation.Nonnull
  public Integer getVisibilityLevel() {
    return visibilityLevel;
  }

  public void setVisibilityLevel(Integer visibilityLevel) {
    this.visibilityLevel = visibilityLevel;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the ListGroups200ResponseGroupsInner instance itself
   */
  public ListGroups200ResponseGroupsInner putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListGroups200ResponseGroupsInner listGroups200ResponseGroupsInner = (ListGroups200ResponseGroupsInner) o;
    return Objects.equals(this.allowMembershipRequests, listGroups200ResponseGroupsInner.allowMembershipRequests) &&
        Objects.equals(this.automatic, listGroups200ResponseGroupsInner.automatic) &&
        Objects.equals(this.bioCooked, listGroups200ResponseGroupsInner.bioCooked) &&
        Objects.equals(this.bioExcerpt, listGroups200ResponseGroupsInner.bioExcerpt) &&
        Objects.equals(this.bioRaw, listGroups200ResponseGroupsInner.bioRaw) &&
        Objects.equals(this.canAdminGroup, listGroups200ResponseGroupsInner.canAdminGroup) &&
        Objects.equals(this.canEditGroup, listGroups200ResponseGroupsInner.canEditGroup) &&
        Objects.equals(this.canSeeMembers, listGroups200ResponseGroupsInner.canSeeMembers) &&
        Objects.equals(this.defaultNotificationLevel, listGroups200ResponseGroupsInner.defaultNotificationLevel) &&
        Objects.equals(this.displayName, listGroups200ResponseGroupsInner.displayName) &&
        Objects.equals(this.flairBgColor, listGroups200ResponseGroupsInner.flairBgColor) &&
        Objects.equals(this.flairColor, listGroups200ResponseGroupsInner.flairColor) &&
        Objects.equals(this.flairUrl, listGroups200ResponseGroupsInner.flairUrl) &&
        Objects.equals(this.fullName, listGroups200ResponseGroupsInner.fullName) &&
        Objects.equals(this.grantTrustLevel, listGroups200ResponseGroupsInner.grantTrustLevel) &&
        Objects.equals(this.hasMessages, listGroups200ResponseGroupsInner.hasMessages) &&
        Objects.equals(this.id, listGroups200ResponseGroupsInner.id) &&
        Objects.equals(this.incomingEmail, listGroups200ResponseGroupsInner.incomingEmail) &&
        Objects.equals(this.isGroupOwner, listGroups200ResponseGroupsInner.isGroupOwner) &&
        Objects.equals(this.isGroupUser, listGroups200ResponseGroupsInner.isGroupUser) &&
        Objects.equals(this.membersVisibilityLevel, listGroups200ResponseGroupsInner.membersVisibilityLevel) &&
        Objects.equals(this.membershipRequestTemplate, listGroups200ResponseGroupsInner.membershipRequestTemplate) &&
        Objects.equals(this.mentionableLevel, listGroups200ResponseGroupsInner.mentionableLevel) &&
        Objects.equals(this.messageableLevel, listGroups200ResponseGroupsInner.messageableLevel) &&
        Objects.equals(this.name, listGroups200ResponseGroupsInner.name) &&
        Objects.equals(this.primaryGroup, listGroups200ResponseGroupsInner.primaryGroup) &&
        Objects.equals(this.publicAdmission, listGroups200ResponseGroupsInner.publicAdmission) &&
        Objects.equals(this.publicExit, listGroups200ResponseGroupsInner.publicExit) &&
        Objects.equals(this.publishReadState, listGroups200ResponseGroupsInner.publishReadState) &&
        Objects.equals(this.title, listGroups200ResponseGroupsInner.title) &&
        Objects.equals(this.userCount, listGroups200ResponseGroupsInner.userCount) &&
        Objects.equals(this.visibilityLevel, listGroups200ResponseGroupsInner.visibilityLevel)&&
        Objects.equals(this.additionalProperties, listGroups200ResponseGroupsInner.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(allowMembershipRequests, automatic, bioCooked, bioExcerpt, bioRaw, canAdminGroup, canEditGroup, canSeeMembers, defaultNotificationLevel, displayName, flairBgColor, flairColor, flairUrl, fullName, grantTrustLevel, hasMessages, id, incomingEmail, isGroupOwner, isGroupUser, membersVisibilityLevel, membershipRequestTemplate, mentionableLevel, messageableLevel, name, primaryGroup, publicAdmission, publicExit, publishReadState, title, userCount, visibilityLevel, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListGroups200ResponseGroupsInner {\n");
    sb.append("    allowMembershipRequests: ").append(toIndentedString(allowMembershipRequests)).append("\n");
    sb.append("    automatic: ").append(toIndentedString(automatic)).append("\n");
    sb.append("    bioCooked: ").append(toIndentedString(bioCooked)).append("\n");
    sb.append("    bioExcerpt: ").append(toIndentedString(bioExcerpt)).append("\n");
    sb.append("    bioRaw: ").append(toIndentedString(bioRaw)).append("\n");
    sb.append("    canAdminGroup: ").append(toIndentedString(canAdminGroup)).append("\n");
    sb.append("    canEditGroup: ").append(toIndentedString(canEditGroup)).append("\n");
    sb.append("    canSeeMembers: ").append(toIndentedString(canSeeMembers)).append("\n");
    sb.append("    defaultNotificationLevel: ").append(toIndentedString(defaultNotificationLevel)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    flairBgColor: ").append(toIndentedString(flairBgColor)).append("\n");
    sb.append("    flairColor: ").append(toIndentedString(flairColor)).append("\n");
    sb.append("    flairUrl: ").append(toIndentedString(flairUrl)).append("\n");
    sb.append("    fullName: ").append(toIndentedString(fullName)).append("\n");
    sb.append("    grantTrustLevel: ").append(toIndentedString(grantTrustLevel)).append("\n");
    sb.append("    hasMessages: ").append(toIndentedString(hasMessages)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    incomingEmail: ").append(toIndentedString(incomingEmail)).append("\n");
    sb.append("    isGroupOwner: ").append(toIndentedString(isGroupOwner)).append("\n");
    sb.append("    isGroupUser: ").append(toIndentedString(isGroupUser)).append("\n");
    sb.append("    membersVisibilityLevel: ").append(toIndentedString(membersVisibilityLevel)).append("\n");
    sb.append("    membershipRequestTemplate: ").append(toIndentedString(membershipRequestTemplate)).append("\n");
    sb.append("    mentionableLevel: ").append(toIndentedString(mentionableLevel)).append("\n");
    sb.append("    messageableLevel: ").append(toIndentedString(messageableLevel)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    primaryGroup: ").append(toIndentedString(primaryGroup)).append("\n");
    sb.append("    publicAdmission: ").append(toIndentedString(publicAdmission)).append("\n");
    sb.append("    publicExit: ").append(toIndentedString(publicExit)).append("\n");
    sb.append("    publishReadState: ").append(toIndentedString(publishReadState)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    userCount: ").append(toIndentedString(userCount)).append("\n");
    sb.append("    visibilityLevel: ").append(toIndentedString(visibilityLevel)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("allow_membership_requests");
    openapiFields.add("automatic");
    openapiFields.add("bio_cooked");
    openapiFields.add("bio_excerpt");
    openapiFields.add("bio_raw");
    openapiFields.add("can_admin_group");
    openapiFields.add("can_edit_group");
    openapiFields.add("can_see_members");
    openapiFields.add("default_notification_level");
    openapiFields.add("display_name");
    openapiFields.add("flair_bg_color");
    openapiFields.add("flair_color");
    openapiFields.add("flair_url");
    openapiFields.add("full_name");
    openapiFields.add("grant_trust_level");
    openapiFields.add("has_messages");
    openapiFields.add("id");
    openapiFields.add("incoming_email");
    openapiFields.add("is_group_owner");
    openapiFields.add("is_group_user");
    openapiFields.add("members_visibility_level");
    openapiFields.add("membership_request_template");
    openapiFields.add("mentionable_level");
    openapiFields.add("messageable_level");
    openapiFields.add("name");
    openapiFields.add("primary_group");
    openapiFields.add("public_admission");
    openapiFields.add("public_exit");
    openapiFields.add("publish_read_state");
    openapiFields.add("title");
    openapiFields.add("user_count");
    openapiFields.add("visibility_level");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("allow_membership_requests");
    openapiRequiredFields.add("automatic");
    openapiRequiredFields.add("bio_cooked");
    openapiRequiredFields.add("bio_excerpt");
    openapiRequiredFields.add("bio_raw");
    openapiRequiredFields.add("can_admin_group");
    openapiRequiredFields.add("can_see_members");
    openapiRequiredFields.add("default_notification_level");
    openapiRequiredFields.add("display_name");
    openapiRequiredFields.add("flair_bg_color");
    openapiRequiredFields.add("flair_color");
    openapiRequiredFields.add("flair_url");
    openapiRequiredFields.add("full_name");
    openapiRequiredFields.add("grant_trust_level");
    openapiRequiredFields.add("has_messages");
    openapiRequiredFields.add("id");
    openapiRequiredFields.add("incoming_email");
    openapiRequiredFields.add("members_visibility_level");
    openapiRequiredFields.add("membership_request_template");
    openapiRequiredFields.add("mentionable_level");
    openapiRequiredFields.add("messageable_level");
    openapiRequiredFields.add("name");
    openapiRequiredFields.add("primary_group");
    openapiRequiredFields.add("public_admission");
    openapiRequiredFields.add("public_exit");
    openapiRequiredFields.add("publish_read_state");
    openapiRequiredFields.add("title");
    openapiRequiredFields.add("user_count");
    openapiRequiredFields.add("visibility_level");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ListGroups200ResponseGroupsInner
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ListGroups200ResponseGroupsInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ListGroups200ResponseGroupsInner is not found in the empty JSON string", ListGroups200ResponseGroupsInner.openapiRequiredFields.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ListGroups200ResponseGroupsInner.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("bio_cooked") != null && !jsonObj.get("bio_cooked").isJsonNull()) && !jsonObj.get("bio_cooked").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bio_cooked` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bio_cooked").toString()));
      }
      if ((jsonObj.get("bio_excerpt") != null && !jsonObj.get("bio_excerpt").isJsonNull()) && !jsonObj.get("bio_excerpt").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bio_excerpt` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bio_excerpt").toString()));
      }
      if ((jsonObj.get("bio_raw") != null && !jsonObj.get("bio_raw").isJsonNull()) && !jsonObj.get("bio_raw").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bio_raw` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bio_raw").toString()));
      }
      if (!jsonObj.get("display_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `display_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("display_name").toString()));
      }
      if ((jsonObj.get("flair_bg_color") != null && !jsonObj.get("flair_bg_color").isJsonNull()) && !jsonObj.get("flair_bg_color").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `flair_bg_color` to be a primitive type in the JSON string but got `%s`", jsonObj.get("flair_bg_color").toString()));
      }
      if ((jsonObj.get("flair_color") != null && !jsonObj.get("flair_color").isJsonNull()) && !jsonObj.get("flair_color").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `flair_color` to be a primitive type in the JSON string but got `%s`", jsonObj.get("flair_color").toString()));
      }
      if ((jsonObj.get("flair_url") != null && !jsonObj.get("flair_url").isJsonNull()) && !jsonObj.get("flair_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `flair_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("flair_url").toString()));
      }
      if ((jsonObj.get("full_name") != null && !jsonObj.get("full_name").isJsonNull()) && !jsonObj.get("full_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `full_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("full_name").toString()));
      }
      if ((jsonObj.get("grant_trust_level") != null && !jsonObj.get("grant_trust_level").isJsonNull()) && !jsonObj.get("grant_trust_level").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `grant_trust_level` to be a primitive type in the JSON string but got `%s`", jsonObj.get("grant_trust_level").toString()));
      }
      if ((jsonObj.get("incoming_email") != null && !jsonObj.get("incoming_email").isJsonNull()) && !jsonObj.get("incoming_email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `incoming_email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("incoming_email").toString()));
      }
      if ((jsonObj.get("membership_request_template") != null && !jsonObj.get("membership_request_template").isJsonNull()) && !jsonObj.get("membership_request_template").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `membership_request_template` to be a primitive type in the JSON string but got `%s`", jsonObj.get("membership_request_template").toString()));
      }
      if (!jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("title") != null && !jsonObj.get("title").isJsonNull()) && !jsonObj.get("title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("title").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ListGroups200ResponseGroupsInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ListGroups200ResponseGroupsInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ListGroups200ResponseGroupsInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ListGroups200ResponseGroupsInner.class));

       return (TypeAdapter<T>) new TypeAdapter<ListGroups200ResponseGroupsInner>() {
           @Override
           public void write(JsonWriter out, ListGroups200ResponseGroupsInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additional properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   JsonElement jsonElement = gson.toJsonTree(entry.getValue());
                   if (jsonElement.isJsonArray()) {
                     obj.add(entry.getKey(), jsonElement.getAsJsonArray());
                   } else {
                     obj.add(entry.getKey(), jsonElement.getAsJsonObject());
                   }
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public ListGroups200ResponseGroupsInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             JsonObject jsonObj = jsonElement.getAsJsonObject();
             // store additional fields in the deserialized instance
             ListGroups200ResponseGroupsInner instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ListGroups200ResponseGroupsInner given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ListGroups200ResponseGroupsInner
   * @throws IOException if the JSON string is invalid with respect to ListGroups200ResponseGroupsInner
   */
  public static ListGroups200ResponseGroupsInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ListGroups200ResponseGroupsInner.class);
  }

  /**
   * Convert an instance of ListGroups200ResponseGroupsInner to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

