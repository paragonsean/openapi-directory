/*
 * Discourse API Documentation
 * This page contains the documentation on how to use Discourse through API calls.  > Note: For any endpoints not listed you can follow the [reverse engineer the Discourse API](https://meta.discourse.org/t/-/20576) guide to figure out how to use an API endpoint.  ### Request Content-Type  The Content-Type for POST and PUT requests can be set to `application/x-www-form-urlencoded`, `multipart/form-data`, or `application/json`.  ### Endpoint Names and Response Content-Type  Most API endpoints provide the same content as their HTML counterparts. For example the URL `/categories` serves a list of categories, the `/categories.json` API provides the same information in JSON format.  Instead of sending API requests to `/categories.json` you may also send them to `/categories` and add an `Accept: application/json` header to the request to get the JSON response. Sending requests with the `Accept` header is necessary if you want to use URLs for related endpoints returned by the API, such as pagination URLs. These URLs are returned without the `.json` prefix so you need to add the header in order to get the correct response format.  ### Authentication  Some endpoints do not require any authentication, pretty much anything else will require you to be authenticated.  To become authenticated you will need to create an API Key from the admin panel.  Once you have your API Key you can pass it in along with your API Username as an HTTP header like this:  ``` curl -X GET \"http://127.0.0.1:3000/admin/users/list/active.json\" \\ -H \"Api-Key: 714552c6148e1617aeab526d0606184b94a80ec048fc09894ff1a72b740c5f19\" \\ -H \"Api-Username: system\" ```  and this is how POST requests will look:  ``` curl -X POST \"http://127.0.0.1:3000/categories\" \\ -H \"Content-Type: multipart/form-data;\" \\ -H \"Api-Key: 714552c6148e1617aeab526d0606184b94a80ec048fc09894ff1a72b740c5f19\" \\ -H \"Api-Username: system\" \\ -F \"name=89853c20-4409-e91a-a8ea-f6cdff96aaaa\" \\ -F \"color=49d9e9\" \\ -F \"text_color=f0fcfd\" ```  ### Boolean values  If an endpoint accepts a boolean be sure to specify it as a lowercase `true` or `false` value unless noted otherwise. 
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.AdminGetUser200ResponseTl3RequirementsPenaltyCounts;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * AdminGetUser200ResponseTl3Requirements
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:12:34.324076-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AdminGetUser200ResponseTl3Requirements {
  public static final String SERIALIZED_NAME_DAYS_VISITED = "days_visited";
  @SerializedName(SERIALIZED_NAME_DAYS_VISITED)
  private Integer daysVisited;

  public static final String SERIALIZED_NAME_MAX_FLAGGED_BY_USERS = "max_flagged_by_users";
  @SerializedName(SERIALIZED_NAME_MAX_FLAGGED_BY_USERS)
  private Integer maxFlaggedByUsers;

  public static final String SERIALIZED_NAME_MAX_FLAGGED_POSTS = "max_flagged_posts";
  @SerializedName(SERIALIZED_NAME_MAX_FLAGGED_POSTS)
  private Integer maxFlaggedPosts;

  public static final String SERIALIZED_NAME_MIN_DAYS_VISITED = "min_days_visited";
  @SerializedName(SERIALIZED_NAME_MIN_DAYS_VISITED)
  private Integer minDaysVisited;

  public static final String SERIALIZED_NAME_MIN_LIKES_GIVEN = "min_likes_given";
  @SerializedName(SERIALIZED_NAME_MIN_LIKES_GIVEN)
  private Integer minLikesGiven;

  public static final String SERIALIZED_NAME_MIN_LIKES_RECEIVED = "min_likes_received";
  @SerializedName(SERIALIZED_NAME_MIN_LIKES_RECEIVED)
  private Integer minLikesReceived;

  public static final String SERIALIZED_NAME_MIN_LIKES_RECEIVED_DAYS = "min_likes_received_days";
  @SerializedName(SERIALIZED_NAME_MIN_LIKES_RECEIVED_DAYS)
  private Integer minLikesReceivedDays;

  public static final String SERIALIZED_NAME_MIN_LIKES_RECEIVED_USERS = "min_likes_received_users";
  @SerializedName(SERIALIZED_NAME_MIN_LIKES_RECEIVED_USERS)
  private Integer minLikesReceivedUsers;

  public static final String SERIALIZED_NAME_MIN_POSTS_READ = "min_posts_read";
  @SerializedName(SERIALIZED_NAME_MIN_POSTS_READ)
  private Integer minPostsRead;

  public static final String SERIALIZED_NAME_MIN_POSTS_READ_ALL_TIME = "min_posts_read_all_time";
  @SerializedName(SERIALIZED_NAME_MIN_POSTS_READ_ALL_TIME)
  private Integer minPostsReadAllTime;

  public static final String SERIALIZED_NAME_MIN_TOPICS_REPLIED_TO = "min_topics_replied_to";
  @SerializedName(SERIALIZED_NAME_MIN_TOPICS_REPLIED_TO)
  private Integer minTopicsRepliedTo;

  public static final String SERIALIZED_NAME_MIN_TOPICS_VIEWED = "min_topics_viewed";
  @SerializedName(SERIALIZED_NAME_MIN_TOPICS_VIEWED)
  private Integer minTopicsViewed;

  public static final String SERIALIZED_NAME_MIN_TOPICS_VIEWED_ALL_TIME = "min_topics_viewed_all_time";
  @SerializedName(SERIALIZED_NAME_MIN_TOPICS_VIEWED_ALL_TIME)
  private Integer minTopicsViewedAllTime;

  public static final String SERIALIZED_NAME_NUM_FLAGGED_BY_USERS = "num_flagged_by_users";
  @SerializedName(SERIALIZED_NAME_NUM_FLAGGED_BY_USERS)
  private Integer numFlaggedByUsers;

  public static final String SERIALIZED_NAME_NUM_FLAGGED_POSTS = "num_flagged_posts";
  @SerializedName(SERIALIZED_NAME_NUM_FLAGGED_POSTS)
  private Integer numFlaggedPosts;

  public static final String SERIALIZED_NAME_NUM_LIKES_GIVEN = "num_likes_given";
  @SerializedName(SERIALIZED_NAME_NUM_LIKES_GIVEN)
  private Integer numLikesGiven;

  public static final String SERIALIZED_NAME_NUM_LIKES_RECEIVED = "num_likes_received";
  @SerializedName(SERIALIZED_NAME_NUM_LIKES_RECEIVED)
  private Integer numLikesReceived;

  public static final String SERIALIZED_NAME_NUM_LIKES_RECEIVED_DAYS = "num_likes_received_days";
  @SerializedName(SERIALIZED_NAME_NUM_LIKES_RECEIVED_DAYS)
  private Integer numLikesReceivedDays;

  public static final String SERIALIZED_NAME_NUM_LIKES_RECEIVED_USERS = "num_likes_received_users";
  @SerializedName(SERIALIZED_NAME_NUM_LIKES_RECEIVED_USERS)
  private Integer numLikesReceivedUsers;

  public static final String SERIALIZED_NAME_NUM_TOPICS_REPLIED_TO = "num_topics_replied_to";
  @SerializedName(SERIALIZED_NAME_NUM_TOPICS_REPLIED_TO)
  private Integer numTopicsRepliedTo;

  public static final String SERIALIZED_NAME_ON_GRACE_PERIOD = "on_grace_period";
  @SerializedName(SERIALIZED_NAME_ON_GRACE_PERIOD)
  private Boolean onGracePeriod;

  public static final String SERIALIZED_NAME_PENALTY_COUNTS = "penalty_counts";
  @SerializedName(SERIALIZED_NAME_PENALTY_COUNTS)
  private AdminGetUser200ResponseTl3RequirementsPenaltyCounts penaltyCounts;

  public static final String SERIALIZED_NAME_POSTS_READ = "posts_read";
  @SerializedName(SERIALIZED_NAME_POSTS_READ)
  private Integer postsRead;

  public static final String SERIALIZED_NAME_POSTS_READ_ALL_TIME = "posts_read_all_time";
  @SerializedName(SERIALIZED_NAME_POSTS_READ_ALL_TIME)
  private Integer postsReadAllTime;

  public static final String SERIALIZED_NAME_REQUIREMENTS_LOST = "requirements_lost";
  @SerializedName(SERIALIZED_NAME_REQUIREMENTS_LOST)
  private Boolean requirementsLost;

  public static final String SERIALIZED_NAME_REQUIREMENTS_MET = "requirements_met";
  @SerializedName(SERIALIZED_NAME_REQUIREMENTS_MET)
  private Boolean requirementsMet;

  public static final String SERIALIZED_NAME_TIME_PERIOD = "time_period";
  @SerializedName(SERIALIZED_NAME_TIME_PERIOD)
  private Integer timePeriod;

  public static final String SERIALIZED_NAME_TOPICS_VIEWED = "topics_viewed";
  @SerializedName(SERIALIZED_NAME_TOPICS_VIEWED)
  private Integer topicsViewed;

  public static final String SERIALIZED_NAME_TOPICS_VIEWED_ALL_TIME = "topics_viewed_all_time";
  @SerializedName(SERIALIZED_NAME_TOPICS_VIEWED_ALL_TIME)
  private Integer topicsViewedAllTime;

  public static final String SERIALIZED_NAME_TRUST_LEVEL_LOCKED = "trust_level_locked";
  @SerializedName(SERIALIZED_NAME_TRUST_LEVEL_LOCKED)
  private Boolean trustLevelLocked;

  public AdminGetUser200ResponseTl3Requirements() {
  }

  public AdminGetUser200ResponseTl3Requirements daysVisited(Integer daysVisited) {
    this.daysVisited = daysVisited;
    return this;
  }

  /**
   * Get daysVisited
   * @return daysVisited
   */
  @javax.annotation.Nonnull
  public Integer getDaysVisited() {
    return daysVisited;
  }

  public void setDaysVisited(Integer daysVisited) {
    this.daysVisited = daysVisited;
  }


  public AdminGetUser200ResponseTl3Requirements maxFlaggedByUsers(Integer maxFlaggedByUsers) {
    this.maxFlaggedByUsers = maxFlaggedByUsers;
    return this;
  }

  /**
   * Get maxFlaggedByUsers
   * @return maxFlaggedByUsers
   */
  @javax.annotation.Nonnull
  public Integer getMaxFlaggedByUsers() {
    return maxFlaggedByUsers;
  }

  public void setMaxFlaggedByUsers(Integer maxFlaggedByUsers) {
    this.maxFlaggedByUsers = maxFlaggedByUsers;
  }


  public AdminGetUser200ResponseTl3Requirements maxFlaggedPosts(Integer maxFlaggedPosts) {
    this.maxFlaggedPosts = maxFlaggedPosts;
    return this;
  }

  /**
   * Get maxFlaggedPosts
   * @return maxFlaggedPosts
   */
  @javax.annotation.Nonnull
  public Integer getMaxFlaggedPosts() {
    return maxFlaggedPosts;
  }

  public void setMaxFlaggedPosts(Integer maxFlaggedPosts) {
    this.maxFlaggedPosts = maxFlaggedPosts;
  }


  public AdminGetUser200ResponseTl3Requirements minDaysVisited(Integer minDaysVisited) {
    this.minDaysVisited = minDaysVisited;
    return this;
  }

  /**
   * Get minDaysVisited
   * @return minDaysVisited
   */
  @javax.annotation.Nonnull
  public Integer getMinDaysVisited() {
    return minDaysVisited;
  }

  public void setMinDaysVisited(Integer minDaysVisited) {
    this.minDaysVisited = minDaysVisited;
  }


  public AdminGetUser200ResponseTl3Requirements minLikesGiven(Integer minLikesGiven) {
    this.minLikesGiven = minLikesGiven;
    return this;
  }

  /**
   * Get minLikesGiven
   * @return minLikesGiven
   */
  @javax.annotation.Nonnull
  public Integer getMinLikesGiven() {
    return minLikesGiven;
  }

  public void setMinLikesGiven(Integer minLikesGiven) {
    this.minLikesGiven = minLikesGiven;
  }


  public AdminGetUser200ResponseTl3Requirements minLikesReceived(Integer minLikesReceived) {
    this.minLikesReceived = minLikesReceived;
    return this;
  }

  /**
   * Get minLikesReceived
   * @return minLikesReceived
   */
  @javax.annotation.Nonnull
  public Integer getMinLikesReceived() {
    return minLikesReceived;
  }

  public void setMinLikesReceived(Integer minLikesReceived) {
    this.minLikesReceived = minLikesReceived;
  }


  public AdminGetUser200ResponseTl3Requirements minLikesReceivedDays(Integer minLikesReceivedDays) {
    this.minLikesReceivedDays = minLikesReceivedDays;
    return this;
  }

  /**
   * Get minLikesReceivedDays
   * @return minLikesReceivedDays
   */
  @javax.annotation.Nonnull
  public Integer getMinLikesReceivedDays() {
    return minLikesReceivedDays;
  }

  public void setMinLikesReceivedDays(Integer minLikesReceivedDays) {
    this.minLikesReceivedDays = minLikesReceivedDays;
  }


  public AdminGetUser200ResponseTl3Requirements minLikesReceivedUsers(Integer minLikesReceivedUsers) {
    this.minLikesReceivedUsers = minLikesReceivedUsers;
    return this;
  }

  /**
   * Get minLikesReceivedUsers
   * @return minLikesReceivedUsers
   */
  @javax.annotation.Nonnull
  public Integer getMinLikesReceivedUsers() {
    return minLikesReceivedUsers;
  }

  public void setMinLikesReceivedUsers(Integer minLikesReceivedUsers) {
    this.minLikesReceivedUsers = minLikesReceivedUsers;
  }


  public AdminGetUser200ResponseTl3Requirements minPostsRead(Integer minPostsRead) {
    this.minPostsRead = minPostsRead;
    return this;
  }

  /**
   * Get minPostsRead
   * @return minPostsRead
   */
  @javax.annotation.Nonnull
  public Integer getMinPostsRead() {
    return minPostsRead;
  }

  public void setMinPostsRead(Integer minPostsRead) {
    this.minPostsRead = minPostsRead;
  }


  public AdminGetUser200ResponseTl3Requirements minPostsReadAllTime(Integer minPostsReadAllTime) {
    this.minPostsReadAllTime = minPostsReadAllTime;
    return this;
  }

  /**
   * Get minPostsReadAllTime
   * @return minPostsReadAllTime
   */
  @javax.annotation.Nonnull
  public Integer getMinPostsReadAllTime() {
    return minPostsReadAllTime;
  }

  public void setMinPostsReadAllTime(Integer minPostsReadAllTime) {
    this.minPostsReadAllTime = minPostsReadAllTime;
  }


  public AdminGetUser200ResponseTl3Requirements minTopicsRepliedTo(Integer minTopicsRepliedTo) {
    this.minTopicsRepliedTo = minTopicsRepliedTo;
    return this;
  }

  /**
   * Get minTopicsRepliedTo
   * @return minTopicsRepliedTo
   */
  @javax.annotation.Nonnull
  public Integer getMinTopicsRepliedTo() {
    return minTopicsRepliedTo;
  }

  public void setMinTopicsRepliedTo(Integer minTopicsRepliedTo) {
    this.minTopicsRepliedTo = minTopicsRepliedTo;
  }


  public AdminGetUser200ResponseTl3Requirements minTopicsViewed(Integer minTopicsViewed) {
    this.minTopicsViewed = minTopicsViewed;
    return this;
  }

  /**
   * Get minTopicsViewed
   * @return minTopicsViewed
   */
  @javax.annotation.Nonnull
  public Integer getMinTopicsViewed() {
    return minTopicsViewed;
  }

  public void setMinTopicsViewed(Integer minTopicsViewed) {
    this.minTopicsViewed = minTopicsViewed;
  }


  public AdminGetUser200ResponseTl3Requirements minTopicsViewedAllTime(Integer minTopicsViewedAllTime) {
    this.minTopicsViewedAllTime = minTopicsViewedAllTime;
    return this;
  }

  /**
   * Get minTopicsViewedAllTime
   * @return minTopicsViewedAllTime
   */
  @javax.annotation.Nonnull
  public Integer getMinTopicsViewedAllTime() {
    return minTopicsViewedAllTime;
  }

  public void setMinTopicsViewedAllTime(Integer minTopicsViewedAllTime) {
    this.minTopicsViewedAllTime = minTopicsViewedAllTime;
  }


  public AdminGetUser200ResponseTl3Requirements numFlaggedByUsers(Integer numFlaggedByUsers) {
    this.numFlaggedByUsers = numFlaggedByUsers;
    return this;
  }

  /**
   * Get numFlaggedByUsers
   * @return numFlaggedByUsers
   */
  @javax.annotation.Nonnull
  public Integer getNumFlaggedByUsers() {
    return numFlaggedByUsers;
  }

  public void setNumFlaggedByUsers(Integer numFlaggedByUsers) {
    this.numFlaggedByUsers = numFlaggedByUsers;
  }


  public AdminGetUser200ResponseTl3Requirements numFlaggedPosts(Integer numFlaggedPosts) {
    this.numFlaggedPosts = numFlaggedPosts;
    return this;
  }

  /**
   * Get numFlaggedPosts
   * @return numFlaggedPosts
   */
  @javax.annotation.Nonnull
  public Integer getNumFlaggedPosts() {
    return numFlaggedPosts;
  }

  public void setNumFlaggedPosts(Integer numFlaggedPosts) {
    this.numFlaggedPosts = numFlaggedPosts;
  }


  public AdminGetUser200ResponseTl3Requirements numLikesGiven(Integer numLikesGiven) {
    this.numLikesGiven = numLikesGiven;
    return this;
  }

  /**
   * Get numLikesGiven
   * @return numLikesGiven
   */
  @javax.annotation.Nonnull
  public Integer getNumLikesGiven() {
    return numLikesGiven;
  }

  public void setNumLikesGiven(Integer numLikesGiven) {
    this.numLikesGiven = numLikesGiven;
  }


  public AdminGetUser200ResponseTl3Requirements numLikesReceived(Integer numLikesReceived) {
    this.numLikesReceived = numLikesReceived;
    return this;
  }

  /**
   * Get numLikesReceived
   * @return numLikesReceived
   */
  @javax.annotation.Nonnull
  public Integer getNumLikesReceived() {
    return numLikesReceived;
  }

  public void setNumLikesReceived(Integer numLikesReceived) {
    this.numLikesReceived = numLikesReceived;
  }


  public AdminGetUser200ResponseTl3Requirements numLikesReceivedDays(Integer numLikesReceivedDays) {
    this.numLikesReceivedDays = numLikesReceivedDays;
    return this;
  }

  /**
   * Get numLikesReceivedDays
   * @return numLikesReceivedDays
   */
  @javax.annotation.Nonnull
  public Integer getNumLikesReceivedDays() {
    return numLikesReceivedDays;
  }

  public void setNumLikesReceivedDays(Integer numLikesReceivedDays) {
    this.numLikesReceivedDays = numLikesReceivedDays;
  }


  public AdminGetUser200ResponseTl3Requirements numLikesReceivedUsers(Integer numLikesReceivedUsers) {
    this.numLikesReceivedUsers = numLikesReceivedUsers;
    return this;
  }

  /**
   * Get numLikesReceivedUsers
   * @return numLikesReceivedUsers
   */
  @javax.annotation.Nonnull
  public Integer getNumLikesReceivedUsers() {
    return numLikesReceivedUsers;
  }

  public void setNumLikesReceivedUsers(Integer numLikesReceivedUsers) {
    this.numLikesReceivedUsers = numLikesReceivedUsers;
  }


  public AdminGetUser200ResponseTl3Requirements numTopicsRepliedTo(Integer numTopicsRepliedTo) {
    this.numTopicsRepliedTo = numTopicsRepliedTo;
    return this;
  }

  /**
   * Get numTopicsRepliedTo
   * @return numTopicsRepliedTo
   */
  @javax.annotation.Nonnull
  public Integer getNumTopicsRepliedTo() {
    return numTopicsRepliedTo;
  }

  public void setNumTopicsRepliedTo(Integer numTopicsRepliedTo) {
    this.numTopicsRepliedTo = numTopicsRepliedTo;
  }


  public AdminGetUser200ResponseTl3Requirements onGracePeriod(Boolean onGracePeriod) {
    this.onGracePeriod = onGracePeriod;
    return this;
  }

  /**
   * Get onGracePeriod
   * @return onGracePeriod
   */
  @javax.annotation.Nonnull
  public Boolean getOnGracePeriod() {
    return onGracePeriod;
  }

  public void setOnGracePeriod(Boolean onGracePeriod) {
    this.onGracePeriod = onGracePeriod;
  }


  public AdminGetUser200ResponseTl3Requirements penaltyCounts(AdminGetUser200ResponseTl3RequirementsPenaltyCounts penaltyCounts) {
    this.penaltyCounts = penaltyCounts;
    return this;
  }

  /**
   * Get penaltyCounts
   * @return penaltyCounts
   */
  @javax.annotation.Nonnull
  public AdminGetUser200ResponseTl3RequirementsPenaltyCounts getPenaltyCounts() {
    return penaltyCounts;
  }

  public void setPenaltyCounts(AdminGetUser200ResponseTl3RequirementsPenaltyCounts penaltyCounts) {
    this.penaltyCounts = penaltyCounts;
  }


  public AdminGetUser200ResponseTl3Requirements postsRead(Integer postsRead) {
    this.postsRead = postsRead;
    return this;
  }

  /**
   * Get postsRead
   * @return postsRead
   */
  @javax.annotation.Nonnull
  public Integer getPostsRead() {
    return postsRead;
  }

  public void setPostsRead(Integer postsRead) {
    this.postsRead = postsRead;
  }


  public AdminGetUser200ResponseTl3Requirements postsReadAllTime(Integer postsReadAllTime) {
    this.postsReadAllTime = postsReadAllTime;
    return this;
  }

  /**
   * Get postsReadAllTime
   * @return postsReadAllTime
   */
  @javax.annotation.Nonnull
  public Integer getPostsReadAllTime() {
    return postsReadAllTime;
  }

  public void setPostsReadAllTime(Integer postsReadAllTime) {
    this.postsReadAllTime = postsReadAllTime;
  }


  public AdminGetUser200ResponseTl3Requirements requirementsLost(Boolean requirementsLost) {
    this.requirementsLost = requirementsLost;
    return this;
  }

  /**
   * Get requirementsLost
   * @return requirementsLost
   */
  @javax.annotation.Nonnull
  public Boolean getRequirementsLost() {
    return requirementsLost;
  }

  public void setRequirementsLost(Boolean requirementsLost) {
    this.requirementsLost = requirementsLost;
  }


  public AdminGetUser200ResponseTl3Requirements requirementsMet(Boolean requirementsMet) {
    this.requirementsMet = requirementsMet;
    return this;
  }

  /**
   * Get requirementsMet
   * @return requirementsMet
   */
  @javax.annotation.Nonnull
  public Boolean getRequirementsMet() {
    return requirementsMet;
  }

  public void setRequirementsMet(Boolean requirementsMet) {
    this.requirementsMet = requirementsMet;
  }


  public AdminGetUser200ResponseTl3Requirements timePeriod(Integer timePeriod) {
    this.timePeriod = timePeriod;
    return this;
  }

  /**
   * Get timePeriod
   * @return timePeriod
   */
  @javax.annotation.Nonnull
  public Integer getTimePeriod() {
    return timePeriod;
  }

  public void setTimePeriod(Integer timePeriod) {
    this.timePeriod = timePeriod;
  }


  public AdminGetUser200ResponseTl3Requirements topicsViewed(Integer topicsViewed) {
    this.topicsViewed = topicsViewed;
    return this;
  }

  /**
   * Get topicsViewed
   * @return topicsViewed
   */
  @javax.annotation.Nonnull
  public Integer getTopicsViewed() {
    return topicsViewed;
  }

  public void setTopicsViewed(Integer topicsViewed) {
    this.topicsViewed = topicsViewed;
  }


  public AdminGetUser200ResponseTl3Requirements topicsViewedAllTime(Integer topicsViewedAllTime) {
    this.topicsViewedAllTime = topicsViewedAllTime;
    return this;
  }

  /**
   * Get topicsViewedAllTime
   * @return topicsViewedAllTime
   */
  @javax.annotation.Nonnull
  public Integer getTopicsViewedAllTime() {
    return topicsViewedAllTime;
  }

  public void setTopicsViewedAllTime(Integer topicsViewedAllTime) {
    this.topicsViewedAllTime = topicsViewedAllTime;
  }


  public AdminGetUser200ResponseTl3Requirements trustLevelLocked(Boolean trustLevelLocked) {
    this.trustLevelLocked = trustLevelLocked;
    return this;
  }

  /**
   * Get trustLevelLocked
   * @return trustLevelLocked
   */
  @javax.annotation.Nonnull
  public Boolean getTrustLevelLocked() {
    return trustLevelLocked;
  }

  public void setTrustLevelLocked(Boolean trustLevelLocked) {
    this.trustLevelLocked = trustLevelLocked;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the AdminGetUser200ResponseTl3Requirements instance itself
   */
  public AdminGetUser200ResponseTl3Requirements putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AdminGetUser200ResponseTl3Requirements adminGetUser200ResponseTl3Requirements = (AdminGetUser200ResponseTl3Requirements) o;
    return Objects.equals(this.daysVisited, adminGetUser200ResponseTl3Requirements.daysVisited) &&
        Objects.equals(this.maxFlaggedByUsers, adminGetUser200ResponseTl3Requirements.maxFlaggedByUsers) &&
        Objects.equals(this.maxFlaggedPosts, adminGetUser200ResponseTl3Requirements.maxFlaggedPosts) &&
        Objects.equals(this.minDaysVisited, adminGetUser200ResponseTl3Requirements.minDaysVisited) &&
        Objects.equals(this.minLikesGiven, adminGetUser200ResponseTl3Requirements.minLikesGiven) &&
        Objects.equals(this.minLikesReceived, adminGetUser200ResponseTl3Requirements.minLikesReceived) &&
        Objects.equals(this.minLikesReceivedDays, adminGetUser200ResponseTl3Requirements.minLikesReceivedDays) &&
        Objects.equals(this.minLikesReceivedUsers, adminGetUser200ResponseTl3Requirements.minLikesReceivedUsers) &&
        Objects.equals(this.minPostsRead, adminGetUser200ResponseTl3Requirements.minPostsRead) &&
        Objects.equals(this.minPostsReadAllTime, adminGetUser200ResponseTl3Requirements.minPostsReadAllTime) &&
        Objects.equals(this.minTopicsRepliedTo, adminGetUser200ResponseTl3Requirements.minTopicsRepliedTo) &&
        Objects.equals(this.minTopicsViewed, adminGetUser200ResponseTl3Requirements.minTopicsViewed) &&
        Objects.equals(this.minTopicsViewedAllTime, adminGetUser200ResponseTl3Requirements.minTopicsViewedAllTime) &&
        Objects.equals(this.numFlaggedByUsers, adminGetUser200ResponseTl3Requirements.numFlaggedByUsers) &&
        Objects.equals(this.numFlaggedPosts, adminGetUser200ResponseTl3Requirements.numFlaggedPosts) &&
        Objects.equals(this.numLikesGiven, adminGetUser200ResponseTl3Requirements.numLikesGiven) &&
        Objects.equals(this.numLikesReceived, adminGetUser200ResponseTl3Requirements.numLikesReceived) &&
        Objects.equals(this.numLikesReceivedDays, adminGetUser200ResponseTl3Requirements.numLikesReceivedDays) &&
        Objects.equals(this.numLikesReceivedUsers, adminGetUser200ResponseTl3Requirements.numLikesReceivedUsers) &&
        Objects.equals(this.numTopicsRepliedTo, adminGetUser200ResponseTl3Requirements.numTopicsRepliedTo) &&
        Objects.equals(this.onGracePeriod, adminGetUser200ResponseTl3Requirements.onGracePeriod) &&
        Objects.equals(this.penaltyCounts, adminGetUser200ResponseTl3Requirements.penaltyCounts) &&
        Objects.equals(this.postsRead, adminGetUser200ResponseTl3Requirements.postsRead) &&
        Objects.equals(this.postsReadAllTime, adminGetUser200ResponseTl3Requirements.postsReadAllTime) &&
        Objects.equals(this.requirementsLost, adminGetUser200ResponseTl3Requirements.requirementsLost) &&
        Objects.equals(this.requirementsMet, adminGetUser200ResponseTl3Requirements.requirementsMet) &&
        Objects.equals(this.timePeriod, adminGetUser200ResponseTl3Requirements.timePeriod) &&
        Objects.equals(this.topicsViewed, adminGetUser200ResponseTl3Requirements.topicsViewed) &&
        Objects.equals(this.topicsViewedAllTime, adminGetUser200ResponseTl3Requirements.topicsViewedAllTime) &&
        Objects.equals(this.trustLevelLocked, adminGetUser200ResponseTl3Requirements.trustLevelLocked)&&
        Objects.equals(this.additionalProperties, adminGetUser200ResponseTl3Requirements.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(daysVisited, maxFlaggedByUsers, maxFlaggedPosts, minDaysVisited, minLikesGiven, minLikesReceived, minLikesReceivedDays, minLikesReceivedUsers, minPostsRead, minPostsReadAllTime, minTopicsRepliedTo, minTopicsViewed, minTopicsViewedAllTime, numFlaggedByUsers, numFlaggedPosts, numLikesGiven, numLikesReceived, numLikesReceivedDays, numLikesReceivedUsers, numTopicsRepliedTo, onGracePeriod, penaltyCounts, postsRead, postsReadAllTime, requirementsLost, requirementsMet, timePeriod, topicsViewed, topicsViewedAllTime, trustLevelLocked, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AdminGetUser200ResponseTl3Requirements {\n");
    sb.append("    daysVisited: ").append(toIndentedString(daysVisited)).append("\n");
    sb.append("    maxFlaggedByUsers: ").append(toIndentedString(maxFlaggedByUsers)).append("\n");
    sb.append("    maxFlaggedPosts: ").append(toIndentedString(maxFlaggedPosts)).append("\n");
    sb.append("    minDaysVisited: ").append(toIndentedString(minDaysVisited)).append("\n");
    sb.append("    minLikesGiven: ").append(toIndentedString(minLikesGiven)).append("\n");
    sb.append("    minLikesReceived: ").append(toIndentedString(minLikesReceived)).append("\n");
    sb.append("    minLikesReceivedDays: ").append(toIndentedString(minLikesReceivedDays)).append("\n");
    sb.append("    minLikesReceivedUsers: ").append(toIndentedString(minLikesReceivedUsers)).append("\n");
    sb.append("    minPostsRead: ").append(toIndentedString(minPostsRead)).append("\n");
    sb.append("    minPostsReadAllTime: ").append(toIndentedString(minPostsReadAllTime)).append("\n");
    sb.append("    minTopicsRepliedTo: ").append(toIndentedString(minTopicsRepliedTo)).append("\n");
    sb.append("    minTopicsViewed: ").append(toIndentedString(minTopicsViewed)).append("\n");
    sb.append("    minTopicsViewedAllTime: ").append(toIndentedString(minTopicsViewedAllTime)).append("\n");
    sb.append("    numFlaggedByUsers: ").append(toIndentedString(numFlaggedByUsers)).append("\n");
    sb.append("    numFlaggedPosts: ").append(toIndentedString(numFlaggedPosts)).append("\n");
    sb.append("    numLikesGiven: ").append(toIndentedString(numLikesGiven)).append("\n");
    sb.append("    numLikesReceived: ").append(toIndentedString(numLikesReceived)).append("\n");
    sb.append("    numLikesReceivedDays: ").append(toIndentedString(numLikesReceivedDays)).append("\n");
    sb.append("    numLikesReceivedUsers: ").append(toIndentedString(numLikesReceivedUsers)).append("\n");
    sb.append("    numTopicsRepliedTo: ").append(toIndentedString(numTopicsRepliedTo)).append("\n");
    sb.append("    onGracePeriod: ").append(toIndentedString(onGracePeriod)).append("\n");
    sb.append("    penaltyCounts: ").append(toIndentedString(penaltyCounts)).append("\n");
    sb.append("    postsRead: ").append(toIndentedString(postsRead)).append("\n");
    sb.append("    postsReadAllTime: ").append(toIndentedString(postsReadAllTime)).append("\n");
    sb.append("    requirementsLost: ").append(toIndentedString(requirementsLost)).append("\n");
    sb.append("    requirementsMet: ").append(toIndentedString(requirementsMet)).append("\n");
    sb.append("    timePeriod: ").append(toIndentedString(timePeriod)).append("\n");
    sb.append("    topicsViewed: ").append(toIndentedString(topicsViewed)).append("\n");
    sb.append("    topicsViewedAllTime: ").append(toIndentedString(topicsViewedAllTime)).append("\n");
    sb.append("    trustLevelLocked: ").append(toIndentedString(trustLevelLocked)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("days_visited");
    openapiFields.add("max_flagged_by_users");
    openapiFields.add("max_flagged_posts");
    openapiFields.add("min_days_visited");
    openapiFields.add("min_likes_given");
    openapiFields.add("min_likes_received");
    openapiFields.add("min_likes_received_days");
    openapiFields.add("min_likes_received_users");
    openapiFields.add("min_posts_read");
    openapiFields.add("min_posts_read_all_time");
    openapiFields.add("min_topics_replied_to");
    openapiFields.add("min_topics_viewed");
    openapiFields.add("min_topics_viewed_all_time");
    openapiFields.add("num_flagged_by_users");
    openapiFields.add("num_flagged_posts");
    openapiFields.add("num_likes_given");
    openapiFields.add("num_likes_received");
    openapiFields.add("num_likes_received_days");
    openapiFields.add("num_likes_received_users");
    openapiFields.add("num_topics_replied_to");
    openapiFields.add("on_grace_period");
    openapiFields.add("penalty_counts");
    openapiFields.add("posts_read");
    openapiFields.add("posts_read_all_time");
    openapiFields.add("requirements_lost");
    openapiFields.add("requirements_met");
    openapiFields.add("time_period");
    openapiFields.add("topics_viewed");
    openapiFields.add("topics_viewed_all_time");
    openapiFields.add("trust_level_locked");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("days_visited");
    openapiRequiredFields.add("max_flagged_by_users");
    openapiRequiredFields.add("max_flagged_posts");
    openapiRequiredFields.add("min_days_visited");
    openapiRequiredFields.add("min_likes_given");
    openapiRequiredFields.add("min_likes_received");
    openapiRequiredFields.add("min_likes_received_days");
    openapiRequiredFields.add("min_likes_received_users");
    openapiRequiredFields.add("min_posts_read");
    openapiRequiredFields.add("min_posts_read_all_time");
    openapiRequiredFields.add("min_topics_replied_to");
    openapiRequiredFields.add("min_topics_viewed");
    openapiRequiredFields.add("min_topics_viewed_all_time");
    openapiRequiredFields.add("num_flagged_by_users");
    openapiRequiredFields.add("num_flagged_posts");
    openapiRequiredFields.add("num_likes_given");
    openapiRequiredFields.add("num_likes_received");
    openapiRequiredFields.add("num_likes_received_days");
    openapiRequiredFields.add("num_likes_received_users");
    openapiRequiredFields.add("num_topics_replied_to");
    openapiRequiredFields.add("on_grace_period");
    openapiRequiredFields.add("penalty_counts");
    openapiRequiredFields.add("posts_read");
    openapiRequiredFields.add("posts_read_all_time");
    openapiRequiredFields.add("requirements_lost");
    openapiRequiredFields.add("requirements_met");
    openapiRequiredFields.add("time_period");
    openapiRequiredFields.add("topics_viewed");
    openapiRequiredFields.add("topics_viewed_all_time");
    openapiRequiredFields.add("trust_level_locked");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AdminGetUser200ResponseTl3Requirements
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AdminGetUser200ResponseTl3Requirements.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AdminGetUser200ResponseTl3Requirements is not found in the empty JSON string", AdminGetUser200ResponseTl3Requirements.openapiRequiredFields.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : AdminGetUser200ResponseTl3Requirements.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AdminGetUser200ResponseTl3Requirements.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AdminGetUser200ResponseTl3Requirements' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AdminGetUser200ResponseTl3Requirements> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AdminGetUser200ResponseTl3Requirements.class));

       return (TypeAdapter<T>) new TypeAdapter<AdminGetUser200ResponseTl3Requirements>() {
           @Override
           public void write(JsonWriter out, AdminGetUser200ResponseTl3Requirements value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additional properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   JsonElement jsonElement = gson.toJsonTree(entry.getValue());
                   if (jsonElement.isJsonArray()) {
                     obj.add(entry.getKey(), jsonElement.getAsJsonArray());
                   } else {
                     obj.add(entry.getKey(), jsonElement.getAsJsonObject());
                   }
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public AdminGetUser200ResponseTl3Requirements read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             JsonObject jsonObj = jsonElement.getAsJsonObject();
             // store additional fields in the deserialized instance
             AdminGetUser200ResponseTl3Requirements instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AdminGetUser200ResponseTl3Requirements given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AdminGetUser200ResponseTl3Requirements
   * @throws IOException if the JSON string is invalid with respect to AdminGetUser200ResponseTl3Requirements
   */
  public static AdminGetUser200ResponseTl3Requirements fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AdminGetUser200ResponseTl3Requirements.class);
  }

  /**
   * Convert an instance of AdminGetUser200ResponseTl3Requirements to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

