/*
 * Discourse API Documentation
 * This page contains the documentation on how to use Discourse through API calls.  > Note: For any endpoints not listed you can follow the [reverse engineer the Discourse API](https://meta.discourse.org/t/-/20576) guide to figure out how to use an API endpoint.  ### Request Content-Type  The Content-Type for POST and PUT requests can be set to `application/x-www-form-urlencoded`, `multipart/form-data`, or `application/json`.  ### Endpoint Names and Response Content-Type  Most API endpoints provide the same content as their HTML counterparts. For example the URL `/categories` serves a list of categories, the `/categories.json` API provides the same information in JSON format.  Instead of sending API requests to `/categories.json` you may also send them to `/categories` and add an `Accept: application/json` header to the request to get the JSON response. Sending requests with the `Accept` header is necessary if you want to use URLs for related endpoints returned by the API, such as pagination URLs. These URLs are returned without the `.json` prefix so you need to add the header in order to get the correct response format.  ### Authentication  Some endpoints do not require any authentication, pretty much anything else will require you to be authenticated.  To become authenticated you will need to create an API Key from the admin panel.  Once you have your API Key you can pass it in along with your API Username as an HTTP header like this:  ``` curl -X GET \"http://127.0.0.1:3000/admin/users/list/active.json\" \\ -H \"Api-Key: 714552c6148e1617aeab526d0606184b94a80ec048fc09894ff1a72b740c5f19\" \\ -H \"Api-Username: system\" ```  and this is how POST requests will look:  ``` curl -X POST \"http://127.0.0.1:3000/categories\" \\ -H \"Content-Type: multipart/form-data;\" \\ -H \"Api-Key: 714552c6148e1617aeab526d0606184b94a80ec048fc09894ff1a72b740c5f19\" \\ -H \"Api-Username: system\" \\ -F \"name=89853c20-4409-e91a-a8ea-f6cdff96aaaa\" \\ -F \"color=49d9e9\" \\ -F \"text_color=f0fcfd\" ```  ### Boolean values  If an endpoint accepts a boolean be sure to specify it as a lowercase `true` or `false` value unless noted otherwise. 
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * AdminListUsers200ResponseInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:12:34.324076-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AdminListUsers200ResponseInner {
  public static final String SERIALIZED_NAME_ACTIVE = "active";
  @SerializedName(SERIALIZED_NAME_ACTIVE)
  private Boolean active;

  public static final String SERIALIZED_NAME_ADMIN = "admin";
  @SerializedName(SERIALIZED_NAME_ADMIN)
  private Boolean admin;

  public static final String SERIALIZED_NAME_AVATAR_TEMPLATE = "avatar_template";
  @SerializedName(SERIALIZED_NAME_AVATAR_TEMPLATE)
  private String avatarTemplate;

  public static final String SERIALIZED_NAME_CREATED_AT = "created_at";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private String createdAt;

  public static final String SERIALIZED_NAME_CREATED_AT_AGE = "created_at_age";
  @SerializedName(SERIALIZED_NAME_CREATED_AT_AGE)
  private BigDecimal createdAtAge;

  public static final String SERIALIZED_NAME_DAYS_VISITED = "days_visited";
  @SerializedName(SERIALIZED_NAME_DAYS_VISITED)
  private Integer daysVisited;

  public static final String SERIALIZED_NAME_EMAIL = "email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  private String email;

  public static final String SERIALIZED_NAME_FLAG_LEVEL = "flag_level";
  @SerializedName(SERIALIZED_NAME_FLAG_LEVEL)
  private Integer flagLevel;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_LAST_EMAILED_AGE = "last_emailed_age";
  @SerializedName(SERIALIZED_NAME_LAST_EMAILED_AGE)
  private BigDecimal lastEmailedAge;

  public static final String SERIALIZED_NAME_LAST_EMAILED_AT = "last_emailed_at";
  @SerializedName(SERIALIZED_NAME_LAST_EMAILED_AT)
  private String lastEmailedAt;

  public static final String SERIALIZED_NAME_LAST_SEEN_AGE = "last_seen_age";
  @SerializedName(SERIALIZED_NAME_LAST_SEEN_AGE)
  private BigDecimal lastSeenAge;

  public static final String SERIALIZED_NAME_LAST_SEEN_AT = "last_seen_at";
  @SerializedName(SERIALIZED_NAME_LAST_SEEN_AT)
  private String lastSeenAt;

  public static final String SERIALIZED_NAME_MANUAL_LOCKED_TRUST_LEVEL = "manual_locked_trust_level";
  @SerializedName(SERIALIZED_NAME_MANUAL_LOCKED_TRUST_LEVEL)
  private String manualLockedTrustLevel;

  public static final String SERIALIZED_NAME_MODERATOR = "moderator";
  @SerializedName(SERIALIZED_NAME_MODERATOR)
  private Boolean moderator;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_POST_COUNT = "post_count";
  @SerializedName(SERIALIZED_NAME_POST_COUNT)
  private Integer postCount;

  public static final String SERIALIZED_NAME_POSTS_READ_COUNT = "posts_read_count";
  @SerializedName(SERIALIZED_NAME_POSTS_READ_COUNT)
  private Integer postsReadCount;

  public static final String SERIALIZED_NAME_SECONDARY_EMAILS = "secondary_emails";
  @SerializedName(SERIALIZED_NAME_SECONDARY_EMAILS)
  private List<Object> secondaryEmails = new ArrayList<>();

  public static final String SERIALIZED_NAME_STAGED = "staged";
  @SerializedName(SERIALIZED_NAME_STAGED)
  private Boolean staged;

  public static final String SERIALIZED_NAME_TIME_READ = "time_read";
  @SerializedName(SERIALIZED_NAME_TIME_READ)
  private Integer timeRead;

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_TOPICS_ENTERED = "topics_entered";
  @SerializedName(SERIALIZED_NAME_TOPICS_ENTERED)
  private Integer topicsEntered;

  public static final String SERIALIZED_NAME_TRUST_LEVEL = "trust_level";
  @SerializedName(SERIALIZED_NAME_TRUST_LEVEL)
  private Integer trustLevel;

  public static final String SERIALIZED_NAME_USERNAME = "username";
  @SerializedName(SERIALIZED_NAME_USERNAME)
  private String username;

  public AdminListUsers200ResponseInner() {
  }

  public AdminListUsers200ResponseInner active(Boolean active) {
    this.active = active;
    return this;
  }

  /**
   * Get active
   * @return active
   */
  @javax.annotation.Nonnull
  public Boolean getActive() {
    return active;
  }

  public void setActive(Boolean active) {
    this.active = active;
  }


  public AdminListUsers200ResponseInner admin(Boolean admin) {
    this.admin = admin;
    return this;
  }

  /**
   * Get admin
   * @return admin
   */
  @javax.annotation.Nonnull
  public Boolean getAdmin() {
    return admin;
  }

  public void setAdmin(Boolean admin) {
    this.admin = admin;
  }


  public AdminListUsers200ResponseInner avatarTemplate(String avatarTemplate) {
    this.avatarTemplate = avatarTemplate;
    return this;
  }

  /**
   * Get avatarTemplate
   * @return avatarTemplate
   */
  @javax.annotation.Nonnull
  public String getAvatarTemplate() {
    return avatarTemplate;
  }

  public void setAvatarTemplate(String avatarTemplate) {
    this.avatarTemplate = avatarTemplate;
  }


  public AdminListUsers200ResponseInner createdAt(String createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Get createdAt
   * @return createdAt
   */
  @javax.annotation.Nonnull
  public String getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(String createdAt) {
    this.createdAt = createdAt;
  }


  public AdminListUsers200ResponseInner createdAtAge(BigDecimal createdAtAge) {
    this.createdAtAge = createdAtAge;
    return this;
  }

  /**
   * Get createdAtAge
   * @return createdAtAge
   */
  @javax.annotation.Nullable
  public BigDecimal getCreatedAtAge() {
    return createdAtAge;
  }

  public void setCreatedAtAge(BigDecimal createdAtAge) {
    this.createdAtAge = createdAtAge;
  }


  public AdminListUsers200ResponseInner daysVisited(Integer daysVisited) {
    this.daysVisited = daysVisited;
    return this;
  }

  /**
   * Get daysVisited
   * @return daysVisited
   */
  @javax.annotation.Nonnull
  public Integer getDaysVisited() {
    return daysVisited;
  }

  public void setDaysVisited(Integer daysVisited) {
    this.daysVisited = daysVisited;
  }


  public AdminListUsers200ResponseInner email(String email) {
    this.email = email;
    return this;
  }

  /**
   * Get email
   * @return email
   */
  @javax.annotation.Nullable
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }


  public AdminListUsers200ResponseInner flagLevel(Integer flagLevel) {
    this.flagLevel = flagLevel;
    return this;
  }

  /**
   * Get flagLevel
   * @return flagLevel
   */
  @javax.annotation.Nonnull
  public Integer getFlagLevel() {
    return flagLevel;
  }

  public void setFlagLevel(Integer flagLevel) {
    this.flagLevel = flagLevel;
  }


  public AdminListUsers200ResponseInner id(Integer id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nonnull
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }


  public AdminListUsers200ResponseInner lastEmailedAge(BigDecimal lastEmailedAge) {
    this.lastEmailedAge = lastEmailedAge;
    return this;
  }

  /**
   * Get lastEmailedAge
   * @return lastEmailedAge
   */
  @javax.annotation.Nullable
  public BigDecimal getLastEmailedAge() {
    return lastEmailedAge;
  }

  public void setLastEmailedAge(BigDecimal lastEmailedAge) {
    this.lastEmailedAge = lastEmailedAge;
  }


  public AdminListUsers200ResponseInner lastEmailedAt(String lastEmailedAt) {
    this.lastEmailedAt = lastEmailedAt;
    return this;
  }

  /**
   * Get lastEmailedAt
   * @return lastEmailedAt
   */
  @javax.annotation.Nullable
  public String getLastEmailedAt() {
    return lastEmailedAt;
  }

  public void setLastEmailedAt(String lastEmailedAt) {
    this.lastEmailedAt = lastEmailedAt;
  }


  public AdminListUsers200ResponseInner lastSeenAge(BigDecimal lastSeenAge) {
    this.lastSeenAge = lastSeenAge;
    return this;
  }

  /**
   * Get lastSeenAge
   * @return lastSeenAge
   */
  @javax.annotation.Nullable
  public BigDecimal getLastSeenAge() {
    return lastSeenAge;
  }

  public void setLastSeenAge(BigDecimal lastSeenAge) {
    this.lastSeenAge = lastSeenAge;
  }


  public AdminListUsers200ResponseInner lastSeenAt(String lastSeenAt) {
    this.lastSeenAt = lastSeenAt;
    return this;
  }

  /**
   * Get lastSeenAt
   * @return lastSeenAt
   */
  @javax.annotation.Nullable
  public String getLastSeenAt() {
    return lastSeenAt;
  }

  public void setLastSeenAt(String lastSeenAt) {
    this.lastSeenAt = lastSeenAt;
  }


  public AdminListUsers200ResponseInner manualLockedTrustLevel(String manualLockedTrustLevel) {
    this.manualLockedTrustLevel = manualLockedTrustLevel;
    return this;
  }

  /**
   * Get manualLockedTrustLevel
   * @return manualLockedTrustLevel
   */
  @javax.annotation.Nullable
  public String getManualLockedTrustLevel() {
    return manualLockedTrustLevel;
  }

  public void setManualLockedTrustLevel(String manualLockedTrustLevel) {
    this.manualLockedTrustLevel = manualLockedTrustLevel;
  }


  public AdminListUsers200ResponseInner moderator(Boolean moderator) {
    this.moderator = moderator;
    return this;
  }

  /**
   * Get moderator
   * @return moderator
   */
  @javax.annotation.Nonnull
  public Boolean getModerator() {
    return moderator;
  }

  public void setModerator(Boolean moderator) {
    this.moderator = moderator;
  }


  public AdminListUsers200ResponseInner name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public AdminListUsers200ResponseInner postCount(Integer postCount) {
    this.postCount = postCount;
    return this;
  }

  /**
   * Get postCount
   * @return postCount
   */
  @javax.annotation.Nonnull
  public Integer getPostCount() {
    return postCount;
  }

  public void setPostCount(Integer postCount) {
    this.postCount = postCount;
  }


  public AdminListUsers200ResponseInner postsReadCount(Integer postsReadCount) {
    this.postsReadCount = postsReadCount;
    return this;
  }

  /**
   * Get postsReadCount
   * @return postsReadCount
   */
  @javax.annotation.Nonnull
  public Integer getPostsReadCount() {
    return postsReadCount;
  }

  public void setPostsReadCount(Integer postsReadCount) {
    this.postsReadCount = postsReadCount;
  }


  public AdminListUsers200ResponseInner secondaryEmails(List<Object> secondaryEmails) {
    this.secondaryEmails = secondaryEmails;
    return this;
  }

  public AdminListUsers200ResponseInner addSecondaryEmailsItem(Object secondaryEmailsItem) {
    if (this.secondaryEmails == null) {
      this.secondaryEmails = new ArrayList<>();
    }
    this.secondaryEmails.add(secondaryEmailsItem);
    return this;
  }

  /**
   * Get secondaryEmails
   * @return secondaryEmails
   */
  @javax.annotation.Nullable
  public List<Object> getSecondaryEmails() {
    return secondaryEmails;
  }

  public void setSecondaryEmails(List<Object> secondaryEmails) {
    this.secondaryEmails = secondaryEmails;
  }


  public AdminListUsers200ResponseInner staged(Boolean staged) {
    this.staged = staged;
    return this;
  }

  /**
   * Get staged
   * @return staged
   */
  @javax.annotation.Nonnull
  public Boolean getStaged() {
    return staged;
  }

  public void setStaged(Boolean staged) {
    this.staged = staged;
  }


  public AdminListUsers200ResponseInner timeRead(Integer timeRead) {
    this.timeRead = timeRead;
    return this;
  }

  /**
   * Get timeRead
   * @return timeRead
   */
  @javax.annotation.Nonnull
  public Integer getTimeRead() {
    return timeRead;
  }

  public void setTimeRead(Integer timeRead) {
    this.timeRead = timeRead;
  }


  public AdminListUsers200ResponseInner title(String title) {
    this.title = title;
    return this;
  }

  /**
   * Get title
   * @return title
   */
  @javax.annotation.Nullable
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }


  public AdminListUsers200ResponseInner topicsEntered(Integer topicsEntered) {
    this.topicsEntered = topicsEntered;
    return this;
  }

  /**
   * Get topicsEntered
   * @return topicsEntered
   */
  @javax.annotation.Nonnull
  public Integer getTopicsEntered() {
    return topicsEntered;
  }

  public void setTopicsEntered(Integer topicsEntered) {
    this.topicsEntered = topicsEntered;
  }


  public AdminListUsers200ResponseInner trustLevel(Integer trustLevel) {
    this.trustLevel = trustLevel;
    return this;
  }

  /**
   * Get trustLevel
   * @return trustLevel
   */
  @javax.annotation.Nonnull
  public Integer getTrustLevel() {
    return trustLevel;
  }

  public void setTrustLevel(Integer trustLevel) {
    this.trustLevel = trustLevel;
  }


  public AdminListUsers200ResponseInner username(String username) {
    this.username = username;
    return this;
  }

  /**
   * Get username
   * @return username
   */
  @javax.annotation.Nonnull
  public String getUsername() {
    return username;
  }

  public void setUsername(String username) {
    this.username = username;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AdminListUsers200ResponseInner adminListUsers200ResponseInner = (AdminListUsers200ResponseInner) o;
    return Objects.equals(this.active, adminListUsers200ResponseInner.active) &&
        Objects.equals(this.admin, adminListUsers200ResponseInner.admin) &&
        Objects.equals(this.avatarTemplate, adminListUsers200ResponseInner.avatarTemplate) &&
        Objects.equals(this.createdAt, adminListUsers200ResponseInner.createdAt) &&
        Objects.equals(this.createdAtAge, adminListUsers200ResponseInner.createdAtAge) &&
        Objects.equals(this.daysVisited, adminListUsers200ResponseInner.daysVisited) &&
        Objects.equals(this.email, adminListUsers200ResponseInner.email) &&
        Objects.equals(this.flagLevel, adminListUsers200ResponseInner.flagLevel) &&
        Objects.equals(this.id, adminListUsers200ResponseInner.id) &&
        Objects.equals(this.lastEmailedAge, adminListUsers200ResponseInner.lastEmailedAge) &&
        Objects.equals(this.lastEmailedAt, adminListUsers200ResponseInner.lastEmailedAt) &&
        Objects.equals(this.lastSeenAge, adminListUsers200ResponseInner.lastSeenAge) &&
        Objects.equals(this.lastSeenAt, adminListUsers200ResponseInner.lastSeenAt) &&
        Objects.equals(this.manualLockedTrustLevel, adminListUsers200ResponseInner.manualLockedTrustLevel) &&
        Objects.equals(this.moderator, adminListUsers200ResponseInner.moderator) &&
        Objects.equals(this.name, adminListUsers200ResponseInner.name) &&
        Objects.equals(this.postCount, adminListUsers200ResponseInner.postCount) &&
        Objects.equals(this.postsReadCount, adminListUsers200ResponseInner.postsReadCount) &&
        Objects.equals(this.secondaryEmails, adminListUsers200ResponseInner.secondaryEmails) &&
        Objects.equals(this.staged, adminListUsers200ResponseInner.staged) &&
        Objects.equals(this.timeRead, adminListUsers200ResponseInner.timeRead) &&
        Objects.equals(this.title, adminListUsers200ResponseInner.title) &&
        Objects.equals(this.topicsEntered, adminListUsers200ResponseInner.topicsEntered) &&
        Objects.equals(this.trustLevel, adminListUsers200ResponseInner.trustLevel) &&
        Objects.equals(this.username, adminListUsers200ResponseInner.username);
  }

  @Override
  public int hashCode() {
    return Objects.hash(active, admin, avatarTemplate, createdAt, createdAtAge, daysVisited, email, flagLevel, id, lastEmailedAge, lastEmailedAt, lastSeenAge, lastSeenAt, manualLockedTrustLevel, moderator, name, postCount, postsReadCount, secondaryEmails, staged, timeRead, title, topicsEntered, trustLevel, username);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AdminListUsers200ResponseInner {\n");
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("    admin: ").append(toIndentedString(admin)).append("\n");
    sb.append("    avatarTemplate: ").append(toIndentedString(avatarTemplate)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    createdAtAge: ").append(toIndentedString(createdAtAge)).append("\n");
    sb.append("    daysVisited: ").append(toIndentedString(daysVisited)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    flagLevel: ").append(toIndentedString(flagLevel)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    lastEmailedAge: ").append(toIndentedString(lastEmailedAge)).append("\n");
    sb.append("    lastEmailedAt: ").append(toIndentedString(lastEmailedAt)).append("\n");
    sb.append("    lastSeenAge: ").append(toIndentedString(lastSeenAge)).append("\n");
    sb.append("    lastSeenAt: ").append(toIndentedString(lastSeenAt)).append("\n");
    sb.append("    manualLockedTrustLevel: ").append(toIndentedString(manualLockedTrustLevel)).append("\n");
    sb.append("    moderator: ").append(toIndentedString(moderator)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    postCount: ").append(toIndentedString(postCount)).append("\n");
    sb.append("    postsReadCount: ").append(toIndentedString(postsReadCount)).append("\n");
    sb.append("    secondaryEmails: ").append(toIndentedString(secondaryEmails)).append("\n");
    sb.append("    staged: ").append(toIndentedString(staged)).append("\n");
    sb.append("    timeRead: ").append(toIndentedString(timeRead)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    topicsEntered: ").append(toIndentedString(topicsEntered)).append("\n");
    sb.append("    trustLevel: ").append(toIndentedString(trustLevel)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("active");
    openapiFields.add("admin");
    openapiFields.add("avatar_template");
    openapiFields.add("created_at");
    openapiFields.add("created_at_age");
    openapiFields.add("days_visited");
    openapiFields.add("email");
    openapiFields.add("flag_level");
    openapiFields.add("id");
    openapiFields.add("last_emailed_age");
    openapiFields.add("last_emailed_at");
    openapiFields.add("last_seen_age");
    openapiFields.add("last_seen_at");
    openapiFields.add("manual_locked_trust_level");
    openapiFields.add("moderator");
    openapiFields.add("name");
    openapiFields.add("post_count");
    openapiFields.add("posts_read_count");
    openapiFields.add("secondary_emails");
    openapiFields.add("staged");
    openapiFields.add("time_read");
    openapiFields.add("title");
    openapiFields.add("topics_entered");
    openapiFields.add("trust_level");
    openapiFields.add("username");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("active");
    openapiRequiredFields.add("admin");
    openapiRequiredFields.add("avatar_template");
    openapiRequiredFields.add("created_at");
    openapiRequiredFields.add("created_at_age");
    openapiRequiredFields.add("days_visited");
    openapiRequiredFields.add("flag_level");
    openapiRequiredFields.add("id");
    openapiRequiredFields.add("last_emailed_age");
    openapiRequiredFields.add("last_emailed_at");
    openapiRequiredFields.add("last_seen_age");
    openapiRequiredFields.add("last_seen_at");
    openapiRequiredFields.add("manual_locked_trust_level");
    openapiRequiredFields.add("moderator");
    openapiRequiredFields.add("name");
    openapiRequiredFields.add("post_count");
    openapiRequiredFields.add("posts_read_count");
    openapiRequiredFields.add("staged");
    openapiRequiredFields.add("time_read");
    openapiRequiredFields.add("title");
    openapiRequiredFields.add("topics_entered");
    openapiRequiredFields.add("trust_level");
    openapiRequiredFields.add("username");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AdminListUsers200ResponseInner
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AdminListUsers200ResponseInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AdminListUsers200ResponseInner is not found in the empty JSON string", AdminListUsers200ResponseInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AdminListUsers200ResponseInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AdminListUsers200ResponseInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : AdminListUsers200ResponseInner.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("avatar_template").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `avatar_template` to be a primitive type in the JSON string but got `%s`", jsonObj.get("avatar_template").toString()));
      }
      if (!jsonObj.get("created_at").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `created_at` to be a primitive type in the JSON string but got `%s`", jsonObj.get("created_at").toString()));
      }
      if ((jsonObj.get("email") != null && !jsonObj.get("email").isJsonNull()) && !jsonObj.get("email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email").toString()));
      }
      if ((jsonObj.get("last_emailed_at") != null && !jsonObj.get("last_emailed_at").isJsonNull()) && !jsonObj.get("last_emailed_at").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `last_emailed_at` to be a primitive type in the JSON string but got `%s`", jsonObj.get("last_emailed_at").toString()));
      }
      if ((jsonObj.get("last_seen_at") != null && !jsonObj.get("last_seen_at").isJsonNull()) && !jsonObj.get("last_seen_at").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `last_seen_at` to be a primitive type in the JSON string but got `%s`", jsonObj.get("last_seen_at").toString()));
      }
      if ((jsonObj.get("manual_locked_trust_level") != null && !jsonObj.get("manual_locked_trust_level").isJsonNull()) && !jsonObj.get("manual_locked_trust_level").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `manual_locked_trust_level` to be a primitive type in the JSON string but got `%s`", jsonObj.get("manual_locked_trust_level").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("secondary_emails") != null && !jsonObj.get("secondary_emails").isJsonNull() && !jsonObj.get("secondary_emails").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `secondary_emails` to be an array in the JSON string but got `%s`", jsonObj.get("secondary_emails").toString()));
      }
      if ((jsonObj.get("title") != null && !jsonObj.get("title").isJsonNull()) && !jsonObj.get("title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("title").toString()));
      }
      if (!jsonObj.get("username").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `username` to be a primitive type in the JSON string but got `%s`", jsonObj.get("username").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AdminListUsers200ResponseInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AdminListUsers200ResponseInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AdminListUsers200ResponseInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AdminListUsers200ResponseInner.class));

       return (TypeAdapter<T>) new TypeAdapter<AdminListUsers200ResponseInner>() {
           @Override
           public void write(JsonWriter out, AdminListUsers200ResponseInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AdminListUsers200ResponseInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AdminListUsers200ResponseInner given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AdminListUsers200ResponseInner
   * @throws IOException if the JSON string is invalid with respect to AdminListUsers200ResponseInner
   */
  public static AdminListUsers200ResponseInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AdminListUsers200ResponseInner.class);
  }

  /**
   * Convert an instance of AdminListUsers200ResponseInner to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

