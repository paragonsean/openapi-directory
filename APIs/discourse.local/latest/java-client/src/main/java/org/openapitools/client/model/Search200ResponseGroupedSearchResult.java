/*
 * Discourse API Documentation
 * This page contains the documentation on how to use Discourse through API calls.  > Note: For any endpoints not listed you can follow the [reverse engineer the Discourse API](https://meta.discourse.org/t/-/20576) guide to figure out how to use an API endpoint.  ### Request Content-Type  The Content-Type for POST and PUT requests can be set to `application/x-www-form-urlencoded`, `multipart/form-data`, or `application/json`.  ### Endpoint Names and Response Content-Type  Most API endpoints provide the same content as their HTML counterparts. For example the URL `/categories` serves a list of categories, the `/categories.json` API provides the same information in JSON format.  Instead of sending API requests to `/categories.json` you may also send them to `/categories` and add an `Accept: application/json` header to the request to get the JSON response. Sending requests with the `Accept` header is necessary if you want to use URLs for related endpoints returned by the API, such as pagination URLs. These URLs are returned without the `.json` prefix so you need to add the header in order to get the correct response format.  ### Authentication  Some endpoints do not require any authentication, pretty much anything else will require you to be authenticated.  To become authenticated you will need to create an API Key from the admin panel.  Once you have your API Key you can pass it in along with your API Username as an HTTP header like this:  ``` curl -X GET \"http://127.0.0.1:3000/admin/users/list/active.json\" \\ -H \"Api-Key: 714552c6148e1617aeab526d0606184b94a80ec048fc09894ff1a72b740c5f19\" \\ -H \"Api-Username: system\" ```  and this is how POST requests will look:  ``` curl -X POST \"http://127.0.0.1:3000/categories\" \\ -H \"Content-Type: multipart/form-data;\" \\ -H \"Api-Key: 714552c6148e1617aeab526d0606184b94a80ec048fc09894ff1a72b740c5f19\" \\ -H \"Api-Username: system\" \\ -F \"name=89853c20-4409-e91a-a8ea-f6cdff96aaaa\" \\ -F \"color=49d9e9\" \\ -F \"text_color=f0fcfd\" ```  ### Boolean values  If an endpoint accepts a boolean be sure to specify it as a lowercase `true` or `false` value unless noted otherwise. 
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Search200ResponseGroupedSearchResult
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:12:34.324076-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class Search200ResponseGroupedSearchResult {
  public static final String SERIALIZED_NAME_CAN_CREATE_TOPIC = "can_create_topic";
  @SerializedName(SERIALIZED_NAME_CAN_CREATE_TOPIC)
  private Boolean canCreateTopic;

  public static final String SERIALIZED_NAME_CATEGORY_IDS = "category_ids";
  @SerializedName(SERIALIZED_NAME_CATEGORY_IDS)
  private List<Object> categoryIds = new ArrayList<>();

  public static final String SERIALIZED_NAME_ERROR = "error";
  @SerializedName(SERIALIZED_NAME_ERROR)
  private String error;

  public static final String SERIALIZED_NAME_GROUP_IDS = "group_ids";
  @SerializedName(SERIALIZED_NAME_GROUP_IDS)
  private List<Object> groupIds = new ArrayList<>();

  public static final String SERIALIZED_NAME_MORE_CATEGORIES = "more_categories";
  @SerializedName(SERIALIZED_NAME_MORE_CATEGORIES)
  private String moreCategories;

  public static final String SERIALIZED_NAME_MORE_FULL_PAGE_RESULTS = "more_full_page_results";
  @SerializedName(SERIALIZED_NAME_MORE_FULL_PAGE_RESULTS)
  private String moreFullPageResults;

  public static final String SERIALIZED_NAME_MORE_POSTS = "more_posts";
  @SerializedName(SERIALIZED_NAME_MORE_POSTS)
  private String morePosts;

  public static final String SERIALIZED_NAME_MORE_USERS = "more_users";
  @SerializedName(SERIALIZED_NAME_MORE_USERS)
  private String moreUsers;

  public static final String SERIALIZED_NAME_POST_IDS = "post_ids";
  @SerializedName(SERIALIZED_NAME_POST_IDS)
  private List<Object> postIds = new ArrayList<>();

  public static final String SERIALIZED_NAME_SEARCH_LOG_ID = "search_log_id";
  @SerializedName(SERIALIZED_NAME_SEARCH_LOG_ID)
  private Integer searchLogId;

  public static final String SERIALIZED_NAME_TAG_IDS = "tag_ids";
  @SerializedName(SERIALIZED_NAME_TAG_IDS)
  private List<Object> tagIds = new ArrayList<>();

  public static final String SERIALIZED_NAME_TERM = "term";
  @SerializedName(SERIALIZED_NAME_TERM)
  private String term;

  public static final String SERIALIZED_NAME_USER_IDS = "user_ids";
  @SerializedName(SERIALIZED_NAME_USER_IDS)
  private List<Object> userIds = new ArrayList<>();

  public Search200ResponseGroupedSearchResult() {
  }

  public Search200ResponseGroupedSearchResult canCreateTopic(Boolean canCreateTopic) {
    this.canCreateTopic = canCreateTopic;
    return this;
  }

  /**
   * Get canCreateTopic
   * @return canCreateTopic
   */
  @javax.annotation.Nonnull
  public Boolean getCanCreateTopic() {
    return canCreateTopic;
  }

  public void setCanCreateTopic(Boolean canCreateTopic) {
    this.canCreateTopic = canCreateTopic;
  }


  public Search200ResponseGroupedSearchResult categoryIds(List<Object> categoryIds) {
    this.categoryIds = categoryIds;
    return this;
  }

  public Search200ResponseGroupedSearchResult addCategoryIdsItem(Object categoryIdsItem) {
    if (this.categoryIds == null) {
      this.categoryIds = new ArrayList<>();
    }
    this.categoryIds.add(categoryIdsItem);
    return this;
  }

  /**
   * Get categoryIds
   * @return categoryIds
   */
  @javax.annotation.Nonnull
  public List<Object> getCategoryIds() {
    return categoryIds;
  }

  public void setCategoryIds(List<Object> categoryIds) {
    this.categoryIds = categoryIds;
  }


  public Search200ResponseGroupedSearchResult error(String error) {
    this.error = error;
    return this;
  }

  /**
   * Get error
   * @return error
   */
  @javax.annotation.Nullable
  public String getError() {
    return error;
  }

  public void setError(String error) {
    this.error = error;
  }


  public Search200ResponseGroupedSearchResult groupIds(List<Object> groupIds) {
    this.groupIds = groupIds;
    return this;
  }

  public Search200ResponseGroupedSearchResult addGroupIdsItem(Object groupIdsItem) {
    if (this.groupIds == null) {
      this.groupIds = new ArrayList<>();
    }
    this.groupIds.add(groupIdsItem);
    return this;
  }

  /**
   * Get groupIds
   * @return groupIds
   */
  @javax.annotation.Nonnull
  public List<Object> getGroupIds() {
    return groupIds;
  }

  public void setGroupIds(List<Object> groupIds) {
    this.groupIds = groupIds;
  }


  public Search200ResponseGroupedSearchResult moreCategories(String moreCategories) {
    this.moreCategories = moreCategories;
    return this;
  }

  /**
   * Get moreCategories
   * @return moreCategories
   */
  @javax.annotation.Nullable
  public String getMoreCategories() {
    return moreCategories;
  }

  public void setMoreCategories(String moreCategories) {
    this.moreCategories = moreCategories;
  }


  public Search200ResponseGroupedSearchResult moreFullPageResults(String moreFullPageResults) {
    this.moreFullPageResults = moreFullPageResults;
    return this;
  }

  /**
   * Get moreFullPageResults
   * @return moreFullPageResults
   */
  @javax.annotation.Nullable
  public String getMoreFullPageResults() {
    return moreFullPageResults;
  }

  public void setMoreFullPageResults(String moreFullPageResults) {
    this.moreFullPageResults = moreFullPageResults;
  }


  public Search200ResponseGroupedSearchResult morePosts(String morePosts) {
    this.morePosts = morePosts;
    return this;
  }

  /**
   * Get morePosts
   * @return morePosts
   */
  @javax.annotation.Nullable
  public String getMorePosts() {
    return morePosts;
  }

  public void setMorePosts(String morePosts) {
    this.morePosts = morePosts;
  }


  public Search200ResponseGroupedSearchResult moreUsers(String moreUsers) {
    this.moreUsers = moreUsers;
    return this;
  }

  /**
   * Get moreUsers
   * @return moreUsers
   */
  @javax.annotation.Nullable
  public String getMoreUsers() {
    return moreUsers;
  }

  public void setMoreUsers(String moreUsers) {
    this.moreUsers = moreUsers;
  }


  public Search200ResponseGroupedSearchResult postIds(List<Object> postIds) {
    this.postIds = postIds;
    return this;
  }

  public Search200ResponseGroupedSearchResult addPostIdsItem(Object postIdsItem) {
    if (this.postIds == null) {
      this.postIds = new ArrayList<>();
    }
    this.postIds.add(postIdsItem);
    return this;
  }

  /**
   * Get postIds
   * @return postIds
   */
  @javax.annotation.Nonnull
  public List<Object> getPostIds() {
    return postIds;
  }

  public void setPostIds(List<Object> postIds) {
    this.postIds = postIds;
  }


  public Search200ResponseGroupedSearchResult searchLogId(Integer searchLogId) {
    this.searchLogId = searchLogId;
    return this;
  }

  /**
   * Get searchLogId
   * @return searchLogId
   */
  @javax.annotation.Nonnull
  public Integer getSearchLogId() {
    return searchLogId;
  }

  public void setSearchLogId(Integer searchLogId) {
    this.searchLogId = searchLogId;
  }


  public Search200ResponseGroupedSearchResult tagIds(List<Object> tagIds) {
    this.tagIds = tagIds;
    return this;
  }

  public Search200ResponseGroupedSearchResult addTagIdsItem(Object tagIdsItem) {
    if (this.tagIds == null) {
      this.tagIds = new ArrayList<>();
    }
    this.tagIds.add(tagIdsItem);
    return this;
  }

  /**
   * Get tagIds
   * @return tagIds
   */
  @javax.annotation.Nonnull
  public List<Object> getTagIds() {
    return tagIds;
  }

  public void setTagIds(List<Object> tagIds) {
    this.tagIds = tagIds;
  }


  public Search200ResponseGroupedSearchResult term(String term) {
    this.term = term;
    return this;
  }

  /**
   * Get term
   * @return term
   */
  @javax.annotation.Nonnull
  public String getTerm() {
    return term;
  }

  public void setTerm(String term) {
    this.term = term;
  }


  public Search200ResponseGroupedSearchResult userIds(List<Object> userIds) {
    this.userIds = userIds;
    return this;
  }

  public Search200ResponseGroupedSearchResult addUserIdsItem(Object userIdsItem) {
    if (this.userIds == null) {
      this.userIds = new ArrayList<>();
    }
    this.userIds.add(userIdsItem);
    return this;
  }

  /**
   * Get userIds
   * @return userIds
   */
  @javax.annotation.Nonnull
  public List<Object> getUserIds() {
    return userIds;
  }

  public void setUserIds(List<Object> userIds) {
    this.userIds = userIds;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the Search200ResponseGroupedSearchResult instance itself
   */
  public Search200ResponseGroupedSearchResult putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Search200ResponseGroupedSearchResult search200ResponseGroupedSearchResult = (Search200ResponseGroupedSearchResult) o;
    return Objects.equals(this.canCreateTopic, search200ResponseGroupedSearchResult.canCreateTopic) &&
        Objects.equals(this.categoryIds, search200ResponseGroupedSearchResult.categoryIds) &&
        Objects.equals(this.error, search200ResponseGroupedSearchResult.error) &&
        Objects.equals(this.groupIds, search200ResponseGroupedSearchResult.groupIds) &&
        Objects.equals(this.moreCategories, search200ResponseGroupedSearchResult.moreCategories) &&
        Objects.equals(this.moreFullPageResults, search200ResponseGroupedSearchResult.moreFullPageResults) &&
        Objects.equals(this.morePosts, search200ResponseGroupedSearchResult.morePosts) &&
        Objects.equals(this.moreUsers, search200ResponseGroupedSearchResult.moreUsers) &&
        Objects.equals(this.postIds, search200ResponseGroupedSearchResult.postIds) &&
        Objects.equals(this.searchLogId, search200ResponseGroupedSearchResult.searchLogId) &&
        Objects.equals(this.tagIds, search200ResponseGroupedSearchResult.tagIds) &&
        Objects.equals(this.term, search200ResponseGroupedSearchResult.term) &&
        Objects.equals(this.userIds, search200ResponseGroupedSearchResult.userIds)&&
        Objects.equals(this.additionalProperties, search200ResponseGroupedSearchResult.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(canCreateTopic, categoryIds, error, groupIds, moreCategories, moreFullPageResults, morePosts, moreUsers, postIds, searchLogId, tagIds, term, userIds, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Search200ResponseGroupedSearchResult {\n");
    sb.append("    canCreateTopic: ").append(toIndentedString(canCreateTopic)).append("\n");
    sb.append("    categoryIds: ").append(toIndentedString(categoryIds)).append("\n");
    sb.append("    error: ").append(toIndentedString(error)).append("\n");
    sb.append("    groupIds: ").append(toIndentedString(groupIds)).append("\n");
    sb.append("    moreCategories: ").append(toIndentedString(moreCategories)).append("\n");
    sb.append("    moreFullPageResults: ").append(toIndentedString(moreFullPageResults)).append("\n");
    sb.append("    morePosts: ").append(toIndentedString(morePosts)).append("\n");
    sb.append("    moreUsers: ").append(toIndentedString(moreUsers)).append("\n");
    sb.append("    postIds: ").append(toIndentedString(postIds)).append("\n");
    sb.append("    searchLogId: ").append(toIndentedString(searchLogId)).append("\n");
    sb.append("    tagIds: ").append(toIndentedString(tagIds)).append("\n");
    sb.append("    term: ").append(toIndentedString(term)).append("\n");
    sb.append("    userIds: ").append(toIndentedString(userIds)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("can_create_topic");
    openapiFields.add("category_ids");
    openapiFields.add("error");
    openapiFields.add("group_ids");
    openapiFields.add("more_categories");
    openapiFields.add("more_full_page_results");
    openapiFields.add("more_posts");
    openapiFields.add("more_users");
    openapiFields.add("post_ids");
    openapiFields.add("search_log_id");
    openapiFields.add("tag_ids");
    openapiFields.add("term");
    openapiFields.add("user_ids");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("can_create_topic");
    openapiRequiredFields.add("category_ids");
    openapiRequiredFields.add("error");
    openapiRequiredFields.add("group_ids");
    openapiRequiredFields.add("more_categories");
    openapiRequiredFields.add("more_full_page_results");
    openapiRequiredFields.add("more_posts");
    openapiRequiredFields.add("more_users");
    openapiRequiredFields.add("post_ids");
    openapiRequiredFields.add("search_log_id");
    openapiRequiredFields.add("tag_ids");
    openapiRequiredFields.add("term");
    openapiRequiredFields.add("user_ids");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to Search200ResponseGroupedSearchResult
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Search200ResponseGroupedSearchResult.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Search200ResponseGroupedSearchResult is not found in the empty JSON string", Search200ResponseGroupedSearchResult.openapiRequiredFields.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : Search200ResponseGroupedSearchResult.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the required json array is present
      if (jsonObj.get("category_ids") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("category_ids").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `category_ids` to be an array in the JSON string but got `%s`", jsonObj.get("category_ids").toString()));
      }
      if ((jsonObj.get("error") != null && !jsonObj.get("error").isJsonNull()) && !jsonObj.get("error").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `error` to be a primitive type in the JSON string but got `%s`", jsonObj.get("error").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("group_ids") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("group_ids").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `group_ids` to be an array in the JSON string but got `%s`", jsonObj.get("group_ids").toString()));
      }
      if ((jsonObj.get("more_categories") != null && !jsonObj.get("more_categories").isJsonNull()) && !jsonObj.get("more_categories").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `more_categories` to be a primitive type in the JSON string but got `%s`", jsonObj.get("more_categories").toString()));
      }
      if ((jsonObj.get("more_full_page_results") != null && !jsonObj.get("more_full_page_results").isJsonNull()) && !jsonObj.get("more_full_page_results").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `more_full_page_results` to be a primitive type in the JSON string but got `%s`", jsonObj.get("more_full_page_results").toString()));
      }
      if ((jsonObj.get("more_posts") != null && !jsonObj.get("more_posts").isJsonNull()) && !jsonObj.get("more_posts").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `more_posts` to be a primitive type in the JSON string but got `%s`", jsonObj.get("more_posts").toString()));
      }
      if ((jsonObj.get("more_users") != null && !jsonObj.get("more_users").isJsonNull()) && !jsonObj.get("more_users").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `more_users` to be a primitive type in the JSON string but got `%s`", jsonObj.get("more_users").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("post_ids") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("post_ids").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `post_ids` to be an array in the JSON string but got `%s`", jsonObj.get("post_ids").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("tag_ids") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("tag_ids").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `tag_ids` to be an array in the JSON string but got `%s`", jsonObj.get("tag_ids").toString()));
      }
      if (!jsonObj.get("term").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `term` to be a primitive type in the JSON string but got `%s`", jsonObj.get("term").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("user_ids") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("user_ids").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `user_ids` to be an array in the JSON string but got `%s`", jsonObj.get("user_ids").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Search200ResponseGroupedSearchResult.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Search200ResponseGroupedSearchResult' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Search200ResponseGroupedSearchResult> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Search200ResponseGroupedSearchResult.class));

       return (TypeAdapter<T>) new TypeAdapter<Search200ResponseGroupedSearchResult>() {
           @Override
           public void write(JsonWriter out, Search200ResponseGroupedSearchResult value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additional properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   JsonElement jsonElement = gson.toJsonTree(entry.getValue());
                   if (jsonElement.isJsonArray()) {
                     obj.add(entry.getKey(), jsonElement.getAsJsonArray());
                   } else {
                     obj.add(entry.getKey(), jsonElement.getAsJsonObject());
                   }
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public Search200ResponseGroupedSearchResult read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             JsonObject jsonObj = jsonElement.getAsJsonObject();
             // store additional fields in the deserialized instance
             Search200ResponseGroupedSearchResult instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of Search200ResponseGroupedSearchResult given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of Search200ResponseGroupedSearchResult
   * @throws IOException if the JSON string is invalid with respect to Search200ResponseGroupedSearchResult
   */
  public static Search200ResponseGroupedSearchResult fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Search200ResponseGroupedSearchResult.class);
  }

  /**
   * Convert an instance of Search200ResponseGroupedSearchResult to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

