/*
 * Discourse API Documentation
 * This page contains the documentation on how to use Discourse through API calls.  > Note: For any endpoints not listed you can follow the [reverse engineer the Discourse API](https://meta.discourse.org/t/-/20576) guide to figure out how to use an API endpoint.  ### Request Content-Type  The Content-Type for POST and PUT requests can be set to `application/x-www-form-urlencoded`, `multipart/form-data`, or `application/json`.  ### Endpoint Names and Response Content-Type  Most API endpoints provide the same content as their HTML counterparts. For example the URL `/categories` serves a list of categories, the `/categories.json` API provides the same information in JSON format.  Instead of sending API requests to `/categories.json` you may also send them to `/categories` and add an `Accept: application/json` header to the request to get the JSON response. Sending requests with the `Accept` header is necessary if you want to use URLs for related endpoints returned by the API, such as pagination URLs. These URLs are returned without the `.json` prefix so you need to add the header in order to get the correct response format.  ### Authentication  Some endpoints do not require any authentication, pretty much anything else will require you to be authenticated.  To become authenticated you will need to create an API Key from the admin panel.  Once you have your API Key you can pass it in along with your API Username as an HTTP header like this:  ``` curl -X GET \"http://127.0.0.1:3000/admin/users/list/active.json\" \\ -H \"Api-Key: 714552c6148e1617aeab526d0606184b94a80ec048fc09894ff1a72b740c5f19\" \\ -H \"Api-Username: system\" ```  and this is how POST requests will look:  ``` curl -X POST \"http://127.0.0.1:3000/categories\" \\ -H \"Content-Type: multipart/form-data;\" \\ -H \"Api-Key: 714552c6148e1617aeab526d0606184b94a80ec048fc09894ff1a72b740c5f19\" \\ -H \"Api-Username: system\" \\ -F \"name=89853c20-4409-e91a-a8ea-f6cdff96aaaa\" \\ -F \"color=49d9e9\" \\ -F \"text_color=f0fcfd\" ```  ### Boolean values  If an endpoint accepts a boolean be sure to specify it as a lowercase `true` or `false` value unless noted otherwise. 
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ListUserActions200ResponseUserActionsInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:12:34.324076-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ListUserActions200ResponseUserActionsInner {
  public static final String SERIALIZED_NAME_ACTING_AVATAR_TEMPLATE = "acting_avatar_template";
  @SerializedName(SERIALIZED_NAME_ACTING_AVATAR_TEMPLATE)
  private String actingAvatarTemplate;

  public static final String SERIALIZED_NAME_ACTING_NAME = "acting_name";
  @SerializedName(SERIALIZED_NAME_ACTING_NAME)
  private String actingName;

  public static final String SERIALIZED_NAME_ACTING_USER_ID = "acting_user_id";
  @SerializedName(SERIALIZED_NAME_ACTING_USER_ID)
  private Integer actingUserId;

  public static final String SERIALIZED_NAME_ACTING_USERNAME = "acting_username";
  @SerializedName(SERIALIZED_NAME_ACTING_USERNAME)
  private String actingUsername;

  public static final String SERIALIZED_NAME_ACTION_CODE = "action_code";
  @SerializedName(SERIALIZED_NAME_ACTION_CODE)
  private String actionCode;

  public static final String SERIALIZED_NAME_ACTION_TYPE = "action_type";
  @SerializedName(SERIALIZED_NAME_ACTION_TYPE)
  private Integer actionType;

  public static final String SERIALIZED_NAME_ARCHIVED = "archived";
  @SerializedName(SERIALIZED_NAME_ARCHIVED)
  private Boolean archived;

  public static final String SERIALIZED_NAME_AVATAR_TEMPLATE = "avatar_template";
  @SerializedName(SERIALIZED_NAME_AVATAR_TEMPLATE)
  private String avatarTemplate;

  public static final String SERIALIZED_NAME_CATEGORY_ID = "category_id";
  @SerializedName(SERIALIZED_NAME_CATEGORY_ID)
  private Integer categoryId;

  public static final String SERIALIZED_NAME_CLOSED = "closed";
  @SerializedName(SERIALIZED_NAME_CLOSED)
  private Boolean closed;

  public static final String SERIALIZED_NAME_CREATED_AT = "created_at";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private String createdAt;

  public static final String SERIALIZED_NAME_DELETED = "deleted";
  @SerializedName(SERIALIZED_NAME_DELETED)
  private Boolean deleted;

  public static final String SERIALIZED_NAME_EXCERPT = "excerpt";
  @SerializedName(SERIALIZED_NAME_EXCERPT)
  private String excerpt;

  public static final String SERIALIZED_NAME_HIDDEN = "hidden";
  @SerializedName(SERIALIZED_NAME_HIDDEN)
  private String hidden;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_POST_ID = "post_id";
  @SerializedName(SERIALIZED_NAME_POST_ID)
  private String postId;

  public static final String SERIALIZED_NAME_POST_NUMBER = "post_number";
  @SerializedName(SERIALIZED_NAME_POST_NUMBER)
  private Integer postNumber;

  public static final String SERIALIZED_NAME_POST_TYPE = "post_type";
  @SerializedName(SERIALIZED_NAME_POST_TYPE)
  private String postType;

  public static final String SERIALIZED_NAME_SLUG = "slug";
  @SerializedName(SERIALIZED_NAME_SLUG)
  private String slug;

  public static final String SERIALIZED_NAME_TARGET_NAME = "target_name";
  @SerializedName(SERIALIZED_NAME_TARGET_NAME)
  private String targetName;

  public static final String SERIALIZED_NAME_TARGET_USER_ID = "target_user_id";
  @SerializedName(SERIALIZED_NAME_TARGET_USER_ID)
  private Integer targetUserId;

  public static final String SERIALIZED_NAME_TARGET_USERNAME = "target_username";
  @SerializedName(SERIALIZED_NAME_TARGET_USERNAME)
  private String targetUsername;

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_TOPIC_ID = "topic_id";
  @SerializedName(SERIALIZED_NAME_TOPIC_ID)
  private Integer topicId;

  public static final String SERIALIZED_NAME_USER_ID = "user_id";
  @SerializedName(SERIALIZED_NAME_USER_ID)
  private Integer userId;

  public static final String SERIALIZED_NAME_USERNAME = "username";
  @SerializedName(SERIALIZED_NAME_USERNAME)
  private String username;

  public ListUserActions200ResponseUserActionsInner() {
  }

  public ListUserActions200ResponseUserActionsInner actingAvatarTemplate(String actingAvatarTemplate) {
    this.actingAvatarTemplate = actingAvatarTemplate;
    return this;
  }

  /**
   * Get actingAvatarTemplate
   * @return actingAvatarTemplate
   */
  @javax.annotation.Nonnull
  public String getActingAvatarTemplate() {
    return actingAvatarTemplate;
  }

  public void setActingAvatarTemplate(String actingAvatarTemplate) {
    this.actingAvatarTemplate = actingAvatarTemplate;
  }


  public ListUserActions200ResponseUserActionsInner actingName(String actingName) {
    this.actingName = actingName;
    return this;
  }

  /**
   * Get actingName
   * @return actingName
   */
  @javax.annotation.Nullable
  public String getActingName() {
    return actingName;
  }

  public void setActingName(String actingName) {
    this.actingName = actingName;
  }


  public ListUserActions200ResponseUserActionsInner actingUserId(Integer actingUserId) {
    this.actingUserId = actingUserId;
    return this;
  }

  /**
   * Get actingUserId
   * @return actingUserId
   */
  @javax.annotation.Nonnull
  public Integer getActingUserId() {
    return actingUserId;
  }

  public void setActingUserId(Integer actingUserId) {
    this.actingUserId = actingUserId;
  }


  public ListUserActions200ResponseUserActionsInner actingUsername(String actingUsername) {
    this.actingUsername = actingUsername;
    return this;
  }

  /**
   * Get actingUsername
   * @return actingUsername
   */
  @javax.annotation.Nonnull
  public String getActingUsername() {
    return actingUsername;
  }

  public void setActingUsername(String actingUsername) {
    this.actingUsername = actingUsername;
  }


  public ListUserActions200ResponseUserActionsInner actionCode(String actionCode) {
    this.actionCode = actionCode;
    return this;
  }

  /**
   * Get actionCode
   * @return actionCode
   */
  @javax.annotation.Nullable
  public String getActionCode() {
    return actionCode;
  }

  public void setActionCode(String actionCode) {
    this.actionCode = actionCode;
  }


  public ListUserActions200ResponseUserActionsInner actionType(Integer actionType) {
    this.actionType = actionType;
    return this;
  }

  /**
   * Get actionType
   * @return actionType
   */
  @javax.annotation.Nonnull
  public Integer getActionType() {
    return actionType;
  }

  public void setActionType(Integer actionType) {
    this.actionType = actionType;
  }


  public ListUserActions200ResponseUserActionsInner archived(Boolean archived) {
    this.archived = archived;
    return this;
  }

  /**
   * Get archived
   * @return archived
   */
  @javax.annotation.Nonnull
  public Boolean getArchived() {
    return archived;
  }

  public void setArchived(Boolean archived) {
    this.archived = archived;
  }


  public ListUserActions200ResponseUserActionsInner avatarTemplate(String avatarTemplate) {
    this.avatarTemplate = avatarTemplate;
    return this;
  }

  /**
   * Get avatarTemplate
   * @return avatarTemplate
   */
  @javax.annotation.Nonnull
  public String getAvatarTemplate() {
    return avatarTemplate;
  }

  public void setAvatarTemplate(String avatarTemplate) {
    this.avatarTemplate = avatarTemplate;
  }


  public ListUserActions200ResponseUserActionsInner categoryId(Integer categoryId) {
    this.categoryId = categoryId;
    return this;
  }

  /**
   * Get categoryId
   * @return categoryId
   */
  @javax.annotation.Nonnull
  public Integer getCategoryId() {
    return categoryId;
  }

  public void setCategoryId(Integer categoryId) {
    this.categoryId = categoryId;
  }


  public ListUserActions200ResponseUserActionsInner closed(Boolean closed) {
    this.closed = closed;
    return this;
  }

  /**
   * Get closed
   * @return closed
   */
  @javax.annotation.Nonnull
  public Boolean getClosed() {
    return closed;
  }

  public void setClosed(Boolean closed) {
    this.closed = closed;
  }


  public ListUserActions200ResponseUserActionsInner createdAt(String createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Get createdAt
   * @return createdAt
   */
  @javax.annotation.Nonnull
  public String getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(String createdAt) {
    this.createdAt = createdAt;
  }


  public ListUserActions200ResponseUserActionsInner deleted(Boolean deleted) {
    this.deleted = deleted;
    return this;
  }

  /**
   * Get deleted
   * @return deleted
   */
  @javax.annotation.Nonnull
  public Boolean getDeleted() {
    return deleted;
  }

  public void setDeleted(Boolean deleted) {
    this.deleted = deleted;
  }


  public ListUserActions200ResponseUserActionsInner excerpt(String excerpt) {
    this.excerpt = excerpt;
    return this;
  }

  /**
   * Get excerpt
   * @return excerpt
   */
  @javax.annotation.Nonnull
  public String getExcerpt() {
    return excerpt;
  }

  public void setExcerpt(String excerpt) {
    this.excerpt = excerpt;
  }


  public ListUserActions200ResponseUserActionsInner hidden(String hidden) {
    this.hidden = hidden;
    return this;
  }

  /**
   * Get hidden
   * @return hidden
   */
  @javax.annotation.Nullable
  public String getHidden() {
    return hidden;
  }

  public void setHidden(String hidden) {
    this.hidden = hidden;
  }


  public ListUserActions200ResponseUserActionsInner name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public ListUserActions200ResponseUserActionsInner postId(String postId) {
    this.postId = postId;
    return this;
  }

  /**
   * Get postId
   * @return postId
   */
  @javax.annotation.Nullable
  public String getPostId() {
    return postId;
  }

  public void setPostId(String postId) {
    this.postId = postId;
  }


  public ListUserActions200ResponseUserActionsInner postNumber(Integer postNumber) {
    this.postNumber = postNumber;
    return this;
  }

  /**
   * Get postNumber
   * @return postNumber
   */
  @javax.annotation.Nonnull
  public Integer getPostNumber() {
    return postNumber;
  }

  public void setPostNumber(Integer postNumber) {
    this.postNumber = postNumber;
  }


  public ListUserActions200ResponseUserActionsInner postType(String postType) {
    this.postType = postType;
    return this;
  }

  /**
   * Get postType
   * @return postType
   */
  @javax.annotation.Nullable
  public String getPostType() {
    return postType;
  }

  public void setPostType(String postType) {
    this.postType = postType;
  }


  public ListUserActions200ResponseUserActionsInner slug(String slug) {
    this.slug = slug;
    return this;
  }

  /**
   * Get slug
   * @return slug
   */
  @javax.annotation.Nonnull
  public String getSlug() {
    return slug;
  }

  public void setSlug(String slug) {
    this.slug = slug;
  }


  public ListUserActions200ResponseUserActionsInner targetName(String targetName) {
    this.targetName = targetName;
    return this;
  }

  /**
   * Get targetName
   * @return targetName
   */
  @javax.annotation.Nullable
  public String getTargetName() {
    return targetName;
  }

  public void setTargetName(String targetName) {
    this.targetName = targetName;
  }


  public ListUserActions200ResponseUserActionsInner targetUserId(Integer targetUserId) {
    this.targetUserId = targetUserId;
    return this;
  }

  /**
   * Get targetUserId
   * @return targetUserId
   */
  @javax.annotation.Nonnull
  public Integer getTargetUserId() {
    return targetUserId;
  }

  public void setTargetUserId(Integer targetUserId) {
    this.targetUserId = targetUserId;
  }


  public ListUserActions200ResponseUserActionsInner targetUsername(String targetUsername) {
    this.targetUsername = targetUsername;
    return this;
  }

  /**
   * Get targetUsername
   * @return targetUsername
   */
  @javax.annotation.Nonnull
  public String getTargetUsername() {
    return targetUsername;
  }

  public void setTargetUsername(String targetUsername) {
    this.targetUsername = targetUsername;
  }


  public ListUserActions200ResponseUserActionsInner title(String title) {
    this.title = title;
    return this;
  }

  /**
   * Get title
   * @return title
   */
  @javax.annotation.Nonnull
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }


  public ListUserActions200ResponseUserActionsInner topicId(Integer topicId) {
    this.topicId = topicId;
    return this;
  }

  /**
   * Get topicId
   * @return topicId
   */
  @javax.annotation.Nonnull
  public Integer getTopicId() {
    return topicId;
  }

  public void setTopicId(Integer topicId) {
    this.topicId = topicId;
  }


  public ListUserActions200ResponseUserActionsInner userId(Integer userId) {
    this.userId = userId;
    return this;
  }

  /**
   * Get userId
   * @return userId
   */
  @javax.annotation.Nonnull
  public Integer getUserId() {
    return userId;
  }

  public void setUserId(Integer userId) {
    this.userId = userId;
  }


  public ListUserActions200ResponseUserActionsInner username(String username) {
    this.username = username;
    return this;
  }

  /**
   * Get username
   * @return username
   */
  @javax.annotation.Nonnull
  public String getUsername() {
    return username;
  }

  public void setUsername(String username) {
    this.username = username;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the ListUserActions200ResponseUserActionsInner instance itself
   */
  public ListUserActions200ResponseUserActionsInner putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListUserActions200ResponseUserActionsInner listUserActions200ResponseUserActionsInner = (ListUserActions200ResponseUserActionsInner) o;
    return Objects.equals(this.actingAvatarTemplate, listUserActions200ResponseUserActionsInner.actingAvatarTemplate) &&
        Objects.equals(this.actingName, listUserActions200ResponseUserActionsInner.actingName) &&
        Objects.equals(this.actingUserId, listUserActions200ResponseUserActionsInner.actingUserId) &&
        Objects.equals(this.actingUsername, listUserActions200ResponseUserActionsInner.actingUsername) &&
        Objects.equals(this.actionCode, listUserActions200ResponseUserActionsInner.actionCode) &&
        Objects.equals(this.actionType, listUserActions200ResponseUserActionsInner.actionType) &&
        Objects.equals(this.archived, listUserActions200ResponseUserActionsInner.archived) &&
        Objects.equals(this.avatarTemplate, listUserActions200ResponseUserActionsInner.avatarTemplate) &&
        Objects.equals(this.categoryId, listUserActions200ResponseUserActionsInner.categoryId) &&
        Objects.equals(this.closed, listUserActions200ResponseUserActionsInner.closed) &&
        Objects.equals(this.createdAt, listUserActions200ResponseUserActionsInner.createdAt) &&
        Objects.equals(this.deleted, listUserActions200ResponseUserActionsInner.deleted) &&
        Objects.equals(this.excerpt, listUserActions200ResponseUserActionsInner.excerpt) &&
        Objects.equals(this.hidden, listUserActions200ResponseUserActionsInner.hidden) &&
        Objects.equals(this.name, listUserActions200ResponseUserActionsInner.name) &&
        Objects.equals(this.postId, listUserActions200ResponseUserActionsInner.postId) &&
        Objects.equals(this.postNumber, listUserActions200ResponseUserActionsInner.postNumber) &&
        Objects.equals(this.postType, listUserActions200ResponseUserActionsInner.postType) &&
        Objects.equals(this.slug, listUserActions200ResponseUserActionsInner.slug) &&
        Objects.equals(this.targetName, listUserActions200ResponseUserActionsInner.targetName) &&
        Objects.equals(this.targetUserId, listUserActions200ResponseUserActionsInner.targetUserId) &&
        Objects.equals(this.targetUsername, listUserActions200ResponseUserActionsInner.targetUsername) &&
        Objects.equals(this.title, listUserActions200ResponseUserActionsInner.title) &&
        Objects.equals(this.topicId, listUserActions200ResponseUserActionsInner.topicId) &&
        Objects.equals(this.userId, listUserActions200ResponseUserActionsInner.userId) &&
        Objects.equals(this.username, listUserActions200ResponseUserActionsInner.username)&&
        Objects.equals(this.additionalProperties, listUserActions200ResponseUserActionsInner.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(actingAvatarTemplate, actingName, actingUserId, actingUsername, actionCode, actionType, archived, avatarTemplate, categoryId, closed, createdAt, deleted, excerpt, hidden, name, postId, postNumber, postType, slug, targetName, targetUserId, targetUsername, title, topicId, userId, username, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListUserActions200ResponseUserActionsInner {\n");
    sb.append("    actingAvatarTemplate: ").append(toIndentedString(actingAvatarTemplate)).append("\n");
    sb.append("    actingName: ").append(toIndentedString(actingName)).append("\n");
    sb.append("    actingUserId: ").append(toIndentedString(actingUserId)).append("\n");
    sb.append("    actingUsername: ").append(toIndentedString(actingUsername)).append("\n");
    sb.append("    actionCode: ").append(toIndentedString(actionCode)).append("\n");
    sb.append("    actionType: ").append(toIndentedString(actionType)).append("\n");
    sb.append("    archived: ").append(toIndentedString(archived)).append("\n");
    sb.append("    avatarTemplate: ").append(toIndentedString(avatarTemplate)).append("\n");
    sb.append("    categoryId: ").append(toIndentedString(categoryId)).append("\n");
    sb.append("    closed: ").append(toIndentedString(closed)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    deleted: ").append(toIndentedString(deleted)).append("\n");
    sb.append("    excerpt: ").append(toIndentedString(excerpt)).append("\n");
    sb.append("    hidden: ").append(toIndentedString(hidden)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    postId: ").append(toIndentedString(postId)).append("\n");
    sb.append("    postNumber: ").append(toIndentedString(postNumber)).append("\n");
    sb.append("    postType: ").append(toIndentedString(postType)).append("\n");
    sb.append("    slug: ").append(toIndentedString(slug)).append("\n");
    sb.append("    targetName: ").append(toIndentedString(targetName)).append("\n");
    sb.append("    targetUserId: ").append(toIndentedString(targetUserId)).append("\n");
    sb.append("    targetUsername: ").append(toIndentedString(targetUsername)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    topicId: ").append(toIndentedString(topicId)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("acting_avatar_template");
    openapiFields.add("acting_name");
    openapiFields.add("acting_user_id");
    openapiFields.add("acting_username");
    openapiFields.add("action_code");
    openapiFields.add("action_type");
    openapiFields.add("archived");
    openapiFields.add("avatar_template");
    openapiFields.add("category_id");
    openapiFields.add("closed");
    openapiFields.add("created_at");
    openapiFields.add("deleted");
    openapiFields.add("excerpt");
    openapiFields.add("hidden");
    openapiFields.add("name");
    openapiFields.add("post_id");
    openapiFields.add("post_number");
    openapiFields.add("post_type");
    openapiFields.add("slug");
    openapiFields.add("target_name");
    openapiFields.add("target_user_id");
    openapiFields.add("target_username");
    openapiFields.add("title");
    openapiFields.add("topic_id");
    openapiFields.add("user_id");
    openapiFields.add("username");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("acting_avatar_template");
    openapiRequiredFields.add("acting_name");
    openapiRequiredFields.add("acting_user_id");
    openapiRequiredFields.add("acting_username");
    openapiRequiredFields.add("action_code");
    openapiRequiredFields.add("action_type");
    openapiRequiredFields.add("archived");
    openapiRequiredFields.add("avatar_template");
    openapiRequiredFields.add("category_id");
    openapiRequiredFields.add("closed");
    openapiRequiredFields.add("created_at");
    openapiRequiredFields.add("deleted");
    openapiRequiredFields.add("excerpt");
    openapiRequiredFields.add("hidden");
    openapiRequiredFields.add("name");
    openapiRequiredFields.add("post_id");
    openapiRequiredFields.add("post_number");
    openapiRequiredFields.add("post_type");
    openapiRequiredFields.add("slug");
    openapiRequiredFields.add("target_name");
    openapiRequiredFields.add("target_user_id");
    openapiRequiredFields.add("target_username");
    openapiRequiredFields.add("title");
    openapiRequiredFields.add("topic_id");
    openapiRequiredFields.add("user_id");
    openapiRequiredFields.add("username");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ListUserActions200ResponseUserActionsInner
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ListUserActions200ResponseUserActionsInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ListUserActions200ResponseUserActionsInner is not found in the empty JSON string", ListUserActions200ResponseUserActionsInner.openapiRequiredFields.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ListUserActions200ResponseUserActionsInner.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("acting_avatar_template").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `acting_avatar_template` to be a primitive type in the JSON string but got `%s`", jsonObj.get("acting_avatar_template").toString()));
      }
      if ((jsonObj.get("acting_name") != null && !jsonObj.get("acting_name").isJsonNull()) && !jsonObj.get("acting_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `acting_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("acting_name").toString()));
      }
      if (!jsonObj.get("acting_username").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `acting_username` to be a primitive type in the JSON string but got `%s`", jsonObj.get("acting_username").toString()));
      }
      if ((jsonObj.get("action_code") != null && !jsonObj.get("action_code").isJsonNull()) && !jsonObj.get("action_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `action_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("action_code").toString()));
      }
      if (!jsonObj.get("avatar_template").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `avatar_template` to be a primitive type in the JSON string but got `%s`", jsonObj.get("avatar_template").toString()));
      }
      if (!jsonObj.get("created_at").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `created_at` to be a primitive type in the JSON string but got `%s`", jsonObj.get("created_at").toString()));
      }
      if (!jsonObj.get("excerpt").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `excerpt` to be a primitive type in the JSON string but got `%s`", jsonObj.get("excerpt").toString()));
      }
      if ((jsonObj.get("hidden") != null && !jsonObj.get("hidden").isJsonNull()) && !jsonObj.get("hidden").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `hidden` to be a primitive type in the JSON string but got `%s`", jsonObj.get("hidden").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("post_id") != null && !jsonObj.get("post_id").isJsonNull()) && !jsonObj.get("post_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `post_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("post_id").toString()));
      }
      if ((jsonObj.get("post_type") != null && !jsonObj.get("post_type").isJsonNull()) && !jsonObj.get("post_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `post_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("post_type").toString()));
      }
      if (!jsonObj.get("slug").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `slug` to be a primitive type in the JSON string but got `%s`", jsonObj.get("slug").toString()));
      }
      if ((jsonObj.get("target_name") != null && !jsonObj.get("target_name").isJsonNull()) && !jsonObj.get("target_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `target_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("target_name").toString()));
      }
      if (!jsonObj.get("target_username").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `target_username` to be a primitive type in the JSON string but got `%s`", jsonObj.get("target_username").toString()));
      }
      if (!jsonObj.get("title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("title").toString()));
      }
      if (!jsonObj.get("username").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `username` to be a primitive type in the JSON string but got `%s`", jsonObj.get("username").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ListUserActions200ResponseUserActionsInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ListUserActions200ResponseUserActionsInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ListUserActions200ResponseUserActionsInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ListUserActions200ResponseUserActionsInner.class));

       return (TypeAdapter<T>) new TypeAdapter<ListUserActions200ResponseUserActionsInner>() {
           @Override
           public void write(JsonWriter out, ListUserActions200ResponseUserActionsInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additional properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   JsonElement jsonElement = gson.toJsonTree(entry.getValue());
                   if (jsonElement.isJsonArray()) {
                     obj.add(entry.getKey(), jsonElement.getAsJsonArray());
                   } else {
                     obj.add(entry.getKey(), jsonElement.getAsJsonObject());
                   }
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public ListUserActions200ResponseUserActionsInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             JsonObject jsonObj = jsonElement.getAsJsonObject();
             // store additional fields in the deserialized instance
             ListUserActions200ResponseUserActionsInner instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ListUserActions200ResponseUserActionsInner given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ListUserActions200ResponseUserActionsInner
   * @throws IOException if the JSON string is invalid with respect to ListUserActions200ResponseUserActionsInner
   */
  public static ListUserActions200ResponseUserActionsInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ListUserActions200ResponseUserActionsInner.class);
  }

  /**
   * Convert an instance of ListUserActions200ResponseUserActionsInner to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

