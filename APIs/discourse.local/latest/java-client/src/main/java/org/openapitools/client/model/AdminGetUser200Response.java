/*
 * Discourse API Documentation
 * This page contains the documentation on how to use Discourse through API calls.  > Note: For any endpoints not listed you can follow the [reverse engineer the Discourse API](https://meta.discourse.org/t/-/20576) guide to figure out how to use an API endpoint.  ### Request Content-Type  The Content-Type for POST and PUT requests can be set to `application/x-www-form-urlencoded`, `multipart/form-data`, or `application/json`.  ### Endpoint Names and Response Content-Type  Most API endpoints provide the same content as their HTML counterparts. For example the URL `/categories` serves a list of categories, the `/categories.json` API provides the same information in JSON format.  Instead of sending API requests to `/categories.json` you may also send them to `/categories` and add an `Accept: application/json` header to the request to get the JSON response. Sending requests with the `Accept` header is necessary if you want to use URLs for related endpoints returned by the API, such as pagination URLs. These URLs are returned without the `.json` prefix so you need to add the header in order to get the correct response format.  ### Authentication  Some endpoints do not require any authentication, pretty much anything else will require you to be authenticated.  To become authenticated you will need to create an API Key from the admin panel.  Once you have your API Key you can pass it in along with your API Username as an HTTP header like this:  ``` curl -X GET \"http://127.0.0.1:3000/admin/users/list/active.json\" \\ -H \"Api-Key: 714552c6148e1617aeab526d0606184b94a80ec048fc09894ff1a72b740c5f19\" \\ -H \"Api-Username: system\" ```  and this is how POST requests will look:  ``` curl -X POST \"http://127.0.0.1:3000/categories\" \\ -H \"Content-Type: multipart/form-data;\" \\ -H \"Api-Key: 714552c6148e1617aeab526d0606184b94a80ec048fc09894ff1a72b740c5f19\" \\ -H \"Api-Username: system\" \\ -F \"name=89853c20-4409-e91a-a8ea-f6cdff96aaaa\" \\ -F \"color=49d9e9\" \\ -F \"text_color=f0fcfd\" ```  ### Boolean values  If an endpoint accepts a boolean be sure to specify it as a lowercase `true` or `false` value unless noted otherwise. 
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AdminGetUser200ResponseApprovedBy;
import org.openapitools.client.model.AdminGetUser200ResponseGroupsInner;
import org.openapitools.client.model.AdminGetUser200ResponsePenaltyCounts;
import org.openapitools.client.model.AdminGetUser200ResponseTl3Requirements;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * AdminGetUser200Response
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:12:34.324076-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AdminGetUser200Response {
  public static final String SERIALIZED_NAME_ACTIVE = "active";
  @SerializedName(SERIALIZED_NAME_ACTIVE)
  private Boolean active;

  public static final String SERIALIZED_NAME_ADMIN = "admin";
  @SerializedName(SERIALIZED_NAME_ADMIN)
  private Boolean admin;

  public static final String SERIALIZED_NAME_API_KEY_COUNT = "api_key_count";
  @SerializedName(SERIALIZED_NAME_API_KEY_COUNT)
  private Integer apiKeyCount;

  public static final String SERIALIZED_NAME_APPROVED_BY = "approved_by";
  @SerializedName(SERIALIZED_NAME_APPROVED_BY)
  private AdminGetUser200ResponseApprovedBy approvedBy;

  public static final String SERIALIZED_NAME_ASSOCIATED_ACCOUNTS = "associated_accounts";
  @SerializedName(SERIALIZED_NAME_ASSOCIATED_ACCOUNTS)
  private List<Object> associatedAccounts = new ArrayList<>();

  public static final String SERIALIZED_NAME_AVATAR_TEMPLATE = "avatar_template";
  @SerializedName(SERIALIZED_NAME_AVATAR_TEMPLATE)
  private String avatarTemplate;

  public static final String SERIALIZED_NAME_BADGE_COUNT = "badge_count";
  @SerializedName(SERIALIZED_NAME_BADGE_COUNT)
  private Integer badgeCount;

  public static final String SERIALIZED_NAME_BOUNCE_SCORE = "bounce_score";
  @SerializedName(SERIALIZED_NAME_BOUNCE_SCORE)
  private Integer bounceScore;

  public static final String SERIALIZED_NAME_CAN_ACTIVATE = "can_activate";
  @SerializedName(SERIALIZED_NAME_CAN_ACTIVATE)
  private Boolean canActivate;

  public static final String SERIALIZED_NAME_CAN_BE_ANONYMIZED = "can_be_anonymized";
  @SerializedName(SERIALIZED_NAME_CAN_BE_ANONYMIZED)
  private Boolean canBeAnonymized;

  public static final String SERIALIZED_NAME_CAN_BE_DELETED = "can_be_deleted";
  @SerializedName(SERIALIZED_NAME_CAN_BE_DELETED)
  private Boolean canBeDeleted;

  public static final String SERIALIZED_NAME_CAN_BE_MERGED = "can_be_merged";
  @SerializedName(SERIALIZED_NAME_CAN_BE_MERGED)
  private Boolean canBeMerged;

  public static final String SERIALIZED_NAME_CAN_DEACTIVATE = "can_deactivate";
  @SerializedName(SERIALIZED_NAME_CAN_DEACTIVATE)
  private Boolean canDeactivate;

  public static final String SERIALIZED_NAME_CAN_DELETE_ALL_POSTS = "can_delete_all_posts";
  @SerializedName(SERIALIZED_NAME_CAN_DELETE_ALL_POSTS)
  private Boolean canDeleteAllPosts;

  public static final String SERIALIZED_NAME_CAN_DELETE_SSO_RECORD = "can_delete_sso_record";
  @SerializedName(SERIALIZED_NAME_CAN_DELETE_SSO_RECORD)
  private Boolean canDeleteSsoRecord;

  public static final String SERIALIZED_NAME_CAN_DISABLE_SECOND_FACTOR = "can_disable_second_factor";
  @SerializedName(SERIALIZED_NAME_CAN_DISABLE_SECOND_FACTOR)
  private Boolean canDisableSecondFactor;

  public static final String SERIALIZED_NAME_CAN_GRANT_ADMIN = "can_grant_admin";
  @SerializedName(SERIALIZED_NAME_CAN_GRANT_ADMIN)
  private Boolean canGrantAdmin;

  public static final String SERIALIZED_NAME_CAN_GRANT_MODERATION = "can_grant_moderation";
  @SerializedName(SERIALIZED_NAME_CAN_GRANT_MODERATION)
  private Boolean canGrantModeration;

  public static final String SERIALIZED_NAME_CAN_IMPERSONATE = "can_impersonate";
  @SerializedName(SERIALIZED_NAME_CAN_IMPERSONATE)
  private Boolean canImpersonate;

  public static final String SERIALIZED_NAME_CAN_REVOKE_ADMIN = "can_revoke_admin";
  @SerializedName(SERIALIZED_NAME_CAN_REVOKE_ADMIN)
  private Boolean canRevokeAdmin;

  public static final String SERIALIZED_NAME_CAN_REVOKE_MODERATION = "can_revoke_moderation";
  @SerializedName(SERIALIZED_NAME_CAN_REVOKE_MODERATION)
  private Boolean canRevokeModeration;

  public static final String SERIALIZED_NAME_CAN_SEND_ACTIVATION_EMAIL = "can_send_activation_email";
  @SerializedName(SERIALIZED_NAME_CAN_SEND_ACTIVATION_EMAIL)
  private Boolean canSendActivationEmail;

  public static final String SERIALIZED_NAME_CAN_VIEW_ACTION_LOGS = "can_view_action_logs";
  @SerializedName(SERIALIZED_NAME_CAN_VIEW_ACTION_LOGS)
  private Boolean canViewActionLogs;

  public static final String SERIALIZED_NAME_CREATED_AT = "created_at";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private String createdAt;

  public static final String SERIALIZED_NAME_CREATED_AT_AGE = "created_at_age";
  @SerializedName(SERIALIZED_NAME_CREATED_AT_AGE)
  private BigDecimal createdAtAge;

  public static final String SERIALIZED_NAME_DAYS_VISITED = "days_visited";
  @SerializedName(SERIALIZED_NAME_DAYS_VISITED)
  private Integer daysVisited;

  public static final String SERIALIZED_NAME_EXTERNAL_IDS = "external_ids";
  @SerializedName(SERIALIZED_NAME_EXTERNAL_IDS)
  private Object externalIds;

  public static final String SERIALIZED_NAME_FLAG_LEVEL = "flag_level";
  @SerializedName(SERIALIZED_NAME_FLAG_LEVEL)
  private Integer flagLevel;

  public static final String SERIALIZED_NAME_FLAGS_GIVEN_COUNT = "flags_given_count";
  @SerializedName(SERIALIZED_NAME_FLAGS_GIVEN_COUNT)
  private Integer flagsGivenCount;

  public static final String SERIALIZED_NAME_FLAGS_RECEIVED_COUNT = "flags_received_count";
  @SerializedName(SERIALIZED_NAME_FLAGS_RECEIVED_COUNT)
  private Integer flagsReceivedCount;

  public static final String SERIALIZED_NAME_FULL_SUSPEND_REASON = "full_suspend_reason";
  @SerializedName(SERIALIZED_NAME_FULL_SUSPEND_REASON)
  private String fullSuspendReason;

  public static final String SERIALIZED_NAME_GROUPS = "groups";
  @SerializedName(SERIALIZED_NAME_GROUPS)
  private List<AdminGetUser200ResponseGroupsInner> groups = new ArrayList<>();

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_IP_ADDRESS = "ip_address";
  @SerializedName(SERIALIZED_NAME_IP_ADDRESS)
  private String ipAddress;

  public static final String SERIALIZED_NAME_LAST_EMAILED_AGE = "last_emailed_age";
  @SerializedName(SERIALIZED_NAME_LAST_EMAILED_AGE)
  private BigDecimal lastEmailedAge;

  public static final String SERIALIZED_NAME_LAST_EMAILED_AT = "last_emailed_at";
  @SerializedName(SERIALIZED_NAME_LAST_EMAILED_AT)
  private String lastEmailedAt;

  public static final String SERIALIZED_NAME_LAST_SEEN_AGE = "last_seen_age";
  @SerializedName(SERIALIZED_NAME_LAST_SEEN_AGE)
  private BigDecimal lastSeenAge;

  public static final String SERIALIZED_NAME_LAST_SEEN_AT = "last_seen_at";
  @SerializedName(SERIALIZED_NAME_LAST_SEEN_AT)
  private String lastSeenAt;

  public static final String SERIALIZED_NAME_LIKE_COUNT = "like_count";
  @SerializedName(SERIALIZED_NAME_LIKE_COUNT)
  private Integer likeCount;

  public static final String SERIALIZED_NAME_LIKE_GIVEN_COUNT = "like_given_count";
  @SerializedName(SERIALIZED_NAME_LIKE_GIVEN_COUNT)
  private Integer likeGivenCount;

  public static final String SERIALIZED_NAME_MANUAL_LOCKED_TRUST_LEVEL = "manual_locked_trust_level";
  @SerializedName(SERIALIZED_NAME_MANUAL_LOCKED_TRUST_LEVEL)
  private String manualLockedTrustLevel;

  public static final String SERIALIZED_NAME_MODERATOR = "moderator";
  @SerializedName(SERIALIZED_NAME_MODERATOR)
  private Boolean moderator;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_NEXT_PENALTY = "next_penalty";
  @SerializedName(SERIALIZED_NAME_NEXT_PENALTY)
  private String nextPenalty;

  public static final String SERIALIZED_NAME_PENALTY_COUNTS = "penalty_counts";
  @SerializedName(SERIALIZED_NAME_PENALTY_COUNTS)
  private AdminGetUser200ResponsePenaltyCounts penaltyCounts;

  public static final String SERIALIZED_NAME_POST_COUNT = "post_count";
  @SerializedName(SERIALIZED_NAME_POST_COUNT)
  private Integer postCount;

  public static final String SERIALIZED_NAME_POST_EDITS_COUNT = "post_edits_count";
  @SerializedName(SERIALIZED_NAME_POST_EDITS_COUNT)
  private Integer postEditsCount;

  public static final String SERIALIZED_NAME_POSTS_READ_COUNT = "posts_read_count";
  @SerializedName(SERIALIZED_NAME_POSTS_READ_COUNT)
  private Integer postsReadCount;

  public static final String SERIALIZED_NAME_PRIMARY_GROUP_ID = "primary_group_id";
  @SerializedName(SERIALIZED_NAME_PRIMARY_GROUP_ID)
  private String primaryGroupId;

  public static final String SERIALIZED_NAME_PRIVATE_TOPICS_COUNT = "private_topics_count";
  @SerializedName(SERIALIZED_NAME_PRIVATE_TOPICS_COUNT)
  private Integer privateTopicsCount;

  public static final String SERIALIZED_NAME_REGISTRATION_IP_ADDRESS = "registration_ip_address";
  @SerializedName(SERIALIZED_NAME_REGISTRATION_IP_ADDRESS)
  private String registrationIpAddress;

  public static final String SERIALIZED_NAME_RESET_BOUNCE_SCORE_AFTER = "reset_bounce_score_after";
  @SerializedName(SERIALIZED_NAME_RESET_BOUNCE_SCORE_AFTER)
  private String resetBounceScoreAfter;

  public static final String SERIALIZED_NAME_SILENCE_REASON = "silence_reason";
  @SerializedName(SERIALIZED_NAME_SILENCE_REASON)
  private String silenceReason;

  public static final String SERIALIZED_NAME_SILENCED_BY = "silenced_by";
  @SerializedName(SERIALIZED_NAME_SILENCED_BY)
  private String silencedBy;

  public static final String SERIALIZED_NAME_SINGLE_SIGN_ON_RECORD = "single_sign_on_record";
  @SerializedName(SERIALIZED_NAME_SINGLE_SIGN_ON_RECORD)
  private String singleSignOnRecord;

  public static final String SERIALIZED_NAME_STAGED = "staged";
  @SerializedName(SERIALIZED_NAME_STAGED)
  private Boolean staged;

  public static final String SERIALIZED_NAME_SUSPENDED_BY = "suspended_by";
  @SerializedName(SERIALIZED_NAME_SUSPENDED_BY)
  private String suspendedBy;

  public static final String SERIALIZED_NAME_TIME_READ = "time_read";
  @SerializedName(SERIALIZED_NAME_TIME_READ)
  private Integer timeRead;

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_TL3_REQUIREMENTS = "tl3_requirements";
  @SerializedName(SERIALIZED_NAME_TL3_REQUIREMENTS)
  private AdminGetUser200ResponseTl3Requirements tl3Requirements;

  public static final String SERIALIZED_NAME_TOPIC_COUNT = "topic_count";
  @SerializedName(SERIALIZED_NAME_TOPIC_COUNT)
  private Integer topicCount;

  public static final String SERIALIZED_NAME_TOPICS_ENTERED = "topics_entered";
  @SerializedName(SERIALIZED_NAME_TOPICS_ENTERED)
  private Integer topicsEntered;

  public static final String SERIALIZED_NAME_TRUST_LEVEL = "trust_level";
  @SerializedName(SERIALIZED_NAME_TRUST_LEVEL)
  private Integer trustLevel;

  public static final String SERIALIZED_NAME_USERNAME = "username";
  @SerializedName(SERIALIZED_NAME_USERNAME)
  private String username;

  public static final String SERIALIZED_NAME_WARNINGS_RECEIVED_COUNT = "warnings_received_count";
  @SerializedName(SERIALIZED_NAME_WARNINGS_RECEIVED_COUNT)
  private Integer warningsReceivedCount;

  public AdminGetUser200Response() {
  }

  public AdminGetUser200Response active(Boolean active) {
    this.active = active;
    return this;
  }

  /**
   * Get active
   * @return active
   */
  @javax.annotation.Nonnull
  public Boolean getActive() {
    return active;
  }

  public void setActive(Boolean active) {
    this.active = active;
  }


  public AdminGetUser200Response admin(Boolean admin) {
    this.admin = admin;
    return this;
  }

  /**
   * Get admin
   * @return admin
   */
  @javax.annotation.Nonnull
  public Boolean getAdmin() {
    return admin;
  }

  public void setAdmin(Boolean admin) {
    this.admin = admin;
  }


  public AdminGetUser200Response apiKeyCount(Integer apiKeyCount) {
    this.apiKeyCount = apiKeyCount;
    return this;
  }

  /**
   * Get apiKeyCount
   * @return apiKeyCount
   */
  @javax.annotation.Nonnull
  public Integer getApiKeyCount() {
    return apiKeyCount;
  }

  public void setApiKeyCount(Integer apiKeyCount) {
    this.apiKeyCount = apiKeyCount;
  }


  public AdminGetUser200Response approvedBy(AdminGetUser200ResponseApprovedBy approvedBy) {
    this.approvedBy = approvedBy;
    return this;
  }

  /**
   * Get approvedBy
   * @return approvedBy
   */
  @javax.annotation.Nonnull
  public AdminGetUser200ResponseApprovedBy getApprovedBy() {
    return approvedBy;
  }

  public void setApprovedBy(AdminGetUser200ResponseApprovedBy approvedBy) {
    this.approvedBy = approvedBy;
  }


  public AdminGetUser200Response associatedAccounts(List<Object> associatedAccounts) {
    this.associatedAccounts = associatedAccounts;
    return this;
  }

  public AdminGetUser200Response addAssociatedAccountsItem(Object associatedAccountsItem) {
    if (this.associatedAccounts == null) {
      this.associatedAccounts = new ArrayList<>();
    }
    this.associatedAccounts.add(associatedAccountsItem);
    return this;
  }

  /**
   * Get associatedAccounts
   * @return associatedAccounts
   */
  @javax.annotation.Nullable
  public List<Object> getAssociatedAccounts() {
    return associatedAccounts;
  }

  public void setAssociatedAccounts(List<Object> associatedAccounts) {
    this.associatedAccounts = associatedAccounts;
  }


  public AdminGetUser200Response avatarTemplate(String avatarTemplate) {
    this.avatarTemplate = avatarTemplate;
    return this;
  }

  /**
   * Get avatarTemplate
   * @return avatarTemplate
   */
  @javax.annotation.Nonnull
  public String getAvatarTemplate() {
    return avatarTemplate;
  }

  public void setAvatarTemplate(String avatarTemplate) {
    this.avatarTemplate = avatarTemplate;
  }


  public AdminGetUser200Response badgeCount(Integer badgeCount) {
    this.badgeCount = badgeCount;
    return this;
  }

  /**
   * Get badgeCount
   * @return badgeCount
   */
  @javax.annotation.Nonnull
  public Integer getBadgeCount() {
    return badgeCount;
  }

  public void setBadgeCount(Integer badgeCount) {
    this.badgeCount = badgeCount;
  }


  public AdminGetUser200Response bounceScore(Integer bounceScore) {
    this.bounceScore = bounceScore;
    return this;
  }

  /**
   * Get bounceScore
   * @return bounceScore
   */
  @javax.annotation.Nullable
  public Integer getBounceScore() {
    return bounceScore;
  }

  public void setBounceScore(Integer bounceScore) {
    this.bounceScore = bounceScore;
  }


  public AdminGetUser200Response canActivate(Boolean canActivate) {
    this.canActivate = canActivate;
    return this;
  }

  /**
   * Get canActivate
   * @return canActivate
   */
  @javax.annotation.Nonnull
  public Boolean getCanActivate() {
    return canActivate;
  }

  public void setCanActivate(Boolean canActivate) {
    this.canActivate = canActivate;
  }


  public AdminGetUser200Response canBeAnonymized(Boolean canBeAnonymized) {
    this.canBeAnonymized = canBeAnonymized;
    return this;
  }

  /**
   * Get canBeAnonymized
   * @return canBeAnonymized
   */
  @javax.annotation.Nonnull
  public Boolean getCanBeAnonymized() {
    return canBeAnonymized;
  }

  public void setCanBeAnonymized(Boolean canBeAnonymized) {
    this.canBeAnonymized = canBeAnonymized;
  }


  public AdminGetUser200Response canBeDeleted(Boolean canBeDeleted) {
    this.canBeDeleted = canBeDeleted;
    return this;
  }

  /**
   * Get canBeDeleted
   * @return canBeDeleted
   */
  @javax.annotation.Nonnull
  public Boolean getCanBeDeleted() {
    return canBeDeleted;
  }

  public void setCanBeDeleted(Boolean canBeDeleted) {
    this.canBeDeleted = canBeDeleted;
  }


  public AdminGetUser200Response canBeMerged(Boolean canBeMerged) {
    this.canBeMerged = canBeMerged;
    return this;
  }

  /**
   * Get canBeMerged
   * @return canBeMerged
   */
  @javax.annotation.Nonnull
  public Boolean getCanBeMerged() {
    return canBeMerged;
  }

  public void setCanBeMerged(Boolean canBeMerged) {
    this.canBeMerged = canBeMerged;
  }


  public AdminGetUser200Response canDeactivate(Boolean canDeactivate) {
    this.canDeactivate = canDeactivate;
    return this;
  }

  /**
   * Get canDeactivate
   * @return canDeactivate
   */
  @javax.annotation.Nonnull
  public Boolean getCanDeactivate() {
    return canDeactivate;
  }

  public void setCanDeactivate(Boolean canDeactivate) {
    this.canDeactivate = canDeactivate;
  }


  public AdminGetUser200Response canDeleteAllPosts(Boolean canDeleteAllPosts) {
    this.canDeleteAllPosts = canDeleteAllPosts;
    return this;
  }

  /**
   * Get canDeleteAllPosts
   * @return canDeleteAllPosts
   */
  @javax.annotation.Nonnull
  public Boolean getCanDeleteAllPosts() {
    return canDeleteAllPosts;
  }

  public void setCanDeleteAllPosts(Boolean canDeleteAllPosts) {
    this.canDeleteAllPosts = canDeleteAllPosts;
  }


  public AdminGetUser200Response canDeleteSsoRecord(Boolean canDeleteSsoRecord) {
    this.canDeleteSsoRecord = canDeleteSsoRecord;
    return this;
  }

  /**
   * Get canDeleteSsoRecord
   * @return canDeleteSsoRecord
   */
  @javax.annotation.Nonnull
  public Boolean getCanDeleteSsoRecord() {
    return canDeleteSsoRecord;
  }

  public void setCanDeleteSsoRecord(Boolean canDeleteSsoRecord) {
    this.canDeleteSsoRecord = canDeleteSsoRecord;
  }


  public AdminGetUser200Response canDisableSecondFactor(Boolean canDisableSecondFactor) {
    this.canDisableSecondFactor = canDisableSecondFactor;
    return this;
  }

  /**
   * Get canDisableSecondFactor
   * @return canDisableSecondFactor
   */
  @javax.annotation.Nonnull
  public Boolean getCanDisableSecondFactor() {
    return canDisableSecondFactor;
  }

  public void setCanDisableSecondFactor(Boolean canDisableSecondFactor) {
    this.canDisableSecondFactor = canDisableSecondFactor;
  }


  public AdminGetUser200Response canGrantAdmin(Boolean canGrantAdmin) {
    this.canGrantAdmin = canGrantAdmin;
    return this;
  }

  /**
   * Get canGrantAdmin
   * @return canGrantAdmin
   */
  @javax.annotation.Nonnull
  public Boolean getCanGrantAdmin() {
    return canGrantAdmin;
  }

  public void setCanGrantAdmin(Boolean canGrantAdmin) {
    this.canGrantAdmin = canGrantAdmin;
  }


  public AdminGetUser200Response canGrantModeration(Boolean canGrantModeration) {
    this.canGrantModeration = canGrantModeration;
    return this;
  }

  /**
   * Get canGrantModeration
   * @return canGrantModeration
   */
  @javax.annotation.Nonnull
  public Boolean getCanGrantModeration() {
    return canGrantModeration;
  }

  public void setCanGrantModeration(Boolean canGrantModeration) {
    this.canGrantModeration = canGrantModeration;
  }


  public AdminGetUser200Response canImpersonate(Boolean canImpersonate) {
    this.canImpersonate = canImpersonate;
    return this;
  }

  /**
   * Get canImpersonate
   * @return canImpersonate
   */
  @javax.annotation.Nonnull
  public Boolean getCanImpersonate() {
    return canImpersonate;
  }

  public void setCanImpersonate(Boolean canImpersonate) {
    this.canImpersonate = canImpersonate;
  }


  public AdminGetUser200Response canRevokeAdmin(Boolean canRevokeAdmin) {
    this.canRevokeAdmin = canRevokeAdmin;
    return this;
  }

  /**
   * Get canRevokeAdmin
   * @return canRevokeAdmin
   */
  @javax.annotation.Nonnull
  public Boolean getCanRevokeAdmin() {
    return canRevokeAdmin;
  }

  public void setCanRevokeAdmin(Boolean canRevokeAdmin) {
    this.canRevokeAdmin = canRevokeAdmin;
  }


  public AdminGetUser200Response canRevokeModeration(Boolean canRevokeModeration) {
    this.canRevokeModeration = canRevokeModeration;
    return this;
  }

  /**
   * Get canRevokeModeration
   * @return canRevokeModeration
   */
  @javax.annotation.Nonnull
  public Boolean getCanRevokeModeration() {
    return canRevokeModeration;
  }

  public void setCanRevokeModeration(Boolean canRevokeModeration) {
    this.canRevokeModeration = canRevokeModeration;
  }


  public AdminGetUser200Response canSendActivationEmail(Boolean canSendActivationEmail) {
    this.canSendActivationEmail = canSendActivationEmail;
    return this;
  }

  /**
   * Get canSendActivationEmail
   * @return canSendActivationEmail
   */
  @javax.annotation.Nonnull
  public Boolean getCanSendActivationEmail() {
    return canSendActivationEmail;
  }

  public void setCanSendActivationEmail(Boolean canSendActivationEmail) {
    this.canSendActivationEmail = canSendActivationEmail;
  }


  public AdminGetUser200Response canViewActionLogs(Boolean canViewActionLogs) {
    this.canViewActionLogs = canViewActionLogs;
    return this;
  }

  /**
   * Get canViewActionLogs
   * @return canViewActionLogs
   */
  @javax.annotation.Nonnull
  public Boolean getCanViewActionLogs() {
    return canViewActionLogs;
  }

  public void setCanViewActionLogs(Boolean canViewActionLogs) {
    this.canViewActionLogs = canViewActionLogs;
  }


  public AdminGetUser200Response createdAt(String createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Get createdAt
   * @return createdAt
   */
  @javax.annotation.Nonnull
  public String getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(String createdAt) {
    this.createdAt = createdAt;
  }


  public AdminGetUser200Response createdAtAge(BigDecimal createdAtAge) {
    this.createdAtAge = createdAtAge;
    return this;
  }

  /**
   * Get createdAtAge
   * @return createdAtAge
   */
  @javax.annotation.Nullable
  public BigDecimal getCreatedAtAge() {
    return createdAtAge;
  }

  public void setCreatedAtAge(BigDecimal createdAtAge) {
    this.createdAtAge = createdAtAge;
  }


  public AdminGetUser200Response daysVisited(Integer daysVisited) {
    this.daysVisited = daysVisited;
    return this;
  }

  /**
   * Get daysVisited
   * @return daysVisited
   */
  @javax.annotation.Nonnull
  public Integer getDaysVisited() {
    return daysVisited;
  }

  public void setDaysVisited(Integer daysVisited) {
    this.daysVisited = daysVisited;
  }


  public AdminGetUser200Response externalIds(Object externalIds) {
    this.externalIds = externalIds;
    return this;
  }

  /**
   * Get externalIds
   * @return externalIds
   */
  @javax.annotation.Nonnull
  public Object getExternalIds() {
    return externalIds;
  }

  public void setExternalIds(Object externalIds) {
    this.externalIds = externalIds;
  }


  public AdminGetUser200Response flagLevel(Integer flagLevel) {
    this.flagLevel = flagLevel;
    return this;
  }

  /**
   * Get flagLevel
   * @return flagLevel
   */
  @javax.annotation.Nonnull
  public Integer getFlagLevel() {
    return flagLevel;
  }

  public void setFlagLevel(Integer flagLevel) {
    this.flagLevel = flagLevel;
  }


  public AdminGetUser200Response flagsGivenCount(Integer flagsGivenCount) {
    this.flagsGivenCount = flagsGivenCount;
    return this;
  }

  /**
   * Get flagsGivenCount
   * @return flagsGivenCount
   */
  @javax.annotation.Nonnull
  public Integer getFlagsGivenCount() {
    return flagsGivenCount;
  }

  public void setFlagsGivenCount(Integer flagsGivenCount) {
    this.flagsGivenCount = flagsGivenCount;
  }


  public AdminGetUser200Response flagsReceivedCount(Integer flagsReceivedCount) {
    this.flagsReceivedCount = flagsReceivedCount;
    return this;
  }

  /**
   * Get flagsReceivedCount
   * @return flagsReceivedCount
   */
  @javax.annotation.Nonnull
  public Integer getFlagsReceivedCount() {
    return flagsReceivedCount;
  }

  public void setFlagsReceivedCount(Integer flagsReceivedCount) {
    this.flagsReceivedCount = flagsReceivedCount;
  }


  public AdminGetUser200Response fullSuspendReason(String fullSuspendReason) {
    this.fullSuspendReason = fullSuspendReason;
    return this;
  }

  /**
   * Get fullSuspendReason
   * @return fullSuspendReason
   */
  @javax.annotation.Nullable
  public String getFullSuspendReason() {
    return fullSuspendReason;
  }

  public void setFullSuspendReason(String fullSuspendReason) {
    this.fullSuspendReason = fullSuspendReason;
  }


  public AdminGetUser200Response groups(List<AdminGetUser200ResponseGroupsInner> groups) {
    this.groups = groups;
    return this;
  }

  public AdminGetUser200Response addGroupsItem(AdminGetUser200ResponseGroupsInner groupsItem) {
    if (this.groups == null) {
      this.groups = new ArrayList<>();
    }
    this.groups.add(groupsItem);
    return this;
  }

  /**
   * Get groups
   * @return groups
   */
  @javax.annotation.Nonnull
  public List<AdminGetUser200ResponseGroupsInner> getGroups() {
    return groups;
  }

  public void setGroups(List<AdminGetUser200ResponseGroupsInner> groups) {
    this.groups = groups;
  }


  public AdminGetUser200Response id(Integer id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nonnull
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }


  public AdminGetUser200Response ipAddress(String ipAddress) {
    this.ipAddress = ipAddress;
    return this;
  }

  /**
   * Get ipAddress
   * @return ipAddress
   */
  @javax.annotation.Nonnull
  public String getIpAddress() {
    return ipAddress;
  }

  public void setIpAddress(String ipAddress) {
    this.ipAddress = ipAddress;
  }


  public AdminGetUser200Response lastEmailedAge(BigDecimal lastEmailedAge) {
    this.lastEmailedAge = lastEmailedAge;
    return this;
  }

  /**
   * Get lastEmailedAge
   * @return lastEmailedAge
   */
  @javax.annotation.Nullable
  public BigDecimal getLastEmailedAge() {
    return lastEmailedAge;
  }

  public void setLastEmailedAge(BigDecimal lastEmailedAge) {
    this.lastEmailedAge = lastEmailedAge;
  }


  public AdminGetUser200Response lastEmailedAt(String lastEmailedAt) {
    this.lastEmailedAt = lastEmailedAt;
    return this;
  }

  /**
   * Get lastEmailedAt
   * @return lastEmailedAt
   */
  @javax.annotation.Nullable
  public String getLastEmailedAt() {
    return lastEmailedAt;
  }

  public void setLastEmailedAt(String lastEmailedAt) {
    this.lastEmailedAt = lastEmailedAt;
  }


  public AdminGetUser200Response lastSeenAge(BigDecimal lastSeenAge) {
    this.lastSeenAge = lastSeenAge;
    return this;
  }

  /**
   * Get lastSeenAge
   * @return lastSeenAge
   */
  @javax.annotation.Nullable
  public BigDecimal getLastSeenAge() {
    return lastSeenAge;
  }

  public void setLastSeenAge(BigDecimal lastSeenAge) {
    this.lastSeenAge = lastSeenAge;
  }


  public AdminGetUser200Response lastSeenAt(String lastSeenAt) {
    this.lastSeenAt = lastSeenAt;
    return this;
  }

  /**
   * Get lastSeenAt
   * @return lastSeenAt
   */
  @javax.annotation.Nullable
  public String getLastSeenAt() {
    return lastSeenAt;
  }

  public void setLastSeenAt(String lastSeenAt) {
    this.lastSeenAt = lastSeenAt;
  }


  public AdminGetUser200Response likeCount(Integer likeCount) {
    this.likeCount = likeCount;
    return this;
  }

  /**
   * Get likeCount
   * @return likeCount
   */
  @javax.annotation.Nonnull
  public Integer getLikeCount() {
    return likeCount;
  }

  public void setLikeCount(Integer likeCount) {
    this.likeCount = likeCount;
  }


  public AdminGetUser200Response likeGivenCount(Integer likeGivenCount) {
    this.likeGivenCount = likeGivenCount;
    return this;
  }

  /**
   * Get likeGivenCount
   * @return likeGivenCount
   */
  @javax.annotation.Nonnull
  public Integer getLikeGivenCount() {
    return likeGivenCount;
  }

  public void setLikeGivenCount(Integer likeGivenCount) {
    this.likeGivenCount = likeGivenCount;
  }


  public AdminGetUser200Response manualLockedTrustLevel(String manualLockedTrustLevel) {
    this.manualLockedTrustLevel = manualLockedTrustLevel;
    return this;
  }

  /**
   * Get manualLockedTrustLevel
   * @return manualLockedTrustLevel
   */
  @javax.annotation.Nullable
  public String getManualLockedTrustLevel() {
    return manualLockedTrustLevel;
  }

  public void setManualLockedTrustLevel(String manualLockedTrustLevel) {
    this.manualLockedTrustLevel = manualLockedTrustLevel;
  }


  public AdminGetUser200Response moderator(Boolean moderator) {
    this.moderator = moderator;
    return this;
  }

  /**
   * Get moderator
   * @return moderator
   */
  @javax.annotation.Nonnull
  public Boolean getModerator() {
    return moderator;
  }

  public void setModerator(Boolean moderator) {
    this.moderator = moderator;
  }


  public AdminGetUser200Response name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public AdminGetUser200Response nextPenalty(String nextPenalty) {
    this.nextPenalty = nextPenalty;
    return this;
  }

  /**
   * Get nextPenalty
   * @return nextPenalty
   */
  @javax.annotation.Nullable
  public String getNextPenalty() {
    return nextPenalty;
  }

  public void setNextPenalty(String nextPenalty) {
    this.nextPenalty = nextPenalty;
  }


  public AdminGetUser200Response penaltyCounts(AdminGetUser200ResponsePenaltyCounts penaltyCounts) {
    this.penaltyCounts = penaltyCounts;
    return this;
  }

  /**
   * Get penaltyCounts
   * @return penaltyCounts
   */
  @javax.annotation.Nullable
  public AdminGetUser200ResponsePenaltyCounts getPenaltyCounts() {
    return penaltyCounts;
  }

  public void setPenaltyCounts(AdminGetUser200ResponsePenaltyCounts penaltyCounts) {
    this.penaltyCounts = penaltyCounts;
  }


  public AdminGetUser200Response postCount(Integer postCount) {
    this.postCount = postCount;
    return this;
  }

  /**
   * Get postCount
   * @return postCount
   */
  @javax.annotation.Nonnull
  public Integer getPostCount() {
    return postCount;
  }

  public void setPostCount(Integer postCount) {
    this.postCount = postCount;
  }


  public AdminGetUser200Response postEditsCount(Integer postEditsCount) {
    this.postEditsCount = postEditsCount;
    return this;
  }

  /**
   * Get postEditsCount
   * @return postEditsCount
   */
  @javax.annotation.Nullable
  public Integer getPostEditsCount() {
    return postEditsCount;
  }

  public void setPostEditsCount(Integer postEditsCount) {
    this.postEditsCount = postEditsCount;
  }


  public AdminGetUser200Response postsReadCount(Integer postsReadCount) {
    this.postsReadCount = postsReadCount;
    return this;
  }

  /**
   * Get postsReadCount
   * @return postsReadCount
   */
  @javax.annotation.Nonnull
  public Integer getPostsReadCount() {
    return postsReadCount;
  }

  public void setPostsReadCount(Integer postsReadCount) {
    this.postsReadCount = postsReadCount;
  }


  public AdminGetUser200Response primaryGroupId(String primaryGroupId) {
    this.primaryGroupId = primaryGroupId;
    return this;
  }

  /**
   * Get primaryGroupId
   * @return primaryGroupId
   */
  @javax.annotation.Nullable
  public String getPrimaryGroupId() {
    return primaryGroupId;
  }

  public void setPrimaryGroupId(String primaryGroupId) {
    this.primaryGroupId = primaryGroupId;
  }


  public AdminGetUser200Response privateTopicsCount(Integer privateTopicsCount) {
    this.privateTopicsCount = privateTopicsCount;
    return this;
  }

  /**
   * Get privateTopicsCount
   * @return privateTopicsCount
   */
  @javax.annotation.Nonnull
  public Integer getPrivateTopicsCount() {
    return privateTopicsCount;
  }

  public void setPrivateTopicsCount(Integer privateTopicsCount) {
    this.privateTopicsCount = privateTopicsCount;
  }


  public AdminGetUser200Response registrationIpAddress(String registrationIpAddress) {
    this.registrationIpAddress = registrationIpAddress;
    return this;
  }

  /**
   * Get registrationIpAddress
   * @return registrationIpAddress
   */
  @javax.annotation.Nullable
  public String getRegistrationIpAddress() {
    return registrationIpAddress;
  }

  public void setRegistrationIpAddress(String registrationIpAddress) {
    this.registrationIpAddress = registrationIpAddress;
  }


  public AdminGetUser200Response resetBounceScoreAfter(String resetBounceScoreAfter) {
    this.resetBounceScoreAfter = resetBounceScoreAfter;
    return this;
  }

  /**
   * Get resetBounceScoreAfter
   * @return resetBounceScoreAfter
   */
  @javax.annotation.Nullable
  public String getResetBounceScoreAfter() {
    return resetBounceScoreAfter;
  }

  public void setResetBounceScoreAfter(String resetBounceScoreAfter) {
    this.resetBounceScoreAfter = resetBounceScoreAfter;
  }


  public AdminGetUser200Response silenceReason(String silenceReason) {
    this.silenceReason = silenceReason;
    return this;
  }

  /**
   * Get silenceReason
   * @return silenceReason
   */
  @javax.annotation.Nullable
  public String getSilenceReason() {
    return silenceReason;
  }

  public void setSilenceReason(String silenceReason) {
    this.silenceReason = silenceReason;
  }


  public AdminGetUser200Response silencedBy(String silencedBy) {
    this.silencedBy = silencedBy;
    return this;
  }

  /**
   * Get silencedBy
   * @return silencedBy
   */
  @javax.annotation.Nullable
  public String getSilencedBy() {
    return silencedBy;
  }

  public void setSilencedBy(String silencedBy) {
    this.silencedBy = silencedBy;
  }


  public AdminGetUser200Response singleSignOnRecord(String singleSignOnRecord) {
    this.singleSignOnRecord = singleSignOnRecord;
    return this;
  }

  /**
   * Get singleSignOnRecord
   * @return singleSignOnRecord
   */
  @javax.annotation.Nullable
  public String getSingleSignOnRecord() {
    return singleSignOnRecord;
  }

  public void setSingleSignOnRecord(String singleSignOnRecord) {
    this.singleSignOnRecord = singleSignOnRecord;
  }


  public AdminGetUser200Response staged(Boolean staged) {
    this.staged = staged;
    return this;
  }

  /**
   * Get staged
   * @return staged
   */
  @javax.annotation.Nonnull
  public Boolean getStaged() {
    return staged;
  }

  public void setStaged(Boolean staged) {
    this.staged = staged;
  }


  public AdminGetUser200Response suspendedBy(String suspendedBy) {
    this.suspendedBy = suspendedBy;
    return this;
  }

  /**
   * Get suspendedBy
   * @return suspendedBy
   */
  @javax.annotation.Nullable
  public String getSuspendedBy() {
    return suspendedBy;
  }

  public void setSuspendedBy(String suspendedBy) {
    this.suspendedBy = suspendedBy;
  }


  public AdminGetUser200Response timeRead(Integer timeRead) {
    this.timeRead = timeRead;
    return this;
  }

  /**
   * Get timeRead
   * @return timeRead
   */
  @javax.annotation.Nonnull
  public Integer getTimeRead() {
    return timeRead;
  }

  public void setTimeRead(Integer timeRead) {
    this.timeRead = timeRead;
  }


  public AdminGetUser200Response title(String title) {
    this.title = title;
    return this;
  }

  /**
   * Get title
   * @return title
   */
  @javax.annotation.Nullable
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }


  public AdminGetUser200Response tl3Requirements(AdminGetUser200ResponseTl3Requirements tl3Requirements) {
    this.tl3Requirements = tl3Requirements;
    return this;
  }

  /**
   * Get tl3Requirements
   * @return tl3Requirements
   */
  @javax.annotation.Nullable
  public AdminGetUser200ResponseTl3Requirements getTl3Requirements() {
    return tl3Requirements;
  }

  public void setTl3Requirements(AdminGetUser200ResponseTl3Requirements tl3Requirements) {
    this.tl3Requirements = tl3Requirements;
  }


  public AdminGetUser200Response topicCount(Integer topicCount) {
    this.topicCount = topicCount;
    return this;
  }

  /**
   * Get topicCount
   * @return topicCount
   */
  @javax.annotation.Nonnull
  public Integer getTopicCount() {
    return topicCount;
  }

  public void setTopicCount(Integer topicCount) {
    this.topicCount = topicCount;
  }


  public AdminGetUser200Response topicsEntered(Integer topicsEntered) {
    this.topicsEntered = topicsEntered;
    return this;
  }

  /**
   * Get topicsEntered
   * @return topicsEntered
   */
  @javax.annotation.Nonnull
  public Integer getTopicsEntered() {
    return topicsEntered;
  }

  public void setTopicsEntered(Integer topicsEntered) {
    this.topicsEntered = topicsEntered;
  }


  public AdminGetUser200Response trustLevel(Integer trustLevel) {
    this.trustLevel = trustLevel;
    return this;
  }

  /**
   * Get trustLevel
   * @return trustLevel
   */
  @javax.annotation.Nonnull
  public Integer getTrustLevel() {
    return trustLevel;
  }

  public void setTrustLevel(Integer trustLevel) {
    this.trustLevel = trustLevel;
  }


  public AdminGetUser200Response username(String username) {
    this.username = username;
    return this;
  }

  /**
   * Get username
   * @return username
   */
  @javax.annotation.Nonnull
  public String getUsername() {
    return username;
  }

  public void setUsername(String username) {
    this.username = username;
  }


  public AdminGetUser200Response warningsReceivedCount(Integer warningsReceivedCount) {
    this.warningsReceivedCount = warningsReceivedCount;
    return this;
  }

  /**
   * Get warningsReceivedCount
   * @return warningsReceivedCount
   */
  @javax.annotation.Nonnull
  public Integer getWarningsReceivedCount() {
    return warningsReceivedCount;
  }

  public void setWarningsReceivedCount(Integer warningsReceivedCount) {
    this.warningsReceivedCount = warningsReceivedCount;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the AdminGetUser200Response instance itself
   */
  public AdminGetUser200Response putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AdminGetUser200Response adminGetUser200Response = (AdminGetUser200Response) o;
    return Objects.equals(this.active, adminGetUser200Response.active) &&
        Objects.equals(this.admin, adminGetUser200Response.admin) &&
        Objects.equals(this.apiKeyCount, adminGetUser200Response.apiKeyCount) &&
        Objects.equals(this.approvedBy, adminGetUser200Response.approvedBy) &&
        Objects.equals(this.associatedAccounts, adminGetUser200Response.associatedAccounts) &&
        Objects.equals(this.avatarTemplate, adminGetUser200Response.avatarTemplate) &&
        Objects.equals(this.badgeCount, adminGetUser200Response.badgeCount) &&
        Objects.equals(this.bounceScore, adminGetUser200Response.bounceScore) &&
        Objects.equals(this.canActivate, adminGetUser200Response.canActivate) &&
        Objects.equals(this.canBeAnonymized, adminGetUser200Response.canBeAnonymized) &&
        Objects.equals(this.canBeDeleted, adminGetUser200Response.canBeDeleted) &&
        Objects.equals(this.canBeMerged, adminGetUser200Response.canBeMerged) &&
        Objects.equals(this.canDeactivate, adminGetUser200Response.canDeactivate) &&
        Objects.equals(this.canDeleteAllPosts, adminGetUser200Response.canDeleteAllPosts) &&
        Objects.equals(this.canDeleteSsoRecord, adminGetUser200Response.canDeleteSsoRecord) &&
        Objects.equals(this.canDisableSecondFactor, adminGetUser200Response.canDisableSecondFactor) &&
        Objects.equals(this.canGrantAdmin, adminGetUser200Response.canGrantAdmin) &&
        Objects.equals(this.canGrantModeration, adminGetUser200Response.canGrantModeration) &&
        Objects.equals(this.canImpersonate, adminGetUser200Response.canImpersonate) &&
        Objects.equals(this.canRevokeAdmin, adminGetUser200Response.canRevokeAdmin) &&
        Objects.equals(this.canRevokeModeration, adminGetUser200Response.canRevokeModeration) &&
        Objects.equals(this.canSendActivationEmail, adminGetUser200Response.canSendActivationEmail) &&
        Objects.equals(this.canViewActionLogs, adminGetUser200Response.canViewActionLogs) &&
        Objects.equals(this.createdAt, adminGetUser200Response.createdAt) &&
        Objects.equals(this.createdAtAge, adminGetUser200Response.createdAtAge) &&
        Objects.equals(this.daysVisited, adminGetUser200Response.daysVisited) &&
        Objects.equals(this.externalIds, adminGetUser200Response.externalIds) &&
        Objects.equals(this.flagLevel, adminGetUser200Response.flagLevel) &&
        Objects.equals(this.flagsGivenCount, adminGetUser200Response.flagsGivenCount) &&
        Objects.equals(this.flagsReceivedCount, adminGetUser200Response.flagsReceivedCount) &&
        Objects.equals(this.fullSuspendReason, adminGetUser200Response.fullSuspendReason) &&
        Objects.equals(this.groups, adminGetUser200Response.groups) &&
        Objects.equals(this.id, adminGetUser200Response.id) &&
        Objects.equals(this.ipAddress, adminGetUser200Response.ipAddress) &&
        Objects.equals(this.lastEmailedAge, adminGetUser200Response.lastEmailedAge) &&
        Objects.equals(this.lastEmailedAt, adminGetUser200Response.lastEmailedAt) &&
        Objects.equals(this.lastSeenAge, adminGetUser200Response.lastSeenAge) &&
        Objects.equals(this.lastSeenAt, adminGetUser200Response.lastSeenAt) &&
        Objects.equals(this.likeCount, adminGetUser200Response.likeCount) &&
        Objects.equals(this.likeGivenCount, adminGetUser200Response.likeGivenCount) &&
        Objects.equals(this.manualLockedTrustLevel, adminGetUser200Response.manualLockedTrustLevel) &&
        Objects.equals(this.moderator, adminGetUser200Response.moderator) &&
        Objects.equals(this.name, adminGetUser200Response.name) &&
        Objects.equals(this.nextPenalty, adminGetUser200Response.nextPenalty) &&
        Objects.equals(this.penaltyCounts, adminGetUser200Response.penaltyCounts) &&
        Objects.equals(this.postCount, adminGetUser200Response.postCount) &&
        Objects.equals(this.postEditsCount, adminGetUser200Response.postEditsCount) &&
        Objects.equals(this.postsReadCount, adminGetUser200Response.postsReadCount) &&
        Objects.equals(this.primaryGroupId, adminGetUser200Response.primaryGroupId) &&
        Objects.equals(this.privateTopicsCount, adminGetUser200Response.privateTopicsCount) &&
        Objects.equals(this.registrationIpAddress, adminGetUser200Response.registrationIpAddress) &&
        Objects.equals(this.resetBounceScoreAfter, adminGetUser200Response.resetBounceScoreAfter) &&
        Objects.equals(this.silenceReason, adminGetUser200Response.silenceReason) &&
        Objects.equals(this.silencedBy, adminGetUser200Response.silencedBy) &&
        Objects.equals(this.singleSignOnRecord, adminGetUser200Response.singleSignOnRecord) &&
        Objects.equals(this.staged, adminGetUser200Response.staged) &&
        Objects.equals(this.suspendedBy, adminGetUser200Response.suspendedBy) &&
        Objects.equals(this.timeRead, adminGetUser200Response.timeRead) &&
        Objects.equals(this.title, adminGetUser200Response.title) &&
        Objects.equals(this.tl3Requirements, adminGetUser200Response.tl3Requirements) &&
        Objects.equals(this.topicCount, adminGetUser200Response.topicCount) &&
        Objects.equals(this.topicsEntered, adminGetUser200Response.topicsEntered) &&
        Objects.equals(this.trustLevel, adminGetUser200Response.trustLevel) &&
        Objects.equals(this.username, adminGetUser200Response.username) &&
        Objects.equals(this.warningsReceivedCount, adminGetUser200Response.warningsReceivedCount)&&
        Objects.equals(this.additionalProperties, adminGetUser200Response.additionalProperties);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(active, admin, apiKeyCount, approvedBy, associatedAccounts, avatarTemplate, badgeCount, bounceScore, canActivate, canBeAnonymized, canBeDeleted, canBeMerged, canDeactivate, canDeleteAllPosts, canDeleteSsoRecord, canDisableSecondFactor, canGrantAdmin, canGrantModeration, canImpersonate, canRevokeAdmin, canRevokeModeration, canSendActivationEmail, canViewActionLogs, createdAt, createdAtAge, daysVisited, externalIds, flagLevel, flagsGivenCount, flagsReceivedCount, fullSuspendReason, groups, id, ipAddress, lastEmailedAge, lastEmailedAt, lastSeenAge, lastSeenAt, likeCount, likeGivenCount, manualLockedTrustLevel, moderator, name, nextPenalty, penaltyCounts, postCount, postEditsCount, postsReadCount, primaryGroupId, privateTopicsCount, registrationIpAddress, resetBounceScoreAfter, silenceReason, silencedBy, singleSignOnRecord, staged, suspendedBy, timeRead, title, tl3Requirements, topicCount, topicsEntered, trustLevel, username, warningsReceivedCount, additionalProperties);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AdminGetUser200Response {\n");
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("    admin: ").append(toIndentedString(admin)).append("\n");
    sb.append("    apiKeyCount: ").append(toIndentedString(apiKeyCount)).append("\n");
    sb.append("    approvedBy: ").append(toIndentedString(approvedBy)).append("\n");
    sb.append("    associatedAccounts: ").append(toIndentedString(associatedAccounts)).append("\n");
    sb.append("    avatarTemplate: ").append(toIndentedString(avatarTemplate)).append("\n");
    sb.append("    badgeCount: ").append(toIndentedString(badgeCount)).append("\n");
    sb.append("    bounceScore: ").append(toIndentedString(bounceScore)).append("\n");
    sb.append("    canActivate: ").append(toIndentedString(canActivate)).append("\n");
    sb.append("    canBeAnonymized: ").append(toIndentedString(canBeAnonymized)).append("\n");
    sb.append("    canBeDeleted: ").append(toIndentedString(canBeDeleted)).append("\n");
    sb.append("    canBeMerged: ").append(toIndentedString(canBeMerged)).append("\n");
    sb.append("    canDeactivate: ").append(toIndentedString(canDeactivate)).append("\n");
    sb.append("    canDeleteAllPosts: ").append(toIndentedString(canDeleteAllPosts)).append("\n");
    sb.append("    canDeleteSsoRecord: ").append(toIndentedString(canDeleteSsoRecord)).append("\n");
    sb.append("    canDisableSecondFactor: ").append(toIndentedString(canDisableSecondFactor)).append("\n");
    sb.append("    canGrantAdmin: ").append(toIndentedString(canGrantAdmin)).append("\n");
    sb.append("    canGrantModeration: ").append(toIndentedString(canGrantModeration)).append("\n");
    sb.append("    canImpersonate: ").append(toIndentedString(canImpersonate)).append("\n");
    sb.append("    canRevokeAdmin: ").append(toIndentedString(canRevokeAdmin)).append("\n");
    sb.append("    canRevokeModeration: ").append(toIndentedString(canRevokeModeration)).append("\n");
    sb.append("    canSendActivationEmail: ").append(toIndentedString(canSendActivationEmail)).append("\n");
    sb.append("    canViewActionLogs: ").append(toIndentedString(canViewActionLogs)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    createdAtAge: ").append(toIndentedString(createdAtAge)).append("\n");
    sb.append("    daysVisited: ").append(toIndentedString(daysVisited)).append("\n");
    sb.append("    externalIds: ").append(toIndentedString(externalIds)).append("\n");
    sb.append("    flagLevel: ").append(toIndentedString(flagLevel)).append("\n");
    sb.append("    flagsGivenCount: ").append(toIndentedString(flagsGivenCount)).append("\n");
    sb.append("    flagsReceivedCount: ").append(toIndentedString(flagsReceivedCount)).append("\n");
    sb.append("    fullSuspendReason: ").append(toIndentedString(fullSuspendReason)).append("\n");
    sb.append("    groups: ").append(toIndentedString(groups)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    ipAddress: ").append(toIndentedString(ipAddress)).append("\n");
    sb.append("    lastEmailedAge: ").append(toIndentedString(lastEmailedAge)).append("\n");
    sb.append("    lastEmailedAt: ").append(toIndentedString(lastEmailedAt)).append("\n");
    sb.append("    lastSeenAge: ").append(toIndentedString(lastSeenAge)).append("\n");
    sb.append("    lastSeenAt: ").append(toIndentedString(lastSeenAt)).append("\n");
    sb.append("    likeCount: ").append(toIndentedString(likeCount)).append("\n");
    sb.append("    likeGivenCount: ").append(toIndentedString(likeGivenCount)).append("\n");
    sb.append("    manualLockedTrustLevel: ").append(toIndentedString(manualLockedTrustLevel)).append("\n");
    sb.append("    moderator: ").append(toIndentedString(moderator)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    nextPenalty: ").append(toIndentedString(nextPenalty)).append("\n");
    sb.append("    penaltyCounts: ").append(toIndentedString(penaltyCounts)).append("\n");
    sb.append("    postCount: ").append(toIndentedString(postCount)).append("\n");
    sb.append("    postEditsCount: ").append(toIndentedString(postEditsCount)).append("\n");
    sb.append("    postsReadCount: ").append(toIndentedString(postsReadCount)).append("\n");
    sb.append("    primaryGroupId: ").append(toIndentedString(primaryGroupId)).append("\n");
    sb.append("    privateTopicsCount: ").append(toIndentedString(privateTopicsCount)).append("\n");
    sb.append("    registrationIpAddress: ").append(toIndentedString(registrationIpAddress)).append("\n");
    sb.append("    resetBounceScoreAfter: ").append(toIndentedString(resetBounceScoreAfter)).append("\n");
    sb.append("    silenceReason: ").append(toIndentedString(silenceReason)).append("\n");
    sb.append("    silencedBy: ").append(toIndentedString(silencedBy)).append("\n");
    sb.append("    singleSignOnRecord: ").append(toIndentedString(singleSignOnRecord)).append("\n");
    sb.append("    staged: ").append(toIndentedString(staged)).append("\n");
    sb.append("    suspendedBy: ").append(toIndentedString(suspendedBy)).append("\n");
    sb.append("    timeRead: ").append(toIndentedString(timeRead)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    tl3Requirements: ").append(toIndentedString(tl3Requirements)).append("\n");
    sb.append("    topicCount: ").append(toIndentedString(topicCount)).append("\n");
    sb.append("    topicsEntered: ").append(toIndentedString(topicsEntered)).append("\n");
    sb.append("    trustLevel: ").append(toIndentedString(trustLevel)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("    warningsReceivedCount: ").append(toIndentedString(warningsReceivedCount)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("active");
    openapiFields.add("admin");
    openapiFields.add("api_key_count");
    openapiFields.add("approved_by");
    openapiFields.add("associated_accounts");
    openapiFields.add("avatar_template");
    openapiFields.add("badge_count");
    openapiFields.add("bounce_score");
    openapiFields.add("can_activate");
    openapiFields.add("can_be_anonymized");
    openapiFields.add("can_be_deleted");
    openapiFields.add("can_be_merged");
    openapiFields.add("can_deactivate");
    openapiFields.add("can_delete_all_posts");
    openapiFields.add("can_delete_sso_record");
    openapiFields.add("can_disable_second_factor");
    openapiFields.add("can_grant_admin");
    openapiFields.add("can_grant_moderation");
    openapiFields.add("can_impersonate");
    openapiFields.add("can_revoke_admin");
    openapiFields.add("can_revoke_moderation");
    openapiFields.add("can_send_activation_email");
    openapiFields.add("can_view_action_logs");
    openapiFields.add("created_at");
    openapiFields.add("created_at_age");
    openapiFields.add("days_visited");
    openapiFields.add("external_ids");
    openapiFields.add("flag_level");
    openapiFields.add("flags_given_count");
    openapiFields.add("flags_received_count");
    openapiFields.add("full_suspend_reason");
    openapiFields.add("groups");
    openapiFields.add("id");
    openapiFields.add("ip_address");
    openapiFields.add("last_emailed_age");
    openapiFields.add("last_emailed_at");
    openapiFields.add("last_seen_age");
    openapiFields.add("last_seen_at");
    openapiFields.add("like_count");
    openapiFields.add("like_given_count");
    openapiFields.add("manual_locked_trust_level");
    openapiFields.add("moderator");
    openapiFields.add("name");
    openapiFields.add("next_penalty");
    openapiFields.add("penalty_counts");
    openapiFields.add("post_count");
    openapiFields.add("post_edits_count");
    openapiFields.add("posts_read_count");
    openapiFields.add("primary_group_id");
    openapiFields.add("private_topics_count");
    openapiFields.add("registration_ip_address");
    openapiFields.add("reset_bounce_score_after");
    openapiFields.add("silence_reason");
    openapiFields.add("silenced_by");
    openapiFields.add("single_sign_on_record");
    openapiFields.add("staged");
    openapiFields.add("suspended_by");
    openapiFields.add("time_read");
    openapiFields.add("title");
    openapiFields.add("tl3_requirements");
    openapiFields.add("topic_count");
    openapiFields.add("topics_entered");
    openapiFields.add("trust_level");
    openapiFields.add("username");
    openapiFields.add("warnings_received_count");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("active");
    openapiRequiredFields.add("admin");
    openapiRequiredFields.add("api_key_count");
    openapiRequiredFields.add("approved_by");
    openapiRequiredFields.add("avatar_template");
    openapiRequiredFields.add("badge_count");
    openapiRequiredFields.add("bounce_score");
    openapiRequiredFields.add("can_activate");
    openapiRequiredFields.add("can_be_anonymized");
    openapiRequiredFields.add("can_be_deleted");
    openapiRequiredFields.add("can_be_merged");
    openapiRequiredFields.add("can_deactivate");
    openapiRequiredFields.add("can_delete_all_posts");
    openapiRequiredFields.add("can_delete_sso_record");
    openapiRequiredFields.add("can_disable_second_factor");
    openapiRequiredFields.add("can_grant_admin");
    openapiRequiredFields.add("can_grant_moderation");
    openapiRequiredFields.add("can_impersonate");
    openapiRequiredFields.add("can_revoke_admin");
    openapiRequiredFields.add("can_revoke_moderation");
    openapiRequiredFields.add("can_send_activation_email");
    openapiRequiredFields.add("can_view_action_logs");
    openapiRequiredFields.add("created_at");
    openapiRequiredFields.add("created_at_age");
    openapiRequiredFields.add("days_visited");
    openapiRequiredFields.add("external_ids");
    openapiRequiredFields.add("flag_level");
    openapiRequiredFields.add("flags_given_count");
    openapiRequiredFields.add("flags_received_count");
    openapiRequiredFields.add("full_suspend_reason");
    openapiRequiredFields.add("groups");
    openapiRequiredFields.add("id");
    openapiRequiredFields.add("ip_address");
    openapiRequiredFields.add("last_emailed_age");
    openapiRequiredFields.add("last_emailed_at");
    openapiRequiredFields.add("last_seen_age");
    openapiRequiredFields.add("last_seen_at");
    openapiRequiredFields.add("like_count");
    openapiRequiredFields.add("like_given_count");
    openapiRequiredFields.add("manual_locked_trust_level");
    openapiRequiredFields.add("moderator");
    openapiRequiredFields.add("name");
    openapiRequiredFields.add("post_count");
    openapiRequiredFields.add("posts_read_count");
    openapiRequiredFields.add("primary_group_id");
    openapiRequiredFields.add("private_topics_count");
    openapiRequiredFields.add("registration_ip_address");
    openapiRequiredFields.add("reset_bounce_score_after");
    openapiRequiredFields.add("silence_reason");
    openapiRequiredFields.add("silenced_by");
    openapiRequiredFields.add("single_sign_on_record");
    openapiRequiredFields.add("staged");
    openapiRequiredFields.add("suspended_by");
    openapiRequiredFields.add("time_read");
    openapiRequiredFields.add("title");
    openapiRequiredFields.add("topic_count");
    openapiRequiredFields.add("topics_entered");
    openapiRequiredFields.add("trust_level");
    openapiRequiredFields.add("username");
    openapiRequiredFields.add("warnings_received_count");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AdminGetUser200Response
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AdminGetUser200Response.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AdminGetUser200Response is not found in the empty JSON string", AdminGetUser200Response.openapiRequiredFields.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : AdminGetUser200Response.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the optional json data is an array if present
      if (jsonObj.get("associated_accounts") != null && !jsonObj.get("associated_accounts").isJsonNull() && !jsonObj.get("associated_accounts").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `associated_accounts` to be an array in the JSON string but got `%s`", jsonObj.get("associated_accounts").toString()));
      }
      if (!jsonObj.get("avatar_template").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `avatar_template` to be a primitive type in the JSON string but got `%s`", jsonObj.get("avatar_template").toString()));
      }
      if (!jsonObj.get("created_at").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `created_at` to be a primitive type in the JSON string but got `%s`", jsonObj.get("created_at").toString()));
      }
      if ((jsonObj.get("full_suspend_reason") != null && !jsonObj.get("full_suspend_reason").isJsonNull()) && !jsonObj.get("full_suspend_reason").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `full_suspend_reason` to be a primitive type in the JSON string but got `%s`", jsonObj.get("full_suspend_reason").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("groups") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("groups").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `groups` to be an array in the JSON string but got `%s`", jsonObj.get("groups").toString()));
      }
      if (!jsonObj.get("ip_address").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ip_address` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ip_address").toString()));
      }
      if ((jsonObj.get("last_emailed_at") != null && !jsonObj.get("last_emailed_at").isJsonNull()) && !jsonObj.get("last_emailed_at").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `last_emailed_at` to be a primitive type in the JSON string but got `%s`", jsonObj.get("last_emailed_at").toString()));
      }
      if ((jsonObj.get("last_seen_at") != null && !jsonObj.get("last_seen_at").isJsonNull()) && !jsonObj.get("last_seen_at").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `last_seen_at` to be a primitive type in the JSON string but got `%s`", jsonObj.get("last_seen_at").toString()));
      }
      if ((jsonObj.get("manual_locked_trust_level") != null && !jsonObj.get("manual_locked_trust_level").isJsonNull()) && !jsonObj.get("manual_locked_trust_level").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `manual_locked_trust_level` to be a primitive type in the JSON string but got `%s`", jsonObj.get("manual_locked_trust_level").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("next_penalty") != null && !jsonObj.get("next_penalty").isJsonNull()) && !jsonObj.get("next_penalty").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `next_penalty` to be a primitive type in the JSON string but got `%s`", jsonObj.get("next_penalty").toString()));
      }
      if ((jsonObj.get("primary_group_id") != null && !jsonObj.get("primary_group_id").isJsonNull()) && !jsonObj.get("primary_group_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `primary_group_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("primary_group_id").toString()));
      }
      if ((jsonObj.get("registration_ip_address") != null && !jsonObj.get("registration_ip_address").isJsonNull()) && !jsonObj.get("registration_ip_address").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `registration_ip_address` to be a primitive type in the JSON string but got `%s`", jsonObj.get("registration_ip_address").toString()));
      }
      if ((jsonObj.get("reset_bounce_score_after") != null && !jsonObj.get("reset_bounce_score_after").isJsonNull()) && !jsonObj.get("reset_bounce_score_after").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `reset_bounce_score_after` to be a primitive type in the JSON string but got `%s`", jsonObj.get("reset_bounce_score_after").toString()));
      }
      if ((jsonObj.get("silence_reason") != null && !jsonObj.get("silence_reason").isJsonNull()) && !jsonObj.get("silence_reason").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `silence_reason` to be a primitive type in the JSON string but got `%s`", jsonObj.get("silence_reason").toString()));
      }
      if ((jsonObj.get("silenced_by") != null && !jsonObj.get("silenced_by").isJsonNull()) && !jsonObj.get("silenced_by").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `silenced_by` to be a primitive type in the JSON string but got `%s`", jsonObj.get("silenced_by").toString()));
      }
      if ((jsonObj.get("single_sign_on_record") != null && !jsonObj.get("single_sign_on_record").isJsonNull()) && !jsonObj.get("single_sign_on_record").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `single_sign_on_record` to be a primitive type in the JSON string but got `%s`", jsonObj.get("single_sign_on_record").toString()));
      }
      if ((jsonObj.get("suspended_by") != null && !jsonObj.get("suspended_by").isJsonNull()) && !jsonObj.get("suspended_by").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `suspended_by` to be a primitive type in the JSON string but got `%s`", jsonObj.get("suspended_by").toString()));
      }
      if ((jsonObj.get("title") != null && !jsonObj.get("title").isJsonNull()) && !jsonObj.get("title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("title").toString()));
      }
      if (!jsonObj.get("username").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `username` to be a primitive type in the JSON string but got `%s`", jsonObj.get("username").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AdminGetUser200Response.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AdminGetUser200Response' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AdminGetUser200Response> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AdminGetUser200Response.class));

       return (TypeAdapter<T>) new TypeAdapter<AdminGetUser200Response>() {
           @Override
           public void write(JsonWriter out, AdminGetUser200Response value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additional properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   JsonElement jsonElement = gson.toJsonTree(entry.getValue());
                   if (jsonElement.isJsonArray()) {
                     obj.add(entry.getKey(), jsonElement.getAsJsonArray());
                   } else {
                     obj.add(entry.getKey(), jsonElement.getAsJsonObject());
                   }
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public AdminGetUser200Response read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             JsonObject jsonObj = jsonElement.getAsJsonObject();
             // store additional fields in the deserialized instance
             AdminGetUser200Response instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AdminGetUser200Response given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AdminGetUser200Response
   * @throws IOException if the JSON string is invalid with respect to AdminGetUser200Response
   */
  public static AdminGetUser200Response fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AdminGetUser200Response.class);
  }

  /**
   * Convert an instance of AdminGetUser200Response to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

