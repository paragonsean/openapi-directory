/*
 * Discourse API Documentation
 * This page contains the documentation on how to use Discourse through API calls.  > Note: For any endpoints not listed you can follow the [reverse engineer the Discourse API](https://meta.discourse.org/t/-/20576) guide to figure out how to use an API endpoint.  ### Request Content-Type  The Content-Type for POST and PUT requests can be set to `application/x-www-form-urlencoded`, `multipart/form-data`, or `application/json`.  ### Endpoint Names and Response Content-Type  Most API endpoints provide the same content as their HTML counterparts. For example the URL `/categories` serves a list of categories, the `/categories.json` API provides the same information in JSON format.  Instead of sending API requests to `/categories.json` you may also send them to `/categories` and add an `Accept: application/json` header to the request to get the JSON response. Sending requests with the `Accept` header is necessary if you want to use URLs for related endpoints returned by the API, such as pagination URLs. These URLs are returned without the `.json` prefix so you need to add the header in order to get the correct response format.  ### Authentication  Some endpoints do not require any authentication, pretty much anything else will require you to be authenticated.  To become authenticated you will need to create an API Key from the admin panel.  Once you have your API Key you can pass it in along with your API Username as an HTTP header like this:  ``` curl -X GET \"http://127.0.0.1:3000/admin/users/list/active.json\" \\ -H \"Api-Key: 714552c6148e1617aeab526d0606184b94a80ec048fc09894ff1a72b740c5f19\" \\ -H \"Api-Username: system\" ```  and this is how POST requests will look:  ``` curl -X POST \"http://127.0.0.1:3000/categories\" \\ -H \"Content-Type: multipart/form-data;\" \\ -H \"Api-Key: 714552c6148e1617aeab526d0606184b94a80ec048fc09894ff1a72b740c5f19\" \\ -H \"Api-Username: system\" \\ -F \"name=89853c20-4409-e91a-a8ea-f6cdff96aaaa\" \\ -F \"color=49d9e9\" \\ -F \"text_color=f0fcfd\" ```  ### Boolean values  If an endpoint accepts a boolean be sure to specify it as a lowercase `true` or `false` value unless noted otherwise. 
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * UpdateGroupRequestGroup
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:12:34.324076-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class UpdateGroupRequestGroup {
  public static final String SERIALIZED_NAME_AUTOMATIC_MEMBERSHIP_EMAIL_DOMAINS = "automatic_membership_email_domains";
  @SerializedName(SERIALIZED_NAME_AUTOMATIC_MEMBERSHIP_EMAIL_DOMAINS)
  private String automaticMembershipEmailDomains;

  public static final String SERIALIZED_NAME_BIO_RAW = "bio_raw";
  @SerializedName(SERIALIZED_NAME_BIO_RAW)
  private String bioRaw;

  public static final String SERIALIZED_NAME_DEFAULT_NOTIFICATION_LEVEL = "default_notification_level";
  @SerializedName(SERIALIZED_NAME_DEFAULT_NOTIFICATION_LEVEL)
  private Integer defaultNotificationLevel;

  public static final String SERIALIZED_NAME_FLAIR_BG_COLOR = "flair_bg_color";
  @SerializedName(SERIALIZED_NAME_FLAIR_BG_COLOR)
  private String flairBgColor;

  public static final String SERIALIZED_NAME_FLAIR_ICON = "flair_icon";
  @SerializedName(SERIALIZED_NAME_FLAIR_ICON)
  private String flairIcon;

  public static final String SERIALIZED_NAME_FLAIR_UPLOAD_ID = "flair_upload_id";
  @SerializedName(SERIALIZED_NAME_FLAIR_UPLOAD_ID)
  private Integer flairUploadId;

  public static final String SERIALIZED_NAME_FULL_NAME = "full_name";
  @SerializedName(SERIALIZED_NAME_FULL_NAME)
  private String fullName;

  public static final String SERIALIZED_NAME_MUTED_CATEGORY_IDS = "muted_category_ids";
  @SerializedName(SERIALIZED_NAME_MUTED_CATEGORY_IDS)
  private List<Integer> mutedCategoryIds = new ArrayList<>();

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_OWNER_USERNAMES = "owner_usernames";
  @SerializedName(SERIALIZED_NAME_OWNER_USERNAMES)
  private String ownerUsernames;

  public static final String SERIALIZED_NAME_PRIMARY_GROUP = "primary_group";
  @SerializedName(SERIALIZED_NAME_PRIMARY_GROUP)
  private Boolean primaryGroup;

  public static final String SERIALIZED_NAME_PUBLIC_ADMISSION = "public_admission";
  @SerializedName(SERIALIZED_NAME_PUBLIC_ADMISSION)
  private Boolean publicAdmission;

  public static final String SERIALIZED_NAME_PUBLIC_EXIT = "public_exit";
  @SerializedName(SERIALIZED_NAME_PUBLIC_EXIT)
  private Boolean publicExit;

  public static final String SERIALIZED_NAME_REGULAR_CATEGORY_IDS = "regular_category_ids";
  @SerializedName(SERIALIZED_NAME_REGULAR_CATEGORY_IDS)
  private List<Integer> regularCategoryIds = new ArrayList<>();

  public static final String SERIALIZED_NAME_TRACKING_CATEGORY_IDS = "tracking_category_ids";
  @SerializedName(SERIALIZED_NAME_TRACKING_CATEGORY_IDS)
  private List<Integer> trackingCategoryIds = new ArrayList<>();

  public static final String SERIALIZED_NAME_USERNAMES = "usernames";
  @SerializedName(SERIALIZED_NAME_USERNAMES)
  private String usernames;

  public static final String SERIALIZED_NAME_VISIBILITY_LEVEL = "visibility_level";
  @SerializedName(SERIALIZED_NAME_VISIBILITY_LEVEL)
  private Integer visibilityLevel;

  public static final String SERIALIZED_NAME_WATCHING_CATEGORY_IDS = "watching_category_ids";
  @SerializedName(SERIALIZED_NAME_WATCHING_CATEGORY_IDS)
  private List<Integer> watchingCategoryIds = new ArrayList<>();

  public static final String SERIALIZED_NAME_WATCHING_FIRST_POST_CATEGORY_IDS = "watching_first_post_category_ids";
  @SerializedName(SERIALIZED_NAME_WATCHING_FIRST_POST_CATEGORY_IDS)
  private List<Integer> watchingFirstPostCategoryIds = new ArrayList<>();

  public UpdateGroupRequestGroup() {
  }

  public UpdateGroupRequestGroup automaticMembershipEmailDomains(String automaticMembershipEmailDomains) {
    this.automaticMembershipEmailDomains = automaticMembershipEmailDomains;
    return this;
  }

  /**
   * pipe|separated
   * @return automaticMembershipEmailDomains
   */
  @javax.annotation.Nullable
  public String getAutomaticMembershipEmailDomains() {
    return automaticMembershipEmailDomains;
  }

  public void setAutomaticMembershipEmailDomains(String automaticMembershipEmailDomains) {
    this.automaticMembershipEmailDomains = automaticMembershipEmailDomains;
  }


  public UpdateGroupRequestGroup bioRaw(String bioRaw) {
    this.bioRaw = bioRaw;
    return this;
  }

  /**
   * About Group
   * @return bioRaw
   */
  @javax.annotation.Nullable
  public String getBioRaw() {
    return bioRaw;
  }

  public void setBioRaw(String bioRaw) {
    this.bioRaw = bioRaw;
  }


  public UpdateGroupRequestGroup defaultNotificationLevel(Integer defaultNotificationLevel) {
    this.defaultNotificationLevel = defaultNotificationLevel;
    return this;
  }

  /**
   * Get defaultNotificationLevel
   * @return defaultNotificationLevel
   */
  @javax.annotation.Nullable
  public Integer getDefaultNotificationLevel() {
    return defaultNotificationLevel;
  }

  public void setDefaultNotificationLevel(Integer defaultNotificationLevel) {
    this.defaultNotificationLevel = defaultNotificationLevel;
  }


  public UpdateGroupRequestGroup flairBgColor(String flairBgColor) {
    this.flairBgColor = flairBgColor;
    return this;
  }

  /**
   * Get flairBgColor
   * @return flairBgColor
   */
  @javax.annotation.Nullable
  public String getFlairBgColor() {
    return flairBgColor;
  }

  public void setFlairBgColor(String flairBgColor) {
    this.flairBgColor = flairBgColor;
  }


  public UpdateGroupRequestGroup flairIcon(String flairIcon) {
    this.flairIcon = flairIcon;
    return this;
  }

  /**
   * Get flairIcon
   * @return flairIcon
   */
  @javax.annotation.Nullable
  public String getFlairIcon() {
    return flairIcon;
  }

  public void setFlairIcon(String flairIcon) {
    this.flairIcon = flairIcon;
  }


  public UpdateGroupRequestGroup flairUploadId(Integer flairUploadId) {
    this.flairUploadId = flairUploadId;
    return this;
  }

  /**
   * Get flairUploadId
   * @return flairUploadId
   */
  @javax.annotation.Nullable
  public Integer getFlairUploadId() {
    return flairUploadId;
  }

  public void setFlairUploadId(Integer flairUploadId) {
    this.flairUploadId = flairUploadId;
  }


  public UpdateGroupRequestGroup fullName(String fullName) {
    this.fullName = fullName;
    return this;
  }

  /**
   * Get fullName
   * @return fullName
   */
  @javax.annotation.Nullable
  public String getFullName() {
    return fullName;
  }

  public void setFullName(String fullName) {
    this.fullName = fullName;
  }


  public UpdateGroupRequestGroup mutedCategoryIds(List<Integer> mutedCategoryIds) {
    this.mutedCategoryIds = mutedCategoryIds;
    return this;
  }

  public UpdateGroupRequestGroup addMutedCategoryIdsItem(Integer mutedCategoryIdsItem) {
    if (this.mutedCategoryIds == null) {
      this.mutedCategoryIds = new ArrayList<>();
    }
    this.mutedCategoryIds.add(mutedCategoryIdsItem);
    return this;
  }

  /**
   * Get mutedCategoryIds
   * @return mutedCategoryIds
   */
  @javax.annotation.Nullable
  public List<Integer> getMutedCategoryIds() {
    return mutedCategoryIds;
  }

  public void setMutedCategoryIds(List<Integer> mutedCategoryIds) {
    this.mutedCategoryIds = mutedCategoryIds;
  }


  public UpdateGroupRequestGroup name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nonnull
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public UpdateGroupRequestGroup ownerUsernames(String ownerUsernames) {
    this.ownerUsernames = ownerUsernames;
    return this;
  }

  /**
   * comma,separated
   * @return ownerUsernames
   */
  @javax.annotation.Nullable
  public String getOwnerUsernames() {
    return ownerUsernames;
  }

  public void setOwnerUsernames(String ownerUsernames) {
    this.ownerUsernames = ownerUsernames;
  }


  public UpdateGroupRequestGroup primaryGroup(Boolean primaryGroup) {
    this.primaryGroup = primaryGroup;
    return this;
  }

  /**
   * Get primaryGroup
   * @return primaryGroup
   */
  @javax.annotation.Nullable
  public Boolean getPrimaryGroup() {
    return primaryGroup;
  }

  public void setPrimaryGroup(Boolean primaryGroup) {
    this.primaryGroup = primaryGroup;
  }


  public UpdateGroupRequestGroup publicAdmission(Boolean publicAdmission) {
    this.publicAdmission = publicAdmission;
    return this;
  }

  /**
   * Get publicAdmission
   * @return publicAdmission
   */
  @javax.annotation.Nullable
  public Boolean getPublicAdmission() {
    return publicAdmission;
  }

  public void setPublicAdmission(Boolean publicAdmission) {
    this.publicAdmission = publicAdmission;
  }


  public UpdateGroupRequestGroup publicExit(Boolean publicExit) {
    this.publicExit = publicExit;
    return this;
  }

  /**
   * Get publicExit
   * @return publicExit
   */
  @javax.annotation.Nullable
  public Boolean getPublicExit() {
    return publicExit;
  }

  public void setPublicExit(Boolean publicExit) {
    this.publicExit = publicExit;
  }


  public UpdateGroupRequestGroup regularCategoryIds(List<Integer> regularCategoryIds) {
    this.regularCategoryIds = regularCategoryIds;
    return this;
  }

  public UpdateGroupRequestGroup addRegularCategoryIdsItem(Integer regularCategoryIdsItem) {
    if (this.regularCategoryIds == null) {
      this.regularCategoryIds = new ArrayList<>();
    }
    this.regularCategoryIds.add(regularCategoryIdsItem);
    return this;
  }

  /**
   * Get regularCategoryIds
   * @return regularCategoryIds
   */
  @javax.annotation.Nullable
  public List<Integer> getRegularCategoryIds() {
    return regularCategoryIds;
  }

  public void setRegularCategoryIds(List<Integer> regularCategoryIds) {
    this.regularCategoryIds = regularCategoryIds;
  }


  public UpdateGroupRequestGroup trackingCategoryIds(List<Integer> trackingCategoryIds) {
    this.trackingCategoryIds = trackingCategoryIds;
    return this;
  }

  public UpdateGroupRequestGroup addTrackingCategoryIdsItem(Integer trackingCategoryIdsItem) {
    if (this.trackingCategoryIds == null) {
      this.trackingCategoryIds = new ArrayList<>();
    }
    this.trackingCategoryIds.add(trackingCategoryIdsItem);
    return this;
  }

  /**
   * Get trackingCategoryIds
   * @return trackingCategoryIds
   */
  @javax.annotation.Nullable
  public List<Integer> getTrackingCategoryIds() {
    return trackingCategoryIds;
  }

  public void setTrackingCategoryIds(List<Integer> trackingCategoryIds) {
    this.trackingCategoryIds = trackingCategoryIds;
  }


  public UpdateGroupRequestGroup usernames(String usernames) {
    this.usernames = usernames;
    return this;
  }

  /**
   * comma,separated
   * @return usernames
   */
  @javax.annotation.Nullable
  public String getUsernames() {
    return usernames;
  }

  public void setUsernames(String usernames) {
    this.usernames = usernames;
  }


  public UpdateGroupRequestGroup visibilityLevel(Integer visibilityLevel) {
    this.visibilityLevel = visibilityLevel;
    return this;
  }

  /**
   * Get visibilityLevel
   * @return visibilityLevel
   */
  @javax.annotation.Nullable
  public Integer getVisibilityLevel() {
    return visibilityLevel;
  }

  public void setVisibilityLevel(Integer visibilityLevel) {
    this.visibilityLevel = visibilityLevel;
  }


  public UpdateGroupRequestGroup watchingCategoryIds(List<Integer> watchingCategoryIds) {
    this.watchingCategoryIds = watchingCategoryIds;
    return this;
  }

  public UpdateGroupRequestGroup addWatchingCategoryIdsItem(Integer watchingCategoryIdsItem) {
    if (this.watchingCategoryIds == null) {
      this.watchingCategoryIds = new ArrayList<>();
    }
    this.watchingCategoryIds.add(watchingCategoryIdsItem);
    return this;
  }

  /**
   * Get watchingCategoryIds
   * @return watchingCategoryIds
   */
  @javax.annotation.Nullable
  public List<Integer> getWatchingCategoryIds() {
    return watchingCategoryIds;
  }

  public void setWatchingCategoryIds(List<Integer> watchingCategoryIds) {
    this.watchingCategoryIds = watchingCategoryIds;
  }


  public UpdateGroupRequestGroup watchingFirstPostCategoryIds(List<Integer> watchingFirstPostCategoryIds) {
    this.watchingFirstPostCategoryIds = watchingFirstPostCategoryIds;
    return this;
  }

  public UpdateGroupRequestGroup addWatchingFirstPostCategoryIdsItem(Integer watchingFirstPostCategoryIdsItem) {
    if (this.watchingFirstPostCategoryIds == null) {
      this.watchingFirstPostCategoryIds = new ArrayList<>();
    }
    this.watchingFirstPostCategoryIds.add(watchingFirstPostCategoryIdsItem);
    return this;
  }

  /**
   * Get watchingFirstPostCategoryIds
   * @return watchingFirstPostCategoryIds
   */
  @javax.annotation.Nullable
  public List<Integer> getWatchingFirstPostCategoryIds() {
    return watchingFirstPostCategoryIds;
  }

  public void setWatchingFirstPostCategoryIds(List<Integer> watchingFirstPostCategoryIds) {
    this.watchingFirstPostCategoryIds = watchingFirstPostCategoryIds;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the UpdateGroupRequestGroup instance itself
   */
  public UpdateGroupRequestGroup putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateGroupRequestGroup updateGroupRequestGroup = (UpdateGroupRequestGroup) o;
    return Objects.equals(this.automaticMembershipEmailDomains, updateGroupRequestGroup.automaticMembershipEmailDomains) &&
        Objects.equals(this.bioRaw, updateGroupRequestGroup.bioRaw) &&
        Objects.equals(this.defaultNotificationLevel, updateGroupRequestGroup.defaultNotificationLevel) &&
        Objects.equals(this.flairBgColor, updateGroupRequestGroup.flairBgColor) &&
        Objects.equals(this.flairIcon, updateGroupRequestGroup.flairIcon) &&
        Objects.equals(this.flairUploadId, updateGroupRequestGroup.flairUploadId) &&
        Objects.equals(this.fullName, updateGroupRequestGroup.fullName) &&
        Objects.equals(this.mutedCategoryIds, updateGroupRequestGroup.mutedCategoryIds) &&
        Objects.equals(this.name, updateGroupRequestGroup.name) &&
        Objects.equals(this.ownerUsernames, updateGroupRequestGroup.ownerUsernames) &&
        Objects.equals(this.primaryGroup, updateGroupRequestGroup.primaryGroup) &&
        Objects.equals(this.publicAdmission, updateGroupRequestGroup.publicAdmission) &&
        Objects.equals(this.publicExit, updateGroupRequestGroup.publicExit) &&
        Objects.equals(this.regularCategoryIds, updateGroupRequestGroup.regularCategoryIds) &&
        Objects.equals(this.trackingCategoryIds, updateGroupRequestGroup.trackingCategoryIds) &&
        Objects.equals(this.usernames, updateGroupRequestGroup.usernames) &&
        Objects.equals(this.visibilityLevel, updateGroupRequestGroup.visibilityLevel) &&
        Objects.equals(this.watchingCategoryIds, updateGroupRequestGroup.watchingCategoryIds) &&
        Objects.equals(this.watchingFirstPostCategoryIds, updateGroupRequestGroup.watchingFirstPostCategoryIds)&&
        Objects.equals(this.additionalProperties, updateGroupRequestGroup.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(automaticMembershipEmailDomains, bioRaw, defaultNotificationLevel, flairBgColor, flairIcon, flairUploadId, fullName, mutedCategoryIds, name, ownerUsernames, primaryGroup, publicAdmission, publicExit, regularCategoryIds, trackingCategoryIds, usernames, visibilityLevel, watchingCategoryIds, watchingFirstPostCategoryIds, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateGroupRequestGroup {\n");
    sb.append("    automaticMembershipEmailDomains: ").append(toIndentedString(automaticMembershipEmailDomains)).append("\n");
    sb.append("    bioRaw: ").append(toIndentedString(bioRaw)).append("\n");
    sb.append("    defaultNotificationLevel: ").append(toIndentedString(defaultNotificationLevel)).append("\n");
    sb.append("    flairBgColor: ").append(toIndentedString(flairBgColor)).append("\n");
    sb.append("    flairIcon: ").append(toIndentedString(flairIcon)).append("\n");
    sb.append("    flairUploadId: ").append(toIndentedString(flairUploadId)).append("\n");
    sb.append("    fullName: ").append(toIndentedString(fullName)).append("\n");
    sb.append("    mutedCategoryIds: ").append(toIndentedString(mutedCategoryIds)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    ownerUsernames: ").append(toIndentedString(ownerUsernames)).append("\n");
    sb.append("    primaryGroup: ").append(toIndentedString(primaryGroup)).append("\n");
    sb.append("    publicAdmission: ").append(toIndentedString(publicAdmission)).append("\n");
    sb.append("    publicExit: ").append(toIndentedString(publicExit)).append("\n");
    sb.append("    regularCategoryIds: ").append(toIndentedString(regularCategoryIds)).append("\n");
    sb.append("    trackingCategoryIds: ").append(toIndentedString(trackingCategoryIds)).append("\n");
    sb.append("    usernames: ").append(toIndentedString(usernames)).append("\n");
    sb.append("    visibilityLevel: ").append(toIndentedString(visibilityLevel)).append("\n");
    sb.append("    watchingCategoryIds: ").append(toIndentedString(watchingCategoryIds)).append("\n");
    sb.append("    watchingFirstPostCategoryIds: ").append(toIndentedString(watchingFirstPostCategoryIds)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("automatic_membership_email_domains");
    openapiFields.add("bio_raw");
    openapiFields.add("default_notification_level");
    openapiFields.add("flair_bg_color");
    openapiFields.add("flair_icon");
    openapiFields.add("flair_upload_id");
    openapiFields.add("full_name");
    openapiFields.add("muted_category_ids");
    openapiFields.add("name");
    openapiFields.add("owner_usernames");
    openapiFields.add("primary_group");
    openapiFields.add("public_admission");
    openapiFields.add("public_exit");
    openapiFields.add("regular_category_ids");
    openapiFields.add("tracking_category_ids");
    openapiFields.add("usernames");
    openapiFields.add("visibility_level");
    openapiFields.add("watching_category_ids");
    openapiFields.add("watching_first_post_category_ids");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("name");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to UpdateGroupRequestGroup
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!UpdateGroupRequestGroup.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UpdateGroupRequestGroup is not found in the empty JSON string", UpdateGroupRequestGroup.openapiRequiredFields.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : UpdateGroupRequestGroup.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("automatic_membership_email_domains") != null && !jsonObj.get("automatic_membership_email_domains").isJsonNull()) && !jsonObj.get("automatic_membership_email_domains").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `automatic_membership_email_domains` to be a primitive type in the JSON string but got `%s`", jsonObj.get("automatic_membership_email_domains").toString()));
      }
      if ((jsonObj.get("bio_raw") != null && !jsonObj.get("bio_raw").isJsonNull()) && !jsonObj.get("bio_raw").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bio_raw` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bio_raw").toString()));
      }
      if ((jsonObj.get("flair_bg_color") != null && !jsonObj.get("flair_bg_color").isJsonNull()) && !jsonObj.get("flair_bg_color").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `flair_bg_color` to be a primitive type in the JSON string but got `%s`", jsonObj.get("flair_bg_color").toString()));
      }
      if ((jsonObj.get("flair_icon") != null && !jsonObj.get("flair_icon").isJsonNull()) && !jsonObj.get("flair_icon").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `flair_icon` to be a primitive type in the JSON string but got `%s`", jsonObj.get("flair_icon").toString()));
      }
      if ((jsonObj.get("full_name") != null && !jsonObj.get("full_name").isJsonNull()) && !jsonObj.get("full_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `full_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("full_name").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("muted_category_ids") != null && !jsonObj.get("muted_category_ids").isJsonNull() && !jsonObj.get("muted_category_ids").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `muted_category_ids` to be an array in the JSON string but got `%s`", jsonObj.get("muted_category_ids").toString()));
      }
      if (!jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("owner_usernames") != null && !jsonObj.get("owner_usernames").isJsonNull()) && !jsonObj.get("owner_usernames").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `owner_usernames` to be a primitive type in the JSON string but got `%s`", jsonObj.get("owner_usernames").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("regular_category_ids") != null && !jsonObj.get("regular_category_ids").isJsonNull() && !jsonObj.get("regular_category_ids").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `regular_category_ids` to be an array in the JSON string but got `%s`", jsonObj.get("regular_category_ids").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("tracking_category_ids") != null && !jsonObj.get("tracking_category_ids").isJsonNull() && !jsonObj.get("tracking_category_ids").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `tracking_category_ids` to be an array in the JSON string but got `%s`", jsonObj.get("tracking_category_ids").toString()));
      }
      if ((jsonObj.get("usernames") != null && !jsonObj.get("usernames").isJsonNull()) && !jsonObj.get("usernames").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `usernames` to be a primitive type in the JSON string but got `%s`", jsonObj.get("usernames").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("watching_category_ids") != null && !jsonObj.get("watching_category_ids").isJsonNull() && !jsonObj.get("watching_category_ids").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `watching_category_ids` to be an array in the JSON string but got `%s`", jsonObj.get("watching_category_ids").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("watching_first_post_category_ids") != null && !jsonObj.get("watching_first_post_category_ids").isJsonNull() && !jsonObj.get("watching_first_post_category_ids").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `watching_first_post_category_ids` to be an array in the JSON string but got `%s`", jsonObj.get("watching_first_post_category_ids").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UpdateGroupRequestGroup.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UpdateGroupRequestGroup' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UpdateGroupRequestGroup> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UpdateGroupRequestGroup.class));

       return (TypeAdapter<T>) new TypeAdapter<UpdateGroupRequestGroup>() {
           @Override
           public void write(JsonWriter out, UpdateGroupRequestGroup value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additional properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   JsonElement jsonElement = gson.toJsonTree(entry.getValue());
                   if (jsonElement.isJsonArray()) {
                     obj.add(entry.getKey(), jsonElement.getAsJsonArray());
                   } else {
                     obj.add(entry.getKey(), jsonElement.getAsJsonObject());
                   }
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public UpdateGroupRequestGroup read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             JsonObject jsonObj = jsonElement.getAsJsonObject();
             // store additional fields in the deserialized instance
             UpdateGroupRequestGroup instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of UpdateGroupRequestGroup given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of UpdateGroupRequestGroup
   * @throws IOException if the JSON string is invalid with respect to UpdateGroupRequestGroup
   */
  public static UpdateGroupRequestGroup fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UpdateGroupRequestGroup.class);
  }

  /**
   * Convert an instance of UpdateGroupRequestGroup to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

