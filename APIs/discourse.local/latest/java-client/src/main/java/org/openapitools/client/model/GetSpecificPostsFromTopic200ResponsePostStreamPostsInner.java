/*
 * Discourse API Documentation
 * This page contains the documentation on how to use Discourse through API calls.  > Note: For any endpoints not listed you can follow the [reverse engineer the Discourse API](https://meta.discourse.org/t/-/20576) guide to figure out how to use an API endpoint.  ### Request Content-Type  The Content-Type for POST and PUT requests can be set to `application/x-www-form-urlencoded`, `multipart/form-data`, or `application/json`.  ### Endpoint Names and Response Content-Type  Most API endpoints provide the same content as their HTML counterparts. For example the URL `/categories` serves a list of categories, the `/categories.json` API provides the same information in JSON format.  Instead of sending API requests to `/categories.json` you may also send them to `/categories` and add an `Accept: application/json` header to the request to get the JSON response. Sending requests with the `Accept` header is necessary if you want to use URLs for related endpoints returned by the API, such as pagination URLs. These URLs are returned without the `.json` prefix so you need to add the header in order to get the correct response format.  ### Authentication  Some endpoints do not require any authentication, pretty much anything else will require you to be authenticated.  To become authenticated you will need to create an API Key from the admin panel.  Once you have your API Key you can pass it in along with your API Username as an HTTP header like this:  ``` curl -X GET \"http://127.0.0.1:3000/admin/users/list/active.json\" \\ -H \"Api-Key: 714552c6148e1617aeab526d0606184b94a80ec048fc09894ff1a72b740c5f19\" \\ -H \"Api-Username: system\" ```  and this is how POST requests will look:  ``` curl -X POST \"http://127.0.0.1:3000/categories\" \\ -H \"Content-Type: multipart/form-data;\" \\ -H \"Api-Key: 714552c6148e1617aeab526d0606184b94a80ec048fc09894ff1a72b740c5f19\" \\ -H \"Api-Username: system\" \\ -F \"name=89853c20-4409-e91a-a8ea-f6cdff96aaaa\" \\ -F \"color=49d9e9\" \\ -F \"text_color=f0fcfd\" ```  ### Boolean values  If an endpoint accepts a boolean be sure to specify it as a lowercase `true` or `false` value unless noted otherwise. 
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ListPosts200ResponseLatestPostsInnerActionsSummaryInner;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GetSpecificPostsFromTopic200ResponsePostStreamPostsInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:12:34.324076-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetSpecificPostsFromTopic200ResponsePostStreamPostsInner {
  public static final String SERIALIZED_NAME_ACTIONS_SUMMARY = "actions_summary";
  @SerializedName(SERIALIZED_NAME_ACTIONS_SUMMARY)
  private List<ListPosts200ResponseLatestPostsInnerActionsSummaryInner> actionsSummary = new ArrayList<>();

  public static final String SERIALIZED_NAME_ADMIN = "admin";
  @SerializedName(SERIALIZED_NAME_ADMIN)
  private Boolean admin;

  public static final String SERIALIZED_NAME_AVATAR_TEMPLATE = "avatar_template";
  @SerializedName(SERIALIZED_NAME_AVATAR_TEMPLATE)
  private String avatarTemplate;

  public static final String SERIALIZED_NAME_CAN_DELETE = "can_delete";
  @SerializedName(SERIALIZED_NAME_CAN_DELETE)
  private Boolean canDelete;

  public static final String SERIALIZED_NAME_CAN_EDIT = "can_edit";
  @SerializedName(SERIALIZED_NAME_CAN_EDIT)
  private Boolean canEdit;

  public static final String SERIALIZED_NAME_CAN_RECOVER = "can_recover";
  @SerializedName(SERIALIZED_NAME_CAN_RECOVER)
  private Boolean canRecover;

  public static final String SERIALIZED_NAME_CAN_VIEW_EDIT_HISTORY = "can_view_edit_history";
  @SerializedName(SERIALIZED_NAME_CAN_VIEW_EDIT_HISTORY)
  private Boolean canViewEditHistory;

  public static final String SERIALIZED_NAME_CAN_WIKI = "can_wiki";
  @SerializedName(SERIALIZED_NAME_CAN_WIKI)
  private Boolean canWiki;

  public static final String SERIALIZED_NAME_COOKED = "cooked";
  @SerializedName(SERIALIZED_NAME_COOKED)
  private String cooked;

  public static final String SERIALIZED_NAME_CREATED_AT = "created_at";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private String createdAt;

  public static final String SERIALIZED_NAME_DELETED_AT = "deleted_at";
  @SerializedName(SERIALIZED_NAME_DELETED_AT)
  private String deletedAt;

  public static final String SERIALIZED_NAME_DISPLAY_USERNAME = "display_username";
  @SerializedName(SERIALIZED_NAME_DISPLAY_USERNAME)
  private String displayUsername;

  public static final String SERIALIZED_NAME_EDIT_REASON = "edit_reason";
  @SerializedName(SERIALIZED_NAME_EDIT_REASON)
  private String editReason;

  public static final String SERIALIZED_NAME_FLAIR_BG_COLOR = "flair_bg_color";
  @SerializedName(SERIALIZED_NAME_FLAIR_BG_COLOR)
  private String flairBgColor;

  public static final String SERIALIZED_NAME_FLAIR_COLOR = "flair_color";
  @SerializedName(SERIALIZED_NAME_FLAIR_COLOR)
  private String flairColor;

  public static final String SERIALIZED_NAME_FLAIR_NAME = "flair_name";
  @SerializedName(SERIALIZED_NAME_FLAIR_NAME)
  private String flairName;

  public static final String SERIALIZED_NAME_FLAIR_URL = "flair_url";
  @SerializedName(SERIALIZED_NAME_FLAIR_URL)
  private String flairUrl;

  public static final String SERIALIZED_NAME_HIDDEN = "hidden";
  @SerializedName(SERIALIZED_NAME_HIDDEN)
  private Boolean hidden;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_INCOMING_LINK_COUNT = "incoming_link_count";
  @SerializedName(SERIALIZED_NAME_INCOMING_LINK_COUNT)
  private Integer incomingLinkCount;

  public static final String SERIALIZED_NAME_MODERATOR = "moderator";
  @SerializedName(SERIALIZED_NAME_MODERATOR)
  private Boolean moderator;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_POST_NUMBER = "post_number";
  @SerializedName(SERIALIZED_NAME_POST_NUMBER)
  private Integer postNumber;

  public static final String SERIALIZED_NAME_POST_TYPE = "post_type";
  @SerializedName(SERIALIZED_NAME_POST_TYPE)
  private Integer postType;

  public static final String SERIALIZED_NAME_PRIMARY_GROUP_NAME = "primary_group_name";
  @SerializedName(SERIALIZED_NAME_PRIMARY_GROUP_NAME)
  private String primaryGroupName;

  public static final String SERIALIZED_NAME_QUOTE_COUNT = "quote_count";
  @SerializedName(SERIALIZED_NAME_QUOTE_COUNT)
  private Integer quoteCount;

  public static final String SERIALIZED_NAME_READ = "read";
  @SerializedName(SERIALIZED_NAME_READ)
  private Boolean read;

  public static final String SERIALIZED_NAME_READERS_COUNT = "readers_count";
  @SerializedName(SERIALIZED_NAME_READERS_COUNT)
  private Integer readersCount;

  public static final String SERIALIZED_NAME_READS = "reads";
  @SerializedName(SERIALIZED_NAME_READS)
  private Integer reads;

  public static final String SERIALIZED_NAME_REPLY_COUNT = "reply_count";
  @SerializedName(SERIALIZED_NAME_REPLY_COUNT)
  private Integer replyCount;

  public static final String SERIALIZED_NAME_REPLY_TO_POST_NUMBER = "reply_to_post_number";
  @SerializedName(SERIALIZED_NAME_REPLY_TO_POST_NUMBER)
  private String replyToPostNumber;

  public static final String SERIALIZED_NAME_REVIEWABLE_ID = "reviewable_id";
  @SerializedName(SERIALIZED_NAME_REVIEWABLE_ID)
  private Integer reviewableId;

  public static final String SERIALIZED_NAME_REVIEWABLE_SCORE_COUNT = "reviewable_score_count";
  @SerializedName(SERIALIZED_NAME_REVIEWABLE_SCORE_COUNT)
  private Integer reviewableScoreCount;

  public static final String SERIALIZED_NAME_REVIEWABLE_SCORE_PENDING_COUNT = "reviewable_score_pending_count";
  @SerializedName(SERIALIZED_NAME_REVIEWABLE_SCORE_PENDING_COUNT)
  private Integer reviewableScorePendingCount;

  public static final String SERIALIZED_NAME_SCORE = "score";
  @SerializedName(SERIALIZED_NAME_SCORE)
  private Integer score;

  public static final String SERIALIZED_NAME_STAFF = "staff";
  @SerializedName(SERIALIZED_NAME_STAFF)
  private Boolean staff;

  public static final String SERIALIZED_NAME_TOPIC_ID = "topic_id";
  @SerializedName(SERIALIZED_NAME_TOPIC_ID)
  private Integer topicId;

  public static final String SERIALIZED_NAME_TOPIC_SLUG = "topic_slug";
  @SerializedName(SERIALIZED_NAME_TOPIC_SLUG)
  private String topicSlug;

  public static final String SERIALIZED_NAME_TRUST_LEVEL = "trust_level";
  @SerializedName(SERIALIZED_NAME_TRUST_LEVEL)
  private Integer trustLevel;

  public static final String SERIALIZED_NAME_UPDATED_AT = "updated_at";
  @SerializedName(SERIALIZED_NAME_UPDATED_AT)
  private String updatedAt;

  public static final String SERIALIZED_NAME_USER_DELETED = "user_deleted";
  @SerializedName(SERIALIZED_NAME_USER_DELETED)
  private Boolean userDeleted;

  public static final String SERIALIZED_NAME_USER_ID = "user_id";
  @SerializedName(SERIALIZED_NAME_USER_ID)
  private Integer userId;

  public static final String SERIALIZED_NAME_USER_TITLE = "user_title";
  @SerializedName(SERIALIZED_NAME_USER_TITLE)
  private String userTitle;

  public static final String SERIALIZED_NAME_USERNAME = "username";
  @SerializedName(SERIALIZED_NAME_USERNAME)
  private String username;

  public static final String SERIALIZED_NAME_VERSION = "version";
  @SerializedName(SERIALIZED_NAME_VERSION)
  private Integer version;

  public static final String SERIALIZED_NAME_WIKI = "wiki";
  @SerializedName(SERIALIZED_NAME_WIKI)
  private Boolean wiki;

  public static final String SERIALIZED_NAME_YOURS = "yours";
  @SerializedName(SERIALIZED_NAME_YOURS)
  private Boolean yours;

  public GetSpecificPostsFromTopic200ResponsePostStreamPostsInner() {
  }

  public GetSpecificPostsFromTopic200ResponsePostStreamPostsInner actionsSummary(List<ListPosts200ResponseLatestPostsInnerActionsSummaryInner> actionsSummary) {
    this.actionsSummary = actionsSummary;
    return this;
  }

  public GetSpecificPostsFromTopic200ResponsePostStreamPostsInner addActionsSummaryItem(ListPosts200ResponseLatestPostsInnerActionsSummaryInner actionsSummaryItem) {
    if (this.actionsSummary == null) {
      this.actionsSummary = new ArrayList<>();
    }
    this.actionsSummary.add(actionsSummaryItem);
    return this;
  }

  /**
   * Get actionsSummary
   * @return actionsSummary
   */
  @javax.annotation.Nullable
  public List<ListPosts200ResponseLatestPostsInnerActionsSummaryInner> getActionsSummary() {
    return actionsSummary;
  }

  public void setActionsSummary(List<ListPosts200ResponseLatestPostsInnerActionsSummaryInner> actionsSummary) {
    this.actionsSummary = actionsSummary;
  }


  public GetSpecificPostsFromTopic200ResponsePostStreamPostsInner admin(Boolean admin) {
    this.admin = admin;
    return this;
  }

  /**
   * Get admin
   * @return admin
   */
  @javax.annotation.Nullable
  public Boolean getAdmin() {
    return admin;
  }

  public void setAdmin(Boolean admin) {
    this.admin = admin;
  }


  public GetSpecificPostsFromTopic200ResponsePostStreamPostsInner avatarTemplate(String avatarTemplate) {
    this.avatarTemplate = avatarTemplate;
    return this;
  }

  /**
   * Get avatarTemplate
   * @return avatarTemplate
   */
  @javax.annotation.Nullable
  public String getAvatarTemplate() {
    return avatarTemplate;
  }

  public void setAvatarTemplate(String avatarTemplate) {
    this.avatarTemplate = avatarTemplate;
  }


  public GetSpecificPostsFromTopic200ResponsePostStreamPostsInner canDelete(Boolean canDelete) {
    this.canDelete = canDelete;
    return this;
  }

  /**
   * Get canDelete
   * @return canDelete
   */
  @javax.annotation.Nullable
  public Boolean getCanDelete() {
    return canDelete;
  }

  public void setCanDelete(Boolean canDelete) {
    this.canDelete = canDelete;
  }


  public GetSpecificPostsFromTopic200ResponsePostStreamPostsInner canEdit(Boolean canEdit) {
    this.canEdit = canEdit;
    return this;
  }

  /**
   * Get canEdit
   * @return canEdit
   */
  @javax.annotation.Nullable
  public Boolean getCanEdit() {
    return canEdit;
  }

  public void setCanEdit(Boolean canEdit) {
    this.canEdit = canEdit;
  }


  public GetSpecificPostsFromTopic200ResponsePostStreamPostsInner canRecover(Boolean canRecover) {
    this.canRecover = canRecover;
    return this;
  }

  /**
   * Get canRecover
   * @return canRecover
   */
  @javax.annotation.Nullable
  public Boolean getCanRecover() {
    return canRecover;
  }

  public void setCanRecover(Boolean canRecover) {
    this.canRecover = canRecover;
  }


  public GetSpecificPostsFromTopic200ResponsePostStreamPostsInner canViewEditHistory(Boolean canViewEditHistory) {
    this.canViewEditHistory = canViewEditHistory;
    return this;
  }

  /**
   * Get canViewEditHistory
   * @return canViewEditHistory
   */
  @javax.annotation.Nullable
  public Boolean getCanViewEditHistory() {
    return canViewEditHistory;
  }

  public void setCanViewEditHistory(Boolean canViewEditHistory) {
    this.canViewEditHistory = canViewEditHistory;
  }


  public GetSpecificPostsFromTopic200ResponsePostStreamPostsInner canWiki(Boolean canWiki) {
    this.canWiki = canWiki;
    return this;
  }

  /**
   * Get canWiki
   * @return canWiki
   */
  @javax.annotation.Nullable
  public Boolean getCanWiki() {
    return canWiki;
  }

  public void setCanWiki(Boolean canWiki) {
    this.canWiki = canWiki;
  }


  public GetSpecificPostsFromTopic200ResponsePostStreamPostsInner cooked(String cooked) {
    this.cooked = cooked;
    return this;
  }

  /**
   * Get cooked
   * @return cooked
   */
  @javax.annotation.Nullable
  public String getCooked() {
    return cooked;
  }

  public void setCooked(String cooked) {
    this.cooked = cooked;
  }


  public GetSpecificPostsFromTopic200ResponsePostStreamPostsInner createdAt(String createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Get createdAt
   * @return createdAt
   */
  @javax.annotation.Nullable
  public String getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(String createdAt) {
    this.createdAt = createdAt;
  }


  public GetSpecificPostsFromTopic200ResponsePostStreamPostsInner deletedAt(String deletedAt) {
    this.deletedAt = deletedAt;
    return this;
  }

  /**
   * Get deletedAt
   * @return deletedAt
   */
  @javax.annotation.Nullable
  public String getDeletedAt() {
    return deletedAt;
  }

  public void setDeletedAt(String deletedAt) {
    this.deletedAt = deletedAt;
  }


  public GetSpecificPostsFromTopic200ResponsePostStreamPostsInner displayUsername(String displayUsername) {
    this.displayUsername = displayUsername;
    return this;
  }

  /**
   * Get displayUsername
   * @return displayUsername
   */
  @javax.annotation.Nullable
  public String getDisplayUsername() {
    return displayUsername;
  }

  public void setDisplayUsername(String displayUsername) {
    this.displayUsername = displayUsername;
  }


  public GetSpecificPostsFromTopic200ResponsePostStreamPostsInner editReason(String editReason) {
    this.editReason = editReason;
    return this;
  }

  /**
   * Get editReason
   * @return editReason
   */
  @javax.annotation.Nullable
  public String getEditReason() {
    return editReason;
  }

  public void setEditReason(String editReason) {
    this.editReason = editReason;
  }


  public GetSpecificPostsFromTopic200ResponsePostStreamPostsInner flairBgColor(String flairBgColor) {
    this.flairBgColor = flairBgColor;
    return this;
  }

  /**
   * Get flairBgColor
   * @return flairBgColor
   */
  @javax.annotation.Nullable
  public String getFlairBgColor() {
    return flairBgColor;
  }

  public void setFlairBgColor(String flairBgColor) {
    this.flairBgColor = flairBgColor;
  }


  public GetSpecificPostsFromTopic200ResponsePostStreamPostsInner flairColor(String flairColor) {
    this.flairColor = flairColor;
    return this;
  }

  /**
   * Get flairColor
   * @return flairColor
   */
  @javax.annotation.Nullable
  public String getFlairColor() {
    return flairColor;
  }

  public void setFlairColor(String flairColor) {
    this.flairColor = flairColor;
  }


  public GetSpecificPostsFromTopic200ResponsePostStreamPostsInner flairName(String flairName) {
    this.flairName = flairName;
    return this;
  }

  /**
   * Get flairName
   * @return flairName
   */
  @javax.annotation.Nullable
  public String getFlairName() {
    return flairName;
  }

  public void setFlairName(String flairName) {
    this.flairName = flairName;
  }


  public GetSpecificPostsFromTopic200ResponsePostStreamPostsInner flairUrl(String flairUrl) {
    this.flairUrl = flairUrl;
    return this;
  }

  /**
   * Get flairUrl
   * @return flairUrl
   */
  @javax.annotation.Nullable
  public String getFlairUrl() {
    return flairUrl;
  }

  public void setFlairUrl(String flairUrl) {
    this.flairUrl = flairUrl;
  }


  public GetSpecificPostsFromTopic200ResponsePostStreamPostsInner hidden(Boolean hidden) {
    this.hidden = hidden;
    return this;
  }

  /**
   * Get hidden
   * @return hidden
   */
  @javax.annotation.Nullable
  public Boolean getHidden() {
    return hidden;
  }

  public void setHidden(Boolean hidden) {
    this.hidden = hidden;
  }


  public GetSpecificPostsFromTopic200ResponsePostStreamPostsInner id(Integer id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }


  public GetSpecificPostsFromTopic200ResponsePostStreamPostsInner incomingLinkCount(Integer incomingLinkCount) {
    this.incomingLinkCount = incomingLinkCount;
    return this;
  }

  /**
   * Get incomingLinkCount
   * @return incomingLinkCount
   */
  @javax.annotation.Nullable
  public Integer getIncomingLinkCount() {
    return incomingLinkCount;
  }

  public void setIncomingLinkCount(Integer incomingLinkCount) {
    this.incomingLinkCount = incomingLinkCount;
  }


  public GetSpecificPostsFromTopic200ResponsePostStreamPostsInner moderator(Boolean moderator) {
    this.moderator = moderator;
    return this;
  }

  /**
   * Get moderator
   * @return moderator
   */
  @javax.annotation.Nullable
  public Boolean getModerator() {
    return moderator;
  }

  public void setModerator(Boolean moderator) {
    this.moderator = moderator;
  }


  public GetSpecificPostsFromTopic200ResponsePostStreamPostsInner name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public GetSpecificPostsFromTopic200ResponsePostStreamPostsInner postNumber(Integer postNumber) {
    this.postNumber = postNumber;
    return this;
  }

  /**
   * Get postNumber
   * @return postNumber
   */
  @javax.annotation.Nullable
  public Integer getPostNumber() {
    return postNumber;
  }

  public void setPostNumber(Integer postNumber) {
    this.postNumber = postNumber;
  }


  public GetSpecificPostsFromTopic200ResponsePostStreamPostsInner postType(Integer postType) {
    this.postType = postType;
    return this;
  }

  /**
   * Get postType
   * @return postType
   */
  @javax.annotation.Nullable
  public Integer getPostType() {
    return postType;
  }

  public void setPostType(Integer postType) {
    this.postType = postType;
  }


  public GetSpecificPostsFromTopic200ResponsePostStreamPostsInner primaryGroupName(String primaryGroupName) {
    this.primaryGroupName = primaryGroupName;
    return this;
  }

  /**
   * Get primaryGroupName
   * @return primaryGroupName
   */
  @javax.annotation.Nullable
  public String getPrimaryGroupName() {
    return primaryGroupName;
  }

  public void setPrimaryGroupName(String primaryGroupName) {
    this.primaryGroupName = primaryGroupName;
  }


  public GetSpecificPostsFromTopic200ResponsePostStreamPostsInner quoteCount(Integer quoteCount) {
    this.quoteCount = quoteCount;
    return this;
  }

  /**
   * Get quoteCount
   * @return quoteCount
   */
  @javax.annotation.Nullable
  public Integer getQuoteCount() {
    return quoteCount;
  }

  public void setQuoteCount(Integer quoteCount) {
    this.quoteCount = quoteCount;
  }


  public GetSpecificPostsFromTopic200ResponsePostStreamPostsInner read(Boolean read) {
    this.read = read;
    return this;
  }

  /**
   * Get read
   * @return read
   */
  @javax.annotation.Nullable
  public Boolean getRead() {
    return read;
  }

  public void setRead(Boolean read) {
    this.read = read;
  }


  public GetSpecificPostsFromTopic200ResponsePostStreamPostsInner readersCount(Integer readersCount) {
    this.readersCount = readersCount;
    return this;
  }

  /**
   * Get readersCount
   * @return readersCount
   */
  @javax.annotation.Nullable
  public Integer getReadersCount() {
    return readersCount;
  }

  public void setReadersCount(Integer readersCount) {
    this.readersCount = readersCount;
  }


  public GetSpecificPostsFromTopic200ResponsePostStreamPostsInner reads(Integer reads) {
    this.reads = reads;
    return this;
  }

  /**
   * Get reads
   * @return reads
   */
  @javax.annotation.Nullable
  public Integer getReads() {
    return reads;
  }

  public void setReads(Integer reads) {
    this.reads = reads;
  }


  public GetSpecificPostsFromTopic200ResponsePostStreamPostsInner replyCount(Integer replyCount) {
    this.replyCount = replyCount;
    return this;
  }

  /**
   * Get replyCount
   * @return replyCount
   */
  @javax.annotation.Nullable
  public Integer getReplyCount() {
    return replyCount;
  }

  public void setReplyCount(Integer replyCount) {
    this.replyCount = replyCount;
  }


  public GetSpecificPostsFromTopic200ResponsePostStreamPostsInner replyToPostNumber(String replyToPostNumber) {
    this.replyToPostNumber = replyToPostNumber;
    return this;
  }

  /**
   * Get replyToPostNumber
   * @return replyToPostNumber
   */
  @javax.annotation.Nullable
  public String getReplyToPostNumber() {
    return replyToPostNumber;
  }

  public void setReplyToPostNumber(String replyToPostNumber) {
    this.replyToPostNumber = replyToPostNumber;
  }


  public GetSpecificPostsFromTopic200ResponsePostStreamPostsInner reviewableId(Integer reviewableId) {
    this.reviewableId = reviewableId;
    return this;
  }

  /**
   * Get reviewableId
   * @return reviewableId
   */
  @javax.annotation.Nullable
  public Integer getReviewableId() {
    return reviewableId;
  }

  public void setReviewableId(Integer reviewableId) {
    this.reviewableId = reviewableId;
  }


  public GetSpecificPostsFromTopic200ResponsePostStreamPostsInner reviewableScoreCount(Integer reviewableScoreCount) {
    this.reviewableScoreCount = reviewableScoreCount;
    return this;
  }

  /**
   * Get reviewableScoreCount
   * @return reviewableScoreCount
   */
  @javax.annotation.Nullable
  public Integer getReviewableScoreCount() {
    return reviewableScoreCount;
  }

  public void setReviewableScoreCount(Integer reviewableScoreCount) {
    this.reviewableScoreCount = reviewableScoreCount;
  }


  public GetSpecificPostsFromTopic200ResponsePostStreamPostsInner reviewableScorePendingCount(Integer reviewableScorePendingCount) {
    this.reviewableScorePendingCount = reviewableScorePendingCount;
    return this;
  }

  /**
   * Get reviewableScorePendingCount
   * @return reviewableScorePendingCount
   */
  @javax.annotation.Nullable
  public Integer getReviewableScorePendingCount() {
    return reviewableScorePendingCount;
  }

  public void setReviewableScorePendingCount(Integer reviewableScorePendingCount) {
    this.reviewableScorePendingCount = reviewableScorePendingCount;
  }


  public GetSpecificPostsFromTopic200ResponsePostStreamPostsInner score(Integer score) {
    this.score = score;
    return this;
  }

  /**
   * Get score
   * @return score
   */
  @javax.annotation.Nullable
  public Integer getScore() {
    return score;
  }

  public void setScore(Integer score) {
    this.score = score;
  }


  public GetSpecificPostsFromTopic200ResponsePostStreamPostsInner staff(Boolean staff) {
    this.staff = staff;
    return this;
  }

  /**
   * Get staff
   * @return staff
   */
  @javax.annotation.Nullable
  public Boolean getStaff() {
    return staff;
  }

  public void setStaff(Boolean staff) {
    this.staff = staff;
  }


  public GetSpecificPostsFromTopic200ResponsePostStreamPostsInner topicId(Integer topicId) {
    this.topicId = topicId;
    return this;
  }

  /**
   * Get topicId
   * @return topicId
   */
  @javax.annotation.Nullable
  public Integer getTopicId() {
    return topicId;
  }

  public void setTopicId(Integer topicId) {
    this.topicId = topicId;
  }


  public GetSpecificPostsFromTopic200ResponsePostStreamPostsInner topicSlug(String topicSlug) {
    this.topicSlug = topicSlug;
    return this;
  }

  /**
   * Get topicSlug
   * @return topicSlug
   */
  @javax.annotation.Nullable
  public String getTopicSlug() {
    return topicSlug;
  }

  public void setTopicSlug(String topicSlug) {
    this.topicSlug = topicSlug;
  }


  public GetSpecificPostsFromTopic200ResponsePostStreamPostsInner trustLevel(Integer trustLevel) {
    this.trustLevel = trustLevel;
    return this;
  }

  /**
   * Get trustLevel
   * @return trustLevel
   */
  @javax.annotation.Nullable
  public Integer getTrustLevel() {
    return trustLevel;
  }

  public void setTrustLevel(Integer trustLevel) {
    this.trustLevel = trustLevel;
  }


  public GetSpecificPostsFromTopic200ResponsePostStreamPostsInner updatedAt(String updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

  /**
   * Get updatedAt
   * @return updatedAt
   */
  @javax.annotation.Nullable
  public String getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(String updatedAt) {
    this.updatedAt = updatedAt;
  }


  public GetSpecificPostsFromTopic200ResponsePostStreamPostsInner userDeleted(Boolean userDeleted) {
    this.userDeleted = userDeleted;
    return this;
  }

  /**
   * Get userDeleted
   * @return userDeleted
   */
  @javax.annotation.Nullable
  public Boolean getUserDeleted() {
    return userDeleted;
  }

  public void setUserDeleted(Boolean userDeleted) {
    this.userDeleted = userDeleted;
  }


  public GetSpecificPostsFromTopic200ResponsePostStreamPostsInner userId(Integer userId) {
    this.userId = userId;
    return this;
  }

  /**
   * Get userId
   * @return userId
   */
  @javax.annotation.Nullable
  public Integer getUserId() {
    return userId;
  }

  public void setUserId(Integer userId) {
    this.userId = userId;
  }


  public GetSpecificPostsFromTopic200ResponsePostStreamPostsInner userTitle(String userTitle) {
    this.userTitle = userTitle;
    return this;
  }

  /**
   * Get userTitle
   * @return userTitle
   */
  @javax.annotation.Nullable
  public String getUserTitle() {
    return userTitle;
  }

  public void setUserTitle(String userTitle) {
    this.userTitle = userTitle;
  }


  public GetSpecificPostsFromTopic200ResponsePostStreamPostsInner username(String username) {
    this.username = username;
    return this;
  }

  /**
   * Get username
   * @return username
   */
  @javax.annotation.Nullable
  public String getUsername() {
    return username;
  }

  public void setUsername(String username) {
    this.username = username;
  }


  public GetSpecificPostsFromTopic200ResponsePostStreamPostsInner version(Integer version) {
    this.version = version;
    return this;
  }

  /**
   * Get version
   * @return version
   */
  @javax.annotation.Nullable
  public Integer getVersion() {
    return version;
  }

  public void setVersion(Integer version) {
    this.version = version;
  }


  public GetSpecificPostsFromTopic200ResponsePostStreamPostsInner wiki(Boolean wiki) {
    this.wiki = wiki;
    return this;
  }

  /**
   * Get wiki
   * @return wiki
   */
  @javax.annotation.Nullable
  public Boolean getWiki() {
    return wiki;
  }

  public void setWiki(Boolean wiki) {
    this.wiki = wiki;
  }


  public GetSpecificPostsFromTopic200ResponsePostStreamPostsInner yours(Boolean yours) {
    this.yours = yours;
    return this;
  }

  /**
   * Get yours
   * @return yours
   */
  @javax.annotation.Nullable
  public Boolean getYours() {
    return yours;
  }

  public void setYours(Boolean yours) {
    this.yours = yours;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetSpecificPostsFromTopic200ResponsePostStreamPostsInner getSpecificPostsFromTopic200ResponsePostStreamPostsInner = (GetSpecificPostsFromTopic200ResponsePostStreamPostsInner) o;
    return Objects.equals(this.actionsSummary, getSpecificPostsFromTopic200ResponsePostStreamPostsInner.actionsSummary) &&
        Objects.equals(this.admin, getSpecificPostsFromTopic200ResponsePostStreamPostsInner.admin) &&
        Objects.equals(this.avatarTemplate, getSpecificPostsFromTopic200ResponsePostStreamPostsInner.avatarTemplate) &&
        Objects.equals(this.canDelete, getSpecificPostsFromTopic200ResponsePostStreamPostsInner.canDelete) &&
        Objects.equals(this.canEdit, getSpecificPostsFromTopic200ResponsePostStreamPostsInner.canEdit) &&
        Objects.equals(this.canRecover, getSpecificPostsFromTopic200ResponsePostStreamPostsInner.canRecover) &&
        Objects.equals(this.canViewEditHistory, getSpecificPostsFromTopic200ResponsePostStreamPostsInner.canViewEditHistory) &&
        Objects.equals(this.canWiki, getSpecificPostsFromTopic200ResponsePostStreamPostsInner.canWiki) &&
        Objects.equals(this.cooked, getSpecificPostsFromTopic200ResponsePostStreamPostsInner.cooked) &&
        Objects.equals(this.createdAt, getSpecificPostsFromTopic200ResponsePostStreamPostsInner.createdAt) &&
        Objects.equals(this.deletedAt, getSpecificPostsFromTopic200ResponsePostStreamPostsInner.deletedAt) &&
        Objects.equals(this.displayUsername, getSpecificPostsFromTopic200ResponsePostStreamPostsInner.displayUsername) &&
        Objects.equals(this.editReason, getSpecificPostsFromTopic200ResponsePostStreamPostsInner.editReason) &&
        Objects.equals(this.flairBgColor, getSpecificPostsFromTopic200ResponsePostStreamPostsInner.flairBgColor) &&
        Objects.equals(this.flairColor, getSpecificPostsFromTopic200ResponsePostStreamPostsInner.flairColor) &&
        Objects.equals(this.flairName, getSpecificPostsFromTopic200ResponsePostStreamPostsInner.flairName) &&
        Objects.equals(this.flairUrl, getSpecificPostsFromTopic200ResponsePostStreamPostsInner.flairUrl) &&
        Objects.equals(this.hidden, getSpecificPostsFromTopic200ResponsePostStreamPostsInner.hidden) &&
        Objects.equals(this.id, getSpecificPostsFromTopic200ResponsePostStreamPostsInner.id) &&
        Objects.equals(this.incomingLinkCount, getSpecificPostsFromTopic200ResponsePostStreamPostsInner.incomingLinkCount) &&
        Objects.equals(this.moderator, getSpecificPostsFromTopic200ResponsePostStreamPostsInner.moderator) &&
        Objects.equals(this.name, getSpecificPostsFromTopic200ResponsePostStreamPostsInner.name) &&
        Objects.equals(this.postNumber, getSpecificPostsFromTopic200ResponsePostStreamPostsInner.postNumber) &&
        Objects.equals(this.postType, getSpecificPostsFromTopic200ResponsePostStreamPostsInner.postType) &&
        Objects.equals(this.primaryGroupName, getSpecificPostsFromTopic200ResponsePostStreamPostsInner.primaryGroupName) &&
        Objects.equals(this.quoteCount, getSpecificPostsFromTopic200ResponsePostStreamPostsInner.quoteCount) &&
        Objects.equals(this.read, getSpecificPostsFromTopic200ResponsePostStreamPostsInner.read) &&
        Objects.equals(this.readersCount, getSpecificPostsFromTopic200ResponsePostStreamPostsInner.readersCount) &&
        Objects.equals(this.reads, getSpecificPostsFromTopic200ResponsePostStreamPostsInner.reads) &&
        Objects.equals(this.replyCount, getSpecificPostsFromTopic200ResponsePostStreamPostsInner.replyCount) &&
        Objects.equals(this.replyToPostNumber, getSpecificPostsFromTopic200ResponsePostStreamPostsInner.replyToPostNumber) &&
        Objects.equals(this.reviewableId, getSpecificPostsFromTopic200ResponsePostStreamPostsInner.reviewableId) &&
        Objects.equals(this.reviewableScoreCount, getSpecificPostsFromTopic200ResponsePostStreamPostsInner.reviewableScoreCount) &&
        Objects.equals(this.reviewableScorePendingCount, getSpecificPostsFromTopic200ResponsePostStreamPostsInner.reviewableScorePendingCount) &&
        Objects.equals(this.score, getSpecificPostsFromTopic200ResponsePostStreamPostsInner.score) &&
        Objects.equals(this.staff, getSpecificPostsFromTopic200ResponsePostStreamPostsInner.staff) &&
        Objects.equals(this.topicId, getSpecificPostsFromTopic200ResponsePostStreamPostsInner.topicId) &&
        Objects.equals(this.topicSlug, getSpecificPostsFromTopic200ResponsePostStreamPostsInner.topicSlug) &&
        Objects.equals(this.trustLevel, getSpecificPostsFromTopic200ResponsePostStreamPostsInner.trustLevel) &&
        Objects.equals(this.updatedAt, getSpecificPostsFromTopic200ResponsePostStreamPostsInner.updatedAt) &&
        Objects.equals(this.userDeleted, getSpecificPostsFromTopic200ResponsePostStreamPostsInner.userDeleted) &&
        Objects.equals(this.userId, getSpecificPostsFromTopic200ResponsePostStreamPostsInner.userId) &&
        Objects.equals(this.userTitle, getSpecificPostsFromTopic200ResponsePostStreamPostsInner.userTitle) &&
        Objects.equals(this.username, getSpecificPostsFromTopic200ResponsePostStreamPostsInner.username) &&
        Objects.equals(this.version, getSpecificPostsFromTopic200ResponsePostStreamPostsInner.version) &&
        Objects.equals(this.wiki, getSpecificPostsFromTopic200ResponsePostStreamPostsInner.wiki) &&
        Objects.equals(this.yours, getSpecificPostsFromTopic200ResponsePostStreamPostsInner.yours);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(actionsSummary, admin, avatarTemplate, canDelete, canEdit, canRecover, canViewEditHistory, canWiki, cooked, createdAt, deletedAt, displayUsername, editReason, flairBgColor, flairColor, flairName, flairUrl, hidden, id, incomingLinkCount, moderator, name, postNumber, postType, primaryGroupName, quoteCount, read, readersCount, reads, replyCount, replyToPostNumber, reviewableId, reviewableScoreCount, reviewableScorePendingCount, score, staff, topicId, topicSlug, trustLevel, updatedAt, userDeleted, userId, userTitle, username, version, wiki, yours);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetSpecificPostsFromTopic200ResponsePostStreamPostsInner {\n");
    sb.append("    actionsSummary: ").append(toIndentedString(actionsSummary)).append("\n");
    sb.append("    admin: ").append(toIndentedString(admin)).append("\n");
    sb.append("    avatarTemplate: ").append(toIndentedString(avatarTemplate)).append("\n");
    sb.append("    canDelete: ").append(toIndentedString(canDelete)).append("\n");
    sb.append("    canEdit: ").append(toIndentedString(canEdit)).append("\n");
    sb.append("    canRecover: ").append(toIndentedString(canRecover)).append("\n");
    sb.append("    canViewEditHistory: ").append(toIndentedString(canViewEditHistory)).append("\n");
    sb.append("    canWiki: ").append(toIndentedString(canWiki)).append("\n");
    sb.append("    cooked: ").append(toIndentedString(cooked)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    deletedAt: ").append(toIndentedString(deletedAt)).append("\n");
    sb.append("    displayUsername: ").append(toIndentedString(displayUsername)).append("\n");
    sb.append("    editReason: ").append(toIndentedString(editReason)).append("\n");
    sb.append("    flairBgColor: ").append(toIndentedString(flairBgColor)).append("\n");
    sb.append("    flairColor: ").append(toIndentedString(flairColor)).append("\n");
    sb.append("    flairName: ").append(toIndentedString(flairName)).append("\n");
    sb.append("    flairUrl: ").append(toIndentedString(flairUrl)).append("\n");
    sb.append("    hidden: ").append(toIndentedString(hidden)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    incomingLinkCount: ").append(toIndentedString(incomingLinkCount)).append("\n");
    sb.append("    moderator: ").append(toIndentedString(moderator)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    postNumber: ").append(toIndentedString(postNumber)).append("\n");
    sb.append("    postType: ").append(toIndentedString(postType)).append("\n");
    sb.append("    primaryGroupName: ").append(toIndentedString(primaryGroupName)).append("\n");
    sb.append("    quoteCount: ").append(toIndentedString(quoteCount)).append("\n");
    sb.append("    read: ").append(toIndentedString(read)).append("\n");
    sb.append("    readersCount: ").append(toIndentedString(readersCount)).append("\n");
    sb.append("    reads: ").append(toIndentedString(reads)).append("\n");
    sb.append("    replyCount: ").append(toIndentedString(replyCount)).append("\n");
    sb.append("    replyToPostNumber: ").append(toIndentedString(replyToPostNumber)).append("\n");
    sb.append("    reviewableId: ").append(toIndentedString(reviewableId)).append("\n");
    sb.append("    reviewableScoreCount: ").append(toIndentedString(reviewableScoreCount)).append("\n");
    sb.append("    reviewableScorePendingCount: ").append(toIndentedString(reviewableScorePendingCount)).append("\n");
    sb.append("    score: ").append(toIndentedString(score)).append("\n");
    sb.append("    staff: ").append(toIndentedString(staff)).append("\n");
    sb.append("    topicId: ").append(toIndentedString(topicId)).append("\n");
    sb.append("    topicSlug: ").append(toIndentedString(topicSlug)).append("\n");
    sb.append("    trustLevel: ").append(toIndentedString(trustLevel)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    userDeleted: ").append(toIndentedString(userDeleted)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    userTitle: ").append(toIndentedString(userTitle)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    wiki: ").append(toIndentedString(wiki)).append("\n");
    sb.append("    yours: ").append(toIndentedString(yours)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("actions_summary");
    openapiFields.add("admin");
    openapiFields.add("avatar_template");
    openapiFields.add("can_delete");
    openapiFields.add("can_edit");
    openapiFields.add("can_recover");
    openapiFields.add("can_view_edit_history");
    openapiFields.add("can_wiki");
    openapiFields.add("cooked");
    openapiFields.add("created_at");
    openapiFields.add("deleted_at");
    openapiFields.add("display_username");
    openapiFields.add("edit_reason");
    openapiFields.add("flair_bg_color");
    openapiFields.add("flair_color");
    openapiFields.add("flair_name");
    openapiFields.add("flair_url");
    openapiFields.add("hidden");
    openapiFields.add("id");
    openapiFields.add("incoming_link_count");
    openapiFields.add("moderator");
    openapiFields.add("name");
    openapiFields.add("post_number");
    openapiFields.add("post_type");
    openapiFields.add("primary_group_name");
    openapiFields.add("quote_count");
    openapiFields.add("read");
    openapiFields.add("readers_count");
    openapiFields.add("reads");
    openapiFields.add("reply_count");
    openapiFields.add("reply_to_post_number");
    openapiFields.add("reviewable_id");
    openapiFields.add("reviewable_score_count");
    openapiFields.add("reviewable_score_pending_count");
    openapiFields.add("score");
    openapiFields.add("staff");
    openapiFields.add("topic_id");
    openapiFields.add("topic_slug");
    openapiFields.add("trust_level");
    openapiFields.add("updated_at");
    openapiFields.add("user_deleted");
    openapiFields.add("user_id");
    openapiFields.add("user_title");
    openapiFields.add("username");
    openapiFields.add("version");
    openapiFields.add("wiki");
    openapiFields.add("yours");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetSpecificPostsFromTopic200ResponsePostStreamPostsInner
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetSpecificPostsFromTopic200ResponsePostStreamPostsInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetSpecificPostsFromTopic200ResponsePostStreamPostsInner is not found in the empty JSON string", GetSpecificPostsFromTopic200ResponsePostStreamPostsInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetSpecificPostsFromTopic200ResponsePostStreamPostsInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetSpecificPostsFromTopic200ResponsePostStreamPostsInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("actions_summary") != null && !jsonObj.get("actions_summary").isJsonNull()) {
        JsonArray jsonArrayactionsSummary = jsonObj.getAsJsonArray("actions_summary");
        if (jsonArrayactionsSummary != null) {
          // ensure the json data is an array
          if (!jsonObj.get("actions_summary").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `actions_summary` to be an array in the JSON string but got `%s`", jsonObj.get("actions_summary").toString()));
          }

          // validate the optional field `actions_summary` (array)
          for (int i = 0; i < jsonArrayactionsSummary.size(); i++) {
            ListPosts200ResponseLatestPostsInnerActionsSummaryInner.validateJsonElement(jsonArrayactionsSummary.get(i));
          };
        }
      }
      if ((jsonObj.get("avatar_template") != null && !jsonObj.get("avatar_template").isJsonNull()) && !jsonObj.get("avatar_template").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `avatar_template` to be a primitive type in the JSON string but got `%s`", jsonObj.get("avatar_template").toString()));
      }
      if ((jsonObj.get("cooked") != null && !jsonObj.get("cooked").isJsonNull()) && !jsonObj.get("cooked").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cooked` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cooked").toString()));
      }
      if ((jsonObj.get("created_at") != null && !jsonObj.get("created_at").isJsonNull()) && !jsonObj.get("created_at").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `created_at` to be a primitive type in the JSON string but got `%s`", jsonObj.get("created_at").toString()));
      }
      if ((jsonObj.get("deleted_at") != null && !jsonObj.get("deleted_at").isJsonNull()) && !jsonObj.get("deleted_at").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `deleted_at` to be a primitive type in the JSON string but got `%s`", jsonObj.get("deleted_at").toString()));
      }
      if ((jsonObj.get("display_username") != null && !jsonObj.get("display_username").isJsonNull()) && !jsonObj.get("display_username").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `display_username` to be a primitive type in the JSON string but got `%s`", jsonObj.get("display_username").toString()));
      }
      if ((jsonObj.get("edit_reason") != null && !jsonObj.get("edit_reason").isJsonNull()) && !jsonObj.get("edit_reason").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `edit_reason` to be a primitive type in the JSON string but got `%s`", jsonObj.get("edit_reason").toString()));
      }
      if ((jsonObj.get("flair_bg_color") != null && !jsonObj.get("flair_bg_color").isJsonNull()) && !jsonObj.get("flair_bg_color").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `flair_bg_color` to be a primitive type in the JSON string but got `%s`", jsonObj.get("flair_bg_color").toString()));
      }
      if ((jsonObj.get("flair_color") != null && !jsonObj.get("flair_color").isJsonNull()) && !jsonObj.get("flair_color").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `flair_color` to be a primitive type in the JSON string but got `%s`", jsonObj.get("flair_color").toString()));
      }
      if ((jsonObj.get("flair_name") != null && !jsonObj.get("flair_name").isJsonNull()) && !jsonObj.get("flair_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `flair_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("flair_name").toString()));
      }
      if ((jsonObj.get("flair_url") != null && !jsonObj.get("flair_url").isJsonNull()) && !jsonObj.get("flair_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `flair_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("flair_url").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("primary_group_name") != null && !jsonObj.get("primary_group_name").isJsonNull()) && !jsonObj.get("primary_group_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `primary_group_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("primary_group_name").toString()));
      }
      if ((jsonObj.get("reply_to_post_number") != null && !jsonObj.get("reply_to_post_number").isJsonNull()) && !jsonObj.get("reply_to_post_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `reply_to_post_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("reply_to_post_number").toString()));
      }
      if ((jsonObj.get("topic_slug") != null && !jsonObj.get("topic_slug").isJsonNull()) && !jsonObj.get("topic_slug").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `topic_slug` to be a primitive type in the JSON string but got `%s`", jsonObj.get("topic_slug").toString()));
      }
      if ((jsonObj.get("updated_at") != null && !jsonObj.get("updated_at").isJsonNull()) && !jsonObj.get("updated_at").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `updated_at` to be a primitive type in the JSON string but got `%s`", jsonObj.get("updated_at").toString()));
      }
      if ((jsonObj.get("user_title") != null && !jsonObj.get("user_title").isJsonNull()) && !jsonObj.get("user_title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `user_title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("user_title").toString()));
      }
      if ((jsonObj.get("username") != null && !jsonObj.get("username").isJsonNull()) && !jsonObj.get("username").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `username` to be a primitive type in the JSON string but got `%s`", jsonObj.get("username").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetSpecificPostsFromTopic200ResponsePostStreamPostsInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetSpecificPostsFromTopic200ResponsePostStreamPostsInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetSpecificPostsFromTopic200ResponsePostStreamPostsInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetSpecificPostsFromTopic200ResponsePostStreamPostsInner.class));

       return (TypeAdapter<T>) new TypeAdapter<GetSpecificPostsFromTopic200ResponsePostStreamPostsInner>() {
           @Override
           public void write(JsonWriter out, GetSpecificPostsFromTopic200ResponsePostStreamPostsInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetSpecificPostsFromTopic200ResponsePostStreamPostsInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetSpecificPostsFromTopic200ResponsePostStreamPostsInner given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetSpecificPostsFromTopic200ResponsePostStreamPostsInner
   * @throws IOException if the JSON string is invalid with respect to GetSpecificPostsFromTopic200ResponsePostStreamPostsInner
   */
  public static GetSpecificPostsFromTopic200ResponsePostStreamPostsInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetSpecificPostsFromTopic200ResponsePostStreamPostsInner.class);
  }

  /**
   * Convert an instance of GetSpecificPostsFromTopic200ResponsePostStreamPostsInner to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

