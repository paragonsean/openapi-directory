/*
 * Discourse API Documentation
 * This page contains the documentation on how to use Discourse through API calls.  > Note: For any endpoints not listed you can follow the [reverse engineer the Discourse API](https://meta.discourse.org/t/-/20576) guide to figure out how to use an API endpoint.  ### Request Content-Type  The Content-Type for POST and PUT requests can be set to `application/x-www-form-urlencoded`, `multipart/form-data`, or `application/json`.  ### Endpoint Names and Response Content-Type  Most API endpoints provide the same content as their HTML counterparts. For example the URL `/categories` serves a list of categories, the `/categories.json` API provides the same information in JSON format.  Instead of sending API requests to `/categories.json` you may also send them to `/categories` and add an `Accept: application/json` header to the request to get the JSON response. Sending requests with the `Accept` header is necessary if you want to use URLs for related endpoints returned by the API, such as pagination URLs. These URLs are returned without the `.json` prefix so you need to add the header in order to get the correct response format.  ### Authentication  Some endpoints do not require any authentication, pretty much anything else will require you to be authenticated.  To become authenticated you will need to create an API Key from the admin panel.  Once you have your API Key you can pass it in along with your API Username as an HTTP header like this:  ``` curl -X GET \"http://127.0.0.1:3000/admin/users/list/active.json\" \\ -H \"Api-Key: 714552c6148e1617aeab526d0606184b94a80ec048fc09894ff1a72b740c5f19\" \\ -H \"Api-Username: system\" ```  and this is how POST requests will look:  ``` curl -X POST \"http://127.0.0.1:3000/categories\" \\ -H \"Content-Type: multipart/form-data;\" \\ -H \"Api-Key: 714552c6148e1617aeab526d0606184b94a80ec048fc09894ff1a72b740c5f19\" \\ -H \"Api-Username: system\" \\ -F \"name=89853c20-4409-e91a-a8ea-f6cdff96aaaa\" \\ -F \"color=49d9e9\" \\ -F \"text_color=f0fcfd\" ```  ### Boolean values  If an endpoint accepts a boolean be sure to specify it as a lowercase `true` or `false` value unless noted otherwise. 
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GetUserExternalId200ResponseUserUserOption
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:12:34.324076-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetUserExternalId200ResponseUserUserOption {
  public static final String SERIALIZED_NAME_ALLOW_PRIVATE_MESSAGES = "allow_private_messages";
  @SerializedName(SERIALIZED_NAME_ALLOW_PRIVATE_MESSAGES)
  private Boolean allowPrivateMessages;

  public static final String SERIALIZED_NAME_AUTO_TRACK_TOPICS_AFTER_MSECS = "auto_track_topics_after_msecs";
  @SerializedName(SERIALIZED_NAME_AUTO_TRACK_TOPICS_AFTER_MSECS)
  private Integer autoTrackTopicsAfterMsecs;

  public static final String SERIALIZED_NAME_AUTOMATICALLY_UNPIN_TOPICS = "automatically_unpin_topics";
  @SerializedName(SERIALIZED_NAME_AUTOMATICALLY_UNPIN_TOPICS)
  private Boolean automaticallyUnpinTopics;

  public static final String SERIALIZED_NAME_BOOKMARK_AUTO_DELETE_PREFERENCE = "bookmark_auto_delete_preference";
  @SerializedName(SERIALIZED_NAME_BOOKMARK_AUTO_DELETE_PREFERENCE)
  private Integer bookmarkAutoDeletePreference;

  public static final String SERIALIZED_NAME_COLOR_SCHEME_ID = "color_scheme_id";
  @SerializedName(SERIALIZED_NAME_COLOR_SCHEME_ID)
  private String colorSchemeId;

  public static final String SERIALIZED_NAME_DARK_SCHEME_ID = "dark_scheme_id";
  @SerializedName(SERIALIZED_NAME_DARK_SCHEME_ID)
  private String darkSchemeId;

  public static final String SERIALIZED_NAME_DEFAULT_CALENDAR = "default_calendar";
  @SerializedName(SERIALIZED_NAME_DEFAULT_CALENDAR)
  private String defaultCalendar;

  public static final String SERIALIZED_NAME_DIGEST_AFTER_MINUTES = "digest_after_minutes";
  @SerializedName(SERIALIZED_NAME_DIGEST_AFTER_MINUTES)
  private Integer digestAfterMinutes;

  public static final String SERIALIZED_NAME_DYNAMIC_FAVICON = "dynamic_favicon";
  @SerializedName(SERIALIZED_NAME_DYNAMIC_FAVICON)
  private Boolean dynamicFavicon;

  public static final String SERIALIZED_NAME_EMAIL_DIGESTS = "email_digests";
  @SerializedName(SERIALIZED_NAME_EMAIL_DIGESTS)
  private Boolean emailDigests;

  public static final String SERIALIZED_NAME_EMAIL_IN_REPLY_TO = "email_in_reply_to";
  @SerializedName(SERIALIZED_NAME_EMAIL_IN_REPLY_TO)
  private Boolean emailInReplyTo;

  public static final String SERIALIZED_NAME_EMAIL_LEVEL = "email_level";
  @SerializedName(SERIALIZED_NAME_EMAIL_LEVEL)
  private Integer emailLevel;

  public static final String SERIALIZED_NAME_EMAIL_MESSAGES_LEVEL = "email_messages_level";
  @SerializedName(SERIALIZED_NAME_EMAIL_MESSAGES_LEVEL)
  private Integer emailMessagesLevel;

  public static final String SERIALIZED_NAME_EMAIL_PREVIOUS_REPLIES = "email_previous_replies";
  @SerializedName(SERIALIZED_NAME_EMAIL_PREVIOUS_REPLIES)
  private Integer emailPreviousReplies;

  public static final String SERIALIZED_NAME_ENABLE_ALLOWED_PM_USERS = "enable_allowed_pm_users";
  @SerializedName(SERIALIZED_NAME_ENABLE_ALLOWED_PM_USERS)
  private Boolean enableAllowedPmUsers;

  public static final String SERIALIZED_NAME_ENABLE_DEFER = "enable_defer";
  @SerializedName(SERIALIZED_NAME_ENABLE_DEFER)
  private Boolean enableDefer;

  public static final String SERIALIZED_NAME_ENABLE_QUOTING = "enable_quoting";
  @SerializedName(SERIALIZED_NAME_ENABLE_QUOTING)
  private Boolean enableQuoting;

  public static final String SERIALIZED_NAME_EXTERNAL_LINKS_IN_NEW_TAB = "external_links_in_new_tab";
  @SerializedName(SERIALIZED_NAME_EXTERNAL_LINKS_IN_NEW_TAB)
  private Boolean externalLinksInNewTab;

  public static final String SERIALIZED_NAME_HIDE_PROFILE_AND_PRESENCE = "hide_profile_and_presence";
  @SerializedName(SERIALIZED_NAME_HIDE_PROFILE_AND_PRESENCE)
  private Boolean hideProfileAndPresence;

  public static final String SERIALIZED_NAME_HOMEPAGE_ID = "homepage_id";
  @SerializedName(SERIALIZED_NAME_HOMEPAGE_ID)
  private String homepageId;

  public static final String SERIALIZED_NAME_INCLUDE_TL0_IN_DIGESTS = "include_tl0_in_digests";
  @SerializedName(SERIALIZED_NAME_INCLUDE_TL0_IN_DIGESTS)
  private Boolean includeTl0InDigests;

  public static final String SERIALIZED_NAME_LIKE_NOTIFICATION_FREQUENCY = "like_notification_frequency";
  @SerializedName(SERIALIZED_NAME_LIKE_NOTIFICATION_FREQUENCY)
  private Integer likeNotificationFrequency;

  public static final String SERIALIZED_NAME_MAILING_LIST_MODE = "mailing_list_mode";
  @SerializedName(SERIALIZED_NAME_MAILING_LIST_MODE)
  private Boolean mailingListMode;

  public static final String SERIALIZED_NAME_MAILING_LIST_MODE_FREQUENCY = "mailing_list_mode_frequency";
  @SerializedName(SERIALIZED_NAME_MAILING_LIST_MODE_FREQUENCY)
  private Integer mailingListModeFrequency;

  public static final String SERIALIZED_NAME_NEW_TOPIC_DURATION_MINUTES = "new_topic_duration_minutes";
  @SerializedName(SERIALIZED_NAME_NEW_TOPIC_DURATION_MINUTES)
  private Integer newTopicDurationMinutes;

  public static final String SERIALIZED_NAME_NOTIFICATION_LEVEL_WHEN_REPLYING = "notification_level_when_replying";
  @SerializedName(SERIALIZED_NAME_NOTIFICATION_LEVEL_WHEN_REPLYING)
  private Integer notificationLevelWhenReplying;

  public static final String SERIALIZED_NAME_OLDEST_SEARCH_LOG_DATE = "oldest_search_log_date";
  @SerializedName(SERIALIZED_NAME_OLDEST_SEARCH_LOG_DATE)
  private String oldestSearchLogDate;

  public static final String SERIALIZED_NAME_SEEN_POPUPS = "seen_popups";
  @SerializedName(SERIALIZED_NAME_SEEN_POPUPS)
  private List<Object> seenPopups = new ArrayList<>();

  public static final String SERIALIZED_NAME_SIDEBAR_LIST_DESTINATION = "sidebar_list_destination";
  @SerializedName(SERIALIZED_NAME_SIDEBAR_LIST_DESTINATION)
  private String sidebarListDestination;

  public static final String SERIALIZED_NAME_SKIP_NEW_USER_TIPS = "skip_new_user_tips";
  @SerializedName(SERIALIZED_NAME_SKIP_NEW_USER_TIPS)
  private Boolean skipNewUserTips;

  public static final String SERIALIZED_NAME_TEXT_SIZE = "text_size";
  @SerializedName(SERIALIZED_NAME_TEXT_SIZE)
  private String textSize;

  public static final String SERIALIZED_NAME_TEXT_SIZE_SEQ = "text_size_seq";
  @SerializedName(SERIALIZED_NAME_TEXT_SIZE_SEQ)
  private Integer textSizeSeq;

  public static final String SERIALIZED_NAME_THEME_IDS = "theme_ids";
  @SerializedName(SERIALIZED_NAME_THEME_IDS)
  private List<Object> themeIds = new ArrayList<>();

  public static final String SERIALIZED_NAME_THEME_KEY_SEQ = "theme_key_seq";
  @SerializedName(SERIALIZED_NAME_THEME_KEY_SEQ)
  private Integer themeKeySeq;

  public static final String SERIALIZED_NAME_TIMEZONE = "timezone";
  @SerializedName(SERIALIZED_NAME_TIMEZONE)
  private String timezone;

  public static final String SERIALIZED_NAME_TITLE_COUNT_MODE = "title_count_mode";
  @SerializedName(SERIALIZED_NAME_TITLE_COUNT_MODE)
  private String titleCountMode;

  public static final String SERIALIZED_NAME_USER_ID = "user_id";
  @SerializedName(SERIALIZED_NAME_USER_ID)
  private Integer userId;

  public GetUserExternalId200ResponseUserUserOption() {
  }

  public GetUserExternalId200ResponseUserUserOption allowPrivateMessages(Boolean allowPrivateMessages) {
    this.allowPrivateMessages = allowPrivateMessages;
    return this;
  }

  /**
   * Get allowPrivateMessages
   * @return allowPrivateMessages
   */
  @javax.annotation.Nonnull
  public Boolean getAllowPrivateMessages() {
    return allowPrivateMessages;
  }

  public void setAllowPrivateMessages(Boolean allowPrivateMessages) {
    this.allowPrivateMessages = allowPrivateMessages;
  }


  public GetUserExternalId200ResponseUserUserOption autoTrackTopicsAfterMsecs(Integer autoTrackTopicsAfterMsecs) {
    this.autoTrackTopicsAfterMsecs = autoTrackTopicsAfterMsecs;
    return this;
  }

  /**
   * Get autoTrackTopicsAfterMsecs
   * @return autoTrackTopicsAfterMsecs
   */
  @javax.annotation.Nonnull
  public Integer getAutoTrackTopicsAfterMsecs() {
    return autoTrackTopicsAfterMsecs;
  }

  public void setAutoTrackTopicsAfterMsecs(Integer autoTrackTopicsAfterMsecs) {
    this.autoTrackTopicsAfterMsecs = autoTrackTopicsAfterMsecs;
  }


  public GetUserExternalId200ResponseUserUserOption automaticallyUnpinTopics(Boolean automaticallyUnpinTopics) {
    this.automaticallyUnpinTopics = automaticallyUnpinTopics;
    return this;
  }

  /**
   * Get automaticallyUnpinTopics
   * @return automaticallyUnpinTopics
   */
  @javax.annotation.Nonnull
  public Boolean getAutomaticallyUnpinTopics() {
    return automaticallyUnpinTopics;
  }

  public void setAutomaticallyUnpinTopics(Boolean automaticallyUnpinTopics) {
    this.automaticallyUnpinTopics = automaticallyUnpinTopics;
  }


  public GetUserExternalId200ResponseUserUserOption bookmarkAutoDeletePreference(Integer bookmarkAutoDeletePreference) {
    this.bookmarkAutoDeletePreference = bookmarkAutoDeletePreference;
    return this;
  }

  /**
   * Get bookmarkAutoDeletePreference
   * @return bookmarkAutoDeletePreference
   */
  @javax.annotation.Nullable
  public Integer getBookmarkAutoDeletePreference() {
    return bookmarkAutoDeletePreference;
  }

  public void setBookmarkAutoDeletePreference(Integer bookmarkAutoDeletePreference) {
    this.bookmarkAutoDeletePreference = bookmarkAutoDeletePreference;
  }


  public GetUserExternalId200ResponseUserUserOption colorSchemeId(String colorSchemeId) {
    this.colorSchemeId = colorSchemeId;
    return this;
  }

  /**
   * Get colorSchemeId
   * @return colorSchemeId
   */
  @javax.annotation.Nullable
  public String getColorSchemeId() {
    return colorSchemeId;
  }

  public void setColorSchemeId(String colorSchemeId) {
    this.colorSchemeId = colorSchemeId;
  }


  public GetUserExternalId200ResponseUserUserOption darkSchemeId(String darkSchemeId) {
    this.darkSchemeId = darkSchemeId;
    return this;
  }

  /**
   * Get darkSchemeId
   * @return darkSchemeId
   */
  @javax.annotation.Nullable
  public String getDarkSchemeId() {
    return darkSchemeId;
  }

  public void setDarkSchemeId(String darkSchemeId) {
    this.darkSchemeId = darkSchemeId;
  }


  public GetUserExternalId200ResponseUserUserOption defaultCalendar(String defaultCalendar) {
    this.defaultCalendar = defaultCalendar;
    return this;
  }

  /**
   * Get defaultCalendar
   * @return defaultCalendar
   */
  @javax.annotation.Nullable
  public String getDefaultCalendar() {
    return defaultCalendar;
  }

  public void setDefaultCalendar(String defaultCalendar) {
    this.defaultCalendar = defaultCalendar;
  }


  public GetUserExternalId200ResponseUserUserOption digestAfterMinutes(Integer digestAfterMinutes) {
    this.digestAfterMinutes = digestAfterMinutes;
    return this;
  }

  /**
   * Get digestAfterMinutes
   * @return digestAfterMinutes
   */
  @javax.annotation.Nonnull
  public Integer getDigestAfterMinutes() {
    return digestAfterMinutes;
  }

  public void setDigestAfterMinutes(Integer digestAfterMinutes) {
    this.digestAfterMinutes = digestAfterMinutes;
  }


  public GetUserExternalId200ResponseUserUserOption dynamicFavicon(Boolean dynamicFavicon) {
    this.dynamicFavicon = dynamicFavicon;
    return this;
  }

  /**
   * Get dynamicFavicon
   * @return dynamicFavicon
   */
  @javax.annotation.Nonnull
  public Boolean getDynamicFavicon() {
    return dynamicFavicon;
  }

  public void setDynamicFavicon(Boolean dynamicFavicon) {
    this.dynamicFavicon = dynamicFavicon;
  }


  public GetUserExternalId200ResponseUserUserOption emailDigests(Boolean emailDigests) {
    this.emailDigests = emailDigests;
    return this;
  }

  /**
   * Get emailDigests
   * @return emailDigests
   */
  @javax.annotation.Nonnull
  public Boolean getEmailDigests() {
    return emailDigests;
  }

  public void setEmailDigests(Boolean emailDigests) {
    this.emailDigests = emailDigests;
  }


  public GetUserExternalId200ResponseUserUserOption emailInReplyTo(Boolean emailInReplyTo) {
    this.emailInReplyTo = emailInReplyTo;
    return this;
  }

  /**
   * Get emailInReplyTo
   * @return emailInReplyTo
   */
  @javax.annotation.Nonnull
  public Boolean getEmailInReplyTo() {
    return emailInReplyTo;
  }

  public void setEmailInReplyTo(Boolean emailInReplyTo) {
    this.emailInReplyTo = emailInReplyTo;
  }


  public GetUserExternalId200ResponseUserUserOption emailLevel(Integer emailLevel) {
    this.emailLevel = emailLevel;
    return this;
  }

  /**
   * Get emailLevel
   * @return emailLevel
   */
  @javax.annotation.Nonnull
  public Integer getEmailLevel() {
    return emailLevel;
  }

  public void setEmailLevel(Integer emailLevel) {
    this.emailLevel = emailLevel;
  }


  public GetUserExternalId200ResponseUserUserOption emailMessagesLevel(Integer emailMessagesLevel) {
    this.emailMessagesLevel = emailMessagesLevel;
    return this;
  }

  /**
   * Get emailMessagesLevel
   * @return emailMessagesLevel
   */
  @javax.annotation.Nonnull
  public Integer getEmailMessagesLevel() {
    return emailMessagesLevel;
  }

  public void setEmailMessagesLevel(Integer emailMessagesLevel) {
    this.emailMessagesLevel = emailMessagesLevel;
  }


  public GetUserExternalId200ResponseUserUserOption emailPreviousReplies(Integer emailPreviousReplies) {
    this.emailPreviousReplies = emailPreviousReplies;
    return this;
  }

  /**
   * Get emailPreviousReplies
   * @return emailPreviousReplies
   */
  @javax.annotation.Nonnull
  public Integer getEmailPreviousReplies() {
    return emailPreviousReplies;
  }

  public void setEmailPreviousReplies(Integer emailPreviousReplies) {
    this.emailPreviousReplies = emailPreviousReplies;
  }


  public GetUserExternalId200ResponseUserUserOption enableAllowedPmUsers(Boolean enableAllowedPmUsers) {
    this.enableAllowedPmUsers = enableAllowedPmUsers;
    return this;
  }

  /**
   * Get enableAllowedPmUsers
   * @return enableAllowedPmUsers
   */
  @javax.annotation.Nonnull
  public Boolean getEnableAllowedPmUsers() {
    return enableAllowedPmUsers;
  }

  public void setEnableAllowedPmUsers(Boolean enableAllowedPmUsers) {
    this.enableAllowedPmUsers = enableAllowedPmUsers;
  }


  public GetUserExternalId200ResponseUserUserOption enableDefer(Boolean enableDefer) {
    this.enableDefer = enableDefer;
    return this;
  }

  /**
   * Get enableDefer
   * @return enableDefer
   */
  @javax.annotation.Nonnull
  public Boolean getEnableDefer() {
    return enableDefer;
  }

  public void setEnableDefer(Boolean enableDefer) {
    this.enableDefer = enableDefer;
  }


  public GetUserExternalId200ResponseUserUserOption enableQuoting(Boolean enableQuoting) {
    this.enableQuoting = enableQuoting;
    return this;
  }

  /**
   * Get enableQuoting
   * @return enableQuoting
   */
  @javax.annotation.Nonnull
  public Boolean getEnableQuoting() {
    return enableQuoting;
  }

  public void setEnableQuoting(Boolean enableQuoting) {
    this.enableQuoting = enableQuoting;
  }


  public GetUserExternalId200ResponseUserUserOption externalLinksInNewTab(Boolean externalLinksInNewTab) {
    this.externalLinksInNewTab = externalLinksInNewTab;
    return this;
  }

  /**
   * Get externalLinksInNewTab
   * @return externalLinksInNewTab
   */
  @javax.annotation.Nonnull
  public Boolean getExternalLinksInNewTab() {
    return externalLinksInNewTab;
  }

  public void setExternalLinksInNewTab(Boolean externalLinksInNewTab) {
    this.externalLinksInNewTab = externalLinksInNewTab;
  }


  public GetUserExternalId200ResponseUserUserOption hideProfileAndPresence(Boolean hideProfileAndPresence) {
    this.hideProfileAndPresence = hideProfileAndPresence;
    return this;
  }

  /**
   * Get hideProfileAndPresence
   * @return hideProfileAndPresence
   */
  @javax.annotation.Nonnull
  public Boolean getHideProfileAndPresence() {
    return hideProfileAndPresence;
  }

  public void setHideProfileAndPresence(Boolean hideProfileAndPresence) {
    this.hideProfileAndPresence = hideProfileAndPresence;
  }


  public GetUserExternalId200ResponseUserUserOption homepageId(String homepageId) {
    this.homepageId = homepageId;
    return this;
  }

  /**
   * Get homepageId
   * @return homepageId
   */
  @javax.annotation.Nullable
  public String getHomepageId() {
    return homepageId;
  }

  public void setHomepageId(String homepageId) {
    this.homepageId = homepageId;
  }


  public GetUserExternalId200ResponseUserUserOption includeTl0InDigests(Boolean includeTl0InDigests) {
    this.includeTl0InDigests = includeTl0InDigests;
    return this;
  }

  /**
   * Get includeTl0InDigests
   * @return includeTl0InDigests
   */
  @javax.annotation.Nonnull
  public Boolean getIncludeTl0InDigests() {
    return includeTl0InDigests;
  }

  public void setIncludeTl0InDigests(Boolean includeTl0InDigests) {
    this.includeTl0InDigests = includeTl0InDigests;
  }


  public GetUserExternalId200ResponseUserUserOption likeNotificationFrequency(Integer likeNotificationFrequency) {
    this.likeNotificationFrequency = likeNotificationFrequency;
    return this;
  }

  /**
   * Get likeNotificationFrequency
   * @return likeNotificationFrequency
   */
  @javax.annotation.Nonnull
  public Integer getLikeNotificationFrequency() {
    return likeNotificationFrequency;
  }

  public void setLikeNotificationFrequency(Integer likeNotificationFrequency) {
    this.likeNotificationFrequency = likeNotificationFrequency;
  }


  public GetUserExternalId200ResponseUserUserOption mailingListMode(Boolean mailingListMode) {
    this.mailingListMode = mailingListMode;
    return this;
  }

  /**
   * Get mailingListMode
   * @return mailingListMode
   */
  @javax.annotation.Nonnull
  public Boolean getMailingListMode() {
    return mailingListMode;
  }

  public void setMailingListMode(Boolean mailingListMode) {
    this.mailingListMode = mailingListMode;
  }


  public GetUserExternalId200ResponseUserUserOption mailingListModeFrequency(Integer mailingListModeFrequency) {
    this.mailingListModeFrequency = mailingListModeFrequency;
    return this;
  }

  /**
   * Get mailingListModeFrequency
   * @return mailingListModeFrequency
   */
  @javax.annotation.Nonnull
  public Integer getMailingListModeFrequency() {
    return mailingListModeFrequency;
  }

  public void setMailingListModeFrequency(Integer mailingListModeFrequency) {
    this.mailingListModeFrequency = mailingListModeFrequency;
  }


  public GetUserExternalId200ResponseUserUserOption newTopicDurationMinutes(Integer newTopicDurationMinutes) {
    this.newTopicDurationMinutes = newTopicDurationMinutes;
    return this;
  }

  /**
   * Get newTopicDurationMinutes
   * @return newTopicDurationMinutes
   */
  @javax.annotation.Nonnull
  public Integer getNewTopicDurationMinutes() {
    return newTopicDurationMinutes;
  }

  public void setNewTopicDurationMinutes(Integer newTopicDurationMinutes) {
    this.newTopicDurationMinutes = newTopicDurationMinutes;
  }


  public GetUserExternalId200ResponseUserUserOption notificationLevelWhenReplying(Integer notificationLevelWhenReplying) {
    this.notificationLevelWhenReplying = notificationLevelWhenReplying;
    return this;
  }

  /**
   * Get notificationLevelWhenReplying
   * @return notificationLevelWhenReplying
   */
  @javax.annotation.Nonnull
  public Integer getNotificationLevelWhenReplying() {
    return notificationLevelWhenReplying;
  }

  public void setNotificationLevelWhenReplying(Integer notificationLevelWhenReplying) {
    this.notificationLevelWhenReplying = notificationLevelWhenReplying;
  }


  public GetUserExternalId200ResponseUserUserOption oldestSearchLogDate(String oldestSearchLogDate) {
    this.oldestSearchLogDate = oldestSearchLogDate;
    return this;
  }

  /**
   * Get oldestSearchLogDate
   * @return oldestSearchLogDate
   */
  @javax.annotation.Nullable
  public String getOldestSearchLogDate() {
    return oldestSearchLogDate;
  }

  public void setOldestSearchLogDate(String oldestSearchLogDate) {
    this.oldestSearchLogDate = oldestSearchLogDate;
  }


  public GetUserExternalId200ResponseUserUserOption seenPopups(List<Object> seenPopups) {
    this.seenPopups = seenPopups;
    return this;
  }

  public GetUserExternalId200ResponseUserUserOption addSeenPopupsItem(Object seenPopupsItem) {
    if (this.seenPopups == null) {
      this.seenPopups = new ArrayList<>();
    }
    this.seenPopups.add(seenPopupsItem);
    return this;
  }

  /**
   * Get seenPopups
   * @return seenPopups
   */
  @javax.annotation.Nullable
  public List<Object> getSeenPopups() {
    return seenPopups;
  }

  public void setSeenPopups(List<Object> seenPopups) {
    this.seenPopups = seenPopups;
  }


  public GetUserExternalId200ResponseUserUserOption sidebarListDestination(String sidebarListDestination) {
    this.sidebarListDestination = sidebarListDestination;
    return this;
  }

  /**
   * Get sidebarListDestination
   * @return sidebarListDestination
   */
  @javax.annotation.Nullable
  public String getSidebarListDestination() {
    return sidebarListDestination;
  }

  public void setSidebarListDestination(String sidebarListDestination) {
    this.sidebarListDestination = sidebarListDestination;
  }


  public GetUserExternalId200ResponseUserUserOption skipNewUserTips(Boolean skipNewUserTips) {
    this.skipNewUserTips = skipNewUserTips;
    return this;
  }

  /**
   * Get skipNewUserTips
   * @return skipNewUserTips
   */
  @javax.annotation.Nonnull
  public Boolean getSkipNewUserTips() {
    return skipNewUserTips;
  }

  public void setSkipNewUserTips(Boolean skipNewUserTips) {
    this.skipNewUserTips = skipNewUserTips;
  }


  public GetUserExternalId200ResponseUserUserOption textSize(String textSize) {
    this.textSize = textSize;
    return this;
  }

  /**
   * Get textSize
   * @return textSize
   */
  @javax.annotation.Nonnull
  public String getTextSize() {
    return textSize;
  }

  public void setTextSize(String textSize) {
    this.textSize = textSize;
  }


  public GetUserExternalId200ResponseUserUserOption textSizeSeq(Integer textSizeSeq) {
    this.textSizeSeq = textSizeSeq;
    return this;
  }

  /**
   * Get textSizeSeq
   * @return textSizeSeq
   */
  @javax.annotation.Nonnull
  public Integer getTextSizeSeq() {
    return textSizeSeq;
  }

  public void setTextSizeSeq(Integer textSizeSeq) {
    this.textSizeSeq = textSizeSeq;
  }


  public GetUserExternalId200ResponseUserUserOption themeIds(List<Object> themeIds) {
    this.themeIds = themeIds;
    return this;
  }

  public GetUserExternalId200ResponseUserUserOption addThemeIdsItem(Object themeIdsItem) {
    if (this.themeIds == null) {
      this.themeIds = new ArrayList<>();
    }
    this.themeIds.add(themeIdsItem);
    return this;
  }

  /**
   * Get themeIds
   * @return themeIds
   */
  @javax.annotation.Nonnull
  public List<Object> getThemeIds() {
    return themeIds;
  }

  public void setThemeIds(List<Object> themeIds) {
    this.themeIds = themeIds;
  }


  public GetUserExternalId200ResponseUserUserOption themeKeySeq(Integer themeKeySeq) {
    this.themeKeySeq = themeKeySeq;
    return this;
  }

  /**
   * Get themeKeySeq
   * @return themeKeySeq
   */
  @javax.annotation.Nonnull
  public Integer getThemeKeySeq() {
    return themeKeySeq;
  }

  public void setThemeKeySeq(Integer themeKeySeq) {
    this.themeKeySeq = themeKeySeq;
  }


  public GetUserExternalId200ResponseUserUserOption timezone(String timezone) {
    this.timezone = timezone;
    return this;
  }

  /**
   * Get timezone
   * @return timezone
   */
  @javax.annotation.Nullable
  public String getTimezone() {
    return timezone;
  }

  public void setTimezone(String timezone) {
    this.timezone = timezone;
  }


  public GetUserExternalId200ResponseUserUserOption titleCountMode(String titleCountMode) {
    this.titleCountMode = titleCountMode;
    return this;
  }

  /**
   * Get titleCountMode
   * @return titleCountMode
   */
  @javax.annotation.Nonnull
  public String getTitleCountMode() {
    return titleCountMode;
  }

  public void setTitleCountMode(String titleCountMode) {
    this.titleCountMode = titleCountMode;
  }


  public GetUserExternalId200ResponseUserUserOption userId(Integer userId) {
    this.userId = userId;
    return this;
  }

  /**
   * Get userId
   * @return userId
   */
  @javax.annotation.Nonnull
  public Integer getUserId() {
    return userId;
  }

  public void setUserId(Integer userId) {
    this.userId = userId;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the GetUserExternalId200ResponseUserUserOption instance itself
   */
  public GetUserExternalId200ResponseUserUserOption putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetUserExternalId200ResponseUserUserOption getUserExternalId200ResponseUserUserOption = (GetUserExternalId200ResponseUserUserOption) o;
    return Objects.equals(this.allowPrivateMessages, getUserExternalId200ResponseUserUserOption.allowPrivateMessages) &&
        Objects.equals(this.autoTrackTopicsAfterMsecs, getUserExternalId200ResponseUserUserOption.autoTrackTopicsAfterMsecs) &&
        Objects.equals(this.automaticallyUnpinTopics, getUserExternalId200ResponseUserUserOption.automaticallyUnpinTopics) &&
        Objects.equals(this.bookmarkAutoDeletePreference, getUserExternalId200ResponseUserUserOption.bookmarkAutoDeletePreference) &&
        Objects.equals(this.colorSchemeId, getUserExternalId200ResponseUserUserOption.colorSchemeId) &&
        Objects.equals(this.darkSchemeId, getUserExternalId200ResponseUserUserOption.darkSchemeId) &&
        Objects.equals(this.defaultCalendar, getUserExternalId200ResponseUserUserOption.defaultCalendar) &&
        Objects.equals(this.digestAfterMinutes, getUserExternalId200ResponseUserUserOption.digestAfterMinutes) &&
        Objects.equals(this.dynamicFavicon, getUserExternalId200ResponseUserUserOption.dynamicFavicon) &&
        Objects.equals(this.emailDigests, getUserExternalId200ResponseUserUserOption.emailDigests) &&
        Objects.equals(this.emailInReplyTo, getUserExternalId200ResponseUserUserOption.emailInReplyTo) &&
        Objects.equals(this.emailLevel, getUserExternalId200ResponseUserUserOption.emailLevel) &&
        Objects.equals(this.emailMessagesLevel, getUserExternalId200ResponseUserUserOption.emailMessagesLevel) &&
        Objects.equals(this.emailPreviousReplies, getUserExternalId200ResponseUserUserOption.emailPreviousReplies) &&
        Objects.equals(this.enableAllowedPmUsers, getUserExternalId200ResponseUserUserOption.enableAllowedPmUsers) &&
        Objects.equals(this.enableDefer, getUserExternalId200ResponseUserUserOption.enableDefer) &&
        Objects.equals(this.enableQuoting, getUserExternalId200ResponseUserUserOption.enableQuoting) &&
        Objects.equals(this.externalLinksInNewTab, getUserExternalId200ResponseUserUserOption.externalLinksInNewTab) &&
        Objects.equals(this.hideProfileAndPresence, getUserExternalId200ResponseUserUserOption.hideProfileAndPresence) &&
        Objects.equals(this.homepageId, getUserExternalId200ResponseUserUserOption.homepageId) &&
        Objects.equals(this.includeTl0InDigests, getUserExternalId200ResponseUserUserOption.includeTl0InDigests) &&
        Objects.equals(this.likeNotificationFrequency, getUserExternalId200ResponseUserUserOption.likeNotificationFrequency) &&
        Objects.equals(this.mailingListMode, getUserExternalId200ResponseUserUserOption.mailingListMode) &&
        Objects.equals(this.mailingListModeFrequency, getUserExternalId200ResponseUserUserOption.mailingListModeFrequency) &&
        Objects.equals(this.newTopicDurationMinutes, getUserExternalId200ResponseUserUserOption.newTopicDurationMinutes) &&
        Objects.equals(this.notificationLevelWhenReplying, getUserExternalId200ResponseUserUserOption.notificationLevelWhenReplying) &&
        Objects.equals(this.oldestSearchLogDate, getUserExternalId200ResponseUserUserOption.oldestSearchLogDate) &&
        Objects.equals(this.seenPopups, getUserExternalId200ResponseUserUserOption.seenPopups) &&
        Objects.equals(this.sidebarListDestination, getUserExternalId200ResponseUserUserOption.sidebarListDestination) &&
        Objects.equals(this.skipNewUserTips, getUserExternalId200ResponseUserUserOption.skipNewUserTips) &&
        Objects.equals(this.textSize, getUserExternalId200ResponseUserUserOption.textSize) &&
        Objects.equals(this.textSizeSeq, getUserExternalId200ResponseUserUserOption.textSizeSeq) &&
        Objects.equals(this.themeIds, getUserExternalId200ResponseUserUserOption.themeIds) &&
        Objects.equals(this.themeKeySeq, getUserExternalId200ResponseUserUserOption.themeKeySeq) &&
        Objects.equals(this.timezone, getUserExternalId200ResponseUserUserOption.timezone) &&
        Objects.equals(this.titleCountMode, getUserExternalId200ResponseUserUserOption.titleCountMode) &&
        Objects.equals(this.userId, getUserExternalId200ResponseUserUserOption.userId)&&
        Objects.equals(this.additionalProperties, getUserExternalId200ResponseUserUserOption.additionalProperties);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(allowPrivateMessages, autoTrackTopicsAfterMsecs, automaticallyUnpinTopics, bookmarkAutoDeletePreference, colorSchemeId, darkSchemeId, defaultCalendar, digestAfterMinutes, dynamicFavicon, emailDigests, emailInReplyTo, emailLevel, emailMessagesLevel, emailPreviousReplies, enableAllowedPmUsers, enableDefer, enableQuoting, externalLinksInNewTab, hideProfileAndPresence, homepageId, includeTl0InDigests, likeNotificationFrequency, mailingListMode, mailingListModeFrequency, newTopicDurationMinutes, notificationLevelWhenReplying, oldestSearchLogDate, seenPopups, sidebarListDestination, skipNewUserTips, textSize, textSizeSeq, themeIds, themeKeySeq, timezone, titleCountMode, userId, additionalProperties);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetUserExternalId200ResponseUserUserOption {\n");
    sb.append("    allowPrivateMessages: ").append(toIndentedString(allowPrivateMessages)).append("\n");
    sb.append("    autoTrackTopicsAfterMsecs: ").append(toIndentedString(autoTrackTopicsAfterMsecs)).append("\n");
    sb.append("    automaticallyUnpinTopics: ").append(toIndentedString(automaticallyUnpinTopics)).append("\n");
    sb.append("    bookmarkAutoDeletePreference: ").append(toIndentedString(bookmarkAutoDeletePreference)).append("\n");
    sb.append("    colorSchemeId: ").append(toIndentedString(colorSchemeId)).append("\n");
    sb.append("    darkSchemeId: ").append(toIndentedString(darkSchemeId)).append("\n");
    sb.append("    defaultCalendar: ").append(toIndentedString(defaultCalendar)).append("\n");
    sb.append("    digestAfterMinutes: ").append(toIndentedString(digestAfterMinutes)).append("\n");
    sb.append("    dynamicFavicon: ").append(toIndentedString(dynamicFavicon)).append("\n");
    sb.append("    emailDigests: ").append(toIndentedString(emailDigests)).append("\n");
    sb.append("    emailInReplyTo: ").append(toIndentedString(emailInReplyTo)).append("\n");
    sb.append("    emailLevel: ").append(toIndentedString(emailLevel)).append("\n");
    sb.append("    emailMessagesLevel: ").append(toIndentedString(emailMessagesLevel)).append("\n");
    sb.append("    emailPreviousReplies: ").append(toIndentedString(emailPreviousReplies)).append("\n");
    sb.append("    enableAllowedPmUsers: ").append(toIndentedString(enableAllowedPmUsers)).append("\n");
    sb.append("    enableDefer: ").append(toIndentedString(enableDefer)).append("\n");
    sb.append("    enableQuoting: ").append(toIndentedString(enableQuoting)).append("\n");
    sb.append("    externalLinksInNewTab: ").append(toIndentedString(externalLinksInNewTab)).append("\n");
    sb.append("    hideProfileAndPresence: ").append(toIndentedString(hideProfileAndPresence)).append("\n");
    sb.append("    homepageId: ").append(toIndentedString(homepageId)).append("\n");
    sb.append("    includeTl0InDigests: ").append(toIndentedString(includeTl0InDigests)).append("\n");
    sb.append("    likeNotificationFrequency: ").append(toIndentedString(likeNotificationFrequency)).append("\n");
    sb.append("    mailingListMode: ").append(toIndentedString(mailingListMode)).append("\n");
    sb.append("    mailingListModeFrequency: ").append(toIndentedString(mailingListModeFrequency)).append("\n");
    sb.append("    newTopicDurationMinutes: ").append(toIndentedString(newTopicDurationMinutes)).append("\n");
    sb.append("    notificationLevelWhenReplying: ").append(toIndentedString(notificationLevelWhenReplying)).append("\n");
    sb.append("    oldestSearchLogDate: ").append(toIndentedString(oldestSearchLogDate)).append("\n");
    sb.append("    seenPopups: ").append(toIndentedString(seenPopups)).append("\n");
    sb.append("    sidebarListDestination: ").append(toIndentedString(sidebarListDestination)).append("\n");
    sb.append("    skipNewUserTips: ").append(toIndentedString(skipNewUserTips)).append("\n");
    sb.append("    textSize: ").append(toIndentedString(textSize)).append("\n");
    sb.append("    textSizeSeq: ").append(toIndentedString(textSizeSeq)).append("\n");
    sb.append("    themeIds: ").append(toIndentedString(themeIds)).append("\n");
    sb.append("    themeKeySeq: ").append(toIndentedString(themeKeySeq)).append("\n");
    sb.append("    timezone: ").append(toIndentedString(timezone)).append("\n");
    sb.append("    titleCountMode: ").append(toIndentedString(titleCountMode)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("allow_private_messages");
    openapiFields.add("auto_track_topics_after_msecs");
    openapiFields.add("automatically_unpin_topics");
    openapiFields.add("bookmark_auto_delete_preference");
    openapiFields.add("color_scheme_id");
    openapiFields.add("dark_scheme_id");
    openapiFields.add("default_calendar");
    openapiFields.add("digest_after_minutes");
    openapiFields.add("dynamic_favicon");
    openapiFields.add("email_digests");
    openapiFields.add("email_in_reply_to");
    openapiFields.add("email_level");
    openapiFields.add("email_messages_level");
    openapiFields.add("email_previous_replies");
    openapiFields.add("enable_allowed_pm_users");
    openapiFields.add("enable_defer");
    openapiFields.add("enable_quoting");
    openapiFields.add("external_links_in_new_tab");
    openapiFields.add("hide_profile_and_presence");
    openapiFields.add("homepage_id");
    openapiFields.add("include_tl0_in_digests");
    openapiFields.add("like_notification_frequency");
    openapiFields.add("mailing_list_mode");
    openapiFields.add("mailing_list_mode_frequency");
    openapiFields.add("new_topic_duration_minutes");
    openapiFields.add("notification_level_when_replying");
    openapiFields.add("oldest_search_log_date");
    openapiFields.add("seen_popups");
    openapiFields.add("sidebar_list_destination");
    openapiFields.add("skip_new_user_tips");
    openapiFields.add("text_size");
    openapiFields.add("text_size_seq");
    openapiFields.add("theme_ids");
    openapiFields.add("theme_key_seq");
    openapiFields.add("timezone");
    openapiFields.add("title_count_mode");
    openapiFields.add("user_id");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("allow_private_messages");
    openapiRequiredFields.add("auto_track_topics_after_msecs");
    openapiRequiredFields.add("automatically_unpin_topics");
    openapiRequiredFields.add("color_scheme_id");
    openapiRequiredFields.add("dark_scheme_id");
    openapiRequiredFields.add("digest_after_minutes");
    openapiRequiredFields.add("dynamic_favicon");
    openapiRequiredFields.add("email_digests");
    openapiRequiredFields.add("email_in_reply_to");
    openapiRequiredFields.add("email_level");
    openapiRequiredFields.add("email_messages_level");
    openapiRequiredFields.add("email_previous_replies");
    openapiRequiredFields.add("enable_allowed_pm_users");
    openapiRequiredFields.add("enable_defer");
    openapiRequiredFields.add("enable_quoting");
    openapiRequiredFields.add("external_links_in_new_tab");
    openapiRequiredFields.add("hide_profile_and_presence");
    openapiRequiredFields.add("homepage_id");
    openapiRequiredFields.add("include_tl0_in_digests");
    openapiRequiredFields.add("like_notification_frequency");
    openapiRequiredFields.add("mailing_list_mode");
    openapiRequiredFields.add("mailing_list_mode_frequency");
    openapiRequiredFields.add("new_topic_duration_minutes");
    openapiRequiredFields.add("notification_level_when_replying");
    openapiRequiredFields.add("skip_new_user_tips");
    openapiRequiredFields.add("text_size");
    openapiRequiredFields.add("text_size_seq");
    openapiRequiredFields.add("theme_ids");
    openapiRequiredFields.add("theme_key_seq");
    openapiRequiredFields.add("timezone");
    openapiRequiredFields.add("title_count_mode");
    openapiRequiredFields.add("user_id");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetUserExternalId200ResponseUserUserOption
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetUserExternalId200ResponseUserUserOption.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetUserExternalId200ResponseUserUserOption is not found in the empty JSON string", GetUserExternalId200ResponseUserUserOption.openapiRequiredFields.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : GetUserExternalId200ResponseUserUserOption.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("color_scheme_id") != null && !jsonObj.get("color_scheme_id").isJsonNull()) && !jsonObj.get("color_scheme_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `color_scheme_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("color_scheme_id").toString()));
      }
      if ((jsonObj.get("dark_scheme_id") != null && !jsonObj.get("dark_scheme_id").isJsonNull()) && !jsonObj.get("dark_scheme_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dark_scheme_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dark_scheme_id").toString()));
      }
      if ((jsonObj.get("default_calendar") != null && !jsonObj.get("default_calendar").isJsonNull()) && !jsonObj.get("default_calendar").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `default_calendar` to be a primitive type in the JSON string but got `%s`", jsonObj.get("default_calendar").toString()));
      }
      if ((jsonObj.get("homepage_id") != null && !jsonObj.get("homepage_id").isJsonNull()) && !jsonObj.get("homepage_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `homepage_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("homepage_id").toString()));
      }
      if ((jsonObj.get("oldest_search_log_date") != null && !jsonObj.get("oldest_search_log_date").isJsonNull()) && !jsonObj.get("oldest_search_log_date").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `oldest_search_log_date` to be a primitive type in the JSON string but got `%s`", jsonObj.get("oldest_search_log_date").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("seen_popups") != null && !jsonObj.get("seen_popups").isJsonNull() && !jsonObj.get("seen_popups").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `seen_popups` to be an array in the JSON string but got `%s`", jsonObj.get("seen_popups").toString()));
      }
      if ((jsonObj.get("sidebar_list_destination") != null && !jsonObj.get("sidebar_list_destination").isJsonNull()) && !jsonObj.get("sidebar_list_destination").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sidebar_list_destination` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sidebar_list_destination").toString()));
      }
      if (!jsonObj.get("text_size").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `text_size` to be a primitive type in the JSON string but got `%s`", jsonObj.get("text_size").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("theme_ids") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("theme_ids").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `theme_ids` to be an array in the JSON string but got `%s`", jsonObj.get("theme_ids").toString()));
      }
      if ((jsonObj.get("timezone") != null && !jsonObj.get("timezone").isJsonNull()) && !jsonObj.get("timezone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `timezone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("timezone").toString()));
      }
      if (!jsonObj.get("title_count_mode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `title_count_mode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("title_count_mode").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetUserExternalId200ResponseUserUserOption.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetUserExternalId200ResponseUserUserOption' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetUserExternalId200ResponseUserUserOption> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetUserExternalId200ResponseUserUserOption.class));

       return (TypeAdapter<T>) new TypeAdapter<GetUserExternalId200ResponseUserUserOption>() {
           @Override
           public void write(JsonWriter out, GetUserExternalId200ResponseUserUserOption value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additional properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   JsonElement jsonElement = gson.toJsonTree(entry.getValue());
                   if (jsonElement.isJsonArray()) {
                     obj.add(entry.getKey(), jsonElement.getAsJsonArray());
                   } else {
                     obj.add(entry.getKey(), jsonElement.getAsJsonObject());
                   }
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public GetUserExternalId200ResponseUserUserOption read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             JsonObject jsonObj = jsonElement.getAsJsonObject();
             // store additional fields in the deserialized instance
             GetUserExternalId200ResponseUserUserOption instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetUserExternalId200ResponseUserUserOption given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetUserExternalId200ResponseUserUserOption
   * @throws IOException if the JSON string is invalid with respect to GetUserExternalId200ResponseUserUserOption
   */
  public static GetUserExternalId200ResponseUserUserOption fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetUserExternalId200ResponseUserUserOption.class);
  }

  /**
   * Convert an instance of GetUserExternalId200ResponseUserUserOption to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

