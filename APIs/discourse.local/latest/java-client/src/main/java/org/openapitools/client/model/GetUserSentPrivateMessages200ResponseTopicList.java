/*
 * Discourse API Documentation
 * This page contains the documentation on how to use Discourse through API calls.  > Note: For any endpoints not listed you can follow the [reverse engineer the Discourse API](https://meta.discourse.org/t/-/20576) guide to figure out how to use an API endpoint.  ### Request Content-Type  The Content-Type for POST and PUT requests can be set to `application/x-www-form-urlencoded`, `multipart/form-data`, or `application/json`.  ### Endpoint Names and Response Content-Type  Most API endpoints provide the same content as their HTML counterparts. For example the URL `/categories` serves a list of categories, the `/categories.json` API provides the same information in JSON format.  Instead of sending API requests to `/categories.json` you may also send them to `/categories` and add an `Accept: application/json` header to the request to get the JSON response. Sending requests with the `Accept` header is necessary if you want to use URLs for related endpoints returned by the API, such as pagination URLs. These URLs are returned without the `.json` prefix so you need to add the header in order to get the correct response format.  ### Authentication  Some endpoints do not require any authentication, pretty much anything else will require you to be authenticated.  To become authenticated you will need to create an API Key from the admin panel.  Once you have your API Key you can pass it in along with your API Username as an HTTP header like this:  ``` curl -X GET \"http://127.0.0.1:3000/admin/users/list/active.json\" \\ -H \"Api-Key: 714552c6148e1617aeab526d0606184b94a80ec048fc09894ff1a72b740c5f19\" \\ -H \"Api-Username: system\" ```  and this is how POST requests will look:  ``` curl -X POST \"http://127.0.0.1:3000/categories\" \\ -H \"Content-Type: multipart/form-data;\" \\ -H \"Api-Key: 714552c6148e1617aeab526d0606184b94a80ec048fc09894ff1a72b740c5f19\" \\ -H \"Api-Username: system\" \\ -F \"name=89853c20-4409-e91a-a8ea-f6cdff96aaaa\" \\ -F \"color=49d9e9\" \\ -F \"text_color=f0fcfd\" ```  ### Boolean values  If an endpoint accepts a boolean be sure to specify it as a lowercase `true` or `false` value unless noted otherwise. 
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GetUserSentPrivateMessages200ResponseTopicListTopicsInner;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GetUserSentPrivateMessages200ResponseTopicList
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:12:34.324076-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetUserSentPrivateMessages200ResponseTopicList {
  public static final String SERIALIZED_NAME_CAN_CREATE_TOPIC = "can_create_topic";
  @SerializedName(SERIALIZED_NAME_CAN_CREATE_TOPIC)
  private Boolean canCreateTopic;

  public static final String SERIALIZED_NAME_DRAFT = "draft";
  @SerializedName(SERIALIZED_NAME_DRAFT)
  private String draft;

  public static final String SERIALIZED_NAME_DRAFT_KEY = "draft_key";
  @SerializedName(SERIALIZED_NAME_DRAFT_KEY)
  private String draftKey;

  public static final String SERIALIZED_NAME_DRAFT_SEQUENCE = "draft_sequence";
  @SerializedName(SERIALIZED_NAME_DRAFT_SEQUENCE)
  private Integer draftSequence;

  public static final String SERIALIZED_NAME_PER_PAGE = "per_page";
  @SerializedName(SERIALIZED_NAME_PER_PAGE)
  private Integer perPage;

  public static final String SERIALIZED_NAME_TOPICS = "topics";
  @SerializedName(SERIALIZED_NAME_TOPICS)
  private List<GetUserSentPrivateMessages200ResponseTopicListTopicsInner> topics = new ArrayList<>();

  public GetUserSentPrivateMessages200ResponseTopicList() {
  }

  public GetUserSentPrivateMessages200ResponseTopicList canCreateTopic(Boolean canCreateTopic) {
    this.canCreateTopic = canCreateTopic;
    return this;
  }

  /**
   * Get canCreateTopic
   * @return canCreateTopic
   */
  @javax.annotation.Nullable
  public Boolean getCanCreateTopic() {
    return canCreateTopic;
  }

  public void setCanCreateTopic(Boolean canCreateTopic) {
    this.canCreateTopic = canCreateTopic;
  }


  public GetUserSentPrivateMessages200ResponseTopicList draft(String draft) {
    this.draft = draft;
    return this;
  }

  /**
   * Get draft
   * @return draft
   */
  @javax.annotation.Nullable
  public String getDraft() {
    return draft;
  }

  public void setDraft(String draft) {
    this.draft = draft;
  }


  public GetUserSentPrivateMessages200ResponseTopicList draftKey(String draftKey) {
    this.draftKey = draftKey;
    return this;
  }

  /**
   * Get draftKey
   * @return draftKey
   */
  @javax.annotation.Nullable
  public String getDraftKey() {
    return draftKey;
  }

  public void setDraftKey(String draftKey) {
    this.draftKey = draftKey;
  }


  public GetUserSentPrivateMessages200ResponseTopicList draftSequence(Integer draftSequence) {
    this.draftSequence = draftSequence;
    return this;
  }

  /**
   * Get draftSequence
   * @return draftSequence
   */
  @javax.annotation.Nullable
  public Integer getDraftSequence() {
    return draftSequence;
  }

  public void setDraftSequence(Integer draftSequence) {
    this.draftSequence = draftSequence;
  }


  public GetUserSentPrivateMessages200ResponseTopicList perPage(Integer perPage) {
    this.perPage = perPage;
    return this;
  }

  /**
   * Get perPage
   * @return perPage
   */
  @javax.annotation.Nullable
  public Integer getPerPage() {
    return perPage;
  }

  public void setPerPage(Integer perPage) {
    this.perPage = perPage;
  }


  public GetUserSentPrivateMessages200ResponseTopicList topics(List<GetUserSentPrivateMessages200ResponseTopicListTopicsInner> topics) {
    this.topics = topics;
    return this;
  }

  public GetUserSentPrivateMessages200ResponseTopicList addTopicsItem(GetUserSentPrivateMessages200ResponseTopicListTopicsInner topicsItem) {
    if (this.topics == null) {
      this.topics = new ArrayList<>();
    }
    this.topics.add(topicsItem);
    return this;
  }

  /**
   * Get topics
   * @return topics
   */
  @javax.annotation.Nullable
  public List<GetUserSentPrivateMessages200ResponseTopicListTopicsInner> getTopics() {
    return topics;
  }

  public void setTopics(List<GetUserSentPrivateMessages200ResponseTopicListTopicsInner> topics) {
    this.topics = topics;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetUserSentPrivateMessages200ResponseTopicList getUserSentPrivateMessages200ResponseTopicList = (GetUserSentPrivateMessages200ResponseTopicList) o;
    return Objects.equals(this.canCreateTopic, getUserSentPrivateMessages200ResponseTopicList.canCreateTopic) &&
        Objects.equals(this.draft, getUserSentPrivateMessages200ResponseTopicList.draft) &&
        Objects.equals(this.draftKey, getUserSentPrivateMessages200ResponseTopicList.draftKey) &&
        Objects.equals(this.draftSequence, getUserSentPrivateMessages200ResponseTopicList.draftSequence) &&
        Objects.equals(this.perPage, getUserSentPrivateMessages200ResponseTopicList.perPage) &&
        Objects.equals(this.topics, getUserSentPrivateMessages200ResponseTopicList.topics);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(canCreateTopic, draft, draftKey, draftSequence, perPage, topics);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetUserSentPrivateMessages200ResponseTopicList {\n");
    sb.append("    canCreateTopic: ").append(toIndentedString(canCreateTopic)).append("\n");
    sb.append("    draft: ").append(toIndentedString(draft)).append("\n");
    sb.append("    draftKey: ").append(toIndentedString(draftKey)).append("\n");
    sb.append("    draftSequence: ").append(toIndentedString(draftSequence)).append("\n");
    sb.append("    perPage: ").append(toIndentedString(perPage)).append("\n");
    sb.append("    topics: ").append(toIndentedString(topics)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("can_create_topic");
    openapiFields.add("draft");
    openapiFields.add("draft_key");
    openapiFields.add("draft_sequence");
    openapiFields.add("per_page");
    openapiFields.add("topics");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetUserSentPrivateMessages200ResponseTopicList
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetUserSentPrivateMessages200ResponseTopicList.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetUserSentPrivateMessages200ResponseTopicList is not found in the empty JSON string", GetUserSentPrivateMessages200ResponseTopicList.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetUserSentPrivateMessages200ResponseTopicList.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetUserSentPrivateMessages200ResponseTopicList` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("draft") != null && !jsonObj.get("draft").isJsonNull()) && !jsonObj.get("draft").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `draft` to be a primitive type in the JSON string but got `%s`", jsonObj.get("draft").toString()));
      }
      if ((jsonObj.get("draft_key") != null && !jsonObj.get("draft_key").isJsonNull()) && !jsonObj.get("draft_key").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `draft_key` to be a primitive type in the JSON string but got `%s`", jsonObj.get("draft_key").toString()));
      }
      if (jsonObj.get("topics") != null && !jsonObj.get("topics").isJsonNull()) {
        JsonArray jsonArraytopics = jsonObj.getAsJsonArray("topics");
        if (jsonArraytopics != null) {
          // ensure the json data is an array
          if (!jsonObj.get("topics").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `topics` to be an array in the JSON string but got `%s`", jsonObj.get("topics").toString()));
          }

          // validate the optional field `topics` (array)
          for (int i = 0; i < jsonArraytopics.size(); i++) {
            GetUserSentPrivateMessages200ResponseTopicListTopicsInner.validateJsonElement(jsonArraytopics.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetUserSentPrivateMessages200ResponseTopicList.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetUserSentPrivateMessages200ResponseTopicList' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetUserSentPrivateMessages200ResponseTopicList> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetUserSentPrivateMessages200ResponseTopicList.class));

       return (TypeAdapter<T>) new TypeAdapter<GetUserSentPrivateMessages200ResponseTopicList>() {
           @Override
           public void write(JsonWriter out, GetUserSentPrivateMessages200ResponseTopicList value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetUserSentPrivateMessages200ResponseTopicList read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetUserSentPrivateMessages200ResponseTopicList given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetUserSentPrivateMessages200ResponseTopicList
   * @throws IOException if the JSON string is invalid with respect to GetUserSentPrivateMessages200ResponseTopicList
   */
  public static GetUserSentPrivateMessages200ResponseTopicList fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetUserSentPrivateMessages200ResponseTopicList.class);
  }

  /**
   * Convert an instance of GetUserSentPrivateMessages200ResponseTopicList to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

