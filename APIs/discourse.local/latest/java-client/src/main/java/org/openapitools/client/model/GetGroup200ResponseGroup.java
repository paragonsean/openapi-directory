/*
 * Discourse API Documentation
 * This page contains the documentation on how to use Discourse through API calls.  > Note: For any endpoints not listed you can follow the [reverse engineer the Discourse API](https://meta.discourse.org/t/-/20576) guide to figure out how to use an API endpoint.  ### Request Content-Type  The Content-Type for POST and PUT requests can be set to `application/x-www-form-urlencoded`, `multipart/form-data`, or `application/json`.  ### Endpoint Names and Response Content-Type  Most API endpoints provide the same content as their HTML counterparts. For example the URL `/categories` serves a list of categories, the `/categories.json` API provides the same information in JSON format.  Instead of sending API requests to `/categories.json` you may also send them to `/categories` and add an `Accept: application/json` header to the request to get the JSON response. Sending requests with the `Accept` header is necessary if you want to use URLs for related endpoints returned by the API, such as pagination URLs. These URLs are returned without the `.json` prefix so you need to add the header in order to get the correct response format.  ### Authentication  Some endpoints do not require any authentication, pretty much anything else will require you to be authenticated.  To become authenticated you will need to create an API Key from the admin panel.  Once you have your API Key you can pass it in along with your API Username as an HTTP header like this:  ``` curl -X GET \"http://127.0.0.1:3000/admin/users/list/active.json\" \\ -H \"Api-Key: 714552c6148e1617aeab526d0606184b94a80ec048fc09894ff1a72b740c5f19\" \\ -H \"Api-Username: system\" ```  and this is how POST requests will look:  ``` curl -X POST \"http://127.0.0.1:3000/categories\" \\ -H \"Content-Type: multipart/form-data;\" \\ -H \"Api-Key: 714552c6148e1617aeab526d0606184b94a80ec048fc09894ff1a72b740c5f19\" \\ -H \"Api-Username: system\" \\ -F \"name=89853c20-4409-e91a-a8ea-f6cdff96aaaa\" \\ -F \"color=49d9e9\" \\ -F \"text_color=f0fcfd\" ```  ### Boolean values  If an endpoint accepts a boolean be sure to specify it as a lowercase `true` or `false` value unless noted otherwise. 
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Map;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GetGroup200ResponseGroup
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:12:34.324076-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetGroup200ResponseGroup {
  public static final String SERIALIZED_NAME_ALLOW_MEMBERSHIP_REQUESTS = "allow_membership_requests";
  @SerializedName(SERIALIZED_NAME_ALLOW_MEMBERSHIP_REQUESTS)
  private Boolean allowMembershipRequests;

  public static final String SERIALIZED_NAME_ALLOW_UNKNOWN_SENDER_TOPIC_REPLIES = "allow_unknown_sender_topic_replies";
  @SerializedName(SERIALIZED_NAME_ALLOW_UNKNOWN_SENDER_TOPIC_REPLIES)
  private Boolean allowUnknownSenderTopicReplies;

  public static final String SERIALIZED_NAME_ASSOCIATED_GROUP_IDS = "associated_group_ids";
  @SerializedName(SERIALIZED_NAME_ASSOCIATED_GROUP_IDS)
  private List<Object> associatedGroupIds = new ArrayList<>();

  public static final String SERIALIZED_NAME_AUTOMATIC = "automatic";
  @SerializedName(SERIALIZED_NAME_AUTOMATIC)
  private Boolean automatic;

  public static final String SERIALIZED_NAME_AUTOMATIC_MEMBERSHIP_EMAIL_DOMAINS = "automatic_membership_email_domains";
  @SerializedName(SERIALIZED_NAME_AUTOMATIC_MEMBERSHIP_EMAIL_DOMAINS)
  private String automaticMembershipEmailDomains;

  public static final String SERIALIZED_NAME_BIO_COOKED = "bio_cooked";
  @SerializedName(SERIALIZED_NAME_BIO_COOKED)
  private String bioCooked;

  public static final String SERIALIZED_NAME_BIO_EXCERPT = "bio_excerpt";
  @SerializedName(SERIALIZED_NAME_BIO_EXCERPT)
  private String bioExcerpt;

  public static final String SERIALIZED_NAME_BIO_RAW = "bio_raw";
  @SerializedName(SERIALIZED_NAME_BIO_RAW)
  private String bioRaw;

  public static final String SERIALIZED_NAME_CAN_ADMIN_GROUP = "can_admin_group";
  @SerializedName(SERIALIZED_NAME_CAN_ADMIN_GROUP)
  private Boolean canAdminGroup;

  public static final String SERIALIZED_NAME_CAN_EDIT_GROUP = "can_edit_group";
  @SerializedName(SERIALIZED_NAME_CAN_EDIT_GROUP)
  private Boolean canEditGroup;

  public static final String SERIALIZED_NAME_CAN_SEE_MEMBERS = "can_see_members";
  @SerializedName(SERIALIZED_NAME_CAN_SEE_MEMBERS)
  private Boolean canSeeMembers;

  public static final String SERIALIZED_NAME_DEFAULT_NOTIFICATION_LEVEL = "default_notification_level";
  @SerializedName(SERIALIZED_NAME_DEFAULT_NOTIFICATION_LEVEL)
  private Integer defaultNotificationLevel;

  public static final String SERIALIZED_NAME_EMAIL_FROM_ALIAS = "email_from_alias";
  @SerializedName(SERIALIZED_NAME_EMAIL_FROM_ALIAS)
  private String emailFromAlias;

  public static final String SERIALIZED_NAME_EMAIL_PASSWORD = "email_password";
  @SerializedName(SERIALIZED_NAME_EMAIL_PASSWORD)
  private String emailPassword;

  public static final String SERIALIZED_NAME_EMAIL_USERNAME = "email_username";
  @SerializedName(SERIALIZED_NAME_EMAIL_USERNAME)
  private String emailUsername;

  public static final String SERIALIZED_NAME_FLAIR_BG_COLOR = "flair_bg_color";
  @SerializedName(SERIALIZED_NAME_FLAIR_BG_COLOR)
  private String flairBgColor;

  public static final String SERIALIZED_NAME_FLAIR_COLOR = "flair_color";
  @SerializedName(SERIALIZED_NAME_FLAIR_COLOR)
  private String flairColor;

  public static final String SERIALIZED_NAME_FLAIR_URL = "flair_url";
  @SerializedName(SERIALIZED_NAME_FLAIR_URL)
  private String flairUrl;

  public static final String SERIALIZED_NAME_FULL_NAME = "full_name";
  @SerializedName(SERIALIZED_NAME_FULL_NAME)
  private String fullName;

  public static final String SERIALIZED_NAME_GRANT_TRUST_LEVEL = "grant_trust_level";
  @SerializedName(SERIALIZED_NAME_GRANT_TRUST_LEVEL)
  private String grantTrustLevel;

  public static final String SERIALIZED_NAME_HAS_MESSAGES = "has_messages";
  @SerializedName(SERIALIZED_NAME_HAS_MESSAGES)
  private Boolean hasMessages;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_IMAP_ENABLED = "imap_enabled";
  @SerializedName(SERIALIZED_NAME_IMAP_ENABLED)
  private Boolean imapEnabled;

  public static final String SERIALIZED_NAME_IMAP_LAST_ERROR = "imap_last_error";
  @SerializedName(SERIALIZED_NAME_IMAP_LAST_ERROR)
  private String imapLastError;

  public static final String SERIALIZED_NAME_IMAP_MAILBOX_NAME = "imap_mailbox_name";
  @SerializedName(SERIALIZED_NAME_IMAP_MAILBOX_NAME)
  private String imapMailboxName;

  public static final String SERIALIZED_NAME_IMAP_MAILBOXES = "imap_mailboxes";
  @SerializedName(SERIALIZED_NAME_IMAP_MAILBOXES)
  private List<Object> imapMailboxes = new ArrayList<>();

  public static final String SERIALIZED_NAME_IMAP_NEW_EMAILS = "imap_new_emails";
  @SerializedName(SERIALIZED_NAME_IMAP_NEW_EMAILS)
  private String imapNewEmails;

  public static final String SERIALIZED_NAME_IMAP_OLD_EMAILS = "imap_old_emails";
  @SerializedName(SERIALIZED_NAME_IMAP_OLD_EMAILS)
  private String imapOldEmails;

  public static final String SERIALIZED_NAME_IMAP_PORT = "imap_port";
  @SerializedName(SERIALIZED_NAME_IMAP_PORT)
  private String imapPort;

  public static final String SERIALIZED_NAME_IMAP_SERVER = "imap_server";
  @SerializedName(SERIALIZED_NAME_IMAP_SERVER)
  private String imapServer;

  public static final String SERIALIZED_NAME_IMAP_SSL = "imap_ssl";
  @SerializedName(SERIALIZED_NAME_IMAP_SSL)
  private String imapSsl;

  public static final String SERIALIZED_NAME_IMAP_UPDATED_AT = "imap_updated_at";
  @SerializedName(SERIALIZED_NAME_IMAP_UPDATED_AT)
  private String imapUpdatedAt;

  public static final String SERIALIZED_NAME_IMAP_UPDATED_BY = "imap_updated_by";
  @SerializedName(SERIALIZED_NAME_IMAP_UPDATED_BY)
  private Object imapUpdatedBy;

  public static final String SERIALIZED_NAME_INCOMING_EMAIL = "incoming_email";
  @SerializedName(SERIALIZED_NAME_INCOMING_EMAIL)
  private String incomingEmail;

  public static final String SERIALIZED_NAME_IS_GROUP_OWNER_DISPLAY = "is_group_owner_display";
  @SerializedName(SERIALIZED_NAME_IS_GROUP_OWNER_DISPLAY)
  private Boolean isGroupOwnerDisplay;

  public static final String SERIALIZED_NAME_IS_GROUP_USER = "is_group_user";
  @SerializedName(SERIALIZED_NAME_IS_GROUP_USER)
  private Boolean isGroupUser;

  public static final String SERIALIZED_NAME_MEMBERS_VISIBILITY_LEVEL = "members_visibility_level";
  @SerializedName(SERIALIZED_NAME_MEMBERS_VISIBILITY_LEVEL)
  private Integer membersVisibilityLevel;

  public static final String SERIALIZED_NAME_MEMBERSHIP_REQUEST_TEMPLATE = "membership_request_template";
  @SerializedName(SERIALIZED_NAME_MEMBERSHIP_REQUEST_TEMPLATE)
  private String membershipRequestTemplate;

  public static final String SERIALIZED_NAME_MENTIONABLE = "mentionable";
  @SerializedName(SERIALIZED_NAME_MENTIONABLE)
  private Boolean mentionable;

  public static final String SERIALIZED_NAME_MENTIONABLE_LEVEL = "mentionable_level";
  @SerializedName(SERIALIZED_NAME_MENTIONABLE_LEVEL)
  private Integer mentionableLevel;

  public static final String SERIALIZED_NAME_MESSAGE_COUNT = "message_count";
  @SerializedName(SERIALIZED_NAME_MESSAGE_COUNT)
  private Integer messageCount;

  public static final String SERIALIZED_NAME_MESSAGEABLE = "messageable";
  @SerializedName(SERIALIZED_NAME_MESSAGEABLE)
  private Boolean messageable;

  public static final String SERIALIZED_NAME_MESSAGEABLE_LEVEL = "messageable_level";
  @SerializedName(SERIALIZED_NAME_MESSAGEABLE_LEVEL)
  private Integer messageableLevel;

  public static final String SERIALIZED_NAME_MUTED_CATEGORY_IDS = "muted_category_ids";
  @SerializedName(SERIALIZED_NAME_MUTED_CATEGORY_IDS)
  private List<Object> mutedCategoryIds = new ArrayList<>();

  public static final String SERIALIZED_NAME_MUTED_TAGS = "muted_tags";
  @SerializedName(SERIALIZED_NAME_MUTED_TAGS)
  private List<Object> mutedTags = new ArrayList<>();

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PRIMARY_GROUP = "primary_group";
  @SerializedName(SERIALIZED_NAME_PRIMARY_GROUP)
  private Boolean primaryGroup;

  public static final String SERIALIZED_NAME_PUBLIC_ADMISSION = "public_admission";
  @SerializedName(SERIALIZED_NAME_PUBLIC_ADMISSION)
  private Boolean publicAdmission;

  public static final String SERIALIZED_NAME_PUBLIC_EXIT = "public_exit";
  @SerializedName(SERIALIZED_NAME_PUBLIC_EXIT)
  private Boolean publicExit;

  public static final String SERIALIZED_NAME_PUBLISH_READ_STATE = "publish_read_state";
  @SerializedName(SERIALIZED_NAME_PUBLISH_READ_STATE)
  private Boolean publishReadState;

  public static final String SERIALIZED_NAME_REGULAR_CATEGORY_IDS = "regular_category_ids";
  @SerializedName(SERIALIZED_NAME_REGULAR_CATEGORY_IDS)
  private List<Object> regularCategoryIds = new ArrayList<>();

  public static final String SERIALIZED_NAME_REGULAR_TAGS = "regular_tags";
  @SerializedName(SERIALIZED_NAME_REGULAR_TAGS)
  private List<Object> regularTags = new ArrayList<>();

  public static final String SERIALIZED_NAME_SMTP_ENABLED = "smtp_enabled";
  @SerializedName(SERIALIZED_NAME_SMTP_ENABLED)
  private Boolean smtpEnabled;

  public static final String SERIALIZED_NAME_SMTP_PORT = "smtp_port";
  @SerializedName(SERIALIZED_NAME_SMTP_PORT)
  private String smtpPort;

  public static final String SERIALIZED_NAME_SMTP_SERVER = "smtp_server";
  @SerializedName(SERIALIZED_NAME_SMTP_SERVER)
  private String smtpServer;

  public static final String SERIALIZED_NAME_SMTP_SSL = "smtp_ssl";
  @SerializedName(SERIALIZED_NAME_SMTP_SSL)
  private String smtpSsl;

  public static final String SERIALIZED_NAME_SMTP_UPDATED_AT = "smtp_updated_at";
  @SerializedName(SERIALIZED_NAME_SMTP_UPDATED_AT)
  private String smtpUpdatedAt;

  public static final String SERIALIZED_NAME_SMTP_UPDATED_BY = "smtp_updated_by";
  @SerializedName(SERIALIZED_NAME_SMTP_UPDATED_BY)
  private Object smtpUpdatedBy;

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_TRACKING_CATEGORY_IDS = "tracking_category_ids";
  @SerializedName(SERIALIZED_NAME_TRACKING_CATEGORY_IDS)
  private List<Object> trackingCategoryIds = new ArrayList<>();

  public static final String SERIALIZED_NAME_TRACKING_TAGS = "tracking_tags";
  @SerializedName(SERIALIZED_NAME_TRACKING_TAGS)
  private List<Object> trackingTags = new ArrayList<>();

  public static final String SERIALIZED_NAME_USER_COUNT = "user_count";
  @SerializedName(SERIALIZED_NAME_USER_COUNT)
  private Integer userCount;

  public static final String SERIALIZED_NAME_VISIBILITY_LEVEL = "visibility_level";
  @SerializedName(SERIALIZED_NAME_VISIBILITY_LEVEL)
  private Integer visibilityLevel;

  public static final String SERIALIZED_NAME_WATCHING_CATEGORY_IDS = "watching_category_ids";
  @SerializedName(SERIALIZED_NAME_WATCHING_CATEGORY_IDS)
  private List<Object> watchingCategoryIds = new ArrayList<>();

  public static final String SERIALIZED_NAME_WATCHING_FIRST_POST_CATEGORY_IDS = "watching_first_post_category_ids";
  @SerializedName(SERIALIZED_NAME_WATCHING_FIRST_POST_CATEGORY_IDS)
  private List<Object> watchingFirstPostCategoryIds = new ArrayList<>();

  public static final String SERIALIZED_NAME_WATCHING_FIRST_POST_TAGS = "watching_first_post_tags";
  @SerializedName(SERIALIZED_NAME_WATCHING_FIRST_POST_TAGS)
  private List<Object> watchingFirstPostTags = new ArrayList<>();

  public static final String SERIALIZED_NAME_WATCHING_TAGS = "watching_tags";
  @SerializedName(SERIALIZED_NAME_WATCHING_TAGS)
  private List<Object> watchingTags = new ArrayList<>();

  public GetGroup200ResponseGroup() {
  }

  public GetGroup200ResponseGroup allowMembershipRequests(Boolean allowMembershipRequests) {
    this.allowMembershipRequests = allowMembershipRequests;
    return this;
  }

  /**
   * Get allowMembershipRequests
   * @return allowMembershipRequests
   */
  @javax.annotation.Nonnull
  public Boolean getAllowMembershipRequests() {
    return allowMembershipRequests;
  }

  public void setAllowMembershipRequests(Boolean allowMembershipRequests) {
    this.allowMembershipRequests = allowMembershipRequests;
  }


  public GetGroup200ResponseGroup allowUnknownSenderTopicReplies(Boolean allowUnknownSenderTopicReplies) {
    this.allowUnknownSenderTopicReplies = allowUnknownSenderTopicReplies;
    return this;
  }

  /**
   * Get allowUnknownSenderTopicReplies
   * @return allowUnknownSenderTopicReplies
   */
  @javax.annotation.Nonnull
  public Boolean getAllowUnknownSenderTopicReplies() {
    return allowUnknownSenderTopicReplies;
  }

  public void setAllowUnknownSenderTopicReplies(Boolean allowUnknownSenderTopicReplies) {
    this.allowUnknownSenderTopicReplies = allowUnknownSenderTopicReplies;
  }


  public GetGroup200ResponseGroup associatedGroupIds(List<Object> associatedGroupIds) {
    this.associatedGroupIds = associatedGroupIds;
    return this;
  }

  public GetGroup200ResponseGroup addAssociatedGroupIdsItem(Object associatedGroupIdsItem) {
    if (this.associatedGroupIds == null) {
      this.associatedGroupIds = new ArrayList<>();
    }
    this.associatedGroupIds.add(associatedGroupIdsItem);
    return this;
  }

  /**
   * Get associatedGroupIds
   * @return associatedGroupIds
   */
  @javax.annotation.Nullable
  public List<Object> getAssociatedGroupIds() {
    return associatedGroupIds;
  }

  public void setAssociatedGroupIds(List<Object> associatedGroupIds) {
    this.associatedGroupIds = associatedGroupIds;
  }


  public GetGroup200ResponseGroup automatic(Boolean automatic) {
    this.automatic = automatic;
    return this;
  }

  /**
   * Get automatic
   * @return automatic
   */
  @javax.annotation.Nonnull
  public Boolean getAutomatic() {
    return automatic;
  }

  public void setAutomatic(Boolean automatic) {
    this.automatic = automatic;
  }


  public GetGroup200ResponseGroup automaticMembershipEmailDomains(String automaticMembershipEmailDomains) {
    this.automaticMembershipEmailDomains = automaticMembershipEmailDomains;
    return this;
  }

  /**
   * Get automaticMembershipEmailDomains
   * @return automaticMembershipEmailDomains
   */
  @javax.annotation.Nullable
  public String getAutomaticMembershipEmailDomains() {
    return automaticMembershipEmailDomains;
  }

  public void setAutomaticMembershipEmailDomains(String automaticMembershipEmailDomains) {
    this.automaticMembershipEmailDomains = automaticMembershipEmailDomains;
  }


  public GetGroup200ResponseGroup bioCooked(String bioCooked) {
    this.bioCooked = bioCooked;
    return this;
  }

  /**
   * Get bioCooked
   * @return bioCooked
   */
  @javax.annotation.Nullable
  public String getBioCooked() {
    return bioCooked;
  }

  public void setBioCooked(String bioCooked) {
    this.bioCooked = bioCooked;
  }


  public GetGroup200ResponseGroup bioExcerpt(String bioExcerpt) {
    this.bioExcerpt = bioExcerpt;
    return this;
  }

  /**
   * Get bioExcerpt
   * @return bioExcerpt
   */
  @javax.annotation.Nullable
  public String getBioExcerpt() {
    return bioExcerpt;
  }

  public void setBioExcerpt(String bioExcerpt) {
    this.bioExcerpt = bioExcerpt;
  }


  public GetGroup200ResponseGroup bioRaw(String bioRaw) {
    this.bioRaw = bioRaw;
    return this;
  }

  /**
   * Get bioRaw
   * @return bioRaw
   */
  @javax.annotation.Nullable
  public String getBioRaw() {
    return bioRaw;
  }

  public void setBioRaw(String bioRaw) {
    this.bioRaw = bioRaw;
  }


  public GetGroup200ResponseGroup canAdminGroup(Boolean canAdminGroup) {
    this.canAdminGroup = canAdminGroup;
    return this;
  }

  /**
   * Get canAdminGroup
   * @return canAdminGroup
   */
  @javax.annotation.Nonnull
  public Boolean getCanAdminGroup() {
    return canAdminGroup;
  }

  public void setCanAdminGroup(Boolean canAdminGroup) {
    this.canAdminGroup = canAdminGroup;
  }


  public GetGroup200ResponseGroup canEditGroup(Boolean canEditGroup) {
    this.canEditGroup = canEditGroup;
    return this;
  }

  /**
   * Get canEditGroup
   * @return canEditGroup
   */
  @javax.annotation.Nullable
  public Boolean getCanEditGroup() {
    return canEditGroup;
  }

  public void setCanEditGroup(Boolean canEditGroup) {
    this.canEditGroup = canEditGroup;
  }


  public GetGroup200ResponseGroup canSeeMembers(Boolean canSeeMembers) {
    this.canSeeMembers = canSeeMembers;
    return this;
  }

  /**
   * Get canSeeMembers
   * @return canSeeMembers
   */
  @javax.annotation.Nonnull
  public Boolean getCanSeeMembers() {
    return canSeeMembers;
  }

  public void setCanSeeMembers(Boolean canSeeMembers) {
    this.canSeeMembers = canSeeMembers;
  }


  public GetGroup200ResponseGroup defaultNotificationLevel(Integer defaultNotificationLevel) {
    this.defaultNotificationLevel = defaultNotificationLevel;
    return this;
  }

  /**
   * Get defaultNotificationLevel
   * @return defaultNotificationLevel
   */
  @javax.annotation.Nonnull
  public Integer getDefaultNotificationLevel() {
    return defaultNotificationLevel;
  }

  public void setDefaultNotificationLevel(Integer defaultNotificationLevel) {
    this.defaultNotificationLevel = defaultNotificationLevel;
  }


  public GetGroup200ResponseGroup emailFromAlias(String emailFromAlias) {
    this.emailFromAlias = emailFromAlias;
    return this;
  }

  /**
   * Get emailFromAlias
   * @return emailFromAlias
   */
  @javax.annotation.Nullable
  public String getEmailFromAlias() {
    return emailFromAlias;
  }

  public void setEmailFromAlias(String emailFromAlias) {
    this.emailFromAlias = emailFromAlias;
  }


  public GetGroup200ResponseGroup emailPassword(String emailPassword) {
    this.emailPassword = emailPassword;
    return this;
  }

  /**
   * Get emailPassword
   * @return emailPassword
   */
  @javax.annotation.Nullable
  public String getEmailPassword() {
    return emailPassword;
  }

  public void setEmailPassword(String emailPassword) {
    this.emailPassword = emailPassword;
  }


  public GetGroup200ResponseGroup emailUsername(String emailUsername) {
    this.emailUsername = emailUsername;
    return this;
  }

  /**
   * Get emailUsername
   * @return emailUsername
   */
  @javax.annotation.Nullable
  public String getEmailUsername() {
    return emailUsername;
  }

  public void setEmailUsername(String emailUsername) {
    this.emailUsername = emailUsername;
  }


  public GetGroup200ResponseGroup flairBgColor(String flairBgColor) {
    this.flairBgColor = flairBgColor;
    return this;
  }

  /**
   * Get flairBgColor
   * @return flairBgColor
   */
  @javax.annotation.Nullable
  public String getFlairBgColor() {
    return flairBgColor;
  }

  public void setFlairBgColor(String flairBgColor) {
    this.flairBgColor = flairBgColor;
  }


  public GetGroup200ResponseGroup flairColor(String flairColor) {
    this.flairColor = flairColor;
    return this;
  }

  /**
   * Get flairColor
   * @return flairColor
   */
  @javax.annotation.Nullable
  public String getFlairColor() {
    return flairColor;
  }

  public void setFlairColor(String flairColor) {
    this.flairColor = flairColor;
  }


  public GetGroup200ResponseGroup flairUrl(String flairUrl) {
    this.flairUrl = flairUrl;
    return this;
  }

  /**
   * Get flairUrl
   * @return flairUrl
   */
  @javax.annotation.Nullable
  public String getFlairUrl() {
    return flairUrl;
  }

  public void setFlairUrl(String flairUrl) {
    this.flairUrl = flairUrl;
  }


  public GetGroup200ResponseGroup fullName(String fullName) {
    this.fullName = fullName;
    return this;
  }

  /**
   * Get fullName
   * @return fullName
   */
  @javax.annotation.Nullable
  public String getFullName() {
    return fullName;
  }

  public void setFullName(String fullName) {
    this.fullName = fullName;
  }


  public GetGroup200ResponseGroup grantTrustLevel(String grantTrustLevel) {
    this.grantTrustLevel = grantTrustLevel;
    return this;
  }

  /**
   * Get grantTrustLevel
   * @return grantTrustLevel
   */
  @javax.annotation.Nullable
  public String getGrantTrustLevel() {
    return grantTrustLevel;
  }

  public void setGrantTrustLevel(String grantTrustLevel) {
    this.grantTrustLevel = grantTrustLevel;
  }


  public GetGroup200ResponseGroup hasMessages(Boolean hasMessages) {
    this.hasMessages = hasMessages;
    return this;
  }

  /**
   * Get hasMessages
   * @return hasMessages
   */
  @javax.annotation.Nonnull
  public Boolean getHasMessages() {
    return hasMessages;
  }

  public void setHasMessages(Boolean hasMessages) {
    this.hasMessages = hasMessages;
  }


  public GetGroup200ResponseGroup id(Integer id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nonnull
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }


  public GetGroup200ResponseGroup imapEnabled(Boolean imapEnabled) {
    this.imapEnabled = imapEnabled;
    return this;
  }

  /**
   * Get imapEnabled
   * @return imapEnabled
   */
  @javax.annotation.Nullable
  public Boolean getImapEnabled() {
    return imapEnabled;
  }

  public void setImapEnabled(Boolean imapEnabled) {
    this.imapEnabled = imapEnabled;
  }


  public GetGroup200ResponseGroup imapLastError(String imapLastError) {
    this.imapLastError = imapLastError;
    return this;
  }

  /**
   * Get imapLastError
   * @return imapLastError
   */
  @javax.annotation.Nullable
  public String getImapLastError() {
    return imapLastError;
  }

  public void setImapLastError(String imapLastError) {
    this.imapLastError = imapLastError;
  }


  public GetGroup200ResponseGroup imapMailboxName(String imapMailboxName) {
    this.imapMailboxName = imapMailboxName;
    return this;
  }

  /**
   * Get imapMailboxName
   * @return imapMailboxName
   */
  @javax.annotation.Nonnull
  public String getImapMailboxName() {
    return imapMailboxName;
  }

  public void setImapMailboxName(String imapMailboxName) {
    this.imapMailboxName = imapMailboxName;
  }


  public GetGroup200ResponseGroup imapMailboxes(List<Object> imapMailboxes) {
    this.imapMailboxes = imapMailboxes;
    return this;
  }

  public GetGroup200ResponseGroup addImapMailboxesItem(Object imapMailboxesItem) {
    if (this.imapMailboxes == null) {
      this.imapMailboxes = new ArrayList<>();
    }
    this.imapMailboxes.add(imapMailboxesItem);
    return this;
  }

  /**
   * Get imapMailboxes
   * @return imapMailboxes
   */
  @javax.annotation.Nonnull
  public List<Object> getImapMailboxes() {
    return imapMailboxes;
  }

  public void setImapMailboxes(List<Object> imapMailboxes) {
    this.imapMailboxes = imapMailboxes;
  }


  public GetGroup200ResponseGroup imapNewEmails(String imapNewEmails) {
    this.imapNewEmails = imapNewEmails;
    return this;
  }

  /**
   * Get imapNewEmails
   * @return imapNewEmails
   */
  @javax.annotation.Nullable
  public String getImapNewEmails() {
    return imapNewEmails;
  }

  public void setImapNewEmails(String imapNewEmails) {
    this.imapNewEmails = imapNewEmails;
  }


  public GetGroup200ResponseGroup imapOldEmails(String imapOldEmails) {
    this.imapOldEmails = imapOldEmails;
    return this;
  }

  /**
   * Get imapOldEmails
   * @return imapOldEmails
   */
  @javax.annotation.Nullable
  public String getImapOldEmails() {
    return imapOldEmails;
  }

  public void setImapOldEmails(String imapOldEmails) {
    this.imapOldEmails = imapOldEmails;
  }


  public GetGroup200ResponseGroup imapPort(String imapPort) {
    this.imapPort = imapPort;
    return this;
  }

  /**
   * Get imapPort
   * @return imapPort
   */
  @javax.annotation.Nullable
  public String getImapPort() {
    return imapPort;
  }

  public void setImapPort(String imapPort) {
    this.imapPort = imapPort;
  }


  public GetGroup200ResponseGroup imapServer(String imapServer) {
    this.imapServer = imapServer;
    return this;
  }

  /**
   * Get imapServer
   * @return imapServer
   */
  @javax.annotation.Nullable
  public String getImapServer() {
    return imapServer;
  }

  public void setImapServer(String imapServer) {
    this.imapServer = imapServer;
  }


  public GetGroup200ResponseGroup imapSsl(String imapSsl) {
    this.imapSsl = imapSsl;
    return this;
  }

  /**
   * Get imapSsl
   * @return imapSsl
   */
  @javax.annotation.Nullable
  public String getImapSsl() {
    return imapSsl;
  }

  public void setImapSsl(String imapSsl) {
    this.imapSsl = imapSsl;
  }


  public GetGroup200ResponseGroup imapUpdatedAt(String imapUpdatedAt) {
    this.imapUpdatedAt = imapUpdatedAt;
    return this;
  }

  /**
   * Get imapUpdatedAt
   * @return imapUpdatedAt
   */
  @javax.annotation.Nullable
  public String getImapUpdatedAt() {
    return imapUpdatedAt;
  }

  public void setImapUpdatedAt(String imapUpdatedAt) {
    this.imapUpdatedAt = imapUpdatedAt;
  }


  public GetGroup200ResponseGroup imapUpdatedBy(Object imapUpdatedBy) {
    this.imapUpdatedBy = imapUpdatedBy;
    return this;
  }

  public GetGroup200ResponseGroup putImapUpdatedByItem(String key,  imapUpdatedByItem) {
    if (this.imapUpdatedBy == null) {
      this.imapUpdatedBy = new HashMap<>();
    }
    this.imapUpdatedBy.put(key, imapUpdatedByItem);
    return this;
  }

  /**
   * Get imapUpdatedBy
   * @return imapUpdatedBy
   */
  @javax.annotation.Nullable
  public Object getImapUpdatedBy() {
    return imapUpdatedBy;
  }

  public void setImapUpdatedBy(Object imapUpdatedBy) {
    this.imapUpdatedBy = imapUpdatedBy;
  }


  public GetGroup200ResponseGroup incomingEmail(String incomingEmail) {
    this.incomingEmail = incomingEmail;
    return this;
  }

  /**
   * Get incomingEmail
   * @return incomingEmail
   */
  @javax.annotation.Nullable
  public String getIncomingEmail() {
    return incomingEmail;
  }

  public void setIncomingEmail(String incomingEmail) {
    this.incomingEmail = incomingEmail;
  }


  public GetGroup200ResponseGroup isGroupOwnerDisplay(Boolean isGroupOwnerDisplay) {
    this.isGroupOwnerDisplay = isGroupOwnerDisplay;
    return this;
  }

  /**
   * Get isGroupOwnerDisplay
   * @return isGroupOwnerDisplay
   */
  @javax.annotation.Nonnull
  public Boolean getIsGroupOwnerDisplay() {
    return isGroupOwnerDisplay;
  }

  public void setIsGroupOwnerDisplay(Boolean isGroupOwnerDisplay) {
    this.isGroupOwnerDisplay = isGroupOwnerDisplay;
  }


  public GetGroup200ResponseGroup isGroupUser(Boolean isGroupUser) {
    this.isGroupUser = isGroupUser;
    return this;
  }

  /**
   * Get isGroupUser
   * @return isGroupUser
   */
  @javax.annotation.Nonnull
  public Boolean getIsGroupUser() {
    return isGroupUser;
  }

  public void setIsGroupUser(Boolean isGroupUser) {
    this.isGroupUser = isGroupUser;
  }


  public GetGroup200ResponseGroup membersVisibilityLevel(Integer membersVisibilityLevel) {
    this.membersVisibilityLevel = membersVisibilityLevel;
    return this;
  }

  /**
   * Get membersVisibilityLevel
   * @return membersVisibilityLevel
   */
  @javax.annotation.Nonnull
  public Integer getMembersVisibilityLevel() {
    return membersVisibilityLevel;
  }

  public void setMembersVisibilityLevel(Integer membersVisibilityLevel) {
    this.membersVisibilityLevel = membersVisibilityLevel;
  }


  public GetGroup200ResponseGroup membershipRequestTemplate(String membershipRequestTemplate) {
    this.membershipRequestTemplate = membershipRequestTemplate;
    return this;
  }

  /**
   * Get membershipRequestTemplate
   * @return membershipRequestTemplate
   */
  @javax.annotation.Nullable
  public String getMembershipRequestTemplate() {
    return membershipRequestTemplate;
  }

  public void setMembershipRequestTemplate(String membershipRequestTemplate) {
    this.membershipRequestTemplate = membershipRequestTemplate;
  }


  public GetGroup200ResponseGroup mentionable(Boolean mentionable) {
    this.mentionable = mentionable;
    return this;
  }

  /**
   * Get mentionable
   * @return mentionable
   */
  @javax.annotation.Nonnull
  public Boolean getMentionable() {
    return mentionable;
  }

  public void setMentionable(Boolean mentionable) {
    this.mentionable = mentionable;
  }


  public GetGroup200ResponseGroup mentionableLevel(Integer mentionableLevel) {
    this.mentionableLevel = mentionableLevel;
    return this;
  }

  /**
   * Get mentionableLevel
   * @return mentionableLevel
   */
  @javax.annotation.Nonnull
  public Integer getMentionableLevel() {
    return mentionableLevel;
  }

  public void setMentionableLevel(Integer mentionableLevel) {
    this.mentionableLevel = mentionableLevel;
  }


  public GetGroup200ResponseGroup messageCount(Integer messageCount) {
    this.messageCount = messageCount;
    return this;
  }

  /**
   * Get messageCount
   * @return messageCount
   */
  @javax.annotation.Nonnull
  public Integer getMessageCount() {
    return messageCount;
  }

  public void setMessageCount(Integer messageCount) {
    this.messageCount = messageCount;
  }


  public GetGroup200ResponseGroup messageable(Boolean messageable) {
    this.messageable = messageable;
    return this;
  }

  /**
   * Get messageable
   * @return messageable
   */
  @javax.annotation.Nonnull
  public Boolean getMessageable() {
    return messageable;
  }

  public void setMessageable(Boolean messageable) {
    this.messageable = messageable;
  }


  public GetGroup200ResponseGroup messageableLevel(Integer messageableLevel) {
    this.messageableLevel = messageableLevel;
    return this;
  }

  /**
   * Get messageableLevel
   * @return messageableLevel
   */
  @javax.annotation.Nonnull
  public Integer getMessageableLevel() {
    return messageableLevel;
  }

  public void setMessageableLevel(Integer messageableLevel) {
    this.messageableLevel = messageableLevel;
  }


  public GetGroup200ResponseGroup mutedCategoryIds(List<Object> mutedCategoryIds) {
    this.mutedCategoryIds = mutedCategoryIds;
    return this;
  }

  public GetGroup200ResponseGroup addMutedCategoryIdsItem(Object mutedCategoryIdsItem) {
    if (this.mutedCategoryIds == null) {
      this.mutedCategoryIds = new ArrayList<>();
    }
    this.mutedCategoryIds.add(mutedCategoryIdsItem);
    return this;
  }

  /**
   * Get mutedCategoryIds
   * @return mutedCategoryIds
   */
  @javax.annotation.Nonnull
  public List<Object> getMutedCategoryIds() {
    return mutedCategoryIds;
  }

  public void setMutedCategoryIds(List<Object> mutedCategoryIds) {
    this.mutedCategoryIds = mutedCategoryIds;
  }


  public GetGroup200ResponseGroup mutedTags(List<Object> mutedTags) {
    this.mutedTags = mutedTags;
    return this;
  }

  public GetGroup200ResponseGroup addMutedTagsItem(Object mutedTagsItem) {
    if (this.mutedTags == null) {
      this.mutedTags = new ArrayList<>();
    }
    this.mutedTags.add(mutedTagsItem);
    return this;
  }

  /**
   * Get mutedTags
   * @return mutedTags
   */
  @javax.annotation.Nullable
  public List<Object> getMutedTags() {
    return mutedTags;
  }

  public void setMutedTags(List<Object> mutedTags) {
    this.mutedTags = mutedTags;
  }


  public GetGroup200ResponseGroup name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nonnull
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public GetGroup200ResponseGroup primaryGroup(Boolean primaryGroup) {
    this.primaryGroup = primaryGroup;
    return this;
  }

  /**
   * Get primaryGroup
   * @return primaryGroup
   */
  @javax.annotation.Nonnull
  public Boolean getPrimaryGroup() {
    return primaryGroup;
  }

  public void setPrimaryGroup(Boolean primaryGroup) {
    this.primaryGroup = primaryGroup;
  }


  public GetGroup200ResponseGroup publicAdmission(Boolean publicAdmission) {
    this.publicAdmission = publicAdmission;
    return this;
  }

  /**
   * Get publicAdmission
   * @return publicAdmission
   */
  @javax.annotation.Nonnull
  public Boolean getPublicAdmission() {
    return publicAdmission;
  }

  public void setPublicAdmission(Boolean publicAdmission) {
    this.publicAdmission = publicAdmission;
  }


  public GetGroup200ResponseGroup publicExit(Boolean publicExit) {
    this.publicExit = publicExit;
    return this;
  }

  /**
   * Get publicExit
   * @return publicExit
   */
  @javax.annotation.Nonnull
  public Boolean getPublicExit() {
    return publicExit;
  }

  public void setPublicExit(Boolean publicExit) {
    this.publicExit = publicExit;
  }


  public GetGroup200ResponseGroup publishReadState(Boolean publishReadState) {
    this.publishReadState = publishReadState;
    return this;
  }

  /**
   * Get publishReadState
   * @return publishReadState
   */
  @javax.annotation.Nonnull
  public Boolean getPublishReadState() {
    return publishReadState;
  }

  public void setPublishReadState(Boolean publishReadState) {
    this.publishReadState = publishReadState;
  }


  public GetGroup200ResponseGroup regularCategoryIds(List<Object> regularCategoryIds) {
    this.regularCategoryIds = regularCategoryIds;
    return this;
  }

  public GetGroup200ResponseGroup addRegularCategoryIdsItem(Object regularCategoryIdsItem) {
    if (this.regularCategoryIds == null) {
      this.regularCategoryIds = new ArrayList<>();
    }
    this.regularCategoryIds.add(regularCategoryIdsItem);
    return this;
  }

  /**
   * Get regularCategoryIds
   * @return regularCategoryIds
   */
  @javax.annotation.Nonnull
  public List<Object> getRegularCategoryIds() {
    return regularCategoryIds;
  }

  public void setRegularCategoryIds(List<Object> regularCategoryIds) {
    this.regularCategoryIds = regularCategoryIds;
  }


  public GetGroup200ResponseGroup regularTags(List<Object> regularTags) {
    this.regularTags = regularTags;
    return this;
  }

  public GetGroup200ResponseGroup addRegularTagsItem(Object regularTagsItem) {
    if (this.regularTags == null) {
      this.regularTags = new ArrayList<>();
    }
    this.regularTags.add(regularTagsItem);
    return this;
  }

  /**
   * Get regularTags
   * @return regularTags
   */
  @javax.annotation.Nullable
  public List<Object> getRegularTags() {
    return regularTags;
  }

  public void setRegularTags(List<Object> regularTags) {
    this.regularTags = regularTags;
  }


  public GetGroup200ResponseGroup smtpEnabled(Boolean smtpEnabled) {
    this.smtpEnabled = smtpEnabled;
    return this;
  }

  /**
   * Get smtpEnabled
   * @return smtpEnabled
   */
  @javax.annotation.Nullable
  public Boolean getSmtpEnabled() {
    return smtpEnabled;
  }

  public void setSmtpEnabled(Boolean smtpEnabled) {
    this.smtpEnabled = smtpEnabled;
  }


  public GetGroup200ResponseGroup smtpPort(String smtpPort) {
    this.smtpPort = smtpPort;
    return this;
  }

  /**
   * Get smtpPort
   * @return smtpPort
   */
  @javax.annotation.Nullable
  public String getSmtpPort() {
    return smtpPort;
  }

  public void setSmtpPort(String smtpPort) {
    this.smtpPort = smtpPort;
  }


  public GetGroup200ResponseGroup smtpServer(String smtpServer) {
    this.smtpServer = smtpServer;
    return this;
  }

  /**
   * Get smtpServer
   * @return smtpServer
   */
  @javax.annotation.Nullable
  public String getSmtpServer() {
    return smtpServer;
  }

  public void setSmtpServer(String smtpServer) {
    this.smtpServer = smtpServer;
  }


  public GetGroup200ResponseGroup smtpSsl(String smtpSsl) {
    this.smtpSsl = smtpSsl;
    return this;
  }

  /**
   * Get smtpSsl
   * @return smtpSsl
   */
  @javax.annotation.Nullable
  public String getSmtpSsl() {
    return smtpSsl;
  }

  public void setSmtpSsl(String smtpSsl) {
    this.smtpSsl = smtpSsl;
  }


  public GetGroup200ResponseGroup smtpUpdatedAt(String smtpUpdatedAt) {
    this.smtpUpdatedAt = smtpUpdatedAt;
    return this;
  }

  /**
   * Get smtpUpdatedAt
   * @return smtpUpdatedAt
   */
  @javax.annotation.Nullable
  public String getSmtpUpdatedAt() {
    return smtpUpdatedAt;
  }

  public void setSmtpUpdatedAt(String smtpUpdatedAt) {
    this.smtpUpdatedAt = smtpUpdatedAt;
  }


  public GetGroup200ResponseGroup smtpUpdatedBy(Object smtpUpdatedBy) {
    this.smtpUpdatedBy = smtpUpdatedBy;
    return this;
  }

  public GetGroup200ResponseGroup putSmtpUpdatedByItem(String key,  smtpUpdatedByItem) {
    if (this.smtpUpdatedBy == null) {
      this.smtpUpdatedBy = new HashMap<>();
    }
    this.smtpUpdatedBy.put(key, smtpUpdatedByItem);
    return this;
  }

  /**
   * Get smtpUpdatedBy
   * @return smtpUpdatedBy
   */
  @javax.annotation.Nullable
  public Object getSmtpUpdatedBy() {
    return smtpUpdatedBy;
  }

  public void setSmtpUpdatedBy(Object smtpUpdatedBy) {
    this.smtpUpdatedBy = smtpUpdatedBy;
  }


  public GetGroup200ResponseGroup title(String title) {
    this.title = title;
    return this;
  }

  /**
   * Get title
   * @return title
   */
  @javax.annotation.Nullable
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }


  public GetGroup200ResponseGroup trackingCategoryIds(List<Object> trackingCategoryIds) {
    this.trackingCategoryIds = trackingCategoryIds;
    return this;
  }

  public GetGroup200ResponseGroup addTrackingCategoryIdsItem(Object trackingCategoryIdsItem) {
    if (this.trackingCategoryIds == null) {
      this.trackingCategoryIds = new ArrayList<>();
    }
    this.trackingCategoryIds.add(trackingCategoryIdsItem);
    return this;
  }

  /**
   * Get trackingCategoryIds
   * @return trackingCategoryIds
   */
  @javax.annotation.Nonnull
  public List<Object> getTrackingCategoryIds() {
    return trackingCategoryIds;
  }

  public void setTrackingCategoryIds(List<Object> trackingCategoryIds) {
    this.trackingCategoryIds = trackingCategoryIds;
  }


  public GetGroup200ResponseGroup trackingTags(List<Object> trackingTags) {
    this.trackingTags = trackingTags;
    return this;
  }

  public GetGroup200ResponseGroup addTrackingTagsItem(Object trackingTagsItem) {
    if (this.trackingTags == null) {
      this.trackingTags = new ArrayList<>();
    }
    this.trackingTags.add(trackingTagsItem);
    return this;
  }

  /**
   * Get trackingTags
   * @return trackingTags
   */
  @javax.annotation.Nullable
  public List<Object> getTrackingTags() {
    return trackingTags;
  }

  public void setTrackingTags(List<Object> trackingTags) {
    this.trackingTags = trackingTags;
  }


  public GetGroup200ResponseGroup userCount(Integer userCount) {
    this.userCount = userCount;
    return this;
  }

  /**
   * Get userCount
   * @return userCount
   */
  @javax.annotation.Nonnull
  public Integer getUserCount() {
    return userCount;
  }

  public void setUserCount(Integer userCount) {
    this.userCount = userCount;
  }


  public GetGroup200ResponseGroup visibilityLevel(Integer visibilityLevel) {
    this.visibilityLevel = visibilityLevel;
    return this;
  }

  /**
   * Get visibilityLevel
   * @return visibilityLevel
   */
  @javax.annotation.Nonnull
  public Integer getVisibilityLevel() {
    return visibilityLevel;
  }

  public void setVisibilityLevel(Integer visibilityLevel) {
    this.visibilityLevel = visibilityLevel;
  }


  public GetGroup200ResponseGroup watchingCategoryIds(List<Object> watchingCategoryIds) {
    this.watchingCategoryIds = watchingCategoryIds;
    return this;
  }

  public GetGroup200ResponseGroup addWatchingCategoryIdsItem(Object watchingCategoryIdsItem) {
    if (this.watchingCategoryIds == null) {
      this.watchingCategoryIds = new ArrayList<>();
    }
    this.watchingCategoryIds.add(watchingCategoryIdsItem);
    return this;
  }

  /**
   * Get watchingCategoryIds
   * @return watchingCategoryIds
   */
  @javax.annotation.Nonnull
  public List<Object> getWatchingCategoryIds() {
    return watchingCategoryIds;
  }

  public void setWatchingCategoryIds(List<Object> watchingCategoryIds) {
    this.watchingCategoryIds = watchingCategoryIds;
  }


  public GetGroup200ResponseGroup watchingFirstPostCategoryIds(List<Object> watchingFirstPostCategoryIds) {
    this.watchingFirstPostCategoryIds = watchingFirstPostCategoryIds;
    return this;
  }

  public GetGroup200ResponseGroup addWatchingFirstPostCategoryIdsItem(Object watchingFirstPostCategoryIdsItem) {
    if (this.watchingFirstPostCategoryIds == null) {
      this.watchingFirstPostCategoryIds = new ArrayList<>();
    }
    this.watchingFirstPostCategoryIds.add(watchingFirstPostCategoryIdsItem);
    return this;
  }

  /**
   * Get watchingFirstPostCategoryIds
   * @return watchingFirstPostCategoryIds
   */
  @javax.annotation.Nonnull
  public List<Object> getWatchingFirstPostCategoryIds() {
    return watchingFirstPostCategoryIds;
  }

  public void setWatchingFirstPostCategoryIds(List<Object> watchingFirstPostCategoryIds) {
    this.watchingFirstPostCategoryIds = watchingFirstPostCategoryIds;
  }


  public GetGroup200ResponseGroup watchingFirstPostTags(List<Object> watchingFirstPostTags) {
    this.watchingFirstPostTags = watchingFirstPostTags;
    return this;
  }

  public GetGroup200ResponseGroup addWatchingFirstPostTagsItem(Object watchingFirstPostTagsItem) {
    if (this.watchingFirstPostTags == null) {
      this.watchingFirstPostTags = new ArrayList<>();
    }
    this.watchingFirstPostTags.add(watchingFirstPostTagsItem);
    return this;
  }

  /**
   * Get watchingFirstPostTags
   * @return watchingFirstPostTags
   */
  @javax.annotation.Nullable
  public List<Object> getWatchingFirstPostTags() {
    return watchingFirstPostTags;
  }

  public void setWatchingFirstPostTags(List<Object> watchingFirstPostTags) {
    this.watchingFirstPostTags = watchingFirstPostTags;
  }


  public GetGroup200ResponseGroup watchingTags(List<Object> watchingTags) {
    this.watchingTags = watchingTags;
    return this;
  }

  public GetGroup200ResponseGroup addWatchingTagsItem(Object watchingTagsItem) {
    if (this.watchingTags == null) {
      this.watchingTags = new ArrayList<>();
    }
    this.watchingTags.add(watchingTagsItem);
    return this;
  }

  /**
   * Get watchingTags
   * @return watchingTags
   */
  @javax.annotation.Nullable
  public List<Object> getWatchingTags() {
    return watchingTags;
  }

  public void setWatchingTags(List<Object> watchingTags) {
    this.watchingTags = watchingTags;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the GetGroup200ResponseGroup instance itself
   */
  public GetGroup200ResponseGroup putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetGroup200ResponseGroup getGroup200ResponseGroup = (GetGroup200ResponseGroup) o;
    return Objects.equals(this.allowMembershipRequests, getGroup200ResponseGroup.allowMembershipRequests) &&
        Objects.equals(this.allowUnknownSenderTopicReplies, getGroup200ResponseGroup.allowUnknownSenderTopicReplies) &&
        Objects.equals(this.associatedGroupIds, getGroup200ResponseGroup.associatedGroupIds) &&
        Objects.equals(this.automatic, getGroup200ResponseGroup.automatic) &&
        Objects.equals(this.automaticMembershipEmailDomains, getGroup200ResponseGroup.automaticMembershipEmailDomains) &&
        Objects.equals(this.bioCooked, getGroup200ResponseGroup.bioCooked) &&
        Objects.equals(this.bioExcerpt, getGroup200ResponseGroup.bioExcerpt) &&
        Objects.equals(this.bioRaw, getGroup200ResponseGroup.bioRaw) &&
        Objects.equals(this.canAdminGroup, getGroup200ResponseGroup.canAdminGroup) &&
        Objects.equals(this.canEditGroup, getGroup200ResponseGroup.canEditGroup) &&
        Objects.equals(this.canSeeMembers, getGroup200ResponseGroup.canSeeMembers) &&
        Objects.equals(this.defaultNotificationLevel, getGroup200ResponseGroup.defaultNotificationLevel) &&
        Objects.equals(this.emailFromAlias, getGroup200ResponseGroup.emailFromAlias) &&
        Objects.equals(this.emailPassword, getGroup200ResponseGroup.emailPassword) &&
        Objects.equals(this.emailUsername, getGroup200ResponseGroup.emailUsername) &&
        Objects.equals(this.flairBgColor, getGroup200ResponseGroup.flairBgColor) &&
        Objects.equals(this.flairColor, getGroup200ResponseGroup.flairColor) &&
        Objects.equals(this.flairUrl, getGroup200ResponseGroup.flairUrl) &&
        Objects.equals(this.fullName, getGroup200ResponseGroup.fullName) &&
        Objects.equals(this.grantTrustLevel, getGroup200ResponseGroup.grantTrustLevel) &&
        Objects.equals(this.hasMessages, getGroup200ResponseGroup.hasMessages) &&
        Objects.equals(this.id, getGroup200ResponseGroup.id) &&
        Objects.equals(this.imapEnabled, getGroup200ResponseGroup.imapEnabled) &&
        Objects.equals(this.imapLastError, getGroup200ResponseGroup.imapLastError) &&
        Objects.equals(this.imapMailboxName, getGroup200ResponseGroup.imapMailboxName) &&
        Objects.equals(this.imapMailboxes, getGroup200ResponseGroup.imapMailboxes) &&
        Objects.equals(this.imapNewEmails, getGroup200ResponseGroup.imapNewEmails) &&
        Objects.equals(this.imapOldEmails, getGroup200ResponseGroup.imapOldEmails) &&
        Objects.equals(this.imapPort, getGroup200ResponseGroup.imapPort) &&
        Objects.equals(this.imapServer, getGroup200ResponseGroup.imapServer) &&
        Objects.equals(this.imapSsl, getGroup200ResponseGroup.imapSsl) &&
        Objects.equals(this.imapUpdatedAt, getGroup200ResponseGroup.imapUpdatedAt) &&
        Objects.equals(this.imapUpdatedBy, getGroup200ResponseGroup.imapUpdatedBy) &&
        Objects.equals(this.incomingEmail, getGroup200ResponseGroup.incomingEmail) &&
        Objects.equals(this.isGroupOwnerDisplay, getGroup200ResponseGroup.isGroupOwnerDisplay) &&
        Objects.equals(this.isGroupUser, getGroup200ResponseGroup.isGroupUser) &&
        Objects.equals(this.membersVisibilityLevel, getGroup200ResponseGroup.membersVisibilityLevel) &&
        Objects.equals(this.membershipRequestTemplate, getGroup200ResponseGroup.membershipRequestTemplate) &&
        Objects.equals(this.mentionable, getGroup200ResponseGroup.mentionable) &&
        Objects.equals(this.mentionableLevel, getGroup200ResponseGroup.mentionableLevel) &&
        Objects.equals(this.messageCount, getGroup200ResponseGroup.messageCount) &&
        Objects.equals(this.messageable, getGroup200ResponseGroup.messageable) &&
        Objects.equals(this.messageableLevel, getGroup200ResponseGroup.messageableLevel) &&
        Objects.equals(this.mutedCategoryIds, getGroup200ResponseGroup.mutedCategoryIds) &&
        Objects.equals(this.mutedTags, getGroup200ResponseGroup.mutedTags) &&
        Objects.equals(this.name, getGroup200ResponseGroup.name) &&
        Objects.equals(this.primaryGroup, getGroup200ResponseGroup.primaryGroup) &&
        Objects.equals(this.publicAdmission, getGroup200ResponseGroup.publicAdmission) &&
        Objects.equals(this.publicExit, getGroup200ResponseGroup.publicExit) &&
        Objects.equals(this.publishReadState, getGroup200ResponseGroup.publishReadState) &&
        Objects.equals(this.regularCategoryIds, getGroup200ResponseGroup.regularCategoryIds) &&
        Objects.equals(this.regularTags, getGroup200ResponseGroup.regularTags) &&
        Objects.equals(this.smtpEnabled, getGroup200ResponseGroup.smtpEnabled) &&
        Objects.equals(this.smtpPort, getGroup200ResponseGroup.smtpPort) &&
        Objects.equals(this.smtpServer, getGroup200ResponseGroup.smtpServer) &&
        Objects.equals(this.smtpSsl, getGroup200ResponseGroup.smtpSsl) &&
        Objects.equals(this.smtpUpdatedAt, getGroup200ResponseGroup.smtpUpdatedAt) &&
        Objects.equals(this.smtpUpdatedBy, getGroup200ResponseGroup.smtpUpdatedBy) &&
        Objects.equals(this.title, getGroup200ResponseGroup.title) &&
        Objects.equals(this.trackingCategoryIds, getGroup200ResponseGroup.trackingCategoryIds) &&
        Objects.equals(this.trackingTags, getGroup200ResponseGroup.trackingTags) &&
        Objects.equals(this.userCount, getGroup200ResponseGroup.userCount) &&
        Objects.equals(this.visibilityLevel, getGroup200ResponseGroup.visibilityLevel) &&
        Objects.equals(this.watchingCategoryIds, getGroup200ResponseGroup.watchingCategoryIds) &&
        Objects.equals(this.watchingFirstPostCategoryIds, getGroup200ResponseGroup.watchingFirstPostCategoryIds) &&
        Objects.equals(this.watchingFirstPostTags, getGroup200ResponseGroup.watchingFirstPostTags) &&
        Objects.equals(this.watchingTags, getGroup200ResponseGroup.watchingTags)&&
        Objects.equals(this.additionalProperties, getGroup200ResponseGroup.additionalProperties);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(allowMembershipRequests, allowUnknownSenderTopicReplies, associatedGroupIds, automatic, automaticMembershipEmailDomains, bioCooked, bioExcerpt, bioRaw, canAdminGroup, canEditGroup, canSeeMembers, defaultNotificationLevel, emailFromAlias, emailPassword, emailUsername, flairBgColor, flairColor, flairUrl, fullName, grantTrustLevel, hasMessages, id, imapEnabled, imapLastError, imapMailboxName, imapMailboxes, imapNewEmails, imapOldEmails, imapPort, imapServer, imapSsl, imapUpdatedAt, imapUpdatedBy, incomingEmail, isGroupOwnerDisplay, isGroupUser, membersVisibilityLevel, membershipRequestTemplate, mentionable, mentionableLevel, messageCount, messageable, messageableLevel, mutedCategoryIds, mutedTags, name, primaryGroup, publicAdmission, publicExit, publishReadState, regularCategoryIds, regularTags, smtpEnabled, smtpPort, smtpServer, smtpSsl, smtpUpdatedAt, smtpUpdatedBy, title, trackingCategoryIds, trackingTags, userCount, visibilityLevel, watchingCategoryIds, watchingFirstPostCategoryIds, watchingFirstPostTags, watchingTags, additionalProperties);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetGroup200ResponseGroup {\n");
    sb.append("    allowMembershipRequests: ").append(toIndentedString(allowMembershipRequests)).append("\n");
    sb.append("    allowUnknownSenderTopicReplies: ").append(toIndentedString(allowUnknownSenderTopicReplies)).append("\n");
    sb.append("    associatedGroupIds: ").append(toIndentedString(associatedGroupIds)).append("\n");
    sb.append("    automatic: ").append(toIndentedString(automatic)).append("\n");
    sb.append("    automaticMembershipEmailDomains: ").append(toIndentedString(automaticMembershipEmailDomains)).append("\n");
    sb.append("    bioCooked: ").append(toIndentedString(bioCooked)).append("\n");
    sb.append("    bioExcerpt: ").append(toIndentedString(bioExcerpt)).append("\n");
    sb.append("    bioRaw: ").append(toIndentedString(bioRaw)).append("\n");
    sb.append("    canAdminGroup: ").append(toIndentedString(canAdminGroup)).append("\n");
    sb.append("    canEditGroup: ").append(toIndentedString(canEditGroup)).append("\n");
    sb.append("    canSeeMembers: ").append(toIndentedString(canSeeMembers)).append("\n");
    sb.append("    defaultNotificationLevel: ").append(toIndentedString(defaultNotificationLevel)).append("\n");
    sb.append("    emailFromAlias: ").append(toIndentedString(emailFromAlias)).append("\n");
    sb.append("    emailPassword: ").append(toIndentedString(emailPassword)).append("\n");
    sb.append("    emailUsername: ").append(toIndentedString(emailUsername)).append("\n");
    sb.append("    flairBgColor: ").append(toIndentedString(flairBgColor)).append("\n");
    sb.append("    flairColor: ").append(toIndentedString(flairColor)).append("\n");
    sb.append("    flairUrl: ").append(toIndentedString(flairUrl)).append("\n");
    sb.append("    fullName: ").append(toIndentedString(fullName)).append("\n");
    sb.append("    grantTrustLevel: ").append(toIndentedString(grantTrustLevel)).append("\n");
    sb.append("    hasMessages: ").append(toIndentedString(hasMessages)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    imapEnabled: ").append(toIndentedString(imapEnabled)).append("\n");
    sb.append("    imapLastError: ").append(toIndentedString(imapLastError)).append("\n");
    sb.append("    imapMailboxName: ").append(toIndentedString(imapMailboxName)).append("\n");
    sb.append("    imapMailboxes: ").append(toIndentedString(imapMailboxes)).append("\n");
    sb.append("    imapNewEmails: ").append(toIndentedString(imapNewEmails)).append("\n");
    sb.append("    imapOldEmails: ").append(toIndentedString(imapOldEmails)).append("\n");
    sb.append("    imapPort: ").append(toIndentedString(imapPort)).append("\n");
    sb.append("    imapServer: ").append(toIndentedString(imapServer)).append("\n");
    sb.append("    imapSsl: ").append(toIndentedString(imapSsl)).append("\n");
    sb.append("    imapUpdatedAt: ").append(toIndentedString(imapUpdatedAt)).append("\n");
    sb.append("    imapUpdatedBy: ").append(toIndentedString(imapUpdatedBy)).append("\n");
    sb.append("    incomingEmail: ").append(toIndentedString(incomingEmail)).append("\n");
    sb.append("    isGroupOwnerDisplay: ").append(toIndentedString(isGroupOwnerDisplay)).append("\n");
    sb.append("    isGroupUser: ").append(toIndentedString(isGroupUser)).append("\n");
    sb.append("    membersVisibilityLevel: ").append(toIndentedString(membersVisibilityLevel)).append("\n");
    sb.append("    membershipRequestTemplate: ").append(toIndentedString(membershipRequestTemplate)).append("\n");
    sb.append("    mentionable: ").append(toIndentedString(mentionable)).append("\n");
    sb.append("    mentionableLevel: ").append(toIndentedString(mentionableLevel)).append("\n");
    sb.append("    messageCount: ").append(toIndentedString(messageCount)).append("\n");
    sb.append("    messageable: ").append(toIndentedString(messageable)).append("\n");
    sb.append("    messageableLevel: ").append(toIndentedString(messageableLevel)).append("\n");
    sb.append("    mutedCategoryIds: ").append(toIndentedString(mutedCategoryIds)).append("\n");
    sb.append("    mutedTags: ").append(toIndentedString(mutedTags)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    primaryGroup: ").append(toIndentedString(primaryGroup)).append("\n");
    sb.append("    publicAdmission: ").append(toIndentedString(publicAdmission)).append("\n");
    sb.append("    publicExit: ").append(toIndentedString(publicExit)).append("\n");
    sb.append("    publishReadState: ").append(toIndentedString(publishReadState)).append("\n");
    sb.append("    regularCategoryIds: ").append(toIndentedString(regularCategoryIds)).append("\n");
    sb.append("    regularTags: ").append(toIndentedString(regularTags)).append("\n");
    sb.append("    smtpEnabled: ").append(toIndentedString(smtpEnabled)).append("\n");
    sb.append("    smtpPort: ").append(toIndentedString(smtpPort)).append("\n");
    sb.append("    smtpServer: ").append(toIndentedString(smtpServer)).append("\n");
    sb.append("    smtpSsl: ").append(toIndentedString(smtpSsl)).append("\n");
    sb.append("    smtpUpdatedAt: ").append(toIndentedString(smtpUpdatedAt)).append("\n");
    sb.append("    smtpUpdatedBy: ").append(toIndentedString(smtpUpdatedBy)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    trackingCategoryIds: ").append(toIndentedString(trackingCategoryIds)).append("\n");
    sb.append("    trackingTags: ").append(toIndentedString(trackingTags)).append("\n");
    sb.append("    userCount: ").append(toIndentedString(userCount)).append("\n");
    sb.append("    visibilityLevel: ").append(toIndentedString(visibilityLevel)).append("\n");
    sb.append("    watchingCategoryIds: ").append(toIndentedString(watchingCategoryIds)).append("\n");
    sb.append("    watchingFirstPostCategoryIds: ").append(toIndentedString(watchingFirstPostCategoryIds)).append("\n");
    sb.append("    watchingFirstPostTags: ").append(toIndentedString(watchingFirstPostTags)).append("\n");
    sb.append("    watchingTags: ").append(toIndentedString(watchingTags)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("allow_membership_requests");
    openapiFields.add("allow_unknown_sender_topic_replies");
    openapiFields.add("associated_group_ids");
    openapiFields.add("automatic");
    openapiFields.add("automatic_membership_email_domains");
    openapiFields.add("bio_cooked");
    openapiFields.add("bio_excerpt");
    openapiFields.add("bio_raw");
    openapiFields.add("can_admin_group");
    openapiFields.add("can_edit_group");
    openapiFields.add("can_see_members");
    openapiFields.add("default_notification_level");
    openapiFields.add("email_from_alias");
    openapiFields.add("email_password");
    openapiFields.add("email_username");
    openapiFields.add("flair_bg_color");
    openapiFields.add("flair_color");
    openapiFields.add("flair_url");
    openapiFields.add("full_name");
    openapiFields.add("grant_trust_level");
    openapiFields.add("has_messages");
    openapiFields.add("id");
    openapiFields.add("imap_enabled");
    openapiFields.add("imap_last_error");
    openapiFields.add("imap_mailbox_name");
    openapiFields.add("imap_mailboxes");
    openapiFields.add("imap_new_emails");
    openapiFields.add("imap_old_emails");
    openapiFields.add("imap_port");
    openapiFields.add("imap_server");
    openapiFields.add("imap_ssl");
    openapiFields.add("imap_updated_at");
    openapiFields.add("imap_updated_by");
    openapiFields.add("incoming_email");
    openapiFields.add("is_group_owner_display");
    openapiFields.add("is_group_user");
    openapiFields.add("members_visibility_level");
    openapiFields.add("membership_request_template");
    openapiFields.add("mentionable");
    openapiFields.add("mentionable_level");
    openapiFields.add("message_count");
    openapiFields.add("messageable");
    openapiFields.add("messageable_level");
    openapiFields.add("muted_category_ids");
    openapiFields.add("muted_tags");
    openapiFields.add("name");
    openapiFields.add("primary_group");
    openapiFields.add("public_admission");
    openapiFields.add("public_exit");
    openapiFields.add("publish_read_state");
    openapiFields.add("regular_category_ids");
    openapiFields.add("regular_tags");
    openapiFields.add("smtp_enabled");
    openapiFields.add("smtp_port");
    openapiFields.add("smtp_server");
    openapiFields.add("smtp_ssl");
    openapiFields.add("smtp_updated_at");
    openapiFields.add("smtp_updated_by");
    openapiFields.add("title");
    openapiFields.add("tracking_category_ids");
    openapiFields.add("tracking_tags");
    openapiFields.add("user_count");
    openapiFields.add("visibility_level");
    openapiFields.add("watching_category_ids");
    openapiFields.add("watching_first_post_category_ids");
    openapiFields.add("watching_first_post_tags");
    openapiFields.add("watching_tags");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("allow_membership_requests");
    openapiRequiredFields.add("allow_unknown_sender_topic_replies");
    openapiRequiredFields.add("automatic");
    openapiRequiredFields.add("automatic_membership_email_domains");
    openapiRequiredFields.add("bio_cooked");
    openapiRequiredFields.add("bio_excerpt");
    openapiRequiredFields.add("bio_raw");
    openapiRequiredFields.add("can_admin_group");
    openapiRequiredFields.add("can_see_members");
    openapiRequiredFields.add("default_notification_level");
    openapiRequiredFields.add("email_password");
    openapiRequiredFields.add("email_username");
    openapiRequiredFields.add("flair_bg_color");
    openapiRequiredFields.add("flair_color");
    openapiRequiredFields.add("flair_url");
    openapiRequiredFields.add("full_name");
    openapiRequiredFields.add("grant_trust_level");
    openapiRequiredFields.add("has_messages");
    openapiRequiredFields.add("id");
    openapiRequiredFields.add("imap_last_error");
    openapiRequiredFields.add("imap_mailbox_name");
    openapiRequiredFields.add("imap_mailboxes");
    openapiRequiredFields.add("imap_new_emails");
    openapiRequiredFields.add("imap_old_emails");
    openapiRequiredFields.add("imap_port");
    openapiRequiredFields.add("imap_server");
    openapiRequiredFields.add("imap_ssl");
    openapiRequiredFields.add("incoming_email");
    openapiRequiredFields.add("is_group_owner_display");
    openapiRequiredFields.add("is_group_user");
    openapiRequiredFields.add("members_visibility_level");
    openapiRequiredFields.add("membership_request_template");
    openapiRequiredFields.add("mentionable");
    openapiRequiredFields.add("mentionable_level");
    openapiRequiredFields.add("message_count");
    openapiRequiredFields.add("messageable");
    openapiRequiredFields.add("messageable_level");
    openapiRequiredFields.add("muted_category_ids");
    openapiRequiredFields.add("name");
    openapiRequiredFields.add("primary_group");
    openapiRequiredFields.add("public_admission");
    openapiRequiredFields.add("public_exit");
    openapiRequiredFields.add("publish_read_state");
    openapiRequiredFields.add("regular_category_ids");
    openapiRequiredFields.add("smtp_port");
    openapiRequiredFields.add("smtp_server");
    openapiRequiredFields.add("smtp_ssl");
    openapiRequiredFields.add("title");
    openapiRequiredFields.add("tracking_category_ids");
    openapiRequiredFields.add("user_count");
    openapiRequiredFields.add("visibility_level");
    openapiRequiredFields.add("watching_category_ids");
    openapiRequiredFields.add("watching_first_post_category_ids");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetGroup200ResponseGroup
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetGroup200ResponseGroup.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetGroup200ResponseGroup is not found in the empty JSON string", GetGroup200ResponseGroup.openapiRequiredFields.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : GetGroup200ResponseGroup.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the optional json data is an array if present
      if (jsonObj.get("associated_group_ids") != null && !jsonObj.get("associated_group_ids").isJsonNull() && !jsonObj.get("associated_group_ids").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `associated_group_ids` to be an array in the JSON string but got `%s`", jsonObj.get("associated_group_ids").toString()));
      }
      if ((jsonObj.get("automatic_membership_email_domains") != null && !jsonObj.get("automatic_membership_email_domains").isJsonNull()) && !jsonObj.get("automatic_membership_email_domains").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `automatic_membership_email_domains` to be a primitive type in the JSON string but got `%s`", jsonObj.get("automatic_membership_email_domains").toString()));
      }
      if ((jsonObj.get("bio_cooked") != null && !jsonObj.get("bio_cooked").isJsonNull()) && !jsonObj.get("bio_cooked").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bio_cooked` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bio_cooked").toString()));
      }
      if ((jsonObj.get("bio_excerpt") != null && !jsonObj.get("bio_excerpt").isJsonNull()) && !jsonObj.get("bio_excerpt").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bio_excerpt` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bio_excerpt").toString()));
      }
      if ((jsonObj.get("bio_raw") != null && !jsonObj.get("bio_raw").isJsonNull()) && !jsonObj.get("bio_raw").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bio_raw` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bio_raw").toString()));
      }
      if ((jsonObj.get("email_from_alias") != null && !jsonObj.get("email_from_alias").isJsonNull()) && !jsonObj.get("email_from_alias").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email_from_alias` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email_from_alias").toString()));
      }
      if ((jsonObj.get("email_password") != null && !jsonObj.get("email_password").isJsonNull()) && !jsonObj.get("email_password").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email_password` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email_password").toString()));
      }
      if ((jsonObj.get("email_username") != null && !jsonObj.get("email_username").isJsonNull()) && !jsonObj.get("email_username").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email_username` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email_username").toString()));
      }
      if ((jsonObj.get("flair_bg_color") != null && !jsonObj.get("flair_bg_color").isJsonNull()) && !jsonObj.get("flair_bg_color").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `flair_bg_color` to be a primitive type in the JSON string but got `%s`", jsonObj.get("flair_bg_color").toString()));
      }
      if ((jsonObj.get("flair_color") != null && !jsonObj.get("flair_color").isJsonNull()) && !jsonObj.get("flair_color").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `flair_color` to be a primitive type in the JSON string but got `%s`", jsonObj.get("flair_color").toString()));
      }
      if ((jsonObj.get("flair_url") != null && !jsonObj.get("flair_url").isJsonNull()) && !jsonObj.get("flair_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `flair_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("flair_url").toString()));
      }
      if ((jsonObj.get("full_name") != null && !jsonObj.get("full_name").isJsonNull()) && !jsonObj.get("full_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `full_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("full_name").toString()));
      }
      if ((jsonObj.get("grant_trust_level") != null && !jsonObj.get("grant_trust_level").isJsonNull()) && !jsonObj.get("grant_trust_level").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `grant_trust_level` to be a primitive type in the JSON string but got `%s`", jsonObj.get("grant_trust_level").toString()));
      }
      if ((jsonObj.get("imap_last_error") != null && !jsonObj.get("imap_last_error").isJsonNull()) && !jsonObj.get("imap_last_error").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `imap_last_error` to be a primitive type in the JSON string but got `%s`", jsonObj.get("imap_last_error").toString()));
      }
      if (!jsonObj.get("imap_mailbox_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `imap_mailbox_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("imap_mailbox_name").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("imap_mailboxes") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("imap_mailboxes").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `imap_mailboxes` to be an array in the JSON string but got `%s`", jsonObj.get("imap_mailboxes").toString()));
      }
      if ((jsonObj.get("imap_new_emails") != null && !jsonObj.get("imap_new_emails").isJsonNull()) && !jsonObj.get("imap_new_emails").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `imap_new_emails` to be a primitive type in the JSON string but got `%s`", jsonObj.get("imap_new_emails").toString()));
      }
      if ((jsonObj.get("imap_old_emails") != null && !jsonObj.get("imap_old_emails").isJsonNull()) && !jsonObj.get("imap_old_emails").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `imap_old_emails` to be a primitive type in the JSON string but got `%s`", jsonObj.get("imap_old_emails").toString()));
      }
      if ((jsonObj.get("imap_port") != null && !jsonObj.get("imap_port").isJsonNull()) && !jsonObj.get("imap_port").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `imap_port` to be a primitive type in the JSON string but got `%s`", jsonObj.get("imap_port").toString()));
      }
      if ((jsonObj.get("imap_server") != null && !jsonObj.get("imap_server").isJsonNull()) && !jsonObj.get("imap_server").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `imap_server` to be a primitive type in the JSON string but got `%s`", jsonObj.get("imap_server").toString()));
      }
      if ((jsonObj.get("imap_ssl") != null && !jsonObj.get("imap_ssl").isJsonNull()) && !jsonObj.get("imap_ssl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `imap_ssl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("imap_ssl").toString()));
      }
      if ((jsonObj.get("imap_updated_at") != null && !jsonObj.get("imap_updated_at").isJsonNull()) && !jsonObj.get("imap_updated_at").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `imap_updated_at` to be a primitive type in the JSON string but got `%s`", jsonObj.get("imap_updated_at").toString()));
      }
      if ((jsonObj.get("incoming_email") != null && !jsonObj.get("incoming_email").isJsonNull()) && !jsonObj.get("incoming_email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `incoming_email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("incoming_email").toString()));
      }
      if ((jsonObj.get("membership_request_template") != null && !jsonObj.get("membership_request_template").isJsonNull()) && !jsonObj.get("membership_request_template").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `membership_request_template` to be a primitive type in the JSON string but got `%s`", jsonObj.get("membership_request_template").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("muted_category_ids") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("muted_category_ids").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `muted_category_ids` to be an array in the JSON string but got `%s`", jsonObj.get("muted_category_ids").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("muted_tags") != null && !jsonObj.get("muted_tags").isJsonNull() && !jsonObj.get("muted_tags").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `muted_tags` to be an array in the JSON string but got `%s`", jsonObj.get("muted_tags").toString()));
      }
      if (!jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("regular_category_ids") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("regular_category_ids").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `regular_category_ids` to be an array in the JSON string but got `%s`", jsonObj.get("regular_category_ids").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("regular_tags") != null && !jsonObj.get("regular_tags").isJsonNull() && !jsonObj.get("regular_tags").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `regular_tags` to be an array in the JSON string but got `%s`", jsonObj.get("regular_tags").toString()));
      }
      if ((jsonObj.get("smtp_port") != null && !jsonObj.get("smtp_port").isJsonNull()) && !jsonObj.get("smtp_port").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `smtp_port` to be a primitive type in the JSON string but got `%s`", jsonObj.get("smtp_port").toString()));
      }
      if ((jsonObj.get("smtp_server") != null && !jsonObj.get("smtp_server").isJsonNull()) && !jsonObj.get("smtp_server").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `smtp_server` to be a primitive type in the JSON string but got `%s`", jsonObj.get("smtp_server").toString()));
      }
      if ((jsonObj.get("smtp_ssl") != null && !jsonObj.get("smtp_ssl").isJsonNull()) && !jsonObj.get("smtp_ssl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `smtp_ssl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("smtp_ssl").toString()));
      }
      if ((jsonObj.get("smtp_updated_at") != null && !jsonObj.get("smtp_updated_at").isJsonNull()) && !jsonObj.get("smtp_updated_at").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `smtp_updated_at` to be a primitive type in the JSON string but got `%s`", jsonObj.get("smtp_updated_at").toString()));
      }
      if ((jsonObj.get("title") != null && !jsonObj.get("title").isJsonNull()) && !jsonObj.get("title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("title").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("tracking_category_ids") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("tracking_category_ids").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `tracking_category_ids` to be an array in the JSON string but got `%s`", jsonObj.get("tracking_category_ids").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("tracking_tags") != null && !jsonObj.get("tracking_tags").isJsonNull() && !jsonObj.get("tracking_tags").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `tracking_tags` to be an array in the JSON string but got `%s`", jsonObj.get("tracking_tags").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("watching_category_ids") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("watching_category_ids").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `watching_category_ids` to be an array in the JSON string but got `%s`", jsonObj.get("watching_category_ids").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("watching_first_post_category_ids") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("watching_first_post_category_ids").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `watching_first_post_category_ids` to be an array in the JSON string but got `%s`", jsonObj.get("watching_first_post_category_ids").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("watching_first_post_tags") != null && !jsonObj.get("watching_first_post_tags").isJsonNull() && !jsonObj.get("watching_first_post_tags").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `watching_first_post_tags` to be an array in the JSON string but got `%s`", jsonObj.get("watching_first_post_tags").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("watching_tags") != null && !jsonObj.get("watching_tags").isJsonNull() && !jsonObj.get("watching_tags").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `watching_tags` to be an array in the JSON string but got `%s`", jsonObj.get("watching_tags").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetGroup200ResponseGroup.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetGroup200ResponseGroup' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetGroup200ResponseGroup> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetGroup200ResponseGroup.class));

       return (TypeAdapter<T>) new TypeAdapter<GetGroup200ResponseGroup>() {
           @Override
           public void write(JsonWriter out, GetGroup200ResponseGroup value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additional properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   JsonElement jsonElement = gson.toJsonTree(entry.getValue());
                   if (jsonElement.isJsonArray()) {
                     obj.add(entry.getKey(), jsonElement.getAsJsonArray());
                   } else {
                     obj.add(entry.getKey(), jsonElement.getAsJsonObject());
                   }
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public GetGroup200ResponseGroup read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             JsonObject jsonObj = jsonElement.getAsJsonObject();
             // store additional fields in the deserialized instance
             GetGroup200ResponseGroup instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetGroup200ResponseGroup given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetGroup200ResponseGroup
   * @throws IOException if the JSON string is invalid with respect to GetGroup200ResponseGroup
   */
  public static GetGroup200ResponseGroup fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetGroup200ResponseGroup.class);
  }

  /**
   * Convert an instance of GetGroup200ResponseGroup to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

