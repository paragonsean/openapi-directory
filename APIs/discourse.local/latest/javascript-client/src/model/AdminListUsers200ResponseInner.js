/**
 * Discourse API Documentation
 * This page contains the documentation on how to use Discourse through API calls.  > Note: For any endpoints not listed you can follow the [reverse engineer the Discourse API](https://meta.discourse.org/t/-/20576) guide to figure out how to use an API endpoint.  ### Request Content-Type  The Content-Type for POST and PUT requests can be set to `application/x-www-form-urlencoded`, `multipart/form-data`, or `application/json`.  ### Endpoint Names and Response Content-Type  Most API endpoints provide the same content as their HTML counterparts. For example the URL `/categories` serves a list of categories, the `/categories.json` API provides the same information in JSON format.  Instead of sending API requests to `/categories.json` you may also send them to `/categories` and add an `Accept: application/json` header to the request to get the JSON response. Sending requests with the `Accept` header is necessary if you want to use URLs for related endpoints returned by the API, such as pagination URLs. These URLs are returned without the `.json` prefix so you need to add the header in order to get the correct response format.  ### Authentication  Some endpoints do not require any authentication, pretty much anything else will require you to be authenticated.  To become authenticated you will need to create an API Key from the admin panel.  Once you have your API Key you can pass it in along with your API Username as an HTTP header like this:  ``` curl -X GET \"http://127.0.0.1:3000/admin/users/list/active.json\" \\ -H \"Api-Key: 714552c6148e1617aeab526d0606184b94a80ec048fc09894ff1a72b740c5f19\" \\ -H \"Api-Username: system\" ```  and this is how POST requests will look:  ``` curl -X POST \"http://127.0.0.1:3000/categories\" \\ -H \"Content-Type: multipart/form-data;\" \\ -H \"Api-Key: 714552c6148e1617aeab526d0606184b94a80ec048fc09894ff1a72b740c5f19\" \\ -H \"Api-Username: system\" \\ -F \"name=89853c20-4409-e91a-a8ea-f6cdff96aaaa\" \\ -F \"color=49d9e9\" \\ -F \"text_color=f0fcfd\" ```  ### Boolean values  If an endpoint accepts a boolean be sure to specify it as a lowercase `true` or `false` value unless noted otherwise. 
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AdminListUsers200ResponseInner model module.
 * @module model/AdminListUsers200ResponseInner
 * @version latest
 */
class AdminListUsers200ResponseInner {
    /**
     * Constructs a new <code>AdminListUsers200ResponseInner</code>.
     * @alias module:model/AdminListUsers200ResponseInner
     * @param active {Boolean} 
     * @param admin {Boolean} 
     * @param avatarTemplate {String} 
     * @param createdAt {String} 
     * @param createdAtAge {Number} 
     * @param daysVisited {Number} 
     * @param flagLevel {Number} 
     * @param id {Number} 
     * @param lastEmailedAge {Number} 
     * @param lastEmailedAt {String} 
     * @param lastSeenAge {Number} 
     * @param lastSeenAt {String} 
     * @param manualLockedTrustLevel {String} 
     * @param moderator {Boolean} 
     * @param name {String} 
     * @param postCount {Number} 
     * @param postsReadCount {Number} 
     * @param staged {Boolean} 
     * @param timeRead {Number} 
     * @param title {String} 
     * @param topicsEntered {Number} 
     * @param trustLevel {Number} 
     * @param username {String} 
     */
    constructor(active, admin, avatarTemplate, createdAt, createdAtAge, daysVisited, flagLevel, id, lastEmailedAge, lastEmailedAt, lastSeenAge, lastSeenAt, manualLockedTrustLevel, moderator, name, postCount, postsReadCount, staged, timeRead, title, topicsEntered, trustLevel, username) { 
        
        AdminListUsers200ResponseInner.initialize(this, active, admin, avatarTemplate, createdAt, createdAtAge, daysVisited, flagLevel, id, lastEmailedAge, lastEmailedAt, lastSeenAge, lastSeenAt, manualLockedTrustLevel, moderator, name, postCount, postsReadCount, staged, timeRead, title, topicsEntered, trustLevel, username);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, active, admin, avatarTemplate, createdAt, createdAtAge, daysVisited, flagLevel, id, lastEmailedAge, lastEmailedAt, lastSeenAge, lastSeenAt, manualLockedTrustLevel, moderator, name, postCount, postsReadCount, staged, timeRead, title, topicsEntered, trustLevel, username) { 
        obj['active'] = active;
        obj['admin'] = admin;
        obj['avatar_template'] = avatarTemplate;
        obj['created_at'] = createdAt;
        obj['created_at_age'] = createdAtAge;
        obj['days_visited'] = daysVisited;
        obj['flag_level'] = flagLevel;
        obj['id'] = id;
        obj['last_emailed_age'] = lastEmailedAge;
        obj['last_emailed_at'] = lastEmailedAt;
        obj['last_seen_age'] = lastSeenAge;
        obj['last_seen_at'] = lastSeenAt;
        obj['manual_locked_trust_level'] = manualLockedTrustLevel;
        obj['moderator'] = moderator;
        obj['name'] = name;
        obj['post_count'] = postCount;
        obj['posts_read_count'] = postsReadCount;
        obj['staged'] = staged;
        obj['time_read'] = timeRead;
        obj['title'] = title;
        obj['topics_entered'] = topicsEntered;
        obj['trust_level'] = trustLevel;
        obj['username'] = username;
    }

    /**
     * Constructs a <code>AdminListUsers200ResponseInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AdminListUsers200ResponseInner} obj Optional instance to populate.
     * @return {module:model/AdminListUsers200ResponseInner} The populated <code>AdminListUsers200ResponseInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AdminListUsers200ResponseInner();

            if (data.hasOwnProperty('active')) {
                obj['active'] = ApiClient.convertToType(data['active'], 'Boolean');
            }
            if (data.hasOwnProperty('admin')) {
                obj['admin'] = ApiClient.convertToType(data['admin'], 'Boolean');
            }
            if (data.hasOwnProperty('avatar_template')) {
                obj['avatar_template'] = ApiClient.convertToType(data['avatar_template'], 'String');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'String');
            }
            if (data.hasOwnProperty('created_at_age')) {
                obj['created_at_age'] = ApiClient.convertToType(data['created_at_age'], 'Number');
            }
            if (data.hasOwnProperty('days_visited')) {
                obj['days_visited'] = ApiClient.convertToType(data['days_visited'], 'Number');
            }
            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('flag_level')) {
                obj['flag_level'] = ApiClient.convertToType(data['flag_level'], 'Number');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('last_emailed_age')) {
                obj['last_emailed_age'] = ApiClient.convertToType(data['last_emailed_age'], 'Number');
            }
            if (data.hasOwnProperty('last_emailed_at')) {
                obj['last_emailed_at'] = ApiClient.convertToType(data['last_emailed_at'], 'String');
            }
            if (data.hasOwnProperty('last_seen_age')) {
                obj['last_seen_age'] = ApiClient.convertToType(data['last_seen_age'], 'Number');
            }
            if (data.hasOwnProperty('last_seen_at')) {
                obj['last_seen_at'] = ApiClient.convertToType(data['last_seen_at'], 'String');
            }
            if (data.hasOwnProperty('manual_locked_trust_level')) {
                obj['manual_locked_trust_level'] = ApiClient.convertToType(data['manual_locked_trust_level'], 'String');
            }
            if (data.hasOwnProperty('moderator')) {
                obj['moderator'] = ApiClient.convertToType(data['moderator'], 'Boolean');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('post_count')) {
                obj['post_count'] = ApiClient.convertToType(data['post_count'], 'Number');
            }
            if (data.hasOwnProperty('posts_read_count')) {
                obj['posts_read_count'] = ApiClient.convertToType(data['posts_read_count'], 'Number');
            }
            if (data.hasOwnProperty('secondary_emails')) {
                obj['secondary_emails'] = ApiClient.convertToType(data['secondary_emails'], [Object]);
            }
            if (data.hasOwnProperty('staged')) {
                obj['staged'] = ApiClient.convertToType(data['staged'], 'Boolean');
            }
            if (data.hasOwnProperty('time_read')) {
                obj['time_read'] = ApiClient.convertToType(data['time_read'], 'Number');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('topics_entered')) {
                obj['topics_entered'] = ApiClient.convertToType(data['topics_entered'], 'Number');
            }
            if (data.hasOwnProperty('trust_level')) {
                obj['trust_level'] = ApiClient.convertToType(data['trust_level'], 'Number');
            }
            if (data.hasOwnProperty('username')) {
                obj['username'] = ApiClient.convertToType(data['username'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AdminListUsers200ResponseInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AdminListUsers200ResponseInner</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AdminListUsers200ResponseInner.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['avatar_template'] && !(typeof data['avatar_template'] === 'string' || data['avatar_template'] instanceof String)) {
            throw new Error("Expected the field `avatar_template` to be a primitive type in the JSON string but got " + data['avatar_template']);
        }
        // ensure the json data is a string
        if (data['created_at'] && !(typeof data['created_at'] === 'string' || data['created_at'] instanceof String)) {
            throw new Error("Expected the field `created_at` to be a primitive type in the JSON string but got " + data['created_at']);
        }
        // ensure the json data is a string
        if (data['email'] && !(typeof data['email'] === 'string' || data['email'] instanceof String)) {
            throw new Error("Expected the field `email` to be a primitive type in the JSON string but got " + data['email']);
        }
        // ensure the json data is a string
        if (data['last_emailed_at'] && !(typeof data['last_emailed_at'] === 'string' || data['last_emailed_at'] instanceof String)) {
            throw new Error("Expected the field `last_emailed_at` to be a primitive type in the JSON string but got " + data['last_emailed_at']);
        }
        // ensure the json data is a string
        if (data['last_seen_at'] && !(typeof data['last_seen_at'] === 'string' || data['last_seen_at'] instanceof String)) {
            throw new Error("Expected the field `last_seen_at` to be a primitive type in the JSON string but got " + data['last_seen_at']);
        }
        // ensure the json data is a string
        if (data['manual_locked_trust_level'] && !(typeof data['manual_locked_trust_level'] === 'string' || data['manual_locked_trust_level'] instanceof String)) {
            throw new Error("Expected the field `manual_locked_trust_level` to be a primitive type in the JSON string but got " + data['manual_locked_trust_level']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['secondary_emails'])) {
            throw new Error("Expected the field `secondary_emails` to be an array in the JSON data but got " + data['secondary_emails']);
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }
        // ensure the json data is a string
        if (data['username'] && !(typeof data['username'] === 'string' || data['username'] instanceof String)) {
            throw new Error("Expected the field `username` to be a primitive type in the JSON string but got " + data['username']);
        }

        return true;
    }


}

AdminListUsers200ResponseInner.RequiredProperties = ["active", "admin", "avatar_template", "created_at", "created_at_age", "days_visited", "flag_level", "id", "last_emailed_age", "last_emailed_at", "last_seen_age", "last_seen_at", "manual_locked_trust_level", "moderator", "name", "post_count", "posts_read_count", "staged", "time_read", "title", "topics_entered", "trust_level", "username"];

/**
 * @member {Boolean} active
 */
AdminListUsers200ResponseInner.prototype['active'] = undefined;

/**
 * @member {Boolean} admin
 */
AdminListUsers200ResponseInner.prototype['admin'] = undefined;

/**
 * @member {String} avatar_template
 */
AdminListUsers200ResponseInner.prototype['avatar_template'] = undefined;

/**
 * @member {String} created_at
 */
AdminListUsers200ResponseInner.prototype['created_at'] = undefined;

/**
 * @member {Number} created_at_age
 */
AdminListUsers200ResponseInner.prototype['created_at_age'] = undefined;

/**
 * @member {Number} days_visited
 */
AdminListUsers200ResponseInner.prototype['days_visited'] = undefined;

/**
 * @member {String} email
 */
AdminListUsers200ResponseInner.prototype['email'] = undefined;

/**
 * @member {Number} flag_level
 */
AdminListUsers200ResponseInner.prototype['flag_level'] = undefined;

/**
 * @member {Number} id
 */
AdminListUsers200ResponseInner.prototype['id'] = undefined;

/**
 * @member {Number} last_emailed_age
 */
AdminListUsers200ResponseInner.prototype['last_emailed_age'] = undefined;

/**
 * @member {String} last_emailed_at
 */
AdminListUsers200ResponseInner.prototype['last_emailed_at'] = undefined;

/**
 * @member {Number} last_seen_age
 */
AdminListUsers200ResponseInner.prototype['last_seen_age'] = undefined;

/**
 * @member {String} last_seen_at
 */
AdminListUsers200ResponseInner.prototype['last_seen_at'] = undefined;

/**
 * @member {String} manual_locked_trust_level
 */
AdminListUsers200ResponseInner.prototype['manual_locked_trust_level'] = undefined;

/**
 * @member {Boolean} moderator
 */
AdminListUsers200ResponseInner.prototype['moderator'] = undefined;

/**
 * @member {String} name
 */
AdminListUsers200ResponseInner.prototype['name'] = undefined;

/**
 * @member {Number} post_count
 */
AdminListUsers200ResponseInner.prototype['post_count'] = undefined;

/**
 * @member {Number} posts_read_count
 */
AdminListUsers200ResponseInner.prototype['posts_read_count'] = undefined;

/**
 * @member {Array.<Object>} secondary_emails
 */
AdminListUsers200ResponseInner.prototype['secondary_emails'] = undefined;

/**
 * @member {Boolean} staged
 */
AdminListUsers200ResponseInner.prototype['staged'] = undefined;

/**
 * @member {Number} time_read
 */
AdminListUsers200ResponseInner.prototype['time_read'] = undefined;

/**
 * @member {String} title
 */
AdminListUsers200ResponseInner.prototype['title'] = undefined;

/**
 * @member {Number} topics_entered
 */
AdminListUsers200ResponseInner.prototype['topics_entered'] = undefined;

/**
 * @member {Number} trust_level
 */
AdminListUsers200ResponseInner.prototype['trust_level'] = undefined;

/**
 * @member {String} username
 */
AdminListUsers200ResponseInner.prototype['username'] = undefined;






export default AdminListUsers200ResponseInner;

