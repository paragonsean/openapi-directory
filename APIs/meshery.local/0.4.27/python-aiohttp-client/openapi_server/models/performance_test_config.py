# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.performance_test_config_client import PerformanceTestConfigClient
from openapi_server import util


class PerformanceTestConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, clients: List[PerformanceTestConfigClient]=None, duration: str=None, id: str=None, labels: Dict[str, str]=None, name: str=None, smp_version: str=None):
        """PerformanceTestConfig - a model defined in OpenAPI

        :param clients: The clients of this PerformanceTestConfig.
        :param duration: The duration of this PerformanceTestConfig.
        :param id: The id of this PerformanceTestConfig.
        :param labels: The labels of this PerformanceTestConfig.
        :param name: The name of this PerformanceTestConfig.
        :param smp_version: The smp_version of this PerformanceTestConfig.
        """
        self.openapi_types = {
            'clients': List[PerformanceTestConfigClient],
            'duration': str,
            'id': str,
            'labels': Dict[str, str],
            'name': str,
            'smp_version': str
        }

        self.attribute_map = {
            'clients': 'clients',
            'duration': 'duration',
            'id': 'id',
            'labels': 'labels',
            'name': 'name',
            'smp_version': 'smp_version'
        }

        self._clients = clients
        self._duration = duration
        self._id = id
        self._labels = labels
        self._name = name
        self._smp_version = smp_version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PerformanceTestConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PerformanceTestConfig of this PerformanceTestConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def clients(self):
        """Gets the clients of this PerformanceTestConfig.

        Single or distributed load generators

        :return: The clients of this PerformanceTestConfig.
        :rtype: List[PerformanceTestConfigClient]
        """
        return self._clients

    @clients.setter
    def clients(self, clients):
        """Sets the clients of this PerformanceTestConfig.

        Single or distributed load generators

        :param clients: The clients of this PerformanceTestConfig.
        :type clients: List[PerformanceTestConfigClient]
        """

        self._clients = clients

    @property
    def duration(self):
        """Gets the duration of this PerformanceTestConfig.

        Length of time the endpoint will be under load

        :return: The duration of this PerformanceTestConfig.
        :rtype: str
        """
        return self._duration

    @duration.setter
    def duration(self, duration):
        """Sets the duration of this PerformanceTestConfig.

        Length of time the endpoint will be under load

        :param duration: The duration of this PerformanceTestConfig.
        :type duration: str
        """

        self._duration = duration

    @property
    def id(self):
        """Gets the id of this PerformanceTestConfig.


        :return: The id of this PerformanceTestConfig.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this PerformanceTestConfig.


        :param id: The id of this PerformanceTestConfig.
        :type id: str
        """

        self._id = id

    @property
    def labels(self):
        """Gets the labels of this PerformanceTestConfig.


        :return: The labels of this PerformanceTestConfig.
        :rtype: Dict[str, str]
        """
        return self._labels

    @labels.setter
    def labels(self, labels):
        """Sets the labels of this PerformanceTestConfig.


        :param labels: The labels of this PerformanceTestConfig.
        :type labels: Dict[str, str]
        """

        self._labels = labels

    @property
    def name(self):
        """Gets the name of this PerformanceTestConfig.


        :return: The name of this PerformanceTestConfig.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this PerformanceTestConfig.


        :param name: The name of this PerformanceTestConfig.
        :type name: str
        """

        self._name = name

    @property
    def smp_version(self):
        """Gets the smp_version of this PerformanceTestConfig.

        Spec version

        :return: The smp_version of this PerformanceTestConfig.
        :rtype: str
        """
        return self._smp_version

    @smp_version.setter
    def smp_version(self, smp_version):
        """Sets the smp_version of this PerformanceTestConfig.

        Spec version

        :param smp_version: The smp_version of this PerformanceTestConfig.
        :type smp_version: str
        """

        self._smp_version = smp_version
