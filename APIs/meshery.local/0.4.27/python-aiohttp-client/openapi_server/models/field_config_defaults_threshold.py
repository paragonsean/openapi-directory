# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.field_config_defaults_threshold_steps_inner import FieldConfigDefaultsThresholdStepsInner
from openapi_server import util


class FieldConfigDefaultsThreshold(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, mode: str=None, steps: List[FieldConfigDefaultsThresholdStepsInner]=None):
        """FieldConfigDefaultsThreshold - a model defined in OpenAPI

        :param mode: The mode of this FieldConfigDefaultsThreshold.
        :param steps: The steps of this FieldConfigDefaultsThreshold.
        """
        self.openapi_types = {
            'mode': str,
            'steps': List[FieldConfigDefaultsThresholdStepsInner]
        }

        self.attribute_map = {
            'mode': 'mode',
            'steps': 'steps'
        }

        self._mode = mode
        self._steps = steps

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FieldConfigDefaultsThreshold':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FieldConfig_defaults_threshold of this FieldConfigDefaultsThreshold.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def mode(self):
        """Gets the mode of this FieldConfigDefaultsThreshold.


        :return: The mode of this FieldConfigDefaultsThreshold.
        :rtype: str
        """
        return self._mode

    @mode.setter
    def mode(self, mode):
        """Sets the mode of this FieldConfigDefaultsThreshold.


        :param mode: The mode of this FieldConfigDefaultsThreshold.
        :type mode: str
        """

        self._mode = mode

    @property
    def steps(self):
        """Gets the steps of this FieldConfigDefaultsThreshold.


        :return: The steps of this FieldConfigDefaultsThreshold.
        :rtype: List[FieldConfigDefaultsThresholdStepsInner]
        """
        return self._steps

    @steps.setter
    def steps(self, steps):
        """Sets the steps of this FieldConfigDefaultsThreshold.


        :param steps: The steps of this FieldConfigDefaultsThreshold.
        :type steps: List[FieldConfigDefaultsThresholdStepsInner]
        """

        self._steps = steps
