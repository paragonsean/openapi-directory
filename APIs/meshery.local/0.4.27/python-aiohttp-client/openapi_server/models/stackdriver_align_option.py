# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class StackdriverAlignOption(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, label: str=None, metric_kinds: List[str]=None, text: str=None, value: str=None, value_types: List[str]=None):
        """StackdriverAlignOption - a model defined in OpenAPI

        :param label: The label of this StackdriverAlignOption.
        :param metric_kinds: The metric_kinds of this StackdriverAlignOption.
        :param text: The text of this StackdriverAlignOption.
        :param value: The value of this StackdriverAlignOption.
        :param value_types: The value_types of this StackdriverAlignOption.
        """
        self.openapi_types = {
            'label': str,
            'metric_kinds': List[str],
            'text': str,
            'value': str,
            'value_types': List[str]
        }

        self.attribute_map = {
            'label': 'label',
            'metric_kinds': 'metricKinds',
            'text': 'text',
            'value': 'value',
            'value_types': 'valueTypes'
        }

        self._label = label
        self._metric_kinds = metric_kinds
        self._text = text
        self._value = value
        self._value_types = value_types

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StackdriverAlignOption':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StackdriverAlignOption of this StackdriverAlignOption.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def label(self):
        """Gets the label of this StackdriverAlignOption.


        :return: The label of this StackdriverAlignOption.
        :rtype: str
        """
        return self._label

    @label.setter
    def label(self, label):
        """Sets the label of this StackdriverAlignOption.


        :param label: The label of this StackdriverAlignOption.
        :type label: str
        """

        self._label = label

    @property
    def metric_kinds(self):
        """Gets the metric_kinds of this StackdriverAlignOption.


        :return: The metric_kinds of this StackdriverAlignOption.
        :rtype: List[str]
        """
        return self._metric_kinds

    @metric_kinds.setter
    def metric_kinds(self, metric_kinds):
        """Sets the metric_kinds of this StackdriverAlignOption.


        :param metric_kinds: The metric_kinds of this StackdriverAlignOption.
        :type metric_kinds: List[str]
        """

        self._metric_kinds = metric_kinds

    @property
    def text(self):
        """Gets the text of this StackdriverAlignOption.


        :return: The text of this StackdriverAlignOption.
        :rtype: str
        """
        return self._text

    @text.setter
    def text(self, text):
        """Sets the text of this StackdriverAlignOption.


        :param text: The text of this StackdriverAlignOption.
        :type text: str
        """

        self._text = text

    @property
    def value(self):
        """Gets the value of this StackdriverAlignOption.


        :return: The value of this StackdriverAlignOption.
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this StackdriverAlignOption.


        :param value: The value of this StackdriverAlignOption.
        :type value: str
        """

        self._value = value

    @property
    def value_types(self):
        """Gets the value_types of this StackdriverAlignOption.


        :return: The value_types of this StackdriverAlignOption.
        :rtype: List[str]
        """
        return self._value_types

    @value_types.setter
    def value_types(self, value_types):
        """Sets the value_types of this StackdriverAlignOption.


        :param value_types: The value_types of this StackdriverAlignOption.
        :type value_types: List[str]
        """

        self._value_types = value_types
