# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.grafana_board import GrafanaBoard
from openapi_server.models.panel import Panel
from openapi_server import util


class SelectedGrafanaConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, board: GrafanaBoard=None, panels: List[Panel]=None, template_vars: List[str]=None):
        """SelectedGrafanaConfig - a model defined in OpenAPI

        :param board: The board of this SelectedGrafanaConfig.
        :param panels: The panels of this SelectedGrafanaConfig.
        :param template_vars: The template_vars of this SelectedGrafanaConfig.
        """
        self.openapi_types = {
            'board': GrafanaBoard,
            'panels': List[Panel],
            'template_vars': List[str]
        }

        self.attribute_map = {
            'board': 'board',
            'panels': 'panels',
            'template_vars': 'templateVars'
        }

        self._board = board
        self._panels = panels
        self._template_vars = template_vars

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SelectedGrafanaConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SelectedGrafanaConfig of this SelectedGrafanaConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def board(self):
        """Gets the board of this SelectedGrafanaConfig.


        :return: The board of this SelectedGrafanaConfig.
        :rtype: GrafanaBoard
        """
        return self._board

    @board.setter
    def board(self, board):
        """Sets the board of this SelectedGrafanaConfig.


        :param board: The board of this SelectedGrafanaConfig.
        :type board: GrafanaBoard
        """

        self._board = board

    @property
    def panels(self):
        """Gets the panels of this SelectedGrafanaConfig.


        :return: The panels of this SelectedGrafanaConfig.
        :rtype: List[Panel]
        """
        return self._panels

    @panels.setter
    def panels(self, panels):
        """Sets the panels of this SelectedGrafanaConfig.


        :param panels: The panels of this SelectedGrafanaConfig.
        :type panels: List[Panel]
        """

        self._panels = panels

    @property
    def template_vars(self):
        """Gets the template_vars of this SelectedGrafanaConfig.


        :return: The template_vars of this SelectedGrafanaConfig.
        :rtype: List[str]
        """
        return self._template_vars

    @template_vars.setter
    def template_vars(self, template_vars):
        """Sets the template_vars of this SelectedGrafanaConfig.


        :param template_vars: The template_vars of this SelectedGrafanaConfig.
        :type template_vars: List[str]
        """

        self._template_vars = template_vars
