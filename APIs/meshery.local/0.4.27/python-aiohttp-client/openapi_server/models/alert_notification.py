# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AlertNotification(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, disable_resolve_message: bool=None, frequency: str=None, id: int=None, is_default: bool=None, name: str=None, send_reminder: bool=None, settings: object=None, type: str=None, uid: str=None):
        """AlertNotification - a model defined in OpenAPI

        :param disable_resolve_message: The disable_resolve_message of this AlertNotification.
        :param frequency: The frequency of this AlertNotification.
        :param id: The id of this AlertNotification.
        :param is_default: The is_default of this AlertNotification.
        :param name: The name of this AlertNotification.
        :param send_reminder: The send_reminder of this AlertNotification.
        :param settings: The settings of this AlertNotification.
        :param type: The type of this AlertNotification.
        :param uid: The uid of this AlertNotification.
        """
        self.openapi_types = {
            'disable_resolve_message': bool,
            'frequency': str,
            'id': int,
            'is_default': bool,
            'name': str,
            'send_reminder': bool,
            'settings': object,
            'type': str,
            'uid': str
        }

        self.attribute_map = {
            'disable_resolve_message': 'disableResolveMessage',
            'frequency': 'frequency',
            'id': 'id',
            'is_default': 'isDefault',
            'name': 'name',
            'send_reminder': 'sendReminder',
            'settings': 'settings',
            'type': 'type',
            'uid': 'uid'
        }

        self._disable_resolve_message = disable_resolve_message
        self._frequency = frequency
        self._id = id
        self._is_default = is_default
        self._name = name
        self._send_reminder = send_reminder
        self._settings = settings
        self._type = type
        self._uid = uid

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AlertNotification':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AlertNotification of this AlertNotification.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def disable_resolve_message(self):
        """Gets the disable_resolve_message of this AlertNotification.


        :return: The disable_resolve_message of this AlertNotification.
        :rtype: bool
        """
        return self._disable_resolve_message

    @disable_resolve_message.setter
    def disable_resolve_message(self, disable_resolve_message):
        """Sets the disable_resolve_message of this AlertNotification.


        :param disable_resolve_message: The disable_resolve_message of this AlertNotification.
        :type disable_resolve_message: bool
        """

        self._disable_resolve_message = disable_resolve_message

    @property
    def frequency(self):
        """Gets the frequency of this AlertNotification.


        :return: The frequency of this AlertNotification.
        :rtype: str
        """
        return self._frequency

    @frequency.setter
    def frequency(self, frequency):
        """Sets the frequency of this AlertNotification.


        :param frequency: The frequency of this AlertNotification.
        :type frequency: str
        """

        self._frequency = frequency

    @property
    def id(self):
        """Gets the id of this AlertNotification.


        :return: The id of this AlertNotification.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this AlertNotification.


        :param id: The id of this AlertNotification.
        :type id: int
        """

        self._id = id

    @property
    def is_default(self):
        """Gets the is_default of this AlertNotification.


        :return: The is_default of this AlertNotification.
        :rtype: bool
        """
        return self._is_default

    @is_default.setter
    def is_default(self, is_default):
        """Sets the is_default of this AlertNotification.


        :param is_default: The is_default of this AlertNotification.
        :type is_default: bool
        """

        self._is_default = is_default

    @property
    def name(self):
        """Gets the name of this AlertNotification.


        :return: The name of this AlertNotification.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this AlertNotification.


        :param name: The name of this AlertNotification.
        :type name: str
        """

        self._name = name

    @property
    def send_reminder(self):
        """Gets the send_reminder of this AlertNotification.


        :return: The send_reminder of this AlertNotification.
        :rtype: bool
        """
        return self._send_reminder

    @send_reminder.setter
    def send_reminder(self, send_reminder):
        """Sets the send_reminder of this AlertNotification.


        :param send_reminder: The send_reminder of this AlertNotification.
        :type send_reminder: bool
        """

        self._send_reminder = send_reminder

    @property
    def settings(self):
        """Gets the settings of this AlertNotification.


        :return: The settings of this AlertNotification.
        :rtype: object
        """
        return self._settings

    @settings.setter
    def settings(self, settings):
        """Sets the settings of this AlertNotification.


        :param settings: The settings of this AlertNotification.
        :type settings: object
        """

        self._settings = settings

    @property
    def type(self):
        """Gets the type of this AlertNotification.


        :return: The type of this AlertNotification.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this AlertNotification.


        :param type: The type of this AlertNotification.
        :type type: str
        """

        self._type = type

    @property
    def uid(self):
        """Gets the uid of this AlertNotification.


        :return: The uid of this AlertNotification.
        :rtype: str
        """
        return self._uid

    @uid.setter
    def uid(self, uid):
        """Sets the uid of this AlertNotification.


        :param uid: The uid of this AlertNotification.
        :type uid: str
        """

        self._uid = uid
