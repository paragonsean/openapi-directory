# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Sort(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, col: int=None, desc: bool=None):
        """Sort - a model defined in OpenAPI

        :param col: The col of this Sort.
        :param desc: The desc of this Sort.
        """
        self.openapi_types = {
            'col': int,
            'desc': bool
        }

        self.attribute_map = {
            'col': 'col',
            'desc': 'desc'
        }

        self._col = col
        self._desc = desc

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Sort':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Sort of this Sort.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def col(self):
        """Gets the col of this Sort.


        :return: The col of this Sort.
        :rtype: int
        """
        return self._col

    @col.setter
    def col(self, col):
        """Sets the col of this Sort.


        :param col: The col of this Sort.
        :type col: int
        """

        self._col = col

    @property
    def desc(self):
        """Gets the desc of this Sort.


        :return: The desc of this Sort.
        :rtype: bool
        """
        return self._desc

    @desc.setter
    def desc(self, desc):
        """Sets the desc of this Sort.


        :param desc: The desc of this Sort.
        :type desc: bool
        """

        self._desc = desc
