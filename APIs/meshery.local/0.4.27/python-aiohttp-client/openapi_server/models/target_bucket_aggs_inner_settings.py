# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TargetBucketAggsInnerSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, interval: str=None, min_doc_count: object=None, order: str=None, order_by: str=None, size: str=None):
        """TargetBucketAggsInnerSettings - a model defined in OpenAPI

        :param interval: The interval of this TargetBucketAggsInnerSettings.
        :param min_doc_count: The min_doc_count of this TargetBucketAggsInnerSettings.
        :param order: The order of this TargetBucketAggsInnerSettings.
        :param order_by: The order_by of this TargetBucketAggsInnerSettings.
        :param size: The size of this TargetBucketAggsInnerSettings.
        """
        self.openapi_types = {
            'interval': str,
            'min_doc_count': object,
            'order': str,
            'order_by': str,
            'size': str
        }

        self.attribute_map = {
            'interval': 'interval',
            'min_doc_count': 'min_doc_count',
            'order': 'order',
            'order_by': 'orderBy',
            'size': 'size'
        }

        self._interval = interval
        self._min_doc_count = min_doc_count
        self._order = order
        self._order_by = order_by
        self._size = size

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TargetBucketAggsInnerSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Target_bucketAggs_inner_settings of this TargetBucketAggsInnerSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def interval(self):
        """Gets the interval of this TargetBucketAggsInnerSettings.


        :return: The interval of this TargetBucketAggsInnerSettings.
        :rtype: str
        """
        return self._interval

    @interval.setter
    def interval(self, interval):
        """Sets the interval of this TargetBucketAggsInnerSettings.


        :param interval: The interval of this TargetBucketAggsInnerSettings.
        :type interval: str
        """

        self._interval = interval

    @property
    def min_doc_count(self):
        """Gets the min_doc_count of this TargetBucketAggsInnerSettings.


        :return: The min_doc_count of this TargetBucketAggsInnerSettings.
        :rtype: object
        """
        return self._min_doc_count

    @min_doc_count.setter
    def min_doc_count(self, min_doc_count):
        """Sets the min_doc_count of this TargetBucketAggsInnerSettings.


        :param min_doc_count: The min_doc_count of this TargetBucketAggsInnerSettings.
        :type min_doc_count: object
        """

        self._min_doc_count = min_doc_count

    @property
    def order(self):
        """Gets the order of this TargetBucketAggsInnerSettings.


        :return: The order of this TargetBucketAggsInnerSettings.
        :rtype: str
        """
        return self._order

    @order.setter
    def order(self, order):
        """Sets the order of this TargetBucketAggsInnerSettings.


        :param order: The order of this TargetBucketAggsInnerSettings.
        :type order: str
        """

        self._order = order

    @property
    def order_by(self):
        """Gets the order_by of this TargetBucketAggsInnerSettings.


        :return: The order_by of this TargetBucketAggsInnerSettings.
        :rtype: str
        """
        return self._order_by

    @order_by.setter
    def order_by(self, order_by):
        """Sets the order_by of this TargetBucketAggsInnerSettings.


        :param order_by: The order_by of this TargetBucketAggsInnerSettings.
        :type order_by: str
        """

        self._order_by = order_by

    @property
    def size(self):
        """Gets the size of this TargetBucketAggsInnerSettings.


        :return: The size of this TargetBucketAggsInnerSettings.
        :rtype: str
        """
        return self._size

    @size.setter
    def size(self, size):
        """Sets the size of this TargetBucketAggsInnerSettings.


        :param size: The size of this TargetBucketAggsInnerSettings.
        :type size: str
        """

        self._size = size
