# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.graph_ql_extension import GraphQLExtension
from openapi_server.models.navigator_extension import NavigatorExtension
from openapi_server.models.user_prefs_extension import UserPrefsExtension
from openapi_server import util


class Extensions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, graphql: List[GraphQLExtension]=None, navigator: List[NavigatorExtension]=None, user_prefs: List[UserPrefsExtension]=None):
        """Extensions - a model defined in OpenAPI

        :param graphql: The graphql of this Extensions.
        :param navigator: The navigator of this Extensions.
        :param user_prefs: The user_prefs of this Extensions.
        """
        self.openapi_types = {
            'graphql': List[GraphQLExtension],
            'navigator': List[NavigatorExtension],
            'user_prefs': List[UserPrefsExtension]
        }

        self.attribute_map = {
            'graphql': 'graphql',
            'navigator': 'navigator',
            'user_prefs': 'user_prefs'
        }

        self._graphql = graphql
        self._navigator = navigator
        self._user_prefs = user_prefs

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Extensions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Extensions of this Extensions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def graphql(self):
        """Gets the graphql of this Extensions.

        GraphQLExtensions is a collection of GraphQLExtension endpoints

        :return: The graphql of this Extensions.
        :rtype: List[GraphQLExtension]
        """
        return self._graphql

    @graphql.setter
    def graphql(self, graphql):
        """Sets the graphql of this Extensions.

        GraphQLExtensions is a collection of GraphQLExtension endpoints

        :param graphql: The graphql of this Extensions.
        :type graphql: List[GraphQLExtension]
        """

        self._graphql = graphql

    @property
    def navigator(self):
        """Gets the navigator of this Extensions.

        NavigatorExtensions is a collection of NavigatorExtension

        :return: The navigator of this Extensions.
        :rtype: List[NavigatorExtension]
        """
        return self._navigator

    @navigator.setter
    def navigator(self, navigator):
        """Sets the navigator of this Extensions.

        NavigatorExtensions is a collection of NavigatorExtension

        :param navigator: The navigator of this Extensions.
        :type navigator: List[NavigatorExtension]
        """

        self._navigator = navigator

    @property
    def user_prefs(self):
        """Gets the user_prefs of this Extensions.

        UserPrefsExtensions is a collection of UserPrefsExtension

        :return: The user_prefs of this Extensions.
        :rtype: List[UserPrefsExtension]
        """
        return self._user_prefs

    @user_prefs.setter
    def user_prefs(self, user_prefs):
        """Sets the user_prefs of this Extensions.

        UserPrefsExtensions is a collection of UserPrefsExtension

        :param user_prefs: The user_prefs of this Extensions.
        :type user_prefs: List[UserPrefsExtension]
        """

        self._user_prefs = user_prefs
