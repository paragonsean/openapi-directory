# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class IntString(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, valid: bool=None, value: int=None):
        """IntString - a model defined in OpenAPI

        :param valid: The valid of this IntString.
        :param value: The value of this IntString.
        """
        self.openapi_types = {
            'valid': bool,
            'value': int
        }

        self.attribute_map = {
            'valid': 'Valid',
            'value': 'Value'
        }

        self._valid = valid
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IntString':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IntString of this IntString.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def valid(self):
        """Gets the valid of this IntString.


        :return: The valid of this IntString.
        :rtype: bool
        """
        return self._valid

    @valid.setter
    def valid(self, valid):
        """Sets the valid of this IntString.


        :param valid: The valid of this IntString.
        :type valid: bool
        """

        self._valid = valid

    @property
    def value(self):
        """Gets the value of this IntString.


        :return: The value of this IntString.
        :rtype: int
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this IntString.


        :param value: The value of this IntString.
        :type value: int
        """

        self._value = value
