# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.supported_operation import SupportedOperation
from openapi_server import util


class Adapter(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, adapter_location: str=None, git_commit_sha: str=None, name: str=None, ops: List[SupportedOperation]=None, version: str=None):
        """Adapter - a model defined in OpenAPI

        :param adapter_location: The adapter_location of this Adapter.
        :param git_commit_sha: The git_commit_sha of this Adapter.
        :param name: The name of this Adapter.
        :param ops: The ops of this Adapter.
        :param version: The version of this Adapter.
        """
        self.openapi_types = {
            'adapter_location': str,
            'git_commit_sha': str,
            'name': str,
            'ops': List[SupportedOperation],
            'version': str
        }

        self.attribute_map = {
            'adapter_location': 'adapter_location',
            'git_commit_sha': 'git_commit_sha',
            'name': 'name',
            'ops': 'ops',
            'version': 'version'
        }

        self._adapter_location = adapter_location
        self._git_commit_sha = git_commit_sha
        self._name = name
        self._ops = ops
        self._version = version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Adapter':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Adapter of this Adapter.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def adapter_location(self):
        """Gets the adapter_location of this Adapter.


        :return: The adapter_location of this Adapter.
        :rtype: str
        """
        return self._adapter_location

    @adapter_location.setter
    def adapter_location(self, adapter_location):
        """Sets the adapter_location of this Adapter.


        :param adapter_location: The adapter_location of this Adapter.
        :type adapter_location: str
        """

        self._adapter_location = adapter_location

    @property
    def git_commit_sha(self):
        """Gets the git_commit_sha of this Adapter.


        :return: The git_commit_sha of this Adapter.
        :rtype: str
        """
        return self._git_commit_sha

    @git_commit_sha.setter
    def git_commit_sha(self, git_commit_sha):
        """Sets the git_commit_sha of this Adapter.


        :param git_commit_sha: The git_commit_sha of this Adapter.
        :type git_commit_sha: str
        """

        self._git_commit_sha = git_commit_sha

    @property
    def name(self):
        """Gets the name of this Adapter.


        :return: The name of this Adapter.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Adapter.


        :param name: The name of this Adapter.
        :type name: str
        """

        self._name = name

    @property
    def ops(self):
        """Gets the ops of this Adapter.


        :return: The ops of this Adapter.
        :rtype: List[SupportedOperation]
        """
        return self._ops

    @ops.setter
    def ops(self, ops):
        """Sets the ops of this Adapter.


        :param ops: The ops of this Adapter.
        :type ops: List[SupportedOperation]
        """

        self._ops = ops

    @property
    def version(self):
        """Gets the version of this Adapter.


        :return: The version of this Adapter.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this Adapter.


        :param version: The version of this Adapter.
        :type version: str
        """

        self._version = version
