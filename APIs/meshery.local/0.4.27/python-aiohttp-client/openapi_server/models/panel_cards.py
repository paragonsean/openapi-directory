# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PanelCards(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, card_padding: float=None, card_round: float=None):
        """PanelCards - a model defined in OpenAPI

        :param card_padding: The card_padding of this PanelCards.
        :param card_round: The card_round of this PanelCards.
        """
        self.openapi_types = {
            'card_padding': float,
            'card_round': float
        }

        self.attribute_map = {
            'card_padding': 'cardPadding',
            'card_round': 'cardRound'
        }

        self._card_padding = card_padding
        self._card_round = card_round

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PanelCards':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Panel_cards of this PanelCards.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def card_padding(self):
        """Gets the card_padding of this PanelCards.


        :return: The card_padding of this PanelCards.
        :rtype: float
        """
        return self._card_padding

    @card_padding.setter
    def card_padding(self, card_padding):
        """Sets the card_padding of this PanelCards.


        :param card_padding: The card_padding of this PanelCards.
        :type card_padding: float
        """

        self._card_padding = card_padding

    @property
    def card_round(self):
        """Gets the card_round of this PanelCards.


        :return: The card_round of this PanelCards.
        :rtype: float
        """
        return self._card_round

    @card_round.setter
    def card_round(self, card_round):
        """Sets the card_round of this PanelCards.


        :param card_round: The card_round of this PanelCards.
        :type card_round: float
        """

        self._card_round = card_round
