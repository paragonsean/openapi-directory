# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.load_balancer_status import LoadBalancerStatus
from openapi_server import util


class ServiceStatus(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, load_balancer: LoadBalancerStatus=None):
        """ServiceStatus - a model defined in OpenAPI

        :param load_balancer: The load_balancer of this ServiceStatus.
        """
        self.openapi_types = {
            'load_balancer': LoadBalancerStatus
        }

        self.attribute_map = {
            'load_balancer': 'loadBalancer'
        }

        self._load_balancer = load_balancer

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ServiceStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ServiceStatus of this ServiceStatus.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def load_balancer(self):
        """Gets the load_balancer of this ServiceStatus.


        :return: The load_balancer of this ServiceStatus.
        :rtype: LoadBalancerStatus
        """
        return self._load_balancer

    @load_balancer.setter
    def load_balancer(self, load_balancer):
        """Sets the load_balancer of this ServiceStatus.


        :param load_balancer: The load_balancer of this ServiceStatus.
        :type load_balancer: LoadBalancerStatus
        """

        self._load_balancer = load_balancer
