# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.stackdriver_align_option import StackdriverAlignOption
from openapi_server import util


class StackdriverAlignOptions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, expanded: bool=None, label: str=None, options: List[StackdriverAlignOption]=None):
        """StackdriverAlignOptions - a model defined in OpenAPI

        :param expanded: The expanded of this StackdriverAlignOptions.
        :param label: The label of this StackdriverAlignOptions.
        :param options: The options of this StackdriverAlignOptions.
        """
        self.openapi_types = {
            'expanded': bool,
            'label': str,
            'options': List[StackdriverAlignOption]
        }

        self.attribute_map = {
            'expanded': 'expanded',
            'label': 'label',
            'options': 'options'
        }

        self._expanded = expanded
        self._label = label
        self._options = options

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StackdriverAlignOptions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StackdriverAlignOptions of this StackdriverAlignOptions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def expanded(self):
        """Gets the expanded of this StackdriverAlignOptions.


        :return: The expanded of this StackdriverAlignOptions.
        :rtype: bool
        """
        return self._expanded

    @expanded.setter
    def expanded(self, expanded):
        """Sets the expanded of this StackdriverAlignOptions.


        :param expanded: The expanded of this StackdriverAlignOptions.
        :type expanded: bool
        """

        self._expanded = expanded

    @property
    def label(self):
        """Gets the label of this StackdriverAlignOptions.


        :return: The label of this StackdriverAlignOptions.
        :rtype: str
        """
        return self._label

    @label.setter
    def label(self, label):
        """Sets the label of this StackdriverAlignOptions.


        :param label: The label of this StackdriverAlignOptions.
        :type label: str
        """

        self._label = label

    @property
    def options(self):
        """Gets the options of this StackdriverAlignOptions.


        :return: The options of this StackdriverAlignOptions.
        :rtype: List[StackdriverAlignOption]
        """
        return self._options

    @options.setter
    def options(self, options):
        """Sets the options of this StackdriverAlignOptions.


        :param options: The options of this StackdriverAlignOptions.
        :type options: List[StackdriverAlignOption]
        """

        self._options = options
