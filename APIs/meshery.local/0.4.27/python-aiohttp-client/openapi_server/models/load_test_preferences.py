# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class LoadTestPreferences(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, c: int=None, gen: str=None, qps: int=None, t: str=None):
        """LoadTestPreferences - a model defined in OpenAPI

        :param c: The c of this LoadTestPreferences.
        :param gen: The gen of this LoadTestPreferences.
        :param qps: The qps of this LoadTestPreferences.
        :param t: The t of this LoadTestPreferences.
        """
        self.openapi_types = {
            'c': int,
            'gen': str,
            'qps': int,
            't': str
        }

        self.attribute_map = {
            'c': 'c',
            'gen': 'gen',
            'qps': 'qps',
            't': 't'
        }

        self._c = c
        self._gen = gen
        self._qps = qps
        self._t = t

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LoadTestPreferences':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LoadTestPreferences of this LoadTestPreferences.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def c(self):
        """Gets the c of this LoadTestPreferences.


        :return: The c of this LoadTestPreferences.
        :rtype: int
        """
        return self._c

    @c.setter
    def c(self, c):
        """Sets the c of this LoadTestPreferences.


        :param c: The c of this LoadTestPreferences.
        :type c: int
        """

        self._c = c

    @property
    def gen(self):
        """Gets the gen of this LoadTestPreferences.


        :return: The gen of this LoadTestPreferences.
        :rtype: str
        """
        return self._gen

    @gen.setter
    def gen(self, gen):
        """Sets the gen of this LoadTestPreferences.


        :param gen: The gen of this LoadTestPreferences.
        :type gen: str
        """

        self._gen = gen

    @property
    def qps(self):
        """Gets the qps of this LoadTestPreferences.


        :return: The qps of this LoadTestPreferences.
        :rtype: int
        """
        return self._qps

    @qps.setter
    def qps(self, qps):
        """Sets the qps of this LoadTestPreferences.


        :param qps: The qps of this LoadTestPreferences.
        :type qps: int
        """

        self._qps = qps

    @property
    def t(self):
        """Gets the t of this LoadTestPreferences.


        :return: The t of this LoadTestPreferences.
        :rtype: str
        """
        return self._t

    @t.setter
    def t(self, t):
        """Sets the t of this LoadTestPreferences.


        :param t: The t of this LoadTestPreferences.
        :type t: str
        """

        self._t = t
