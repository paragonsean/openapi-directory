# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Version(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, build: str=None, commitsha: str=None, latest: str=None, outdated: bool=None, release_channel: str=None):
        """Version - a model defined in OpenAPI

        :param build: The build of this Version.
        :param commitsha: The commitsha of this Version.
        :param latest: The latest of this Version.
        :param outdated: The outdated of this Version.
        :param release_channel: The release_channel of this Version.
        """
        self.openapi_types = {
            'build': str,
            'commitsha': str,
            'latest': str,
            'outdated': bool,
            'release_channel': str
        }

        self.attribute_map = {
            'build': 'build',
            'commitsha': 'commitsha',
            'latest': 'latest',
            'outdated': 'outdated',
            'release_channel': 'release_channel'
        }

        self._build = build
        self._commitsha = commitsha
        self._latest = latest
        self._outdated = outdated
        self._release_channel = release_channel

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Version':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Version of this Version.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def build(self):
        """Gets the build of this Version.


        :return: The build of this Version.
        :rtype: str
        """
        return self._build

    @build.setter
    def build(self, build):
        """Sets the build of this Version.


        :param build: The build of this Version.
        :type build: str
        """

        self._build = build

    @property
    def commitsha(self):
        """Gets the commitsha of this Version.


        :return: The commitsha of this Version.
        :rtype: str
        """
        return self._commitsha

    @commitsha.setter
    def commitsha(self, commitsha):
        """Sets the commitsha of this Version.


        :param commitsha: The commitsha of this Version.
        :type commitsha: str
        """

        self._commitsha = commitsha

    @property
    def latest(self):
        """Gets the latest of this Version.


        :return: The latest of this Version.
        :rtype: str
        """
        return self._latest

    @latest.setter
    def latest(self, latest):
        """Sets the latest of this Version.


        :param latest: The latest of this Version.
        :type latest: str
        """

        self._latest = latest

    @property
    def outdated(self):
        """Gets the outdated of this Version.


        :return: The outdated of this Version.
        :rtype: bool
        """
        return self._outdated

    @outdated.setter
    def outdated(self, outdated):
        """Sets the outdated of this Version.


        :param outdated: The outdated of this Version.
        :type outdated: bool
        """

        self._outdated = outdated

    @property
    def release_channel(self):
        """Gets the release_channel of this Version.


        :return: The release_channel of this Version.
        :rtype: str
        """
        return self._release_channel

    @release_channel.setter
    def release_channel(self, release_channel):
        """Sets the release_channel of this Version.


        :param release_channel: The release_channel of this Version.
        :type release_channel: str
        """

        self._release_channel = release_channel
