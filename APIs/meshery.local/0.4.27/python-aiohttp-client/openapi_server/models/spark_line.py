# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SparkLine(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, fill_color: str=None, full: bool=None, line_color: str=None, show: bool=None, ymax: float=None, ymin: float=None):
        """SparkLine - a model defined in OpenAPI

        :param fill_color: The fill_color of this SparkLine.
        :param full: The full of this SparkLine.
        :param line_color: The line_color of this SparkLine.
        :param show: The show of this SparkLine.
        :param ymax: The ymax of this SparkLine.
        :param ymin: The ymin of this SparkLine.
        """
        self.openapi_types = {
            'fill_color': str,
            'full': bool,
            'line_color': str,
            'show': bool,
            'ymax': float,
            'ymin': float
        }

        self.attribute_map = {
            'fill_color': 'fillColor',
            'full': 'full',
            'line_color': 'lineColor',
            'show': 'show',
            'ymax': 'ymax',
            'ymin': 'ymin'
        }

        self._fill_color = fill_color
        self._full = full
        self._line_color = line_color
        self._show = show
        self._ymax = ymax
        self._ymin = ymin

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SparkLine':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SparkLine of this SparkLine.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def fill_color(self):
        """Gets the fill_color of this SparkLine.


        :return: The fill_color of this SparkLine.
        :rtype: str
        """
        return self._fill_color

    @fill_color.setter
    def fill_color(self, fill_color):
        """Sets the fill_color of this SparkLine.


        :param fill_color: The fill_color of this SparkLine.
        :type fill_color: str
        """

        self._fill_color = fill_color

    @property
    def full(self):
        """Gets the full of this SparkLine.


        :return: The full of this SparkLine.
        :rtype: bool
        """
        return self._full

    @full.setter
    def full(self, full):
        """Sets the full of this SparkLine.


        :param full: The full of this SparkLine.
        :type full: bool
        """

        self._full = full

    @property
    def line_color(self):
        """Gets the line_color of this SparkLine.


        :return: The line_color of this SparkLine.
        :rtype: str
        """
        return self._line_color

    @line_color.setter
    def line_color(self, line_color):
        """Sets the line_color of this SparkLine.


        :param line_color: The line_color of this SparkLine.
        :type line_color: str
        """

        self._line_color = line_color

    @property
    def show(self):
        """Gets the show of this SparkLine.


        :return: The show of this SparkLine.
        :rtype: bool
        """
        return self._show

    @show.setter
    def show(self, show):
        """Sets the show of this SparkLine.


        :param show: The show of this SparkLine.
        :type show: bool
        """

        self._show = show

    @property
    def ymax(self):
        """Gets the ymax of this SparkLine.


        :return: The ymax of this SparkLine.
        :rtype: float
        """
        return self._ymax

    @ymax.setter
    def ymax(self, ymax):
        """Sets the ymax of this SparkLine.


        :param ymax: The ymax of this SparkLine.
        :type ymax: float
        """

        self._ymax = ymax

    @property
    def ymin(self):
        """Gets the ymin of this SparkLine.


        :return: The ymin of this SparkLine.
        :rtype: float
        """
        return self._ymin

    @ymin.setter
    def ymin(self, ymin):
        """Sets the ymin of this SparkLine.


        :param ymin: The ymin of this SparkLine.
        :type ymin: float
        """

        self._ymin = ymin
