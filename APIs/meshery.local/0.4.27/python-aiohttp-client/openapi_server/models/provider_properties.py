# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.capability import Capability
from openapi_server.models.extensions import Extensions
from openapi_server import util


class ProviderProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, capabilities: List[Capability]=None, extensions: Extensions=None, package_url: str=None, package_version: str=None, provider_description: List[str]=None, provider_name: str=None, provider_type: str=None, provider_url: str=None):
        """ProviderProperties - a model defined in OpenAPI

        :param capabilities: The capabilities of this ProviderProperties.
        :param extensions: The extensions of this ProviderProperties.
        :param package_url: The package_url of this ProviderProperties.
        :param package_version: The package_version of this ProviderProperties.
        :param provider_description: The provider_description of this ProviderProperties.
        :param provider_name: The provider_name of this ProviderProperties.
        :param provider_type: The provider_type of this ProviderProperties.
        :param provider_url: The provider_url of this ProviderProperties.
        """
        self.openapi_types = {
            'capabilities': List[Capability],
            'extensions': Extensions,
            'package_url': str,
            'package_version': str,
            'provider_description': List[str],
            'provider_name': str,
            'provider_type': str,
            'provider_url': str
        }

        self.attribute_map = {
            'capabilities': 'capabilities',
            'extensions': 'extensions',
            'package_url': 'package_url',
            'package_version': 'package_version',
            'provider_description': 'provider_description',
            'provider_name': 'provider_name',
            'provider_type': 'provider_type',
            'provider_url': 'provider_url'
        }

        self._capabilities = capabilities
        self._extensions = extensions
        self._package_url = package_url
        self._package_version = package_version
        self._provider_description = provider_description
        self._provider_name = provider_name
        self._provider_type = provider_type
        self._provider_url = provider_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProviderProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProviderProperties of this ProviderProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def capabilities(self):
        """Gets the capabilities of this ProviderProperties.

        Capabilities is the collection of capability

        :return: The capabilities of this ProviderProperties.
        :rtype: List[Capability]
        """
        return self._capabilities

    @capabilities.setter
    def capabilities(self, capabilities):
        """Sets the capabilities of this ProviderProperties.

        Capabilities is the collection of capability

        :param capabilities: The capabilities of this ProviderProperties.
        :type capabilities: List[Capability]
        """

        self._capabilities = capabilities

    @property
    def extensions(self):
        """Gets the extensions of this ProviderProperties.


        :return: The extensions of this ProviderProperties.
        :rtype: Extensions
        """
        return self._extensions

    @extensions.setter
    def extensions(self, extensions):
        """Sets the extensions of this ProviderProperties.


        :param extensions: The extensions of this ProviderProperties.
        :type extensions: Extensions
        """

        self._extensions = extensions

    @property
    def package_url(self):
        """Gets the package_url of this ProviderProperties.


        :return: The package_url of this ProviderProperties.
        :rtype: str
        """
        return self._package_url

    @package_url.setter
    def package_url(self, package_url):
        """Sets the package_url of this ProviderProperties.


        :param package_url: The package_url of this ProviderProperties.
        :type package_url: str
        """

        self._package_url = package_url

    @property
    def package_version(self):
        """Gets the package_version of this ProviderProperties.


        :return: The package_version of this ProviderProperties.
        :rtype: str
        """
        return self._package_version

    @package_version.setter
    def package_version(self, package_version):
        """Sets the package_version of this ProviderProperties.


        :param package_version: The package_version of this ProviderProperties.
        :type package_version: str
        """

        self._package_version = package_version

    @property
    def provider_description(self):
        """Gets the provider_description of this ProviderProperties.


        :return: The provider_description of this ProviderProperties.
        :rtype: List[str]
        """
        return self._provider_description

    @provider_description.setter
    def provider_description(self, provider_description):
        """Sets the provider_description of this ProviderProperties.


        :param provider_description: The provider_description of this ProviderProperties.
        :type provider_description: List[str]
        """

        self._provider_description = provider_description

    @property
    def provider_name(self):
        """Gets the provider_name of this ProviderProperties.


        :return: The provider_name of this ProviderProperties.
        :rtype: str
        """
        return self._provider_name

    @provider_name.setter
    def provider_name(self, provider_name):
        """Sets the provider_name of this ProviderProperties.


        :param provider_name: The provider_name of this ProviderProperties.
        :type provider_name: str
        """

        self._provider_name = provider_name

    @property
    def provider_type(self):
        """Gets the provider_type of this ProviderProperties.

        ProviderType - for representing provider types

        :return: The provider_type of this ProviderProperties.
        :rtype: str
        """
        return self._provider_type

    @provider_type.setter
    def provider_type(self, provider_type):
        """Sets the provider_type of this ProviderProperties.

        ProviderType - for representing provider types

        :param provider_type: The provider_type of this ProviderProperties.
        :type provider_type: str
        """

        self._provider_type = provider_type

    @property
    def provider_url(self):
        """Gets the provider_url of this ProviderProperties.


        :return: The provider_url of this ProviderProperties.
        :rtype: str
        """
        return self._provider_url

    @provider_url.setter
    def provider_url(self, provider_url):
        """Sets the provider_url of this ProviderProperties.


        :param provider_url: The provider_url of this ProviderProperties.
        :type provider_url: str
        """

        self._provider_url = provider_url
