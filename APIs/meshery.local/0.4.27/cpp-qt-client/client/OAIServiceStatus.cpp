/**
 * Meshery API.
 * the purpose of this application is to provide an application that is using plain go code to define an API  This should demonstrate all the possible comment annotations that are available to turn go code into a fully compliant swagger 2.0 spec
 *
 * The version of the OpenAPI document: 0.4.27
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIServiceStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIServiceStatus::OAIServiceStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIServiceStatus::OAIServiceStatus() {
    this->initializeModel();
}

OAIServiceStatus::~OAIServiceStatus() {}

void OAIServiceStatus::initializeModel() {

    m_load_balancer_isSet = false;
    m_load_balancer_isValid = false;
}

void OAIServiceStatus::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIServiceStatus::fromJsonObject(QJsonObject json) {

    m_load_balancer_isValid = ::OpenAPI::fromJsonValue(m_load_balancer, json[QString("loadBalancer")]);
    m_load_balancer_isSet = !json[QString("loadBalancer")].isNull() && m_load_balancer_isValid;
}

QString OAIServiceStatus::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIServiceStatus::asJsonObject() const {
    QJsonObject obj;
    if (m_load_balancer.isSet()) {
        obj.insert(QString("loadBalancer"), ::OpenAPI::toJsonValue(m_load_balancer));
    }
    return obj;
}

OAILoadBalancerStatus OAIServiceStatus::getLoadBalancer() const {
    return m_load_balancer;
}
void OAIServiceStatus::setLoadBalancer(const OAILoadBalancerStatus &load_balancer) {
    m_load_balancer = load_balancer;
    m_load_balancer_isSet = true;
}

bool OAIServiceStatus::is_load_balancer_Set() const{
    return m_load_balancer_isSet;
}

bool OAIServiceStatus::is_load_balancer_Valid() const{
    return m_load_balancer_isValid;
}

bool OAIServiceStatus::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_load_balancer.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIServiceStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
