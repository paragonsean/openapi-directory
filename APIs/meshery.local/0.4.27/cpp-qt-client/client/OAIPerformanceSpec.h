/**
 * Meshery API.
 * the purpose of this application is to provide an application that is using plain go code to define an API  This should demonstrate all the possible comment annotations that are available to turn go code into a fully compliant swagger 2.0 spec
 *
 * The version of the OpenAPI document: 0.4.27
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPerformanceSpec.h
 *
 * PerformanceSpec - represents SMP, see here https://github.com/layer5io/service-mesh-performance-specification
 */

#ifndef OAIPerformanceSpec_H
#define OAIPerformanceSpec_H

#include <QJsonObject>

#include "OAILatenciesMs.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAILatenciesMs;

class OAIPerformanceSpec : public OAIObject {
public:
    OAIPerformanceSpec();
    OAIPerformanceSpec(QString json);
    ~OAIPerformanceSpec() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getActualQps() const;
    void setActualQps(const double &actual_qps);
    bool is_actual_qps_Set() const;
    bool is_actual_qps_Valid() const;

    QString getDetailsUri() const;
    void setDetailsUri(const QString &details_uri);
    bool is_details_uri_Set() const;
    bool is_details_uri_Valid() const;

    QDateTime getEndTime() const;
    void setEndTime(const QDateTime &end_time);
    bool is_end_time_Set() const;
    bool is_end_time_Valid() const;

    QString getEnvId() const;
    void setEnvId(const QString &env_id);
    bool is_env_id_Set() const;
    bool is_env_id_Valid() const;

    OAILatenciesMs getLatencies() const;
    void setLatencies(const OAILatenciesMs &latencies);
    bool is_latencies_Set() const;
    bool is_latencies_Valid() const;

    QString getMeshConfigId() const;
    void setMeshConfigId(const QString &mesh_config_id);
    bool is_mesh_config_id_Set() const;
    bool is_mesh_config_id_Valid() const;

    QString getSmpVersion() const;
    void setSmpVersion(const QString &smp_version);
    bool is_smp_version_Set() const;
    bool is_smp_version_Valid() const;

    QDateTime getStartTime() const;
    void setStartTime(const QDateTime &start_time);
    bool is_start_time_Set() const;
    bool is_start_time_Valid() const;

    QString getTestId() const;
    void setTestId(const QString &test_id);
    bool is_test_id_Set() const;
    bool is_test_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_actual_qps;
    bool m_actual_qps_isSet;
    bool m_actual_qps_isValid;

    QString m_details_uri;
    bool m_details_uri_isSet;
    bool m_details_uri_isValid;

    QDateTime m_end_time;
    bool m_end_time_isSet;
    bool m_end_time_isValid;

    QString m_env_id;
    bool m_env_id_isSet;
    bool m_env_id_isValid;

    OAILatenciesMs m_latencies;
    bool m_latencies_isSet;
    bool m_latencies_isValid;

    QString m_mesh_config_id;
    bool m_mesh_config_id_isSet;
    bool m_mesh_config_id_isValid;

    QString m_smp_version;
    bool m_smp_version_isSet;
    bool m_smp_version_isValid;

    QDateTime m_start_time;
    bool m_start_time_isSet;
    bool m_start_time_isValid;

    QString m_test_id;
    bool m_test_id_isSet;
    bool m_test_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPerformanceSpec)

#endif // OAIPerformanceSpec_H
