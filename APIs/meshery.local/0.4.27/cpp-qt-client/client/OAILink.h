/**
 * Meshery API.
 * the purpose of this application is to provide an application that is using plain go code to define an API  This should demonstrate all the possible comment annotations that are available to turn go code into a fully compliant swagger 2.0 spec
 *
 * The version of the OpenAPI document: 0.4.27
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILink.h
 *
 * 
 */

#ifndef OAILink_H
#define OAILink_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAILink : public OAIObject {
public:
    OAILink();
    OAILink(QString json);
    ~OAILink() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAsDropdown() const;
    void setAsDropdown(const bool &as_dropdown);
    bool is_as_dropdown_Set() const;
    bool is_as_dropdown_Valid() const;

    QString getDashUri() const;
    void setDashUri(const QString &dash_uri);
    bool is_dash_uri_Set() const;
    bool is_dash_uri_Valid() const;

    QString getDashboard() const;
    void setDashboard(const QString &dashboard);
    bool is_dashboard_Set() const;
    bool is_dashboard_Valid() const;

    QString getIcon() const;
    void setIcon(const QString &icon);
    bool is_icon_Set() const;
    bool is_icon_Valid() const;

    bool isIncludeVars() const;
    void setIncludeVars(const bool &include_vars);
    bool is_include_vars_Set() const;
    bool is_include_vars_Valid() const;

    bool isKeepTime() const;
    void setKeepTime(const bool &keep_time);
    bool is_keep_time_Set() const;
    bool is_keep_time_Valid() const;

    QString getParams() const;
    void setParams(const QString &params);
    bool is_params_Set() const;
    bool is_params_Valid() const;

    QList<QString> getTags() const;
    void setTags(const QList<QString> &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    bool isTargetBlank() const;
    void setTargetBlank(const bool &target_blank);
    bool is_target_blank_Set() const;
    bool is_target_blank_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    QString getTooltip() const;
    void setTooltip(const QString &tooltip);
    bool is_tooltip_Set() const;
    bool is_tooltip_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_as_dropdown;
    bool m_as_dropdown_isSet;
    bool m_as_dropdown_isValid;

    QString m_dash_uri;
    bool m_dash_uri_isSet;
    bool m_dash_uri_isValid;

    QString m_dashboard;
    bool m_dashboard_isSet;
    bool m_dashboard_isValid;

    QString m_icon;
    bool m_icon_isSet;
    bool m_icon_isValid;

    bool m_include_vars;
    bool m_include_vars_isSet;
    bool m_include_vars_isValid;

    bool m_keep_time;
    bool m_keep_time_isSet;
    bool m_keep_time_isValid;

    QString m_params;
    bool m_params_isSet;
    bool m_params_isValid;

    QList<QString> m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    bool m_target_blank;
    bool m_target_blank_isSet;
    bool m_target_blank_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;

    QString m_tooltip;
    bool m_tooltip_isSet;
    bool m_tooltip_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILink)

#endif // OAILink_H
