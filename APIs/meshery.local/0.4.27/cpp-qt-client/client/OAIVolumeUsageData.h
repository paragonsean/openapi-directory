/**
 * Meshery API.
 * the purpose of this application is to provide an application that is using plain go code to define an API  This should demonstrate all the possible comment annotations that are available to turn go code into a fully compliant swagger 2.0 spec
 *
 * The version of the OpenAPI document: 0.4.27
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVolumeUsageData.h
 *
 * VolumeUsageData Usage details about the volume. This information is used by the &#x60;GET /system/df&#x60; endpoint, and omitted in other endpoints.
 */

#ifndef OAIVolumeUsageData_H
#define OAIVolumeUsageData_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIVolumeUsageData : public OAIObject {
public:
    OAIVolumeUsageData();
    OAIVolumeUsageData(QString json);
    ~OAIVolumeUsageData() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint64 getRefCount() const;
    void setRefCount(const qint64 &ref_count);
    bool is_ref_count_Set() const;
    bool is_ref_count_Valid() const;

    qint64 getSize() const;
    void setSize(const qint64 &size);
    bool is_size_Set() const;
    bool is_size_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint64 m_ref_count;
    bool m_ref_count_isSet;
    bool m_ref_count_isValid;

    qint64 m_size;
    bool m_size_isSet;
    bool m_size_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVolumeUsageData)

#endif // OAIVolumeUsageData_H
