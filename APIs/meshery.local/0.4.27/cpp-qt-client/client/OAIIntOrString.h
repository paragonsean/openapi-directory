/**
 * Meshery API.
 * the purpose of this application is to provide an application that is using plain go code to define an API  This should demonstrate all the possible comment annotations that are available to turn go code into a fully compliant swagger 2.0 spec
 *
 * The version of the OpenAPI document: 0.4.27
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIIntOrString.h
 *
 * +protobuf&#x3D;true +protobuf.options.(gogoproto.goproto_stringer)&#x3D;false +k8s:openapi-gen&#x3D;true
 */

#ifndef OAIIntOrString_H
#define OAIIntOrString_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIIntOrString : public OAIObject {
public:
    OAIIntOrString();
    OAIIntOrString(QString json);
    ~OAIIntOrString() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getIntVal() const;
    void setIntVal(const qint32 &int_val);
    bool is_int_val_Set() const;
    bool is_int_val_Valid() const;

    QString getStrVal() const;
    void setStrVal(const QString &str_val);
    bool is_str_val_Set() const;
    bool is_str_val_Valid() const;

    qint64 getType() const;
    void setType(const qint64 &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_int_val;
    bool m_int_val_isSet;
    bool m_int_val_isValid;

    QString m_str_val;
    bool m_str_val_isSet;
    bool m_str_val_isValid;

    qint64 m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIIntOrString)

#endif // OAIIntOrString_H
