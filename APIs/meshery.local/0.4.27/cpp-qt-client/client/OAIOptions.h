/**
 * Meshery API.
 * the purpose of this application is to provide an application that is using plain go code to define an API  This should demonstrate all the possible comment annotations that are available to turn go code into a fully compliant swagger 2.0 spec
 *
 * The version of the OpenAPI document: 0.4.27
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOptions.h
 *
 * 
 */

#ifndef OAIOptions_H
#define OAIOptions_H

#include <QJsonObject>

#include "OAIOptions_reduceOptions.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIOptions_reduceOptions;

class OAIOptions : public OAIObject {
public:
    OAIOptions();
    OAIOptions(QString json);
    ~OAIOptions() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getColorMode() const;
    void setColorMode(const QString &color_mode);
    bool is_color_mode_Set() const;
    bool is_color_mode_Valid() const;

    QString getContent() const;
    void setContent(const QString &content);
    bool is_content_Set() const;
    bool is_content_Valid() const;

    QString getDisplayMode() const;
    void setDisplayMode(const QString &display_mode);
    bool is_display_mode_Set() const;
    bool is_display_mode_Valid() const;

    QString getGraphMode() const;
    void setGraphMode(const QString &graph_mode);
    bool is_graph_mode_Set() const;
    bool is_graph_mode_Valid() const;

    QString getJustifyMode() const;
    void setJustifyMode(const QString &justify_mode);
    bool is_justify_mode_Set() const;
    bool is_justify_mode_Valid() const;

    QString getMode() const;
    void setMode(const QString &mode);
    bool is_mode_Set() const;
    bool is_mode_Valid() const;

    QString getOrientation() const;
    void setOrientation(const QString &orientation);
    bool is_orientation_Set() const;
    bool is_orientation_Valid() const;

    OAIOptions_reduceOptions getReduceOptions() const;
    void setReduceOptions(const OAIOptions_reduceOptions &reduce_options);
    bool is_reduce_options_Set() const;
    bool is_reduce_options_Valid() const;

    QString getTextMode() const;
    void setTextMode(const QString &text_mode);
    bool is_text_mode_Set() const;
    bool is_text_mode_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_color_mode;
    bool m_color_mode_isSet;
    bool m_color_mode_isValid;

    QString m_content;
    bool m_content_isSet;
    bool m_content_isValid;

    QString m_display_mode;
    bool m_display_mode_isSet;
    bool m_display_mode_isValid;

    QString m_graph_mode;
    bool m_graph_mode_isSet;
    bool m_graph_mode_isValid;

    QString m_justify_mode;
    bool m_justify_mode_isSet;
    bool m_justify_mode_isValid;

    QString m_mode;
    bool m_mode_isSet;
    bool m_mode_isValid;

    QString m_orientation;
    bool m_orientation_isSet;
    bool m_orientation_isValid;

    OAIOptions_reduceOptions m_reduce_options;
    bool m_reduce_options_isSet;
    bool m_reduce_options_isValid;

    QString m_text_mode;
    bool m_text_mode_isSet;
    bool m_text_mode_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIOptions)

#endif // OAIOptions_H
