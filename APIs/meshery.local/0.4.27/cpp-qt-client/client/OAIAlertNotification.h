/**
 * Meshery API.
 * the purpose of this application is to provide an application that is using plain go code to define an API  This should demonstrate all the possible comment annotations that are available to turn go code into a fully compliant swagger 2.0 spec
 *
 * The version of the OpenAPI document: 0.4.27
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAlertNotification.h
 *
 * AlertNotification as described in the doc https://grafana.com/docs/grafana/latest/http_api/alerting_notification_channels/
 */

#ifndef OAIAlertNotification_H
#define OAIAlertNotification_H

#include <QJsonObject>

#include "OAIObject.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAlertNotification : public OAIObject {
public:
    OAIAlertNotification();
    OAIAlertNotification(QString json);
    ~OAIAlertNotification() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isDisableResolveMessage() const;
    void setDisableResolveMessage(const bool &disable_resolve_message);
    bool is_disable_resolve_message_Set() const;
    bool is_disable_resolve_message_Valid() const;

    QString getFrequency() const;
    void setFrequency(const QString &frequency);
    bool is_frequency_Set() const;
    bool is_frequency_Valid() const;

    qint64 getId() const;
    void setId(const qint64 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    bool isIsDefault() const;
    void setIsDefault(const bool &is_default);
    bool is_is_default_Set() const;
    bool is_is_default_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    bool isSendReminder() const;
    void setSendReminder(const bool &send_reminder);
    bool is_send_reminder_Set() const;
    bool is_send_reminder_Valid() const;

    OAIObject getSettings() const;
    void setSettings(const OAIObject &settings);
    bool is_settings_Set() const;
    bool is_settings_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getUid() const;
    void setUid(const QString &uid);
    bool is_uid_Set() const;
    bool is_uid_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_disable_resolve_message;
    bool m_disable_resolve_message_isSet;
    bool m_disable_resolve_message_isValid;

    QString m_frequency;
    bool m_frequency_isSet;
    bool m_frequency_isValid;

    qint64 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    bool m_is_default;
    bool m_is_default_isSet;
    bool m_is_default_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    bool m_send_reminder;
    bool m_send_reminder_isSet;
    bool m_send_reminder_isValid;

    OAIObject m_settings;
    bool m_settings_isSet;
    bool m_settings_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_uid;
    bool m_uid_isSet;
    bool m_uid_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAlertNotification)

#endif // OAIAlertNotification_H
