/**
 * Meshery API.
 * the purpose of this application is to provide an application that is using plain go code to define an API  This should demonstrate all the possible comment annotations that are available to turn go code into a fully compliant swagger 2.0 spec
 *
 * The version of the OpenAPI document: 0.4.27
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISparkLine.h
 *
 * for a stat
 */

#ifndef OAISparkLine_H
#define OAISparkLine_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISparkLine : public OAIObject {
public:
    OAISparkLine();
    OAISparkLine(QString json);
    ~OAISparkLine() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getFillColor() const;
    void setFillColor(const QString &fill_color);
    bool is_fill_color_Set() const;
    bool is_fill_color_Valid() const;

    bool isFull() const;
    void setFull(const bool &full);
    bool is_full_Set() const;
    bool is_full_Valid() const;

    QString getLineColor() const;
    void setLineColor(const QString &line_color);
    bool is_line_color_Set() const;
    bool is_line_color_Valid() const;

    bool isShow() const;
    void setShow(const bool &show);
    bool is_show_Set() const;
    bool is_show_Valid() const;

    double getYmax() const;
    void setYmax(const double &ymax);
    bool is_ymax_Set() const;
    bool is_ymax_Valid() const;

    double getYmin() const;
    void setYmin(const double &ymin);
    bool is_ymin_Set() const;
    bool is_ymin_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_fill_color;
    bool m_fill_color_isSet;
    bool m_fill_color_isValid;

    bool m_full;
    bool m_full_isSet;
    bool m_full_isValid;

    QString m_line_color;
    bool m_line_color_isSet;
    bool m_line_color_isValid;

    bool m_show;
    bool m_show_isSet;
    bool m_show_isValid;

    double m_ymax;
    bool m_ymax_isSet;
    bool m_ymax_isValid;

    double m_ymin;
    bool m_ymin_isSet;
    bool m_ymin_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISparkLine)

#endif // OAISparkLine_H
