/**
 * Meshery API.
 * the purpose of this application is to provide an application that is using plain go code to define an API  This should demonstrate all the possible comment annotations that are available to turn go code into a fully compliant swagger 2.0 spec
 *
 * The version of the OpenAPI document: 0.4.27
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUserPrefsExtension.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUserPrefsExtension::OAIUserPrefsExtension(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUserPrefsExtension::OAIUserPrefsExtension() {
    this->initializeModel();
}

OAIUserPrefsExtension::~OAIUserPrefsExtension() {}

void OAIUserPrefsExtension::initializeModel() {

    m_component_isSet = false;
    m_component_isValid = false;
}

void OAIUserPrefsExtension::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUserPrefsExtension::fromJsonObject(QJsonObject json) {

    m_component_isValid = ::OpenAPI::fromJsonValue(m_component, json[QString("component")]);
    m_component_isSet = !json[QString("component")].isNull() && m_component_isValid;
}

QString OAIUserPrefsExtension::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUserPrefsExtension::asJsonObject() const {
    QJsonObject obj;
    if (m_component_isSet) {
        obj.insert(QString("component"), ::OpenAPI::toJsonValue(m_component));
    }
    return obj;
}

QString OAIUserPrefsExtension::getComponent() const {
    return m_component;
}
void OAIUserPrefsExtension::setComponent(const QString &component) {
    m_component = component;
    m_component_isSet = true;
}

bool OAIUserPrefsExtension::is_component_Set() const{
    return m_component_isSet;
}

bool OAIUserPrefsExtension::is_component_Valid() const{
    return m_component_isValid;
}

bool OAIUserPrefsExtension::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_component_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUserPrefsExtension::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
