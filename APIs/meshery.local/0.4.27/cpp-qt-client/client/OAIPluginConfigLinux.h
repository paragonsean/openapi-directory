/**
 * Meshery API.
 * the purpose of this application is to provide an application that is using plain go code to define an API  This should demonstrate all the possible comment annotations that are available to turn go code into a fully compliant swagger 2.0 spec
 *
 * The version of the OpenAPI document: 0.4.27
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPluginConfigLinux.h
 *
 * PluginConfigLinux plugin config linux
 */

#ifndef OAIPluginConfigLinux_H
#define OAIPluginConfigLinux_H

#include <QJsonObject>

#include "OAIPluginDevice.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPluginDevice;

class OAIPluginConfigLinux : public OAIObject {
public:
    OAIPluginConfigLinux();
    OAIPluginConfigLinux(QString json);
    ~OAIPluginConfigLinux() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAllowAllDevices() const;
    void setAllowAllDevices(const bool &allow_all_devices);
    bool is_allow_all_devices_Set() const;
    bool is_allow_all_devices_Valid() const;

    QList<QString> getCapabilities() const;
    void setCapabilities(const QList<QString> &capabilities);
    bool is_capabilities_Set() const;
    bool is_capabilities_Valid() const;

    QList<OAIPluginDevice> getDevices() const;
    void setDevices(const QList<OAIPluginDevice> &devices);
    bool is_devices_Set() const;
    bool is_devices_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_allow_all_devices;
    bool m_allow_all_devices_isSet;
    bool m_allow_all_devices_isValid;

    QList<QString> m_capabilities;
    bool m_capabilities_isSet;
    bool m_capabilities_isValid;

    QList<OAIPluginDevice> m_devices;
    bool m_devices_isSet;
    bool m_devices_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPluginConfigLinux)

#endif // OAIPluginConfigLinux_H
