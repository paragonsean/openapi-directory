/**
 * Meshery API.
 * the purpose of this application is to provide an application that is using plain go code to define an API  This should demonstrate all the possible comment annotations that are available to turn go code into a fully compliant swagger 2.0 spec
 *
 * The version of the OpenAPI document: 0.4.27
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILoadBalancerIngress.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILoadBalancerIngress::OAILoadBalancerIngress(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILoadBalancerIngress::OAILoadBalancerIngress() {
    this->initializeModel();
}

OAILoadBalancerIngress::~OAILoadBalancerIngress() {}

void OAILoadBalancerIngress::initializeModel() {

    m_hostname_isSet = false;
    m_hostname_isValid = false;

    m_ip_isSet = false;
    m_ip_isValid = false;
}

void OAILoadBalancerIngress::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILoadBalancerIngress::fromJsonObject(QJsonObject json) {

    m_hostname_isValid = ::OpenAPI::fromJsonValue(m_hostname, json[QString("hostname")]);
    m_hostname_isSet = !json[QString("hostname")].isNull() && m_hostname_isValid;

    m_ip_isValid = ::OpenAPI::fromJsonValue(m_ip, json[QString("ip")]);
    m_ip_isSet = !json[QString("ip")].isNull() && m_ip_isValid;
}

QString OAILoadBalancerIngress::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILoadBalancerIngress::asJsonObject() const {
    QJsonObject obj;
    if (m_hostname_isSet) {
        obj.insert(QString("hostname"), ::OpenAPI::toJsonValue(m_hostname));
    }
    if (m_ip_isSet) {
        obj.insert(QString("ip"), ::OpenAPI::toJsonValue(m_ip));
    }
    return obj;
}

QString OAILoadBalancerIngress::getHostname() const {
    return m_hostname;
}
void OAILoadBalancerIngress::setHostname(const QString &hostname) {
    m_hostname = hostname;
    m_hostname_isSet = true;
}

bool OAILoadBalancerIngress::is_hostname_Set() const{
    return m_hostname_isSet;
}

bool OAILoadBalancerIngress::is_hostname_Valid() const{
    return m_hostname_isValid;
}

QString OAILoadBalancerIngress::getIp() const {
    return m_ip;
}
void OAILoadBalancerIngress::setIp(const QString &ip) {
    m_ip = ip;
    m_ip_isSet = true;
}

bool OAILoadBalancerIngress::is_ip_Set() const{
    return m_ip_isSet;
}

bool OAILoadBalancerIngress::is_ip_Valid() const{
    return m_ip_isValid;
}

bool OAILoadBalancerIngress::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_hostname_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ip_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILoadBalancerIngress::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
