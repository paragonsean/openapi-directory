/**
 * Meshery API.
 * the purpose of this application is to provide an application that is using plain go code to define an API  This should demonstrate all the possible comment annotations that are available to turn go code into a fully compliant swagger 2.0 spec
 *
 * The version of the OpenAPI document: 0.4.27
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGraphDriverData.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGraphDriverData::OAIGraphDriverData(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGraphDriverData::OAIGraphDriverData() {
    this->initializeModel();
}

OAIGraphDriverData::~OAIGraphDriverData() {}

void OAIGraphDriverData::initializeModel() {

    m_data_isSet = false;
    m_data_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;
}

void OAIGraphDriverData::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGraphDriverData::fromJsonObject(QJsonObject json) {

    m_data_isValid = ::OpenAPI::fromJsonValue(m_data, json[QString("Data")]);
    m_data_isSet = !json[QString("Data")].isNull() && m_data_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;
}

QString OAIGraphDriverData::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGraphDriverData::asJsonObject() const {
    QJsonObject obj;
    if (m_data.size() > 0) {
        obj.insert(QString("Data"), ::OpenAPI::toJsonValue(m_data));
    }
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    return obj;
}

QMap<QString, QString> OAIGraphDriverData::getData() const {
    return m_data;
}
void OAIGraphDriverData::setData(const QMap<QString, QString> &data) {
    m_data = data;
    m_data_isSet = true;
}

bool OAIGraphDriverData::is_data_Set() const{
    return m_data_isSet;
}

bool OAIGraphDriverData::is_data_Valid() const{
    return m_data_isValid;
}

QString OAIGraphDriverData::getName() const {
    return m_name;
}
void OAIGraphDriverData::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGraphDriverData::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGraphDriverData::is_name_Valid() const{
    return m_name_isValid;
}

bool OAIGraphDriverData::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_data.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGraphDriverData::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_data_isValid && m_name_isValid && true;
}

} // namespace OpenAPI
