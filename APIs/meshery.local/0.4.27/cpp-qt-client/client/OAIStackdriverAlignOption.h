/**
 * Meshery API.
 * the purpose of this application is to provide an application that is using plain go code to define an API  This should demonstrate all the possible comment annotations that are available to turn go code into a fully compliant swagger 2.0 spec
 *
 * The version of the OpenAPI document: 0.4.27
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIStackdriverAlignOption.h
 *
 * StackdriverAlignOption defines a single alignment option shown in Grafana during query configuration.
 */

#ifndef OAIStackdriverAlignOption_H
#define OAIStackdriverAlignOption_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIStackdriverAlignOption : public OAIObject {
public:
    OAIStackdriverAlignOption();
    OAIStackdriverAlignOption(QString json);
    ~OAIStackdriverAlignOption() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getLabel() const;
    void setLabel(const QString &label);
    bool is_label_Set() const;
    bool is_label_Valid() const;

    QList<QString> getMetricKinds() const;
    void setMetricKinds(const QList<QString> &metric_kinds);
    bool is_metric_kinds_Set() const;
    bool is_metric_kinds_Valid() const;

    QString getText() const;
    void setText(const QString &text);
    bool is_text_Set() const;
    bool is_text_Valid() const;

    QString getValue() const;
    void setValue(const QString &value);
    bool is_value_Set() const;
    bool is_value_Valid() const;

    QList<QString> getValueTypes() const;
    void setValueTypes(const QList<QString> &value_types);
    bool is_value_types_Set() const;
    bool is_value_types_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_label;
    bool m_label_isSet;
    bool m_label_isValid;

    QList<QString> m_metric_kinds;
    bool m_metric_kinds_isSet;
    bool m_metric_kinds_isValid;

    QString m_text;
    bool m_text_isSet;
    bool m_text_isValid;

    QString m_value;
    bool m_value_isSet;
    bool m_value_isValid;

    QList<QString> m_value_types;
    bool m_value_types_isSet;
    bool m_value_types_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIStackdriverAlignOption)

#endif // OAIStackdriverAlignOption_H
