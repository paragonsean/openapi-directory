/**
 * Meshery API.
 * the purpose of this application is to provide an application that is using plain go code to define an API  This should demonstrate all the possible comment annotations that are available to turn go code into a fully compliant swagger 2.0 spec
 *
 * The version of the OpenAPI document: 0.4.27
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISort.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISort::OAISort(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISort::OAISort() {
    this->initializeModel();
}

OAISort::~OAISort() {}

void OAISort::initializeModel() {

    m_col_isSet = false;
    m_col_isValid = false;

    m_desc_isSet = false;
    m_desc_isValid = false;
}

void OAISort::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISort::fromJsonObject(QJsonObject json) {

    m_col_isValid = ::OpenAPI::fromJsonValue(m_col, json[QString("col")]);
    m_col_isSet = !json[QString("col")].isNull() && m_col_isValid;

    m_desc_isValid = ::OpenAPI::fromJsonValue(m_desc, json[QString("desc")]);
    m_desc_isSet = !json[QString("desc")].isNull() && m_desc_isValid;
}

QString OAISort::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISort::asJsonObject() const {
    QJsonObject obj;
    if (m_col_isSet) {
        obj.insert(QString("col"), ::OpenAPI::toJsonValue(m_col));
    }
    if (m_desc_isSet) {
        obj.insert(QString("desc"), ::OpenAPI::toJsonValue(m_desc));
    }
    return obj;
}

qint64 OAISort::getCol() const {
    return m_col;
}
void OAISort::setCol(const qint64 &col) {
    m_col = col;
    m_col_isSet = true;
}

bool OAISort::is_col_Set() const{
    return m_col_isSet;
}

bool OAISort::is_col_Valid() const{
    return m_col_isValid;
}

bool OAISort::isDesc() const {
    return m_desc;
}
void OAISort::setDesc(const bool &desc) {
    m_desc = desc;
    m_desc_isSet = true;
}

bool OAISort::is_desc_Set() const{
    return m_desc_isSet;
}

bool OAISort::is_desc_Valid() const{
    return m_desc_isValid;
}

bool OAISort::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_col_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_desc_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISort::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
