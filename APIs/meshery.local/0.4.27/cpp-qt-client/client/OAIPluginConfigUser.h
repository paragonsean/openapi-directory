/**
 * Meshery API.
 * the purpose of this application is to provide an application that is using plain go code to define an API  This should demonstrate all the possible comment annotations that are available to turn go code into a fully compliant swagger 2.0 spec
 *
 * The version of the OpenAPI document: 0.4.27
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPluginConfigUser.h
 *
 * PluginConfigUser plugin config user
 */

#ifndef OAIPluginConfigUser_H
#define OAIPluginConfigUser_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPluginConfigUser : public OAIObject {
public:
    OAIPluginConfigUser();
    OAIPluginConfigUser(QString json);
    ~OAIPluginConfigUser() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getGid() const;
    void setGid(const qint32 &gid);
    bool is_gid_Set() const;
    bool is_gid_Valid() const;

    qint32 getUid() const;
    void setUid(const qint32 &uid);
    bool is_uid_Set() const;
    bool is_uid_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_gid;
    bool m_gid_isSet;
    bool m_gid_isValid;

    qint32 m_uid;
    bool m_uid_isSet;
    bool m_uid_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPluginConfigUser)

#endif // OAIPluginConfigUser_H
