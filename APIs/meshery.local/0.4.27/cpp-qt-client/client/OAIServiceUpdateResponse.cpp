/**
 * Meshery API.
 * the purpose of this application is to provide an application that is using plain go code to define an API  This should demonstrate all the possible comment annotations that are available to turn go code into a fully compliant swagger 2.0 spec
 *
 * The version of the OpenAPI document: 0.4.27
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIServiceUpdateResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIServiceUpdateResponse::OAIServiceUpdateResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIServiceUpdateResponse::OAIServiceUpdateResponse() {
    this->initializeModel();
}

OAIServiceUpdateResponse::~OAIServiceUpdateResponse() {}

void OAIServiceUpdateResponse::initializeModel() {

    m_warnings_isSet = false;
    m_warnings_isValid = false;
}

void OAIServiceUpdateResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIServiceUpdateResponse::fromJsonObject(QJsonObject json) {

    m_warnings_isValid = ::OpenAPI::fromJsonValue(m_warnings, json[QString("Warnings")]);
    m_warnings_isSet = !json[QString("Warnings")].isNull() && m_warnings_isValid;
}

QString OAIServiceUpdateResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIServiceUpdateResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_warnings.size() > 0) {
        obj.insert(QString("Warnings"), ::OpenAPI::toJsonValue(m_warnings));
    }
    return obj;
}

QList<QString> OAIServiceUpdateResponse::getWarnings() const {
    return m_warnings;
}
void OAIServiceUpdateResponse::setWarnings(const QList<QString> &warnings) {
    m_warnings = warnings;
    m_warnings_isSet = true;
}

bool OAIServiceUpdateResponse::is_warnings_Set() const{
    return m_warnings_isSet;
}

bool OAIServiceUpdateResponse::is_warnings_Valid() const{
    return m_warnings_isValid;
}

bool OAIServiceUpdateResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_warnings.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIServiceUpdateResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
