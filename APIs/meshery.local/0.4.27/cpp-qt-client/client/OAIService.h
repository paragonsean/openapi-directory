/**
 * Meshery API.
 * the purpose of this application is to provide an application that is using plain go code to define an API  This should demonstrate all the possible comment annotations that are available to turn go code into a fully compliant swagger 2.0 spec
 *
 * The version of the OpenAPI document: 0.4.27
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIService.h
 *
 * Service is a named abstraction of software service (for example, mysql) consisting of local port (for example 3306) that the proxy listens on, and the selector that determines which pods will answer requests sent through the proxy.
 */

#ifndef OAIService_H
#define OAIService_H

#include <QJsonObject>

#include "OAIManagedFieldsEntry.h"
#include "OAIObject.h"
#include "OAIOwnerReference.h"
#include "OAIServiceSpec.h"
#include "OAIServiceStatus.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIManagedFieldsEntry;
class OAIOwnerReference;
class OAIServiceSpec;
class OAIServiceStatus;

class OAIService : public OAIObject {
public:
    OAIService();
    OAIService(QString json);
    ~OAIService() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QMap<QString, QString> getAnnotations() const;
    void setAnnotations(const QMap<QString, QString> &annotations);
    bool is_annotations_Set() const;
    bool is_annotations_Valid() const;

    QString getApiVersion() const;
    void setApiVersion(const QString &api_version);
    bool is_api_version_Set() const;
    bool is_api_version_Valid() const;

    QString getClusterName() const;
    void setClusterName(const QString &cluster_name);
    bool is_cluster_name_Set() const;
    bool is_cluster_name_Valid() const;

    OAIObject getCreationTimestamp() const;
    void setCreationTimestamp(const OAIObject &creation_timestamp);
    bool is_creation_timestamp_Set() const;
    bool is_creation_timestamp_Valid() const;

    qint64 getDeletionGracePeriodSeconds() const;
    void setDeletionGracePeriodSeconds(const qint64 &deletion_grace_period_seconds);
    bool is_deletion_grace_period_seconds_Set() const;
    bool is_deletion_grace_period_seconds_Valid() const;

    OAIObject getDeletionTimestamp() const;
    void setDeletionTimestamp(const OAIObject &deletion_timestamp);
    bool is_deletion_timestamp_Set() const;
    bool is_deletion_timestamp_Valid() const;

    QList<QString> getFinalizers() const;
    void setFinalizers(const QList<QString> &finalizers);
    bool is_finalizers_Set() const;
    bool is_finalizers_Valid() const;

    QString getGenerateName() const;
    void setGenerateName(const QString &generate_name);
    bool is_generate_name_Set() const;
    bool is_generate_name_Valid() const;

    qint64 getGeneration() const;
    void setGeneration(const qint64 &generation);
    bool is_generation_Set() const;
    bool is_generation_Valid() const;

    QString getKind() const;
    void setKind(const QString &kind);
    bool is_kind_Set() const;
    bool is_kind_Valid() const;

    QMap<QString, QString> getLabels() const;
    void setLabels(const QMap<QString, QString> &labels);
    bool is_labels_Set() const;
    bool is_labels_Valid() const;

    QList<OAIManagedFieldsEntry> getManagedFields() const;
    void setManagedFields(const QList<OAIManagedFieldsEntry> &managed_fields);
    bool is_managed_fields_Set() const;
    bool is_managed_fields_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getRNamespace() const;
    void setRNamespace(const QString &r_namespace);
    bool is_r_namespace_Set() const;
    bool is_r_namespace_Valid() const;

    QList<OAIOwnerReference> getOwnerReferences() const;
    void setOwnerReferences(const QList<OAIOwnerReference> &owner_references);
    bool is_owner_references_Set() const;
    bool is_owner_references_Valid() const;

    QString getResourceVersion() const;
    void setResourceVersion(const QString &resource_version);
    bool is_resource_version_Set() const;
    bool is_resource_version_Valid() const;

    QString getSelfLink() const;
    void setSelfLink(const QString &self_link);
    bool is_self_link_Set() const;
    bool is_self_link_Valid() const;

    OAIServiceSpec getSpec() const;
    void setSpec(const OAIServiceSpec &spec);
    bool is_spec_Set() const;
    bool is_spec_Valid() const;

    OAIServiceStatus getStatus() const;
    void setStatus(const OAIServiceStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getUid() const;
    void setUid(const QString &uid);
    bool is_uid_Set() const;
    bool is_uid_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QMap<QString, QString> m_annotations;
    bool m_annotations_isSet;
    bool m_annotations_isValid;

    QString m_api_version;
    bool m_api_version_isSet;
    bool m_api_version_isValid;

    QString m_cluster_name;
    bool m_cluster_name_isSet;
    bool m_cluster_name_isValid;

    OAIObject m_creation_timestamp;
    bool m_creation_timestamp_isSet;
    bool m_creation_timestamp_isValid;

    qint64 m_deletion_grace_period_seconds;
    bool m_deletion_grace_period_seconds_isSet;
    bool m_deletion_grace_period_seconds_isValid;

    OAIObject m_deletion_timestamp;
    bool m_deletion_timestamp_isSet;
    bool m_deletion_timestamp_isValid;

    QList<QString> m_finalizers;
    bool m_finalizers_isSet;
    bool m_finalizers_isValid;

    QString m_generate_name;
    bool m_generate_name_isSet;
    bool m_generate_name_isValid;

    qint64 m_generation;
    bool m_generation_isSet;
    bool m_generation_isValid;

    QString m_kind;
    bool m_kind_isSet;
    bool m_kind_isValid;

    QMap<QString, QString> m_labels;
    bool m_labels_isSet;
    bool m_labels_isValid;

    QList<OAIManagedFieldsEntry> m_managed_fields;
    bool m_managed_fields_isSet;
    bool m_managed_fields_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_r_namespace;
    bool m_r_namespace_isSet;
    bool m_r_namespace_isValid;

    QList<OAIOwnerReference> m_owner_references;
    bool m_owner_references_isSet;
    bool m_owner_references_isValid;

    QString m_resource_version;
    bool m_resource_version_isSet;
    bool m_resource_version_isValid;

    QString m_self_link;
    bool m_self_link_isSet;
    bool m_self_link_isValid;

    OAIServiceSpec m_spec;
    bool m_spec_isSet;
    bool m_spec_isValid;

    OAIServiceStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_uid;
    bool m_uid_isSet;
    bool m_uid_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIService)

#endif // OAIService_H
