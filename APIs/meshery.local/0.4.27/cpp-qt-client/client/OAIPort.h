/**
 * Meshery API.
 * the purpose of this application is to provide an application that is using plain go code to define an API  This should demonstrate all the possible comment annotations that are available to turn go code into a fully compliant swagger 2.0 spec
 *
 * The version of the OpenAPI document: 0.4.27
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPort.h
 *
 * Port An open port on a container
 */

#ifndef OAIPort_H
#define OAIPort_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPort : public OAIObject {
public:
    OAIPort();
    OAIPort(QString json);
    ~OAIPort() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getIp() const;
    void setIp(const QString &ip);
    bool is_ip_Set() const;
    bool is_ip_Valid() const;

    qint32 getPrivatePort() const;
    void setPrivatePort(const qint32 &private_port);
    bool is_private_port_Set() const;
    bool is_private_port_Valid() const;

    qint32 getPublicPort() const;
    void setPublicPort(const qint32 &public_port);
    bool is_public_port_Set() const;
    bool is_public_port_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_ip;
    bool m_ip_isSet;
    bool m_ip_isValid;

    qint32 m_private_port;
    bool m_private_port_isSet;
    bool m_private_port_isValid;

    qint32 m_public_port;
    bool m_public_port_isSet;
    bool m_public_port_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPort)

#endif // OAIPort_H
