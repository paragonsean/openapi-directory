/**
 * Meshery API.
 * the purpose of this application is to provide an application that is using plain go code to define an API  This should demonstrate all the possible comment annotations that are available to turn go code into a fully compliant swagger 2.0 spec
 *
 * The version of the OpenAPI document: 0.4.27
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISort.h
 *
 * for a graph panel
 */

#ifndef OAISort_H
#define OAISort_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISort : public OAIObject {
public:
    OAISort();
    OAISort(QString json);
    ~OAISort() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint64 getCol() const;
    void setCol(const qint64 &col);
    bool is_col_Set() const;
    bool is_col_Valid() const;

    bool isDesc() const;
    void setDesc(const bool &desc);
    bool is_desc_Set() const;
    bool is_desc_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint64 m_col;
    bool m_col_isSet;
    bool m_col_isValid;

    bool m_desc;
    bool m_desc_isSet;
    bool m_desc_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISort)

#endif // OAISort_H
