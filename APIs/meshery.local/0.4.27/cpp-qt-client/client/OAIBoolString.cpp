/**
 * Meshery API.
 * the purpose of this application is to provide an application that is using plain go code to define an API  This should demonstrate all the possible comment annotations that are available to turn go code into a fully compliant swagger 2.0 spec
 *
 * The version of the OpenAPI document: 0.4.27
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBoolString.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBoolString::OAIBoolString(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBoolString::OAIBoolString() {
    this->initializeModel();
}

OAIBoolString::~OAIBoolString() {}

void OAIBoolString::initializeModel() {

    m_flag_isSet = false;
    m_flag_isValid = false;

    m_value_isSet = false;
    m_value_isValid = false;
}

void OAIBoolString::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBoolString::fromJsonObject(QJsonObject json) {

    m_flag_isValid = ::OpenAPI::fromJsonValue(m_flag, json[QString("Flag")]);
    m_flag_isSet = !json[QString("Flag")].isNull() && m_flag_isValid;

    m_value_isValid = ::OpenAPI::fromJsonValue(m_value, json[QString("Value")]);
    m_value_isSet = !json[QString("Value")].isNull() && m_value_isValid;
}

QString OAIBoolString::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBoolString::asJsonObject() const {
    QJsonObject obj;
    if (m_flag_isSet) {
        obj.insert(QString("Flag"), ::OpenAPI::toJsonValue(m_flag));
    }
    if (m_value_isSet) {
        obj.insert(QString("Value"), ::OpenAPI::toJsonValue(m_value));
    }
    return obj;
}

bool OAIBoolString::isFlag() const {
    return m_flag;
}
void OAIBoolString::setFlag(const bool &flag) {
    m_flag = flag;
    m_flag_isSet = true;
}

bool OAIBoolString::is_flag_Set() const{
    return m_flag_isSet;
}

bool OAIBoolString::is_flag_Valid() const{
    return m_flag_isValid;
}

QString OAIBoolString::getValue() const {
    return m_value;
}
void OAIBoolString::setValue(const QString &value) {
    m_value = value;
    m_value_isSet = true;
}

bool OAIBoolString::is_value_Set() const{
    return m_value_isSet;
}

bool OAIBoolString::is_value_Valid() const{
    return m_value_isValid;
}

bool OAIBoolString::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_flag_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_value_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBoolString::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
