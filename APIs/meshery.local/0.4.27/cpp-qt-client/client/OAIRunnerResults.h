/**
 * Meshery API.
 * the purpose of this application is to provide an application that is using plain go code to define an API  This should demonstrate all the possible comment annotations that are available to turn go code into a fully compliant swagger 2.0 spec
 *
 * The version of the OpenAPI document: 0.4.27
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRunnerResults.h
 *
 * 
 */

#ifndef OAIRunnerResults_H
#define OAIRunnerResults_H

#include <QJsonObject>

#include "OAIRunnerResults_DurationHistogram.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIRunnerResults_DurationHistogram;

class OAIRunnerResults : public OAIObject {
public:
    OAIRunnerResults();
    OAIRunnerResults(QString json);
    ~OAIRunnerResults() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getActualDuration() const;
    void setActualDuration(const qint32 &actual_duration);
    bool is_actual_duration_Set() const;
    bool is_actual_duration_Valid() const;

    double getActualQps() const;
    void setActualQps(const double &actual_qps);
    bool is_actual_qps_Set() const;
    bool is_actual_qps_Valid() const;

    OAIRunnerResults_DurationHistogram getDurationHistogram() const;
    void setDurationHistogram(const OAIRunnerResults_DurationHistogram &duration_histogram);
    bool is_duration_histogram_Set() const;
    bool is_duration_histogram_Valid() const;

    QDateTime getStartTime() const;
    void setStartTime(const QDateTime &start_time);
    bool is_start_time_Set() const;
    bool is_start_time_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    QString getLoadGenerator() const;
    void setLoadGenerator(const QString &load_generator);
    bool is_load_generator_Set() const;
    bool is_load_generator_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_actual_duration;
    bool m_actual_duration_isSet;
    bool m_actual_duration_isValid;

    double m_actual_qps;
    bool m_actual_qps_isSet;
    bool m_actual_qps_isValid;

    OAIRunnerResults_DurationHistogram m_duration_histogram;
    bool m_duration_histogram_isSet;
    bool m_duration_histogram_isValid;

    QDateTime m_start_time;
    bool m_start_time_isSet;
    bool m_start_time_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;

    QString m_load_generator;
    bool m_load_generator_isSet;
    bool m_load_generator_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRunnerResults)

#endif // OAIRunnerResults_H
