/**
 * Meshery API.
 * the purpose of this application is to provide an application that is using plain go code to define an API  This should demonstrate all the possible comment annotations that are available to turn go code into a fully compliant swagger 2.0 spec
 *
 * The version of the OpenAPI document: 0.4.27
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINavigatorExtension.h
 *
 * NavigatorExtension describes the Navigator extension point in the UI
 */

#ifndef OAINavigatorExtension_H
#define OAINavigatorExtension_H

#include <QJsonObject>

#include "OAIHref.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIHref;

class OAINavigatorExtension : public OAIObject {
public:
    OAINavigatorExtension();
    OAINavigatorExtension(QString json);
    ~OAINavigatorExtension() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAINavigatorExtension> getChildren() const;
    void setChildren(const QList<OAINavigatorExtension> &children);
    bool is_children_Set() const;
    bool is_children_Valid() const;

    QString getComponent() const;
    void setComponent(const QString &component);
    bool is_component_Set() const;
    bool is_component_Valid() const;

    OAIHref getHref() const;
    void setHref(const OAIHref &href);
    bool is_href_Set() const;
    bool is_href_Valid() const;

    QString getIcon() const;
    void setIcon(const QString &icon);
    bool is_icon_Set() const;
    bool is_icon_Valid() const;

    bool isLink() const;
    void setLink(const bool &link);
    bool is_link_Set() const;
    bool is_link_Valid() const;

    bool isShow() const;
    void setShow(const bool &show);
    bool is_show_Set() const;
    bool is_show_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAINavigatorExtension> m_children;
    bool m_children_isSet;
    bool m_children_isValid;

    QString m_component;
    bool m_component_isSet;
    bool m_component_isValid;

    OAIHref m_href;
    bool m_href_isSet;
    bool m_href_isValid;

    QString m_icon;
    bool m_icon_isSet;
    bool m_icon_isValid;

    bool m_link;
    bool m_link_isSet;
    bool m_link_isValid;

    bool m_show;
    bool m_show_isSet;
    bool m_show_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINavigatorExtension)

#endif // OAINavigatorExtension_H
