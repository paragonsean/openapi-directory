/**
 * Meshery API.
 * the purpose of this application is to provide an application that is using plain go code to define an API  This should demonstrate all the possible comment annotations that are available to turn go code into a fully compliant swagger 2.0 spec
 *
 * The version of the OpenAPI document: 0.4.27
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIContainerTopOKBody.h
 *
 * ContainerTopOKBody OK response to ContainerTop operation
 */

#ifndef OAIContainerTopOKBody_H
#define OAIContainerTopOKBody_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIContainerTopOKBody : public OAIObject {
public:
    OAIContainerTopOKBody();
    OAIContainerTopOKBody(QString json);
    ~OAIContainerTopOKBody() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QList<QString>> getProcesses() const;
    void setProcesses(const QList<QList<QString>> &processes);
    bool is_processes_Set() const;
    bool is_processes_Valid() const;

    QList<QString> getTitles() const;
    void setTitles(const QList<QString> &titles);
    bool is_titles_Set() const;
    bool is_titles_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QList<QString>> m_processes;
    bool m_processes_isSet;
    bool m_processes_isValid;

    QList<QString> m_titles;
    bool m_titles_isSet;
    bool m_titles_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIContainerTopOKBody)

#endif // OAIContainerTopOKBody_H
