/**
 * Meshery API.
 * the purpose of this application is to provide an application that is using plain go code to define an API  This should demonstrate all the possible comment annotations that are available to turn go code into a fully compliant swagger 2.0 spec
 *
 * The version of the OpenAPI document: 0.4.27
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFieldConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFieldConfig::OAIFieldConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFieldConfig::OAIFieldConfig() {
    this->initializeModel();
}

OAIFieldConfig::~OAIFieldConfig() {}

void OAIFieldConfig::initializeModel() {

    m_defaults_isSet = false;
    m_defaults_isValid = false;
}

void OAIFieldConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFieldConfig::fromJsonObject(QJsonObject json) {

    m_defaults_isValid = ::OpenAPI::fromJsonValue(m_defaults, json[QString("defaults")]);
    m_defaults_isSet = !json[QString("defaults")].isNull() && m_defaults_isValid;
}

QString OAIFieldConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFieldConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_defaults.isSet()) {
        obj.insert(QString("defaults"), ::OpenAPI::toJsonValue(m_defaults));
    }
    return obj;
}

OAIFieldConfig_defaults OAIFieldConfig::getDefaults() const {
    return m_defaults;
}
void OAIFieldConfig::setDefaults(const OAIFieldConfig_defaults &defaults) {
    m_defaults = defaults;
    m_defaults_isSet = true;
}

bool OAIFieldConfig::is_defaults_Set() const{
    return m_defaults_isSet;
}

bool OAIFieldConfig::is_defaults_Valid() const{
    return m_defaults_isValid;
}

bool OAIFieldConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_defaults.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFieldConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
