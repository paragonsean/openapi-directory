/**
 * Meshery API.
 * the purpose of this application is to provide an application that is using plain go code to define an API  This should demonstrate all the possible comment annotations that are available to turn go code into a fully compliant swagger 2.0 spec
 *
 * The version of the OpenAPI document: 0.4.27
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIServicePort.h
 *
 * 
 */

#ifndef OAIServicePort_H
#define OAIServicePort_H

#include <QJsonObject>

#include "OAIIntOrString.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIIntOrString;

class OAIServicePort : public OAIObject {
public:
    OAIServicePort();
    OAIServicePort(QString json);
    ~OAIServicePort() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAppProtocol() const;
    void setAppProtocol(const QString &app_protocol);
    bool is_app_protocol_Set() const;
    bool is_app_protocol_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    qint32 getNodePort() const;
    void setNodePort(const qint32 &node_port);
    bool is_node_port_Set() const;
    bool is_node_port_Valid() const;

    qint32 getPort() const;
    void setPort(const qint32 &port);
    bool is_port_Set() const;
    bool is_port_Valid() const;

    QString getProtocol() const;
    void setProtocol(const QString &protocol);
    bool is_protocol_Set() const;
    bool is_protocol_Valid() const;

    OAIIntOrString getTargetPort() const;
    void setTargetPort(const OAIIntOrString &target_port);
    bool is_target_port_Set() const;
    bool is_target_port_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_app_protocol;
    bool m_app_protocol_isSet;
    bool m_app_protocol_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    qint32 m_node_port;
    bool m_node_port_isSet;
    bool m_node_port_isValid;

    qint32 m_port;
    bool m_port_isSet;
    bool m_port_isValid;

    QString m_protocol;
    bool m_protocol_isSet;
    bool m_protocol_isValid;

    OAIIntOrString m_target_port;
    bool m_target_port_isSet;
    bool m_target_port_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIServicePort)

#endif // OAIServicePort_H
