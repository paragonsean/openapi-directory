/**
 * Meshery API.
 * the purpose of this application is to provide an application that is using plain go code to define an API  This should demonstrate all the possible comment annotations that are available to turn go code into a fully compliant swagger 2.0 spec
 *
 * The version of the OpenAPI document: 0.4.27
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGrafanaTemplateVars.h
 *
 * GrafanaTemplateVars represents template variables in a bboard
 */

#ifndef OAIGrafanaTemplateVars_H
#define OAIGrafanaTemplateVars_H

#include <QJsonObject>

#include "OAIGrafanaDataSource.h"
#include "OAIObject.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGrafanaDataSource;

class OAIGrafanaTemplateVars : public OAIObject {
public:
    OAIGrafanaTemplateVars();
    OAIGrafanaTemplateVars(QString json);
    ~OAIGrafanaTemplateVars() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIGrafanaDataSource getDatasource() const;
    void setDatasource(const OAIGrafanaDataSource &datasource);
    bool is_datasource_Set() const;
    bool is_datasource_Valid() const;

    qint32 getHide() const;
    void setHide(const qint32 &hide);
    bool is_hide_Set() const;
    bool is_hide_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getQuery() const;
    void setQuery(const QString &query);
    bool is_query_Set() const;
    bool is_query_Valid() const;

    OAIObject getValue() const;
    void setValue(const OAIObject &value);
    bool is_value_Set() const;
    bool is_value_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIGrafanaDataSource m_datasource;
    bool m_datasource_isSet;
    bool m_datasource_isValid;

    qint32 m_hide;
    bool m_hide_isSet;
    bool m_hide_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_query;
    bool m_query_isSet;
    bool m_query_isValid;

    OAIObject m_value;
    bool m_value_isSet;
    bool m_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGrafanaTemplateVars)

#endif // OAIGrafanaTemplateVars_H
