/**
 * Meshery API.
 * the purpose of this application is to provide an application that is using plain go code to define an API  This should demonstrate all the possible comment annotations that are available to turn go code into a fully compliant swagger 2.0 spec
 *
 * The version of the OpenAPI document: 0.4.27
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICapability.h
 *
 * Capability is a capability of Provider indicating whether a feature is present
 */

#ifndef OAICapability_H
#define OAICapability_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICapability : public OAIObject {
public:
    OAICapability();
    OAICapability(QString json);
    ~OAICapability() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getEndpoint() const;
    void setEndpoint(const QString &endpoint);
    bool is_endpoint_Set() const;
    bool is_endpoint_Valid() const;

    QString getFeature() const;
    void setFeature(const QString &feature);
    bool is_feature_Set() const;
    bool is_feature_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_endpoint;
    bool m_endpoint_isSet;
    bool m_endpoint_isValid;

    QString m_feature;
    bool m_feature_isSet;
    bool m_feature_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICapability)

#endif // OAICapability_H
