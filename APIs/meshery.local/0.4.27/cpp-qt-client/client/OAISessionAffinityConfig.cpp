/**
 * Meshery API.
 * the purpose of this application is to provide an application that is using plain go code to define an API  This should demonstrate all the possible comment annotations that are available to turn go code into a fully compliant swagger 2.0 spec
 *
 * The version of the OpenAPI document: 0.4.27
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISessionAffinityConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISessionAffinityConfig::OAISessionAffinityConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISessionAffinityConfig::OAISessionAffinityConfig() {
    this->initializeModel();
}

OAISessionAffinityConfig::~OAISessionAffinityConfig() {}

void OAISessionAffinityConfig::initializeModel() {

    m_client_ip_isSet = false;
    m_client_ip_isValid = false;
}

void OAISessionAffinityConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISessionAffinityConfig::fromJsonObject(QJsonObject json) {

    m_client_ip_isValid = ::OpenAPI::fromJsonValue(m_client_ip, json[QString("clientIP")]);
    m_client_ip_isSet = !json[QString("clientIP")].isNull() && m_client_ip_isValid;
}

QString OAISessionAffinityConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISessionAffinityConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_client_ip.isSet()) {
        obj.insert(QString("clientIP"), ::OpenAPI::toJsonValue(m_client_ip));
    }
    return obj;
}

OAIClientIPConfig OAISessionAffinityConfig::getClientIp() const {
    return m_client_ip;
}
void OAISessionAffinityConfig::setClientIp(const OAIClientIPConfig &client_ip) {
    m_client_ip = client_ip;
    m_client_ip_isSet = true;
}

bool OAISessionAffinityConfig::is_client_ip_Set() const{
    return m_client_ip_isSet;
}

bool OAISessionAffinityConfig::is_client_ip_Valid() const{
    return m_client_ip_isValid;
}

bool OAISessionAffinityConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_client_ip.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISessionAffinityConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
