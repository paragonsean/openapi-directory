/**
 * Meshery API.
 * the purpose of this application is to provide an application that is using plain go code to define an API  This should demonstrate all the possible comment annotations that are available to turn go code into a fully compliant swagger 2.0 spec
 *
 * The version of the OpenAPI document: 0.4.27
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGrafanaConfigParams.h
 *
 * Parameters to save Grafana configuration
 */

#ifndef OAIGrafanaConfigParams_H
#define OAIGrafanaConfigParams_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGrafanaConfigParams : public OAIObject {
public:
    OAIGrafanaConfigParams();
    OAIGrafanaConfigParams(QString json);
    ~OAIGrafanaConfigParams() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getGrafanaApiKey() const;
    void setGrafanaApiKey(const QString &grafana_api_key);
    bool is_grafana_api_key_Set() const;
    bool is_grafana_api_key_Valid() const;

    QString getGrafanaUrl() const;
    void setGrafanaUrl(const QString &grafana_url);
    bool is_grafana_url_Set() const;
    bool is_grafana_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_grafana_api_key;
    bool m_grafana_api_key_isSet;
    bool m_grafana_api_key_isValid;

    QString m_grafana_url;
    bool m_grafana_url_isSet;
    bool m_grafana_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGrafanaConfigParams)

#endif // OAIGrafanaConfigParams_H
