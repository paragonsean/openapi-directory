/**
 * Meshery API.
 * the purpose of this application is to provide an application that is using plain go code to define an API  This should demonstrate all the possible comment annotations that are available to turn go code into a fully compliant swagger 2.0 spec
 *
 * The version of the OpenAPI document: 0.4.27
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILoadBalancerStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILoadBalancerStatus::OAILoadBalancerStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILoadBalancerStatus::OAILoadBalancerStatus() {
    this->initializeModel();
}

OAILoadBalancerStatus::~OAILoadBalancerStatus() {}

void OAILoadBalancerStatus::initializeModel() {

    m_ingress_isSet = false;
    m_ingress_isValid = false;
}

void OAILoadBalancerStatus::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILoadBalancerStatus::fromJsonObject(QJsonObject json) {

    m_ingress_isValid = ::OpenAPI::fromJsonValue(m_ingress, json[QString("ingress")]);
    m_ingress_isSet = !json[QString("ingress")].isNull() && m_ingress_isValid;
}

QString OAILoadBalancerStatus::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILoadBalancerStatus::asJsonObject() const {
    QJsonObject obj;
    if (m_ingress.size() > 0) {
        obj.insert(QString("ingress"), ::OpenAPI::toJsonValue(m_ingress));
    }
    return obj;
}

QList<OAILoadBalancerIngress> OAILoadBalancerStatus::getIngress() const {
    return m_ingress;
}
void OAILoadBalancerStatus::setIngress(const QList<OAILoadBalancerIngress> &ingress) {
    m_ingress = ingress;
    m_ingress_isSet = true;
}

bool OAILoadBalancerStatus::is_ingress_Set() const{
    return m_ingress_isSet;
}

bool OAILoadBalancerStatus::is_ingress_Valid() const{
    return m_ingress_isValid;
}

bool OAILoadBalancerStatus::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_ingress.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILoadBalancerStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
