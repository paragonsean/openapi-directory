/**
 * Meshery API.
 * the purpose of this application is to provide an application that is using plain go code to define an API  This should demonstrate all the possible comment annotations that are available to turn go code into a fully compliant swagger 2.0 spec
 *
 * The version of the OpenAPI document: 0.4.27
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPerformanceResult.h
 *
 * PerformanceResult represents the result of a performance test
 */

#ifndef OAIPerformanceResult_H
#define OAIPerformanceResult_H

#include <QJsonObject>

#include "OAIObject.h"
#include "OAIRunnerResults.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIRunnerResults;

class OAIPerformanceResult : public OAIObject {
public:
    OAIPerformanceResult();
    OAIPerformanceResult(QString json);
    ~OAIPerformanceResult() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getMesh() const;
    void setMesh(const QString &mesh);
    bool is_mesh_Set() const;
    bool is_mesh_Valid() const;

    QList<qint32> getMesheryId() const;
    void setMesheryId(const QList<qint32> &meshery_id);
    bool is_meshery_id_Set() const;
    bool is_meshery_id_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QList<qint32> getPerformanceProfile() const;
    void setPerformanceProfile(const QList<qint32> &performance_profile);
    bool is_performance_profile_Set() const;
    bool is_performance_profile_Valid() const;

    OAIRunnerResults getRunnerResults() const;
    void setRunnerResults(const OAIRunnerResults &runner_results);
    bool is_runner_results_Set() const;
    bool is_runner_results_Valid() const;

    OAIObject getServerBoardConfig() const;
    void setServerBoardConfig(const OAIObject &server_board_config);
    bool is_server_board_config_Set() const;
    bool is_server_board_config_Valid() const;

    OAIObject getServerMetrics() const;
    void setServerMetrics(const OAIObject &server_metrics);
    bool is_server_metrics_Set() const;
    bool is_server_metrics_Valid() const;

    QDateTime getTestStartTime() const;
    void setTestStartTime(const QDateTime &test_start_time);
    bool is_test_start_time_Set() const;
    bool is_test_start_time_Valid() const;

    QList<qint32> getUserId() const;
    void setUserId(const QList<qint32> &user_id);
    bool is_user_id_Set() const;
    bool is_user_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_mesh;
    bool m_mesh_isSet;
    bool m_mesh_isValid;

    QList<qint32> m_meshery_id;
    bool m_meshery_id_isSet;
    bool m_meshery_id_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QList<qint32> m_performance_profile;
    bool m_performance_profile_isSet;
    bool m_performance_profile_isValid;

    OAIRunnerResults m_runner_results;
    bool m_runner_results_isSet;
    bool m_runner_results_isValid;

    OAIObject m_server_board_config;
    bool m_server_board_config_isSet;
    bool m_server_board_config_isValid;

    OAIObject m_server_metrics;
    bool m_server_metrics_isSet;
    bool m_server_metrics_isValid;

    QDateTime m_test_start_time;
    bool m_test_start_time_isSet;
    bool m_test_start_time_isValid;

    QList<qint32> m_user_id;
    bool m_user_id_isSet;
    bool m_user_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPerformanceResult)

#endif // OAIPerformanceResult_H
