/**
 * Meshery API.
 * the purpose of this application is to provide an application that is using plain go code to define an API  This should demonstrate all the possible comment annotations that are available to turn go code into a fully compliant swagger 2.0 spec
 *
 * The version of the OpenAPI document: 0.4.27
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIServiceStatus.h
 *
 * 
 */

#ifndef OAIServiceStatus_H
#define OAIServiceStatus_H

#include <QJsonObject>

#include "OAILoadBalancerStatus.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAILoadBalancerStatus;

class OAIServiceStatus : public OAIObject {
public:
    OAIServiceStatus();
    OAIServiceStatus(QString json);
    ~OAIServiceStatus() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAILoadBalancerStatus getLoadBalancer() const;
    void setLoadBalancer(const OAILoadBalancerStatus &load_balancer);
    bool is_load_balancer_Set() const;
    bool is_load_balancer_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAILoadBalancerStatus m_load_balancer;
    bool m_load_balancer_isSet;
    bool m_load_balancer_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIServiceStatus)

#endif // OAIServiceStatus_H
