/**
 * Meshery API.
 * the purpose of this application is to provide an application that is using plain go code to define an API  This should demonstrate all the possible comment annotations that are available to turn go code into a fully compliant swagger 2.0 spec
 *
 * The version of the OpenAPI document: 0.4.27
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIColumn.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIColumn::OAIColumn(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIColumn::OAIColumn() {
    this->initializeModel();
}

OAIColumn::~OAIColumn() {}

void OAIColumn::initializeModel() {

    m_text_isSet = false;
    m_text_isValid = false;

    m_value_isSet = false;
    m_value_isValid = false;
}

void OAIColumn::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIColumn::fromJsonObject(QJsonObject json) {

    m_text_isValid = ::OpenAPI::fromJsonValue(m_text, json[QString("text")]);
    m_text_isSet = !json[QString("text")].isNull() && m_text_isValid;

    m_value_isValid = ::OpenAPI::fromJsonValue(m_value, json[QString("value")]);
    m_value_isSet = !json[QString("value")].isNull() && m_value_isValid;
}

QString OAIColumn::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIColumn::asJsonObject() const {
    QJsonObject obj;
    if (m_text_isSet) {
        obj.insert(QString("text"), ::OpenAPI::toJsonValue(m_text));
    }
    if (m_value_isSet) {
        obj.insert(QString("value"), ::OpenAPI::toJsonValue(m_value));
    }
    return obj;
}

QString OAIColumn::getText() const {
    return m_text;
}
void OAIColumn::setText(const QString &text) {
    m_text = text;
    m_text_isSet = true;
}

bool OAIColumn::is_text_Set() const{
    return m_text_isSet;
}

bool OAIColumn::is_text_Valid() const{
    return m_text_isValid;
}

QString OAIColumn::getValue() const {
    return m_value;
}
void OAIColumn::setValue(const QString &value) {
    m_value = value;
    m_value_isSet = true;
}

bool OAIColumn::is_value_Set() const{
    return m_value_isSet;
}

bool OAIColumn::is_value_Valid() const{
    return m_value_isValid;
}

bool OAIColumn::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_text_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_value_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIColumn::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
