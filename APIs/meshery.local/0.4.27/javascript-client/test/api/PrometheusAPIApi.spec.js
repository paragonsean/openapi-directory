/**
 * Meshery API.
 * the purpose of this application is to provide an application that is using plain go code to define an API  This should demonstrate all the possible comment annotations that are available to turn go code into a fully compliant swagger 2.0 spec
 *
 * The version of the OpenAPI document: 0.4.27
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MesheryApi);
  }
}(this, function(expect, MesheryApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MesheryApi.PrometheusAPIApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('PrometheusAPIApi', function() {
    describe('idDeletePrometheusConfig', function() {
      it('should call idDeletePrometheusConfig successfully', function(done) {
        //uncomment below and update the code to test idDeletePrometheusConfig
        //instance.idDeletePrometheusConfig(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('idGetPrometheusConfig', function() {
      it('should call idGetPrometheusConfig successfully', function(done) {
        //uncomment below and update the code to test idGetPrometheusConfig
        //instance.idGetPrometheusConfig(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('idGetPrometheusPing', function() {
      it('should call idGetPrometheusPing successfully', function(done) {
        //uncomment below and update the code to test idGetPrometheusPing
        //instance.idGetPrometheusPing(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('idGetPrometheusQuery', function() {
      it('should call idGetPrometheusQuery successfully', function(done) {
        //uncomment below and update the code to test idGetPrometheusQuery
        //instance.idGetPrometheusQuery(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('idGetPrometheusStaticBoard', function() {
      it('should call idGetPrometheusStaticBoard successfully', function(done) {
        //uncomment below and update the code to test idGetPrometheusStaticBoard
        //instance.idGetPrometheusStaticBoard(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('idPostPrometheusBoard', function() {
      it('should call idPostPrometheusBoard successfully', function(done) {
        //uncomment below and update the code to test idPostPrometheusBoard
        //instance.idPostPrometheusBoard(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('idPostPrometheusBoardImport', function() {
      it('should call idPostPrometheusBoardImport successfully', function(done) {
        //uncomment below and update the code to test idPostPrometheusBoardImport
        //instance.idPostPrometheusBoardImport(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('idPostPrometheusConfig', function() {
      it('should call idPostPrometheusConfig successfully', function(done) {
        //uncomment below and update the code to test idPostPrometheusConfig
        //instance.idPostPrometheusConfig(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
