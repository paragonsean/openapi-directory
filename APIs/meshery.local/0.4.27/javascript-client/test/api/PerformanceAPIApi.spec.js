/**
 * Meshery API.
 * the purpose of this application is to provide an application that is using plain go code to define an API  This should demonstrate all the possible comment annotations that are available to turn go code into a fully compliant swagger 2.0 spec
 *
 * The version of the OpenAPI document: 0.4.27
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MesheryApi);
  }
}(this, function(expect, MesheryApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MesheryApi.PerformanceAPIApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('PerformanceAPIApi', function() {
    describe('idDeletePerformanceProfile', function() {
      it('should call idDeletePerformanceProfile successfully', function(done) {
        //uncomment below and update the code to test idDeletePerformanceProfile
        //instance.idDeletePerformanceProfile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('idGETProfileResults', function() {
      it('should call idGETProfileResults successfully', function(done) {
        //uncomment below and update the code to test idGETProfileResults
        //instance.idGETProfileResults(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('idGetAllPerformanceResults', function() {
      it('should call idGetAllPerformanceResults successfully', function(done) {
        //uncomment below and update the code to test idGetAllPerformanceResults
        //instance.idGetAllPerformanceResults(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('idGetPerformanceProfiles', function() {
      it('should call idGetPerformanceProfiles successfully', function(done) {
        //uncomment below and update the code to test idGetPerformanceProfiles
        //instance.idGetPerformanceProfiles(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('idGetSinglePerformanceProfile', function() {
      it('should call idGetSinglePerformanceProfile successfully', function(done) {
        //uncomment below and update the code to test idGetSinglePerformanceProfile
        //instance.idGetSinglePerformanceProfile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('idRunPerformanceTest', function() {
      it('should call idRunPerformanceTest successfully', function(done) {
        //uncomment below and update the code to test idRunPerformanceTest
        //instance.idRunPerformanceTest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('idSavePerformanceProfile', function() {
      it('should call idSavePerformanceProfile successfully', function(done) {
        //uncomment below and update the code to test idSavePerformanceProfile
        //instance.idSavePerformanceProfile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
