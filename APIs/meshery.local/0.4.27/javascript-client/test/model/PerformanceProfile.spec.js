/**
 * Meshery API.
 * the purpose of this application is to provide an application that is using plain go code to define an API  This should demonstrate all the possible comment annotations that are available to turn go code into a fully compliant swagger 2.0 spec
 *
 * The version of the OpenAPI document: 0.4.27
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MesheryApi);
  }
}(this, function(expect, MesheryApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MesheryApi.PerformanceProfile();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('PerformanceProfile', function() {
    it('should create an instance of PerformanceProfile', function() {
      // uncomment below and update the code to test PerformanceProfile
      //var instance = new MesheryApi.PerformanceProfile();
      //expect(instance).to.be.a(MesheryApi.PerformanceProfile);
    });

    it('should have the property concurrentRequest (base name: "concurrent_request")', function() {
      // uncomment below and update the code to test the property concurrentRequest
      //var instance = new MesheryApi.PerformanceProfile();
      //expect(instance).to.be();
    });

    it('should have the property contentType (base name: "content_type")', function() {
      // uncomment below and update the code to test the property contentType
      //var instance = new MesheryApi.PerformanceProfile();
      //expect(instance).to.be();
    });

    it('should have the property createdAt (base name: "created_at")', function() {
      // uncomment below and update the code to test the property createdAt
      //var instance = new MesheryApi.PerformanceProfile();
      //expect(instance).to.be();
    });

    it('should have the property duration (base name: "duration")', function() {
      // uncomment below and update the code to test the property duration
      //var instance = new MesheryApi.PerformanceProfile();
      //expect(instance).to.be();
    });

    it('should have the property endpoints (base name: "endpoints")', function() {
      // uncomment below and update the code to test the property endpoints
      //var instance = new MesheryApi.PerformanceProfile();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new MesheryApi.PerformanceProfile();
      //expect(instance).to.be();
    });

    it('should have the property lastRun (base name: "last_run")', function() {
      // uncomment below and update the code to test the property lastRun
      //var instance = new MesheryApi.PerformanceProfile();
      //expect(instance).to.be();
    });

    it('should have the property loadGenerators (base name: "load_generators")', function() {
      // uncomment below and update the code to test the property loadGenerators
      //var instance = new MesheryApi.PerformanceProfile();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new MesheryApi.PerformanceProfile();
      //expect(instance).to.be();
    });

    it('should have the property qps (base name: "qps")', function() {
      // uncomment below and update the code to test the property qps
      //var instance = new MesheryApi.PerformanceProfile();
      //expect(instance).to.be();
    });

    it('should have the property requestBody (base name: "request_body")', function() {
      // uncomment below and update the code to test the property requestBody
      //var instance = new MesheryApi.PerformanceProfile();
      //expect(instance).to.be();
    });

    it('should have the property requestCookies (base name: "request_cookies")', function() {
      // uncomment below and update the code to test the property requestCookies
      //var instance = new MesheryApi.PerformanceProfile();
      //expect(instance).to.be();
    });

    it('should have the property requestHeaders (base name: "request_headers")', function() {
      // uncomment below and update the code to test the property requestHeaders
      //var instance = new MesheryApi.PerformanceProfile();
      //expect(instance).to.be();
    });

    it('should have the property schedule (base name: "schedule")', function() {
      // uncomment below and update the code to test the property schedule
      //var instance = new MesheryApi.PerformanceProfile();
      //expect(instance).to.be();
    });

    it('should have the property serviceMesh (base name: "service_mesh")', function() {
      // uncomment below and update the code to test the property serviceMesh
      //var instance = new MesheryApi.PerformanceProfile();
      //expect(instance).to.be();
    });

    it('should have the property totalResults (base name: "total_results")', function() {
      // uncomment below and update the code to test the property totalResults
      //var instance = new MesheryApi.PerformanceProfile();
      //expect(instance).to.be();
    });

    it('should have the property updatedAt (base name: "updated_at")', function() {
      // uncomment below and update the code to test the property updatedAt
      //var instance = new MesheryApi.PerformanceProfile();
      //expect(instance).to.be();
    });

  });

}));
