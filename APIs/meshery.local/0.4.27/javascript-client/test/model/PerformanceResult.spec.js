/**
 * Meshery API.
 * the purpose of this application is to provide an application that is using plain go code to define an API  This should demonstrate all the possible comment annotations that are available to turn go code into a fully compliant swagger 2.0 spec
 *
 * The version of the OpenAPI document: 0.4.27
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MesheryApi);
  }
}(this, function(expect, MesheryApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MesheryApi.PerformanceResult();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('PerformanceResult', function() {
    it('should create an instance of PerformanceResult', function() {
      // uncomment below and update the code to test PerformanceResult
      //var instance = new MesheryApi.PerformanceResult();
      //expect(instance).to.be.a(MesheryApi.PerformanceResult);
    });

    it('should have the property mesh (base name: "mesh")', function() {
      // uncomment below and update the code to test the property mesh
      //var instance = new MesheryApi.PerformanceResult();
      //expect(instance).to.be();
    });

    it('should have the property mesheryId (base name: "meshery_id")', function() {
      // uncomment below and update the code to test the property mesheryId
      //var instance = new MesheryApi.PerformanceResult();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new MesheryApi.PerformanceResult();
      //expect(instance).to.be();
    });

    it('should have the property performanceProfile (base name: "performance_profile")', function() {
      // uncomment below and update the code to test the property performanceProfile
      //var instance = new MesheryApi.PerformanceResult();
      //expect(instance).to.be();
    });

    it('should have the property runnerResults (base name: "runner_results")', function() {
      // uncomment below and update the code to test the property runnerResults
      //var instance = new MesheryApi.PerformanceResult();
      //expect(instance).to.be();
    });

    it('should have the property serverBoardConfig (base name: "server_board_config")', function() {
      // uncomment below and update the code to test the property serverBoardConfig
      //var instance = new MesheryApi.PerformanceResult();
      //expect(instance).to.be();
    });

    it('should have the property serverMetrics (base name: "server_metrics")', function() {
      // uncomment below and update the code to test the property serverMetrics
      //var instance = new MesheryApi.PerformanceResult();
      //expect(instance).to.be();
    });

    it('should have the property testStartTime (base name: "test_start_time")', function() {
      // uncomment below and update the code to test the property testStartTime
      //var instance = new MesheryApi.PerformanceResult();
      //expect(instance).to.be();
    });

    it('should have the property userId (base name: "user_id")', function() {
      // uncomment below and update the code to test the property userId
      //var instance = new MesheryApi.PerformanceResult();
      //expect(instance).to.be();
    });

  });

}));
