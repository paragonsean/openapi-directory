/**
 * Meshery API.
 * the purpose of this application is to provide an application that is using plain go code to define an API  This should demonstrate all the possible comment annotations that are available to turn go code into a fully compliant swagger 2.0 spec
 *
 * The version of the OpenAPI document: 0.4.27
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Adapter from './model/Adapter';
import Alert from './model/Alert';
import AlertCondition from './model/AlertCondition';
import AlertEvaluator from './model/AlertEvaluator';
import AlertNotification from './model/AlertNotification';
import AlertOperator from './model/AlertOperator';
import AlertQuery from './model/AlertQuery';
import AlertReducer from './model/AlertReducer';
import ApplicationsAPIResponse from './model/ApplicationsAPIResponse';
import AuthenticateOKBody from './model/AuthenticateOKBody';
import Axis from './model/Axis';
import BoolString from './model/BoolString';
import Capability from './model/Capability';
import ClientIPConfig from './model/ClientIPConfig';
import Column from './model/Column';
import ColumnStyle from './model/ColumnStyle';
import ContainerChangeResponseItem from './model/ContainerChangeResponseItem';
import ContainerCreateCreatedBody from './model/ContainerCreateCreatedBody';
import ContainerTopOKBody from './model/ContainerTopOKBody';
import ContainerUpdateOKBody from './model/ContainerUpdateOKBody';
import ContainerWaitOKBody from './model/ContainerWaitOKBody';
import ContainerWaitOKBodyError from './model/ContainerWaitOKBodyError';
import ErrorResponse from './model/ErrorResponse';
import Extensions from './model/Extensions';
import FieldConfig from './model/FieldConfig';
import FieldConfigDefaults from './model/FieldConfigDefaults';
import FieldConfigDefaultsThreshold from './model/FieldConfigDefaultsThreshold';
import FieldConfigDefaultsThresholdStepsInner from './model/FieldConfigDefaultsThresholdStepsInner';
import FiltersAPIResponse from './model/FiltersAPIResponse';
import FloatString from './model/FloatString';
import Gauge from './model/Gauge';
import Grafana from './model/Grafana';
import GrafanaBoard from './model/GrafanaBoard';
import GrafanaConfigParams from './model/GrafanaConfigParams';
import GrafanaDataSource from './model/GrafanaDataSource';
import GrafanaTemplateVars from './model/GrafanaTemplateVars';
import GraphDriverData from './model/GraphDriverData';
import GraphQLExtension from './model/GraphQLExtension';
import HistoryResponseItem from './model/HistoryResponseItem';
import Href from './model/Href';
import IdResponse from './model/IdResponse';
import ImageDeleteResponseItem from './model/ImageDeleteResponseItem';
import ImageSummary from './model/ImageSummary';
import IntOrString from './model/IntOrString';
import IntString from './model/IntString';
import K8SConfig from './model/K8SConfig';
import K8SContext from './model/K8SContext';
import K8SNode from './model/K8SNode';
import LatenciesMs from './model/LatenciesMs';
import Legend from './model/Legend';
import Link from './model/Link';
import LoadBalancerIngress from './model/LoadBalancerIngress';
import LoadBalancerStatus from './model/LoadBalancerStatus';
import LoadTestPreferences from './model/LoadTestPreferences';
import ManagedFieldsEntry from './model/ManagedFieldsEntry';
import MapType from './model/MapType';
import MesheryApplication from './model/MesheryApplication';
import MesheryFilter from './model/MesheryFilter';
import MesheryPattern from './model/MesheryPattern';
import NavigatorExtension from './model/NavigatorExtension';
import Options from './model/Options';
import OptionsReduceOptions from './model/OptionsReduceOptions';
import OwnerReference from './model/OwnerReference';
import Panel from './model/Panel';
import PanelCards from './model/PanelCards';
import PanelColor from './model/PanelColor';
import PanelGridPos from './model/PanelGridPos';
import PanelScopedVarsValue from './model/PanelScopedVarsValue';
import PanelXAxis from './model/PanelXAxis';
import PanelYAxis from './model/PanelYAxis';
import PatternsAPIResponse from './model/PatternsAPIResponse';
import PerformanceProfile from './model/PerformanceProfile';
import PerformanceProfileParameters from './model/PerformanceProfileParameters';
import PerformanceProfilesAPIResponse from './model/PerformanceProfilesAPIResponse';
import PerformanceResult from './model/PerformanceResult';
import PerformanceResultsAPIResponse from './model/PerformanceResultsAPIResponse';
import PerformanceSpec from './model/PerformanceSpec';
import PerformanceTestConfig from './model/PerformanceTestConfig';
import PerformanceTestConfigClient from './model/PerformanceTestConfigClient';
import PerformanceTestParameters from './model/PerformanceTestParameters';
import Plugin from './model/Plugin';
import PluginConfig from './model/PluginConfig';
import PluginConfigArgs from './model/PluginConfigArgs';
import PluginConfigInterface from './model/PluginConfigInterface';
import PluginConfigLinux from './model/PluginConfigLinux';
import PluginConfigNetwork from './model/PluginConfigNetwork';
import PluginConfigRootfs from './model/PluginConfigRootfs';
import PluginConfigUser from './model/PluginConfigUser';
import PluginDevice from './model/PluginDevice';
import PluginEnv from './model/PluginEnv';
import PluginInterfaceType from './model/PluginInterfaceType';
import PluginMount from './model/PluginMount';
import PluginSettings from './model/PluginSettings';
import Port from './model/Port';
import Preference from './model/Preference';
import PreferenceParams from './model/PreferenceParams';
import Prometheus from './model/Prometheus';
import ProviderProperties from './model/ProviderProperties';
import RangeMap from './model/RangeMap';
import RunnerResults from './model/RunnerResults';
import RunnerResultsDurationHistogram from './model/RunnerResultsDurationHistogram';
import RunnerResultsDurationHistogramPercentilesInner from './model/RunnerResultsDurationHistogramPercentilesInner';
import Schedule from './model/Schedule';
import SchedulesAPIResponse from './model/SchedulesAPIResponse';
import SelectedGrafanaConfig from './model/SelectedGrafanaConfig';
import SeriesOverride from './model/SeriesOverride';
import Service from './model/Service';
import ServicePort from './model/ServicePort';
import ServiceSpec from './model/ServiceSpec';
import ServiceStatus from './model/ServiceStatus';
import ServiceUpdateResponse from './model/ServiceUpdateResponse';
import SessionAffinityConfig from './model/SessionAffinityConfig';
import Sort from './model/Sort';
import SparkLine from './model/SparkLine';
import StackdriverAlignOption from './model/StackdriverAlignOption';
import StackdriverAlignOptions from './model/StackdriverAlignOptions';
import SupportedOperation from './model/SupportedOperation';
import Target from './model/Target';
import TargetBucketAggsInner from './model/TargetBucketAggsInner';
import TargetBucketAggsInnerSettings from './model/TargetBucketAggsInnerSettings';
import TargetGroupInner from './model/TargetGroupInner';
import TargetMetricsInner from './model/TargetMetricsInner';
import TargetWhereInner from './model/TargetWhereInner';
import Threshold from './model/Threshold';
import Tooltip from './model/Tooltip';
import UserPrefsExtension from './model/UserPrefsExtension';
import ValueMap from './model/ValueMap';
import Version from './model/Version';
import Volume from './model/Volume';
import VolumeCreateBody from './model/VolumeCreateBody';
import VolumeListOKBody from './model/VolumeListOKBody';
import VolumeUsageData from './model/VolumeUsageData';
import ApplicationsAPIApi from './api/ApplicationsAPIApi';
import FiltersAPIApi from './api/FiltersAPIApi';
import GrafanaAPIApi from './api/GrafanaAPIApi';
import PatternsAPIApi from './api/PatternsAPIApi';
import PerfAPIApi from './api/PerfAPIApi';
import PerformanceAPIApi from './api/PerformanceAPIApi';
import PrometheusAPIApi from './api/PrometheusAPIApi';
import ProvidersAPIApi from './api/ProvidersAPIApi';
import SchedulesAPIApi from './api/SchedulesAPIApi';
import SystemAPIApi from './api/SystemAPIApi';
import UserAPIApi from './api/UserAPIApi';


/**
* the purpose of this application is to provide an application that is using plain go code to define an API  This should demonstrate all the possible comment annotations that are available to turn go code into a fully compliant swagger 2.0 spec.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var MesheryApi = require('index'); // See note below*.
* var xxxSvc = new MesheryApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new MesheryApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new MesheryApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new MesheryApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 0.4.27
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Adapter model constructor.
     * @property {module:model/Adapter}
     */
    Adapter,

    /**
     * The Alert model constructor.
     * @property {module:model/Alert}
     */
    Alert,

    /**
     * The AlertCondition model constructor.
     * @property {module:model/AlertCondition}
     */
    AlertCondition,

    /**
     * The AlertEvaluator model constructor.
     * @property {module:model/AlertEvaluator}
     */
    AlertEvaluator,

    /**
     * The AlertNotification model constructor.
     * @property {module:model/AlertNotification}
     */
    AlertNotification,

    /**
     * The AlertOperator model constructor.
     * @property {module:model/AlertOperator}
     */
    AlertOperator,

    /**
     * The AlertQuery model constructor.
     * @property {module:model/AlertQuery}
     */
    AlertQuery,

    /**
     * The AlertReducer model constructor.
     * @property {module:model/AlertReducer}
     */
    AlertReducer,

    /**
     * The ApplicationsAPIResponse model constructor.
     * @property {module:model/ApplicationsAPIResponse}
     */
    ApplicationsAPIResponse,

    /**
     * The AuthenticateOKBody model constructor.
     * @property {module:model/AuthenticateOKBody}
     */
    AuthenticateOKBody,

    /**
     * The Axis model constructor.
     * @property {module:model/Axis}
     */
    Axis,

    /**
     * The BoolString model constructor.
     * @property {module:model/BoolString}
     */
    BoolString,

    /**
     * The Capability model constructor.
     * @property {module:model/Capability}
     */
    Capability,

    /**
     * The ClientIPConfig model constructor.
     * @property {module:model/ClientIPConfig}
     */
    ClientIPConfig,

    /**
     * The Column model constructor.
     * @property {module:model/Column}
     */
    Column,

    /**
     * The ColumnStyle model constructor.
     * @property {module:model/ColumnStyle}
     */
    ColumnStyle,

    /**
     * The ContainerChangeResponseItem model constructor.
     * @property {module:model/ContainerChangeResponseItem}
     */
    ContainerChangeResponseItem,

    /**
     * The ContainerCreateCreatedBody model constructor.
     * @property {module:model/ContainerCreateCreatedBody}
     */
    ContainerCreateCreatedBody,

    /**
     * The ContainerTopOKBody model constructor.
     * @property {module:model/ContainerTopOKBody}
     */
    ContainerTopOKBody,

    /**
     * The ContainerUpdateOKBody model constructor.
     * @property {module:model/ContainerUpdateOKBody}
     */
    ContainerUpdateOKBody,

    /**
     * The ContainerWaitOKBody model constructor.
     * @property {module:model/ContainerWaitOKBody}
     */
    ContainerWaitOKBody,

    /**
     * The ContainerWaitOKBodyError model constructor.
     * @property {module:model/ContainerWaitOKBodyError}
     */
    ContainerWaitOKBodyError,

    /**
     * The ErrorResponse model constructor.
     * @property {module:model/ErrorResponse}
     */
    ErrorResponse,

    /**
     * The Extensions model constructor.
     * @property {module:model/Extensions}
     */
    Extensions,

    /**
     * The FieldConfig model constructor.
     * @property {module:model/FieldConfig}
     */
    FieldConfig,

    /**
     * The FieldConfigDefaults model constructor.
     * @property {module:model/FieldConfigDefaults}
     */
    FieldConfigDefaults,

    /**
     * The FieldConfigDefaultsThreshold model constructor.
     * @property {module:model/FieldConfigDefaultsThreshold}
     */
    FieldConfigDefaultsThreshold,

    /**
     * The FieldConfigDefaultsThresholdStepsInner model constructor.
     * @property {module:model/FieldConfigDefaultsThresholdStepsInner}
     */
    FieldConfigDefaultsThresholdStepsInner,

    /**
     * The FiltersAPIResponse model constructor.
     * @property {module:model/FiltersAPIResponse}
     */
    FiltersAPIResponse,

    /**
     * The FloatString model constructor.
     * @property {module:model/FloatString}
     */
    FloatString,

    /**
     * The Gauge model constructor.
     * @property {module:model/Gauge}
     */
    Gauge,

    /**
     * The Grafana model constructor.
     * @property {module:model/Grafana}
     */
    Grafana,

    /**
     * The GrafanaBoard model constructor.
     * @property {module:model/GrafanaBoard}
     */
    GrafanaBoard,

    /**
     * The GrafanaConfigParams model constructor.
     * @property {module:model/GrafanaConfigParams}
     */
    GrafanaConfigParams,

    /**
     * The GrafanaDataSource model constructor.
     * @property {module:model/GrafanaDataSource}
     */
    GrafanaDataSource,

    /**
     * The GrafanaTemplateVars model constructor.
     * @property {module:model/GrafanaTemplateVars}
     */
    GrafanaTemplateVars,

    /**
     * The GraphDriverData model constructor.
     * @property {module:model/GraphDriverData}
     */
    GraphDriverData,

    /**
     * The GraphQLExtension model constructor.
     * @property {module:model/GraphQLExtension}
     */
    GraphQLExtension,

    /**
     * The HistoryResponseItem model constructor.
     * @property {module:model/HistoryResponseItem}
     */
    HistoryResponseItem,

    /**
     * The Href model constructor.
     * @property {module:model/Href}
     */
    Href,

    /**
     * The IdResponse model constructor.
     * @property {module:model/IdResponse}
     */
    IdResponse,

    /**
     * The ImageDeleteResponseItem model constructor.
     * @property {module:model/ImageDeleteResponseItem}
     */
    ImageDeleteResponseItem,

    /**
     * The ImageSummary model constructor.
     * @property {module:model/ImageSummary}
     */
    ImageSummary,

    /**
     * The IntOrString model constructor.
     * @property {module:model/IntOrString}
     */
    IntOrString,

    /**
     * The IntString model constructor.
     * @property {module:model/IntString}
     */
    IntString,

    /**
     * The K8SConfig model constructor.
     * @property {module:model/K8SConfig}
     */
    K8SConfig,

    /**
     * The K8SContext model constructor.
     * @property {module:model/K8SContext}
     */
    K8SContext,

    /**
     * The K8SNode model constructor.
     * @property {module:model/K8SNode}
     */
    K8SNode,

    /**
     * The LatenciesMs model constructor.
     * @property {module:model/LatenciesMs}
     */
    LatenciesMs,

    /**
     * The Legend model constructor.
     * @property {module:model/Legend}
     */
    Legend,

    /**
     * The Link model constructor.
     * @property {module:model/Link}
     */
    Link,

    /**
     * The LoadBalancerIngress model constructor.
     * @property {module:model/LoadBalancerIngress}
     */
    LoadBalancerIngress,

    /**
     * The LoadBalancerStatus model constructor.
     * @property {module:model/LoadBalancerStatus}
     */
    LoadBalancerStatus,

    /**
     * The LoadTestPreferences model constructor.
     * @property {module:model/LoadTestPreferences}
     */
    LoadTestPreferences,

    /**
     * The ManagedFieldsEntry model constructor.
     * @property {module:model/ManagedFieldsEntry}
     */
    ManagedFieldsEntry,

    /**
     * The MapType model constructor.
     * @property {module:model/MapType}
     */
    MapType,

    /**
     * The MesheryApplication model constructor.
     * @property {module:model/MesheryApplication}
     */
    MesheryApplication,

    /**
     * The MesheryFilter model constructor.
     * @property {module:model/MesheryFilter}
     */
    MesheryFilter,

    /**
     * The MesheryPattern model constructor.
     * @property {module:model/MesheryPattern}
     */
    MesheryPattern,

    /**
     * The NavigatorExtension model constructor.
     * @property {module:model/NavigatorExtension}
     */
    NavigatorExtension,

    /**
     * The Options model constructor.
     * @property {module:model/Options}
     */
    Options,

    /**
     * The OptionsReduceOptions model constructor.
     * @property {module:model/OptionsReduceOptions}
     */
    OptionsReduceOptions,

    /**
     * The OwnerReference model constructor.
     * @property {module:model/OwnerReference}
     */
    OwnerReference,

    /**
     * The Panel model constructor.
     * @property {module:model/Panel}
     */
    Panel,

    /**
     * The PanelCards model constructor.
     * @property {module:model/PanelCards}
     */
    PanelCards,

    /**
     * The PanelColor model constructor.
     * @property {module:model/PanelColor}
     */
    PanelColor,

    /**
     * The PanelGridPos model constructor.
     * @property {module:model/PanelGridPos}
     */
    PanelGridPos,

    /**
     * The PanelScopedVarsValue model constructor.
     * @property {module:model/PanelScopedVarsValue}
     */
    PanelScopedVarsValue,

    /**
     * The PanelXAxis model constructor.
     * @property {module:model/PanelXAxis}
     */
    PanelXAxis,

    /**
     * The PanelYAxis model constructor.
     * @property {module:model/PanelYAxis}
     */
    PanelYAxis,

    /**
     * The PatternsAPIResponse model constructor.
     * @property {module:model/PatternsAPIResponse}
     */
    PatternsAPIResponse,

    /**
     * The PerformanceProfile model constructor.
     * @property {module:model/PerformanceProfile}
     */
    PerformanceProfile,

    /**
     * The PerformanceProfileParameters model constructor.
     * @property {module:model/PerformanceProfileParameters}
     */
    PerformanceProfileParameters,

    /**
     * The PerformanceProfilesAPIResponse model constructor.
     * @property {module:model/PerformanceProfilesAPIResponse}
     */
    PerformanceProfilesAPIResponse,

    /**
     * The PerformanceResult model constructor.
     * @property {module:model/PerformanceResult}
     */
    PerformanceResult,

    /**
     * The PerformanceResultsAPIResponse model constructor.
     * @property {module:model/PerformanceResultsAPIResponse}
     */
    PerformanceResultsAPIResponse,

    /**
     * The PerformanceSpec model constructor.
     * @property {module:model/PerformanceSpec}
     */
    PerformanceSpec,

    /**
     * The PerformanceTestConfig model constructor.
     * @property {module:model/PerformanceTestConfig}
     */
    PerformanceTestConfig,

    /**
     * The PerformanceTestConfigClient model constructor.
     * @property {module:model/PerformanceTestConfigClient}
     */
    PerformanceTestConfigClient,

    /**
     * The PerformanceTestParameters model constructor.
     * @property {module:model/PerformanceTestParameters}
     */
    PerformanceTestParameters,

    /**
     * The Plugin model constructor.
     * @property {module:model/Plugin}
     */
    Plugin,

    /**
     * The PluginConfig model constructor.
     * @property {module:model/PluginConfig}
     */
    PluginConfig,

    /**
     * The PluginConfigArgs model constructor.
     * @property {module:model/PluginConfigArgs}
     */
    PluginConfigArgs,

    /**
     * The PluginConfigInterface model constructor.
     * @property {module:model/PluginConfigInterface}
     */
    PluginConfigInterface,

    /**
     * The PluginConfigLinux model constructor.
     * @property {module:model/PluginConfigLinux}
     */
    PluginConfigLinux,

    /**
     * The PluginConfigNetwork model constructor.
     * @property {module:model/PluginConfigNetwork}
     */
    PluginConfigNetwork,

    /**
     * The PluginConfigRootfs model constructor.
     * @property {module:model/PluginConfigRootfs}
     */
    PluginConfigRootfs,

    /**
     * The PluginConfigUser model constructor.
     * @property {module:model/PluginConfigUser}
     */
    PluginConfigUser,

    /**
     * The PluginDevice model constructor.
     * @property {module:model/PluginDevice}
     */
    PluginDevice,

    /**
     * The PluginEnv model constructor.
     * @property {module:model/PluginEnv}
     */
    PluginEnv,

    /**
     * The PluginInterfaceType model constructor.
     * @property {module:model/PluginInterfaceType}
     */
    PluginInterfaceType,

    /**
     * The PluginMount model constructor.
     * @property {module:model/PluginMount}
     */
    PluginMount,

    /**
     * The PluginSettings model constructor.
     * @property {module:model/PluginSettings}
     */
    PluginSettings,

    /**
     * The Port model constructor.
     * @property {module:model/Port}
     */
    Port,

    /**
     * The Preference model constructor.
     * @property {module:model/Preference}
     */
    Preference,

    /**
     * The PreferenceParams model constructor.
     * @property {module:model/PreferenceParams}
     */
    PreferenceParams,

    /**
     * The Prometheus model constructor.
     * @property {module:model/Prometheus}
     */
    Prometheus,

    /**
     * The ProviderProperties model constructor.
     * @property {module:model/ProviderProperties}
     */
    ProviderProperties,

    /**
     * The RangeMap model constructor.
     * @property {module:model/RangeMap}
     */
    RangeMap,

    /**
     * The RunnerResults model constructor.
     * @property {module:model/RunnerResults}
     */
    RunnerResults,

    /**
     * The RunnerResultsDurationHistogram model constructor.
     * @property {module:model/RunnerResultsDurationHistogram}
     */
    RunnerResultsDurationHistogram,

    /**
     * The RunnerResultsDurationHistogramPercentilesInner model constructor.
     * @property {module:model/RunnerResultsDurationHistogramPercentilesInner}
     */
    RunnerResultsDurationHistogramPercentilesInner,

    /**
     * The Schedule model constructor.
     * @property {module:model/Schedule}
     */
    Schedule,

    /**
     * The SchedulesAPIResponse model constructor.
     * @property {module:model/SchedulesAPIResponse}
     */
    SchedulesAPIResponse,

    /**
     * The SelectedGrafanaConfig model constructor.
     * @property {module:model/SelectedGrafanaConfig}
     */
    SelectedGrafanaConfig,

    /**
     * The SeriesOverride model constructor.
     * @property {module:model/SeriesOverride}
     */
    SeriesOverride,

    /**
     * The Service model constructor.
     * @property {module:model/Service}
     */
    Service,

    /**
     * The ServicePort model constructor.
     * @property {module:model/ServicePort}
     */
    ServicePort,

    /**
     * The ServiceSpec model constructor.
     * @property {module:model/ServiceSpec}
     */
    ServiceSpec,

    /**
     * The ServiceStatus model constructor.
     * @property {module:model/ServiceStatus}
     */
    ServiceStatus,

    /**
     * The ServiceUpdateResponse model constructor.
     * @property {module:model/ServiceUpdateResponse}
     */
    ServiceUpdateResponse,

    /**
     * The SessionAffinityConfig model constructor.
     * @property {module:model/SessionAffinityConfig}
     */
    SessionAffinityConfig,

    /**
     * The Sort model constructor.
     * @property {module:model/Sort}
     */
    Sort,

    /**
     * The SparkLine model constructor.
     * @property {module:model/SparkLine}
     */
    SparkLine,

    /**
     * The StackdriverAlignOption model constructor.
     * @property {module:model/StackdriverAlignOption}
     */
    StackdriverAlignOption,

    /**
     * The StackdriverAlignOptions model constructor.
     * @property {module:model/StackdriverAlignOptions}
     */
    StackdriverAlignOptions,

    /**
     * The SupportedOperation model constructor.
     * @property {module:model/SupportedOperation}
     */
    SupportedOperation,

    /**
     * The Target model constructor.
     * @property {module:model/Target}
     */
    Target,

    /**
     * The TargetBucketAggsInner model constructor.
     * @property {module:model/TargetBucketAggsInner}
     */
    TargetBucketAggsInner,

    /**
     * The TargetBucketAggsInnerSettings model constructor.
     * @property {module:model/TargetBucketAggsInnerSettings}
     */
    TargetBucketAggsInnerSettings,

    /**
     * The TargetGroupInner model constructor.
     * @property {module:model/TargetGroupInner}
     */
    TargetGroupInner,

    /**
     * The TargetMetricsInner model constructor.
     * @property {module:model/TargetMetricsInner}
     */
    TargetMetricsInner,

    /**
     * The TargetWhereInner model constructor.
     * @property {module:model/TargetWhereInner}
     */
    TargetWhereInner,

    /**
     * The Threshold model constructor.
     * @property {module:model/Threshold}
     */
    Threshold,

    /**
     * The Tooltip model constructor.
     * @property {module:model/Tooltip}
     */
    Tooltip,

    /**
     * The UserPrefsExtension model constructor.
     * @property {module:model/UserPrefsExtension}
     */
    UserPrefsExtension,

    /**
     * The ValueMap model constructor.
     * @property {module:model/ValueMap}
     */
    ValueMap,

    /**
     * The Version model constructor.
     * @property {module:model/Version}
     */
    Version,

    /**
     * The Volume model constructor.
     * @property {module:model/Volume}
     */
    Volume,

    /**
     * The VolumeCreateBody model constructor.
     * @property {module:model/VolumeCreateBody}
     */
    VolumeCreateBody,

    /**
     * The VolumeListOKBody model constructor.
     * @property {module:model/VolumeListOKBody}
     */
    VolumeListOKBody,

    /**
     * The VolumeUsageData model constructor.
     * @property {module:model/VolumeUsageData}
     */
    VolumeUsageData,

    /**
    * The ApplicationsAPIApi service constructor.
    * @property {module:api/ApplicationsAPIApi}
    */
    ApplicationsAPIApi,

    /**
    * The FiltersAPIApi service constructor.
    * @property {module:api/FiltersAPIApi}
    */
    FiltersAPIApi,

    /**
    * The GrafanaAPIApi service constructor.
    * @property {module:api/GrafanaAPIApi}
    */
    GrafanaAPIApi,

    /**
    * The PatternsAPIApi service constructor.
    * @property {module:api/PatternsAPIApi}
    */
    PatternsAPIApi,

    /**
    * The PerfAPIApi service constructor.
    * @property {module:api/PerfAPIApi}
    */
    PerfAPIApi,

    /**
    * The PerformanceAPIApi service constructor.
    * @property {module:api/PerformanceAPIApi}
    */
    PerformanceAPIApi,

    /**
    * The PrometheusAPIApi service constructor.
    * @property {module:api/PrometheusAPIApi}
    */
    PrometheusAPIApi,

    /**
    * The ProvidersAPIApi service constructor.
    * @property {module:api/ProvidersAPIApi}
    */
    ProvidersAPIApi,

    /**
    * The SchedulesAPIApi service constructor.
    * @property {module:api/SchedulesAPIApi}
    */
    SchedulesAPIApi,

    /**
    * The SystemAPIApi service constructor.
    * @property {module:api/SystemAPIApi}
    */
    SystemAPIApi,

    /**
    * The UserAPIApi service constructor.
    * @property {module:api/UserAPIApi}
    */
    UserAPIApi
};
