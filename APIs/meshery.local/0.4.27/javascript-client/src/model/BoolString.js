/**
 * Meshery API.
 * the purpose of this application is to provide an application that is using plain go code to define an API  This should demonstrate all the possible comment annotations that are available to turn go code into a fully compliant swagger 2.0 spec
 *
 * The version of the OpenAPI document: 0.4.27
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The BoolString model module.
 * @module model/BoolString
 * @version 0.4.27
 */
class BoolString {
    /**
     * Constructs a new <code>BoolString</code>.
     * @alias module:model/BoolString
     */
    constructor() { 
        
        BoolString.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BoolString</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BoolString} obj Optional instance to populate.
     * @return {module:model/BoolString} The populated <code>BoolString</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BoolString();

            if (data.hasOwnProperty('Flag')) {
                obj['Flag'] = ApiClient.convertToType(data['Flag'], 'Boolean');
            }
            if (data.hasOwnProperty('Value')) {
                obj['Value'] = ApiClient.convertToType(data['Value'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BoolString</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BoolString</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['Value'] && !(typeof data['Value'] === 'string' || data['Value'] instanceof String)) {
            throw new Error("Expected the field `Value` to be a primitive type in the JSON string but got " + data['Value']);
        }

        return true;
    }


}



/**
 * @member {Boolean} Flag
 */
BoolString.prototype['Flag'] = undefined;

/**
 * @member {String} Value
 */
BoolString.prototype['Value'] = undefined;






export default BoolString;

