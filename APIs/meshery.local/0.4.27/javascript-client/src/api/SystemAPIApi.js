/**
 * Meshery API.
 * the purpose of this application is to provide an application that is using plain go code to define an API  This should demonstrate all the possible comment annotations that are available to turn go code into a fully compliant swagger 2.0 spec
 *
 * The version of the OpenAPI document: 0.4.27
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Adapter from '../model/Adapter';
import K8SConfig from '../model/K8SConfig';
import K8SContext from '../model/K8SContext';
import Preference from '../model/Preference';
import Service from '../model/Service';
import Version from '../model/Version';

/**
* SystemAPI service.
* @module api/SystemAPIApi
* @version 0.4.27
*/
export default class SystemAPIApi {

    /**
    * Constructs a new SystemAPIApi. 
    * @alias module:api/SystemAPIApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the idDeleteAdapterConfig operation.
     * @callback module:api/SystemAPIApi~idDeleteAdapterConfigCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Handle DELETE requests to delete adapter config
     * Used to delete adapter configuration
     * @param {Object} opts Optional parameters
     * @param {String} [adapter] 
     * @param {module:api/SystemAPIApi~idDeleteAdapterConfigCallback} callback The callback function, accepting three arguments: error, data, response
     */
    idDeleteAdapterConfig(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'adapter': opts['adapter']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['token'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/system/adapter/manage', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the idDeleteK8SConfig operation.
     * @callback module:api/SystemAPIApi~idDeleteK8SConfigCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Handle DELETE request for Kubernetes Config
     * Used to delete kubernetes config to System
     * @param {module:api/SystemAPIApi~idDeleteK8SConfigCallback} callback The callback function, accepting three arguments: error, data, response
     */
    idDeleteK8SConfig(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['token'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/system/kubernetes', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the idGetKubernetesPing operation.
     * @callback module:api/SystemAPIApi~idGetKubernetesPingCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Handle GET request for Kubernetes ping
     * Fetches server version to simulate ping
     * @param {module:api/SystemAPIApi~idGetKubernetesPingCallback} callback The callback function, accepting three arguments: error, data, response
     */
    idGetKubernetesPing(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['token'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/system/kubernetes/ping', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the idGetSystemAdapters operation.
     * @callback module:api/SystemAPIApi~idGetSystemAdaptersCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/Adapter>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Handle GET request for adapters
     * Fetches and returns all the adapters and ping adapters
     * @param {Object} opts Optional parameters
     * @param {String} [adapter] 
     * @param {module:api/SystemAPIApi~idGetSystemAdaptersCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/Adapter>}
     */
    idGetSystemAdapters(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'adapter': opts['adapter']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [Adapter];
      return this.apiClient.callApi(
        '/api/system/adapters', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the idGetSystemVersion operation.
     * @callback module:api/SystemAPIApi~idGetSystemVersionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Version} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Handle GET request for system/server version
     * Returns the running Meshery version
     * @param {module:api/SystemAPIApi~idGetSystemVersionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Version}
     */
    idGetSystemVersion(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Version;
      return this.apiClient.callApi(
        '/api/system/version', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the idMeshSyncGrafana operation.
     * @callback module:api/SystemAPIApi~idMeshSyncGrafanaCallback
     * @param {String} error Error message, if any.
     * @param {Object.<String, {String: [Service]}>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Handle GET request for mesh-sync grafana
     * Fetches Prometheus and Grafana
     * @param {module:api/SystemAPIApi~idMeshSyncGrafanaCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object.<String, {String: [Service]}>}
     */
    idMeshSyncGrafana(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = {'String': [Service]};
      return this.apiClient.callApi(
        '/api/system/meshsync/grafana', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the idMeshSyncPrometheus operation.
     * @callback module:api/SystemAPIApi~idMeshSyncPrometheusCallback
     * @param {String} error Error message, if any.
     * @param {Object.<String, {String: [Service]}>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Handle GET request for fetching prometheus
     * Fetches Prometheus
     * @param {module:api/SystemAPIApi~idMeshSyncPrometheusCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object.<String, {String: [Service]}>}
     */
    idMeshSyncPrometheus(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = {'String': [Service]};
      return this.apiClient.callApi(
        '/api/system/meshsync/prometheus', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the idPostAdapterConfig operation.
     * @callback module:api/SystemAPIApi~idPostAdapterConfigCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/Adapter>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Handle POST requests to persist adapter config
     * Used to persist adapter config
     * @param {Object} opts Optional parameters
     * @param {String} [body] 
     * @param {module:api/SystemAPIApi~idPostAdapterConfigCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/Adapter>}
     */
    idPostAdapterConfig(opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['token'];
      let contentTypes = ['application/json', 'multipart/form-data'];
      let accepts = ['application/json'];
      let returnType = [Adapter];
      return this.apiClient.callApi(
        '/api/system/adapter/manage', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the idPostAdapterOperation operation.
     * @callback module:api/SystemAPIApi~idPostAdapterOperationCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Handle POST requests for Adapter Operations
     * Used to send operations to the adapters
     * @param {Object} opts Optional parameters
     * @param {String} [adapter] 
     * @param {String} [query] 
     * @param {String} [customBody] 
     * @param {String} [namespace] 
     * @param {String} [deleteOp] 
     * @param {module:api/SystemAPIApi~idPostAdapterOperationCallback} callback The callback function, accepting three arguments: error, data, response
     */
    idPostAdapterOperation(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'adapter': opts['adapter'],
        'query': opts['query'],
        'customBody': opts['customBody'],
        'namespace': opts['namespace'],
        'deleteOp': opts['deleteOp']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['token'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/system/adapter/operation', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the idPostK8SConfig operation.
     * @callback module:api/SystemAPIApi~idPostK8SConfigCallback
     * @param {String} error Error message, if any.
     * @param {module:model/K8SConfig} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Handle POST request for Kubernetes Config
     * Used to add kubernetes config to System
     * @param {module:api/SystemAPIApi~idPostK8SConfigCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/K8SConfig}
     */
    idPostK8SConfig(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = K8SConfig;
      return this.apiClient.callApi(
        '/api/system/kubernetes', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the idPostK8SContexts operation.
     * @callback module:api/SystemAPIApi~idPostK8SContextsCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/K8SContext>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Handle POST requests for Kubernetes Context list
     * Returns the context list for a given k8s config
     * @param {module:api/SystemAPIApi~idPostK8SContextsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/K8SContext>}
     */
    idPostK8SContexts(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [K8SContext];
      return this.apiClient.callApi(
        '/api/system/kubernetes/contexts', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the idSystemSync operation.
     * @callback module:api/SystemAPIApi~idSystemSyncCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Preference} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Handle GET request for config sync
     * Used to send session data to the UI for initial sync
     * @param {module:api/SystemAPIApi~idSystemSyncCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Preference}
     */
    idSystemSync(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Preference;
      return this.apiClient.callApi(
        '/api/system/sync', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
