/**
 * Meshery API.
 * the purpose of this application is to provide an application that is using plain go code to define an API  This should demonstrate all the possible comment annotations that are available to turn go code into a fully compliant swagger 2.0 spec
 *
 * The version of the OpenAPI document: 0.4.27
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ApplicationsAPIResponse from '../model/ApplicationsAPIResponse';
import MesheryApplication from '../model/MesheryApplication';

/**
* ApplicationsAPI service.
* @module api/ApplicationsAPIApi
* @version 0.4.27
*/
export default class ApplicationsAPIApi {

    /**
    * Constructs a new ApplicationsAPIApi. 
    * @alias module:api/ApplicationsAPIApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the idDeleteApplicationFile operation.
     * @callback module:api/ApplicationsAPIApi~idDeleteApplicationFileCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Handle DELETE request for Application File Deploy
     * Delete a deployed application file with the request
     * @param {module:api/ApplicationsAPIApi~idDeleteApplicationFileCallback} callback The callback function, accepting three arguments: error, data, response
     */
    idDeleteApplicationFile(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['token'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/application/deploy', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the idDeleteMesheryApplicationFile operation.
     * @callback module:api/ApplicationsAPIApi~idDeleteMesheryApplicationFileCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Handle Delete for a Meshery Application File
     * Deletes a meshery application file with ID: id
     * @param {String} id id for a specific
     * @param {module:api/ApplicationsAPIApi~idDeleteMesheryApplicationFileCallback} callback The callback function, accepting three arguments: error, data, response
     */
    idDeleteMesheryApplicationFile(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling idDeleteMesheryApplicationFile");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['token'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/application/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the idGetApplicationFileRequest operation.
     * @callback module:api/ApplicationsAPIApi~idGetApplicationFileRequestCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApplicationsAPIResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Handle GET request for Application Files
     * Returns requests for all Meshery Applications
     * @param {module:api/ApplicationsAPIApi~idGetApplicationFileRequestCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApplicationsAPIResponse}
     */
    idGetApplicationFileRequest(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ApplicationsAPIResponse;
      return this.apiClient.callApi(
        '/api/application/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the idGetMesheryApplication operation.
     * @callback module:api/ApplicationsAPIApi~idGetMesheryApplicationCallback
     * @param {String} error Error message, if any.
     * @param {module:model/MesheryApplication} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Handle GET request for Meshery Application with the given id
     * Fetches the list of all applications saved by the current user
     * @param {String} id id for a specific
     * @param {module:api/ApplicationsAPIApi~idGetMesheryApplicationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/MesheryApplication}
     */
    idGetMesheryApplication(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling idGetMesheryApplication");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = MesheryApplication;
      return this.apiClient.callApi(
        '/api/application/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the idPostApplicationFileRequest operation.
     * @callback module:api/ApplicationsAPIApi~idPostApplicationFileRequestCallback
     * @param {String} error Error message, if any.
     * @param {module:model/MesheryApplication} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Handle POST request for Application Files
     * Save attached Meshery Application File
     * @param {module:api/ApplicationsAPIApi~idPostApplicationFileRequestCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/MesheryApplication}
     */
    idPostApplicationFileRequest(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = MesheryApplication;
      return this.apiClient.callApi(
        '/api/application/', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the idPostDeployApplicationFile operation.
     * @callback module:api/ApplicationsAPIApi~idPostDeployApplicationFileCallback
     * @param {String} error Error message, if any.
     * @param {module:model/MesheryApplication} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Handle POST request for Application File Deploy
     * Deploy an attached application file with the request
     * @param {Object} opts Optional parameters
     * @param {File} [uploadYamlYmlFile] 
     * @param {module:api/ApplicationsAPIApi~idPostDeployApplicationFileCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/MesheryApplication}
     */
    idPostDeployApplicationFile(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'Upload Yaml/Yml File': opts['uploadYamlYmlFile']
      };

      let authNames = ['token'];
      let contentTypes = ['multipart/form-data'];
      let accepts = ['application/json'];
      let returnType = MesheryApplication;
      return this.apiClient.callApi(
        '/api/application/deploy', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
