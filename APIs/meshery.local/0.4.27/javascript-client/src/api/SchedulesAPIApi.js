/**
 * Meshery API.
 * the purpose of this application is to provide an application that is using plain go code to define an API  This should demonstrate all the possible comment annotations that are available to turn go code into a fully compliant swagger 2.0 spec
 *
 * The version of the OpenAPI document: 0.4.27
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Schedule from '../model/Schedule';
import SchedulesAPIResponse from '../model/SchedulesAPIResponse';

/**
* SchedulesAPI service.
* @module api/SchedulesAPIApi
* @version 0.4.27
*/
export default class SchedulesAPIApi {

    /**
    * Constructs a new SchedulesAPIApi. 
    * @alias module:api/SchedulesAPIApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the idDeleteSchedules operation.
     * @callback module:api/SchedulesAPIApi~idDeleteSchedulesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SchedulesAPIResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Handle DELETE reqeuest for Schedules
     * Deletes a schedule with the given id
     * @param {String} id id for a specific
     * @param {module:api/SchedulesAPIApi~idDeleteSchedulesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SchedulesAPIResponse}
     */
    idDeleteSchedules(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling idDeleteSchedules");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = SchedulesAPIResponse;
      return this.apiClient.callApi(
        '/api/user/schedules/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the idGetSchedules operation.
     * @callback module:api/SchedulesAPIApi~idGetSchedulesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SchedulesAPIResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Handle GET reqeuest for Schedules
     * Returns the list of all the schedules saved by the current user
     * @param {module:api/SchedulesAPIApi~idGetSchedulesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SchedulesAPIResponse}
     */
    idGetSchedules(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = SchedulesAPIResponse;
      return this.apiClient.callApi(
        '/api/user/schedules', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the idGetSingleSchedule operation.
     * @callback module:api/SchedulesAPIApi~idGetSingleScheduleCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Schedule} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Handle GET reqeuest for Schedules
     * Fetches and returns the schedule with the given id
     * @param {String} id id for a specific
     * @param {module:api/SchedulesAPIApi~idGetSingleScheduleCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Schedule}
     */
    idGetSingleSchedule(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling idGetSingleSchedule");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Schedule;
      return this.apiClient.callApi(
        '/api/user/schedules/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the idPostSchedules operation.
     * @callback module:api/SchedulesAPIApi~idPostSchedulesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Schedule} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Handle POST reqeuest for Schedules
     * Save schedule using the current provider's persistence mechanism
     * @param {module:api/SchedulesAPIApi~idPostSchedulesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Schedule}
     */
    idPostSchedules(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Schedule;
      return this.apiClient.callApi(
        '/api/user/schedules', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
