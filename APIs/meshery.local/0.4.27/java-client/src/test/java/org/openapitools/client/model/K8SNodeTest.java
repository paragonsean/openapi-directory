/*
 * Meshery API.
 * the purpose of this application is to provide an application that is using plain go code to define an API  This should demonstrate all the possible comment annotations that are available to turn go code into a fully compliant swagger 2.0 spec
 *
 * The version of the OpenAPI document: 0.4.27
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for K8SNode
 */
public class K8SNodeTest {
    private final K8SNode model = new K8SNode();

    /**
     * Model tests for K8SNode
     */
    @Test
    public void testK8SNode() {
        // TODO: test K8SNode
    }

    /**
     * Test the property 'allocatableCpu'
     */
    @Test
    public void allocatableCpuTest() {
        // TODO: test allocatableCpu
    }

    /**
     * Test the property 'allocatableMemory'
     */
    @Test
    public void allocatableMemoryTest() {
        // TODO: test allocatableMemory
    }

    /**
     * Test the property 'architecture'
     */
    @Test
    public void architectureTest() {
        // TODO: test architecture
    }

    /**
     * Test the property 'capacityCpu'
     */
    @Test
    public void capacityCpuTest() {
        // TODO: test capacityCpu
    }

    /**
     * Test the property 'capacityMemory'
     */
    @Test
    public void capacityMemoryTest() {
        // TODO: test capacityMemory
    }

    /**
     * Test the property 'containerRuntimeVersion'
     */
    @Test
    public void containerRuntimeVersionTest() {
        // TODO: test containerRuntimeVersion
    }

    /**
     * Test the property 'hostname'
     */
    @Test
    public void hostnameTest() {
        // TODO: test hostname
    }

    /**
     * Test the property 'internalIp'
     */
    @Test
    public void internalIpTest() {
        // TODO: test internalIp
    }

    /**
     * Test the property 'kubeletVersion'
     */
    @Test
    public void kubeletVersionTest() {
        // TODO: test kubeletVersion
    }

    /**
     * Test the property 'kubeproxyVersion'
     */
    @Test
    public void kubeproxyVersionTest() {
        // TODO: test kubeproxyVersion
    }

    /**
     * Test the property 'operatingSystem'
     */
    @Test
    public void operatingSystemTest() {
        // TODO: test operatingSystem
    }

    /**
     * Test the property 'osImage'
     */
    @Test
    public void osImageTest() {
        // TODO: test osImage
    }

}
