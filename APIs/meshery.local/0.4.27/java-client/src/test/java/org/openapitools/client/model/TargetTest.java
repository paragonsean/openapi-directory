/*
 * Meshery API.
 * the purpose of this application is to provide an application that is using plain go code to define an API  This should demonstrate all the possible comment annotations that are available to turn go code into a fully compliant swagger 2.0 spec
 *
 * The version of the OpenAPI document: 0.4.27
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.StackdriverAlignOptions;
import org.openapitools.client.model.TargetBucketAggsInner;
import org.openapitools.client.model.TargetGroupInner;
import org.openapitools.client.model.TargetMetricsInner;
import org.openapitools.client.model.TargetWhereInner;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Target
 */
public class TargetTest {
    private final Target model = new Target();

    /**
     * Model tests for Target
     */
    @Test
    public void testTarget() {
        // TODO: test Target
    }

    /**
     * Test the property 'alias'
     */
    @Test
    public void aliasTest() {
        // TODO: test alias
    }

    /**
     * Test the property 'aliasBy'
     */
    @Test
    public void aliasByTest() {
        // TODO: test aliasBy
    }

    /**
     * Test the property 'alignOptions'
     */
    @Test
    public void alignOptionsTest() {
        // TODO: test alignOptions
    }

    /**
     * Test the property 'alignmentPeriod'
     */
    @Test
    public void alignmentPeriodTest() {
        // TODO: test alignmentPeriod
    }

    /**
     * Test the property 'bucketAggs'
     */
    @Test
    public void bucketAggsTest() {
        // TODO: test bucketAggs
    }

    /**
     * Test the property 'crossSeriesReducer'
     */
    @Test
    public void crossSeriesReducerTest() {
        // TODO: test crossSeriesReducer
    }

    /**
     * Test the property 'datasource'
     */
    @Test
    public void datasourceTest() {
        // TODO: test datasource
    }

    /**
     * Test the property 'dimensions'
     */
    @Test
    public void dimensionsTest() {
        // TODO: test dimensions
    }

    /**
     * Test the property 'dsType'
     */
    @Test
    public void dsTypeTest() {
        // TODO: test dsType
    }

    /**
     * Test the property 'expr'
     */
    @Test
    public void exprTest() {
        // TODO: test expr
    }

    /**
     * Test the property 'filters'
     */
    @Test
    public void filtersTest() {
        // TODO: test filters
    }

    /**
     * Test the property 'format'
     */
    @Test
    public void formatTest() {
        // TODO: test format
    }

    /**
     * Test the property 'group'
     */
    @Test
    public void groupTest() {
        // TODO: test group
    }

    /**
     * Test the property 'groupBys'
     */
    @Test
    public void groupBysTest() {
        // TODO: test groupBys
    }

    /**
     * Test the property 'hide'
     */
    @Test
    public void hideTest() {
        // TODO: test hide
    }

    /**
     * Test the property 'instant'
     */
    @Test
    public void instantTest() {
        // TODO: test instant
    }

    /**
     * Test the property 'interval'
     */
    @Test
    public void intervalTest() {
        // TODO: test interval
    }

    /**
     * Test the property 'intervalFactor'
     */
    @Test
    public void intervalFactorTest() {
        // TODO: test intervalFactor
    }

    /**
     * Test the property 'legendFormat'
     */
    @Test
    public void legendFormatTest() {
        // TODO: test legendFormat
    }

    /**
     * Test the property 'measurement'
     */
    @Test
    public void measurementTest() {
        // TODO: test measurement
    }

    /**
     * Test the property 'metricColumn'
     */
    @Test
    public void metricColumnTest() {
        // TODO: test metricColumn
    }

    /**
     * Test the property 'metricKind'
     */
    @Test
    public void metricKindTest() {
        // TODO: test metricKind
    }

    /**
     * Test the property 'metricName'
     */
    @Test
    public void metricNameTest() {
        // TODO: test metricName
    }

    /**
     * Test the property 'metricType'
     */
    @Test
    public void metricTypeTest() {
        // TODO: test metricType
    }

    /**
     * Test the property 'metrics'
     */
    @Test
    public void metricsTest() {
        // TODO: test metrics
    }

    /**
     * Test the property 'namespace'
     */
    @Test
    public void namespaceTest() {
        // TODO: test namespace
    }

    /**
     * Test the property 'perSeriesAligner'
     */
    @Test
    public void perSeriesAlignerTest() {
        // TODO: test perSeriesAligner
    }

    /**
     * Test the property 'period'
     */
    @Test
    public void periodTest() {
        // TODO: test period
    }

    /**
     * Test the property 'projectName'
     */
    @Test
    public void projectNameTest() {
        // TODO: test projectName
    }

    /**
     * Test the property 'query'
     */
    @Test
    public void queryTest() {
        // TODO: test query
    }

    /**
     * Test the property 'rawQuery'
     */
    @Test
    public void rawQueryTest() {
        // TODO: test rawQuery
    }

    /**
     * Test the property 'rawSql'
     */
    @Test
    public void rawSqlTest() {
        // TODO: test rawSql
    }

    /**
     * Test the property 'refId'
     */
    @Test
    public void refIdTest() {
        // TODO: test refId
    }

    /**
     * Test the property 'region'
     */
    @Test
    public void regionTest() {
        // TODO: test region
    }

    /**
     * Test the property 'select'
     */
    @Test
    public void selectTest() {
        // TODO: test select
    }

    /**
     * Test the property 'statistics'
     */
    @Test
    public void statisticsTest() {
        // TODO: test statistics
    }

    /**
     * Test the property 'step'
     */
    @Test
    public void stepTest() {
        // TODO: test step
    }

    /**
     * Test the property 'table'
     */
    @Test
    public void tableTest() {
        // TODO: test table
    }

    /**
     * Test the property 'target'
     */
    @Test
    public void targetTest() {
        // TODO: test target
    }

    /**
     * Test the property 'timeColumn'
     */
    @Test
    public void timeColumnTest() {
        // TODO: test timeColumn
    }

    /**
     * Test the property 'timeField'
     */
    @Test
    public void timeFieldTest() {
        // TODO: test timeField
    }

    /**
     * Test the property 'valueType'
     */
    @Test
    public void valueTypeTest() {
        // TODO: test valueType
    }

    /**
     * Test the property 'where'
     */
    @Test
    public void whereTest() {
        // TODO: test where
    }

}
