/*
 * Meshery API.
 * the purpose of this application is to provide an application that is using plain go code to define an API  This should demonstrate all the possible comment annotations that are available to turn go code into a fully compliant swagger 2.0 spec
 *
 * The version of the OpenAPI document: 0.4.27
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.ServicePort;
import org.openapitools.client.model.SessionAffinityConfig;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ServiceSpec
 */
public class ServiceSpecTest {
    private final ServiceSpec model = new ServiceSpec();

    /**
     * Model tests for ServiceSpec
     */
    @Test
    public void testServiceSpec() {
        // TODO: test ServiceSpec
    }

    /**
     * Test the property 'clusterIP'
     */
    @Test
    public void clusterIPTest() {
        // TODO: test clusterIP
    }

    /**
     * Test the property 'externalIPs'
     */
    @Test
    public void externalIPsTest() {
        // TODO: test externalIPs
    }

    /**
     * Test the property 'externalName'
     */
    @Test
    public void externalNameTest() {
        // TODO: test externalName
    }

    /**
     * Test the property 'externalTrafficPolicy'
     */
    @Test
    public void externalTrafficPolicyTest() {
        // TODO: test externalTrafficPolicy
    }

    /**
     * Test the property 'healthCheckNodePort'
     */
    @Test
    public void healthCheckNodePortTest() {
        // TODO: test healthCheckNodePort
    }

    /**
     * Test the property 'ipFamily'
     */
    @Test
    public void ipFamilyTest() {
        // TODO: test ipFamily
    }

    /**
     * Test the property 'loadBalancerIP'
     */
    @Test
    public void loadBalancerIPTest() {
        // TODO: test loadBalancerIP
    }

    /**
     * Test the property 'loadBalancerSourceRanges'
     */
    @Test
    public void loadBalancerSourceRangesTest() {
        // TODO: test loadBalancerSourceRanges
    }

    /**
     * Test the property 'ports'
     */
    @Test
    public void portsTest() {
        // TODO: test ports
    }

    /**
     * Test the property 'publishNotReadyAddresses'
     */
    @Test
    public void publishNotReadyAddressesTest() {
        // TODO: test publishNotReadyAddresses
    }

    /**
     * Test the property 'selector'
     */
    @Test
    public void selectorTest() {
        // TODO: test selector
    }

    /**
     * Test the property 'sessionAffinity'
     */
    @Test
    public void sessionAffinityTest() {
        // TODO: test sessionAffinity
    }

    /**
     * Test the property 'sessionAffinityConfig'
     */
    @Test
    public void sessionAffinityConfigTest() {
        // TODO: test sessionAffinityConfig
    }

    /**
     * Test the property 'topologyKeys'
     */
    @Test
    public void topologyKeysTest() {
        // TODO: test topologyKeys
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

}
