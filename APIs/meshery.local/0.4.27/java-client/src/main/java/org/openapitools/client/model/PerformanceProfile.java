/*
 * Meshery API.
 * the purpose of this application is to provide an application that is using plain go code to define an API  This should demonstrate all the possible comment annotations that are available to turn go code into a fully compliant swagger 2.0 spec
 *
 * The version of the OpenAPI document: 0.4.27
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * PerformanceProfile represents the performance profile that needs to be saved
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T09:59:51.881749-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class PerformanceProfile {
  public static final String SERIALIZED_NAME_CONCURRENT_REQUEST = "concurrent_request";
  @SerializedName(SERIALIZED_NAME_CONCURRENT_REQUEST)
  private Long concurrentRequest;

  public static final String SERIALIZED_NAME_CONTENT_TYPE = "content_type";
  @SerializedName(SERIALIZED_NAME_CONTENT_TYPE)
  private String contentType;

  public static final String SERIALIZED_NAME_CREATED_AT = "created_at";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private Object createdAt;

  public static final String SERIALIZED_NAME_DURATION = "duration";
  @SerializedName(SERIALIZED_NAME_DURATION)
  private String duration;

  public static final String SERIALIZED_NAME_ENDPOINTS = "endpoints";
  @SerializedName(SERIALIZED_NAME_ENDPOINTS)
  private List<String> endpoints = new ArrayList<>();

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private List<Integer> id = new ArrayList<>();

  public static final String SERIALIZED_NAME_LAST_RUN = "last_run";
  @SerializedName(SERIALIZED_NAME_LAST_RUN)
  private Object lastRun;

  public static final String SERIALIZED_NAME_LOAD_GENERATORS = "load_generators";
  @SerializedName(SERIALIZED_NAME_LOAD_GENERATORS)
  private List<String> loadGenerators = new ArrayList<>();

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_QPS = "qps";
  @SerializedName(SERIALIZED_NAME_QPS)
  private Long qps;

  public static final String SERIALIZED_NAME_REQUEST_BODY = "request_body";
  @SerializedName(SERIALIZED_NAME_REQUEST_BODY)
  private String requestBody;

  public static final String SERIALIZED_NAME_REQUEST_COOKIES = "request_cookies";
  @SerializedName(SERIALIZED_NAME_REQUEST_COOKIES)
  private String requestCookies;

  public static final String SERIALIZED_NAME_REQUEST_HEADERS = "request_headers";
  @SerializedName(SERIALIZED_NAME_REQUEST_HEADERS)
  private String requestHeaders;

  public static final String SERIALIZED_NAME_SCHEDULE = "schedule";
  @SerializedName(SERIALIZED_NAME_SCHEDULE)
  private List<Integer> schedule = new ArrayList<>();

  public static final String SERIALIZED_NAME_SERVICE_MESH = "service_mesh";
  @SerializedName(SERIALIZED_NAME_SERVICE_MESH)
  private String serviceMesh;

  public static final String SERIALIZED_NAME_TOTAL_RESULTS = "total_results";
  @SerializedName(SERIALIZED_NAME_TOTAL_RESULTS)
  private Long totalResults;

  public static final String SERIALIZED_NAME_UPDATED_AT = "updated_at";
  @SerializedName(SERIALIZED_NAME_UPDATED_AT)
  private Object updatedAt;

  public PerformanceProfile() {
  }

  public PerformanceProfile concurrentRequest(Long concurrentRequest) {
    this.concurrentRequest = concurrentRequest;
    return this;
  }

  /**
   * Get concurrentRequest
   * @return concurrentRequest
   */
  @javax.annotation.Nullable
  public Long getConcurrentRequest() {
    return concurrentRequest;
  }

  public void setConcurrentRequest(Long concurrentRequest) {
    this.concurrentRequest = concurrentRequest;
  }


  public PerformanceProfile contentType(String contentType) {
    this.contentType = contentType;
    return this;
  }

  /**
   * Get contentType
   * @return contentType
   */
  @javax.annotation.Nullable
  public String getContentType() {
    return contentType;
  }

  public void setContentType(String contentType) {
    this.contentType = contentType;
  }


  public PerformanceProfile createdAt(Object createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * +protobuf.options.marshal&#x3D;false +protobuf.as&#x3D;Timestamp +protobuf.options.(gogoproto.goproto_stringer)&#x3D;false
   * @return createdAt
   */
  @javax.annotation.Nullable
  public Object getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(Object createdAt) {
    this.createdAt = createdAt;
  }


  public PerformanceProfile duration(String duration) {
    this.duration = duration;
    return this;
  }

  /**
   * Get duration
   * @return duration
   */
  @javax.annotation.Nullable
  public String getDuration() {
    return duration;
  }

  public void setDuration(String duration) {
    this.duration = duration;
  }


  public PerformanceProfile endpoints(List<String> endpoints) {
    this.endpoints = endpoints;
    return this;
  }

  public PerformanceProfile addEndpointsItem(String endpointsItem) {
    if (this.endpoints == null) {
      this.endpoints = new ArrayList<>();
    }
    this.endpoints.add(endpointsItem);
    return this;
  }

  /**
   * Get endpoints
   * @return endpoints
   */
  @javax.annotation.Nullable
  public List<String> getEndpoints() {
    return endpoints;
  }

  public void setEndpoints(List<String> endpoints) {
    this.endpoints = endpoints;
  }


  public PerformanceProfile id(List<Integer> id) {
    this.id = id;
    return this;
  }

  public PerformanceProfile addIdItem(Integer idItem) {
    if (this.id == null) {
      this.id = new ArrayList<>();
    }
    this.id.add(idItem);
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public List<Integer> getId() {
    return id;
  }

  public void setId(List<Integer> id) {
    this.id = id;
  }


  public PerformanceProfile lastRun(Object lastRun) {
    this.lastRun = lastRun;
    return this;
  }

  /**
   * +protobuf.options.marshal&#x3D;false +protobuf.as&#x3D;Timestamp +protobuf.options.(gogoproto.goproto_stringer)&#x3D;false
   * @return lastRun
   */
  @javax.annotation.Nullable
  public Object getLastRun() {
    return lastRun;
  }

  public void setLastRun(Object lastRun) {
    this.lastRun = lastRun;
  }


  public PerformanceProfile loadGenerators(List<String> loadGenerators) {
    this.loadGenerators = loadGenerators;
    return this;
  }

  public PerformanceProfile addLoadGeneratorsItem(String loadGeneratorsItem) {
    if (this.loadGenerators == null) {
      this.loadGenerators = new ArrayList<>();
    }
    this.loadGenerators.add(loadGeneratorsItem);
    return this;
  }

  /**
   * Get loadGenerators
   * @return loadGenerators
   */
  @javax.annotation.Nullable
  public List<String> getLoadGenerators() {
    return loadGenerators;
  }

  public void setLoadGenerators(List<String> loadGenerators) {
    this.loadGenerators = loadGenerators;
  }


  public PerformanceProfile name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public PerformanceProfile qps(Long qps) {
    this.qps = qps;
    return this;
  }

  /**
   * Get qps
   * @return qps
   */
  @javax.annotation.Nullable
  public Long getQps() {
    return qps;
  }

  public void setQps(Long qps) {
    this.qps = qps;
  }


  public PerformanceProfile requestBody(String requestBody) {
    this.requestBody = requestBody;
    return this;
  }

  /**
   * Get requestBody
   * @return requestBody
   */
  @javax.annotation.Nullable
  public String getRequestBody() {
    return requestBody;
  }

  public void setRequestBody(String requestBody) {
    this.requestBody = requestBody;
  }


  public PerformanceProfile requestCookies(String requestCookies) {
    this.requestCookies = requestCookies;
    return this;
  }

  /**
   * Get requestCookies
   * @return requestCookies
   */
  @javax.annotation.Nullable
  public String getRequestCookies() {
    return requestCookies;
  }

  public void setRequestCookies(String requestCookies) {
    this.requestCookies = requestCookies;
  }


  public PerformanceProfile requestHeaders(String requestHeaders) {
    this.requestHeaders = requestHeaders;
    return this;
  }

  /**
   * Get requestHeaders
   * @return requestHeaders
   */
  @javax.annotation.Nullable
  public String getRequestHeaders() {
    return requestHeaders;
  }

  public void setRequestHeaders(String requestHeaders) {
    this.requestHeaders = requestHeaders;
  }


  public PerformanceProfile schedule(List<Integer> schedule) {
    this.schedule = schedule;
    return this;
  }

  public PerformanceProfile addScheduleItem(Integer scheduleItem) {
    if (this.schedule == null) {
      this.schedule = new ArrayList<>();
    }
    this.schedule.add(scheduleItem);
    return this;
  }

  /**
   * Get schedule
   * @return schedule
   */
  @javax.annotation.Nullable
  public List<Integer> getSchedule() {
    return schedule;
  }

  public void setSchedule(List<Integer> schedule) {
    this.schedule = schedule;
  }


  public PerformanceProfile serviceMesh(String serviceMesh) {
    this.serviceMesh = serviceMesh;
    return this;
  }

  /**
   * Get serviceMesh
   * @return serviceMesh
   */
  @javax.annotation.Nullable
  public String getServiceMesh() {
    return serviceMesh;
  }

  public void setServiceMesh(String serviceMesh) {
    this.serviceMesh = serviceMesh;
  }


  public PerformanceProfile totalResults(Long totalResults) {
    this.totalResults = totalResults;
    return this;
  }

  /**
   * Get totalResults
   * @return totalResults
   */
  @javax.annotation.Nullable
  public Long getTotalResults() {
    return totalResults;
  }

  public void setTotalResults(Long totalResults) {
    this.totalResults = totalResults;
  }


  public PerformanceProfile updatedAt(Object updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

  /**
   * +protobuf.options.marshal&#x3D;false +protobuf.as&#x3D;Timestamp +protobuf.options.(gogoproto.goproto_stringer)&#x3D;false
   * @return updatedAt
   */
  @javax.annotation.Nullable
  public Object getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(Object updatedAt) {
    this.updatedAt = updatedAt;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PerformanceProfile performanceProfile = (PerformanceProfile) o;
    return Objects.equals(this.concurrentRequest, performanceProfile.concurrentRequest) &&
        Objects.equals(this.contentType, performanceProfile.contentType) &&
        Objects.equals(this.createdAt, performanceProfile.createdAt) &&
        Objects.equals(this.duration, performanceProfile.duration) &&
        Objects.equals(this.endpoints, performanceProfile.endpoints) &&
        Objects.equals(this.id, performanceProfile.id) &&
        Objects.equals(this.lastRun, performanceProfile.lastRun) &&
        Objects.equals(this.loadGenerators, performanceProfile.loadGenerators) &&
        Objects.equals(this.name, performanceProfile.name) &&
        Objects.equals(this.qps, performanceProfile.qps) &&
        Objects.equals(this.requestBody, performanceProfile.requestBody) &&
        Objects.equals(this.requestCookies, performanceProfile.requestCookies) &&
        Objects.equals(this.requestHeaders, performanceProfile.requestHeaders) &&
        Objects.equals(this.schedule, performanceProfile.schedule) &&
        Objects.equals(this.serviceMesh, performanceProfile.serviceMesh) &&
        Objects.equals(this.totalResults, performanceProfile.totalResults) &&
        Objects.equals(this.updatedAt, performanceProfile.updatedAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(concurrentRequest, contentType, createdAt, duration, endpoints, id, lastRun, loadGenerators, name, qps, requestBody, requestCookies, requestHeaders, schedule, serviceMesh, totalResults, updatedAt);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PerformanceProfile {\n");
    sb.append("    concurrentRequest: ").append(toIndentedString(concurrentRequest)).append("\n");
    sb.append("    contentType: ").append(toIndentedString(contentType)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("    endpoints: ").append(toIndentedString(endpoints)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    lastRun: ").append(toIndentedString(lastRun)).append("\n");
    sb.append("    loadGenerators: ").append(toIndentedString(loadGenerators)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    qps: ").append(toIndentedString(qps)).append("\n");
    sb.append("    requestBody: ").append(toIndentedString(requestBody)).append("\n");
    sb.append("    requestCookies: ").append(toIndentedString(requestCookies)).append("\n");
    sb.append("    requestHeaders: ").append(toIndentedString(requestHeaders)).append("\n");
    sb.append("    schedule: ").append(toIndentedString(schedule)).append("\n");
    sb.append("    serviceMesh: ").append(toIndentedString(serviceMesh)).append("\n");
    sb.append("    totalResults: ").append(toIndentedString(totalResults)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("concurrent_request");
    openapiFields.add("content_type");
    openapiFields.add("created_at");
    openapiFields.add("duration");
    openapiFields.add("endpoints");
    openapiFields.add("id");
    openapiFields.add("last_run");
    openapiFields.add("load_generators");
    openapiFields.add("name");
    openapiFields.add("qps");
    openapiFields.add("request_body");
    openapiFields.add("request_cookies");
    openapiFields.add("request_headers");
    openapiFields.add("schedule");
    openapiFields.add("service_mesh");
    openapiFields.add("total_results");
    openapiFields.add("updated_at");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to PerformanceProfile
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!PerformanceProfile.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PerformanceProfile is not found in the empty JSON string", PerformanceProfile.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!PerformanceProfile.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PerformanceProfile` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("content_type") != null && !jsonObj.get("content_type").isJsonNull()) && !jsonObj.get("content_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `content_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("content_type").toString()));
      }
      if ((jsonObj.get("duration") != null && !jsonObj.get("duration").isJsonNull()) && !jsonObj.get("duration").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `duration` to be a primitive type in the JSON string but got `%s`", jsonObj.get("duration").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("endpoints") != null && !jsonObj.get("endpoints").isJsonNull() && !jsonObj.get("endpoints").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `endpoints` to be an array in the JSON string but got `%s`", jsonObj.get("endpoints").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull() && !jsonObj.get("id").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be an array in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("load_generators") != null && !jsonObj.get("load_generators").isJsonNull() && !jsonObj.get("load_generators").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `load_generators` to be an array in the JSON string but got `%s`", jsonObj.get("load_generators").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("request_body") != null && !jsonObj.get("request_body").isJsonNull()) && !jsonObj.get("request_body").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `request_body` to be a primitive type in the JSON string but got `%s`", jsonObj.get("request_body").toString()));
      }
      if ((jsonObj.get("request_cookies") != null && !jsonObj.get("request_cookies").isJsonNull()) && !jsonObj.get("request_cookies").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `request_cookies` to be a primitive type in the JSON string but got `%s`", jsonObj.get("request_cookies").toString()));
      }
      if ((jsonObj.get("request_headers") != null && !jsonObj.get("request_headers").isJsonNull()) && !jsonObj.get("request_headers").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `request_headers` to be a primitive type in the JSON string but got `%s`", jsonObj.get("request_headers").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("schedule") != null && !jsonObj.get("schedule").isJsonNull() && !jsonObj.get("schedule").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `schedule` to be an array in the JSON string but got `%s`", jsonObj.get("schedule").toString()));
      }
      if ((jsonObj.get("service_mesh") != null && !jsonObj.get("service_mesh").isJsonNull()) && !jsonObj.get("service_mesh").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `service_mesh` to be a primitive type in the JSON string but got `%s`", jsonObj.get("service_mesh").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PerformanceProfile.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PerformanceProfile' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PerformanceProfile> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PerformanceProfile.class));

       return (TypeAdapter<T>) new TypeAdapter<PerformanceProfile>() {
           @Override
           public void write(JsonWriter out, PerformanceProfile value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PerformanceProfile read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of PerformanceProfile given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of PerformanceProfile
   * @throws IOException if the JSON string is invalid with respect to PerformanceProfile
   */
  public static PerformanceProfile fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PerformanceProfile.class);
  }

  /**
   * Convert an instance of PerformanceProfile to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

