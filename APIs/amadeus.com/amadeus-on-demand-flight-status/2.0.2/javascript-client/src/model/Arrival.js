/**
 * On-Demand Flight Status
 *  Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization-262)** for more information on how to generate an access token.     Please also be aware that our test environment is based on a subset of the production, to see what is included in test please refer to our **[data collection](https://github.com/amadeus4dev/data-collection)**. 
 *
 * The version of the OpenAPI document: 2.0.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Gate from './Gate';
import Terminal from './Terminal';
import Timing from './Timing';

/**
 * The Arrival model module.
 * @module model/Arrival
 * @version 2.0.2
 */
class Arrival {
    /**
     * Constructs a new <code>Arrival</code>.
     * @alias module:model/Arrival
     */
    constructor() { 
        
        Arrival.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Arrival</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Arrival} obj Optional instance to populate.
     * @return {module:model/Arrival} The populated <code>Arrival</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Arrival();

            if (data.hasOwnProperty('gate')) {
                obj['gate'] = Gate.constructFromObject(data['gate']);
            }
            if (data.hasOwnProperty('terminal')) {
                obj['terminal'] = Terminal.constructFromObject(data['terminal']);
            }
            if (data.hasOwnProperty('timings')) {
                obj['timings'] = ApiClient.convertToType(data['timings'], [Timing]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Arrival</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Arrival</code>.
     */
    static validateJSON(data) {
        // validate the optional field `gate`
        if (data['gate']) { // data not null
          Gate.validateJSON(data['gate']);
        }
        // validate the optional field `terminal`
        if (data['terminal']) { // data not null
          Terminal.validateJSON(data['terminal']);
        }
        if (data['timings']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['timings'])) {
                throw new Error("Expected the field `timings` to be an array in the JSON data but got " + data['timings']);
            }
            // validate the optional field `timings` (array)
            for (const item of data['timings']) {
                Timing.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {module:model/Gate} gate
 */
Arrival.prototype['gate'] = undefined;

/**
 * @member {module:model/Terminal} terminal
 */
Arrival.prototype['terminal'] = undefined;

/**
 * the list of timings
 * @member {Array.<module:model/Timing>} timings
 */
Arrival.prototype['timings'] = undefined;






export default Arrival;

