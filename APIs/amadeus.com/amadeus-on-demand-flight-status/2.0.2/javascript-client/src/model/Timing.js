/**
 * On-Demand Flight Status
 *  Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization-262)** for more information on how to generate an access token.     Please also be aware that our test environment is based on a subset of the production, to see what is included in test please refer to our **[data collection](https://github.com/amadeus4dev/data-collection)**. 
 *
 * The version of the OpenAPI document: 2.0.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Delay from './Delay';

/**
 * The Timing model module.
 * @module model/Timing
 * @version 2.0.2
 */
class Timing {
    /**
     * Constructs a new <code>Timing</code>.
     * @alias module:model/Timing
     */
    constructor() { 
        
        Timing.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Timing</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Timing} obj Optional instance to populate.
     * @return {module:model/Timing} The populated <code>Timing</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Timing();

            if (data.hasOwnProperty('delays')) {
                obj['delays'] = ApiClient.convertToType(data['delays'], [Delay]);
            }
            if (data.hasOwnProperty('qualifier')) {
                obj['qualifier'] = ApiClient.convertToType(data['qualifier'], 'String');
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Timing</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Timing</code>.
     */
    static validateJSON(data) {
        if (data['delays']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['delays'])) {
                throw new Error("Expected the field `delays` to be an array in the JSON data but got " + data['delays']);
            }
            // validate the optional field `delays` (array)
            for (const item of data['delays']) {
                Delay.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['qualifier'] && !(typeof data['qualifier'] === 'string' || data['qualifier'] instanceof String)) {
            throw new Error("Expected the field `qualifier` to be a primitive type in the JSON string but got " + data['qualifier']);
        }

        return true;
    }


}



/**
 * delays that might be recorded on a timing
 * @member {Array.<module:model/Delay>} delays
 */
Timing.prototype['delays'] = undefined;

/**
 * the qualifier of the timing. e.g. STD (stands for Schedule Time Departure)
 * @member {String} qualifier
 */
Timing.prototype['qualifier'] = undefined;

/**
 * @member {Date} value
 */
Timing.prototype['value'] = undefined;






export default Timing;

