/**
 * On-Demand Flight Status
 *  Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization-262)** for more information on how to generate an access token.     Please also be aware that our test environment is based on a subset of the production, to see what is included in test please refer to our **[data collection](https://github.com/amadeus4dev/data-collection)**. 
 *
 * The version of the OpenAPI document: 2.0.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AircraftEquipment from './model/AircraftEquipment';
import Arrival from './model/Arrival';
import CollectionLinks from './model/CollectionLinks';
import CollectionMeta from './model/CollectionMeta';
import DatedFlight from './model/DatedFlight';
import Delay from './model/Delay';
import Departure from './model/Departure';
import Error400 from './model/Error400';
import Error401 from './model/Error401';
import Error500 from './model/Error500';
import FlightDesignator from './model/FlightDesignator';
import FlightPoint from './model/FlightPoint';
import Gate from './model/Gate';
import Issue from './model/Issue';
import IssueSource from './model/IssueSource';
import Leg from './model/Leg';
import Partnership from './model/Partnership';
import Segment from './model/Segment';
import SuccessFlights from './model/SuccessFlights';
import Terminal from './model/Terminal';
import Timing from './model/Timing';
import FlightsApi from './api/FlightsApi';


/**
*  Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization-262)** for more information on how to generate an access token.     Please also be aware that our test environment is based on a subset of the production, to see what is included in test please refer to our **[data collection](https://github.com/amadeus4dev/data-collection)**. .<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var OnDemandFlightStatus = require('index'); // See note below*.
* var xxxSvc = new OnDemandFlightStatus.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new OnDemandFlightStatus.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new OnDemandFlightStatus.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new OnDemandFlightStatus.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2.0.2
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AircraftEquipment model constructor.
     * @property {module:model/AircraftEquipment}
     */
    AircraftEquipment,

    /**
     * The Arrival model constructor.
     * @property {module:model/Arrival}
     */
    Arrival,

    /**
     * The CollectionLinks model constructor.
     * @property {module:model/CollectionLinks}
     */
    CollectionLinks,

    /**
     * The CollectionMeta model constructor.
     * @property {module:model/CollectionMeta}
     */
    CollectionMeta,

    /**
     * The DatedFlight model constructor.
     * @property {module:model/DatedFlight}
     */
    DatedFlight,

    /**
     * The Delay model constructor.
     * @property {module:model/Delay}
     */
    Delay,

    /**
     * The Departure model constructor.
     * @property {module:model/Departure}
     */
    Departure,

    /**
     * The Error400 model constructor.
     * @property {module:model/Error400}
     */
    Error400,

    /**
     * The Error401 model constructor.
     * @property {module:model/Error401}
     */
    Error401,

    /**
     * The Error500 model constructor.
     * @property {module:model/Error500}
     */
    Error500,

    /**
     * The FlightDesignator model constructor.
     * @property {module:model/FlightDesignator}
     */
    FlightDesignator,

    /**
     * The FlightPoint model constructor.
     * @property {module:model/FlightPoint}
     */
    FlightPoint,

    /**
     * The Gate model constructor.
     * @property {module:model/Gate}
     */
    Gate,

    /**
     * The Issue model constructor.
     * @property {module:model/Issue}
     */
    Issue,

    /**
     * The IssueSource model constructor.
     * @property {module:model/IssueSource}
     */
    IssueSource,

    /**
     * The Leg model constructor.
     * @property {module:model/Leg}
     */
    Leg,

    /**
     * The Partnership model constructor.
     * @property {module:model/Partnership}
     */
    Partnership,

    /**
     * The Segment model constructor.
     * @property {module:model/Segment}
     */
    Segment,

    /**
     * The SuccessFlights model constructor.
     * @property {module:model/SuccessFlights}
     */
    SuccessFlights,

    /**
     * The Terminal model constructor.
     * @property {module:model/Terminal}
     */
    Terminal,

    /**
     * The Timing model constructor.
     * @property {module:model/Timing}
     */
    Timing,

    /**
    * The FlightsApi service constructor.
    * @property {module:api/FlightsApi}
    */
    FlightsApi
};
