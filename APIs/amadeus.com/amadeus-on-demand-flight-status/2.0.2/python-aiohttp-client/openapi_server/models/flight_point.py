# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.arrival import Arrival
from openapi_server.models.departure import Departure
from openapi_server import util


class FlightPoint(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, arrival: Arrival=None, departure: Departure=None, iata_code: str=None):
        """FlightPoint - a model defined in OpenAPI

        :param arrival: The arrival of this FlightPoint.
        :param departure: The departure of this FlightPoint.
        :param iata_code: The iata_code of this FlightPoint.
        """
        self.openapi_types = {
            'arrival': Arrival,
            'departure': Departure,
            'iata_code': str
        }

        self.attribute_map = {
            'arrival': 'arrival',
            'departure': 'departure',
            'iata_code': 'iataCode'
        }

        self._arrival = arrival
        self._departure = departure
        self._iata_code = iata_code

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FlightPoint':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FlightPoint of this FlightPoint.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def arrival(self):
        """Gets the arrival of this FlightPoint.


        :return: The arrival of this FlightPoint.
        :rtype: Arrival
        """
        return self._arrival

    @arrival.setter
    def arrival(self, arrival):
        """Sets the arrival of this FlightPoint.


        :param arrival: The arrival of this FlightPoint.
        :type arrival: Arrival
        """

        self._arrival = arrival

    @property
    def departure(self):
        """Gets the departure of this FlightPoint.


        :return: The departure of this FlightPoint.
        :rtype: Departure
        """
        return self._departure

    @departure.setter
    def departure(self, departure):
        """Sets the departure of this FlightPoint.


        :param departure: The departure of this FlightPoint.
        :type departure: Departure
        """

        self._departure = departure

    @property
    def iata_code(self):
        """Gets the iata_code of this FlightPoint.

        3-letter IATA code of the airport. e.g. CDG

        :return: The iata_code of this FlightPoint.
        :rtype: str
        """
        return self._iata_code

    @iata_code.setter
    def iata_code(self, iata_code):
        """Sets the iata_code of this FlightPoint.

        3-letter IATA code of the airport. e.g. CDG

        :param iata_code: The iata_code of this FlightPoint.
        :type iata_code: str
        """

        self._iata_code = iata_code
