# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.flight_designator import FlightDesignator
from openapi_server import util


class Partnership(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, operating_flight: FlightDesignator=None):
        """Partnership - a model defined in OpenAPI

        :param operating_flight: The operating_flight of this Partnership.
        """
        self.openapi_types = {
            'operating_flight': FlightDesignator
        }

        self.attribute_map = {
            'operating_flight': 'operatingFlight'
        }

        self._operating_flight = operating_flight

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Partnership':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Partnership of this Partnership.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def operating_flight(self):
        """Gets the operating_flight of this Partnership.


        :return: The operating_flight of this Partnership.
        :rtype: FlightDesignator
        """
        return self._operating_flight

    @operating_flight.setter
    def operating_flight(self, operating_flight):
        """Sets the operating_flight of this Partnership.


        :param operating_flight: The operating_flight of this Partnership.
        :type operating_flight: FlightDesignator
        """

        self._operating_flight = operating_flight
