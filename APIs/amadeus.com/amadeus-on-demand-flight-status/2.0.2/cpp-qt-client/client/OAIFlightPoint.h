/**
 * On-Demand Flight Status
 *  Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization-262)** for more information on how to generate an access token.     Please also be aware that our test environment is based on a subset of the production, to see what is included in test please refer to our **[data collection](https://github.com/amadeus4dev/data-collection)**. 
 *
 * The version of the OpenAPI document: 2.0.2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFlightPoint.h
 *
 * 
 */

#ifndef OAIFlightPoint_H
#define OAIFlightPoint_H

#include <QJsonObject>

#include "OAIArrival.h"
#include "OAIDeparture.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIArrival;
class OAIDeparture;

class OAIFlightPoint : public OAIObject {
public:
    OAIFlightPoint();
    OAIFlightPoint(QString json);
    ~OAIFlightPoint() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIArrival getArrival() const;
    void setArrival(const OAIArrival &arrival);
    bool is_arrival_Set() const;
    bool is_arrival_Valid() const;

    OAIDeparture getDeparture() const;
    void setDeparture(const OAIDeparture &departure);
    bool is_departure_Set() const;
    bool is_departure_Valid() const;

    QString getIataCode() const;
    void setIataCode(const QString &iata_code);
    bool is_iata_code_Set() const;
    bool is_iata_code_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIArrival m_arrival;
    bool m_arrival_isSet;
    bool m_arrival_isValid;

    OAIDeparture m_departure;
    bool m_departure_isSet;
    bool m_departure_isValid;

    QString m_iata_code;
    bool m_iata_code_isSet;
    bool m_iata_code_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFlightPoint)

#endif // OAIFlightPoint_H
