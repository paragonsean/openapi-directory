/**
 * On-Demand Flight Status
 *  Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization-262)** for more information on how to generate an access token.     Please also be aware that our test environment is based on a subset of the production, to see what is included in test please refer to our **[data collection](https://github.com/amadeus4dev/data-collection)**. 
 *
 * The version of the OpenAPI document: 2.0.2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFlightDesignator.h
 *
 * 
 */

#ifndef OAIFlightDesignator_H
#define OAIFlightDesignator_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIFlightDesignator : public OAIObject {
public:
    OAIFlightDesignator();
    OAIFlightDesignator(QString json);
    ~OAIFlightDesignator() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCarrierCode() const;
    void setCarrierCode(const QString &carrier_code);
    bool is_carrier_code_Set() const;
    bool is_carrier_code_Valid() const;

    qint64 getFlightNumber() const;
    void setFlightNumber(const qint64 &flight_number);
    bool is_flight_number_Set() const;
    bool is_flight_number_Valid() const;

    QString getOperationalSuffix() const;
    void setOperationalSuffix(const QString &operational_suffix);
    bool is_operational_suffix_Set() const;
    bool is_operational_suffix_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_carrier_code;
    bool m_carrier_code_isSet;
    bool m_carrier_code_isValid;

    qint64 m_flight_number;
    bool m_flight_number_isSet;
    bool m_flight_number_isValid;

    QString m_operational_suffix;
    bool m_operational_suffix_isSet;
    bool m_operational_suffix_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFlightDesignator)

#endif // OAIFlightDesignator_H
