/*
 * Location Score
 * Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization-262)** for more information on how to generate an access token.     Please also be aware that our test environment is based on a subset of the production, this API in test only returns a few selected cities. You can find the list in our **[data collection](https://github.com/amadeus4dev/data-collection)**.
 *
 * The version of the OpenAPI document: 1.0.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.CategoryRatedAreasAllOfCategoryScores;
import org.openapitools.client.model.GeoCode;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for CategoryRatedAreas
 */
public class CategoryRatedAreasTest {
    private final CategoryRatedAreas model = new CategoryRatedAreas();

    /**
     * Model tests for CategoryRatedAreas
     */
    @Test
    public void testCategoryRatedAreas() {
        // TODO: test CategoryRatedAreas
    }

    /**
     * Test the property 'categoryScores'
     */
    @Test
    public void categoryScoresTest() {
        // TODO: test categoryScores
    }

    /**
     * Test the property 'geoCode'
     */
    @Test
    public void geoCodeTest() {
        // TODO: test geoCode
    }

    /**
     * Test the property 'radius'
     */
    @Test
    public void radiusTest() {
        // TODO: test radius
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

}
