# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CategoryRatedAreasAllOfCategoryScoresNightLife(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, overall: float=None):
        """CategoryRatedAreasAllOfCategoryScoresNightLife - a model defined in OpenAPI

        :param overall: The overall of this CategoryRatedAreasAllOfCategoryScoresNightLife.
        """
        self.openapi_types = {
            'overall': float
        }

        self.attribute_map = {
            'overall': 'overall'
        }

        self._overall = overall

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CategoryRatedAreasAllOfCategoryScoresNightLife':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The category_rated_areas_allOf_categoryScores_nightLife of this CategoryRatedAreasAllOfCategoryScoresNightLife.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def overall(self):
        """Gets the overall of this CategoryRatedAreasAllOfCategoryScoresNightLife.

        score of nigh life possibility from 0 (nothing to do at night) to 100 (many night activities to enjoy)

        :return: The overall of this CategoryRatedAreasAllOfCategoryScoresNightLife.
        :rtype: float
        """
        return self._overall

    @overall.setter
    def overall(self, overall):
        """Sets the overall of this CategoryRatedAreasAllOfCategoryScoresNightLife.

        score of nigh life possibility from 0 (nothing to do at night) to 100 (many night activities to enjoy)

        :param overall: The overall of this CategoryRatedAreasAllOfCategoryScoresNightLife.
        :type overall: float
        """

        self._overall = overall
