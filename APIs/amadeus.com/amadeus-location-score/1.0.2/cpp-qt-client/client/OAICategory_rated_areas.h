/**
 * Location Score
 * Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization-262)** for more information on how to generate an access token.     Please also be aware that our test environment is based on a subset of the production, this API in test only returns a few selected cities. You can find the list in our **[data collection](https://github.com/amadeus4dev/data-collection)**.
 *
 * The version of the OpenAPI document: 1.0.2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICategory_rated_areas.h
 *
 * 
 */

#ifndef OAICategory_rated_areas_H
#define OAICategory_rated_areas_H

#include <QJsonObject>

#include "OAICategory_rated_areas_allOf_categoryScores.h"
#include "OAIGeoCode.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICategory_rated_areas_allOf_categoryScores;
class OAIGeoCode;

class OAICategory_rated_areas : public OAIObject {
public:
    OAICategory_rated_areas();
    OAICategory_rated_areas(QString json);
    ~OAICategory_rated_areas() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAICategory_rated_areas_allOf_categoryScores getCategoryScores() const;
    void setCategoryScores(const OAICategory_rated_areas_allOf_categoryScores &category_scores);
    bool is_category_scores_Set() const;
    bool is_category_scores_Valid() const;

    OAIGeoCode getGeoCode() const;
    void setGeoCode(const OAIGeoCode &geo_code);
    bool is_geo_code_Set() const;
    bool is_geo_code_Valid() const;

    qint32 getRadius() const;
    void setRadius(const qint32 &radius);
    bool is_radius_Set() const;
    bool is_radius_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAICategory_rated_areas_allOf_categoryScores m_category_scores;
    bool m_category_scores_isSet;
    bool m_category_scores_isValid;

    OAIGeoCode m_geo_code;
    bool m_geo_code_isSet;
    bool m_geo_code_isValid;

    qint32 m_radius;
    bool m_radius_isSet;
    bool m_radius_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICategory_rated_areas)

#endif // OAICategory_rated_areas_H
