/**
 * Location Score
 * Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization-262)** for more information on how to generate an access token.     Please also be aware that our test environment is based on a subset of the production, this API in test only returns a few selected cities. You can find the list in our **[data collection](https://github.com/amadeus4dev/data-collection)**.
 *
 * The version of the OpenAPI document: 1.0.2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICategory_rated_areas_allOf_categoryScores_sight.h
 *
 * sight category
 */

#ifndef OAICategory_rated_areas_allOf_categoryScores_sight_H
#define OAICategory_rated_areas_allOf_categoryScores_sight_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICategory_rated_areas_allOf_categoryScores_sight : public OAIObject {
public:
    OAICategory_rated_areas_allOf_categoryScores_sight();
    OAICategory_rated_areas_allOf_categoryScores_sight(QString json);
    ~OAICategory_rated_areas_allOf_categoryScores_sight() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getBeachAndPark() const;
    void setBeachAndPark(const qint32 &beach_and_park);
    bool is_beach_and_park_Set() const;
    bool is_beach_and_park_Valid() const;

    qint32 getHistorical() const;
    void setHistorical(const qint32 &historical);
    bool is_historical_Set() const;
    bool is_historical_Valid() const;

    qint32 getOverall() const;
    void setOverall(const qint32 &overall);
    bool is_overall_Set() const;
    bool is_overall_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_beach_and_park;
    bool m_beach_and_park_isSet;
    bool m_beach_and_park_isValid;

    qint32 m_historical;
    bool m_historical_isSet;
    bool m_historical_isValid;

    qint32 m_overall;
    bool m_overall_isSet;
    bool m_overall_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICategory_rated_areas_allOf_categoryScores_sight)

#endif // OAICategory_rated_areas_allOf_categoryScores_sight_H
