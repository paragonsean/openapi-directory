/**
 * Location Score
 * Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization-262)** for more information on how to generate an access token.     Please also be aware that our test environment is based on a subset of the production, this API in test only returns a few selected cities. You can find the list in our **[data collection](https://github.com/amadeus4dev/data-collection)**.
 *
 * The version of the OpenAPI document: 1.0.2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICategory_rated_areas_allOf_categoryScores_restaurant.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICategory_rated_areas_allOf_categoryScores_restaurant::OAICategory_rated_areas_allOf_categoryScores_restaurant(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICategory_rated_areas_allOf_categoryScores_restaurant::OAICategory_rated_areas_allOf_categoryScores_restaurant() {
    this->initializeModel();
}

OAICategory_rated_areas_allOf_categoryScores_restaurant::~OAICategory_rated_areas_allOf_categoryScores_restaurant() {}

void OAICategory_rated_areas_allOf_categoryScores_restaurant::initializeModel() {

    m_overall_isSet = false;
    m_overall_isValid = false;

    m_vegetarian_isSet = false;
    m_vegetarian_isValid = false;
}

void OAICategory_rated_areas_allOf_categoryScores_restaurant::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICategory_rated_areas_allOf_categoryScores_restaurant::fromJsonObject(QJsonObject json) {

    m_overall_isValid = ::OpenAPI::fromJsonValue(m_overall, json[QString("overall")]);
    m_overall_isSet = !json[QString("overall")].isNull() && m_overall_isValid;

    m_vegetarian_isValid = ::OpenAPI::fromJsonValue(m_vegetarian, json[QString("vegetarian")]);
    m_vegetarian_isSet = !json[QString("vegetarian")].isNull() && m_vegetarian_isValid;
}

QString OAICategory_rated_areas_allOf_categoryScores_restaurant::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICategory_rated_areas_allOf_categoryScores_restaurant::asJsonObject() const {
    QJsonObject obj;
    if (m_overall_isSet) {
        obj.insert(QString("overall"), ::OpenAPI::toJsonValue(m_overall));
    }
    if (m_vegetarian_isSet) {
        obj.insert(QString("vegetarian"), ::OpenAPI::toJsonValue(m_vegetarian));
    }
    return obj;
}

double OAICategory_rated_areas_allOf_categoryScores_restaurant::getOverall() const {
    return m_overall;
}
void OAICategory_rated_areas_allOf_categoryScores_restaurant::setOverall(const double &overall) {
    m_overall = overall;
    m_overall_isSet = true;
}

bool OAICategory_rated_areas_allOf_categoryScores_restaurant::is_overall_Set() const{
    return m_overall_isSet;
}

bool OAICategory_rated_areas_allOf_categoryScores_restaurant::is_overall_Valid() const{
    return m_overall_isValid;
}

double OAICategory_rated_areas_allOf_categoryScores_restaurant::getVegetarian() const {
    return m_vegetarian;
}
void OAICategory_rated_areas_allOf_categoryScores_restaurant::setVegetarian(const double &vegetarian) {
    m_vegetarian = vegetarian;
    m_vegetarian_isSet = true;
}

bool OAICategory_rated_areas_allOf_categoryScores_restaurant::is_vegetarian_Set() const{
    return m_vegetarian_isSet;
}

bool OAICategory_rated_areas_allOf_categoryScores_restaurant::is_vegetarian_Valid() const{
    return m_vegetarian_isValid;
}

bool OAICategory_rated_areas_allOf_categoryScores_restaurant::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_overall_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_vegetarian_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICategory_rated_areas_allOf_categoryScores_restaurant::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
