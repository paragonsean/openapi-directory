/**
 * Location Score
 * Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization-262)** for more information on how to generate an access token.     Please also be aware that our test environment is based on a subset of the production, this API in test only returns a few selected cities. You can find the list in our **[data collection](https://github.com/amadeus4dev/data-collection)**.
 *
 * The version of the OpenAPI document: 1.0.2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICategory_rated_areas_allOf_categoryScores.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICategory_rated_areas_allOf_categoryScores::OAICategory_rated_areas_allOf_categoryScores(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICategory_rated_areas_allOf_categoryScores::OAICategory_rated_areas_allOf_categoryScores() {
    this->initializeModel();
}

OAICategory_rated_areas_allOf_categoryScores::~OAICategory_rated_areas_allOf_categoryScores() {}

void OAICategory_rated_areas_allOf_categoryScores::initializeModel() {

    m_night_life_isSet = false;
    m_night_life_isValid = false;

    m_restaurant_isSet = false;
    m_restaurant_isValid = false;

    m_shopping_isSet = false;
    m_shopping_isValid = false;

    m_sight_isSet = false;
    m_sight_isValid = false;
}

void OAICategory_rated_areas_allOf_categoryScores::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICategory_rated_areas_allOf_categoryScores::fromJsonObject(QJsonObject json) {

    m_night_life_isValid = ::OpenAPI::fromJsonValue(m_night_life, json[QString("nightLife")]);
    m_night_life_isSet = !json[QString("nightLife")].isNull() && m_night_life_isValid;

    m_restaurant_isValid = ::OpenAPI::fromJsonValue(m_restaurant, json[QString("restaurant")]);
    m_restaurant_isSet = !json[QString("restaurant")].isNull() && m_restaurant_isValid;

    m_shopping_isValid = ::OpenAPI::fromJsonValue(m_shopping, json[QString("shopping")]);
    m_shopping_isSet = !json[QString("shopping")].isNull() && m_shopping_isValid;

    m_sight_isValid = ::OpenAPI::fromJsonValue(m_sight, json[QString("sight")]);
    m_sight_isSet = !json[QString("sight")].isNull() && m_sight_isValid;
}

QString OAICategory_rated_areas_allOf_categoryScores::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICategory_rated_areas_allOf_categoryScores::asJsonObject() const {
    QJsonObject obj;
    if (m_night_life.isSet()) {
        obj.insert(QString("nightLife"), ::OpenAPI::toJsonValue(m_night_life));
    }
    if (m_restaurant.isSet()) {
        obj.insert(QString("restaurant"), ::OpenAPI::toJsonValue(m_restaurant));
    }
    if (m_shopping.isSet()) {
        obj.insert(QString("shopping"), ::OpenAPI::toJsonValue(m_shopping));
    }
    if (m_sight.isSet()) {
        obj.insert(QString("sight"), ::OpenAPI::toJsonValue(m_sight));
    }
    return obj;
}

OAICategory_rated_areas_allOf_categoryScores_nightLife OAICategory_rated_areas_allOf_categoryScores::getNightLife() const {
    return m_night_life;
}
void OAICategory_rated_areas_allOf_categoryScores::setNightLife(const OAICategory_rated_areas_allOf_categoryScores_nightLife &night_life) {
    m_night_life = night_life;
    m_night_life_isSet = true;
}

bool OAICategory_rated_areas_allOf_categoryScores::is_night_life_Set() const{
    return m_night_life_isSet;
}

bool OAICategory_rated_areas_allOf_categoryScores::is_night_life_Valid() const{
    return m_night_life_isValid;
}

OAICategory_rated_areas_allOf_categoryScores_restaurant OAICategory_rated_areas_allOf_categoryScores::getRestaurant() const {
    return m_restaurant;
}
void OAICategory_rated_areas_allOf_categoryScores::setRestaurant(const OAICategory_rated_areas_allOf_categoryScores_restaurant &restaurant) {
    m_restaurant = restaurant;
    m_restaurant_isSet = true;
}

bool OAICategory_rated_areas_allOf_categoryScores::is_restaurant_Set() const{
    return m_restaurant_isSet;
}

bool OAICategory_rated_areas_allOf_categoryScores::is_restaurant_Valid() const{
    return m_restaurant_isValid;
}

OAICategory_rated_areas_allOf_categoryScores_shopping OAICategory_rated_areas_allOf_categoryScores::getShopping() const {
    return m_shopping;
}
void OAICategory_rated_areas_allOf_categoryScores::setShopping(const OAICategory_rated_areas_allOf_categoryScores_shopping &shopping) {
    m_shopping = shopping;
    m_shopping_isSet = true;
}

bool OAICategory_rated_areas_allOf_categoryScores::is_shopping_Set() const{
    return m_shopping_isSet;
}

bool OAICategory_rated_areas_allOf_categoryScores::is_shopping_Valid() const{
    return m_shopping_isValid;
}

OAICategory_rated_areas_allOf_categoryScores_sight OAICategory_rated_areas_allOf_categoryScores::getSight() const {
    return m_sight;
}
void OAICategory_rated_areas_allOf_categoryScores::setSight(const OAICategory_rated_areas_allOf_categoryScores_sight &sight) {
    m_sight = sight;
    m_sight_isSet = true;
}

bool OAICategory_rated_areas_allOf_categoryScores::is_sight_Set() const{
    return m_sight_isSet;
}

bool OAICategory_rated_areas_allOf_categoryScores::is_sight_Valid() const{
    return m_sight_isValid;
}

bool OAICategory_rated_areas_allOf_categoryScores::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_night_life.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_restaurant.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_shopping.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_sight.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICategory_rated_areas_allOf_categoryScores::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
