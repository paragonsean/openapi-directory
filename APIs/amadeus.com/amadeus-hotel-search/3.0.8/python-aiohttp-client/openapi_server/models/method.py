# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Method(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    CREDIT_CARD = 'CREDIT_CARD'
    AGENCY_ACCOUNT = 'AGENCY_ACCOUNT'
    TRAVEL_AGENT_ID = 'TRAVEL_AGENT_ID'
    CORPORATE_ID = 'CORPORATE_ID'
    HOTEL_GUEST_ID = 'HOTEL_GUEST_ID'
    CHECK = 'CHECK'
    MISC_CHARGE_ORDER = 'MISC_CHARGE_ORDER'
    ADVANCE_DEPOSIT = 'ADVANCE_DEPOSIT'
    COMPANY_ADDRESS = 'COMPANY_ADDRESS'
    VCC_BILLBACK = 'VCC_BILLBACK'
    VCC_B2_B_WALLET = 'VCC_B2B_WALLET'
    DEFERED_PAYMENT = 'DEFERED_PAYMENT'
    TRAVEL_AGENT_IMMEDIATE = 'TRAVEL_AGENT_IMMEDIATE'

    def __init__(self):
        """Method - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Method':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Method of this Method.
        """
        return util.deserialize_model(dikt, cls)
