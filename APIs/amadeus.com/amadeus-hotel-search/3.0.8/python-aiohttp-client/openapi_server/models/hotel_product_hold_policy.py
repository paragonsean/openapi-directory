# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class HotelProductHoldPolicy(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, deadline: datetime=None):
        """HotelProductHoldPolicy - a model defined in OpenAPI

        :param deadline: The deadline of this HotelProductHoldPolicy.
        """
        self.openapi_types = {
            'deadline': datetime
        }

        self.attribute_map = {
            'deadline': 'deadline'
        }

        self._deadline = deadline

    @classmethod
    def from_dict(cls, dikt: dict) -> 'HotelProductHoldPolicy':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The HotelProduct_HoldPolicy of this HotelProductHoldPolicy.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def deadline(self):
        """Gets the deadline of this HotelProductHoldPolicy.

        The date and time of the deadline in ISO 8601[https://www.w3.org/TR/NOTE-datetime].   Example: 2010-08-14T13:00:00  Please note that this value is expressed in the hotels local time zone

        :return: The deadline of this HotelProductHoldPolicy.
        :rtype: datetime
        """
        return self._deadline

    @deadline.setter
    def deadline(self, deadline):
        """Sets the deadline of this HotelProductHoldPolicy.

        The date and time of the deadline in ISO 8601[https://www.w3.org/TR/NOTE-datetime].   Example: 2010-08-14T13:00:00  Please note that this value is expressed in the hotels local time zone

        :param deadline: The deadline of this HotelProductHoldPolicy.
        :type deadline: datetime
        """
        if deadline is None:
            raise ValueError("Invalid value for `deadline`, must not be `None`")

        self._deadline = deadline
