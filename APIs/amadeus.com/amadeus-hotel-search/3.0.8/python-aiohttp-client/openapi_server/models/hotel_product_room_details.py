# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.hotel_product_estimated_room_type import HotelProductEstimatedRoomType
from openapi_server.models.qualified_free_text import QualifiedFreeText
import re
from openapi_server import util


class HotelProductRoomDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: QualifiedFreeText=None, type: str=None, type_estimated: HotelProductEstimatedRoomType=None):
        """HotelProductRoomDetails - a model defined in OpenAPI

        :param description: The description of this HotelProductRoomDetails.
        :param type: The type of this HotelProductRoomDetails.
        :param type_estimated: The type_estimated of this HotelProductRoomDetails.
        """
        self.openapi_types = {
            'description': QualifiedFreeText,
            'type': str,
            'type_estimated': HotelProductEstimatedRoomType
        }

        self.attribute_map = {
            'description': 'description',
            'type': 'type',
            'type_estimated': 'typeEstimated'
        }

        self._description = description
        self._type = type
        self._type_estimated = type_estimated

    @classmethod
    def from_dict(cls, dikt: dict) -> 'HotelProductRoomDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The HotelProduct_RoomDetails of this HotelProductRoomDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this HotelProductRoomDetails.


        :return: The description of this HotelProductRoomDetails.
        :rtype: QualifiedFreeText
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this HotelProductRoomDetails.


        :param description: The description of this HotelProductRoomDetails.
        :type description: QualifiedFreeText
        """

        self._description = description

    @property
    def type(self):
        """Gets the type of this HotelProductRoomDetails.

        Room type code, 3 character identifier of the room. The first character identifies the room type category.  The second numeric character identifies the number of beds.  The third character identifies the bed type.  There is a special case where ROH is returned, this value stands for Run Of House.

        :return: The type of this HotelProductRoomDetails.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this HotelProductRoomDetails.

        Room type code, 3 character identifier of the room. The first character identifies the room type category.  The second numeric character identifies the number of beds.  The third character identifies the bed type.  There is a special case where ROH is returned, this value stands for Run Of House.

        :param type: The type of this HotelProductRoomDetails.
        :type type: str
        """
        if type is not None and not re.search(r'^[A-Z0-9*]{3}$', type):
            raise ValueError("Invalid value for `type`, must be a follow pattern or equal to `/^[A-Z0-9*]{3}$/`")

        self._type = type

    @property
    def type_estimated(self):
        """Gets the type_estimated of this HotelProductRoomDetails.


        :return: The type_estimated of this HotelProductRoomDetails.
        :rtype: HotelProductEstimatedRoomType
        """
        return self._type_estimated

    @type_estimated.setter
    def type_estimated(self, type_estimated):
        """Sets the type_estimated of this HotelProductRoomDetails.


        :param type_estimated: The type_estimated of this HotelProductRoomDetails.
        :type type_estimated: HotelProductEstimatedRoomType
        """

        self._type_estimated = type_estimated
