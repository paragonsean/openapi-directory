/**
 * Hotel Search API
 * Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization-262)** for more information on how to generate an access token.   Please also be aware that our test environment is based on a subset of the production for this API it may change dynamically. For your tests, use big cities like LON (London) or NYC (New-York).
 *
 * The version of the OpenAPI document: 3.0.8
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIHotelProduct_PaymentPolicy.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIHotelProduct_PaymentPolicy::OAIHotelProduct_PaymentPolicy(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIHotelProduct_PaymentPolicy::OAIHotelProduct_PaymentPolicy() {
    this->initializeModel();
}

OAIHotelProduct_PaymentPolicy::~OAIHotelProduct_PaymentPolicy() {}

void OAIHotelProduct_PaymentPolicy::initializeModel() {

    m_credit_cards_isSet = false;
    m_credit_cards_isValid = false;

    m_methods_isSet = false;
    m_methods_isValid = false;
}

void OAIHotelProduct_PaymentPolicy::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIHotelProduct_PaymentPolicy::fromJsonObject(QJsonObject json) {

    m_credit_cards_isValid = ::OpenAPI::fromJsonValue(m_credit_cards, json[QString("creditCards")]);
    m_credit_cards_isSet = !json[QString("creditCards")].isNull() && m_credit_cards_isValid;

    m_methods_isValid = ::OpenAPI::fromJsonValue(m_methods, json[QString("methods")]);
    m_methods_isSet = !json[QString("methods")].isNull() && m_methods_isValid;
}

QString OAIHotelProduct_PaymentPolicy::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIHotelProduct_PaymentPolicy::asJsonObject() const {
    QJsonObject obj;
    if (m_credit_cards.size() > 0) {
        obj.insert(QString("creditCards"), ::OpenAPI::toJsonValue(m_credit_cards));
    }
    if (m_methods.size() > 0) {
        obj.insert(QString("methods"), ::OpenAPI::toJsonValue(m_methods));
    }
    return obj;
}

QList<QString> OAIHotelProduct_PaymentPolicy::getCreditCards() const {
    return m_credit_cards;
}
void OAIHotelProduct_PaymentPolicy::setCreditCards(const QList<QString> &credit_cards) {
    m_credit_cards = credit_cards;
    m_credit_cards_isSet = true;
}

bool OAIHotelProduct_PaymentPolicy::is_credit_cards_Set() const{
    return m_credit_cards_isSet;
}

bool OAIHotelProduct_PaymentPolicy::is_credit_cards_Valid() const{
    return m_credit_cards_isValid;
}

QList<OAIMethod> OAIHotelProduct_PaymentPolicy::getMethods() const {
    return m_methods;
}
void OAIHotelProduct_PaymentPolicy::setMethods(const QList<OAIMethod> &methods) {
    m_methods = methods;
    m_methods_isSet = true;
}

bool OAIHotelProduct_PaymentPolicy::is_methods_Set() const{
    return m_methods_isSet;
}

bool OAIHotelProduct_PaymentPolicy::is_methods_Valid() const{
    return m_methods_isValid;
}

bool OAIHotelProduct_PaymentPolicy::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_credit_cards.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_methods.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIHotelProduct_PaymentPolicy::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
