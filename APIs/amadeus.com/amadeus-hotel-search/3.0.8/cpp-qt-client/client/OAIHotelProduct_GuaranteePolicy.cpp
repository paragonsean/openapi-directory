/**
 * Hotel Search API
 * Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization-262)** for more information on how to generate an access token.   Please also be aware that our test environment is based on a subset of the production for this API it may change dynamically. For your tests, use big cities like LON (London) or NYC (New-York).
 *
 * The version of the OpenAPI document: 3.0.8
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIHotelProduct_GuaranteePolicy.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIHotelProduct_GuaranteePolicy::OAIHotelProduct_GuaranteePolicy(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIHotelProduct_GuaranteePolicy::OAIHotelProduct_GuaranteePolicy() {
    this->initializeModel();
}

OAIHotelProduct_GuaranteePolicy::~OAIHotelProduct_GuaranteePolicy() {}

void OAIHotelProduct_GuaranteePolicy::initializeModel() {

    m_accepted_payments_isSet = false;
    m_accepted_payments_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;
}

void OAIHotelProduct_GuaranteePolicy::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIHotelProduct_GuaranteePolicy::fromJsonObject(QJsonObject json) {

    m_accepted_payments_isValid = ::OpenAPI::fromJsonValue(m_accepted_payments, json[QString("acceptedPayments")]);
    m_accepted_payments_isSet = !json[QString("acceptedPayments")].isNull() && m_accepted_payments_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;
}

QString OAIHotelProduct_GuaranteePolicy::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIHotelProduct_GuaranteePolicy::asJsonObject() const {
    QJsonObject obj;
    if (m_accepted_payments.isSet()) {
        obj.insert(QString("acceptedPayments"), ::OpenAPI::toJsonValue(m_accepted_payments));
    }
    if (m_description.isSet()) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    return obj;
}

OAIHotelProduct_PaymentPolicy OAIHotelProduct_GuaranteePolicy::getAcceptedPayments() const {
    return m_accepted_payments;
}
void OAIHotelProduct_GuaranteePolicy::setAcceptedPayments(const OAIHotelProduct_PaymentPolicy &accepted_payments) {
    m_accepted_payments = accepted_payments;
    m_accepted_payments_isSet = true;
}

bool OAIHotelProduct_GuaranteePolicy::is_accepted_payments_Set() const{
    return m_accepted_payments_isSet;
}

bool OAIHotelProduct_GuaranteePolicy::is_accepted_payments_Valid() const{
    return m_accepted_payments_isValid;
}

OAIQualifiedFreeText OAIHotelProduct_GuaranteePolicy::getDescription() const {
    return m_description;
}
void OAIHotelProduct_GuaranteePolicy::setDescription(const OAIQualifiedFreeText &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIHotelProduct_GuaranteePolicy::is_description_Set() const{
    return m_description_isSet;
}

bool OAIHotelProduct_GuaranteePolicy::is_description_Valid() const{
    return m_description_isValid;
}

bool OAIHotelProduct_GuaranteePolicy::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_accepted_payments.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_description.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIHotelProduct_GuaranteePolicy::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
