/**
 * Hotel Search API
 * Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization-262)** for more information on how to generate an access token.   Please also be aware that our test environment is based on a subset of the production for this API it may change dynamically. For your tests, use big cities like LON (London) or NYC (New-York).
 *
 * The version of the OpenAPI document: 3.0.8
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIHotelProduct_PriceVariations.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIHotelProduct_PriceVariations::OAIHotelProduct_PriceVariations(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIHotelProduct_PriceVariations::OAIHotelProduct_PriceVariations() {
    this->initializeModel();
}

OAIHotelProduct_PriceVariations::~OAIHotelProduct_PriceVariations() {}

void OAIHotelProduct_PriceVariations::initializeModel() {

    m_average_isSet = false;
    m_average_isValid = false;

    m_changes_isSet = false;
    m_changes_isValid = false;
}

void OAIHotelProduct_PriceVariations::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIHotelProduct_PriceVariations::fromJsonObject(QJsonObject json) {

    m_average_isValid = ::OpenAPI::fromJsonValue(m_average, json[QString("average")]);
    m_average_isSet = !json[QString("average")].isNull() && m_average_isValid;

    m_changes_isValid = ::OpenAPI::fromJsonValue(m_changes, json[QString("changes")]);
    m_changes_isSet = !json[QString("changes")].isNull() && m_changes_isValid;
}

QString OAIHotelProduct_PriceVariations::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIHotelProduct_PriceVariations::asJsonObject() const {
    QJsonObject obj;
    if (m_average.isSet()) {
        obj.insert(QString("average"), ::OpenAPI::toJsonValue(m_average));
    }
    if (m_changes.size() > 0) {
        obj.insert(QString("changes"), ::OpenAPI::toJsonValue(m_changes));
    }
    return obj;
}

OAIPrice OAIHotelProduct_PriceVariations::getAverage() const {
    return m_average;
}
void OAIHotelProduct_PriceVariations::setAverage(const OAIPrice &average) {
    m_average = average;
    m_average_isSet = true;
}

bool OAIHotelProduct_PriceVariations::is_average_Set() const{
    return m_average_isSet;
}

bool OAIHotelProduct_PriceVariations::is_average_Valid() const{
    return m_average_isValid;
}

QList<OAIHotelProduct_PriceVariation> OAIHotelProduct_PriceVariations::getChanges() const {
    return m_changes;
}
void OAIHotelProduct_PriceVariations::setChanges(const QList<OAIHotelProduct_PriceVariation> &changes) {
    m_changes = changes;
    m_changes_isSet = true;
}

bool OAIHotelProduct_PriceVariations::is_changes_Set() const{
    return m_changes_isSet;
}

bool OAIHotelProduct_PriceVariations::is_changes_Valid() const{
    return m_changes_isValid;
}

bool OAIHotelProduct_PriceVariations::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_average.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_changes.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIHotelProduct_PriceVariations::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
