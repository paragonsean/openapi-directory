/**
 * Hotel Search API
 * Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization-262)** for more information on how to generate an access token.   Please also be aware that our test environment is based on a subset of the production for this API it may change dynamically. For your tests, use big cities like LON (London) or NYC (New-York).
 *
 * The version of the OpenAPI document: 3.0.8
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIHotelProduct_EstimatedRoomType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIHotelProduct_EstimatedRoomType::OAIHotelProduct_EstimatedRoomType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIHotelProduct_EstimatedRoomType::OAIHotelProduct_EstimatedRoomType() {
    this->initializeModel();
}

OAIHotelProduct_EstimatedRoomType::~OAIHotelProduct_EstimatedRoomType() {}

void OAIHotelProduct_EstimatedRoomType::initializeModel() {

    m_bed_type_isSet = false;
    m_bed_type_isValid = false;

    m_beds_isSet = false;
    m_beds_isValid = false;

    m_category_isSet = false;
    m_category_isValid = false;
}

void OAIHotelProduct_EstimatedRoomType::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIHotelProduct_EstimatedRoomType::fromJsonObject(QJsonObject json) {

    m_bed_type_isValid = ::OpenAPI::fromJsonValue(m_bed_type, json[QString("bedType")]);
    m_bed_type_isSet = !json[QString("bedType")].isNull() && m_bed_type_isValid;

    m_beds_isValid = ::OpenAPI::fromJsonValue(m_beds, json[QString("beds")]);
    m_beds_isSet = !json[QString("beds")].isNull() && m_beds_isValid;

    m_category_isValid = ::OpenAPI::fromJsonValue(m_category, json[QString("category")]);
    m_category_isSet = !json[QString("category")].isNull() && m_category_isValid;
}

QString OAIHotelProduct_EstimatedRoomType::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIHotelProduct_EstimatedRoomType::asJsonObject() const {
    QJsonObject obj;
    if (m_bed_type_isSet) {
        obj.insert(QString("bedType"), ::OpenAPI::toJsonValue(m_bed_type));
    }
    if (m_beds_isSet) {
        obj.insert(QString("beds"), ::OpenAPI::toJsonValue(m_beds));
    }
    if (m_category_isSet) {
        obj.insert(QString("category"), ::OpenAPI::toJsonValue(m_category));
    }
    return obj;
}

QString OAIHotelProduct_EstimatedRoomType::getBedType() const {
    return m_bed_type;
}
void OAIHotelProduct_EstimatedRoomType::setBedType(const QString &bed_type) {
    m_bed_type = bed_type;
    m_bed_type_isSet = true;
}

bool OAIHotelProduct_EstimatedRoomType::is_bed_type_Set() const{
    return m_bed_type_isSet;
}

bool OAIHotelProduct_EstimatedRoomType::is_bed_type_Valid() const{
    return m_bed_type_isValid;
}

qint32 OAIHotelProduct_EstimatedRoomType::getBeds() const {
    return m_beds;
}
void OAIHotelProduct_EstimatedRoomType::setBeds(const qint32 &beds) {
    m_beds = beds;
    m_beds_isSet = true;
}

bool OAIHotelProduct_EstimatedRoomType::is_beds_Set() const{
    return m_beds_isSet;
}

bool OAIHotelProduct_EstimatedRoomType::is_beds_Valid() const{
    return m_beds_isValid;
}

QString OAIHotelProduct_EstimatedRoomType::getCategory() const {
    return m_category;
}
void OAIHotelProduct_EstimatedRoomType::setCategory(const QString &category) {
    m_category = category;
    m_category_isSet = true;
}

bool OAIHotelProduct_EstimatedRoomType::is_category_Set() const{
    return m_category_isSet;
}

bool OAIHotelProduct_EstimatedRoomType::is_category_Valid() const{
    return m_category_isValid;
}

bool OAIHotelProduct_EstimatedRoomType::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_bed_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_beds_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_category_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIHotelProduct_EstimatedRoomType::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
