/*
 * Hotel Search API
 * Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization-262)** for more information on how to generate an access token.   Please also be aware that our test environment is based on a subset of the production for this API it may change dynamically. For your tests, use big cities like LON (London) or NYC (New-York).
 *
 * The version of the OpenAPI document: 3.0.8
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.HotelProductCancellationPolicy;
import org.openapitools.client.model.HotelProductCheckInOutPolicy;
import org.openapitools.client.model.HotelProductDepositPolicy;
import org.openapitools.client.model.HotelProductGuaranteePolicy;
import org.openapitools.client.model.HotelProductHoldPolicy;
import org.openapitools.client.model.PaymentType;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Booking Rules
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:03:09.974193-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class HotelProductPolicyDetails {
  public static final String SERIALIZED_NAME_CANCELLATION = "cancellation";
  @SerializedName(SERIALIZED_NAME_CANCELLATION)
  private HotelProductCancellationPolicy cancellation;

  public static final String SERIALIZED_NAME_CHECK_IN_OUT = "checkInOut";
  @SerializedName(SERIALIZED_NAME_CHECK_IN_OUT)
  private HotelProductCheckInOutPolicy checkInOut;

  public static final String SERIALIZED_NAME_DEPOSIT = "deposit";
  @SerializedName(SERIALIZED_NAME_DEPOSIT)
  private HotelProductDepositPolicy deposit;

  public static final String SERIALIZED_NAME_GUARANTEE = "guarantee";
  @SerializedName(SERIALIZED_NAME_GUARANTEE)
  private HotelProductGuaranteePolicy guarantee;

  public static final String SERIALIZED_NAME_HOLD_TIME = "holdTime";
  @SerializedName(SERIALIZED_NAME_HOLD_TIME)
  private HotelProductHoldPolicy holdTime;

  public static final String SERIALIZED_NAME_PAYMENT_TYPE = "paymentType";
  @SerializedName(SERIALIZED_NAME_PAYMENT_TYPE)
  private PaymentType paymentType;

  public static final String SERIALIZED_NAME_PREPAY = "prepay";
  @SerializedName(SERIALIZED_NAME_PREPAY)
  private HotelProductDepositPolicy prepay;

  public HotelProductPolicyDetails() {
  }

  public HotelProductPolicyDetails cancellation(HotelProductCancellationPolicy cancellation) {
    this.cancellation = cancellation;
    return this;
  }

  /**
   * Get cancellation
   * @return cancellation
   */
  @javax.annotation.Nullable
  public HotelProductCancellationPolicy getCancellation() {
    return cancellation;
  }

  public void setCancellation(HotelProductCancellationPolicy cancellation) {
    this.cancellation = cancellation;
  }


  public HotelProductPolicyDetails checkInOut(HotelProductCheckInOutPolicy checkInOut) {
    this.checkInOut = checkInOut;
    return this;
  }

  /**
   * Get checkInOut
   * @return checkInOut
   */
  @javax.annotation.Nullable
  public HotelProductCheckInOutPolicy getCheckInOut() {
    return checkInOut;
  }

  public void setCheckInOut(HotelProductCheckInOutPolicy checkInOut) {
    this.checkInOut = checkInOut;
  }


  public HotelProductPolicyDetails deposit(HotelProductDepositPolicy deposit) {
    this.deposit = deposit;
    return this;
  }

  /**
   * Get deposit
   * @return deposit
   */
  @javax.annotation.Nullable
  public HotelProductDepositPolicy getDeposit() {
    return deposit;
  }

  public void setDeposit(HotelProductDepositPolicy deposit) {
    this.deposit = deposit;
  }


  public HotelProductPolicyDetails guarantee(HotelProductGuaranteePolicy guarantee) {
    this.guarantee = guarantee;
    return this;
  }

  /**
   * Get guarantee
   * @return guarantee
   */
  @javax.annotation.Nullable
  public HotelProductGuaranteePolicy getGuarantee() {
    return guarantee;
  }

  public void setGuarantee(HotelProductGuaranteePolicy guarantee) {
    this.guarantee = guarantee;
  }


  public HotelProductPolicyDetails holdTime(HotelProductHoldPolicy holdTime) {
    this.holdTime = holdTime;
    return this;
  }

  /**
   * Get holdTime
   * @return holdTime
   */
  @javax.annotation.Nullable
  public HotelProductHoldPolicy getHoldTime() {
    return holdTime;
  }

  public void setHoldTime(HotelProductHoldPolicy holdTime) {
    this.holdTime = holdTime;
  }


  public HotelProductPolicyDetails paymentType(PaymentType paymentType) {
    this.paymentType = paymentType;
    return this;
  }

  /**
   * Get paymentType
   * @return paymentType
   */
  @javax.annotation.Nullable
  public PaymentType getPaymentType() {
    return paymentType;
  }

  public void setPaymentType(PaymentType paymentType) {
    this.paymentType = paymentType;
  }


  public HotelProductPolicyDetails prepay(HotelProductDepositPolicy prepay) {
    this.prepay = prepay;
    return this;
  }

  /**
   * Get prepay
   * @return prepay
   */
  @javax.annotation.Nullable
  public HotelProductDepositPolicy getPrepay() {
    return prepay;
  }

  public void setPrepay(HotelProductDepositPolicy prepay) {
    this.prepay = prepay;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    HotelProductPolicyDetails hotelProductPolicyDetails = (HotelProductPolicyDetails) o;
    return Objects.equals(this.cancellation, hotelProductPolicyDetails.cancellation) &&
        Objects.equals(this.checkInOut, hotelProductPolicyDetails.checkInOut) &&
        Objects.equals(this.deposit, hotelProductPolicyDetails.deposit) &&
        Objects.equals(this.guarantee, hotelProductPolicyDetails.guarantee) &&
        Objects.equals(this.holdTime, hotelProductPolicyDetails.holdTime) &&
        Objects.equals(this.paymentType, hotelProductPolicyDetails.paymentType) &&
        Objects.equals(this.prepay, hotelProductPolicyDetails.prepay);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cancellation, checkInOut, deposit, guarantee, holdTime, paymentType, prepay);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class HotelProductPolicyDetails {\n");
    sb.append("    cancellation: ").append(toIndentedString(cancellation)).append("\n");
    sb.append("    checkInOut: ").append(toIndentedString(checkInOut)).append("\n");
    sb.append("    deposit: ").append(toIndentedString(deposit)).append("\n");
    sb.append("    guarantee: ").append(toIndentedString(guarantee)).append("\n");
    sb.append("    holdTime: ").append(toIndentedString(holdTime)).append("\n");
    sb.append("    paymentType: ").append(toIndentedString(paymentType)).append("\n");
    sb.append("    prepay: ").append(toIndentedString(prepay)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("cancellation");
    openapiFields.add("checkInOut");
    openapiFields.add("deposit");
    openapiFields.add("guarantee");
    openapiFields.add("holdTime");
    openapiFields.add("paymentType");
    openapiFields.add("prepay");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to HotelProductPolicyDetails
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!HotelProductPolicyDetails.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in HotelProductPolicyDetails is not found in the empty JSON string", HotelProductPolicyDetails.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!HotelProductPolicyDetails.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `HotelProductPolicyDetails` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `cancellation`
      if (jsonObj.get("cancellation") != null && !jsonObj.get("cancellation").isJsonNull()) {
        HotelProductCancellationPolicy.validateJsonElement(jsonObj.get("cancellation"));
      }
      // validate the optional field `checkInOut`
      if (jsonObj.get("checkInOut") != null && !jsonObj.get("checkInOut").isJsonNull()) {
        HotelProductCheckInOutPolicy.validateJsonElement(jsonObj.get("checkInOut"));
      }
      // validate the optional field `deposit`
      if (jsonObj.get("deposit") != null && !jsonObj.get("deposit").isJsonNull()) {
        HotelProductDepositPolicy.validateJsonElement(jsonObj.get("deposit"));
      }
      // validate the optional field `guarantee`
      if (jsonObj.get("guarantee") != null && !jsonObj.get("guarantee").isJsonNull()) {
        HotelProductGuaranteePolicy.validateJsonElement(jsonObj.get("guarantee"));
      }
      // validate the optional field `holdTime`
      if (jsonObj.get("holdTime") != null && !jsonObj.get("holdTime").isJsonNull()) {
        HotelProductHoldPolicy.validateJsonElement(jsonObj.get("holdTime"));
      }
      // validate the optional field `paymentType`
      if (jsonObj.get("paymentType") != null && !jsonObj.get("paymentType").isJsonNull()) {
        PaymentType.validateJsonElement(jsonObj.get("paymentType"));
      }
      // validate the optional field `prepay`
      if (jsonObj.get("prepay") != null && !jsonObj.get("prepay").isJsonNull()) {
        HotelProductDepositPolicy.validateJsonElement(jsonObj.get("prepay"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!HotelProductPolicyDetails.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'HotelProductPolicyDetails' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<HotelProductPolicyDetails> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(HotelProductPolicyDetails.class));

       return (TypeAdapter<T>) new TypeAdapter<HotelProductPolicyDetails>() {
           @Override
           public void write(JsonWriter out, HotelProductPolicyDetails value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public HotelProductPolicyDetails read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of HotelProductPolicyDetails given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of HotelProductPolicyDetails
   * @throws IOException if the JSON string is invalid with respect to HotelProductPolicyDetails
   */
  public static HotelProductPolicyDetails fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, HotelProductPolicyDetails.class);
  }

  /**
   * Convert an instance of HotelProductPolicyDetails to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

