/**
 * Hotel Search API
 * Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization-262)** for more information on how to generate an access token.   Please also be aware that our test environment is based on a subset of the production for this API it may change dynamically. For your tests, use big cities like LON (London) or NYC (New-York).
 *
 * The version of the OpenAPI document: 3.0.8
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.HotelSearchApi);
  }
}(this, function(expect, HotelSearchApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new HotelSearchApi.HotelOffer();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('HotelOffer', function() {
    it('should create an instance of HotelOffer', function() {
      // uncomment below and update the code to test HotelOffer
      //var instance = new HotelSearchApi.HotelOffer();
      //expect(instance).to.be.a(HotelSearchApi.HotelOffer);
    });

    it('should have the property boardType (base name: "boardType")', function() {
      // uncomment below and update the code to test the property boardType
      //var instance = new HotelSearchApi.HotelOffer();
      //expect(instance).to.be();
    });

    it('should have the property category (base name: "category")', function() {
      // uncomment below and update the code to test the property category
      //var instance = new HotelSearchApi.HotelOffer();
      //expect(instance).to.be();
    });

    it('should have the property checkInDate (base name: "checkInDate")', function() {
      // uncomment below and update the code to test the property checkInDate
      //var instance = new HotelSearchApi.HotelOffer();
      //expect(instance).to.be();
    });

    it('should have the property checkOutDate (base name: "checkOutDate")', function() {
      // uncomment below and update the code to test the property checkOutDate
      //var instance = new HotelSearchApi.HotelOffer();
      //expect(instance).to.be();
    });

    it('should have the property commission (base name: "commission")', function() {
      // uncomment below and update the code to test the property commission
      //var instance = new HotelSearchApi.HotelOffer();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new HotelSearchApi.HotelOffer();
      //expect(instance).to.be();
    });

    it('should have the property guests (base name: "guests")', function() {
      // uncomment below and update the code to test the property guests
      //var instance = new HotelSearchApi.HotelOffer();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new HotelSearchApi.HotelOffer();
      //expect(instance).to.be();
    });

    it('should have the property policies (base name: "policies")', function() {
      // uncomment below and update the code to test the property policies
      //var instance = new HotelSearchApi.HotelOffer();
      //expect(instance).to.be();
    });

    it('should have the property price (base name: "price")', function() {
      // uncomment below and update the code to test the property price
      //var instance = new HotelSearchApi.HotelOffer();
      //expect(instance).to.be();
    });

    it('should have the property rateCode (base name: "rateCode")', function() {
      // uncomment below and update the code to test the property rateCode
      //var instance = new HotelSearchApi.HotelOffer();
      //expect(instance).to.be();
    });

    it('should have the property rateFamilyEstimated (base name: "rateFamilyEstimated")', function() {
      // uncomment below and update the code to test the property rateFamilyEstimated
      //var instance = new HotelSearchApi.HotelOffer();
      //expect(instance).to.be();
    });

    it('should have the property room (base name: "room")', function() {
      // uncomment below and update the code to test the property room
      //var instance = new HotelSearchApi.HotelOffer();
      //expect(instance).to.be();
    });

    it('should have the property roomQuantity (base name: "roomQuantity")', function() {
      // uncomment below and update the code to test the property roomQuantity
      //var instance = new HotelSearchApi.HotelOffer();
      //expect(instance).to.be();
    });

    it('should have the property self (base name: "self")', function() {
      // uncomment below and update the code to test the property self
      //var instance = new HotelSearchApi.HotelOffer();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "type")', function() {
      // uncomment below and update the code to test the property type
      //var instance = new HotelSearchApi.HotelOffer();
      //expect(instance).to.be();
    });

  });

}));
