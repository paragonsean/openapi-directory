/**
 * Hotel Search API
 * Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization-262)** for more information on how to generate an access token.   Please also be aware that our test environment is based on a subset of the production for this API it may change dynamically. For your tests, use big cities like LON (London) or NYC (New-York).
 *
 * The version of the OpenAPI document: 3.0.8
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The HotelProductEstimatedRoomType model module.
 * @module model/HotelProductEstimatedRoomType
 * @version 3.0.8
 */
class HotelProductEstimatedRoomType {
    /**
     * Constructs a new <code>HotelProductEstimatedRoomType</code>.
     * estimated room category, bed type and number of beds in the room. This information has been parsed from the room description, and is thus only provided for informational purposes
     * @alias module:model/HotelProductEstimatedRoomType
     */
    constructor() { 
        
        HotelProductEstimatedRoomType.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>HotelProductEstimatedRoomType</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/HotelProductEstimatedRoomType} obj Optional instance to populate.
     * @return {module:model/HotelProductEstimatedRoomType} The populated <code>HotelProductEstimatedRoomType</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new HotelProductEstimatedRoomType();

            if (data.hasOwnProperty('bedType')) {
                obj['bedType'] = ApiClient.convertToType(data['bedType'], 'String');
            }
            if (data.hasOwnProperty('beds')) {
                obj['beds'] = ApiClient.convertToType(data['beds'], 'Number');
            }
            if (data.hasOwnProperty('category')) {
                obj['category'] = ApiClient.convertToType(data['category'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>HotelProductEstimatedRoomType</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>HotelProductEstimatedRoomType</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['bedType'] && !(typeof data['bedType'] === 'string' || data['bedType'] instanceof String)) {
            throw new Error("Expected the field `bedType` to be a primitive type in the JSON string but got " + data['bedType']);
        }
        // ensure the json data is a string
        if (data['category'] && !(typeof data['category'] === 'string' || data['category'] instanceof String)) {
            throw new Error("Expected the field `category` to be a primitive type in the JSON string but got " + data['category']);
        }

        return true;
    }


}



/**
 * Type of the bed
 * @member {String} bedType
 */
HotelProductEstimatedRoomType.prototype['bedType'] = undefined;

/**
 * Number of beds in the room (1-9)
 * @member {Number} beds
 */
HotelProductEstimatedRoomType.prototype['beds'] = undefined;

/**
 * Category code
 * @member {String} category
 */
HotelProductEstimatedRoomType.prototype['category'] = undefined;






export default HotelProductEstimatedRoomType;

