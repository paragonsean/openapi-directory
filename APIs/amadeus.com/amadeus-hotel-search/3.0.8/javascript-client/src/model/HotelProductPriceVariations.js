/**
 * Hotel Search API
 * Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization-262)** for more information on how to generate an access token.   Please also be aware that our test environment is based on a subset of the production for this API it may change dynamically. For your tests, use big cities like LON (London) or NYC (New-York).
 *
 * The version of the OpenAPI document: 3.0.8
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import HotelProductPriceVariation from './HotelProductPriceVariation';
import Price from './Price';

/**
 * The HotelProductPriceVariations model module.
 * @module model/HotelProductPriceVariations
 * @version 3.0.8
 */
class HotelProductPriceVariations {
    /**
     * Constructs a new <code>HotelProductPriceVariations</code>.
     * Daily price variations and the average daily price (when available) is shown here
     * @alias module:model/HotelProductPriceVariations
     */
    constructor() { 
        
        HotelProductPriceVariations.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>HotelProductPriceVariations</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/HotelProductPriceVariations} obj Optional instance to populate.
     * @return {module:model/HotelProductPriceVariations} The populated <code>HotelProductPriceVariations</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new HotelProductPriceVariations();

            if (data.hasOwnProperty('average')) {
                obj['average'] = Price.constructFromObject(data['average']);
            }
            if (data.hasOwnProperty('changes')) {
                obj['changes'] = ApiClient.convertToType(data['changes'], [HotelProductPriceVariation]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>HotelProductPriceVariations</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>HotelProductPriceVariations</code>.
     */
    static validateJSON(data) {
        // validate the optional field `average`
        if (data['average']) { // data not null
          Price.validateJSON(data['average']);
        }
        if (data['changes']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['changes'])) {
                throw new Error("Expected the field `changes` to be an array in the JSON data but got " + data['changes']);
            }
            // validate the optional field `changes` (array)
            for (const item of data['changes']) {
                HotelProductPriceVariation.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {module:model/Price} average
 */
HotelProductPriceVariations.prototype['average'] = undefined;

/**
 * A collection of price periods if the daily price changes during the stay
 * @member {Array.<module:model/HotelProductPriceVariation>} changes
 */
HotelProductPriceVariations.prototype['changes'] = undefined;






export default HotelProductPriceVariations;

