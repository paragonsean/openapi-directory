/**
 * Hotel Search API
 * Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization-262)** for more information on how to generate an access token.   Please also be aware that our test environment is based on a subset of the production for this API it may change dynamically. For your tests, use big cities like LON (London) or NYC (New-York).
 *
 * The version of the OpenAPI document: 3.0.8
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import QualifiedFreeText from './QualifiedFreeText';

/**
 * The HotelProductCommission model module.
 * @module model/HotelProductCommission
 * @version 3.0.8
 */
class HotelProductCommission {
    /**
     * Constructs a new <code>HotelProductCommission</code>.
     * @alias module:model/HotelProductCommission
     */
    constructor() { 
        
        HotelProductCommission.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>HotelProductCommission</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/HotelProductCommission} obj Optional instance to populate.
     * @return {module:model/HotelProductCommission} The populated <code>HotelProductCommission</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new HotelProductCommission();

            if (data.hasOwnProperty('amount')) {
                obj['amount'] = ApiClient.convertToType(data['amount'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = QualifiedFreeText.constructFromObject(data['description']);
            }
            if (data.hasOwnProperty('percentage')) {
                obj['percentage'] = ApiClient.convertToType(data['percentage'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>HotelProductCommission</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>HotelProductCommission</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['amount'] && !(typeof data['amount'] === 'string' || data['amount'] instanceof String)) {
            throw new Error("Expected the field `amount` to be a primitive type in the JSON string but got " + data['amount']);
        }
        // validate the optional field `description`
        if (data['description']) { // data not null
          QualifiedFreeText.validateJSON(data['description']);
        }
        // ensure the json data is a string
        if (data['percentage'] && !(typeof data['percentage'] === 'string' || data['percentage'] instanceof String)) {
            throw new Error("Expected the field `percentage` to be a primitive type in the JSON string but got " + data['percentage']);
        }

        return true;
    }


}



/**
 * Amount of the commission paid to the travel seller. The amount is always linked to the currency code of the offer
 * @member {String} amount
 */
HotelProductCommission.prototype['amount'] = undefined;

/**
 * @member {module:model/QualifiedFreeText} description
 */
HotelProductCommission.prototype['description'] = undefined;

/**
 * Percentage of the commission paid to the travel seller. Value is between 0 and 100
 * @member {String} percentage
 */
HotelProductCommission.prototype['percentage'] = undefined;






export default HotelProductCommission;

