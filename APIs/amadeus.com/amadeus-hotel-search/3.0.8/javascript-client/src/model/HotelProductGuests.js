/**
 * Hotel Search API
 * Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization-262)** for more information on how to generate an access token.   Please also be aware that our test environment is based on a subset of the production for this API it may change dynamically. For your tests, use big cities like LON (London) or NYC (New-York).
 *
 * The version of the OpenAPI document: 3.0.8
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The HotelProductGuests model module.
 * @module model/HotelProductGuests
 * @version 3.0.8
 */
class HotelProductGuests {
    /**
     * Constructs a new <code>HotelProductGuests</code>.
     * @alias module:model/HotelProductGuests
     */
    constructor() { 
        
        HotelProductGuests.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>HotelProductGuests</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/HotelProductGuests} obj Optional instance to populate.
     * @return {module:model/HotelProductGuests} The populated <code>HotelProductGuests</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new HotelProductGuests();

            if (data.hasOwnProperty('adults')) {
                obj['adults'] = ApiClient.convertToType(data['adults'], 'Number');
            }
            if (data.hasOwnProperty('childAges')) {
                obj['childAges'] = ApiClient.convertToType(data['childAges'], ['Number']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>HotelProductGuests</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>HotelProductGuests</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['childAges'])) {
            throw new Error("Expected the field `childAges` to be an array in the JSON data but got " + data['childAges']);
        }

        return true;
    }


}



/**
 * number of adult guests (1-9) per room
 * @member {Number} adults
 */
HotelProductGuests.prototype['adults'] = undefined;

/**
 * Comma separated list of ages of each child at the time of check-out from the hotel. If several children have the same age, the ages will be repeated.
 * @member {Array.<Number>} childAges
 */
HotelProductGuests.prototype['childAges'] = undefined;






export default HotelProductGuests;

