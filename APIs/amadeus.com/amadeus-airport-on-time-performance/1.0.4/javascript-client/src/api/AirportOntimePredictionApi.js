/**
 * Airport On-Time Performance
 * Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization-262)** for more information on how to generate an access token.
 *
 * The version of the OpenAPI document: 1.0.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Error400 from '../model/Error400';
import Error500 from '../model/Error500';
import Prediction from '../model/Prediction';

/**
* AirportOntimePrediction service.
* @module api/AirportOntimePredictionApi
* @version 1.0.4
*/
export default class AirportOntimePredictionApi {

    /**
    * Constructs a new AirportOntimePredictionApi. 
    * @alias module:api/AirportOntimePredictionApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getAirportOnTimePrediction operation.
     * @callback module:api/AirportOntimePredictionApi~getAirportOnTimePredictionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Prediction} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns a percentage of on-time flight departures from a given airport.
     * @param {String} airportCode airport [IATA code](http://www.iata.org/publications/Pages/code-search.aspx), e.g. BOS for Boston
     * @param {Date} date the date on which the traveler will depart from the give airport. Dates are specified in the [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) YYYY-MM-DD format, e.g. 2019-12-25
     * @param {module:api/AirportOntimePredictionApi~getAirportOnTimePredictionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Prediction}
     */
    getAirportOnTimePrediction(airportCode, date, callback) {
      let postBody = null;
      // verify the required parameter 'airportCode' is set
      if (airportCode === undefined || airportCode === null) {
        throw new Error("Missing the required parameter 'airportCode' when calling getAirportOnTimePrediction");
      }
      // verify the required parameter 'date' is set
      if (date === undefined || date === null) {
        throw new Error("Missing the required parameter 'date' when calling getAirportOnTimePrediction");
      }

      let pathParams = {
      };
      let queryParams = {
        'airportCode': airportCode,
        'date': date
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/vnd.amadeus+json'];
      let returnType = Prediction;
      return this.apiClient.callApi(
        '/airport/predictions/on-time', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
