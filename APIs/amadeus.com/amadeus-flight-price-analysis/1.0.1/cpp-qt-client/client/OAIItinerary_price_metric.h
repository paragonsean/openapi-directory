/**
 * Flight Price Analysis API
 * Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization-262)** for more information on how to generate an access token.
 *
 * The version of the OpenAPI document: 1.0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIItinerary_price_metric.h
 *
 * price metric
 */

#ifndef OAIItinerary_price_metric_H
#define OAIItinerary_price_metric_H

#include <QJsonObject>

#include "OAIItinerary_price_metric_priceMetrics_inner.h"
#include "OAILocation.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAILocation;
class OAIItinerary_price_metric_priceMetrics_inner;

class OAIItinerary_price_metric : public OAIObject {
public:
    OAIItinerary_price_metric();
    OAIItinerary_price_metric(QString json);
    ~OAIItinerary_price_metric() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCurrencyCode() const;
    void setCurrencyCode(const QString &currency_code);
    bool is_currency_code_Set() const;
    bool is_currency_code_Valid() const;

    QString getDepartureDate() const;
    void setDepartureDate(const QString &departure_date);
    bool is_departure_date_Set() const;
    bool is_departure_date_Valid() const;

    OAILocation getDestination() const;
    void setDestination(const OAILocation &destination);
    bool is_destination_Set() const;
    bool is_destination_Valid() const;

    bool isOneWay() const;
    void setOneWay(const bool &one_way);
    bool is_one_way_Set() const;
    bool is_one_way_Valid() const;

    OAILocation getOrigin() const;
    void setOrigin(const OAILocation &origin);
    bool is_origin_Set() const;
    bool is_origin_Valid() const;

    QList<OAIItinerary_price_metric_priceMetrics_inner> getPriceMetrics() const;
    void setPriceMetrics(const QList<OAIItinerary_price_metric_priceMetrics_inner> &price_metrics);
    bool is_price_metrics_Set() const;
    bool is_price_metrics_Valid() const;

    QString getTransportType() const;
    void setTransportType(const QString &transport_type);
    bool is_transport_type_Set() const;
    bool is_transport_type_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_currency_code;
    bool m_currency_code_isSet;
    bool m_currency_code_isValid;

    QString m_departure_date;
    bool m_departure_date_isSet;
    bool m_departure_date_isValid;

    OAILocation m_destination;
    bool m_destination_isSet;
    bool m_destination_isValid;

    bool m_one_way;
    bool m_one_way_isSet;
    bool m_one_way_isValid;

    OAILocation m_origin;
    bool m_origin_isSet;
    bool m_origin_isValid;

    QList<OAIItinerary_price_metric_priceMetrics_inner> m_price_metrics;
    bool m_price_metrics_isSet;
    bool m_price_metrics_isValid;

    QString m_transport_type;
    bool m_transport_type_isSet;
    bool m_transport_type_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIItinerary_price_metric)

#endif // OAIItinerary_price_metric_H
