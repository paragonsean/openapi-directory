/**
 * Flight Price Analysis API
 * Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization-262)** for more information on how to generate an access token.
 *
 * The version of the OpenAPI document: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Error400 from '../model/Error400';
import Error500 from '../model/Error500';
import GetItineraryPriceMetrics200Response from '../model/GetItineraryPriceMetrics200Response';

/**
* PriceMetrics service.
* @module api/PriceMetricsApi
* @version 1.0.1
*/
export default class PriceMetricsApi {

    /**
    * Constructs a new PriceMetricsApi. 
    * @alias module:api/PriceMetricsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getItineraryPriceMetrics operation.
     * @callback module:api/PriceMetricsApi~getItineraryPriceMetricsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetItineraryPriceMetrics200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * GET itinerary price metric
     * 
     * @param {String} originIataCode airport code, following [IATA standard](http://www.iata.org/publications/Pages/code-search.aspx), from which the traveler will depart 
     * @param {String} destinationIataCode airport code, following [IATA standard](http://www.iata.org/publications/Pages/code-search.aspx), to which the traveler is going.
     * @param {String} departureDate The date on which the traveler will depart from the origin to go to the destination.   Dates are specified in the[ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) YYYY-MM-DD format.
     * @param {Object} opts Optional parameters
     * @param {String} [currencyCode = 'EUR')] the preferred currency for display. Currency is specified in the [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format, e.g. EUR for Euro
     * @param {Boolean} [oneWay = false)] true to get price metrics for a one way trip, false to get price metrics for a round trip
     * @param {module:api/PriceMetricsApi~getItineraryPriceMetricsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetItineraryPriceMetrics200Response}
     */
    getItineraryPriceMetrics(originIataCode, destinationIataCode, departureDate, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'originIataCode' is set
      if (originIataCode === undefined || originIataCode === null) {
        throw new Error("Missing the required parameter 'originIataCode' when calling getItineraryPriceMetrics");
      }
      // verify the required parameter 'destinationIataCode' is set
      if (destinationIataCode === undefined || destinationIataCode === null) {
        throw new Error("Missing the required parameter 'destinationIataCode' when calling getItineraryPriceMetrics");
      }
      // verify the required parameter 'departureDate' is set
      if (departureDate === undefined || departureDate === null) {
        throw new Error("Missing the required parameter 'departureDate' when calling getItineraryPriceMetrics");
      }

      let pathParams = {
      };
      let queryParams = {
        'originIataCode': originIataCode,
        'destinationIataCode': destinationIataCode,
        'departureDate': departureDate,
        'currencyCode': opts['currencyCode'],
        'oneWay': opts['oneWay']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/vnd.amadeus+json'];
      let returnType = GetItineraryPriceMetrics200Response;
      return this.apiClient.callApi(
        '/analytics/itinerary-price-metrics', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
