/**
 * Flight Busiest Traveling Period
 *  Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization-262)** for more information on how to generate an access token.  Please also be aware that our test environment is based on a subset of the production, to see what is included in test please refer to our **[data collection](https://github.com/amadeus4dev/data-collection)**.
 *
 * The version of the OpenAPI document: 1.0.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AirTraffic from './model/AirTraffic';
import Analytics from './model/Analytics';
import CollectionLinks from './model/CollectionLinks';
import CollectionMeta from './model/CollectionMeta';
import Error400 from './model/Error400';
import Error500 from './model/Error500';
import Issue from './model/Issue';
import IssueSource from './model/IssueSource';
import Success from './model/Success';
import Travelers from './model/Travelers';
import AirTrafficApi from './api/AirTrafficApi';


/**
*  Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization-262)** for more information on how to generate an access token.  Please also be aware that our test environment is based on a subset of the production, to see what is included in test please refer to our **[data collection](https://github.com/amadeus4dev/data-collection)**..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var FlightBusiestTravelingPeriod = require('index'); // See note below*.
* var xxxSvc = new FlightBusiestTravelingPeriod.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new FlightBusiestTravelingPeriod.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new FlightBusiestTravelingPeriod.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new FlightBusiestTravelingPeriod.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.0.2
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AirTraffic model constructor.
     * @property {module:model/AirTraffic}
     */
    AirTraffic,

    /**
     * The Analytics model constructor.
     * @property {module:model/Analytics}
     */
    Analytics,

    /**
     * The CollectionLinks model constructor.
     * @property {module:model/CollectionLinks}
     */
    CollectionLinks,

    /**
     * The CollectionMeta model constructor.
     * @property {module:model/CollectionMeta}
     */
    CollectionMeta,

    /**
     * The Error400 model constructor.
     * @property {module:model/Error400}
     */
    Error400,

    /**
     * The Error500 model constructor.
     * @property {module:model/Error500}
     */
    Error500,

    /**
     * The Issue model constructor.
     * @property {module:model/Issue}
     */
    Issue,

    /**
     * The IssueSource model constructor.
     * @property {module:model/IssueSource}
     */
    IssueSource,

    /**
     * The Success model constructor.
     * @property {module:model/Success}
     */
    Success,

    /**
     * The Travelers model constructor.
     * @property {module:model/Travelers}
     */
    Travelers,

    /**
    * The AirTrafficApi service constructor.
    * @property {module:api/AirTrafficApi}
    */
    AirTrafficApi
};
