/**
 * Flight Availibilities Search
 *  Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization-262)** for more information on how to generate an access token.   Please also be aware that our test environment is based on a subset of the production, if you are not returning any results try with big cities/airports like LON (London) or NYC (New-York).
 *
 * The version of the OpenAPI document: 1.0.2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFlightFiltersLight.h
 *
 * 
 */

#ifndef OAIFlightFiltersLight_H
#define OAIFlightFiltersLight_H

#include <QJsonObject>

#include "OAICabinRestriction.h"
#include "OAICarrierRestrictions.h"
#include "OAIConnectionRestriction.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICabinRestriction;
class OAICarrierRestrictions;
class OAIConnectionRestriction;

class OAIFlightFiltersLight : public OAIObject {
public:
    OAIFlightFiltersLight();
    OAIFlightFiltersLight(QString json);
    ~OAIFlightFiltersLight() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAICabinRestriction> getCabinRestrictions() const;
    void setCabinRestrictions(const QList<OAICabinRestriction> &cabin_restrictions);
    bool is_cabin_restrictions_Set() const;
    bool is_cabin_restrictions_Valid() const;

    OAICarrierRestrictions getCarrierRestrictions() const;
    void setCarrierRestrictions(const OAICarrierRestrictions &carrier_restrictions);
    bool is_carrier_restrictions_Set() const;
    bool is_carrier_restrictions_Valid() const;

    OAIConnectionRestriction getConnectionRestriction() const;
    void setConnectionRestriction(const OAIConnectionRestriction &connection_restriction);
    bool is_connection_restriction_Set() const;
    bool is_connection_restriction_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAICabinRestriction> m_cabin_restrictions;
    bool m_cabin_restrictions_isSet;
    bool m_cabin_restrictions_isValid;

    OAICarrierRestrictions m_carrier_restrictions;
    bool m_carrier_restrictions_isSet;
    bool m_carrier_restrictions_isValid;

    OAIConnectionRestriction m_connection_restriction;
    bool m_connection_restriction_isSet;
    bool m_connection_restriction_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFlightFiltersLight)

#endif // OAIFlightFiltersLight_H
