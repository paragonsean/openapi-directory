/**
 * Flight Availibilities Search
 *  Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization-262)** for more information on how to generate an access token.   Please also be aware that our test environment is based on a subset of the production, if you are not returning any results try with big cities/airports like LON (London) or NYC (New-York).
 *
 * The version of the OpenAPI document: 1.0.2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITravelerInfo.h
 *
 * 
 */

#ifndef OAITravelerInfo_H
#define OAITravelerInfo_H

#include <QJsonObject>

#include "OAITravelerType.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAITravelerInfo : public OAIObject {
public:
    OAITravelerInfo();
    OAITravelerInfo(QString json);
    ~OAITravelerInfo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAssociatedAdultId() const;
    void setAssociatedAdultId(const QString &associated_adult_id);
    bool is_associated_adult_id_Set() const;
    bool is_associated_adult_id_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAITravelerType getTravelerType() const;
    void setTravelerType(const OAITravelerType &traveler_type);
    bool is_traveler_type_Set() const;
    bool is_traveler_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_associated_adult_id;
    bool m_associated_adult_id_isSet;
    bool m_associated_adult_id_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAITravelerType m_traveler_type;
    bool m_traveler_type_isSet;
    bool m_traveler_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITravelerInfo)

#endif // OAITravelerInfo_H
