/**
 * Flight Availibilities Search
 *  Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization-262)** for more information on how to generate an access token.   Please also be aware that our test environment is based on a subset of the production, if you are not returning any results try with big cities/airports like LON (London) or NYC (New-York).
 *
 * The version of the OpenAPI document: 1.0.2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITourAllotment.h
 *
 * 
 */

#ifndef OAITourAllotment_H
#define OAITourAllotment_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAITourAllotment : public OAIObject {
public:
    OAITourAllotment();
    OAITourAllotment(QString json);
    ~OAITourAllotment() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getTourName() const;
    void setTourName(const QString &tour_name);
    bool is_tour_name_Set() const;
    bool is_tour_name_Valid() const;

    QString getTourReference() const;
    void setTourReference(const QString &tour_reference);
    bool is_tour_reference_Set() const;
    bool is_tour_reference_Valid() const;

    QString getMode() const;
    void setMode(const QString &mode);
    bool is_mode_Set() const;
    bool is_mode_Valid() const;

    double getRemainingSeats() const;
    void setRemainingSeats(const double &remaining_seats);
    bool is_remaining_seats_Set() const;
    bool is_remaining_seats_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_tour_name;
    bool m_tour_name_isSet;
    bool m_tour_name_isValid;

    QString m_tour_reference;
    bool m_tour_reference_isSet;
    bool m_tour_reference_isValid;

    QString m_mode;
    bool m_mode_isSet;
    bool m_mode_isValid;

    double m_remaining_seats;
    bool m_remaining_seats_isSet;
    bool m_remaining_seats_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITourAllotment)

#endif // OAITourAllotment_H
