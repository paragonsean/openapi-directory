/**
 * Flight Availibilities Search
 *  Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization-262)** for more information on how to generate an access token.   Please also be aware that our test environment is based on a subset of the production, if you are not returning any results try with big cities/airports like LON (London) or NYC (New-York).
 *
 * The version of the OpenAPI document: 1.0.2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFlightAvailability.h
 *
 * 
 */

#ifndef OAIFlightAvailability_H
#define OAIFlightAvailability_H

#include <QJsonObject>

#include "OAIExtended_Segment.h"
#include "OAIFlightOfferSource.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIExtended_Segment;

class OAIFlightAvailability : public OAIObject {
public:
    OAIFlightAvailability();
    OAIFlightAvailability(QString json);
    ~OAIFlightAvailability() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDuration() const;
    void setDuration(const QString &duration);
    bool is_duration_Set() const;
    bool is_duration_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    bool isInstantTicketingRequired() const;
    void setInstantTicketingRequired(const bool &instant_ticketing_required);
    bool is_instant_ticketing_required_Set() const;
    bool is_instant_ticketing_required_Valid() const;

    QString getOriginDestinationId() const;
    void setOriginDestinationId(const QString &origin_destination_id);
    bool is_origin_destination_id_Set() const;
    bool is_origin_destination_id_Valid() const;

    bool isPaymentCardRequired() const;
    void setPaymentCardRequired(const bool &payment_card_required);
    bool is_payment_card_required_Set() const;
    bool is_payment_card_required_Valid() const;

    QList<OAIExtended_Segment> getSegments() const;
    void setSegments(const QList<OAIExtended_Segment> &segments);
    bool is_segments_Set() const;
    bool is_segments_Valid() const;

    OAIFlightOfferSource getSource() const;
    void setSource(const OAIFlightOfferSource &source);
    bool is_source_Set() const;
    bool is_source_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_duration;
    bool m_duration_isSet;
    bool m_duration_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    bool m_instant_ticketing_required;
    bool m_instant_ticketing_required_isSet;
    bool m_instant_ticketing_required_isValid;

    QString m_origin_destination_id;
    bool m_origin_destination_id_isSet;
    bool m_origin_destination_id_isValid;

    bool m_payment_card_required;
    bool m_payment_card_required_isSet;
    bool m_payment_card_required_isValid;

    QList<OAIExtended_Segment> m_segments;
    bool m_segments_isSet;
    bool m_segments_isValid;

    OAIFlightOfferSource m_source;
    bool m_source_isSet;
    bool m_source_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFlightAvailability)

#endif // OAIFlightAvailability_H
