/**
 * Flight Availibilities Search
 *  Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization-262)** for more information on how to generate an access token.   Please also be aware that our test environment is based on a subset of the production, if you are not returning any results try with big cities/airports like LON (London) or NYC (New-York).
 *
 * The version of the OpenAPI document: 1.0.2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIExtended_SearchCriteria.h
 *
 * 
 */

#ifndef OAIExtended_SearchCriteria_H
#define OAIExtended_SearchCriteria_H

#include <QJsonObject>

#include "OAIFlightFiltersLight.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIFlightFiltersLight;

class OAIExtended_SearchCriteria : public OAIObject {
public:
    OAIExtended_SearchCriteria();
    OAIExtended_SearchCriteria(QString json);
    ~OAIExtended_SearchCriteria() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isExcludeAllotments() const;
    void setExcludeAllotments(const bool &exclude_allotments);
    bool is_exclude_allotments_Set() const;
    bool is_exclude_allotments_Valid() const;

    OAIFlightFiltersLight getFlightFilters() const;
    void setFlightFilters(const OAIFlightFiltersLight &flight_filters);
    bool is_flight_filters_Set() const;
    bool is_flight_filters_Valid() const;

    QString getRClass() const;
    void setRClass(const QString &r_class);
    bool is_r_class_Set() const;
    bool is_r_class_Valid() const;

    bool isIncludeClosedContent() const;
    void setIncludeClosedContent(const bool &include_closed_content);
    bool is_include_closed_content_Set() const;
    bool is_include_closed_content_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_exclude_allotments;
    bool m_exclude_allotments_isSet;
    bool m_exclude_allotments_isValid;

    OAIFlightFiltersLight m_flight_filters;
    bool m_flight_filters_isSet;
    bool m_flight_filters_isValid;

    QString m_r_class;
    bool m_r_class_isSet;
    bool m_r_class_isValid;

    bool m_include_closed_content;
    bool m_include_closed_content_isSet;
    bool m_include_closed_content_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIExtended_SearchCriteria)

#endif // OAIExtended_SearchCriteria_H
