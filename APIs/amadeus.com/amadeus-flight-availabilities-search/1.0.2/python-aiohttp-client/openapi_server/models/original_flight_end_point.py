# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class OriginalFlightEndPoint(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, iata_code: str=None, terminal: str=None):
        """OriginalFlightEndPoint - a model defined in OpenAPI

        :param iata_code: The iata_code of this OriginalFlightEndPoint.
        :param terminal: The terminal of this OriginalFlightEndPoint.
        """
        self.openapi_types = {
            'iata_code': str,
            'terminal': str
        }

        self.attribute_map = {
            'iata_code': 'iataCode',
            'terminal': 'terminal'
        }

        self._iata_code = iata_code
        self._terminal = terminal

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OriginalFlightEndPoint':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OriginalFlightEndPoint of this OriginalFlightEndPoint.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def iata_code(self):
        """Gets the iata_code of this OriginalFlightEndPoint.

        [IATA airline codes](http://www.iata.org/publications/Pages/code-search.aspx)

        :return: The iata_code of this OriginalFlightEndPoint.
        :rtype: str
        """
        return self._iata_code

    @iata_code.setter
    def iata_code(self, iata_code):
        """Sets the iata_code of this OriginalFlightEndPoint.

        [IATA airline codes](http://www.iata.org/publications/Pages/code-search.aspx)

        :param iata_code: The iata_code of this OriginalFlightEndPoint.
        :type iata_code: str
        """

        self._iata_code = iata_code

    @property
    def terminal(self):
        """Gets the terminal of this OriginalFlightEndPoint.

        terminal name / number

        :return: The terminal of this OriginalFlightEndPoint.
        :rtype: str
        """
        return self._terminal

    @terminal.setter
    def terminal(self, terminal):
        """Sets the terminal of this OriginalFlightEndPoint.

        terminal name / number

        :param terminal: The terminal of this OriginalFlightEndPoint.
        :type terminal: str
        """

        self._terminal = terminal
