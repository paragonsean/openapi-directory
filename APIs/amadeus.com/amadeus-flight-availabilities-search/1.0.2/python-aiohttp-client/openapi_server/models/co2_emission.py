# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.travel_class import TravelClass
from openapi_server import util


class Co2Emission(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cabin: TravelClass=None, weight: int=None, weight_unit: str=None):
        """Co2Emission - a model defined in OpenAPI

        :param cabin: The cabin of this Co2Emission.
        :param weight: The weight of this Co2Emission.
        :param weight_unit: The weight_unit of this Co2Emission.
        """
        self.openapi_types = {
            'cabin': TravelClass,
            'weight': int,
            'weight_unit': str
        }

        self.attribute_map = {
            'cabin': 'cabin',
            'weight': 'weight',
            'weight_unit': 'weightUnit'
        }

        self._cabin = cabin
        self._weight = weight
        self._weight_unit = weight_unit

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Co2Emission':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Co2Emission of this Co2Emission.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cabin(self):
        """Gets the cabin of this Co2Emission.


        :return: The cabin of this Co2Emission.
        :rtype: TravelClass
        """
        return self._cabin

    @cabin.setter
    def cabin(self, cabin):
        """Sets the cabin of this Co2Emission.


        :param cabin: The cabin of this Co2Emission.
        :type cabin: TravelClass
        """

        self._cabin = cabin

    @property
    def weight(self):
        """Gets the weight of this Co2Emission.

        Weight of Co2 emitted for the concerned segment

        :return: The weight of this Co2Emission.
        :rtype: int
        """
        return self._weight

    @weight.setter
    def weight(self, weight):
        """Sets the weight of this Co2Emission.

        Weight of Co2 emitted for the concerned segment

        :param weight: The weight of this Co2Emission.
        :type weight: int
        """

        self._weight = weight

    @property
    def weight_unit(self):
        """Gets the weight_unit of this Co2Emission.

        Code to qualify unit as pounds or kilos

        :return: The weight_unit of this Co2Emission.
        :rtype: str
        """
        return self._weight_unit

    @weight_unit.setter
    def weight_unit(self, weight_unit):
        """Sets the weight_unit of this Co2Emission.

        Code to qualify unit as pounds or kilos

        :param weight_unit: The weight_unit of this Co2Emission.
        :type weight_unit: str
        """

        self._weight_unit = weight_unit
