/**
 * Flight Availibilities Search
 *  Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization-262)** for more information on how to generate an access token.   Please also be aware that our test environment is based on a subset of the production, if you are not returning any results try with big cities/airports like LON (London) or NYC (New-York).
 *
 * The version of the OpenAPI document: 1.0.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CabinRestriction from './CabinRestriction';
import CarrierRestrictions from './CarrierRestrictions';
import ConnectionRestriction from './ConnectionRestriction';

/**
 * The FlightFiltersLight model module.
 * @module model/FlightFiltersLight
 * @version 1.0.2
 */
class FlightFiltersLight {
    /**
     * Constructs a new <code>FlightFiltersLight</code>.
     * @alias module:model/FlightFiltersLight
     */
    constructor() { 
        
        FlightFiltersLight.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FlightFiltersLight</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FlightFiltersLight} obj Optional instance to populate.
     * @return {module:model/FlightFiltersLight} The populated <code>FlightFiltersLight</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FlightFiltersLight();

            if (data.hasOwnProperty('cabinRestrictions')) {
                obj['cabinRestrictions'] = ApiClient.convertToType(data['cabinRestrictions'], [CabinRestriction]);
            }
            if (data.hasOwnProperty('carrierRestrictions')) {
                obj['carrierRestrictions'] = CarrierRestrictions.constructFromObject(data['carrierRestrictions']);
            }
            if (data.hasOwnProperty('connectionRestriction')) {
                obj['connectionRestriction'] = ConnectionRestriction.constructFromObject(data['connectionRestriction']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FlightFiltersLight</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FlightFiltersLight</code>.
     */
    static validateJSON(data) {
        if (data['cabinRestrictions']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['cabinRestrictions'])) {
                throw new Error("Expected the field `cabinRestrictions` to be an array in the JSON data but got " + data['cabinRestrictions']);
            }
            // validate the optional field `cabinRestrictions` (array)
            for (const item of data['cabinRestrictions']) {
                CabinRestriction.validateJSON(item);
            };
        }
        // validate the optional field `carrierRestrictions`
        if (data['carrierRestrictions']) { // data not null
          CarrierRestrictions.validateJSON(data['carrierRestrictions']);
        }
        // validate the optional field `connectionRestriction`
        if (data['connectionRestriction']) { // data not null
          ConnectionRestriction.validateJSON(data['connectionRestriction']);
        }

        return true;
    }


}



/**
 * Restriction towards cabins.
 * @member {Array.<module:model/CabinRestriction>} cabinRestrictions
 */
FlightFiltersLight.prototype['cabinRestrictions'] = undefined;

/**
 * @member {module:model/CarrierRestrictions} carrierRestrictions
 */
FlightFiltersLight.prototype['carrierRestrictions'] = undefined;

/**
 * @member {module:model/ConnectionRestriction} connectionRestriction
 */
FlightFiltersLight.prototype['connectionRestriction'] = undefined;






export default FlightFiltersLight;

