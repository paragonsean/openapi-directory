/**
 * Hotel Ratings
 * Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization-262)** for more information on how to generate an access token.   Please also be aware that our test environment is based on a subset of the production, this API in test only offers 24 hotels; 10 in London and 14 in New-York. You can find the list in our **[data collection](https://github.com/amadeus4dev/data-collection)**. 
 *
 * The version of the OpenAPI document: 1.0.2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISuccessSentiments.h
 *
 * 
 */

#ifndef OAISuccessSentiments_H
#define OAISuccessSentiments_H

#include <QJsonObject>

#include "OAICollectionMeta.h"
#include "OAIHotelSentiment.h"
#include "OAIWarningNotFound.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIHotelSentiment;
class OAICollectionMeta;
class OAIWarningNotFound;

class OAISuccessSentiments : public OAIObject {
public:
    OAISuccessSentiments();
    OAISuccessSentiments(QString json);
    ~OAISuccessSentiments() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIHotelSentiment> getData() const;
    void setData(const QList<OAIHotelSentiment> &data);
    bool is_data_Set() const;
    bool is_data_Valid() const;

    OAICollectionMeta getMeta() const;
    void setMeta(const OAICollectionMeta &meta);
    bool is_meta_Set() const;
    bool is_meta_Valid() const;

    QList<OAIWarningNotFound> getWarnings() const;
    void setWarnings(const QList<OAIWarningNotFound> &warnings);
    bool is_warnings_Set() const;
    bool is_warnings_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIHotelSentiment> m_data;
    bool m_data_isSet;
    bool m_data_isValid;

    OAICollectionMeta m_meta;
    bool m_meta_isSet;
    bool m_meta_isValid;

    QList<OAIWarningNotFound> m_warnings;
    bool m_warnings_isSet;
    bool m_warnings_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISuccessSentiments)

#endif // OAISuccessSentiments_H
