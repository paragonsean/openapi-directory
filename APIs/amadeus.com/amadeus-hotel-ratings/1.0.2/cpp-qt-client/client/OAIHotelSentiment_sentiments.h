/**
 * Hotel Ratings
 * Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization-262)** for more information on how to generate an access token.   Please also be aware that our test environment is based on a subset of the production, this API in test only offers 24 hotels; 10 in London and 14 in New-York. You can find the list in our **[data collection](https://github.com/amadeus4dev/data-collection)**. 
 *
 * The version of the OpenAPI document: 1.0.2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIHotelSentiment_sentiments.h
 *
 * Dictionary containing scores for all the available categories.  If a property does not have any category this object will not be present in the response.
 */

#ifndef OAIHotelSentiment_sentiments_H
#define OAIHotelSentiment_sentiments_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIHotelSentiment_sentiments : public OAIObject {
public:
    OAIHotelSentiment_sentiments();
    OAIHotelSentiment_sentiments(QString json);
    ~OAIHotelSentiment_sentiments() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getCatering() const;
    void setCatering(const qint32 &catering);
    bool is_catering_Set() const;
    bool is_catering_Valid() const;

    qint32 getFacilities() const;
    void setFacilities(const qint32 &facilities);
    bool is_facilities_Set() const;
    bool is_facilities_Valid() const;

    qint32 getInternet() const;
    void setInternet(const qint32 &internet);
    bool is_internet_Set() const;
    bool is_internet_Valid() const;

    qint32 getLocation() const;
    void setLocation(const qint32 &location);
    bool is_location_Set() const;
    bool is_location_Valid() const;

    qint32 getPointsOfInterest() const;
    void setPointsOfInterest(const qint32 &points_of_interest);
    bool is_points_of_interest_Set() const;
    bool is_points_of_interest_Valid() const;

    qint32 getRoomComforts() const;
    void setRoomComforts(const qint32 &room_comforts);
    bool is_room_comforts_Set() const;
    bool is_room_comforts_Valid() const;

    qint32 getService() const;
    void setService(const qint32 &service);
    bool is_service_Set() const;
    bool is_service_Valid() const;

    qint32 getSleepQuality() const;
    void setSleepQuality(const qint32 &sleep_quality);
    bool is_sleep_quality_Set() const;
    bool is_sleep_quality_Valid() const;

    qint32 getStaff() const;
    void setStaff(const qint32 &staff);
    bool is_staff_Set() const;
    bool is_staff_Valid() const;

    qint32 getSwimmingPool() const;
    void setSwimmingPool(const qint32 &swimming_pool);
    bool is_swimming_pool_Set() const;
    bool is_swimming_pool_Valid() const;

    qint32 getValueForMoney() const;
    void setValueForMoney(const qint32 &value_for_money);
    bool is_value_for_money_Set() const;
    bool is_value_for_money_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_catering;
    bool m_catering_isSet;
    bool m_catering_isValid;

    qint32 m_facilities;
    bool m_facilities_isSet;
    bool m_facilities_isValid;

    qint32 m_internet;
    bool m_internet_isSet;
    bool m_internet_isValid;

    qint32 m_location;
    bool m_location_isSet;
    bool m_location_isValid;

    qint32 m_points_of_interest;
    bool m_points_of_interest_isSet;
    bool m_points_of_interest_isValid;

    qint32 m_room_comforts;
    bool m_room_comforts_isSet;
    bool m_room_comforts_isValid;

    qint32 m_service;
    bool m_service_isSet;
    bool m_service_isValid;

    qint32 m_sleep_quality;
    bool m_sleep_quality_isSet;
    bool m_sleep_quality_isValid;

    qint32 m_staff;
    bool m_staff_isSet;
    bool m_staff_isValid;

    qint32 m_swimming_pool;
    bool m_swimming_pool_isSet;
    bool m_swimming_pool_isValid;

    qint32 m_value_for_money;
    bool m_value_for_money_isSet;
    bool m_value_for_money_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIHotelSentiment_sentiments)

#endif // OAIHotelSentiment_sentiments_H
