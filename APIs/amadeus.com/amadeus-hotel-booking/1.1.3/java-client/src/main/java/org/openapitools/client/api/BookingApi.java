/*
 * Hotel Booking
 *  Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization-262)** for more information on how to generate an access token.   Please also be aware that our test environment is based on a subset of the production for this API it may change dynamically. For your tests, use big cities like LON (London) or NYC (New-York).   **Warning: Do not perform test booking in production**. All requests are sent and processed by hotel providers. An excessive amount of fake/canceled reservation will make you blacklisted by hotel providers. 
 *
 * The version of the OpenAPI document: 1.1.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.BookingSchema;
import org.openapitools.client.model.ErrorResponse;
import org.openapitools.client.model.HotelBookedResponse;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class BookingApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public BookingApi() {
        this(Configuration.getDefaultApiClient());
    }

    public BookingApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for createBooking
     * @param requestBody &#x60;offerId&#x60;, &#x60;guests&#x60;, &#x60;payments&#x60; and optional &#x60;rooms&#x60; for the repartition (when used the &#x60;rooms&#x60; array items must match the shopping offer &#x60;roomQuantity&#x60;)  (required)
     * @param amaClientRef Client Reference to track Request/Response (optional)
     * @param acceptEncoding Compress the Response (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> Booked </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad Request  code    | title                                                          | owner    | pointer ------- | -------------------------------------------------------------- | -------- | -------   477   | INVALID FORMAT                                                 | Amadeus  |   4725   | INVALID PASSENGER ASSOCIATION                                  | Amadeus  | data/rooms/guestIds 33555   | NUMBER OF ROOMS MISMATCH BETWEEN SHOPPING AND BOOKING          | Amadeus  | data/rooms 33554   | PRICE HAS CHANGED. PLEASE GET A NEW OFFERID AND TRY AGAIN      | Amadeus  | data/offerId 36803   | OFFERID HAS EXPIRED. PLEASE GET A NEW OFFERID AND TRY AGAIN    | Amadeus  | data/offerId  1205   | INVALID CREDIT CARD TYPE                                       | Amadeus  | data/payments/card/vendorCode  8517   | INVALID CREDIT CARD NUMBER                                     | Provider | data/payments/card/cardNumber  1427   | GUARANTEE REQUIRED                                             | Provider | data/payments/card  1146   | DEPOSIT REQUIRED                                               | Provider | data/payments/card  3659   | CREDIT CARD DEPOSIT REQUIRED                                   | Provider | data/payments/card  3682   | CREDIT CARD NOT ACCEPTED AT HOTEL PROPERTY                     | Provider | data/payments/card/vendorCode  3871   | CREDIT CARD EXPIRATION DATE INVALID FOR CHECK IN DATE          | Provider | data/payments/card/expiryDate    </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error  code    | title                                                          | owner                                 ------- | -------------------------------------------------------------- | ------- 00011   | UNABLE TO PROCESS                                              | Provider 04070   | UNABLE TO PROCESS - CONTACT HELP DESK                          | Amadeus  </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call createBookingCall(BookingSchema requestBody, String amaClientRef, String acceptEncoding, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = requestBody;

        // create path and map variables
        String localVarPath = "/booking/hotel-bookings";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (amaClientRef != null) {
            localVarHeaderParams.put("Ama-Client-Ref", localVarApiClient.parameterToString(amaClientRef));
        }

        if (acceptEncoding != null) {
            localVarHeaderParams.put("Accept-Encoding", localVarApiClient.parameterToString(acceptEncoding));
        }

        final String[] localVarAccepts = {
            "application/vnd.amadeus+json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/vnd.amadeus+json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call createBookingValidateBeforeCall(BookingSchema requestBody, String amaClientRef, String acceptEncoding, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'requestBody' is set
        if (requestBody == null) {
            throw new ApiException("Missing the required parameter 'requestBody' when calling createBooking(Async)");
        }

        return createBookingCall(requestBody, amaClientRef, acceptEncoding, _callback);

    }

    /**
     * Create Orders associated to the Hotel Offers
     * 
     * @param requestBody &#x60;offerId&#x60;, &#x60;guests&#x60;, &#x60;payments&#x60; and optional &#x60;rooms&#x60; for the repartition (when used the &#x60;rooms&#x60; array items must match the shopping offer &#x60;roomQuantity&#x60;)  (required)
     * @param amaClientRef Client Reference to track Request/Response (optional)
     * @param acceptEncoding Compress the Response (optional)
     * @return HotelBookedResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> Booked </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad Request  code    | title                                                          | owner    | pointer ------- | -------------------------------------------------------------- | -------- | -------   477   | INVALID FORMAT                                                 | Amadeus  |   4725   | INVALID PASSENGER ASSOCIATION                                  | Amadeus  | data/rooms/guestIds 33555   | NUMBER OF ROOMS MISMATCH BETWEEN SHOPPING AND BOOKING          | Amadeus  | data/rooms 33554   | PRICE HAS CHANGED. PLEASE GET A NEW OFFERID AND TRY AGAIN      | Amadeus  | data/offerId 36803   | OFFERID HAS EXPIRED. PLEASE GET A NEW OFFERID AND TRY AGAIN    | Amadeus  | data/offerId  1205   | INVALID CREDIT CARD TYPE                                       | Amadeus  | data/payments/card/vendorCode  8517   | INVALID CREDIT CARD NUMBER                                     | Provider | data/payments/card/cardNumber  1427   | GUARANTEE REQUIRED                                             | Provider | data/payments/card  1146   | DEPOSIT REQUIRED                                               | Provider | data/payments/card  3659   | CREDIT CARD DEPOSIT REQUIRED                                   | Provider | data/payments/card  3682   | CREDIT CARD NOT ACCEPTED AT HOTEL PROPERTY                     | Provider | data/payments/card/vendorCode  3871   | CREDIT CARD EXPIRATION DATE INVALID FOR CHECK IN DATE          | Provider | data/payments/card/expiryDate    </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error  code    | title                                                          | owner                                 ------- | -------------------------------------------------------------- | ------- 00011   | UNABLE TO PROCESS                                              | Provider 04070   | UNABLE TO PROCESS - CONTACT HELP DESK                          | Amadeus  </td><td>  -  </td></tr>
     </table>
     */
    public HotelBookedResponse createBooking(BookingSchema requestBody, String amaClientRef, String acceptEncoding) throws ApiException {
        ApiResponse<HotelBookedResponse> localVarResp = createBookingWithHttpInfo(requestBody, amaClientRef, acceptEncoding);
        return localVarResp.getData();
    }

    /**
     * Create Orders associated to the Hotel Offers
     * 
     * @param requestBody &#x60;offerId&#x60;, &#x60;guests&#x60;, &#x60;payments&#x60; and optional &#x60;rooms&#x60; for the repartition (when used the &#x60;rooms&#x60; array items must match the shopping offer &#x60;roomQuantity&#x60;)  (required)
     * @param amaClientRef Client Reference to track Request/Response (optional)
     * @param acceptEncoding Compress the Response (optional)
     * @return ApiResponse&lt;HotelBookedResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> Booked </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad Request  code    | title                                                          | owner    | pointer ------- | -------------------------------------------------------------- | -------- | -------   477   | INVALID FORMAT                                                 | Amadeus  |   4725   | INVALID PASSENGER ASSOCIATION                                  | Amadeus  | data/rooms/guestIds 33555   | NUMBER OF ROOMS MISMATCH BETWEEN SHOPPING AND BOOKING          | Amadeus  | data/rooms 33554   | PRICE HAS CHANGED. PLEASE GET A NEW OFFERID AND TRY AGAIN      | Amadeus  | data/offerId 36803   | OFFERID HAS EXPIRED. PLEASE GET A NEW OFFERID AND TRY AGAIN    | Amadeus  | data/offerId  1205   | INVALID CREDIT CARD TYPE                                       | Amadeus  | data/payments/card/vendorCode  8517   | INVALID CREDIT CARD NUMBER                                     | Provider | data/payments/card/cardNumber  1427   | GUARANTEE REQUIRED                                             | Provider | data/payments/card  1146   | DEPOSIT REQUIRED                                               | Provider | data/payments/card  3659   | CREDIT CARD DEPOSIT REQUIRED                                   | Provider | data/payments/card  3682   | CREDIT CARD NOT ACCEPTED AT HOTEL PROPERTY                     | Provider | data/payments/card/vendorCode  3871   | CREDIT CARD EXPIRATION DATE INVALID FOR CHECK IN DATE          | Provider | data/payments/card/expiryDate    </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error  code    | title                                                          | owner                                 ------- | -------------------------------------------------------------- | ------- 00011   | UNABLE TO PROCESS                                              | Provider 04070   | UNABLE TO PROCESS - CONTACT HELP DESK                          | Amadeus  </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<HotelBookedResponse> createBookingWithHttpInfo(BookingSchema requestBody, String amaClientRef, String acceptEncoding) throws ApiException {
        okhttp3.Call localVarCall = createBookingValidateBeforeCall(requestBody, amaClientRef, acceptEncoding, null);
        Type localVarReturnType = new TypeToken<HotelBookedResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Create Orders associated to the Hotel Offers (asynchronously)
     * 
     * @param requestBody &#x60;offerId&#x60;, &#x60;guests&#x60;, &#x60;payments&#x60; and optional &#x60;rooms&#x60; for the repartition (when used the &#x60;rooms&#x60; array items must match the shopping offer &#x60;roomQuantity&#x60;)  (required)
     * @param amaClientRef Client Reference to track Request/Response (optional)
     * @param acceptEncoding Compress the Response (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> Booked </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad Request  code    | title                                                          | owner    | pointer ------- | -------------------------------------------------------------- | -------- | -------   477   | INVALID FORMAT                                                 | Amadeus  |   4725   | INVALID PASSENGER ASSOCIATION                                  | Amadeus  | data/rooms/guestIds 33555   | NUMBER OF ROOMS MISMATCH BETWEEN SHOPPING AND BOOKING          | Amadeus  | data/rooms 33554   | PRICE HAS CHANGED. PLEASE GET A NEW OFFERID AND TRY AGAIN      | Amadeus  | data/offerId 36803   | OFFERID HAS EXPIRED. PLEASE GET A NEW OFFERID AND TRY AGAIN    | Amadeus  | data/offerId  1205   | INVALID CREDIT CARD TYPE                                       | Amadeus  | data/payments/card/vendorCode  8517   | INVALID CREDIT CARD NUMBER                                     | Provider | data/payments/card/cardNumber  1427   | GUARANTEE REQUIRED                                             | Provider | data/payments/card  1146   | DEPOSIT REQUIRED                                               | Provider | data/payments/card  3659   | CREDIT CARD DEPOSIT REQUIRED                                   | Provider | data/payments/card  3682   | CREDIT CARD NOT ACCEPTED AT HOTEL PROPERTY                     | Provider | data/payments/card/vendorCode  3871   | CREDIT CARD EXPIRATION DATE INVALID FOR CHECK IN DATE          | Provider | data/payments/card/expiryDate    </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error  code    | title                                                          | owner                                 ------- | -------------------------------------------------------------- | ------- 00011   | UNABLE TO PROCESS                                              | Provider 04070   | UNABLE TO PROCESS - CONTACT HELP DESK                          | Amadeus  </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call createBookingAsync(BookingSchema requestBody, String amaClientRef, String acceptEncoding, final ApiCallback<HotelBookedResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = createBookingValidateBeforeCall(requestBody, amaClientRef, acceptEncoding, _callback);
        Type localVarReturnType = new TypeToken<HotelBookedResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
