/**
 * Hotel Booking
 *  Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization-262)** for more information on how to generate an access token.   Please also be aware that our test environment is based on a subset of the production for this API it may change dynamically. For your tests, use big cities like LON (London) or NYC (New-York).   **Warning: Do not perform test booking in production**. All requests are sent and processed by hotel providers. An excessive amount of fake/canceled reservation will make you blacklisted by hotel providers. 
 *
 * The version of the OpenAPI document: 1.1.3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRoom.h
 *
 * room
 */

#ifndef OAIRoom_H
#define OAIRoom_H

#include <QJsonObject>

#include <QSet>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIRoom : public OAIObject {
public:
    OAIRoom();
    OAIRoom(QString json);
    ~OAIRoom() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QSet<qint32> getGuestIds() const;
    void setGuestIds(const QSet<qint32> &guest_ids);
    bool is_guest_ids_Set() const;
    bool is_guest_ids_Valid() const;

    qint32 getPaymentId() const;
    void setPaymentId(const qint32 &payment_id);
    bool is_payment_id_Set() const;
    bool is_payment_id_Valid() const;

    QString getSpecialRequest() const;
    void setSpecialRequest(const QString &special_request);
    bool is_special_request_Set() const;
    bool is_special_request_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QSet<qint32> m_guest_ids;
    bool m_guest_ids_isSet;
    bool m_guest_ids_isValid;

    qint32 m_payment_id;
    bool m_payment_id_isSet;
    bool m_payment_id_isValid;

    QString m_special_request;
    bool m_special_request_isSet;
    bool m_special_request_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRoom)

#endif // OAIRoom_H
