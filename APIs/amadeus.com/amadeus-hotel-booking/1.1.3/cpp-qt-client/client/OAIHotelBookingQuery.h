/**
 * Hotel Booking
 *  Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization-262)** for more information on how to generate an access token.   Please also be aware that our test environment is based on a subset of the production for this API it may change dynamically. For your tests, use big cities like LON (London) or NYC (New-York).   **Warning: Do not perform test booking in production**. All requests are sent and processed by hotel providers. An excessive amount of fake/canceled reservation will make you blacklisted by hotel providers. 
 *
 * The version of the OpenAPI document: 1.1.3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIHotelBookingQuery.h
 *
 * 
 */

#ifndef OAIHotelBookingQuery_H
#define OAIHotelBookingQuery_H

#include <QJsonObject>

#include "OAIPayment.h"
#include "OAIRoom.h"
#include "OAIStakeholder.h"
#include <QList>
#include <QSet>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIStakeholder;
class OAIPayment;
class OAIRoom;

class OAIHotelBookingQuery : public OAIObject {
public:
    OAIHotelBookingQuery();
    OAIHotelBookingQuery(QString json);
    ~OAIHotelBookingQuery() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QSet<OAIStakeholder> getGuests() const;
    void setGuests(const QSet<OAIStakeholder> &guests);
    bool is_guests_Set() const;
    bool is_guests_Valid() const;

    QString getOfferId() const;
    void setOfferId(const QString &offer_id);
    bool is_offer_id_Set() const;
    bool is_offer_id_Valid() const;

    QSet<OAIPayment> getPayments() const;
    void setPayments(const QSet<OAIPayment> &payments);
    bool is_payments_Set() const;
    bool is_payments_Valid() const;

    QList<OAIRoom> getRooms() const;
    void setRooms(const QList<OAIRoom> &rooms);
    bool is_rooms_Set() const;
    bool is_rooms_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QSet<OAIStakeholder> m_guests;
    bool m_guests_isSet;
    bool m_guests_isValid;

    QString m_offer_id;
    bool m_offer_id_isSet;
    bool m_offer_id_isValid;

    QSet<OAIPayment> m_payments;
    bool m_payments_isSet;
    bool m_payments_isValid;

    QList<OAIRoom> m_rooms;
    bool m_rooms_isSet;
    bool m_rooms_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIHotelBookingQuery)

#endif // OAIHotelBookingQuery_H
