/**
 * Hotel Booking
 *  Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization-262)** for more information on how to generate an access token.   Please also be aware that our test environment is based on a subset of the production for this API it may change dynamically. For your tests, use big cities like LON (London) or NYC (New-York).   **Warning: Do not perform test booking in production**. All requests are sent and processed by hotel providers. An excessive amount of fake/canceled reservation will make you blacklisted by hotel providers. 
 *
 * The version of the OpenAPI document: 1.1.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AssociatedRecord from './model/AssociatedRecord';
import BookingSchema from './model/BookingSchema';
import Card from './model/Card';
import Contact from './model/Contact';
import Error from './model/Error';
import ErrorResponse from './model/ErrorResponse';
import HotelBookedResponse from './model/HotelBookedResponse';
import HotelBookingLight from './model/HotelBookingLight';
import HotelBookingQuery from './model/HotelBookingQuery';
import Name from './model/Name';
import Payment from './model/Payment';
import Room from './model/Room';
import Stakeholder from './model/Stakeholder';
import Warning from './model/Warning';
import BookingApi from './api/BookingApi';


/**
*  Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization-262)** for more information on how to generate an access token.   Please also be aware that our test environment is based on a subset of the production for this API it may change dynamically. For your tests, use big cities like LON (London) or NYC (New-York).   **Warning: Do not perform test booking in production**. All requests are sent and processed by hotel providers. An excessive amount of fake/canceled reservation will make you blacklisted by hotel providers. .<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var HotelBooking = require('index'); // See note below*.
* var xxxSvc = new HotelBooking.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new HotelBooking.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new HotelBooking.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new HotelBooking.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.1.3
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AssociatedRecord model constructor.
     * @property {module:model/AssociatedRecord}
     */
    AssociatedRecord,

    /**
     * The BookingSchema model constructor.
     * @property {module:model/BookingSchema}
     */
    BookingSchema,

    /**
     * The Card model constructor.
     * @property {module:model/Card}
     */
    Card,

    /**
     * The Contact model constructor.
     * @property {module:model/Contact}
     */
    Contact,

    /**
     * The Error model constructor.
     * @property {module:model/Error}
     */
    Error,

    /**
     * The ErrorResponse model constructor.
     * @property {module:model/ErrorResponse}
     */
    ErrorResponse,

    /**
     * The HotelBookedResponse model constructor.
     * @property {module:model/HotelBookedResponse}
     */
    HotelBookedResponse,

    /**
     * The HotelBookingLight model constructor.
     * @property {module:model/HotelBookingLight}
     */
    HotelBookingLight,

    /**
     * The HotelBookingQuery model constructor.
     * @property {module:model/HotelBookingQuery}
     */
    HotelBookingQuery,

    /**
     * The Name model constructor.
     * @property {module:model/Name}
     */
    Name,

    /**
     * The Payment model constructor.
     * @property {module:model/Payment}
     */
    Payment,

    /**
     * The Room model constructor.
     * @property {module:model/Room}
     */
    Room,

    /**
     * The Stakeholder model constructor.
     * @property {module:model/Stakeholder}
     */
    Stakeholder,

    /**
     * The Warning model constructor.
     * @property {module:model/Warning}
     */
    Warning,

    /**
    * The BookingApi service constructor.
    * @property {module:api/BookingApi}
    */
    BookingApi
};
