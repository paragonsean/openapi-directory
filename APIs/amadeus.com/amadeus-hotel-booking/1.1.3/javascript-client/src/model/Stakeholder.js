/**
 * Hotel Booking
 *  Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization-262)** for more information on how to generate an access token.   Please also be aware that our test environment is based on a subset of the production for this API it may change dynamically. For your tests, use big cities like LON (London) or NYC (New-York).   **Warning: Do not perform test booking in production**. All requests are sent and processed by hotel providers. An excessive amount of fake/canceled reservation will make you blacklisted by hotel providers. 
 *
 * The version of the OpenAPI document: 1.1.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Contact from './Contact';
import Name from './Name';

/**
 * The Stakeholder model module.
 * @module model/Stakeholder
 * @version 1.1.3
 */
class Stakeholder {
    /**
     * Constructs a new <code>Stakeholder</code>.
     * Guest Details
     * @alias module:model/Stakeholder
     * @param contact {module:model/Contact} 
     * @param name {module:model/Name} 
     */
    constructor(contact, name) { 
        
        Stakeholder.initialize(this, contact, name);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, contact, name) { 
        obj['contact'] = contact;
        obj['name'] = name;
    }

    /**
     * Constructs a <code>Stakeholder</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Stakeholder} obj Optional instance to populate.
     * @return {module:model/Stakeholder} The populated <code>Stakeholder</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Stakeholder();

            if (data.hasOwnProperty('contact')) {
                obj['contact'] = Contact.constructFromObject(data['contact']);
            }
            if (data.hasOwnProperty('hotelRewardsMember')) {
                obj['hotelRewardsMember'] = ApiClient.convertToType(data['hotelRewardsMember'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = Name.constructFromObject(data['name']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Stakeholder</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Stakeholder</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Stakeholder.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `contact`
        if (data['contact']) { // data not null
          Contact.validateJSON(data['contact']);
        }
        // ensure the json data is a string
        if (data['hotelRewardsMember'] && !(typeof data['hotelRewardsMember'] === 'string' || data['hotelRewardsMember'] instanceof String)) {
            throw new Error("Expected the field `hotelRewardsMember` to be a primitive type in the JSON string but got " + data['hotelRewardsMember']);
        }
        // validate the optional field `name`
        if (data['name']) { // data not null
          Name.validateJSON(data['name']);
        }

        return true;
    }


}

Stakeholder.RequiredProperties = ["contact", "name"];

/**
 * @member {module:model/Contact} contact
 */
Stakeholder.prototype['contact'] = undefined;

/**
 * Hotel Chain Rewards Member Number. To receive your Rewards Points, access online check in, fast check out. An error is returned by the Chain if the number is invalid. Example Rewards Programs: * Marriott Bonvoy * Hilton Honors * Hyatt Rewards * IHG Rewards * Wyndham Rewards * Accor Live Limitless ALL * Best Western Rewards * Choice Privileges * Radisson Rewards 
 * @member {String} hotelRewardsMember
 */
Stakeholder.prototype['hotelRewardsMember'] = undefined;

/**
 * item identifier
 * @member {Number} id
 */
Stakeholder.prototype['id'] = undefined;

/**
 * @member {module:model/Name} name
 */
Stakeholder.prototype['name'] = undefined;






export default Stakeholder;

