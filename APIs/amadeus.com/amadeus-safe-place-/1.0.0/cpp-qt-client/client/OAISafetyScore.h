/**
 * Safe Place
 *  Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization-262)** for more information on how to generate an access token.     Please also be aware that our test environment is based on a subset of the production, this API in test only returns a few selected cities. You can find the list in our **[data collection](https://github.com/amadeus4dev/data-collection)**.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISafetyScore.h
 *
 * 
 */

#ifndef OAISafetyScore_H
#define OAISafetyScore_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISafetyScore : public OAIObject {
public:
    OAISafetyScore();
    OAISafetyScore(QString json);
    ~OAISafetyScore() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getLgbtq() const;
    void setLgbtq(const qint32 &lgbtq);
    bool is_lgbtq_Set() const;
    bool is_lgbtq_Valid() const;

    qint32 getMedical() const;
    void setMedical(const qint32 &medical);
    bool is_medical_Set() const;
    bool is_medical_Valid() const;

    qint32 getOverall() const;
    void setOverall(const qint32 &overall);
    bool is_overall_Set() const;
    bool is_overall_Valid() const;

    qint32 getPhysicalHarm() const;
    void setPhysicalHarm(const qint32 &physical_harm);
    bool is_physical_harm_Set() const;
    bool is_physical_harm_Valid() const;

    qint32 getPoliticalFreedom() const;
    void setPoliticalFreedom(const qint32 &political_freedom);
    bool is_political_freedom_Set() const;
    bool is_political_freedom_Valid() const;

    qint32 getTheft() const;
    void setTheft(const qint32 &theft);
    bool is_theft_Set() const;
    bool is_theft_Valid() const;

    qint32 getWomen() const;
    void setWomen(const qint32 &women);
    bool is_women_Set() const;
    bool is_women_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_lgbtq;
    bool m_lgbtq_isSet;
    bool m_lgbtq_isValid;

    qint32 m_medical;
    bool m_medical_isSet;
    bool m_medical_isValid;

    qint32 m_overall;
    bool m_overall_isSet;
    bool m_overall_isValid;

    qint32 m_physical_harm;
    bool m_physical_harm_isSet;
    bool m_physical_harm_isValid;

    qint32 m_political_freedom;
    bool m_political_freedom_isSet;
    bool m_political_freedom_isValid;

    qint32 m_theft;
    bool m_theft_isSet;
    bool m_theft_isValid;

    qint32 m_women;
    bool m_women_isSet;
    bool m_women_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISafetyScore)

#endif // OAISafetyScore_H
