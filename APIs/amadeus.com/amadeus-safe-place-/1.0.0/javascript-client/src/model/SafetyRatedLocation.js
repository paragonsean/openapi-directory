/**
 * Safe Place
 *  Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization-262)** for more information on how to generate an access token.     Please also be aware that our test environment is based on a subset of the production, this API in test only returns a few selected cities. You can find the list in our **[data collection](https://github.com/amadeus4dev/data-collection)**.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GeoCode from './GeoCode';
import Links from './Links';
import Location from './Location';
import SafetyScore from './SafetyScore';

/**
 * The SafetyRatedLocation model module.
 * @module model/SafetyRatedLocation
 * @version 1.0.0
 */
class SafetyRatedLocation {
    /**
     * Constructs a new <code>SafetyRatedLocation</code>.
     * @alias module:model/SafetyRatedLocation
     * @implements module:model/Location
     */
    constructor() { 
        Location.initialize(this);
        SafetyRatedLocation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SafetyRatedLocation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SafetyRatedLocation} obj Optional instance to populate.
     * @return {module:model/SafetyRatedLocation} The populated <code>SafetyRatedLocation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SafetyRatedLocation();
            Location.constructFromObject(data, obj);

            if (data.hasOwnProperty('geoCode')) {
                obj['geoCode'] = GeoCode.constructFromObject(data['geoCode']);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('self')) {
                obj['self'] = Links.constructFromObject(data['self']);
            }
            if (data.hasOwnProperty('subType')) {
                obj['subType'] = ApiClient.convertToType(data['subType'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('safetyScore')) {
                obj['safetyScore'] = SafetyScore.constructFromObject(data['safetyScore']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SafetyRatedLocation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SafetyRatedLocation</code>.
     */
    static validateJSON(data) {
        // validate the optional field `geoCode`
        if (data['geoCode']) { // data not null
          GeoCode.validateJSON(data['geoCode']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `self`
        if (data['self']) { // data not null
          Links.validateJSON(data['self']);
        }
        // ensure the json data is a string
        if (data['subType'] && !(typeof data['subType'] === 'string' || data['subType'] instanceof String)) {
            throw new Error("Expected the field `subType` to be a primitive type in the JSON string but got " + data['subType']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }
        // validate the optional field `safetyScore`
        if (data['safetyScore']) { // data not null
          SafetyScore.validateJSON(data['safetyScore']);
        }

        return true;
    }


}



/**
 * @member {module:model/GeoCode} geoCode
 */
SafetyRatedLocation.prototype['geoCode'] = undefined;

/**
 * id of the ressource
 * @member {String} id
 */
SafetyRatedLocation.prototype['id'] = undefined;

/**
 * short name of the location
 * @member {String} name
 */
SafetyRatedLocation.prototype['name'] = undefined;

/**
 * @member {module:model/Links} self
 */
SafetyRatedLocation.prototype['self'] = undefined;

/**
 * location sub type
 * @member {module:model/SafetyRatedLocation.SubTypeEnum} subType
 */
SafetyRatedLocation.prototype['subType'] = undefined;

/**
 * the resource name
 * @member {String} type
 */
SafetyRatedLocation.prototype['type'] = undefined;

/**
 * @member {module:model/SafetyScore} safetyScore
 */
SafetyRatedLocation.prototype['safetyScore'] = undefined;


// Implement Location interface:
/**
 * @member {module:model/GeoCode} geoCode
 */
Location.prototype['geoCode'] = undefined;
/**
 * id of the ressource
 * @member {String} id
 */
Location.prototype['id'] = undefined;
/**
 * short name of the location
 * @member {String} name
 */
Location.prototype['name'] = undefined;
/**
 * @member {module:model/Links} self
 */
Location.prototype['self'] = undefined;
/**
 * location sub type
 * @member {module:model/Location.SubTypeEnum} subType
 */
Location.prototype['subType'] = undefined;
/**
 * the resource name
 * @member {String} type
 */
Location.prototype['type'] = undefined;



/**
 * Allowed values for the <code>subType</code> property.
 * @enum {String}
 * @readonly
 */
SafetyRatedLocation['SubTypeEnum'] = {

    /**
     * value: "AIRPORT"
     * @const
     */
    "AIRPORT": "AIRPORT",

    /**
     * value: "CITY"
     * @const
     */
    "CITY": "CITY",

    /**
     * value: "POINT_OF_INTEREST"
     * @const
     */
    "POINT_OF_INTEREST": "POINT_OF_INTEREST",

    /**
     * value: "DISTRICT"
     * @const
     */
    "DISTRICT": "DISTRICT"
};



export default SafetyRatedLocation;

