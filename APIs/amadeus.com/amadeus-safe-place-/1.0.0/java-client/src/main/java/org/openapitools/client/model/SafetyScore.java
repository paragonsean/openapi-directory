/*
 * Safe Place
 *  Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization-262)** for more information on how to generate an access token.     Please also be aware that our test environment is based on a subset of the production, this API in test only returns a few selected cities. You can find the list in our **[data collection](https://github.com/amadeus4dev/data-collection)**.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * SafetyScore
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:03:33.992491-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class SafetyScore {
  public static final String SERIALIZED_NAME_LGBTQ = "lgbtq";
  @SerializedName(SERIALIZED_NAME_LGBTQ)
  private Integer lgbtq;

  public static final String SERIALIZED_NAME_MEDICAL = "medical";
  @SerializedName(SERIALIZED_NAME_MEDICAL)
  private Integer medical;

  public static final String SERIALIZED_NAME_OVERALL = "overall";
  @SerializedName(SERIALIZED_NAME_OVERALL)
  private Integer overall;

  public static final String SERIALIZED_NAME_PHYSICAL_HARM = "physicalHarm";
  @SerializedName(SERIALIZED_NAME_PHYSICAL_HARM)
  private Integer physicalHarm;

  public static final String SERIALIZED_NAME_POLITICAL_FREEDOM = "politicalFreedom";
  @SerializedName(SERIALIZED_NAME_POLITICAL_FREEDOM)
  private Integer politicalFreedom;

  public static final String SERIALIZED_NAME_THEFT = "theft";
  @SerializedName(SERIALIZED_NAME_THEFT)
  private Integer theft;

  public static final String SERIALIZED_NAME_WOMEN = "women";
  @SerializedName(SERIALIZED_NAME_WOMEN)
  private Integer women;

  public SafetyScore() {
  }

  public SafetyScore lgbtq(Integer lgbtq) {
    this.lgbtq = lgbtq;
    return this;
  }

  /**
   * Likelihood of harm or discrimination against LGBTQ persons or groups and level of caution required at location. Score go from 1 (not likely) to 100 (very likely).
   * @return lgbtq
   */
  @javax.annotation.Nullable
  public Integer getLgbtq() {
    return lgbtq;
  }

  public void setLgbtq(Integer lgbtq) {
    this.lgbtq = lgbtq;
  }


  public SafetyScore medical(Integer medical) {
    this.medical = medical;
    return this;
  }

  /**
   * Likelihood of illness or disease, assessment of water and air quality, and access to reliable medical care. Score go from 1 (not likely) to 100 (very likely).
   * @return medical
   */
  @javax.annotation.Nullable
  public Integer getMedical() {
    return medical;
  }

  public void setMedical(Integer medical) {
    this.medical = medical;
  }


  public SafetyScore overall(Integer overall) {
    this.overall = overall;
    return this;
  }

  /**
   * An average of the 6 “sub”-categories. Score go from 1 (very safe) to 100 (very dangerous).
   * @return overall
   */
  @javax.annotation.Nullable
  public Integer getOverall() {
    return overall;
  }

  public void setOverall(Integer overall) {
    this.overall = overall;
  }


  public SafetyScore physicalHarm(Integer physicalHarm) {
    this.physicalHarm = physicalHarm;
    return this;
  }

  /**
   * Likelihood of injury due to harmful intent. Score go from 1 (not likely) to 100 (very likely).
   * @return physicalHarm
   */
  @javax.annotation.Nullable
  public Integer getPhysicalHarm() {
    return physicalHarm;
  }

  public void setPhysicalHarm(Integer physicalHarm) {
    this.physicalHarm = physicalHarm;
  }


  public SafetyScore politicalFreedom(Integer politicalFreedom) {
    this.politicalFreedom = politicalFreedom;
    return this;
  }

  /**
   * Potential for infringement of political rights or political unrest. Score go from 1 (not likely) to 100 (very likely).
   * @return politicalFreedom
   */
  @javax.annotation.Nullable
  public Integer getPoliticalFreedom() {
    return politicalFreedom;
  }

  public void setPoliticalFreedom(Integer politicalFreedom) {
    this.politicalFreedom = politicalFreedom;
  }


  public SafetyScore theft(Integer theft) {
    this.theft = theft;
    return this;
  }

  /**
   * Likelihood of theft. Score go from 1 (not likely) to 100 (very likely).
   * @return theft
   */
  @javax.annotation.Nullable
  public Integer getTheft() {
    return theft;
  }

  public void setTheft(Integer theft) {
    this.theft = theft;
  }


  public SafetyScore women(Integer women) {
    this.women = women;
    return this;
  }

  /**
   * Likelihood of inappropriate behavior against females. Score go from 1 (not likely) to 100 (very likely).
   * @return women
   */
  @javax.annotation.Nullable
  public Integer getWomen() {
    return women;
  }

  public void setWomen(Integer women) {
    this.women = women;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SafetyScore safetyScore = (SafetyScore) o;
    return Objects.equals(this.lgbtq, safetyScore.lgbtq) &&
        Objects.equals(this.medical, safetyScore.medical) &&
        Objects.equals(this.overall, safetyScore.overall) &&
        Objects.equals(this.physicalHarm, safetyScore.physicalHarm) &&
        Objects.equals(this.politicalFreedom, safetyScore.politicalFreedom) &&
        Objects.equals(this.theft, safetyScore.theft) &&
        Objects.equals(this.women, safetyScore.women);
  }

  @Override
  public int hashCode() {
    return Objects.hash(lgbtq, medical, overall, physicalHarm, politicalFreedom, theft, women);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SafetyScore {\n");
    sb.append("    lgbtq: ").append(toIndentedString(lgbtq)).append("\n");
    sb.append("    medical: ").append(toIndentedString(medical)).append("\n");
    sb.append("    overall: ").append(toIndentedString(overall)).append("\n");
    sb.append("    physicalHarm: ").append(toIndentedString(physicalHarm)).append("\n");
    sb.append("    politicalFreedom: ").append(toIndentedString(politicalFreedom)).append("\n");
    sb.append("    theft: ").append(toIndentedString(theft)).append("\n");
    sb.append("    women: ").append(toIndentedString(women)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("lgbtq");
    openapiFields.add("medical");
    openapiFields.add("overall");
    openapiFields.add("physicalHarm");
    openapiFields.add("politicalFreedom");
    openapiFields.add("theft");
    openapiFields.add("women");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to SafetyScore
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!SafetyScore.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SafetyScore is not found in the empty JSON string", SafetyScore.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!SafetyScore.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SafetyScore` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SafetyScore.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SafetyScore' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SafetyScore> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SafetyScore.class));

       return (TypeAdapter<T>) new TypeAdapter<SafetyScore>() {
           @Override
           public void write(JsonWriter out, SafetyScore value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SafetyScore read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of SafetyScore given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of SafetyScore
   * @throws IOException if the JSON string is invalid with respect to SafetyScore
   */
  public static SafetyScore fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SafetyScore.class);
  }

  /**
   * Convert an instance of SafetyScore to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

