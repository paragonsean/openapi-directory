# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.aircraft_equipment import AircraftEquipment
from openapi_server import util


class FlightStop(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, arrival_at: datetime=None, departure_at: datetime=None, duration: str=None, iata_code: str=None, new_aircraft: AircraftEquipment=None):
        """FlightStop - a model defined in OpenAPI

        :param arrival_at: The arrival_at of this FlightStop.
        :param departure_at: The departure_at of this FlightStop.
        :param duration: The duration of this FlightStop.
        :param iata_code: The iata_code of this FlightStop.
        :param new_aircraft: The new_aircraft of this FlightStop.
        """
        self.openapi_types = {
            'arrival_at': datetime,
            'departure_at': datetime,
            'duration': str,
            'iata_code': str,
            'new_aircraft': AircraftEquipment
        }

        self.attribute_map = {
            'arrival_at': 'arrivalAt',
            'departure_at': 'departureAt',
            'duration': 'duration',
            'iata_code': 'iataCode',
            'new_aircraft': 'newAircraft'
        }

        self._arrival_at = arrival_at
        self._departure_at = departure_at
        self._duration = duration
        self._iata_code = iata_code
        self._new_aircraft = new_aircraft

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FlightStop':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FlightStop of this FlightStop.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def arrival_at(self):
        """Gets the arrival_at of this FlightStop.

        arrival at the stop in [ISO8601](https://en.wikipedia.org/wiki/ISO_8601) YYYY-MM-ddThh:mm±hh:mm format, e.g. 2017-02-10T20:40:00+02:00

        :return: The arrival_at of this FlightStop.
        :rtype: datetime
        """
        return self._arrival_at

    @arrival_at.setter
    def arrival_at(self, arrival_at):
        """Sets the arrival_at of this FlightStop.

        arrival at the stop in [ISO8601](https://en.wikipedia.org/wiki/ISO_8601) YYYY-MM-ddThh:mm±hh:mm format, e.g. 2017-02-10T20:40:00+02:00

        :param arrival_at: The arrival_at of this FlightStop.
        :type arrival_at: datetime
        """

        self._arrival_at = arrival_at

    @property
    def departure_at(self):
        """Gets the departure_at of this FlightStop.

        departure from the stop in [ISO8601](https://en.wikipedia.org/wiki/ISO_8601) YYYY-MM-ddThh:mm±hh:mm format, e.g. 2017-02-10T20:40:00+02:00

        :return: The departure_at of this FlightStop.
        :rtype: datetime
        """
        return self._departure_at

    @departure_at.setter
    def departure_at(self, departure_at):
        """Sets the departure_at of this FlightStop.

        departure from the stop in [ISO8601](https://en.wikipedia.org/wiki/ISO_8601) YYYY-MM-ddThh:mm±hh:mm format, e.g. 2017-02-10T20:40:00+02:00

        :param departure_at: The departure_at of this FlightStop.
        :type departure_at: datetime
        """

        self._departure_at = departure_at

    @property
    def duration(self):
        """Gets the duration of this FlightStop.

        stop duration in [ISO8601](https://en.wikipedia.org/wiki/ISO_8601) PnYnMnDTnHnMnS format, e.g. PT2H10M

        :return: The duration of this FlightStop.
        :rtype: str
        """
        return self._duration

    @duration.setter
    def duration(self, duration):
        """Sets the duration of this FlightStop.

        stop duration in [ISO8601](https://en.wikipedia.org/wiki/ISO_8601) PnYnMnDTnHnMnS format, e.g. PT2H10M

        :param duration: The duration of this FlightStop.
        :type duration: str
        """

        self._duration = duration

    @property
    def iata_code(self):
        """Gets the iata_code of this FlightStop.

        [IATA airline codes](http://www.iata.org/publications/Pages/code-search.aspx)

        :return: The iata_code of this FlightStop.
        :rtype: str
        """
        return self._iata_code

    @iata_code.setter
    def iata_code(self, iata_code):
        """Sets the iata_code of this FlightStop.

        [IATA airline codes](http://www.iata.org/publications/Pages/code-search.aspx)

        :param iata_code: The iata_code of this FlightStop.
        :type iata_code: str
        """

        self._iata_code = iata_code

    @property
    def new_aircraft(self):
        """Gets the new_aircraft of this FlightStop.


        :return: The new_aircraft of this FlightStop.
        :rtype: AircraftEquipment
        """
        return self._new_aircraft

    @new_aircraft.setter
    def new_aircraft(self, new_aircraft):
        """Sets the new_aircraft of this FlightStop.


        :param new_aircraft: The new_aircraft of this FlightStop.
        :type new_aircraft: AircraftEquipment
        """

        self._new_aircraft = new_aircraft
