/**
 * Seatmap Display
 * Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization-262)** for more information on how to generate an access token.   Please also be aware that our test environment is based on a subset of the production, if you are not returning any results try with big cities/airports like LON (London) or NYC (New-York).
 *
 * The version of the OpenAPI document: 1.9.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Price from './Price';

/**
 * The SeatmapTravelerPricing model module.
 * @module model/SeatmapTravelerPricing
 * @version 1.9.2
 */
class SeatmapTravelerPricing {
    /**
     * Constructs a new <code>SeatmapTravelerPricing</code>.
     * @alias module:model/SeatmapTravelerPricing
     */
    constructor() { 
        
        SeatmapTravelerPricing.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SeatmapTravelerPricing</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SeatmapTravelerPricing} obj Optional instance to populate.
     * @return {module:model/SeatmapTravelerPricing} The populated <code>SeatmapTravelerPricing</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SeatmapTravelerPricing();

            if (data.hasOwnProperty('price')) {
                obj['price'] = Price.constructFromObject(data['price']);
            }
            if (data.hasOwnProperty('seatAvailabilityStatus')) {
                obj['seatAvailabilityStatus'] = ApiClient.convertToType(data['seatAvailabilityStatus'], 'String');
            }
            if (data.hasOwnProperty('travelerId')) {
                obj['travelerId'] = ApiClient.convertToType(data['travelerId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SeatmapTravelerPricing</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SeatmapTravelerPricing</code>.
     */
    static validateJSON(data) {
        // validate the optional field `price`
        if (data['price']) { // data not null
          Price.validateJSON(data['price']);
        }
        // ensure the json data is a string
        if (data['seatAvailabilityStatus'] && !(typeof data['seatAvailabilityStatus'] === 'string' || data['seatAvailabilityStatus'] instanceof String)) {
            throw new Error("Expected the field `seatAvailabilityStatus` to be a primitive type in the JSON string but got " + data['seatAvailabilityStatus']);
        }
        // ensure the json data is a string
        if (data['travelerId'] && !(typeof data['travelerId'] === 'string' || data['travelerId'] instanceof String)) {
            throw new Error("Expected the field `travelerId` to be a primitive type in the JSON string but got " + data['travelerId']);
        }

        return true;
    }


}



/**
 * @member {module:model/Price} price
 */
SeatmapTravelerPricing.prototype['price'] = undefined;

/**
 * Seat availability for this specific traveler. Allows better seat choice per traveler
 * @member {module:model/SeatmapTravelerPricing.SeatAvailabilityStatusEnum} seatAvailabilityStatus
 */
SeatmapTravelerPricing.prototype['seatAvailabilityStatus'] = undefined;

/**
 * Traveler id
 * @member {String} travelerId
 */
SeatmapTravelerPricing.prototype['travelerId'] = undefined;





/**
 * Allowed values for the <code>seatAvailabilityStatus</code> property.
 * @enum {String}
 * @readonly
 */
SeatmapTravelerPricing['SeatAvailabilityStatusEnum'] = {

    /**
     * value: "AVAILABLE"
     * @const
     */
    "AVAILABLE": "AVAILABLE",

    /**
     * value: "BLOCKED"
     * @const
     */
    "BLOCKED": "BLOCKED",

    /**
     * value: "OCCUPIED"
     * @const
     */
    "OCCUPIED": "OCCUPIED"
};



export default SeatmapTravelerPricing;

