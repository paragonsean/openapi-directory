/**
 * Seatmap Display
 * Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization-262)** for more information on how to generate an access token.   Please also be aware that our test environment is based on a subset of the production, if you are not returning any results try with big cities/airports like LON (London) or NYC (New-York).
 *
 * The version of the OpenAPI document: 1.9.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Amenity from './Amenity';

/**
 * The AircraftCabinAmenitiesFood model module.
 * @module model/AircraftCabinAmenitiesFood
 * @version 1.9.2
 */
class AircraftCabinAmenitiesFood {
    /**
     * Constructs a new <code>AircraftCabinAmenitiesFood</code>.
     * @alias module:model/AircraftCabinAmenitiesFood
     * @implements module:model/Amenity
     */
    constructor() { 
        Amenity.initialize(this);
        AircraftCabinAmenitiesFood.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AircraftCabinAmenitiesFood</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AircraftCabinAmenitiesFood} obj Optional instance to populate.
     * @return {module:model/AircraftCabinAmenitiesFood} The populated <code>AircraftCabinAmenitiesFood</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AircraftCabinAmenitiesFood();
            Amenity.constructFromObject(data, obj);

            if (data.hasOwnProperty('isChargeable')) {
                obj['isChargeable'] = ApiClient.convertToType(data['isChargeable'], 'Boolean');
            }
            if (data.hasOwnProperty('foodType')) {
                obj['foodType'] = ApiClient.convertToType(data['foodType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AircraftCabinAmenitiesFood</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AircraftCabinAmenitiesFood</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['foodType'] && !(typeof data['foodType'] === 'string' || data['foodType'] instanceof String)) {
            throw new Error("Expected the field `foodType` to be a primitive type in the JSON string but got " + data['foodType']);
        }

        return true;
    }


}



/**
 * Specify if the traveler will need to pay extra in-flight to get the amenity
 * @member {Boolean} isChargeable
 */
AircraftCabinAmenitiesFood.prototype['isChargeable'] = undefined;

/**
 * @member {module:model/AircraftCabinAmenitiesFood.FoodTypeEnum} foodType
 */
AircraftCabinAmenitiesFood.prototype['foodType'] = undefined;


// Implement Amenity interface:
/**
 * Specify if the traveler will need to pay extra in-flight to get the amenity
 * @member {Boolean} isChargeable
 */
Amenity.prototype['isChargeable'] = undefined;



/**
 * Allowed values for the <code>foodType</code> property.
 * @enum {String}
 * @readonly
 */
AircraftCabinAmenitiesFood['FoodTypeEnum'] = {

    /**
     * value: "MEAL"
     * @const
     */
    "MEAL": "MEAL",

    /**
     * value: "FRESH_MEAL"
     * @const
     */
    "FRESH_MEAL": "FRESH_MEAL",

    /**
     * value: "SNACK"
     * @const
     */
    "SNACK": "SNACK",

    /**
     * value: "FRESH_SNACK"
     * @const
     */
    "FRESH_SNACK": "FRESH_SNACK"
};



export default AircraftCabinAmenitiesFood;

