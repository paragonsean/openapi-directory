/**
 * Seatmap Display
 * Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization-262)** for more information on how to generate an access token.   Please also be aware that our test environment is based on a subset of the production, if you are not returning any results try with big cities/airports like LON (London) or NYC (New-York).
 *
 * The version of the OpenAPI document: 1.9.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AircraftCabinAmenitiesBeverage from './AircraftCabinAmenitiesBeverage';
import AircraftCabinAmenitiesEntertainment from './AircraftCabinAmenitiesEntertainment';
import AircraftCabinAmenitiesFood from './AircraftCabinAmenitiesFood';
import AircraftCabinAmenitiesPower from './AircraftCabinAmenitiesPower';
import AircraftCabinAmenitiesWifi from './AircraftCabinAmenitiesWifi';
import AmenitySeat from './AmenitySeat';

/**
 * The AircraftCabinAmenities model module.
 * @module model/AircraftCabinAmenities
 * @version 1.9.2
 */
class AircraftCabinAmenities {
    /**
     * Constructs a new <code>AircraftCabinAmenities</code>.
     * Type of available amenities for a given flight
     * @alias module:model/AircraftCabinAmenities
     */
    constructor() { 
        
        AircraftCabinAmenities.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AircraftCabinAmenities</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AircraftCabinAmenities} obj Optional instance to populate.
     * @return {module:model/AircraftCabinAmenities} The populated <code>AircraftCabinAmenities</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AircraftCabinAmenities();

            if (data.hasOwnProperty('beverage')) {
                obj['beverage'] = AircraftCabinAmenitiesBeverage.constructFromObject(data['beverage']);
            }
            if (data.hasOwnProperty('entertainment')) {
                obj['entertainment'] = ApiClient.convertToType(data['entertainment'], [AircraftCabinAmenitiesEntertainment]);
            }
            if (data.hasOwnProperty('food')) {
                obj['food'] = AircraftCabinAmenitiesFood.constructFromObject(data['food']);
            }
            if (data.hasOwnProperty('power')) {
                obj['power'] = AircraftCabinAmenitiesPower.constructFromObject(data['power']);
            }
            if (data.hasOwnProperty('seat')) {
                obj['seat'] = AmenitySeat.constructFromObject(data['seat']);
            }
            if (data.hasOwnProperty('wifi')) {
                obj['wifi'] = AircraftCabinAmenitiesWifi.constructFromObject(data['wifi']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AircraftCabinAmenities</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AircraftCabinAmenities</code>.
     */
    static validateJSON(data) {
        // validate the optional field `beverage`
        if (data['beverage']) { // data not null
          AircraftCabinAmenitiesBeverage.validateJSON(data['beverage']);
        }
        if (data['entertainment']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['entertainment'])) {
                throw new Error("Expected the field `entertainment` to be an array in the JSON data but got " + data['entertainment']);
            }
            // validate the optional field `entertainment` (array)
            for (const item of data['entertainment']) {
                AircraftCabinAmenitiesEntertainment.validateJSON(item);
            };
        }
        // validate the optional field `food`
        if (data['food']) { // data not null
          AircraftCabinAmenitiesFood.validateJSON(data['food']);
        }
        // validate the optional field `power`
        if (data['power']) { // data not null
          AircraftCabinAmenitiesPower.validateJSON(data['power']);
        }
        // validate the optional field `seat`
        if (data['seat']) { // data not null
          AmenitySeat.validateJSON(data['seat']);
        }
        // validate the optional field `wifi`
        if (data['wifi']) { // data not null
          AircraftCabinAmenitiesWifi.validateJSON(data['wifi']);
        }

        return true;
    }


}



/**
 * @member {module:model/AircraftCabinAmenitiesBeverage} beverage
 */
AircraftCabinAmenities.prototype['beverage'] = undefined;

/**
 * @member {Array.<module:model/AircraftCabinAmenitiesEntertainment>} entertainment
 */
AircraftCabinAmenities.prototype['entertainment'] = undefined;

/**
 * @member {module:model/AircraftCabinAmenitiesFood} food
 */
AircraftCabinAmenities.prototype['food'] = undefined;

/**
 * @member {module:model/AircraftCabinAmenitiesPower} power
 */
AircraftCabinAmenities.prototype['power'] = undefined;

/**
 * @member {module:model/AmenitySeat} seat
 */
AircraftCabinAmenities.prototype['seat'] = undefined;

/**
 * @member {module:model/AircraftCabinAmenitiesWifi} wifi
 */
AircraftCabinAmenities.prototype['wifi'] = undefined;






export default AircraftCabinAmenities;

