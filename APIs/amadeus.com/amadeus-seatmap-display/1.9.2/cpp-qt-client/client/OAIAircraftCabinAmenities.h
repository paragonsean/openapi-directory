/**
 * Seatmap Display
 * Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization-262)** for more information on how to generate an access token.   Please also be aware that our test environment is based on a subset of the production, if you are not returning any results try with big cities/airports like LON (London) or NYC (New-York).
 *
 * The version of the OpenAPI document: 1.9.2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAircraftCabinAmenities.h
 *
 * Type of available amenities for a given flight
 */

#ifndef OAIAircraftCabinAmenities_H
#define OAIAircraftCabinAmenities_H

#include <QJsonObject>

#include "OAIAircraftCabinAmenities_Beverage.h"
#include "OAIAircraftCabinAmenities_Entertainment.h"
#include "OAIAircraftCabinAmenities_Food.h"
#include "OAIAircraftCabinAmenities_Power.h"
#include "OAIAircraftCabinAmenities_Wifi.h"
#include "OAIAmenity_Seat.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAircraftCabinAmenities_Beverage;
class OAIAircraftCabinAmenities_Entertainment;
class OAIAircraftCabinAmenities_Food;
class OAIAircraftCabinAmenities_Power;
class OAIAmenity_Seat;
class OAIAircraftCabinAmenities_Wifi;

class OAIAircraftCabinAmenities : public OAIObject {
public:
    OAIAircraftCabinAmenities();
    OAIAircraftCabinAmenities(QString json);
    ~OAIAircraftCabinAmenities() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAircraftCabinAmenities_Beverage getBeverage() const;
    void setBeverage(const OAIAircraftCabinAmenities_Beverage &beverage);
    bool is_beverage_Set() const;
    bool is_beverage_Valid() const;

    QList<OAIAircraftCabinAmenities_Entertainment> getEntertainment() const;
    void setEntertainment(const QList<OAIAircraftCabinAmenities_Entertainment> &entertainment);
    bool is_entertainment_Set() const;
    bool is_entertainment_Valid() const;

    OAIAircraftCabinAmenities_Food getFood() const;
    void setFood(const OAIAircraftCabinAmenities_Food &food);
    bool is_food_Set() const;
    bool is_food_Valid() const;

    OAIAircraftCabinAmenities_Power getPower() const;
    void setPower(const OAIAircraftCabinAmenities_Power &power);
    bool is_power_Set() const;
    bool is_power_Valid() const;

    OAIAmenity_Seat getSeat() const;
    void setSeat(const OAIAmenity_Seat &seat);
    bool is_seat_Set() const;
    bool is_seat_Valid() const;

    OAIAircraftCabinAmenities_Wifi getWifi() const;
    void setWifi(const OAIAircraftCabinAmenities_Wifi &wifi);
    bool is_wifi_Set() const;
    bool is_wifi_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAircraftCabinAmenities_Beverage m_beverage;
    bool m_beverage_isSet;
    bool m_beverage_isValid;

    QList<OAIAircraftCabinAmenities_Entertainment> m_entertainment;
    bool m_entertainment_isSet;
    bool m_entertainment_isValid;

    OAIAircraftCabinAmenities_Food m_food;
    bool m_food_isSet;
    bool m_food_isValid;

    OAIAircraftCabinAmenities_Power m_power;
    bool m_power_isSet;
    bool m_power_isValid;

    OAIAmenity_Seat m_seat;
    bool m_seat_isSet;
    bool m_seat_isValid;

    OAIAircraftCabinAmenities_Wifi m_wifi;
    bool m_wifi_isSet;
    bool m_wifi_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAircraftCabinAmenities)

#endif // OAIAircraftCabinAmenities_H
