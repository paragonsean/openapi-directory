/**
 * Seatmap Display
 * Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization-262)** for more information on how to generate an access token.   Please also be aware that our test environment is based on a subset of the production, if you are not returning any results try with big cities/airports like LON (London) or NYC (New-York).
 *
 * The version of the OpenAPI document: 1.9.2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDictionaries.h
 *
 * 
 */

#ifndef OAIDictionaries_H
#define OAIDictionaries_H

#include <QJsonObject>

#include "OAILocationValue.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAILocationValue;

class OAIDictionaries : public OAIObject {
public:
    OAIDictionaries();
    OAIDictionaries(QString json);
    ~OAIDictionaries() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QMap<QString, QString> getFacilities() const;
    void setFacilities(const QMap<QString, QString> &facilities);
    bool is_facilities_Set() const;
    bool is_facilities_Valid() const;

    QMap<QString, OAILocationValue> getLocations() const;
    void setLocations(const QMap<QString, OAILocationValue> &locations);
    bool is_locations_Set() const;
    bool is_locations_Valid() const;

    QMap<QString, QString> getSeatCharacteristics() const;
    void setSeatCharacteristics(const QMap<QString, QString> &seat_characteristics);
    bool is_seat_characteristics_Set() const;
    bool is_seat_characteristics_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QMap<QString, QString> m_facilities;
    bool m_facilities_isSet;
    bool m_facilities_isValid;

    QMap<QString, OAILocationValue> m_locations;
    bool m_locations_isSet;
    bool m_locations_isValid;

    QMap<QString, QString> m_seat_characteristics;
    bool m_seat_characteristics_isSet;
    bool m_seat_characteristics_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDictionaries)

#endif // OAIDictionaries_H
