/**
 * Seatmap Display
 * Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization-262)** for more information on how to generate an access token.   Please also be aware that our test environment is based on a subset of the production, if you are not returning any results try with big cities/airports like LON (London) or NYC (New-York).
 *
 * The version of the OpenAPI document: 1.9.2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPhone.h
 *
 * phone information
 */

#ifndef OAIPhone_H
#define OAIPhone_H

#include <QJsonObject>

#include "OAIPhoneDeviceType.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPhone : public OAIObject {
public:
    OAIPhone();
    OAIPhone(QString json);
    ~OAIPhone() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAddresseeName() const;
    void setAddresseeName(const QString &addressee_name);
    bool is_addressee_name_Set() const;
    bool is_addressee_name_Valid() const;

    QString getAreaCode() const;
    void setAreaCode(const QString &area_code);
    bool is_area_code_Set() const;
    bool is_area_code_Valid() const;

    QString getCategory() const;
    void setCategory(const QString &category);
    bool is_category_Set() const;
    bool is_category_Valid() const;

    QString getCountryCallingCode() const;
    void setCountryCallingCode(const QString &country_calling_code);
    bool is_country_calling_code_Set() const;
    bool is_country_calling_code_Valid() const;

    QString getCountryCode() const;
    void setCountryCode(const QString &country_code);
    bool is_country_code_Set() const;
    bool is_country_code_Valid() const;

    OAIPhoneDeviceType getDeviceType() const;
    void setDeviceType(const OAIPhoneDeviceType &device_type);
    bool is_device_type_Set() const;
    bool is_device_type_Valid() const;

    QString getExtension() const;
    void setExtension(const QString &extension);
    bool is_extension_Set() const;
    bool is_extension_Valid() const;

    QString getNumber() const;
    void setNumber(const QString &number);
    bool is_number_Set() const;
    bool is_number_Valid() const;

    QString getText() const;
    void setText(const QString &text);
    bool is_text_Set() const;
    bool is_text_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_addressee_name;
    bool m_addressee_name_isSet;
    bool m_addressee_name_isValid;

    QString m_area_code;
    bool m_area_code_isSet;
    bool m_area_code_isValid;

    QString m_category;
    bool m_category_isSet;
    bool m_category_isValid;

    QString m_country_calling_code;
    bool m_country_calling_code_isSet;
    bool m_country_calling_code_isValid;

    QString m_country_code;
    bool m_country_code_isSet;
    bool m_country_code_isValid;

    OAIPhoneDeviceType m_device_type;
    bool m_device_type_isSet;
    bool m_device_type_isValid;

    QString m_extension;
    bool m_extension_isSet;
    bool m_extension_isValid;

    QString m_number;
    bool m_number_isSet;
    bool m_number_isValid;

    QString m_text;
    bool m_text_isSet;
    bool m_text_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPhone)

#endif // OAIPhone_H
