/**
 * Seatmap Display
 * Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization-262)** for more information on how to generate an access token.   Please also be aware that our test environment is based on a subset of the production, if you are not returning any results try with big cities/airports like LON (London) or NYC (New-York).
 *
 * The version of the OpenAPI document: 1.9.2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDeck.h
 *
 * deck information
 */

#ifndef OAIDeck_H
#define OAIDeck_H

#include <QJsonObject>

#include "OAIDeckConfiguration.h"
#include "OAIFacility.h"
#include "OAISeat.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDeckConfiguration;
class OAIFacility;
class OAISeat;

class OAIDeck : public OAIObject {
public:
    OAIDeck();
    OAIDeck(QString json);
    ~OAIDeck() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIDeckConfiguration getDeckConfiguration() const;
    void setDeckConfiguration(const OAIDeckConfiguration &deck_configuration);
    bool is_deck_configuration_Set() const;
    bool is_deck_configuration_Valid() const;

    QString getDeckType() const;
    void setDeckType(const QString &deck_type);
    bool is_deck_type_Set() const;
    bool is_deck_type_Valid() const;

    QList<OAIFacility> getFacilities() const;
    void setFacilities(const QList<OAIFacility> &facilities);
    bool is_facilities_Set() const;
    bool is_facilities_Valid() const;

    QList<OAISeat> getSeats() const;
    void setSeats(const QList<OAISeat> &seats);
    bool is_seats_Set() const;
    bool is_seats_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIDeckConfiguration m_deck_configuration;
    bool m_deck_configuration_isSet;
    bool m_deck_configuration_isValid;

    QString m_deck_type;
    bool m_deck_type_isSet;
    bool m_deck_type_isValid;

    QList<OAIFacility> m_facilities;
    bool m_facilities_isSet;
    bool m_facilities_isValid;

    QList<OAISeat> m_seats;
    bool m_seats_isSet;
    bool m_seats_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDeck)

#endif // OAIDeck_H
