/**
 * Seatmap Display
 * Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization-262)** for more information on how to generate an access token.   Please also be aware that our test environment is based on a subset of the production, if you are not returning any results try with big cities/airports like LON (London) or NYC (New-York).
 *
 * The version of the OpenAPI document: 1.9.2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIContactDictionary.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIContactDictionary::OAIContactDictionary(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIContactDictionary::OAIContactDictionary() {
    this->initializeModel();
}

OAIContactDictionary::~OAIContactDictionary() {}

void OAIContactDictionary::initializeModel() {

    m_address_isSet = false;
    m_address_isValid = false;

    m_addressee_name_isSet = false;
    m_addressee_name_isValid = false;

    m_purpose_isSet = false;
    m_purpose_isValid = false;
}

void OAIContactDictionary::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIContactDictionary::fromJsonObject(QJsonObject json) {

    m_address_isValid = ::OpenAPI::fromJsonValue(m_address, json[QString("address")]);
    m_address_isSet = !json[QString("address")].isNull() && m_address_isValid;

    m_addressee_name_isValid = ::OpenAPI::fromJsonValue(m_addressee_name, json[QString("addresseeName")]);
    m_addressee_name_isSet = !json[QString("addresseeName")].isNull() && m_addressee_name_isValid;

    m_purpose_isValid = ::OpenAPI::fromJsonValue(m_purpose, json[QString("purpose")]);
    m_purpose_isSet = !json[QString("purpose")].isNull() && m_purpose_isValid;
}

QString OAIContactDictionary::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIContactDictionary::asJsonObject() const {
    QJsonObject obj;
    if (m_address.isSet()) {
        obj.insert(QString("address"), ::OpenAPI::toJsonValue(m_address));
    }
    if (m_addressee_name.isSet()) {
        obj.insert(QString("addresseeName"), ::OpenAPI::toJsonValue(m_addressee_name));
    }
    if (m_purpose.isSet()) {
        obj.insert(QString("purpose"), ::OpenAPI::toJsonValue(m_purpose));
    }
    return obj;
}

OAIAddress OAIContactDictionary::getAddress() const {
    return m_address;
}
void OAIContactDictionary::setAddress(const OAIAddress &address) {
    m_address = address;
    m_address_isSet = true;
}

bool OAIContactDictionary::is_address_Set() const{
    return m_address_isSet;
}

bool OAIContactDictionary::is_address_Valid() const{
    return m_address_isValid;
}

OAIName OAIContactDictionary::getAddresseeName() const {
    return m_addressee_name;
}
void OAIContactDictionary::setAddresseeName(const OAIName &addressee_name) {
    m_addressee_name = addressee_name;
    m_addressee_name_isSet = true;
}

bool OAIContactDictionary::is_addressee_name_Set() const{
    return m_addressee_name_isSet;
}

bool OAIContactDictionary::is_addressee_name_Valid() const{
    return m_addressee_name_isValid;
}

OAIContactPurpose OAIContactDictionary::getPurpose() const {
    return m_purpose;
}
void OAIContactDictionary::setPurpose(const OAIContactPurpose &purpose) {
    m_purpose = purpose;
    m_purpose_isSet = true;
}

bool OAIContactDictionary::is_purpose_Set() const{
    return m_purpose_isSet;
}

bool OAIContactDictionary::is_purpose_Valid() const{
    return m_purpose_isValid;
}

bool OAIContactDictionary::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_address.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_addressee_name.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_purpose.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIContactDictionary::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
