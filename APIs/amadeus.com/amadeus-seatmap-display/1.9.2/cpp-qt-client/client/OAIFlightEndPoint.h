/**
 * Seatmap Display
 * Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization-262)** for more information on how to generate an access token.   Please also be aware that our test environment is based on a subset of the production, if you are not returning any results try with big cities/airports like LON (London) or NYC (New-York).
 *
 * The version of the OpenAPI document: 1.9.2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFlightEndPoint.h
 *
 * departure or arrival information
 */

#ifndef OAIFlightEndPoint_H
#define OAIFlightEndPoint_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIFlightEndPoint : public OAIObject {
public:
    OAIFlightEndPoint();
    OAIFlightEndPoint(QString json);
    ~OAIFlightEndPoint() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getAt() const;
    void setAt(const QDateTime &at);
    bool is_at_Set() const;
    bool is_at_Valid() const;

    QString getIataCode() const;
    void setIataCode(const QString &iata_code);
    bool is_iata_code_Set() const;
    bool is_iata_code_Valid() const;

    QString getTerminal() const;
    void setTerminal(const QString &terminal);
    bool is_terminal_Set() const;
    bool is_terminal_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_at;
    bool m_at_isSet;
    bool m_at_isValid;

    QString m_iata_code;
    bool m_iata_code_isSet;
    bool m_iata_code_isValid;

    QString m_terminal;
    bool m_terminal_isSet;
    bool m_terminal_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFlightEndPoint)

#endif // OAIFlightEndPoint_H
