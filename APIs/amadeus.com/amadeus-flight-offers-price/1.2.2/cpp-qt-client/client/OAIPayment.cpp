/**
 * Flight Offers Price
 * Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization-262)** for more information on how to generate an access token.   Please also be aware that our test environment is based on a subset of the production, if you are not returning any results try with big cities/airports like LON (London) or NYC (New-York).
 *
 * The version of the OpenAPI document: 1.2.2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPayment.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPayment::OAIPayment(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPayment::OAIPayment() {
    this->initializeModel();
}

OAIPayment::~OAIPayment() {}

void OAIPayment::initializeModel() {

    m_bin_number_isSet = false;
    m_bin_number_isValid = false;

    m_brand_isSet = false;
    m_brand_isValid = false;

    m_flight_offer_ids_isSet = false;
    m_flight_offer_ids_isValid = false;
}

void OAIPayment::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPayment::fromJsonObject(QJsonObject json) {

    m_bin_number_isValid = ::OpenAPI::fromJsonValue(m_bin_number, json[QString("binNumber")]);
    m_bin_number_isSet = !json[QString("binNumber")].isNull() && m_bin_number_isValid;

    m_brand_isValid = ::OpenAPI::fromJsonValue(m_brand, json[QString("brand")]);
    m_brand_isSet = !json[QString("brand")].isNull() && m_brand_isValid;

    m_flight_offer_ids_isValid = ::OpenAPI::fromJsonValue(m_flight_offer_ids, json[QString("flightOfferIds")]);
    m_flight_offer_ids_isSet = !json[QString("flightOfferIds")].isNull() && m_flight_offer_ids_isValid;
}

QString OAIPayment::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPayment::asJsonObject() const {
    QJsonObject obj;
    if (m_bin_number_isSet) {
        obj.insert(QString("binNumber"), ::OpenAPI::toJsonValue(m_bin_number));
    }
    if (m_brand.isSet()) {
        obj.insert(QString("brand"), ::OpenAPI::toJsonValue(m_brand));
    }
    if (m_flight_offer_ids.size() > 0) {
        obj.insert(QString("flightOfferIds"), ::OpenAPI::toJsonValue(m_flight_offer_ids));
    }
    return obj;
}

qint32 OAIPayment::getBinNumber() const {
    return m_bin_number;
}
void OAIPayment::setBinNumber(const qint32 &bin_number) {
    m_bin_number = bin_number;
    m_bin_number_isSet = true;
}

bool OAIPayment::is_bin_number_Set() const{
    return m_bin_number_isSet;
}

bool OAIPayment::is_bin_number_Valid() const{
    return m_bin_number_isValid;
}

OAIPaymentBrand OAIPayment::getBrand() const {
    return m_brand;
}
void OAIPayment::setBrand(const OAIPaymentBrand &brand) {
    m_brand = brand;
    m_brand_isSet = true;
}

bool OAIPayment::is_brand_Set() const{
    return m_brand_isSet;
}

bool OAIPayment::is_brand_Valid() const{
    return m_brand_isValid;
}

QList<QString> OAIPayment::getFlightOfferIds() const {
    return m_flight_offer_ids;
}
void OAIPayment::setFlightOfferIds(const QList<QString> &flight_offer_ids) {
    m_flight_offer_ids = flight_offer_ids;
    m_flight_offer_ids_isSet = true;
}

bool OAIPayment::is_flight_offer_ids_Set() const{
    return m_flight_offer_ids_isSet;
}

bool OAIPayment::is_flight_offer_ids_Valid() const{
    return m_flight_offer_ids_isValid;
}

bool OAIPayment::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_bin_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_brand.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_flight_offer_ids.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPayment::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
