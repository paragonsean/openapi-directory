/**
 * Flight Offers Price
 * Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization-262)** for more information on how to generate an access token.   Please also be aware that our test environment is based on a subset of the production, if you are not returning any results try with big cities/airports like LON (London) or NYC (New-York).
 *
 * The version of the OpenAPI document: 1.2.2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIStakeholder.h
 *
 * stakeholder definition
 */

#ifndef OAIStakeholder_H
#define OAIStakeholder_H

#include <QJsonObject>

#include "OAIIdentityDocument.h"
#include "OAIName.h"
#include "OAIStakeholderGender.h"
#include <QDate>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIIdentityDocument;
class OAIName;

class OAIStakeholder : public OAIObject {
public:
    OAIStakeholder();
    OAIStakeholder(QString json);
    ~OAIStakeholder() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDate getDateOfBirth() const;
    void setDateOfBirth(const QDate &date_of_birth);
    bool is_date_of_birth_Set() const;
    bool is_date_of_birth_Valid() const;

    QList<OAIIdentityDocument> getDocuments() const;
    void setDocuments(const QList<OAIIdentityDocument> &documents);
    bool is_documents_Set() const;
    bool is_documents_Valid() const;

    OAIStakeholderGender getGender() const;
    void setGender(const OAIStakeholderGender &gender);
    bool is_gender_Set() const;
    bool is_gender_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAIName getName() const;
    void setName(const OAIName &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDate m_date_of_birth;
    bool m_date_of_birth_isSet;
    bool m_date_of_birth_isValid;

    QList<OAIIdentityDocument> m_documents;
    bool m_documents_isSet;
    bool m_documents_isValid;

    OAIStakeholderGender m_gender;
    bool m_gender_isSet;
    bool m_gender_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAIName m_name;
    bool m_name_isSet;
    bool m_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIStakeholder)

#endif // OAIStakeholder_H
