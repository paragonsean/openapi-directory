/**
 * Flight Offers Price
 * Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization-262)** for more information on how to generate an access token.   Please also be aware that our test environment is based on a subset of the production, if you are not returning any results try with big cities/airports like LON (London) or NYC (New-York).
 *
 * The version of the OpenAPI document: 1.2.2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDetailedFareRules.h
 *
 * 
 */

#ifndef OAIDetailedFareRules_H
#define OAIDetailedFareRules_H

#include <QJsonObject>

#include "OAITermAndCondition.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITermAndCondition;

class OAIDetailedFareRules : public OAIObject {
public:
    OAIDetailedFareRules();
    OAIDetailedFareRules(QString json);
    ~OAIDetailedFareRules() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getFareBasis() const;
    void setFareBasis(const QString &fare_basis);
    bool is_fare_basis_Set() const;
    bool is_fare_basis_Valid() const;

    OAITermAndCondition getFareNotes() const;
    void setFareNotes(const OAITermAndCondition &fare_notes);
    bool is_fare_notes_Set() const;
    bool is_fare_notes_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getSegmentId() const;
    void setSegmentId(const QString &segment_id);
    bool is_segment_id_Set() const;
    bool is_segment_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_fare_basis;
    bool m_fare_basis_isSet;
    bool m_fare_basis_isValid;

    OAITermAndCondition m_fare_notes;
    bool m_fare_notes_isSet;
    bool m_fare_notes_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_segment_id;
    bool m_segment_id_isSet;
    bool m_segment_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDetailedFareRules)

#endif // OAIDetailedFareRules_H
