/**
 * Flight Offers Price
 * Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization-262)** for more information on how to generate an access token.   Please also be aware that our test environment is based on a subset of the production, if you are not returning any results try with big cities/airports like LON (London) or NYC (New-York).
 *
 * The version of the OpenAPI document: 1.2.2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreditCardFee.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreditCardFee::OAICreditCardFee(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreditCardFee::OAICreditCardFee() {
    this->initializeModel();
}

OAICreditCardFee::~OAICreditCardFee() {}

void OAICreditCardFee::initializeModel() {

    m_amount_isSet = false;
    m_amount_isValid = false;

    m_brand_isSet = false;
    m_brand_isValid = false;

    m_currency_isSet = false;
    m_currency_isValid = false;

    m_flight_offer_id_isSet = false;
    m_flight_offer_id_isValid = false;
}

void OAICreditCardFee::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreditCardFee::fromJsonObject(QJsonObject json) {

    m_amount_isValid = ::OpenAPI::fromJsonValue(m_amount, json[QString("amount")]);
    m_amount_isSet = !json[QString("amount")].isNull() && m_amount_isValid;

    m_brand_isValid = ::OpenAPI::fromJsonValue(m_brand, json[QString("brand")]);
    m_brand_isSet = !json[QString("brand")].isNull() && m_brand_isValid;

    m_currency_isValid = ::OpenAPI::fromJsonValue(m_currency, json[QString("currency")]);
    m_currency_isSet = !json[QString("currency")].isNull() && m_currency_isValid;

    m_flight_offer_id_isValid = ::OpenAPI::fromJsonValue(m_flight_offer_id, json[QString("flightOfferId")]);
    m_flight_offer_id_isSet = !json[QString("flightOfferId")].isNull() && m_flight_offer_id_isValid;
}

QString OAICreditCardFee::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreditCardFee::asJsonObject() const {
    QJsonObject obj;
    if (m_amount_isSet) {
        obj.insert(QString("amount"), ::OpenAPI::toJsonValue(m_amount));
    }
    if (m_brand.isSet()) {
        obj.insert(QString("brand"), ::OpenAPI::toJsonValue(m_brand));
    }
    if (m_currency_isSet) {
        obj.insert(QString("currency"), ::OpenAPI::toJsonValue(m_currency));
    }
    if (m_flight_offer_id_isSet) {
        obj.insert(QString("flightOfferId"), ::OpenAPI::toJsonValue(m_flight_offer_id));
    }
    return obj;
}

QString OAICreditCardFee::getAmount() const {
    return m_amount;
}
void OAICreditCardFee::setAmount(const QString &amount) {
    m_amount = amount;
    m_amount_isSet = true;
}

bool OAICreditCardFee::is_amount_Set() const{
    return m_amount_isSet;
}

bool OAICreditCardFee::is_amount_Valid() const{
    return m_amount_isValid;
}

OAIPaymentBrand OAICreditCardFee::getBrand() const {
    return m_brand;
}
void OAICreditCardFee::setBrand(const OAIPaymentBrand &brand) {
    m_brand = brand;
    m_brand_isSet = true;
}

bool OAICreditCardFee::is_brand_Set() const{
    return m_brand_isSet;
}

bool OAICreditCardFee::is_brand_Valid() const{
    return m_brand_isValid;
}

QString OAICreditCardFee::getCurrency() const {
    return m_currency;
}
void OAICreditCardFee::setCurrency(const QString &currency) {
    m_currency = currency;
    m_currency_isSet = true;
}

bool OAICreditCardFee::is_currency_Set() const{
    return m_currency_isSet;
}

bool OAICreditCardFee::is_currency_Valid() const{
    return m_currency_isValid;
}

QString OAICreditCardFee::getFlightOfferId() const {
    return m_flight_offer_id;
}
void OAICreditCardFee::setFlightOfferId(const QString &flight_offer_id) {
    m_flight_offer_id = flight_offer_id;
    m_flight_offer_id_isSet = true;
}

bool OAICreditCardFee::is_flight_offer_id_Set() const{
    return m_flight_offer_id_isSet;
}

bool OAICreditCardFee::is_flight_offer_id_Valid() const{
    return m_flight_offer_id_isValid;
}

bool OAICreditCardFee::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_brand.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_currency_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_flight_offer_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreditCardFee::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
