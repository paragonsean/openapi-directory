/**
 * Flight Offers Price
 * Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization-262)** for more information on how to generate an access token.   Please also be aware that our test environment is based on a subset of the production, if you are not returning any results try with big cities/airports like LON (London) or NYC (New-York).
 *
 * The version of the OpenAPI document: 1.2.2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBookingRequirements.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBookingRequirements::OAIBookingRequirements(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBookingRequirements::OAIBookingRequirements() {
    this->initializeModel();
}

OAIBookingRequirements::~OAIBookingRequirements() {}

void OAIBookingRequirements::initializeModel() {

    m_email_address_required_isSet = false;
    m_email_address_required_isValid = false;

    m_invoice_address_required_isSet = false;
    m_invoice_address_required_isValid = false;

    m_mailing_address_required_isSet = false;
    m_mailing_address_required_isValid = false;

    m_mobile_phone_number_required_isSet = false;
    m_mobile_phone_number_required_isValid = false;

    m_phone_country_code_required_isSet = false;
    m_phone_country_code_required_isValid = false;

    m_phone_number_required_isSet = false;
    m_phone_number_required_isValid = false;

    m_postal_code_required_isSet = false;
    m_postal_code_required_isValid = false;

    m_traveler_requirements_isSet = false;
    m_traveler_requirements_isValid = false;
}

void OAIBookingRequirements::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBookingRequirements::fromJsonObject(QJsonObject json) {

    m_email_address_required_isValid = ::OpenAPI::fromJsonValue(m_email_address_required, json[QString("emailAddressRequired")]);
    m_email_address_required_isSet = !json[QString("emailAddressRequired")].isNull() && m_email_address_required_isValid;

    m_invoice_address_required_isValid = ::OpenAPI::fromJsonValue(m_invoice_address_required, json[QString("invoiceAddressRequired")]);
    m_invoice_address_required_isSet = !json[QString("invoiceAddressRequired")].isNull() && m_invoice_address_required_isValid;

    m_mailing_address_required_isValid = ::OpenAPI::fromJsonValue(m_mailing_address_required, json[QString("mailingAddressRequired")]);
    m_mailing_address_required_isSet = !json[QString("mailingAddressRequired")].isNull() && m_mailing_address_required_isValid;

    m_mobile_phone_number_required_isValid = ::OpenAPI::fromJsonValue(m_mobile_phone_number_required, json[QString("mobilePhoneNumberRequired")]);
    m_mobile_phone_number_required_isSet = !json[QString("mobilePhoneNumberRequired")].isNull() && m_mobile_phone_number_required_isValid;

    m_phone_country_code_required_isValid = ::OpenAPI::fromJsonValue(m_phone_country_code_required, json[QString("phoneCountryCodeRequired")]);
    m_phone_country_code_required_isSet = !json[QString("phoneCountryCodeRequired")].isNull() && m_phone_country_code_required_isValid;

    m_phone_number_required_isValid = ::OpenAPI::fromJsonValue(m_phone_number_required, json[QString("phoneNumberRequired")]);
    m_phone_number_required_isSet = !json[QString("phoneNumberRequired")].isNull() && m_phone_number_required_isValid;

    m_postal_code_required_isValid = ::OpenAPI::fromJsonValue(m_postal_code_required, json[QString("postalCodeRequired")]);
    m_postal_code_required_isSet = !json[QString("postalCodeRequired")].isNull() && m_postal_code_required_isValid;

    m_traveler_requirements_isValid = ::OpenAPI::fromJsonValue(m_traveler_requirements, json[QString("travelerRequirements")]);
    m_traveler_requirements_isSet = !json[QString("travelerRequirements")].isNull() && m_traveler_requirements_isValid;
}

QString OAIBookingRequirements::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBookingRequirements::asJsonObject() const {
    QJsonObject obj;
    if (m_email_address_required_isSet) {
        obj.insert(QString("emailAddressRequired"), ::OpenAPI::toJsonValue(m_email_address_required));
    }
    if (m_invoice_address_required_isSet) {
        obj.insert(QString("invoiceAddressRequired"), ::OpenAPI::toJsonValue(m_invoice_address_required));
    }
    if (m_mailing_address_required_isSet) {
        obj.insert(QString("mailingAddressRequired"), ::OpenAPI::toJsonValue(m_mailing_address_required));
    }
    if (m_mobile_phone_number_required_isSet) {
        obj.insert(QString("mobilePhoneNumberRequired"), ::OpenAPI::toJsonValue(m_mobile_phone_number_required));
    }
    if (m_phone_country_code_required_isSet) {
        obj.insert(QString("phoneCountryCodeRequired"), ::OpenAPI::toJsonValue(m_phone_country_code_required));
    }
    if (m_phone_number_required_isSet) {
        obj.insert(QString("phoneNumberRequired"), ::OpenAPI::toJsonValue(m_phone_number_required));
    }
    if (m_postal_code_required_isSet) {
        obj.insert(QString("postalCodeRequired"), ::OpenAPI::toJsonValue(m_postal_code_required));
    }
    if (m_traveler_requirements.size() > 0) {
        obj.insert(QString("travelerRequirements"), ::OpenAPI::toJsonValue(m_traveler_requirements));
    }
    return obj;
}

bool OAIBookingRequirements::isEmailAddressRequired() const {
    return m_email_address_required;
}
void OAIBookingRequirements::setEmailAddressRequired(const bool &email_address_required) {
    m_email_address_required = email_address_required;
    m_email_address_required_isSet = true;
}

bool OAIBookingRequirements::is_email_address_required_Set() const{
    return m_email_address_required_isSet;
}

bool OAIBookingRequirements::is_email_address_required_Valid() const{
    return m_email_address_required_isValid;
}

bool OAIBookingRequirements::isInvoiceAddressRequired() const {
    return m_invoice_address_required;
}
void OAIBookingRequirements::setInvoiceAddressRequired(const bool &invoice_address_required) {
    m_invoice_address_required = invoice_address_required;
    m_invoice_address_required_isSet = true;
}

bool OAIBookingRequirements::is_invoice_address_required_Set() const{
    return m_invoice_address_required_isSet;
}

bool OAIBookingRequirements::is_invoice_address_required_Valid() const{
    return m_invoice_address_required_isValid;
}

bool OAIBookingRequirements::isMailingAddressRequired() const {
    return m_mailing_address_required;
}
void OAIBookingRequirements::setMailingAddressRequired(const bool &mailing_address_required) {
    m_mailing_address_required = mailing_address_required;
    m_mailing_address_required_isSet = true;
}

bool OAIBookingRequirements::is_mailing_address_required_Set() const{
    return m_mailing_address_required_isSet;
}

bool OAIBookingRequirements::is_mailing_address_required_Valid() const{
    return m_mailing_address_required_isValid;
}

bool OAIBookingRequirements::isMobilePhoneNumberRequired() const {
    return m_mobile_phone_number_required;
}
void OAIBookingRequirements::setMobilePhoneNumberRequired(const bool &mobile_phone_number_required) {
    m_mobile_phone_number_required = mobile_phone_number_required;
    m_mobile_phone_number_required_isSet = true;
}

bool OAIBookingRequirements::is_mobile_phone_number_required_Set() const{
    return m_mobile_phone_number_required_isSet;
}

bool OAIBookingRequirements::is_mobile_phone_number_required_Valid() const{
    return m_mobile_phone_number_required_isValid;
}

bool OAIBookingRequirements::isPhoneCountryCodeRequired() const {
    return m_phone_country_code_required;
}
void OAIBookingRequirements::setPhoneCountryCodeRequired(const bool &phone_country_code_required) {
    m_phone_country_code_required = phone_country_code_required;
    m_phone_country_code_required_isSet = true;
}

bool OAIBookingRequirements::is_phone_country_code_required_Set() const{
    return m_phone_country_code_required_isSet;
}

bool OAIBookingRequirements::is_phone_country_code_required_Valid() const{
    return m_phone_country_code_required_isValid;
}

bool OAIBookingRequirements::isPhoneNumberRequired() const {
    return m_phone_number_required;
}
void OAIBookingRequirements::setPhoneNumberRequired(const bool &phone_number_required) {
    m_phone_number_required = phone_number_required;
    m_phone_number_required_isSet = true;
}

bool OAIBookingRequirements::is_phone_number_required_Set() const{
    return m_phone_number_required_isSet;
}

bool OAIBookingRequirements::is_phone_number_required_Valid() const{
    return m_phone_number_required_isValid;
}

bool OAIBookingRequirements::isPostalCodeRequired() const {
    return m_postal_code_required;
}
void OAIBookingRequirements::setPostalCodeRequired(const bool &postal_code_required) {
    m_postal_code_required = postal_code_required;
    m_postal_code_required_isSet = true;
}

bool OAIBookingRequirements::is_postal_code_required_Set() const{
    return m_postal_code_required_isSet;
}

bool OAIBookingRequirements::is_postal_code_required_Valid() const{
    return m_postal_code_required_isValid;
}

QList<OAIPassengerConditions> OAIBookingRequirements::getTravelerRequirements() const {
    return m_traveler_requirements;
}
void OAIBookingRequirements::setTravelerRequirements(const QList<OAIPassengerConditions> &traveler_requirements) {
    m_traveler_requirements = traveler_requirements;
    m_traveler_requirements_isSet = true;
}

bool OAIBookingRequirements::is_traveler_requirements_Set() const{
    return m_traveler_requirements_isSet;
}

bool OAIBookingRequirements::is_traveler_requirements_Valid() const{
    return m_traveler_requirements_isValid;
}

bool OAIBookingRequirements::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_email_address_required_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_invoice_address_required_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mailing_address_required_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mobile_phone_number_required_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_phone_country_code_required_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_phone_number_required_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_postal_code_required_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_traveler_requirements.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBookingRequirements::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
