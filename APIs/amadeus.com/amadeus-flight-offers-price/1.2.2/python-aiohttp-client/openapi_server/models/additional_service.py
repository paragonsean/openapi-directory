# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.additional_service_type import AdditionalServiceType
from openapi_server import util


class AdditionalService(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, amount: str=None, type: AdditionalServiceType=None):
        """AdditionalService - a model defined in OpenAPI

        :param amount: The amount of this AdditionalService.
        :param type: The type of this AdditionalService.
        """
        self.openapi_types = {
            'amount': str,
            'type': AdditionalServiceType
        }

        self.attribute_map = {
            'amount': 'amount',
            'type': 'type'
        }

        self._amount = amount
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AdditionalService':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AdditionalService of this AdditionalService.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def amount(self):
        """Gets the amount of this AdditionalService.


        :return: The amount of this AdditionalService.
        :rtype: str
        """
        return self._amount

    @amount.setter
    def amount(self, amount):
        """Sets the amount of this AdditionalService.


        :param amount: The amount of this AdditionalService.
        :type amount: str
        """

        self._amount = amount

    @property
    def type(self):
        """Gets the type of this AdditionalService.


        :return: The type of this AdditionalService.
        :rtype: AdditionalServiceType
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this AdditionalService.


        :param type: The type of this AdditionalService.
        :type type: AdditionalServiceType
        """

        self._type = type
