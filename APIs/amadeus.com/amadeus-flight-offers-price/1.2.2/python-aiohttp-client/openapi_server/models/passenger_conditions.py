# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PassengerConditions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, air_france_discount_required: bool=None, date_of_birth_required: bool=None, document_issuance_city_required: bool=None, document_required: bool=None, gender_required: bool=None, redress_required_if_any: bool=None, residence_required: bool=None, spanish_resident_discount_required: bool=None, traveler_id: str=None):
        """PassengerConditions - a model defined in OpenAPI

        :param air_france_discount_required: The air_france_discount_required of this PassengerConditions.
        :param date_of_birth_required: The date_of_birth_required of this PassengerConditions.
        :param document_issuance_city_required: The document_issuance_city_required of this PassengerConditions.
        :param document_required: The document_required of this PassengerConditions.
        :param gender_required: The gender_required of this PassengerConditions.
        :param redress_required_if_any: The redress_required_if_any of this PassengerConditions.
        :param residence_required: The residence_required of this PassengerConditions.
        :param spanish_resident_discount_required: The spanish_resident_discount_required of this PassengerConditions.
        :param traveler_id: The traveler_id of this PassengerConditions.
        """
        self.openapi_types = {
            'air_france_discount_required': bool,
            'date_of_birth_required': bool,
            'document_issuance_city_required': bool,
            'document_required': bool,
            'gender_required': bool,
            'redress_required_if_any': bool,
            'residence_required': bool,
            'spanish_resident_discount_required': bool,
            'traveler_id': str
        }

        self.attribute_map = {
            'air_france_discount_required': 'airFranceDiscountRequired',
            'date_of_birth_required': 'dateOfBirthRequired',
            'document_issuance_city_required': 'documentIssuanceCityRequired',
            'document_required': 'documentRequired',
            'gender_required': 'genderRequired',
            'redress_required_if_any': 'redressRequiredIfAny',
            'residence_required': 'residenceRequired',
            'spanish_resident_discount_required': 'spanishResidentDiscountRequired',
            'traveler_id': 'travelerId'
        }

        self._air_france_discount_required = air_france_discount_required
        self._date_of_birth_required = date_of_birth_required
        self._document_issuance_city_required = document_issuance_city_required
        self._document_required = document_required
        self._gender_required = gender_required
        self._redress_required_if_any = redress_required_if_any
        self._residence_required = residence_required
        self._spanish_resident_discount_required = spanish_resident_discount_required
        self._traveler_id = traveler_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PassengerConditions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PassengerConditions of this PassengerConditions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def air_france_discount_required(self):
        """Gets the air_france_discount_required of this PassengerConditions.

        If true, the Air France discount is required for the concerned traveler for the creation of the flight-order

        :return: The air_france_discount_required of this PassengerConditions.
        :rtype: bool
        """
        return self._air_france_discount_required

    @air_france_discount_required.setter
    def air_france_discount_required(self, air_france_discount_required):
        """Sets the air_france_discount_required of this PassengerConditions.

        If true, the Air France discount is required for the concerned traveler for the creation of the flight-order

        :param air_france_discount_required: The air_france_discount_required of this PassengerConditions.
        :type air_france_discount_required: bool
        """

        self._air_france_discount_required = air_france_discount_required

    @property
    def date_of_birth_required(self):
        """Gets the date_of_birth_required of this PassengerConditions.

        If true, the date of bitrth is required for the concerned traveler for the creation of the flight-order

        :return: The date_of_birth_required of this PassengerConditions.
        :rtype: bool
        """
        return self._date_of_birth_required

    @date_of_birth_required.setter
    def date_of_birth_required(self, date_of_birth_required):
        """Sets the date_of_birth_required of this PassengerConditions.

        If true, the date of bitrth is required for the concerned traveler for the creation of the flight-order

        :param date_of_birth_required: The date_of_birth_required of this PassengerConditions.
        :type date_of_birth_required: bool
        """

        self._date_of_birth_required = date_of_birth_required

    @property
    def document_issuance_city_required(self):
        """Gets the document_issuance_city_required of this PassengerConditions.

        If true, the isuance city of the document is required for the concerned traveler for the creation of the flight-order

        :return: The document_issuance_city_required of this PassengerConditions.
        :rtype: bool
        """
        return self._document_issuance_city_required

    @document_issuance_city_required.setter
    def document_issuance_city_required(self, document_issuance_city_required):
        """Sets the document_issuance_city_required of this PassengerConditions.

        If true, the isuance city of the document is required for the concerned traveler for the creation of the flight-order

        :param document_issuance_city_required: The document_issuance_city_required of this PassengerConditions.
        :type document_issuance_city_required: bool
        """

        self._document_issuance_city_required = document_issuance_city_required

    @property
    def document_required(self):
        """Gets the document_required of this PassengerConditions.

        If true, a document is required for the concerned traveler for the creation of the flight-order

        :return: The document_required of this PassengerConditions.
        :rtype: bool
        """
        return self._document_required

    @document_required.setter
    def document_required(self, document_required):
        """Sets the document_required of this PassengerConditions.

        If true, a document is required for the concerned traveler for the creation of the flight-order

        :param document_required: The document_required of this PassengerConditions.
        :type document_required: bool
        """

        self._document_required = document_required

    @property
    def gender_required(self):
        """Gets the gender_required of this PassengerConditions.

        If true, the gender is required for the concerned traveler for the creation of the flight-order

        :return: The gender_required of this PassengerConditions.
        :rtype: bool
        """
        return self._gender_required

    @gender_required.setter
    def gender_required(self, gender_required):
        """Sets the gender_required of this PassengerConditions.

        If true, the gender is required for the concerned traveler for the creation of the flight-order

        :param gender_required: The gender_required of this PassengerConditions.
        :type gender_required: bool
        """

        self._gender_required = gender_required

    @property
    def redress_required_if_any(self):
        """Gets the redress_required_if_any of this PassengerConditions.

        If true, the redress is required if any for the concerned traveler for the creation of the flight-order

        :return: The redress_required_if_any of this PassengerConditions.
        :rtype: bool
        """
        return self._redress_required_if_any

    @redress_required_if_any.setter
    def redress_required_if_any(self, redress_required_if_any):
        """Sets the redress_required_if_any of this PassengerConditions.

        If true, the redress is required if any for the concerned traveler for the creation of the flight-order

        :param redress_required_if_any: The redress_required_if_any of this PassengerConditions.
        :type redress_required_if_any: bool
        """

        self._redress_required_if_any = redress_required_if_any

    @property
    def residence_required(self):
        """Gets the residence_required of this PassengerConditions.

        If true, the address is required for the concerned traveler for the creation of the flight-order

        :return: The residence_required of this PassengerConditions.
        :rtype: bool
        """
        return self._residence_required

    @residence_required.setter
    def residence_required(self, residence_required):
        """Sets the residence_required of this PassengerConditions.

        If true, the address is required for the concerned traveler for the creation of the flight-order

        :param residence_required: The residence_required of this PassengerConditions.
        :type residence_required: bool
        """

        self._residence_required = residence_required

    @property
    def spanish_resident_discount_required(self):
        """Gets the spanish_resident_discount_required of this PassengerConditions.

        If true, the Spanish resident discount is required for the concerned traveler for the creation of the flight-order

        :return: The spanish_resident_discount_required of this PassengerConditions.
        :rtype: bool
        """
        return self._spanish_resident_discount_required

    @spanish_resident_discount_required.setter
    def spanish_resident_discount_required(self, spanish_resident_discount_required):
        """Sets the spanish_resident_discount_required of this PassengerConditions.

        If true, the Spanish resident discount is required for the concerned traveler for the creation of the flight-order

        :param spanish_resident_discount_required: The spanish_resident_discount_required of this PassengerConditions.
        :type spanish_resident_discount_required: bool
        """

        self._spanish_resident_discount_required = spanish_resident_discount_required

    @property
    def traveler_id(self):
        """Gets the traveler_id of this PassengerConditions.

        Id of the traveler

        :return: The traveler_id of this PassengerConditions.
        :rtype: str
        """
        return self._traveler_id

    @traveler_id.setter
    def traveler_id(self, traveler_id):
        """Sets the traveler_id of this PassengerConditions.

        Id of the traveler

        :param traveler_id: The traveler_id of this PassengerConditions.
        :type traveler_id: str
        """

        self._traveler_id = traveler_id
