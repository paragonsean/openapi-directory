/*
 * Flight Offers Price
 * Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization-262)** for more information on how to generate an access token.   Please also be aware that our test environment is based on a subset of the production, if you are not returning any results try with big cities/airports like LON (London) or NYC (New-York).
 *
 * The version of the OpenAPI document: 1.2.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ExtendedPrice;
import org.openapitools.client.model.FlightOfferSource;
import org.openapitools.client.model.Itineraries;
import org.openapitools.client.model.PricingOptions;
import org.openapitools.client.model.TravelerPricing;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for FlightOffer
 */
public class FlightOfferTest {
    private final FlightOffer model = new FlightOffer();

    /**
     * Model tests for FlightOffer
     */
    @Test
    public void testFlightOffer() {
        // TODO: test FlightOffer
    }

    /**
     * Test the property 'disablePricing'
     */
    @Test
    public void disablePricingTest() {
        // TODO: test disablePricing
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'instantTicketingRequired'
     */
    @Test
    public void instantTicketingRequiredTest() {
        // TODO: test instantTicketingRequired
    }

    /**
     * Test the property 'itineraries'
     */
    @Test
    public void itinerariesTest() {
        // TODO: test itineraries
    }

    /**
     * Test the property 'lastTicketingDate'
     */
    @Test
    public void lastTicketingDateTest() {
        // TODO: test lastTicketingDate
    }

    /**
     * Test the property 'nonHomogeneous'
     */
    @Test
    public void nonHomogeneousTest() {
        // TODO: test nonHomogeneous
    }

    /**
     * Test the property 'numberOfBookableSeats'
     */
    @Test
    public void numberOfBookableSeatsTest() {
        // TODO: test numberOfBookableSeats
    }

    /**
     * Test the property 'oneWay'
     */
    @Test
    public void oneWayTest() {
        // TODO: test oneWay
    }

    /**
     * Test the property 'paymentCardRequired'
     */
    @Test
    public void paymentCardRequiredTest() {
        // TODO: test paymentCardRequired
    }

    /**
     * Test the property 'price'
     */
    @Test
    public void priceTest() {
        // TODO: test price
    }

    /**
     * Test the property 'pricingOptions'
     */
    @Test
    public void pricingOptionsTest() {
        // TODO: test pricingOptions
    }

    /**
     * Test the property 'source'
     */
    @Test
    public void sourceTest() {
        // TODO: test source
    }

    /**
     * Test the property 'travelerPricings'
     */
    @Test
    public void travelerPricingsTest() {
        // TODO: test travelerPricings
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'validatingAirlineCodes'
     */
    @Test
    public void validatingAirlineCodesTest() {
        // TODO: test validatingAirlineCodes
    }

}
