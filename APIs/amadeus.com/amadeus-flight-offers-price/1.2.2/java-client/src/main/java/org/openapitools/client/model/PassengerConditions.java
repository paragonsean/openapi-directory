/*
 * Flight Offers Price
 * Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization-262)** for more information on how to generate an access token.   Please also be aware that our test environment is based on a subset of the production, if you are not returning any results try with big cities/airports like LON (London) or NYC (New-York).
 *
 * The version of the OpenAPI document: 1.2.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * PassengerConditions
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:03:43.662685-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class PassengerConditions {
  public static final String SERIALIZED_NAME_AIR_FRANCE_DISCOUNT_REQUIRED = "airFranceDiscountRequired";
  @SerializedName(SERIALIZED_NAME_AIR_FRANCE_DISCOUNT_REQUIRED)
  private Boolean airFranceDiscountRequired;

  public static final String SERIALIZED_NAME_DATE_OF_BIRTH_REQUIRED = "dateOfBirthRequired";
  @SerializedName(SERIALIZED_NAME_DATE_OF_BIRTH_REQUIRED)
  private Boolean dateOfBirthRequired;

  public static final String SERIALIZED_NAME_DOCUMENT_ISSUANCE_CITY_REQUIRED = "documentIssuanceCityRequired";
  @SerializedName(SERIALIZED_NAME_DOCUMENT_ISSUANCE_CITY_REQUIRED)
  private Boolean documentIssuanceCityRequired;

  public static final String SERIALIZED_NAME_DOCUMENT_REQUIRED = "documentRequired";
  @SerializedName(SERIALIZED_NAME_DOCUMENT_REQUIRED)
  private Boolean documentRequired;

  public static final String SERIALIZED_NAME_GENDER_REQUIRED = "genderRequired";
  @SerializedName(SERIALIZED_NAME_GENDER_REQUIRED)
  private Boolean genderRequired;

  public static final String SERIALIZED_NAME_REDRESS_REQUIRED_IF_ANY = "redressRequiredIfAny";
  @SerializedName(SERIALIZED_NAME_REDRESS_REQUIRED_IF_ANY)
  private Boolean redressRequiredIfAny;

  public static final String SERIALIZED_NAME_RESIDENCE_REQUIRED = "residenceRequired";
  @SerializedName(SERIALIZED_NAME_RESIDENCE_REQUIRED)
  private Boolean residenceRequired;

  public static final String SERIALIZED_NAME_SPANISH_RESIDENT_DISCOUNT_REQUIRED = "spanishResidentDiscountRequired";
  @SerializedName(SERIALIZED_NAME_SPANISH_RESIDENT_DISCOUNT_REQUIRED)
  private Boolean spanishResidentDiscountRequired;

  public static final String SERIALIZED_NAME_TRAVELER_ID = "travelerId";
  @SerializedName(SERIALIZED_NAME_TRAVELER_ID)
  private String travelerId;

  public PassengerConditions() {
  }

  public PassengerConditions airFranceDiscountRequired(Boolean airFranceDiscountRequired) {
    this.airFranceDiscountRequired = airFranceDiscountRequired;
    return this;
  }

  /**
   * If true, the Air France discount is required for the concerned traveler for the creation of the flight-order
   * @return airFranceDiscountRequired
   */
  @javax.annotation.Nullable
  public Boolean getAirFranceDiscountRequired() {
    return airFranceDiscountRequired;
  }

  public void setAirFranceDiscountRequired(Boolean airFranceDiscountRequired) {
    this.airFranceDiscountRequired = airFranceDiscountRequired;
  }


  public PassengerConditions dateOfBirthRequired(Boolean dateOfBirthRequired) {
    this.dateOfBirthRequired = dateOfBirthRequired;
    return this;
  }

  /**
   * If true, the date of bitrth is required for the concerned traveler for the creation of the flight-order
   * @return dateOfBirthRequired
   */
  @javax.annotation.Nullable
  public Boolean getDateOfBirthRequired() {
    return dateOfBirthRequired;
  }

  public void setDateOfBirthRequired(Boolean dateOfBirthRequired) {
    this.dateOfBirthRequired = dateOfBirthRequired;
  }


  public PassengerConditions documentIssuanceCityRequired(Boolean documentIssuanceCityRequired) {
    this.documentIssuanceCityRequired = documentIssuanceCityRequired;
    return this;
  }

  /**
   * If true, the isuance city of the document is required for the concerned traveler for the creation of the flight-order
   * @return documentIssuanceCityRequired
   */
  @javax.annotation.Nullable
  public Boolean getDocumentIssuanceCityRequired() {
    return documentIssuanceCityRequired;
  }

  public void setDocumentIssuanceCityRequired(Boolean documentIssuanceCityRequired) {
    this.documentIssuanceCityRequired = documentIssuanceCityRequired;
  }


  public PassengerConditions documentRequired(Boolean documentRequired) {
    this.documentRequired = documentRequired;
    return this;
  }

  /**
   * If true, a document is required for the concerned traveler for the creation of the flight-order
   * @return documentRequired
   */
  @javax.annotation.Nullable
  public Boolean getDocumentRequired() {
    return documentRequired;
  }

  public void setDocumentRequired(Boolean documentRequired) {
    this.documentRequired = documentRequired;
  }


  public PassengerConditions genderRequired(Boolean genderRequired) {
    this.genderRequired = genderRequired;
    return this;
  }

  /**
   * If true, the gender is required for the concerned traveler for the creation of the flight-order
   * @return genderRequired
   */
  @javax.annotation.Nullable
  public Boolean getGenderRequired() {
    return genderRequired;
  }

  public void setGenderRequired(Boolean genderRequired) {
    this.genderRequired = genderRequired;
  }


  public PassengerConditions redressRequiredIfAny(Boolean redressRequiredIfAny) {
    this.redressRequiredIfAny = redressRequiredIfAny;
    return this;
  }

  /**
   * If true, the redress is required if any for the concerned traveler for the creation of the flight-order
   * @return redressRequiredIfAny
   */
  @javax.annotation.Nullable
  public Boolean getRedressRequiredIfAny() {
    return redressRequiredIfAny;
  }

  public void setRedressRequiredIfAny(Boolean redressRequiredIfAny) {
    this.redressRequiredIfAny = redressRequiredIfAny;
  }


  public PassengerConditions residenceRequired(Boolean residenceRequired) {
    this.residenceRequired = residenceRequired;
    return this;
  }

  /**
   * If true, the address is required for the concerned traveler for the creation of the flight-order
   * @return residenceRequired
   */
  @javax.annotation.Nullable
  public Boolean getResidenceRequired() {
    return residenceRequired;
  }

  public void setResidenceRequired(Boolean residenceRequired) {
    this.residenceRequired = residenceRequired;
  }


  public PassengerConditions spanishResidentDiscountRequired(Boolean spanishResidentDiscountRequired) {
    this.spanishResidentDiscountRequired = spanishResidentDiscountRequired;
    return this;
  }

  /**
   * If true, the Spanish resident discount is required for the concerned traveler for the creation of the flight-order
   * @return spanishResidentDiscountRequired
   */
  @javax.annotation.Nullable
  public Boolean getSpanishResidentDiscountRequired() {
    return spanishResidentDiscountRequired;
  }

  public void setSpanishResidentDiscountRequired(Boolean spanishResidentDiscountRequired) {
    this.spanishResidentDiscountRequired = spanishResidentDiscountRequired;
  }


  public PassengerConditions travelerId(String travelerId) {
    this.travelerId = travelerId;
    return this;
  }

  /**
   * Id of the traveler
   * @return travelerId
   */
  @javax.annotation.Nullable
  public String getTravelerId() {
    return travelerId;
  }

  public void setTravelerId(String travelerId) {
    this.travelerId = travelerId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PassengerConditions passengerConditions = (PassengerConditions) o;
    return Objects.equals(this.airFranceDiscountRequired, passengerConditions.airFranceDiscountRequired) &&
        Objects.equals(this.dateOfBirthRequired, passengerConditions.dateOfBirthRequired) &&
        Objects.equals(this.documentIssuanceCityRequired, passengerConditions.documentIssuanceCityRequired) &&
        Objects.equals(this.documentRequired, passengerConditions.documentRequired) &&
        Objects.equals(this.genderRequired, passengerConditions.genderRequired) &&
        Objects.equals(this.redressRequiredIfAny, passengerConditions.redressRequiredIfAny) &&
        Objects.equals(this.residenceRequired, passengerConditions.residenceRequired) &&
        Objects.equals(this.spanishResidentDiscountRequired, passengerConditions.spanishResidentDiscountRequired) &&
        Objects.equals(this.travelerId, passengerConditions.travelerId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(airFranceDiscountRequired, dateOfBirthRequired, documentIssuanceCityRequired, documentRequired, genderRequired, redressRequiredIfAny, residenceRequired, spanishResidentDiscountRequired, travelerId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PassengerConditions {\n");
    sb.append("    airFranceDiscountRequired: ").append(toIndentedString(airFranceDiscountRequired)).append("\n");
    sb.append("    dateOfBirthRequired: ").append(toIndentedString(dateOfBirthRequired)).append("\n");
    sb.append("    documentIssuanceCityRequired: ").append(toIndentedString(documentIssuanceCityRequired)).append("\n");
    sb.append("    documentRequired: ").append(toIndentedString(documentRequired)).append("\n");
    sb.append("    genderRequired: ").append(toIndentedString(genderRequired)).append("\n");
    sb.append("    redressRequiredIfAny: ").append(toIndentedString(redressRequiredIfAny)).append("\n");
    sb.append("    residenceRequired: ").append(toIndentedString(residenceRequired)).append("\n");
    sb.append("    spanishResidentDiscountRequired: ").append(toIndentedString(spanishResidentDiscountRequired)).append("\n");
    sb.append("    travelerId: ").append(toIndentedString(travelerId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("airFranceDiscountRequired");
    openapiFields.add("dateOfBirthRequired");
    openapiFields.add("documentIssuanceCityRequired");
    openapiFields.add("documentRequired");
    openapiFields.add("genderRequired");
    openapiFields.add("redressRequiredIfAny");
    openapiFields.add("residenceRequired");
    openapiFields.add("spanishResidentDiscountRequired");
    openapiFields.add("travelerId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to PassengerConditions
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!PassengerConditions.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PassengerConditions is not found in the empty JSON string", PassengerConditions.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!PassengerConditions.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PassengerConditions` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("travelerId") != null && !jsonObj.get("travelerId").isJsonNull()) && !jsonObj.get("travelerId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `travelerId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("travelerId").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PassengerConditions.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PassengerConditions' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PassengerConditions> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PassengerConditions.class));

       return (TypeAdapter<T>) new TypeAdapter<PassengerConditions>() {
           @Override
           public void write(JsonWriter out, PassengerConditions value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PassengerConditions read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of PassengerConditions given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of PassengerConditions
   * @throws IOException if the JSON string is invalid with respect to PassengerConditions
   */
  public static PassengerConditions fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PassengerConditions.class);
  }

  /**
   * Convert an instance of PassengerConditions to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

