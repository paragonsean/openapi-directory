/**
 * Flight Order Management
 * Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization-262)** for more information on how to generate an access token.   Please also be aware that our test environment is based on a subset of the production, if you are not returning any results try with big cities/airports like LON (London) or NYC (New-York).
 *
 * The version of the OpenAPI document: 1.9.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import OtherPaymentMethod from './OtherPaymentMethod';

/**
 * The OtherMethod model module.
 * @module model/OtherMethod
 * @version 1.9.0
 */
class OtherMethod {
    /**
     * Constructs a new <code>OtherMethod</code>.
     * other payment method
     * @alias module:model/OtherMethod
     */
    constructor() { 
        
        OtherMethod.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>OtherMethod</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OtherMethod} obj Optional instance to populate.
     * @return {module:model/OtherMethod} The populated <code>OtherMethod</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OtherMethod();

            if (data.hasOwnProperty('flightOfferIds')) {
                obj['flightOfferIds'] = ApiClient.convertToType(data['flightOfferIds'], ['String']);
            }
            if (data.hasOwnProperty('method')) {
                obj['method'] = OtherPaymentMethod.constructFromObject(data['method']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OtherMethod</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OtherMethod</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['flightOfferIds'])) {
            throw new Error("Expected the field `flightOfferIds` to be an array in the JSON data but got " + data['flightOfferIds']);
        }

        return true;
    }


}



/**
 * Id of the concern flightOffers
 * @member {Array.<String>} flightOfferIds
 */
OtherMethod.prototype['flightOfferIds'] = undefined;

/**
 * @member {module:model/OtherPaymentMethod} method
 */
OtherMethod.prototype['method'] = undefined;






export default OtherMethod;

