/**
 * Flight Order Management
 * Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization-262)** for more information on how to generate an access token.   Please also be aware that our test environment is based on a subset of the production, if you are not returning any results try with big cities/airports like LON (London) or NYC (New-York).
 *
 * The version of the OpenAPI document: 1.9.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Error400 from '../model/Error400';
import Error404 from '../model/Error404';
import Error500 from '../model/Error500';
import SuccessBooking from '../model/SuccessBooking';

/**
* Booking service.
* @module api/BookingApi
* @version 1.9.0
*/
export default class BookingApi {

    /**
    * Constructs a new BookingApi. 
    * @alias module:api/BookingApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the cancelFlightOrder operation.
     * @callback module:api/BookingApi~cancelFlightOrderCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Cancel a given flight order
     * @param {String} flightOrderId identifier of the flight order
     * @param {module:api/BookingApi~cancelFlightOrderCallback} callback The callback function, accepting three arguments: error, data, response
     */
    cancelFlightOrder(flightOrderId, callback) {
      let postBody = null;
      // verify the required parameter 'flightOrderId' is set
      if (flightOrderId === undefined || flightOrderId === null) {
        throw new Error("Missing the required parameter 'flightOrderId' when calling cancelFlightOrder");
      }

      let pathParams = {
        'flight-orderId': flightOrderId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/vnd.amadeus+json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/booking/flight-orders/{flight-orderId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getFlightOrder operation.
     * @callback module:api/BookingApi~getFlightOrderCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SuccessBooking} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve a given flight order
     * @param {String} flightOrderId identifier of the flight order
     * @param {module:api/BookingApi~getFlightOrderCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SuccessBooking}
     */
    getFlightOrder(flightOrderId, callback) {
      let postBody = null;
      // verify the required parameter 'flightOrderId' is set
      if (flightOrderId === undefined || flightOrderId === null) {
        throw new Error("Missing the required parameter 'flightOrderId' when calling getFlightOrder");
      }

      let pathParams = {
        'flight-orderId': flightOrderId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/vnd.amadeus+json'];
      let returnType = SuccessBooking;
      return this.apiClient.callApi(
        '/booking/flight-orders/{flight-orderId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
