/**
 * Flight Order Management
 * Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization-262)** for more information on how to generate an access token.   Please also be aware that our test environment is based on a subset of the production, if you are not returning any results try with big cities/airports like LON (London) or NYC (New-York).
 *
 * The version of the OpenAPI document: 1.9.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AdditionalService from './model/AdditionalService';
import AdditionalServiceType from './model/AdditionalServiceType';
import AdditionalServicesRequest from './model/AdditionalServicesRequest';
import Address from './model/Address';
import AirTravelDocument from './model/AirTravelDocument';
import AirTravelDocumentCommon from './model/AirTravelDocumentCommon';
import AircraftEquipment from './model/AircraftEquipment';
import AirlineRemark from './model/AirlineRemark';
import AirlineRemarkType from './model/AirlineRemarkType';
import AllotmentDetails from './model/AllotmentDetails';
import AssociatedRecord from './model/AssociatedRecord';
import AssociatedRecordCommon from './model/AssociatedRecordCommon';
import AutomatedProcess from './model/AutomatedProcess';
import AutomatedProcessCode from './model/AutomatedProcessCode';
import AutomatedProcessCommon from './model/AutomatedProcessCommon';
import B2bWallet from './model/B2bWallet';
import BaggageAllowance from './model/BaggageAllowance';
import BaseName from './model/BaseName';
import Co2Emission from './model/Co2Emission';
import CollectionLinks from './model/CollectionLinks';
import CollectionMetaLink from './model/CollectionMetaLink';
import Contact from './model/Contact';
import ContactDictionary from './model/ContactDictionary';
import ContactPurpose from './model/ContactPurpose';
import CreditCard from './model/CreditCard';
import CreditCardBrand from './model/CreditCardBrand';
import CreditCardCommon from './model/CreditCardCommon';
import Dictionaries from './model/Dictionaries';
import Discount from './model/Discount';
import DiscountTravelerType from './model/DiscountTravelerType';
import DiscountType from './model/DiscountType';
import Document from './model/Document';
import DocumentType from './model/DocumentType';
import ElementaryPrice from './model/ElementaryPrice';
import EmergencyContact from './model/EmergencyContact';
import Error400 from './model/Error400';
import Error404 from './model/Error404';
import Error500 from './model/Error500';
import ExtendedPrice from './model/ExtendedPrice';
import FareDetailsBySegment from './model/FareDetailsBySegment';
import Fee from './model/Fee';
import FeeType from './model/FeeType';
import FlightEndPoint from './model/FlightEndPoint';
import FlightOffer from './model/FlightOffer';
import FlightOfferSource from './model/FlightOfferSource';
import FlightOrder from './model/FlightOrder';
import FlightSegment from './model/FlightSegment';
import FlightStop from './model/FlightStop';
import FormOfIdentification from './model/FormOfIdentification';
import FormOfPayment from './model/FormOfPayment';
import GeneralRemark from './model/GeneralRemark';
import GeneralRemarkType from './model/GeneralRemarkType';
import IdentityDocument from './model/IdentityDocument';
import Issue from './model/Issue';
import IssueSource from './model/IssueSource';
import Itineraries from './model/Itineraries';
import LocationValue from './model/LocationValue';
import LoyaltyProgram from './model/LoyaltyProgram';
import MealServices from './model/MealServices';
import Name from './model/Name';
import OperatingFlight from './model/OperatingFlight';
import OriginalFlightEndPoint from './model/OriginalFlightEndPoint';
import OriginalFlightStop from './model/OriginalFlightStop';
import OtherMethod from './model/OtherMethod';
import OtherPaymentMethod from './model/OtherPaymentMethod';
import Phone from './model/Phone';
import PhoneDeviceType from './model/PhoneDeviceType';
import Price from './model/Price';
import PricingOptions from './model/PricingOptions';
import Queue from './model/Queue';
import Remarks from './model/Remarks';
import ReportingData from './model/ReportingData';
import Segment from './model/Segment';
import ServiceName from './model/ServiceName';
import SliceDiceIndicator from './model/SliceDiceIndicator';
import Stakeholder from './model/Stakeholder';
import StakeholderGender from './model/StakeholderGender';
import SuccessBooking from './model/SuccessBooking';
import Tax from './model/Tax';
import TicketingAgreement from './model/TicketingAgreement';
import TicketingAgreementOption from './model/TicketingAgreementOption';
import TravelClass from './model/TravelClass';
import Traveler from './model/Traveler';
import TravelerPricing from './model/TravelerPricing';
import TravelerPricingFareOption from './model/TravelerPricingFareOption';
import TravelerType from './model/TravelerType';
import VirtualCreditCardDetails from './model/VirtualCreditCardDetails';
import BookingApi from './api/BookingApi';


/**
* Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization-262)** for more information on how to generate an access token.   Please also be aware that our test environment is based on a subset of the production, if you are not returning any results try with big cities/airports like LON (London) or NYC (New-York)..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var FlightOrderManagement = require('index'); // See note below*.
* var xxxSvc = new FlightOrderManagement.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new FlightOrderManagement.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new FlightOrderManagement.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new FlightOrderManagement.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.9.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AdditionalService model constructor.
     * @property {module:model/AdditionalService}
     */
    AdditionalService,

    /**
     * The AdditionalServiceType model constructor.
     * @property {module:model/AdditionalServiceType}
     */
    AdditionalServiceType,

    /**
     * The AdditionalServicesRequest model constructor.
     * @property {module:model/AdditionalServicesRequest}
     */
    AdditionalServicesRequest,

    /**
     * The Address model constructor.
     * @property {module:model/Address}
     */
    Address,

    /**
     * The AirTravelDocument model constructor.
     * @property {module:model/AirTravelDocument}
     */
    AirTravelDocument,

    /**
     * The AirTravelDocumentCommon model constructor.
     * @property {module:model/AirTravelDocumentCommon}
     */
    AirTravelDocumentCommon,

    /**
     * The AircraftEquipment model constructor.
     * @property {module:model/AircraftEquipment}
     */
    AircraftEquipment,

    /**
     * The AirlineRemark model constructor.
     * @property {module:model/AirlineRemark}
     */
    AirlineRemark,

    /**
     * The AirlineRemarkType model constructor.
     * @property {module:model/AirlineRemarkType}
     */
    AirlineRemarkType,

    /**
     * The AllotmentDetails model constructor.
     * @property {module:model/AllotmentDetails}
     */
    AllotmentDetails,

    /**
     * The AssociatedRecord model constructor.
     * @property {module:model/AssociatedRecord}
     */
    AssociatedRecord,

    /**
     * The AssociatedRecordCommon model constructor.
     * @property {module:model/AssociatedRecordCommon}
     */
    AssociatedRecordCommon,

    /**
     * The AutomatedProcess model constructor.
     * @property {module:model/AutomatedProcess}
     */
    AutomatedProcess,

    /**
     * The AutomatedProcessCode model constructor.
     * @property {module:model/AutomatedProcessCode}
     */
    AutomatedProcessCode,

    /**
     * The AutomatedProcessCommon model constructor.
     * @property {module:model/AutomatedProcessCommon}
     */
    AutomatedProcessCommon,

    /**
     * The B2bWallet model constructor.
     * @property {module:model/B2bWallet}
     */
    B2bWallet,

    /**
     * The BaggageAllowance model constructor.
     * @property {module:model/BaggageAllowance}
     */
    BaggageAllowance,

    /**
     * The BaseName model constructor.
     * @property {module:model/BaseName}
     */
    BaseName,

    /**
     * The Co2Emission model constructor.
     * @property {module:model/Co2Emission}
     */
    Co2Emission,

    /**
     * The CollectionLinks model constructor.
     * @property {module:model/CollectionLinks}
     */
    CollectionLinks,

    /**
     * The CollectionMetaLink model constructor.
     * @property {module:model/CollectionMetaLink}
     */
    CollectionMetaLink,

    /**
     * The Contact model constructor.
     * @property {module:model/Contact}
     */
    Contact,

    /**
     * The ContactDictionary model constructor.
     * @property {module:model/ContactDictionary}
     */
    ContactDictionary,

    /**
     * The ContactPurpose model constructor.
     * @property {module:model/ContactPurpose}
     */
    ContactPurpose,

    /**
     * The CreditCard model constructor.
     * @property {module:model/CreditCard}
     */
    CreditCard,

    /**
     * The CreditCardBrand model constructor.
     * @property {module:model/CreditCardBrand}
     */
    CreditCardBrand,

    /**
     * The CreditCardCommon model constructor.
     * @property {module:model/CreditCardCommon}
     */
    CreditCardCommon,

    /**
     * The Dictionaries model constructor.
     * @property {module:model/Dictionaries}
     */
    Dictionaries,

    /**
     * The Discount model constructor.
     * @property {module:model/Discount}
     */
    Discount,

    /**
     * The DiscountTravelerType model constructor.
     * @property {module:model/DiscountTravelerType}
     */
    DiscountTravelerType,

    /**
     * The DiscountType model constructor.
     * @property {module:model/DiscountType}
     */
    DiscountType,

    /**
     * The Document model constructor.
     * @property {module:model/Document}
     */
    Document,

    /**
     * The DocumentType model constructor.
     * @property {module:model/DocumentType}
     */
    DocumentType,

    /**
     * The ElementaryPrice model constructor.
     * @property {module:model/ElementaryPrice}
     */
    ElementaryPrice,

    /**
     * The EmergencyContact model constructor.
     * @property {module:model/EmergencyContact}
     */
    EmergencyContact,

    /**
     * The Error400 model constructor.
     * @property {module:model/Error400}
     */
    Error400,

    /**
     * The Error404 model constructor.
     * @property {module:model/Error404}
     */
    Error404,

    /**
     * The Error500 model constructor.
     * @property {module:model/Error500}
     */
    Error500,

    /**
     * The ExtendedPrice model constructor.
     * @property {module:model/ExtendedPrice}
     */
    ExtendedPrice,

    /**
     * The FareDetailsBySegment model constructor.
     * @property {module:model/FareDetailsBySegment}
     */
    FareDetailsBySegment,

    /**
     * The Fee model constructor.
     * @property {module:model/Fee}
     */
    Fee,

    /**
     * The FeeType model constructor.
     * @property {module:model/FeeType}
     */
    FeeType,

    /**
     * The FlightEndPoint model constructor.
     * @property {module:model/FlightEndPoint}
     */
    FlightEndPoint,

    /**
     * The FlightOffer model constructor.
     * @property {module:model/FlightOffer}
     */
    FlightOffer,

    /**
     * The FlightOfferSource model constructor.
     * @property {module:model/FlightOfferSource}
     */
    FlightOfferSource,

    /**
     * The FlightOrder model constructor.
     * @property {module:model/FlightOrder}
     */
    FlightOrder,

    /**
     * The FlightSegment model constructor.
     * @property {module:model/FlightSegment}
     */
    FlightSegment,

    /**
     * The FlightStop model constructor.
     * @property {module:model/FlightStop}
     */
    FlightStop,

    /**
     * The FormOfIdentification model constructor.
     * @property {module:model/FormOfIdentification}
     */
    FormOfIdentification,

    /**
     * The FormOfPayment model constructor.
     * @property {module:model/FormOfPayment}
     */
    FormOfPayment,

    /**
     * The GeneralRemark model constructor.
     * @property {module:model/GeneralRemark}
     */
    GeneralRemark,

    /**
     * The GeneralRemarkType model constructor.
     * @property {module:model/GeneralRemarkType}
     */
    GeneralRemarkType,

    /**
     * The IdentityDocument model constructor.
     * @property {module:model/IdentityDocument}
     */
    IdentityDocument,

    /**
     * The Issue model constructor.
     * @property {module:model/Issue}
     */
    Issue,

    /**
     * The IssueSource model constructor.
     * @property {module:model/IssueSource}
     */
    IssueSource,

    /**
     * The Itineraries model constructor.
     * @property {module:model/Itineraries}
     */
    Itineraries,

    /**
     * The LocationValue model constructor.
     * @property {module:model/LocationValue}
     */
    LocationValue,

    /**
     * The LoyaltyProgram model constructor.
     * @property {module:model/LoyaltyProgram}
     */
    LoyaltyProgram,

    /**
     * The MealServices model constructor.
     * @property {module:model/MealServices}
     */
    MealServices,

    /**
     * The Name model constructor.
     * @property {module:model/Name}
     */
    Name,

    /**
     * The OperatingFlight model constructor.
     * @property {module:model/OperatingFlight}
     */
    OperatingFlight,

    /**
     * The OriginalFlightEndPoint model constructor.
     * @property {module:model/OriginalFlightEndPoint}
     */
    OriginalFlightEndPoint,

    /**
     * The OriginalFlightStop model constructor.
     * @property {module:model/OriginalFlightStop}
     */
    OriginalFlightStop,

    /**
     * The OtherMethod model constructor.
     * @property {module:model/OtherMethod}
     */
    OtherMethod,

    /**
     * The OtherPaymentMethod model constructor.
     * @property {module:model/OtherPaymentMethod}
     */
    OtherPaymentMethod,

    /**
     * The Phone model constructor.
     * @property {module:model/Phone}
     */
    Phone,

    /**
     * The PhoneDeviceType model constructor.
     * @property {module:model/PhoneDeviceType}
     */
    PhoneDeviceType,

    /**
     * The Price model constructor.
     * @property {module:model/Price}
     */
    Price,

    /**
     * The PricingOptions model constructor.
     * @property {module:model/PricingOptions}
     */
    PricingOptions,

    /**
     * The Queue model constructor.
     * @property {module:model/Queue}
     */
    Queue,

    /**
     * The Remarks model constructor.
     * @property {module:model/Remarks}
     */
    Remarks,

    /**
     * The ReportingData model constructor.
     * @property {module:model/ReportingData}
     */
    ReportingData,

    /**
     * The Segment model constructor.
     * @property {module:model/Segment}
     */
    Segment,

    /**
     * The ServiceName model constructor.
     * @property {module:model/ServiceName}
     */
    ServiceName,

    /**
     * The SliceDiceIndicator model constructor.
     * @property {module:model/SliceDiceIndicator}
     */
    SliceDiceIndicator,

    /**
     * The Stakeholder model constructor.
     * @property {module:model/Stakeholder}
     */
    Stakeholder,

    /**
     * The StakeholderGender model constructor.
     * @property {module:model/StakeholderGender}
     */
    StakeholderGender,

    /**
     * The SuccessBooking model constructor.
     * @property {module:model/SuccessBooking}
     */
    SuccessBooking,

    /**
     * The Tax model constructor.
     * @property {module:model/Tax}
     */
    Tax,

    /**
     * The TicketingAgreement model constructor.
     * @property {module:model/TicketingAgreement}
     */
    TicketingAgreement,

    /**
     * The TicketingAgreementOption model constructor.
     * @property {module:model/TicketingAgreementOption}
     */
    TicketingAgreementOption,

    /**
     * The TravelClass model constructor.
     * @property {module:model/TravelClass}
     */
    TravelClass,

    /**
     * The Traveler model constructor.
     * @property {module:model/Traveler}
     */
    Traveler,

    /**
     * The TravelerPricing model constructor.
     * @property {module:model/TravelerPricing}
     */
    TravelerPricing,

    /**
     * The TravelerPricingFareOption model constructor.
     * @property {module:model/TravelerPricingFareOption}
     */
    TravelerPricingFareOption,

    /**
     * The TravelerType model constructor.
     * @property {module:model/TravelerType}
     */
    TravelerType,

    /**
     * The VirtualCreditCardDetails model constructor.
     * @property {module:model/VirtualCreditCardDetails}
     */
    VirtualCreditCardDetails,

    /**
    * The BookingApi service constructor.
    * @property {module:api/BookingApi}
    */
    BookingApi
};
