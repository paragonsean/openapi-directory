# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class LocationValue(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, city_code: str=None, country_code: str=None):
        """LocationValue - a model defined in OpenAPI

        :param city_code: The city_code of this LocationValue.
        :param country_code: The country_code of this LocationValue.
        """
        self.openapi_types = {
            'city_code': str,
            'country_code': str
        }

        self.attribute_map = {
            'city_code': 'cityCode',
            'country_code': 'countryCode'
        }

        self._city_code = city_code
        self._country_code = country_code

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LocationValue':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LocationValue of this LocationValue.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def city_code(self):
        """Gets the city_code of this LocationValue.

        City code associated to the airport

        :return: The city_code of this LocationValue.
        :rtype: str
        """
        return self._city_code

    @city_code.setter
    def city_code(self, city_code):
        """Sets the city_code of this LocationValue.

        City code associated to the airport

        :param city_code: The city_code of this LocationValue.
        :type city_code: str
        """

        self._city_code = city_code

    @property
    def country_code(self):
        """Gets the country_code of this LocationValue.

        Country code of the airport

        :return: The country_code of this LocationValue.
        :rtype: str
        """
        return self._country_code

    @country_code.setter
    def country_code(self, country_code):
        """Sets the country_code of this LocationValue.

        Country code of the airport

        :param country_code: The country_code of this LocationValue.
        :type country_code: str
        """

        self._country_code = country_code
