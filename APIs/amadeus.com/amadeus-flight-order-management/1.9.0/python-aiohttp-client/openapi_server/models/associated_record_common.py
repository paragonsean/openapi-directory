# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AssociatedRecordCommon(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, creation_date: str=None, origin_system_code: str=None, reference: str=None):
        """AssociatedRecordCommon - a model defined in OpenAPI

        :param creation_date: The creation_date of this AssociatedRecordCommon.
        :param origin_system_code: The origin_system_code of this AssociatedRecordCommon.
        :param reference: The reference of this AssociatedRecordCommon.
        """
        self.openapi_types = {
            'creation_date': str,
            'origin_system_code': str,
            'reference': str
        }

        self.attribute_map = {
            'creation_date': 'creationDate',
            'origin_system_code': 'originSystemCode',
            'reference': 'reference'
        }

        self._creation_date = creation_date
        self._origin_system_code = origin_system_code
        self._reference = reference

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AssociatedRecordCommon':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AssociatedRecordCommon of this AssociatedRecordCommon.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def creation_date(self):
        """Gets the creation_date of this AssociatedRecordCommon.

        Creation date of the referenced reservation. Date and time in [ISO8601](https://en.wikipedia.org/wiki/ISO_8601) YYYY-MM-ddThh:mm:ss.sss format, e.g. 2019-07-09T12:30:00.000

        :return: The creation_date of this AssociatedRecordCommon.
        :rtype: str
        """
        return self._creation_date

    @creation_date.setter
    def creation_date(self, creation_date):
        """Sets the creation_date of this AssociatedRecordCommon.

        Creation date of the referenced reservation. Date and time in [ISO8601](https://en.wikipedia.org/wiki/ISO_8601) YYYY-MM-ddThh:mm:ss.sss format, e.g. 2019-07-09T12:30:00.000

        :param creation_date: The creation_date of this AssociatedRecordCommon.
        :type creation_date: str
        """

        self._creation_date = creation_date

    @property
    def origin_system_code(self):
        """Gets the origin_system_code of this AssociatedRecordCommon.

        Designates the system which has originated the referenced reservation.

        :return: The origin_system_code of this AssociatedRecordCommon.
        :rtype: str
        """
        return self._origin_system_code

    @origin_system_code.setter
    def origin_system_code(self, origin_system_code):
        """Sets the origin_system_code of this AssociatedRecordCommon.

        Designates the system which has originated the referenced reservation.

        :param origin_system_code: The origin_system_code of this AssociatedRecordCommon.
        :type origin_system_code: str
        """
        if origin_system_code is not None and len(origin_system_code) > 3:
            raise ValueError("Invalid value for `origin_system_code`, length must be less than or equal to `3`")
        if origin_system_code is not None and len(origin_system_code) < 2:
            raise ValueError("Invalid value for `origin_system_code`, length must be greater than or equal to `2`")

        self._origin_system_code = origin_system_code

    @property
    def reference(self):
        """Gets the reference of this AssociatedRecordCommon.

        Record locator [Amadeus or OA] with which the current reservation is related. In case of a codeshare relation, it enables to identify the operating PNR.

        :return: The reference of this AssociatedRecordCommon.
        :rtype: str
        """
        return self._reference

    @reference.setter
    def reference(self, reference):
        """Sets the reference of this AssociatedRecordCommon.

        Record locator [Amadeus or OA] with which the current reservation is related. In case of a codeshare relation, it enables to identify the operating PNR.

        :param reference: The reference of this AssociatedRecordCommon.
        :type reference: str
        """

        self._reference = reference
