# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.b2b_wallet import B2bWallet
from openapi_server.models.credit_card import CreditCard
from openapi_server.models.other_method import OtherMethod
from openapi_server import util


class FormOfPayment(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, b2b_wallet: B2bWallet=None, credit_card: CreditCard=None, other: OtherMethod=None):
        """FormOfPayment - a model defined in OpenAPI

        :param b2b_wallet: The b2b_wallet of this FormOfPayment.
        :param credit_card: The credit_card of this FormOfPayment.
        :param other: The other of this FormOfPayment.
        """
        self.openapi_types = {
            'b2b_wallet': B2bWallet,
            'credit_card': CreditCard,
            'other': OtherMethod
        }

        self.attribute_map = {
            'b2b_wallet': 'b2bWallet',
            'credit_card': 'creditCard',
            'other': 'other'
        }

        self._b2b_wallet = b2b_wallet
        self._credit_card = credit_card
        self._other = other

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FormOfPayment':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FormOfPayment of this FormOfPayment.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def b2b_wallet(self):
        """Gets the b2b_wallet of this FormOfPayment.


        :return: The b2b_wallet of this FormOfPayment.
        :rtype: B2bWallet
        """
        return self._b2b_wallet

    @b2b_wallet.setter
    def b2b_wallet(self, b2b_wallet):
        """Sets the b2b_wallet of this FormOfPayment.


        :param b2b_wallet: The b2b_wallet of this FormOfPayment.
        :type b2b_wallet: B2bWallet
        """

        self._b2b_wallet = b2b_wallet

    @property
    def credit_card(self):
        """Gets the credit_card of this FormOfPayment.


        :return: The credit_card of this FormOfPayment.
        :rtype: CreditCard
        """
        return self._credit_card

    @credit_card.setter
    def credit_card(self, credit_card):
        """Sets the credit_card of this FormOfPayment.


        :param credit_card: The credit_card of this FormOfPayment.
        :type credit_card: CreditCard
        """

        self._credit_card = credit_card

    @property
    def other(self):
        """Gets the other of this FormOfPayment.


        :return: The other of this FormOfPayment.
        :rtype: OtherMethod
        """
        return self._other

    @other.setter
    def other(self, other):
        """Sets the other of this FormOfPayment.


        :param other: The other of this FormOfPayment.
        :type other: OtherMethod
        """

        self._other = other
