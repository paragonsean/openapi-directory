/**
 * Flight Order Management
 * Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization-262)** for more information on how to generate an access token.   Please also be aware that our test environment is based on a subset of the production, if you are not returning any results try with big cities/airports like LON (London) or NYC (New-York).
 *
 * The version of the OpenAPI document: 1.9.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITraveler.h
 *
 * the traveler of the trip
 */

#ifndef OAITraveler_H
#define OAITraveler_H

#include <QJsonObject>

#include "OAIContact.h"
#include "OAIDiscount.h"
#include "OAIEmergencyContact.h"
#include "OAIIdentityDocument.h"
#include "OAILoyaltyProgram.h"
#include "OAIName.h"
#include "OAIStakeholderGender.h"
#include <QDate>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIIdentityDocument;
class OAIName;
class OAIContact;
class OAIDiscount;
class OAIEmergencyContact;
class OAILoyaltyProgram;

class OAITraveler : public OAIObject {
public:
    OAITraveler();
    OAITraveler(QString json);
    ~OAITraveler() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDate getDateOfBirth() const;
    void setDateOfBirth(const QDate &date_of_birth);
    bool is_date_of_birth_Set() const;
    bool is_date_of_birth_Valid() const;

    QList<OAIIdentityDocument> getDocuments() const;
    void setDocuments(const QList<OAIIdentityDocument> &documents);
    bool is_documents_Set() const;
    bool is_documents_Valid() const;

    OAIStakeholderGender getGender() const;
    void setGender(const OAIStakeholderGender &gender);
    bool is_gender_Set() const;
    bool is_gender_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAIName getName() const;
    void setName(const OAIName &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAIContact getContact() const;
    void setContact(const OAIContact &contact);
    bool is_contact_Set() const;
    bool is_contact_Valid() const;

    QList<OAIDiscount> getDiscountEligibility() const;
    void setDiscountEligibility(const QList<OAIDiscount> &discount_eligibility);
    bool is_discount_eligibility_Set() const;
    bool is_discount_eligibility_Valid() const;

    OAIEmergencyContact getEmergencyContact() const;
    void setEmergencyContact(const OAIEmergencyContact &emergency_contact);
    bool is_emergency_contact_Set() const;
    bool is_emergency_contact_Valid() const;

    QList<OAILoyaltyProgram> getLoyaltyPrograms() const;
    void setLoyaltyPrograms(const QList<OAILoyaltyProgram> &loyalty_programs);
    bool is_loyalty_programs_Set() const;
    bool is_loyalty_programs_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDate m_date_of_birth;
    bool m_date_of_birth_isSet;
    bool m_date_of_birth_isValid;

    QList<OAIIdentityDocument> m_documents;
    bool m_documents_isSet;
    bool m_documents_isValid;

    OAIStakeholderGender m_gender;
    bool m_gender_isSet;
    bool m_gender_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAIName m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAIContact m_contact;
    bool m_contact_isSet;
    bool m_contact_isValid;

    QList<OAIDiscount> m_discount_eligibility;
    bool m_discount_eligibility_isSet;
    bool m_discount_eligibility_isValid;

    OAIEmergencyContact m_emergency_contact;
    bool m_emergency_contact_isSet;
    bool m_emergency_contact_isValid;

    QList<OAILoyaltyProgram> m_loyalty_programs;
    bool m_loyalty_programs_isSet;
    bool m_loyalty_programs_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITraveler)

#endif // OAITraveler_H
