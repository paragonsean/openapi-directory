# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AmenityType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    BUNDLED_SERVICE = 'BUNDLED_SERVICE'
    BRANDED_FARES = 'BRANDED_FARES'
    BAGGAGE = 'BAGGAGE'
    CARBON_OFFSET = 'CARBON_OFFSET'
    FREQUENT_FLYER = 'FREQUENT_FLYER'
    GROUND = 'GROUND'
    ENTERTAINMENT = 'ENTERTAINMENT'
    LOUNGE = 'LOUNGE'
    MEDICAL = 'MEDICAL'
    MEAL = 'MEAL'
    PETS = 'PETS'
    RULE_OVERRIDE = 'RULE_OVERRIDE'
    STANDBY = 'STANDBY'
    STORE = 'STORE'
    TRAVEL_SERVICES = 'TRAVEL_SERVICES'
    UNACCOMPANIED_TRAVEL = 'UNACCOMPANIED_TRAVEL'
    UPGRADES = 'UPGRADES'
    UNACCOMPANIED_TRAVEL_UNESCORTED = 'UNACCOMPANIED_TRAVEL_UNESCORTED'
    PRE_RESERVED_SEAT = 'PRE_RESERVED_SEAT'

    def __init__(self):
        """AmenityType - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AmenityType':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AmenityType of this AmenityType.
        """
        return util.deserialize_model(dikt, cls)
