/*
 * Flight Offers Search
 *  Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization)** for more information on how to generate an access token.   Please also be aware that our test environment is based on a subset of the production, if you are not returning any results try with big cities/airports like LON (London) or NYC (New-York).
 *
 * The version of the OpenAPI document: 2.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CabinRestriction;
import org.openapitools.client.model.CarrierRestrictions;
import org.openapitools.client.model.ConnectionRestriction;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * FlightFilters
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:03:36.621787-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class FlightFilters {
  public static final String SERIALIZED_NAME_BUS_SEGMENT_ALLOWED = "busSegmentAllowed";
  @SerializedName(SERIALIZED_NAME_BUS_SEGMENT_ALLOWED)
  private Boolean busSegmentAllowed;

  public static final String SERIALIZED_NAME_CABIN_RESTRICTIONS = "cabinRestrictions";
  @SerializedName(SERIALIZED_NAME_CABIN_RESTRICTIONS)
  private List<CabinRestriction> cabinRestrictions = new ArrayList<>();

  public static final String SERIALIZED_NAME_CARRIER_RESTRICTIONS = "carrierRestrictions";
  @SerializedName(SERIALIZED_NAME_CARRIER_RESTRICTIONS)
  private CarrierRestrictions carrierRestrictions;

  public static final String SERIALIZED_NAME_CONNECTION_RESTRICTION = "connectionRestriction";
  @SerializedName(SERIALIZED_NAME_CONNECTION_RESTRICTION)
  private ConnectionRestriction connectionRestriction;

  public static final String SERIALIZED_NAME_CROSS_BORDER_ALLOWED = "crossBorderAllowed";
  @SerializedName(SERIALIZED_NAME_CROSS_BORDER_ALLOWED)
  private Boolean crossBorderAllowed;

  public static final String SERIALIZED_NAME_MAX_FLIGHT_TIME = "maxFlightTime";
  @SerializedName(SERIALIZED_NAME_MAX_FLIGHT_TIME)
  private BigDecimal maxFlightTime;

  public static final String SERIALIZED_NAME_MORE_OVERNIGHTS_ALLOWED = "moreOvernightsAllowed";
  @SerializedName(SERIALIZED_NAME_MORE_OVERNIGHTS_ALLOWED)
  private Boolean moreOvernightsAllowed;

  public static final String SERIALIZED_NAME_RAIL_SEGMENT_ALLOWED = "railSegmentAllowed";
  @SerializedName(SERIALIZED_NAME_RAIL_SEGMENT_ALLOWED)
  private Boolean railSegmentAllowed;

  public static final String SERIALIZED_NAME_RETURN_TO_DEPARTURE_AIRPORT = "returnToDepartureAirport";
  @SerializedName(SERIALIZED_NAME_RETURN_TO_DEPARTURE_AIRPORT)
  private Boolean returnToDepartureAirport;

  public FlightFilters() {
  }

  public FlightFilters busSegmentAllowed(Boolean busSegmentAllowed) {
    this.busSegmentAllowed = busSegmentAllowed;
    return this;
  }

  /**
   * This flag enable/disable filtering of bus segment
   * @return busSegmentAllowed
   */
  @javax.annotation.Nullable
  public Boolean getBusSegmentAllowed() {
    return busSegmentAllowed;
  }

  public void setBusSegmentAllowed(Boolean busSegmentAllowed) {
    this.busSegmentAllowed = busSegmentAllowed;
  }


  public FlightFilters cabinRestrictions(List<CabinRestriction> cabinRestrictions) {
    this.cabinRestrictions = cabinRestrictions;
    return this;
  }

  public FlightFilters addCabinRestrictionsItem(CabinRestriction cabinRestrictionsItem) {
    if (this.cabinRestrictions == null) {
      this.cabinRestrictions = new ArrayList<>();
    }
    this.cabinRestrictions.add(cabinRestrictionsItem);
    return this;
  }

  /**
   * Restriction towards cabins.
   * @return cabinRestrictions
   */
  @javax.annotation.Nullable
  public List<CabinRestriction> getCabinRestrictions() {
    return cabinRestrictions;
  }

  public void setCabinRestrictions(List<CabinRestriction> cabinRestrictions) {
    this.cabinRestrictions = cabinRestrictions;
  }


  public FlightFilters carrierRestrictions(CarrierRestrictions carrierRestrictions) {
    this.carrierRestrictions = carrierRestrictions;
    return this;
  }

  /**
   * Get carrierRestrictions
   * @return carrierRestrictions
   */
  @javax.annotation.Nullable
  public CarrierRestrictions getCarrierRestrictions() {
    return carrierRestrictions;
  }

  public void setCarrierRestrictions(CarrierRestrictions carrierRestrictions) {
    this.carrierRestrictions = carrierRestrictions;
  }


  public FlightFilters connectionRestriction(ConnectionRestriction connectionRestriction) {
    this.connectionRestriction = connectionRestriction;
    return this;
  }

  /**
   * Get connectionRestriction
   * @return connectionRestriction
   */
  @javax.annotation.Nullable
  public ConnectionRestriction getConnectionRestriction() {
    return connectionRestriction;
  }

  public void setConnectionRestriction(ConnectionRestriction connectionRestriction) {
    this.connectionRestriction = connectionRestriction;
  }


  public FlightFilters crossBorderAllowed(Boolean crossBorderAllowed) {
    this.crossBorderAllowed = crossBorderAllowed;
    return this;
  }

  /**
   * Allows to search a location outside the borders when a radius around a location is specified. Default is false.
   * @return crossBorderAllowed
   */
  @javax.annotation.Nullable
  public Boolean getCrossBorderAllowed() {
    return crossBorderAllowed;
  }

  public void setCrossBorderAllowed(Boolean crossBorderAllowed) {
    this.crossBorderAllowed = crossBorderAllowed;
  }


  public FlightFilters maxFlightTime(BigDecimal maxFlightTime) {
    this.maxFlightTime = maxFlightTime;
    return this;
  }

  /**
   * This option allows to modify the value for the Elapsed Flying Time (EFT) masterPricer option
   * @return maxFlightTime
   */
  @javax.annotation.Nullable
  public BigDecimal getMaxFlightTime() {
    return maxFlightTime;
  }

  public void setMaxFlightTime(BigDecimal maxFlightTime) {
    this.maxFlightTime = maxFlightTime;
  }


  public FlightFilters moreOvernightsAllowed(Boolean moreOvernightsAllowed) {
    this.moreOvernightsAllowed = moreOvernightsAllowed;
    return this;
  }

  /**
   * This flag enables/disables the possibility to have more overnight flights in Low Fare Search
   * @return moreOvernightsAllowed
   */
  @javax.annotation.Nullable
  public Boolean getMoreOvernightsAllowed() {
    return moreOvernightsAllowed;
  }

  public void setMoreOvernightsAllowed(Boolean moreOvernightsAllowed) {
    this.moreOvernightsAllowed = moreOvernightsAllowed;
  }


  public FlightFilters railSegmentAllowed(Boolean railSegmentAllowed) {
    this.railSegmentAllowed = railSegmentAllowed;
    return this;
  }

  /**
   * This flag enable/disable filtering of rail segment (TGV AIR, RAIL ...)
   * @return railSegmentAllowed
   */
  @javax.annotation.Nullable
  public Boolean getRailSegmentAllowed() {
    return railSegmentAllowed;
  }

  public void setRailSegmentAllowed(Boolean railSegmentAllowed) {
    this.railSegmentAllowed = railSegmentAllowed;
  }


  public FlightFilters returnToDepartureAirport(Boolean returnToDepartureAirport) {
    this.returnToDepartureAirport = returnToDepartureAirport;
    return this;
  }

  /**
   * This option force to retrieve flight-offer with a departure and a return in the same airport
   * @return returnToDepartureAirport
   */
  @javax.annotation.Nullable
  public Boolean getReturnToDepartureAirport() {
    return returnToDepartureAirport;
  }

  public void setReturnToDepartureAirport(Boolean returnToDepartureAirport) {
    this.returnToDepartureAirport = returnToDepartureAirport;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FlightFilters flightFilters = (FlightFilters) o;
    return Objects.equals(this.busSegmentAllowed, flightFilters.busSegmentAllowed) &&
        Objects.equals(this.cabinRestrictions, flightFilters.cabinRestrictions) &&
        Objects.equals(this.carrierRestrictions, flightFilters.carrierRestrictions) &&
        Objects.equals(this.connectionRestriction, flightFilters.connectionRestriction) &&
        Objects.equals(this.crossBorderAllowed, flightFilters.crossBorderAllowed) &&
        Objects.equals(this.maxFlightTime, flightFilters.maxFlightTime) &&
        Objects.equals(this.moreOvernightsAllowed, flightFilters.moreOvernightsAllowed) &&
        Objects.equals(this.railSegmentAllowed, flightFilters.railSegmentAllowed) &&
        Objects.equals(this.returnToDepartureAirport, flightFilters.returnToDepartureAirport);
  }

  @Override
  public int hashCode() {
    return Objects.hash(busSegmentAllowed, cabinRestrictions, carrierRestrictions, connectionRestriction, crossBorderAllowed, maxFlightTime, moreOvernightsAllowed, railSegmentAllowed, returnToDepartureAirport);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FlightFilters {\n");
    sb.append("    busSegmentAllowed: ").append(toIndentedString(busSegmentAllowed)).append("\n");
    sb.append("    cabinRestrictions: ").append(toIndentedString(cabinRestrictions)).append("\n");
    sb.append("    carrierRestrictions: ").append(toIndentedString(carrierRestrictions)).append("\n");
    sb.append("    connectionRestriction: ").append(toIndentedString(connectionRestriction)).append("\n");
    sb.append("    crossBorderAllowed: ").append(toIndentedString(crossBorderAllowed)).append("\n");
    sb.append("    maxFlightTime: ").append(toIndentedString(maxFlightTime)).append("\n");
    sb.append("    moreOvernightsAllowed: ").append(toIndentedString(moreOvernightsAllowed)).append("\n");
    sb.append("    railSegmentAllowed: ").append(toIndentedString(railSegmentAllowed)).append("\n");
    sb.append("    returnToDepartureAirport: ").append(toIndentedString(returnToDepartureAirport)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("busSegmentAllowed");
    openapiFields.add("cabinRestrictions");
    openapiFields.add("carrierRestrictions");
    openapiFields.add("connectionRestriction");
    openapiFields.add("crossBorderAllowed");
    openapiFields.add("maxFlightTime");
    openapiFields.add("moreOvernightsAllowed");
    openapiFields.add("railSegmentAllowed");
    openapiFields.add("returnToDepartureAirport");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to FlightFilters
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!FlightFilters.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in FlightFilters is not found in the empty JSON string", FlightFilters.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!FlightFilters.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `FlightFilters` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("cabinRestrictions") != null && !jsonObj.get("cabinRestrictions").isJsonNull()) {
        JsonArray jsonArraycabinRestrictions = jsonObj.getAsJsonArray("cabinRestrictions");
        if (jsonArraycabinRestrictions != null) {
          // ensure the json data is an array
          if (!jsonObj.get("cabinRestrictions").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `cabinRestrictions` to be an array in the JSON string but got `%s`", jsonObj.get("cabinRestrictions").toString()));
          }

          // validate the optional field `cabinRestrictions` (array)
          for (int i = 0; i < jsonArraycabinRestrictions.size(); i++) {
            CabinRestriction.validateJsonElement(jsonArraycabinRestrictions.get(i));
          };
        }
      }
      // validate the optional field `carrierRestrictions`
      if (jsonObj.get("carrierRestrictions") != null && !jsonObj.get("carrierRestrictions").isJsonNull()) {
        CarrierRestrictions.validateJsonElement(jsonObj.get("carrierRestrictions"));
      }
      // validate the optional field `connectionRestriction`
      if (jsonObj.get("connectionRestriction") != null && !jsonObj.get("connectionRestriction").isJsonNull()) {
        ConnectionRestriction.validateJsonElement(jsonObj.get("connectionRestriction"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!FlightFilters.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'FlightFilters' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<FlightFilters> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(FlightFilters.class));

       return (TypeAdapter<T>) new TypeAdapter<FlightFilters>() {
           @Override
           public void write(JsonWriter out, FlightFilters value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public FlightFilters read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of FlightFilters given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of FlightFilters
   * @throws IOException if the JSON string is invalid with respect to FlightFilters
   */
  public static FlightFilters fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, FlightFilters.class);
  }

  /**
   * Convert an instance of FlightFilters to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

