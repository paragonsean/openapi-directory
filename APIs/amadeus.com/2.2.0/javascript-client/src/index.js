/**
 * Flight Offers Search
 *  Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization)** for more information on how to generate an access token.   Please also be aware that our test environment is based on a subset of the production, if you are not returning any results try with big cities/airports like LON (London) or NYC (New-York).
 *
 * The version of the OpenAPI document: 2.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AdditionalInformation from './model/AdditionalInformation';
import AdditionalService from './model/AdditionalService';
import AdditionalServiceType from './model/AdditionalServiceType';
import AdditionalServicesRequest from './model/AdditionalServicesRequest';
import AircraftEntry from './model/AircraftEntry';
import AircraftEquipment from './model/AircraftEquipment';
import AllotmentDetails from './model/AllotmentDetails';
import BaggageAllowance from './model/BaggageAllowance';
import CabinRestriction from './model/CabinRestriction';
import CarrierEntry from './model/CarrierEntry';
import CarrierRestrictions from './model/CarrierRestrictions';
import Co2Emission from './model/Co2Emission';
import CollectionLinks from './model/CollectionLinks';
import CollectionMeta from './model/CollectionMeta';
import CollectionMetaLink from './model/CollectionMetaLink';
import ConnectionRestriction from './model/ConnectionRestriction';
import Coverage from './model/Coverage';
import CurrencyEntry from './model/CurrencyEntry';
import DateTimeRange from './model/DateTimeRange';
import Dictionaries from './model/Dictionaries';
import Error400 from './model/Error400';
import Error500 from './model/Error500';
import ExtendedPrice from './model/ExtendedPrice';
import ExtendedPricingOptions from './model/ExtendedPricingOptions';
import FareDetailsBySegment from './model/FareDetailsBySegment';
import Fee from './model/Fee';
import FeeType from './model/FeeType';
import FlightEndPoint from './model/FlightEndPoint';
import FlightFilters from './model/FlightFilters';
import FlightOffer from './model/FlightOffer';
import FlightOfferSource from './model/FlightOfferSource';
import FlightSegment from './model/FlightSegment';
import FlightStop from './model/FlightStop';
import GetFlightOffersQuery from './model/GetFlightOffersQuery';
import Issue from './model/Issue';
import IssueSource from './model/IssueSource';
import Itineraries from './model/Itineraries';
import LocationEntry from './model/LocationEntry';
import LocationValue from './model/LocationValue';
import OneWayCombinations from './model/OneWayCombinations';
import OperatingFlight from './model/OperatingFlight';
import OriginDestination from './model/OriginDestination';
import OriginalFlightEndPoint from './model/OriginalFlightEndPoint';
import OriginalFlightStop from './model/OriginalFlightStop';
import Price from './model/Price';
import PricingOptions from './model/PricingOptions';
import SearchCriteria from './model/SearchCriteria';
import Segment from './model/Segment';
import ServiceName from './model/ServiceName';
import SliceDiceIndicator from './model/SliceDiceIndicator';
import Success from './model/Success';
import Success1 from './model/Success1';
import Tax from './model/Tax';
import TravelClass from './model/TravelClass';
import Traveler from './model/Traveler';
import TravelerPricing from './model/TravelerPricing';
import TravelerPricingFareOption from './model/TravelerPricingFareOption';
import TravelerType from './model/TravelerType';
import ShoppingApi from './api/ShoppingApi';


/**
*  Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization)** for more information on how to generate an access token.   Please also be aware that our test environment is based on a subset of the production, if you are not returning any results try with big cities/airports like LON (London) or NYC (New-York)..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var FlightOffersSearch = require('index'); // See note below*.
* var xxxSvc = new FlightOffersSearch.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new FlightOffersSearch.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new FlightOffersSearch.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new FlightOffersSearch.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2.2.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AdditionalInformation model constructor.
     * @property {module:model/AdditionalInformation}
     */
    AdditionalInformation,

    /**
     * The AdditionalService model constructor.
     * @property {module:model/AdditionalService}
     */
    AdditionalService,

    /**
     * The AdditionalServiceType model constructor.
     * @property {module:model/AdditionalServiceType}
     */
    AdditionalServiceType,

    /**
     * The AdditionalServicesRequest model constructor.
     * @property {module:model/AdditionalServicesRequest}
     */
    AdditionalServicesRequest,

    /**
     * The AircraftEntry model constructor.
     * @property {module:model/AircraftEntry}
     */
    AircraftEntry,

    /**
     * The AircraftEquipment model constructor.
     * @property {module:model/AircraftEquipment}
     */
    AircraftEquipment,

    /**
     * The AllotmentDetails model constructor.
     * @property {module:model/AllotmentDetails}
     */
    AllotmentDetails,

    /**
     * The BaggageAllowance model constructor.
     * @property {module:model/BaggageAllowance}
     */
    BaggageAllowance,

    /**
     * The CabinRestriction model constructor.
     * @property {module:model/CabinRestriction}
     */
    CabinRestriction,

    /**
     * The CarrierEntry model constructor.
     * @property {module:model/CarrierEntry}
     */
    CarrierEntry,

    /**
     * The CarrierRestrictions model constructor.
     * @property {module:model/CarrierRestrictions}
     */
    CarrierRestrictions,

    /**
     * The Co2Emission model constructor.
     * @property {module:model/Co2Emission}
     */
    Co2Emission,

    /**
     * The CollectionLinks model constructor.
     * @property {module:model/CollectionLinks}
     */
    CollectionLinks,

    /**
     * The CollectionMeta model constructor.
     * @property {module:model/CollectionMeta}
     */
    CollectionMeta,

    /**
     * The CollectionMetaLink model constructor.
     * @property {module:model/CollectionMetaLink}
     */
    CollectionMetaLink,

    /**
     * The ConnectionRestriction model constructor.
     * @property {module:model/ConnectionRestriction}
     */
    ConnectionRestriction,

    /**
     * The Coverage model constructor.
     * @property {module:model/Coverage}
     */
    Coverage,

    /**
     * The CurrencyEntry model constructor.
     * @property {module:model/CurrencyEntry}
     */
    CurrencyEntry,

    /**
     * The DateTimeRange model constructor.
     * @property {module:model/DateTimeRange}
     */
    DateTimeRange,

    /**
     * The Dictionaries model constructor.
     * @property {module:model/Dictionaries}
     */
    Dictionaries,

    /**
     * The Error400 model constructor.
     * @property {module:model/Error400}
     */
    Error400,

    /**
     * The Error500 model constructor.
     * @property {module:model/Error500}
     */
    Error500,

    /**
     * The ExtendedPrice model constructor.
     * @property {module:model/ExtendedPrice}
     */
    ExtendedPrice,

    /**
     * The ExtendedPricingOptions model constructor.
     * @property {module:model/ExtendedPricingOptions}
     */
    ExtendedPricingOptions,

    /**
     * The FareDetailsBySegment model constructor.
     * @property {module:model/FareDetailsBySegment}
     */
    FareDetailsBySegment,

    /**
     * The Fee model constructor.
     * @property {module:model/Fee}
     */
    Fee,

    /**
     * The FeeType model constructor.
     * @property {module:model/FeeType}
     */
    FeeType,

    /**
     * The FlightEndPoint model constructor.
     * @property {module:model/FlightEndPoint}
     */
    FlightEndPoint,

    /**
     * The FlightFilters model constructor.
     * @property {module:model/FlightFilters}
     */
    FlightFilters,

    /**
     * The FlightOffer model constructor.
     * @property {module:model/FlightOffer}
     */
    FlightOffer,

    /**
     * The FlightOfferSource model constructor.
     * @property {module:model/FlightOfferSource}
     */
    FlightOfferSource,

    /**
     * The FlightSegment model constructor.
     * @property {module:model/FlightSegment}
     */
    FlightSegment,

    /**
     * The FlightStop model constructor.
     * @property {module:model/FlightStop}
     */
    FlightStop,

    /**
     * The GetFlightOffersQuery model constructor.
     * @property {module:model/GetFlightOffersQuery}
     */
    GetFlightOffersQuery,

    /**
     * The Issue model constructor.
     * @property {module:model/Issue}
     */
    Issue,

    /**
     * The IssueSource model constructor.
     * @property {module:model/IssueSource}
     */
    IssueSource,

    /**
     * The Itineraries model constructor.
     * @property {module:model/Itineraries}
     */
    Itineraries,

    /**
     * The LocationEntry model constructor.
     * @property {module:model/LocationEntry}
     */
    LocationEntry,

    /**
     * The LocationValue model constructor.
     * @property {module:model/LocationValue}
     */
    LocationValue,

    /**
     * The OneWayCombinations model constructor.
     * @property {module:model/OneWayCombinations}
     */
    OneWayCombinations,

    /**
     * The OperatingFlight model constructor.
     * @property {module:model/OperatingFlight}
     */
    OperatingFlight,

    /**
     * The OriginDestination model constructor.
     * @property {module:model/OriginDestination}
     */
    OriginDestination,

    /**
     * The OriginalFlightEndPoint model constructor.
     * @property {module:model/OriginalFlightEndPoint}
     */
    OriginalFlightEndPoint,

    /**
     * The OriginalFlightStop model constructor.
     * @property {module:model/OriginalFlightStop}
     */
    OriginalFlightStop,

    /**
     * The Price model constructor.
     * @property {module:model/Price}
     */
    Price,

    /**
     * The PricingOptions model constructor.
     * @property {module:model/PricingOptions}
     */
    PricingOptions,

    /**
     * The SearchCriteria model constructor.
     * @property {module:model/SearchCriteria}
     */
    SearchCriteria,

    /**
     * The Segment model constructor.
     * @property {module:model/Segment}
     */
    Segment,

    /**
     * The ServiceName model constructor.
     * @property {module:model/ServiceName}
     */
    ServiceName,

    /**
     * The SliceDiceIndicator model constructor.
     * @property {module:model/SliceDiceIndicator}
     */
    SliceDiceIndicator,

    /**
     * The Success model constructor.
     * @property {module:model/Success}
     */
    Success,

    /**
     * The Success1 model constructor.
     * @property {module:model/Success1}
     */
    Success1,

    /**
     * The Tax model constructor.
     * @property {module:model/Tax}
     */
    Tax,

    /**
     * The TravelClass model constructor.
     * @property {module:model/TravelClass}
     */
    TravelClass,

    /**
     * The Traveler model constructor.
     * @property {module:model/Traveler}
     */
    Traveler,

    /**
     * The TravelerPricing model constructor.
     * @property {module:model/TravelerPricing}
     */
    TravelerPricing,

    /**
     * The TravelerPricingFareOption model constructor.
     * @property {module:model/TravelerPricingFareOption}
     */
    TravelerPricingFareOption,

    /**
     * The TravelerType model constructor.
     * @property {module:model/TravelerType}
     */
    TravelerType,

    /**
    * The ShoppingApi service constructor.
    * @property {module:api/ShoppingApi}
    */
    ShoppingApi
};
