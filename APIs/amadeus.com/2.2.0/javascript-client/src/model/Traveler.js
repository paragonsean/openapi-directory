/**
 * Flight Offers Search
 *  Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization)** for more information on how to generate an access token.   Please also be aware that our test environment is based on a subset of the production, if you are not returning any results try with big cities/airports like LON (London) or NYC (New-York).
 *
 * The version of the OpenAPI document: 2.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TravelerType from './TravelerType';

/**
 * The Traveler model module.
 * @module model/Traveler
 * @version 2.2.0
 */
class Traveler {
    /**
     * Constructs a new <code>Traveler</code>.
     * @alias module:model/Traveler
     * @param id {String} 
     * @param travelerType {module:model/TravelerType} 
     */
    constructor(id, travelerType) { 
        
        Traveler.initialize(this, id, travelerType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, travelerType) { 
        obj['id'] = id;
        obj['travelerType'] = travelerType;
    }

    /**
     * Constructs a <code>Traveler</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Traveler} obj Optional instance to populate.
     * @return {module:model/Traveler} The populated <code>Traveler</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Traveler();

            if (data.hasOwnProperty('associatedAdultId')) {
                obj['associatedAdultId'] = ApiClient.convertToType(data['associatedAdultId'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('travelerType')) {
                obj['travelerType'] = TravelerType.constructFromObject(data['travelerType']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Traveler</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Traveler</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Traveler.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['associatedAdultId'] && !(typeof data['associatedAdultId'] === 'string' || data['associatedAdultId'] instanceof String)) {
            throw new Error("Expected the field `associatedAdultId` to be a primitive type in the JSON string but got " + data['associatedAdultId']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }

        return true;
    }


}

Traveler.RequiredProperties = ["id", "travelerType"];

/**
 * if type=\"HELD_INFANT\", corresponds to the adult travelers's id who will share the seat
 * @member {String} associatedAdultId
 */
Traveler.prototype['associatedAdultId'] = undefined;

/**
 * @member {String} id
 */
Traveler.prototype['id'] = undefined;

/**
 * @member {module:model/TravelerType} travelerType
 */
Traveler.prototype['travelerType'] = undefined;






export default Traveler;

