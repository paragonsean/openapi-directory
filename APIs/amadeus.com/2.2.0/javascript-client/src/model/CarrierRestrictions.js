/**
 * Flight Offers Search
 *  Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization)** for more information on how to generate an access token.   Please also be aware that our test environment is based on a subset of the production, if you are not returning any results try with big cities/airports like LON (London) or NYC (New-York).
 *
 * The version of the OpenAPI document: 2.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CarrierRestrictions model module.
 * @module model/CarrierRestrictions
 * @version 2.2.0
 */
class CarrierRestrictions {
    /**
     * Constructs a new <code>CarrierRestrictions</code>.
     * Restriction towards carriers.
     * @alias module:model/CarrierRestrictions
     */
    constructor() { 
        
        CarrierRestrictions.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CarrierRestrictions</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CarrierRestrictions} obj Optional instance to populate.
     * @return {module:model/CarrierRestrictions} The populated <code>CarrierRestrictions</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CarrierRestrictions();

            if (data.hasOwnProperty('blacklistedInEUAllowed')) {
                obj['blacklistedInEUAllowed'] = ApiClient.convertToType(data['blacklistedInEUAllowed'], 'Boolean');
            }
            if (data.hasOwnProperty('excludedCarrierCodes')) {
                obj['excludedCarrierCodes'] = ApiClient.convertToType(data['excludedCarrierCodes'], ['String']);
            }
            if (data.hasOwnProperty('includedCarrierCodes')) {
                obj['includedCarrierCodes'] = ApiClient.convertToType(data['includedCarrierCodes'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CarrierRestrictions</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CarrierRestrictions</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['excludedCarrierCodes'])) {
            throw new Error("Expected the field `excludedCarrierCodes` to be an array in the JSON data but got " + data['excludedCarrierCodes']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['includedCarrierCodes'])) {
            throw new Error("Expected the field `includedCarrierCodes` to be an array in the JSON data but got " + data['includedCarrierCodes']);
        }

        return true;
    }


}



/**
 * This flag enable/disable filtering of blacklisted airline by EU. The list of the banned airlines is published in the Official Journal of the European Union, where they are included as annexes A and B to the Commission Regulation. The blacklist of an airline can concern all its flights or some specific aircraft types pertaining to the airline
 * @member {Boolean} blacklistedInEUAllowed
 */
CarrierRestrictions.prototype['blacklistedInEUAllowed'] = undefined;

/**
 * This option ensures that the system will only consider these airlines.
 * @member {Array.<String>} excludedCarrierCodes
 */
CarrierRestrictions.prototype['excludedCarrierCodes'] = undefined;

/**
 * This option ensures that the system will only consider these airlines.
 * @member {Array.<String>} includedCarrierCodes
 */
CarrierRestrictions.prototype['includedCarrierCodes'] = undefined;






export default CarrierRestrictions;

