# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AdditionalInformation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, branded_fares: bool=None, chargeable_checked_bags: bool=None):
        """AdditionalInformation - a model defined in OpenAPI

        :param branded_fares: The branded_fares of this AdditionalInformation.
        :param chargeable_checked_bags: The chargeable_checked_bags of this AdditionalInformation.
        """
        self.openapi_types = {
            'branded_fares': bool,
            'chargeable_checked_bags': bool
        }

        self.attribute_map = {
            'branded_fares': 'brandedFares',
            'chargeable_checked_bags': 'chargeableCheckedBags'
        }

        self._branded_fares = branded_fares
        self._chargeable_checked_bags = chargeable_checked_bags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AdditionalInformation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AdditionalInformation of this AdditionalInformation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def branded_fares(self):
        """Gets the branded_fares of this AdditionalInformation.

        If true, returns the fare family name for each flight-offer which supports fare family

        :return: The branded_fares of this AdditionalInformation.
        :rtype: bool
        """
        return self._branded_fares

    @branded_fares.setter
    def branded_fares(self, branded_fares):
        """Sets the branded_fares of this AdditionalInformation.

        If true, returns the fare family name for each flight-offer which supports fare family

        :param branded_fares: The branded_fares of this AdditionalInformation.
        :type branded_fares: bool
        """

        self._branded_fares = branded_fares

    @property
    def chargeable_checked_bags(self):
        """Gets the chargeable_checked_bags of this AdditionalInformation.

        If true, returns the price of the first additional bag when the airline is an \"Amadeus Ancillary Services\" member.

        :return: The chargeable_checked_bags of this AdditionalInformation.
        :rtype: bool
        """
        return self._chargeable_checked_bags

    @chargeable_checked_bags.setter
    def chargeable_checked_bags(self, chargeable_checked_bags):
        """Sets the chargeable_checked_bags of this AdditionalInformation.

        If true, returns the price of the first additional bag when the airline is an \"Amadeus Ancillary Services\" member.

        :param chargeable_checked_bags: The chargeable_checked_bags of this AdditionalInformation.
        :type chargeable_checked_bags: bool
        """

        self._chargeable_checked_bags = chargeable_checked_bags
