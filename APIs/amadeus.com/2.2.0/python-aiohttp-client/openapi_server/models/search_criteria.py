# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.additional_information import AdditionalInformation
from openapi_server.models.extended_pricing_options import ExtendedPricingOptions
from openapi_server.models.flight_filters import FlightFilters
from openapi_server import util


class SearchCriteria(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, add_one_way_offers: bool=None, additional_information: AdditionalInformation=None, allow_alternative_fare_options: bool=None, exclude_allotments: bool=None, flight_filters: FlightFilters=None, max_flight_offers: float=250, max_price: int=None, one_flight_offer_per_day: bool=None, pricing_options: ExtendedPricingOptions=None):
        """SearchCriteria - a model defined in OpenAPI

        :param add_one_way_offers: The add_one_way_offers of this SearchCriteria.
        :param additional_information: The additional_information of this SearchCriteria.
        :param allow_alternative_fare_options: The allow_alternative_fare_options of this SearchCriteria.
        :param exclude_allotments: The exclude_allotments of this SearchCriteria.
        :param flight_filters: The flight_filters of this SearchCriteria.
        :param max_flight_offers: The max_flight_offers of this SearchCriteria.
        :param max_price: The max_price of this SearchCriteria.
        :param one_flight_offer_per_day: The one_flight_offer_per_day of this SearchCriteria.
        :param pricing_options: The pricing_options of this SearchCriteria.
        """
        self.openapi_types = {
            'add_one_way_offers': bool,
            'additional_information': AdditionalInformation,
            'allow_alternative_fare_options': bool,
            'exclude_allotments': bool,
            'flight_filters': FlightFilters,
            'max_flight_offers': float,
            'max_price': int,
            'one_flight_offer_per_day': bool,
            'pricing_options': ExtendedPricingOptions
        }

        self.attribute_map = {
            'add_one_way_offers': 'addOneWayOffers',
            'additional_information': 'additionalInformation',
            'allow_alternative_fare_options': 'allowAlternativeFareOptions',
            'exclude_allotments': 'excludeAllotments',
            'flight_filters': 'flightFilters',
            'max_flight_offers': 'maxFlightOffers',
            'max_price': 'maxPrice',
            'one_flight_offer_per_day': 'oneFlightOfferPerDay',
            'pricing_options': 'pricingOptions'
        }

        self._add_one_way_offers = add_one_way_offers
        self._additional_information = additional_information
        self._allow_alternative_fare_options = allow_alternative_fare_options
        self._exclude_allotments = exclude_allotments
        self._flight_filters = flight_filters
        self._max_flight_offers = max_flight_offers
        self._max_price = max_price
        self._one_flight_offer_per_day = one_flight_offer_per_day
        self._pricing_options = pricing_options

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SearchCriteria':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SearchCriteria of this SearchCriteria.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def add_one_way_offers(self):
        """Gets the add_one_way_offers of this SearchCriteria.

        This option allows activate the one-way combinable feature

        :return: The add_one_way_offers of this SearchCriteria.
        :rtype: bool
        """
        return self._add_one_way_offers

    @add_one_way_offers.setter
    def add_one_way_offers(self, add_one_way_offers):
        """Sets the add_one_way_offers of this SearchCriteria.

        This option allows activate the one-way combinable feature

        :param add_one_way_offers: The add_one_way_offers of this SearchCriteria.
        :type add_one_way_offers: bool
        """

        self._add_one_way_offers = add_one_way_offers

    @property
    def additional_information(self):
        """Gets the additional_information of this SearchCriteria.


        :return: The additional_information of this SearchCriteria.
        :rtype: AdditionalInformation
        """
        return self._additional_information

    @additional_information.setter
    def additional_information(self, additional_information):
        """Sets the additional_information of this SearchCriteria.


        :param additional_information: The additional_information of this SearchCriteria.
        :type additional_information: AdditionalInformation
        """

        self._additional_information = additional_information

    @property
    def allow_alternative_fare_options(self):
        """Gets the allow_alternative_fare_options of this SearchCriteria.

        This option allows to default to a standard fareOption if no offers are found for the selected fareOption.

        :return: The allow_alternative_fare_options of this SearchCriteria.
        :rtype: bool
        """
        return self._allow_alternative_fare_options

    @allow_alternative_fare_options.setter
    def allow_alternative_fare_options(self, allow_alternative_fare_options):
        """Sets the allow_alternative_fare_options of this SearchCriteria.

        This option allows to default to a standard fareOption if no offers are found for the selected fareOption.

        :param allow_alternative_fare_options: The allow_alternative_fare_options of this SearchCriteria.
        :type allow_alternative_fare_options: bool
        """

        self._allow_alternative_fare_options = allow_alternative_fare_options

    @property
    def exclude_allotments(self):
        """Gets the exclude_allotments of this SearchCriteria.

        This option allows to exclude the isAllotment flag associated to a booking class in the search response when it exist.

        :return: The exclude_allotments of this SearchCriteria.
        :rtype: bool
        """
        return self._exclude_allotments

    @exclude_allotments.setter
    def exclude_allotments(self, exclude_allotments):
        """Sets the exclude_allotments of this SearchCriteria.

        This option allows to exclude the isAllotment flag associated to a booking class in the search response when it exist.

        :param exclude_allotments: The exclude_allotments of this SearchCriteria.
        :type exclude_allotments: bool
        """

        self._exclude_allotments = exclude_allotments

    @property
    def flight_filters(self):
        """Gets the flight_filters of this SearchCriteria.


        :return: The flight_filters of this SearchCriteria.
        :rtype: FlightFilters
        """
        return self._flight_filters

    @flight_filters.setter
    def flight_filters(self, flight_filters):
        """Sets the flight_filters of this SearchCriteria.


        :param flight_filters: The flight_filters of this SearchCriteria.
        :type flight_filters: FlightFilters
        """

        self._flight_filters = flight_filters

    @property
    def max_flight_offers(self):
        """Gets the max_flight_offers of this SearchCriteria.

        Maximum number of flight offers returned (Max 250)

        :return: The max_flight_offers of this SearchCriteria.
        :rtype: float
        """
        return self._max_flight_offers

    @max_flight_offers.setter
    def max_flight_offers(self, max_flight_offers):
        """Sets the max_flight_offers of this SearchCriteria.

        Maximum number of flight offers returned (Max 250)

        :param max_flight_offers: The max_flight_offers of this SearchCriteria.
        :type max_flight_offers: float
        """

        self._max_flight_offers = max_flight_offers

    @property
    def max_price(self):
        """Gets the max_price of this SearchCriteria.

        maximum price per traveler. By default, no limit is applied. If specified, the value should be a positive number with no decimals

        :return: The max_price of this SearchCriteria.
        :rtype: int
        """
        return self._max_price

    @max_price.setter
    def max_price(self, max_price):
        """Sets the max_price of this SearchCriteria.

        maximum price per traveler. By default, no limit is applied. If specified, the value should be a positive number with no decimals

        :param max_price: The max_price of this SearchCriteria.
        :type max_price: int
        """

        self._max_price = max_price

    @property
    def one_flight_offer_per_day(self):
        """Gets the one_flight_offer_per_day of this SearchCriteria.

        Requests the system to find at least one flight-offer per day, if possible, when a range of dates is specified. Default is false.

        :return: The one_flight_offer_per_day of this SearchCriteria.
        :rtype: bool
        """
        return self._one_flight_offer_per_day

    @one_flight_offer_per_day.setter
    def one_flight_offer_per_day(self, one_flight_offer_per_day):
        """Sets the one_flight_offer_per_day of this SearchCriteria.

        Requests the system to find at least one flight-offer per day, if possible, when a range of dates is specified. Default is false.

        :param one_flight_offer_per_day: The one_flight_offer_per_day of this SearchCriteria.
        :type one_flight_offer_per_day: bool
        """

        self._one_flight_offer_per_day = one_flight_offer_per_day

    @property
    def pricing_options(self):
        """Gets the pricing_options of this SearchCriteria.


        :return: The pricing_options of this SearchCriteria.
        :rtype: ExtendedPricingOptions
        """
        return self._pricing_options

    @pricing_options.setter
    def pricing_options(self, pricing_options):
        """Sets the pricing_options of this SearchCriteria.


        :param pricing_options: The pricing_options of this SearchCriteria.
        :type pricing_options: ExtendedPricingOptions
        """

        self._pricing_options = pricing_options
