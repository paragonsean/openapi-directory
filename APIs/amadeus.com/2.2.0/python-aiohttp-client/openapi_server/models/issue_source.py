# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class IssueSource(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, example: str=None, parameter: str=None, pointer: str=None):
        """IssueSource - a model defined in OpenAPI

        :param example: The example of this IssueSource.
        :param parameter: The parameter of this IssueSource.
        :param pointer: The pointer of this IssueSource.
        """
        self.openapi_types = {
            'example': str,
            'parameter': str,
            'pointer': str
        }

        self.attribute_map = {
            'example': 'example',
            'parameter': 'parameter',
            'pointer': 'pointer'
        }

        self._example = example
        self._parameter = parameter
        self._pointer = pointer

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IssueSource':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Issue_Source of this IssueSource.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def example(self):
        """Gets the example of this IssueSource.

        a string indicating an example of the right value

        :return: The example of this IssueSource.
        :rtype: str
        """
        return self._example

    @example.setter
    def example(self, example):
        """Sets the example of this IssueSource.

        a string indicating an example of the right value

        :param example: The example of this IssueSource.
        :type example: str
        """

        self._example = example

    @property
    def parameter(self):
        """Gets the parameter of this IssueSource.

        a string indicating which URI query parameter caused the issue

        :return: The parameter of this IssueSource.
        :rtype: str
        """
        return self._parameter

    @parameter.setter
    def parameter(self, parameter):
        """Sets the parameter of this IssueSource.

        a string indicating which URI query parameter caused the issue

        :param parameter: The parameter of this IssueSource.
        :type parameter: str
        """

        self._parameter = parameter

    @property
    def pointer(self):
        """Gets the pointer of this IssueSource.

        a JSON Pointer [RFC6901] to the associated entity in the request document

        :return: The pointer of this IssueSource.
        :rtype: str
        """
        return self._pointer

    @pointer.setter
    def pointer(self, pointer):
        """Sets the pointer of this IssueSource.

        a JSON Pointer [RFC6901] to the associated entity in the request document

        :param pointer: The pointer of this IssueSource.
        :type pointer: str
        """

        self._pointer = pointer
