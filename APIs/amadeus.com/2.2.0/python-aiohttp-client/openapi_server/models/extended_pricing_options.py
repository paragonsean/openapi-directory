# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ExtendedPricingOptions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, included_checked_bags_only: bool=None):
        """ExtendedPricingOptions - a model defined in OpenAPI

        :param included_checked_bags_only: The included_checked_bags_only of this ExtendedPricingOptions.
        """
        self.openapi_types = {
            'included_checked_bags_only': bool
        }

        self.attribute_map = {
            'included_checked_bags_only': 'includedCheckedBagsOnly'
        }

        self._included_checked_bags_only = included_checked_bags_only

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ExtendedPricingOptions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ExtendedPricingOptions of this ExtendedPricingOptions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def included_checked_bags_only(self):
        """Gets the included_checked_bags_only of this ExtendedPricingOptions.

        If true, returns the flight-offers with included checked bags only

        :return: The included_checked_bags_only of this ExtendedPricingOptions.
        :rtype: bool
        """
        return self._included_checked_bags_only

    @included_checked_bags_only.setter
    def included_checked_bags_only(self, included_checked_bags_only):
        """Sets the included_checked_bags_only of this ExtendedPricingOptions.

        If true, returns the flight-offers with included checked bags only

        :param included_checked_bags_only: The included_checked_bags_only of this ExtendedPricingOptions.
        :type included_checked_bags_only: bool
        """

        self._included_checked_bags_only = included_checked_bags_only
