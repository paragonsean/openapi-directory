/**
 * Flight Offers Search
 *  Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization)** for more information on how to generate an access token.   Please also be aware that our test environment is based on a subset of the production, if you are not returning any results try with big cities/airports like LON (London) or NYC (New-York).
 *
 * The version of the OpenAPI document: 2.2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIExtendedPricingOptions.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIExtendedPricingOptions::OAIExtendedPricingOptions(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIExtendedPricingOptions::OAIExtendedPricingOptions() {
    this->initializeModel();
}

OAIExtendedPricingOptions::~OAIExtendedPricingOptions() {}

void OAIExtendedPricingOptions::initializeModel() {

    m_included_checked_bags_only_isSet = false;
    m_included_checked_bags_only_isValid = false;
}

void OAIExtendedPricingOptions::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIExtendedPricingOptions::fromJsonObject(QJsonObject json) {

    m_included_checked_bags_only_isValid = ::OpenAPI::fromJsonValue(m_included_checked_bags_only, json[QString("includedCheckedBagsOnly")]);
    m_included_checked_bags_only_isSet = !json[QString("includedCheckedBagsOnly")].isNull() && m_included_checked_bags_only_isValid;
}

QString OAIExtendedPricingOptions::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIExtendedPricingOptions::asJsonObject() const {
    QJsonObject obj;
    if (m_included_checked_bags_only_isSet) {
        obj.insert(QString("includedCheckedBagsOnly"), ::OpenAPI::toJsonValue(m_included_checked_bags_only));
    }
    return obj;
}

bool OAIExtendedPricingOptions::isIncludedCheckedBagsOnly() const {
    return m_included_checked_bags_only;
}
void OAIExtendedPricingOptions::setIncludedCheckedBagsOnly(const bool &included_checked_bags_only) {
    m_included_checked_bags_only = included_checked_bags_only;
    m_included_checked_bags_only_isSet = true;
}

bool OAIExtendedPricingOptions::is_included_checked_bags_only_Set() const{
    return m_included_checked_bags_only_isSet;
}

bool OAIExtendedPricingOptions::is_included_checked_bags_only_Valid() const{
    return m_included_checked_bags_only_isValid;
}

bool OAIExtendedPricingOptions::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_included_checked_bags_only_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIExtendedPricingOptions::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
