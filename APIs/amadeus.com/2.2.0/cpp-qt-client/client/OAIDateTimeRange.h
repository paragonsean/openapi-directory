/**
 * Flight Offers Search
 *  Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization)** for more information on how to generate an access token.   Please also be aware that our test environment is based on a subset of the production, if you are not returning any results try with big cities/airports like LON (London) or NYC (New-York).
 *
 * The version of the OpenAPI document: 2.2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDateTimeRange.h
 *
 * 
 */

#ifndef OAIDateTimeRange_H
#define OAIDateTimeRange_H

#include <QJsonObject>

#include <QDate>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDateTimeRange : public OAIObject {
public:
    OAIDateTimeRange();
    OAIDateTimeRange(QString json);
    ~OAIDateTimeRange() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDate getDate() const;
    void setDate(const QDate &date);
    bool is_date_Set() const;
    bool is_date_Valid() const;

    QString getDateWindow() const;
    void setDateWindow(const QString &date_window);
    bool is_date_window_Set() const;
    bool is_date_window_Valid() const;

    QString getTime() const;
    void setTime(const QString &time);
    bool is_time_Set() const;
    bool is_time_Valid() const;

    QString getTimeWindow() const;
    void setTimeWindow(const QString &time_window);
    bool is_time_window_Set() const;
    bool is_time_window_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDate m_date;
    bool m_date_isSet;
    bool m_date_isValid;

    QString m_date_window;
    bool m_date_window_isSet;
    bool m_date_window_isValid;

    QString m_time;
    bool m_time_isSet;
    bool m_time_isValid;

    QString m_time_window;
    bool m_time_window_isSet;
    bool m_time_window_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDateTimeRange)

#endif // OAIDateTimeRange_H
