/**
 * Flight Offers Search
 *  Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization)** for more information on how to generate an access token.   Please also be aware that our test environment is based on a subset of the production, if you are not returning any results try with big cities/airports like LON (London) or NYC (New-York).
 *
 * The version of the OpenAPI document: 2.2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIConnectionRestriction.h
 *
 * Restriction towards number of connections.
 */

#ifndef OAIConnectionRestriction_H
#define OAIConnectionRestriction_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIConnectionRestriction : public OAIObject {
public:
    OAIConnectionRestriction();
    OAIConnectionRestriction(QString json);
    ~OAIConnectionRestriction() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAirportChangeAllowed() const;
    void setAirportChangeAllowed(const bool &airport_change_allowed);
    bool is_airport_change_allowed_Set() const;
    bool is_airport_change_allowed_Valid() const;

    double getMaxNumberOfConnections() const;
    void setMaxNumberOfConnections(const double &max_number_of_connections);
    bool is_max_number_of_connections_Set() const;
    bool is_max_number_of_connections_Valid() const;

    bool isTechnicalStopsAllowed() const;
    void setTechnicalStopsAllowed(const bool &technical_stops_allowed);
    bool is_technical_stops_allowed_Set() const;
    bool is_technical_stops_allowed_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_airport_change_allowed;
    bool m_airport_change_allowed_isSet;
    bool m_airport_change_allowed_isValid;

    double m_max_number_of_connections;
    bool m_max_number_of_connections_isSet;
    bool m_max_number_of_connections_isValid;

    bool m_technical_stops_allowed;
    bool m_technical_stops_allowed_isSet;
    bool m_technical_stops_allowed_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIConnectionRestriction)

#endif // OAIConnectionRestriction_H
