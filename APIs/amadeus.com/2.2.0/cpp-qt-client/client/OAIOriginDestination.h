/**
 * Flight Offers Search
 *  Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization)** for more information on how to generate an access token.   Please also be aware that our test environment is based on a subset of the production, if you are not returning any results try with big cities/airports like LON (London) or NYC (New-York).
 *
 * The version of the OpenAPI document: 2.2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOriginDestination.h
 *
 * 
 */

#ifndef OAIOriginDestination_H
#define OAIOriginDestination_H

#include <QJsonObject>

#include "OAIDateTimeRange.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDateTimeRange;

class OAIOriginDestination : public OAIObject {
public:
    OAIOriginDestination();
    OAIOriginDestination(QString json);
    ~OAIOriginDestination() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getAlternativeDestinationsCodes() const;
    void setAlternativeDestinationsCodes(const QList<QString> &alternative_destinations_codes);
    bool is_alternative_destinations_codes_Set() const;
    bool is_alternative_destinations_codes_Valid() const;

    QList<QString> getAlternativeOriginsCodes() const;
    void setAlternativeOriginsCodes(const QList<QString> &alternative_origins_codes);
    bool is_alternative_origins_codes_Set() const;
    bool is_alternative_origins_codes_Valid() const;

    OAIDateTimeRange getArrivalDateTimeRange() const;
    void setArrivalDateTimeRange(const OAIDateTimeRange &arrival_date_time_range);
    bool is_arrival_date_time_range_Set() const;
    bool is_arrival_date_time_range_Valid() const;

    OAIDateTimeRange getDepartureDateTimeRange() const;
    void setDepartureDateTimeRange(const OAIDateTimeRange &departure_date_time_range);
    bool is_departure_date_time_range_Set() const;
    bool is_departure_date_time_range_Valid() const;

    QString getDestinationLocationCode() const;
    void setDestinationLocationCode(const QString &destination_location_code);
    bool is_destination_location_code_Set() const;
    bool is_destination_location_code_Valid() const;

    double getDestinationRadius() const;
    void setDestinationRadius(const double &destination_radius);
    bool is_destination_radius_Set() const;
    bool is_destination_radius_Valid() const;

    QList<QString> getExcludedConnectionPoints() const;
    void setExcludedConnectionPoints(const QList<QString> &excluded_connection_points);
    bool is_excluded_connection_points_Set() const;
    bool is_excluded_connection_points_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QList<QString> getIncludedConnectionPoints() const;
    void setIncludedConnectionPoints(const QList<QString> &included_connection_points);
    bool is_included_connection_points_Set() const;
    bool is_included_connection_points_Valid() const;

    QString getOriginLocationCode() const;
    void setOriginLocationCode(const QString &origin_location_code);
    bool is_origin_location_code_Set() const;
    bool is_origin_location_code_Valid() const;

    double getOriginRadius() const;
    void setOriginRadius(const double &origin_radius);
    bool is_origin_radius_Set() const;
    bool is_origin_radius_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_alternative_destinations_codes;
    bool m_alternative_destinations_codes_isSet;
    bool m_alternative_destinations_codes_isValid;

    QList<QString> m_alternative_origins_codes;
    bool m_alternative_origins_codes_isSet;
    bool m_alternative_origins_codes_isValid;

    OAIDateTimeRange m_arrival_date_time_range;
    bool m_arrival_date_time_range_isSet;
    bool m_arrival_date_time_range_isValid;

    OAIDateTimeRange m_departure_date_time_range;
    bool m_departure_date_time_range_isSet;
    bool m_departure_date_time_range_isValid;

    QString m_destination_location_code;
    bool m_destination_location_code_isSet;
    bool m_destination_location_code_isValid;

    double m_destination_radius;
    bool m_destination_radius_isSet;
    bool m_destination_radius_isValid;

    QList<QString> m_excluded_connection_points;
    bool m_excluded_connection_points_isSet;
    bool m_excluded_connection_points_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QList<QString> m_included_connection_points;
    bool m_included_connection_points_isSet;
    bool m_included_connection_points_isValid;

    QString m_origin_location_code;
    bool m_origin_location_code_isSet;
    bool m_origin_location_code_isValid;

    double m_origin_radius;
    bool m_origin_radius_isSet;
    bool m_origin_radius_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIOriginDestination)

#endif // OAIOriginDestination_H
