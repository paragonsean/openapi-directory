/**
 * Flight Offers Search
 *  Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization)** for more information on how to generate an access token.   Please also be aware that our test environment is based on a subset of the production, if you are not returning any results try with big cities/airports like LON (London) or NYC (New-York).
 *
 * The version of the OpenAPI document: 2.2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISearchCriteria.h
 *
 * 
 */

#ifndef OAISearchCriteria_H
#define OAISearchCriteria_H

#include <QJsonObject>

#include "OAIAdditionalInformation.h"
#include "OAIExtendedPricingOptions.h"
#include "OAIFlightFilters.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAdditionalInformation;
class OAIFlightFilters;
class OAIExtendedPricingOptions;

class OAISearchCriteria : public OAIObject {
public:
    OAISearchCriteria();
    OAISearchCriteria(QString json);
    ~OAISearchCriteria() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAddOneWayOffers() const;
    void setAddOneWayOffers(const bool &add_one_way_offers);
    bool is_add_one_way_offers_Set() const;
    bool is_add_one_way_offers_Valid() const;

    OAIAdditionalInformation getAdditionalInformation() const;
    void setAdditionalInformation(const OAIAdditionalInformation &additional_information);
    bool is_additional_information_Set() const;
    bool is_additional_information_Valid() const;

    bool isAllowAlternativeFareOptions() const;
    void setAllowAlternativeFareOptions(const bool &allow_alternative_fare_options);
    bool is_allow_alternative_fare_options_Set() const;
    bool is_allow_alternative_fare_options_Valid() const;

    bool isExcludeAllotments() const;
    void setExcludeAllotments(const bool &exclude_allotments);
    bool is_exclude_allotments_Set() const;
    bool is_exclude_allotments_Valid() const;

    OAIFlightFilters getFlightFilters() const;
    void setFlightFilters(const OAIFlightFilters &flight_filters);
    bool is_flight_filters_Set() const;
    bool is_flight_filters_Valid() const;

    double getMaxFlightOffers() const;
    void setMaxFlightOffers(const double &max_flight_offers);
    bool is_max_flight_offers_Set() const;
    bool is_max_flight_offers_Valid() const;

    qint32 getMaxPrice() const;
    void setMaxPrice(const qint32 &max_price);
    bool is_max_price_Set() const;
    bool is_max_price_Valid() const;

    bool isOneFlightOfferPerDay() const;
    void setOneFlightOfferPerDay(const bool &one_flight_offer_per_day);
    bool is_one_flight_offer_per_day_Set() const;
    bool is_one_flight_offer_per_day_Valid() const;

    OAIExtendedPricingOptions getPricingOptions() const;
    void setPricingOptions(const OAIExtendedPricingOptions &pricing_options);
    bool is_pricing_options_Set() const;
    bool is_pricing_options_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_add_one_way_offers;
    bool m_add_one_way_offers_isSet;
    bool m_add_one_way_offers_isValid;

    OAIAdditionalInformation m_additional_information;
    bool m_additional_information_isSet;
    bool m_additional_information_isValid;

    bool m_allow_alternative_fare_options;
    bool m_allow_alternative_fare_options_isSet;
    bool m_allow_alternative_fare_options_isValid;

    bool m_exclude_allotments;
    bool m_exclude_allotments_isSet;
    bool m_exclude_allotments_isValid;

    OAIFlightFilters m_flight_filters;
    bool m_flight_filters_isSet;
    bool m_flight_filters_isValid;

    double m_max_flight_offers;
    bool m_max_flight_offers_isSet;
    bool m_max_flight_offers_isValid;

    qint32 m_max_price;
    bool m_max_price_isSet;
    bool m_max_price_isValid;

    bool m_one_flight_offer_per_day;
    bool m_one_flight_offer_per_day_isSet;
    bool m_one_flight_offer_per_day_isValid;

    OAIExtendedPricingOptions m_pricing_options;
    bool m_pricing_options_isSet;
    bool m_pricing_options_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISearchCriteria)

#endif // OAISearchCriteria_H
