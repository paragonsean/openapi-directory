/**
 * Flight Offers Search
 *  Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization)** for more information on how to generate an access token.   Please also be aware that our test environment is based on a subset of the production, if you are not returning any results try with big cities/airports like LON (London) or NYC (New-York).
 *
 * The version of the OpenAPI document: 2.2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICarrierRestrictions.h
 *
 * Restriction towards carriers.
 */

#ifndef OAICarrierRestrictions_H
#define OAICarrierRestrictions_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICarrierRestrictions : public OAIObject {
public:
    OAICarrierRestrictions();
    OAICarrierRestrictions(QString json);
    ~OAICarrierRestrictions() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isBlacklistedInEuAllowed() const;
    void setBlacklistedInEuAllowed(const bool &blacklisted_in_eu_allowed);
    bool is_blacklisted_in_eu_allowed_Set() const;
    bool is_blacklisted_in_eu_allowed_Valid() const;

    QList<QString> getExcludedCarrierCodes() const;
    void setExcludedCarrierCodes(const QList<QString> &excluded_carrier_codes);
    bool is_excluded_carrier_codes_Set() const;
    bool is_excluded_carrier_codes_Valid() const;

    QList<QString> getIncludedCarrierCodes() const;
    void setIncludedCarrierCodes(const QList<QString> &included_carrier_codes);
    bool is_included_carrier_codes_Set() const;
    bool is_included_carrier_codes_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_blacklisted_in_eu_allowed;
    bool m_blacklisted_in_eu_allowed_isSet;
    bool m_blacklisted_in_eu_allowed_isValid;

    QList<QString> m_excluded_carrier_codes;
    bool m_excluded_carrier_codes_isSet;
    bool m_excluded_carrier_codes_isValid;

    QList<QString> m_included_carrier_codes;
    bool m_included_carrier_codes_isSet;
    bool m_included_carrier_codes_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICarrierRestrictions)

#endif // OAICarrierRestrictions_H
