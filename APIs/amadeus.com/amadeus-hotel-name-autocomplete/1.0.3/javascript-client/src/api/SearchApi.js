/**
 * Hotel Name Autocomplete
 * Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization-262)** for more information on how to generate an access token.   Please also be aware that our test environment is based on a subset of the production for this API it may change dynamically. For your tests, use big cities like LON (London) or NYC (New-York).
 *
 * The version of the OpenAPI document: 1.0.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Gethotels400Response from '../model/Gethotels400Response';
import Gethotels500Response from '../model/Gethotels500Response';
import Success from '../model/Success';

/**
* Search service.
* @module api/SearchApi
* @version 1.0.3
*/
export default class SearchApi {

    /**
    * Constructs a new SearchApi. 
    * @alias module:api/SearchApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the gethotels operation.
     * @callback module:api/SearchApi~gethotelsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Success} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns a list of hotels matching a given keyword.
     * @param {String} keyword Location query keyword
     * @param {Array.<module:model/String>} subType Category of search - To enter several values, repeat the query parameter   Use HOTEL_LEISURE to target aggregators or HOTEL_GDS to target directly the chains
     * @param {Object} opts Optional parameters
     * @param {String} [countryCode] The country in which you search the subType. Country Code in [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) format
     * @param {String} [lang = 'EN')] The language in which you want the results in following [ISO 639-1](https://fr.wikipedia.org/wiki/Liste_des_codes_ISO_639-1).   If the language entered is not available then the results will be shown in the default language, English.
     * @param {Number} [max = 20)] The number of results requested from 1 to 20
     * @param {module:api/SearchApi~gethotelsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Success}
     */
    gethotels(keyword, subType, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'keyword' is set
      if (keyword === undefined || keyword === null) {
        throw new Error("Missing the required parameter 'keyword' when calling gethotels");
      }
      // verify the required parameter 'subType' is set
      if (subType === undefined || subType === null) {
        throw new Error("Missing the required parameter 'subType' when calling gethotels");
      }

      let pathParams = {
      };
      let queryParams = {
        'keyword': keyword,
        'subType': this.apiClient.buildCollectionParam(subType, 'multi'),
        'countryCode': opts['countryCode'],
        'lang': opts['lang'],
        'max': opts['max']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/vnd.amadeus+json'];
      let returnType = Success;
      return this.apiClient.callApi(
        '/reference-data/locations/hotel', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
