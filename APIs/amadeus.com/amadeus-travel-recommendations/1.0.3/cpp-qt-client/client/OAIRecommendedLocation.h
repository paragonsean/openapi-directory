/**
 * Travel Recommendations API
 * Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization-262)** for more information on how to generate an access token.
 *
 * The version of the OpenAPI document: 1.0.3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRecommendedLocation.h
 *
 * Similar Location
 */

#ifndef OAIRecommendedLocation_H
#define OAIRecommendedLocation_H

#include <QJsonObject>

#include "OAIGeoCode.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGeoCode;

class OAIRecommendedLocation : public OAIObject {
public:
    OAIRecommendedLocation();
    OAIRecommendedLocation(QString json);
    ~OAIRecommendedLocation() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIGeoCode getGeoCode() const;
    void setGeoCode(const OAIGeoCode &geo_code);
    bool is_geo_code_Set() const;
    bool is_geo_code_Valid() const;

    QString getIataCode() const;
    void setIataCode(const QString &iata_code);
    bool is_iata_code_Set() const;
    bool is_iata_code_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getSubtype() const;
    void setSubtype(const QString &subtype);
    bool is_subtype_Set() const;
    bool is_subtype_Valid() const;

    double getRelevance() const;
    void setRelevance(const double &relevance);
    bool is_relevance_Set() const;
    bool is_relevance_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIGeoCode m_geo_code;
    bool m_geo_code_isSet;
    bool m_geo_code_isValid;

    QString m_iata_code;
    bool m_iata_code_isSet;
    bool m_iata_code_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_subtype;
    bool m_subtype_isSet;
    bool m_subtype_isValid;

    double m_relevance;
    bool m_relevance_isSet;
    bool m_relevance_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRecommendedLocation)

#endif // OAIRecommendedLocation_H
