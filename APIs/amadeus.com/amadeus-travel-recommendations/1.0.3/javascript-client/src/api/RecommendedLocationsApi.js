/**
 * Travel Recommendations API
 * Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization-262)** for more information on how to generate an access token.
 *
 * The version of the OpenAPI document: 1.0.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Error400 from '../model/Error400';
import Error500 from '../model/Error500';
import GetRecommendedLocation200Response from '../model/GetRecommendedLocation200Response';

/**
* RecommendedLocations service.
* @module api/RecommendedLocationsApi
* @version 1.0.3
*/
export default class RecommendedLocationsApi {

    /**
    * Constructs a new RecommendedLocationsApi. 
    * @alias module:api/RecommendedLocationsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getRecommendedLocation operation.
     * @callback module:api/RecommendedLocationsApi~getRecommendedLocationCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetRecommendedLocation200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * GET recommended destinations
     * 
     * @param {String} cityCodes City used by the algorythm to recommend new destination. Several cities can be specified using comma.  City codes follow [IATA standard](http://www.iata.org/publications/Pages/code-search.aspx)
     * @param {Object} opts Optional parameters
     * @param {String} [travelerCountryCode = 'FR')] Origin country of the traveler following [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) code format (e.g. US)
     * @param {String} [destinationCountryCodes] List of country the traveler want to visit, separated with comma.  Country codes follow [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) code format (e.g. US)
     * @param {module:api/RecommendedLocationsApi~getRecommendedLocationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetRecommendedLocation200Response}
     */
    getRecommendedLocation(cityCodes, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'cityCodes' is set
      if (cityCodes === undefined || cityCodes === null) {
        throw new Error("Missing the required parameter 'cityCodes' when calling getRecommendedLocation");
      }

      let pathParams = {
      };
      let queryParams = {
        'cityCodes': cityCodes,
        'travelerCountryCode': opts['travelerCountryCode'],
        'destinationCountryCodes': opts['destinationCountryCodes']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/vnd.amadeus+json'];
      let returnType = GetRecommendedLocation200Response;
      return this.apiClient.callApi(
        '/reference-data/recommended-locations', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
