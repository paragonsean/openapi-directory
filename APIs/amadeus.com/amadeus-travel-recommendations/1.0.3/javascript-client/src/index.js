/**
 * Travel Recommendations API
 * Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization-262)** for more information on how to generate an access token.
 *
 * The version of the OpenAPI document: 1.0.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Error from './model/Error';
import Error400 from './model/Error400';
import Error500 from './model/Error500';
import ErrorSource from './model/ErrorSource';
import GeoCode from './model/GeoCode';
import GetRecommendedLocation200Response from './model/GetRecommendedLocation200Response';
import Links from './model/Links';
import Meta from './model/Meta';
import RecommendedLocation from './model/RecommendedLocation';
import Warning from './model/Warning';
import WarningSource from './model/WarningSource';
import RecommendedLocationsApi from './api/RecommendedLocationsApi';


/**
* Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization-262)** for more information on how to generate an access token..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var TravelRecommendationsApi = require('index'); // See note below*.
* var xxxSvc = new TravelRecommendationsApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new TravelRecommendationsApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new TravelRecommendationsApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new TravelRecommendationsApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.0.3
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Error model constructor.
     * @property {module:model/Error}
     */
    Error,

    /**
     * The Error400 model constructor.
     * @property {module:model/Error400}
     */
    Error400,

    /**
     * The Error500 model constructor.
     * @property {module:model/Error500}
     */
    Error500,

    /**
     * The ErrorSource model constructor.
     * @property {module:model/ErrorSource}
     */
    ErrorSource,

    /**
     * The GeoCode model constructor.
     * @property {module:model/GeoCode}
     */
    GeoCode,

    /**
     * The GetRecommendedLocation200Response model constructor.
     * @property {module:model/GetRecommendedLocation200Response}
     */
    GetRecommendedLocation200Response,

    /**
     * The Links model constructor.
     * @property {module:model/Links}
     */
    Links,

    /**
     * The Meta model constructor.
     * @property {module:model/Meta}
     */
    Meta,

    /**
     * The RecommendedLocation model constructor.
     * @property {module:model/RecommendedLocation}
     */
    RecommendedLocation,

    /**
     * The Warning model constructor.
     * @property {module:model/Warning}
     */
    Warning,

    /**
     * The WarningSource model constructor.
     * @property {module:model/WarningSource}
     */
    WarningSource,

    /**
    * The RecommendedLocationsApi service constructor.
    * @property {module:api/RecommendedLocationsApi}
    */
    RecommendedLocationsApi
};
