# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Departure(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, iata_code: str=None, name: str=None, sub_type: str=None):
        """Departure - a model defined in OpenAPI

        :param iata_code: The iata_code of this Departure.
        :param name: The name of this Departure.
        :param sub_type: The sub_type of this Departure.
        """
        self.openapi_types = {
            'iata_code': str,
            'name': str,
            'sub_type': str
        }

        self.attribute_map = {
            'iata_code': 'iataCode',
            'name': 'name',
            'sub_type': 'subType'
        }

        self._iata_code = iata_code
        self._name = name
        self._sub_type = sub_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Departure':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The departure of this Departure.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def iata_code(self):
        """Gets the iata_code of this Departure.

        IATA location code

        :return: The iata_code of this Departure.
        :rtype: str
        """
        return self._iata_code

    @iata_code.setter
    def iata_code(self, iata_code):
        """Sets the iata_code of this Departure.

        IATA location code

        :param iata_code: The iata_code of this Departure.
        :type iata_code: str
        """

        self._iata_code = iata_code

    @property
    def name(self):
        """Gets the name of this Departure.

        Label associated to the location (e.g. Eiffel Tower, Madison Square)

        :return: The name of this Departure.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Departure.

        Label associated to the location (e.g. Eiffel Tower, Madison Square)

        :param name: The name of this Departure.
        :type name: str
        """

        self._name = name

    @property
    def sub_type(self):
        """Gets the sub_type of this Departure.

        Location sub-type (e.g. airport, port, rail-station, restaurant, atm...)

        :return: The sub_type of this Departure.
        :rtype: str
        """
        return self._sub_type

    @sub_type.setter
    def sub_type(self, sub_type):
        """Sets the sub_type of this Departure.

        Location sub-type (e.g. airport, port, rail-station, restaurant, atm...)

        :param sub_type: The sub_type of this Departure.
        :type sub_type: str
        """

        self._sub_type = sub_type
