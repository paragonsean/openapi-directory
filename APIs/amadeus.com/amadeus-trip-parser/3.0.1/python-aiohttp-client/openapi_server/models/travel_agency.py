# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.address import Address
from openapi_server.models.email import Email
from openapi_server.models.phone import Phone
from openapi_server import util


class TravelAgency(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, address: Address=None, email: Email=None, office_name: str=None, phone: Phone=None):
        """TravelAgency - a model defined in OpenAPI

        :param address: The address of this TravelAgency.
        :param email: The email of this TravelAgency.
        :param office_name: The office_name of this TravelAgency.
        :param phone: The phone of this TravelAgency.
        """
        self.openapi_types = {
            'address': Address,
            'email': Email,
            'office_name': str,
            'phone': Phone
        }

        self.attribute_map = {
            'address': 'address',
            'email': 'email',
            'office_name': 'officeName',
            'phone': 'phone'
        }

        self._address = address
        self._email = email
        self._office_name = office_name
        self._phone = phone

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TravelAgency':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The travelAgency of this TravelAgency.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def address(self):
        """Gets the address of this TravelAgency.


        :return: The address of this TravelAgency.
        :rtype: Address
        """
        return self._address

    @address.setter
    def address(self, address):
        """Sets the address of this TravelAgency.


        :param address: The address of this TravelAgency.
        :type address: Address
        """

        self._address = address

    @property
    def email(self):
        """Gets the email of this TravelAgency.


        :return: The email of this TravelAgency.
        :rtype: Email
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this TravelAgency.


        :param email: The email of this TravelAgency.
        :type email: Email
        """

        self._email = email

    @property
    def office_name(self):
        """Gets the office_name of this TravelAgency.

        Office name of the travel agency

        :return: The office_name of this TravelAgency.
        :rtype: str
        """
        return self._office_name

    @office_name.setter
    def office_name(self, office_name):
        """Sets the office_name of this TravelAgency.

        Office name of the travel agency

        :param office_name: The office_name of this TravelAgency.
        :type office_name: str
        """

        self._office_name = office_name

    @property
    def phone(self):
        """Gets the phone of this TravelAgency.


        :return: The phone of this TravelAgency.
        :rtype: Phone
        """
        return self._phone

    @phone.setter
    def phone(self, phone):
        """Sets the phone of this TravelAgency.


        :param phone: The phone of this TravelAgency.
        :type phone: Phone
        """

        self._phone = phone
