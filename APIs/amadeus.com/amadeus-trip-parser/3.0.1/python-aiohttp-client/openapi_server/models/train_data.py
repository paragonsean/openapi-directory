# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.arrival import Arrival
from openapi_server.models.departure import Departure
from openapi_server.models.seats import Seats
from openapi_server.models.vehicle import Vehicle
import re
from openapi_server import util


class TrainData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, arrival: Arrival=None, arrival_date_time: str=None, arrival_track: str=None, booking_class: str=None, confirm_nbr: str=None, departure: Departure=None, departure_date_time: str=None, departure_track: str=None, duration: str=None, seats: List[Seats]=None, service_provider_name: str=None, vehicle: Vehicle=None):
        """TrainData - a model defined in OpenAPI

        :param arrival: The arrival of this TrainData.
        :param arrival_date_time: The arrival_date_time of this TrainData.
        :param arrival_track: The arrival_track of this TrainData.
        :param booking_class: The booking_class of this TrainData.
        :param confirm_nbr: The confirm_nbr of this TrainData.
        :param departure: The departure of this TrainData.
        :param departure_date_time: The departure_date_time of this TrainData.
        :param departure_track: The departure_track of this TrainData.
        :param duration: The duration of this TrainData.
        :param seats: The seats of this TrainData.
        :param service_provider_name: The service_provider_name of this TrainData.
        :param vehicle: The vehicle of this TrainData.
        """
        self.openapi_types = {
            'arrival': Arrival,
            'arrival_date_time': str,
            'arrival_track': str,
            'booking_class': str,
            'confirm_nbr': str,
            'departure': Departure,
            'departure_date_time': str,
            'departure_track': str,
            'duration': str,
            'seats': List[Seats],
            'service_provider_name': str,
            'vehicle': Vehicle
        }

        self.attribute_map = {
            'arrival': 'arrival',
            'arrival_date_time': 'arrivalDateTime',
            'arrival_track': 'arrivalTrack',
            'booking_class': 'bookingClass',
            'confirm_nbr': 'confirmNbr',
            'departure': 'departure',
            'departure_date_time': 'departureDateTime',
            'departure_track': 'departureTrack',
            'duration': 'duration',
            'seats': 'seats',
            'service_provider_name': 'serviceProviderName',
            'vehicle': 'vehicle'
        }

        self._arrival = arrival
        self._arrival_date_time = arrival_date_time
        self._arrival_track = arrival_track
        self._booking_class = booking_class
        self._confirm_nbr = confirm_nbr
        self._departure = departure
        self._departure_date_time = departure_date_time
        self._departure_track = departure_track
        self._duration = duration
        self._seats = seats
        self._service_provider_name = service_provider_name
        self._vehicle = vehicle

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TrainData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The trainData of this TrainData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def arrival(self):
        """Gets the arrival of this TrainData.


        :return: The arrival of this TrainData.
        :rtype: Arrival
        """
        return self._arrival

    @arrival.setter
    def arrival(self, arrival):
        """Sets the arrival of this TrainData.


        :param arrival: The arrival of this TrainData.
        :type arrival: Arrival
        """

        self._arrival = arrival

    @property
    def arrival_date_time(self):
        """Gets the arrival_date_time of this TrainData.

        Date in ISO 8601 (http://www.w3.org/TR/NOTE-datetime), YYYY-MM-DDTHH:MM:SSZ.

        :return: The arrival_date_time of this TrainData.
        :rtype: str
        """
        return self._arrival_date_time

    @arrival_date_time.setter
    def arrival_date_time(self, arrival_date_time):
        """Sets the arrival_date_time of this TrainData.

        Date in ISO 8601 (http://www.w3.org/TR/NOTE-datetime), YYYY-MM-DDTHH:MM:SSZ.

        :param arrival_date_time: The arrival_date_time of this TrainData.
        :type arrival_date_time: str
        """

        self._arrival_date_time = arrival_date_time

    @property
    def arrival_track(self):
        """Gets the arrival_track of this TrainData.


        :return: The arrival_track of this TrainData.
        :rtype: str
        """
        return self._arrival_track

    @arrival_track.setter
    def arrival_track(self, arrival_track):
        """Sets the arrival_track of this TrainData.


        :param arrival_track: The arrival_track of this TrainData.
        :type arrival_track: str
        """

        self._arrival_track = arrival_track

    @property
    def booking_class(self):
        """Gets the booking_class of this TrainData.

        Booking class

        :return: The booking_class of this TrainData.
        :rtype: str
        """
        return self._booking_class

    @booking_class.setter
    def booking_class(self, booking_class):
        """Sets the booking_class of this TrainData.

        Booking class

        :param booking_class: The booking_class of this TrainData.
        :type booking_class: str
        """
        if booking_class is not None and not re.search(r'[a-zA-Z0-9]{1-2}', booking_class):
            raise ValueError("Invalid value for `booking_class`, must be a follow pattern or equal to `/[a-zA-Z0-9]{1-2}/`")

        self._booking_class = booking_class

    @property
    def confirm_nbr(self):
        """Gets the confirm_nbr of this TrainData.

        Confirmation number

        :return: The confirm_nbr of this TrainData.
        :rtype: str
        """
        return self._confirm_nbr

    @confirm_nbr.setter
    def confirm_nbr(self, confirm_nbr):
        """Sets the confirm_nbr of this TrainData.

        Confirmation number

        :param confirm_nbr: The confirm_nbr of this TrainData.
        :type confirm_nbr: str
        """
        if confirm_nbr is not None and not re.search(r'[a-zA-Z0-9]{1-20}', confirm_nbr):
            raise ValueError("Invalid value for `confirm_nbr`, must be a follow pattern or equal to `/[a-zA-Z0-9]{1-20}/`")

        self._confirm_nbr = confirm_nbr

    @property
    def departure(self):
        """Gets the departure of this TrainData.


        :return: The departure of this TrainData.
        :rtype: Departure
        """
        return self._departure

    @departure.setter
    def departure(self, departure):
        """Sets the departure of this TrainData.


        :param departure: The departure of this TrainData.
        :type departure: Departure
        """

        self._departure = departure

    @property
    def departure_date_time(self):
        """Gets the departure_date_time of this TrainData.

        Date in ISO 8601 (http://www.w3.org/TR/NOTE-datetime), YYYY-MM-DDTHH:MM:SSZ.

        :return: The departure_date_time of this TrainData.
        :rtype: str
        """
        return self._departure_date_time

    @departure_date_time.setter
    def departure_date_time(self, departure_date_time):
        """Sets the departure_date_time of this TrainData.

        Date in ISO 8601 (http://www.w3.org/TR/NOTE-datetime), YYYY-MM-DDTHH:MM:SSZ.

        :param departure_date_time: The departure_date_time of this TrainData.
        :type departure_date_time: str
        """

        self._departure_date_time = departure_date_time

    @property
    def departure_track(self):
        """Gets the departure_track of this TrainData.


        :return: The departure_track of this TrainData.
        :rtype: str
        """
        return self._departure_track

    @departure_track.setter
    def departure_track(self, departure_track):
        """Sets the departure_track of this TrainData.


        :param departure_track: The departure_track of this TrainData.
        :type departure_track: str
        """

        self._departure_track = departure_track

    @property
    def duration(self):
        """Gets the duration of this TrainData.

        Duration in ISO 8601 / RFC 3339 (https://www.ietf.org/rfc/rfc3339.txt), P[n]Y[n]M[n]DT[n]H[n]M[n]S.

        :return: The duration of this TrainData.
        :rtype: str
        """
        return self._duration

    @duration.setter
    def duration(self, duration):
        """Sets the duration of this TrainData.

        Duration in ISO 8601 / RFC 3339 (https://www.ietf.org/rfc/rfc3339.txt), P[n]Y[n]M[n]DT[n]H[n]M[n]S.

        :param duration: The duration of this TrainData.
        :type duration: str
        """

        self._duration = duration

    @property
    def seats(self):
        """Gets the seats of this TrainData.


        :return: The seats of this TrainData.
        :rtype: List[Seats]
        """
        return self._seats

    @seats.setter
    def seats(self, seats):
        """Sets the seats of this TrainData.


        :param seats: The seats of this TrainData.
        :type seats: List[Seats]
        """

        self._seats = seats

    @property
    def service_provider_name(self):
        """Gets the service_provider_name of this TrainData.

        Provider name

        :return: The service_provider_name of this TrainData.
        :rtype: str
        """
        return self._service_provider_name

    @service_provider_name.setter
    def service_provider_name(self, service_provider_name):
        """Sets the service_provider_name of this TrainData.

        Provider name

        :param service_provider_name: The service_provider_name of this TrainData.
        :type service_provider_name: str
        """

        self._service_provider_name = service_provider_name

    @property
    def vehicle(self):
        """Gets the vehicle of this TrainData.


        :return: The vehicle of this TrainData.
        :rtype: Vehicle
        """
        return self._vehicle

    @vehicle.setter
    def vehicle(self, vehicle):
        """Sets the vehicle of this TrainData.


        :param vehicle: The vehicle of this TrainData.
        :type vehicle: Vehicle
        """

        self._vehicle = vehicle
