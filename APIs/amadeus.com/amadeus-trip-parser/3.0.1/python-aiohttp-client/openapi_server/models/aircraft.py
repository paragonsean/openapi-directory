# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Aircraft(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, aircraft_description: str=None, aircraft_type: str=None):
        """Aircraft - a model defined in OpenAPI

        :param aircraft_description: The aircraft_description of this Aircraft.
        :param aircraft_type: The aircraft_type of this Aircraft.
        """
        self.openapi_types = {
            'aircraft_description': str,
            'aircraft_type': str
        }

        self.attribute_map = {
            'aircraft_description': 'aircraftDescription',
            'aircraft_type': 'aircraftType'
        }

        self._aircraft_description = aircraft_description
        self._aircraft_type = aircraft_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Aircraft':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The aircraft of this Aircraft.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def aircraft_description(self):
        """Gets the aircraft_description of this Aircraft.

        aircraft description (ex BOEING 737 ALL SERIES PASSENGER)

        :return: The aircraft_description of this Aircraft.
        :rtype: str
        """
        return self._aircraft_description

    @aircraft_description.setter
    def aircraft_description(self, aircraft_description):
        """Sets the aircraft_description of this Aircraft.

        aircraft description (ex BOEING 737 ALL SERIES PASSENGER)

        :param aircraft_description: The aircraft_description of this Aircraft.
        :type aircraft_description: str
        """

        self._aircraft_description = aircraft_description

    @property
    def aircraft_type(self):
        """Gets the aircraft_type of this Aircraft.

        aircraft type (ex 320, 777, ...)

        :return: The aircraft_type of this Aircraft.
        :rtype: str
        """
        return self._aircraft_type

    @aircraft_type.setter
    def aircraft_type(self, aircraft_type):
        """Sets the aircraft_type of this Aircraft.

        aircraft type (ex 320, 777, ...)

        :param aircraft_type: The aircraft_type of this Aircraft.
        :type aircraft_type: str
        """

        self._aircraft_type = aircraft_type
