# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class FlightDesignator(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, carrier_code: str=None, flight_number: str=None, operational_suffix: str=None):
        """FlightDesignator - a model defined in OpenAPI

        :param carrier_code: The carrier_code of this FlightDesignator.
        :param flight_number: The flight_number of this FlightDesignator.
        :param operational_suffix: The operational_suffix of this FlightDesignator.
        """
        self.openapi_types = {
            'carrier_code': str,
            'flight_number': str,
            'operational_suffix': str
        }

        self.attribute_map = {
            'carrier_code': 'carrierCode',
            'flight_number': 'flightNumber',
            'operational_suffix': 'operationalSuffix'
        }

        self._carrier_code = carrier_code
        self._flight_number = flight_number
        self._operational_suffix = operational_suffix

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FlightDesignator':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The flightDesignator of this FlightDesignator.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def carrier_code(self):
        """Gets the carrier_code of this FlightDesignator.

        Two letter IATA standard carrier code

        :return: The carrier_code of this FlightDesignator.
        :rtype: str
        """
        return self._carrier_code

    @carrier_code.setter
    def carrier_code(self, carrier_code):
        """Sets the carrier_code of this FlightDesignator.

        Two letter IATA standard carrier code

        :param carrier_code: The carrier_code of this FlightDesignator.
        :type carrier_code: str
        """

        self._carrier_code = carrier_code

    @property
    def flight_number(self):
        """Gets the flight_number of this FlightDesignator.

        1-4 digit number

        :return: The flight_number of this FlightDesignator.
        :rtype: str
        """
        return self._flight_number

    @flight_number.setter
    def flight_number(self, flight_number):
        """Sets the flight_number of this FlightDesignator.

        1-4 digit number

        :param flight_number: The flight_number of this FlightDesignator.
        :type flight_number: str
        """

        self._flight_number = flight_number

    @property
    def operational_suffix(self):
        """Gets the operational_suffix of this FlightDesignator.

        the operational suffix

        :return: The operational_suffix of this FlightDesignator.
        :rtype: str
        """
        return self._operational_suffix

    @operational_suffix.setter
    def operational_suffix(self, operational_suffix):
        """Sets the operational_suffix of this FlightDesignator.

        the operational suffix

        :param operational_suffix: The operational_suffix of this FlightDesignator.
        :type operational_suffix: str
        """

        self._operational_suffix = operational_suffix
