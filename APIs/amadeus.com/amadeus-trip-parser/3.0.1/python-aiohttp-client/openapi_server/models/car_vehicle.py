# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CarVehicle(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, acriss_code: str=None, car_model: str=None, doors: int=None):
        """CarVehicle - a model defined in OpenAPI

        :param acriss_code: The acriss_code of this CarVehicle.
        :param car_model: The car_model of this CarVehicle.
        :param doors: The doors of this CarVehicle.
        """
        self.openapi_types = {
            'acriss_code': str,
            'car_model': str,
            'doors': int
        }

        self.attribute_map = {
            'acriss_code': 'acrissCode',
            'car_model': 'carModel',
            'doors': 'doors'
        }

        self._acriss_code = acriss_code
        self._car_model = car_model
        self._doors = doors

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CarVehicle':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The carVehicle of this CarVehicle.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def acriss_code(self):
        """Gets the acriss_code of this CarVehicle.

        Association of car rental industry systems standards

        :return: The acriss_code of this CarVehicle.
        :rtype: str
        """
        return self._acriss_code

    @acriss_code.setter
    def acriss_code(self, acriss_code):
        """Sets the acriss_code of this CarVehicle.

        Association of car rental industry systems standards

        :param acriss_code: The acriss_code of this CarVehicle.
        :type acriss_code: str
        """

        self._acriss_code = acriss_code

    @property
    def car_model(self):
        """Gets the car_model of this CarVehicle.

        Car model name

        :return: The car_model of this CarVehicle.
        :rtype: str
        """
        return self._car_model

    @car_model.setter
    def car_model(self, car_model):
        """Sets the car_model of this CarVehicle.

        Car model name

        :param car_model: The car_model of this CarVehicle.
        :type car_model: str
        """

        self._car_model = car_model

    @property
    def doors(self):
        """Gets the doors of this CarVehicle.

        Number of doors

        :return: The doors of this CarVehicle.
        :rtype: int
        """
        return self._doors

    @doors.setter
    def doors(self, doors):
        """Sets the doors of this CarVehicle.

        Number of doors

        :param doors: The doors of this CarVehicle.
        :type doors: int
        """

        self._doors = doors
