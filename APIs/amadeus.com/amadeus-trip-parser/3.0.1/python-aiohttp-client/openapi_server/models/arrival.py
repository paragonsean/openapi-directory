# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Arrival(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, iata_code: str=None, name: str=None, subtype: str=None):
        """Arrival - a model defined in OpenAPI

        :param iata_code: The iata_code of this Arrival.
        :param name: The name of this Arrival.
        :param subtype: The subtype of this Arrival.
        """
        self.openapi_types = {
            'iata_code': str,
            'name': str,
            'subtype': str
        }

        self.attribute_map = {
            'iata_code': 'iataCode',
            'name': 'name',
            'subtype': 'subtype'
        }

        self._iata_code = iata_code
        self._name = name
        self._subtype = subtype

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Arrival':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The arrival of this Arrival.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def iata_code(self):
        """Gets the iata_code of this Arrival.

        IATA location code

        :return: The iata_code of this Arrival.
        :rtype: str
        """
        return self._iata_code

    @iata_code.setter
    def iata_code(self, iata_code):
        """Sets the iata_code of this Arrival.

        IATA location code

        :param iata_code: The iata_code of this Arrival.
        :type iata_code: str
        """

        self._iata_code = iata_code

    @property
    def name(self):
        """Gets the name of this Arrival.

        Label associated to the location (e.g. Eiffel Tower, Madison Square)

        :return: The name of this Arrival.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Arrival.

        Label associated to the location (e.g. Eiffel Tower, Madison Square)

        :param name: The name of this Arrival.
        :type name: str
        """

        self._name = name

    @property
    def subtype(self):
        """Gets the subtype of this Arrival.

        Location sub-type (e.g. airport, port, rail-station, restaurant, atm...)

        :return: The subtype of this Arrival.
        :rtype: str
        """
        return self._subtype

    @subtype.setter
    def subtype(self, subtype):
        """Sets the subtype of this Arrival.

        Location sub-type (e.g. airport, port, rail-station, restaurant, atm...)

        :param subtype: The subtype of this Arrival.
        :type subtype: str
        """

        self._subtype = subtype
