# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.air import Air
from openapi_server.models.air_data import AirData
from openapi_server.models.car import Car
from openapi_server.models.car_data import CarData
from openapi_server.models.hotel import Hotel
from openapi_server.models.hotel_data import HotelData
from openapi_server.models.train import Train
from openapi_server.models.train_data import TrainData
from openapi_server import util


class TripProductsInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, air: AirData=None, hotel: HotelData=None, car: CarData=None, train: TrainData=None):
        """TripProductsInner - a model defined in OpenAPI

        :param air: The air of this TripProductsInner.
        :param hotel: The hotel of this TripProductsInner.
        :param car: The car of this TripProductsInner.
        :param train: The train of this TripProductsInner.
        """
        self.openapi_types = {
            'air': AirData,
            'hotel': HotelData,
            'car': CarData,
            'train': TrainData
        }

        self.attribute_map = {
            'air': 'air',
            'hotel': 'hotel',
            'car': 'car',
            'train': 'train'
        }

        self._air = air
        self._hotel = hotel
        self._car = car
        self._train = train

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TripProductsInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The trip_products_inner of this TripProductsInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def air(self):
        """Gets the air of this TripProductsInner.


        :return: The air of this TripProductsInner.
        :rtype: AirData
        """
        return self._air

    @air.setter
    def air(self, air):
        """Sets the air of this TripProductsInner.


        :param air: The air of this TripProductsInner.
        :type air: AirData
        """

        self._air = air

    @property
    def hotel(self):
        """Gets the hotel of this TripProductsInner.


        :return: The hotel of this TripProductsInner.
        :rtype: HotelData
        """
        return self._hotel

    @hotel.setter
    def hotel(self, hotel):
        """Sets the hotel of this TripProductsInner.


        :param hotel: The hotel of this TripProductsInner.
        :type hotel: HotelData
        """

        self._hotel = hotel

    @property
    def car(self):
        """Gets the car of this TripProductsInner.


        :return: The car of this TripProductsInner.
        :rtype: CarData
        """
        return self._car

    @car.setter
    def car(self, car):
        """Sets the car of this TripProductsInner.


        :param car: The car of this TripProductsInner.
        :type car: CarData
        """

        self._car = car

    @property
    def train(self):
        """Gets the train of this TripProductsInner.


        :return: The train of this TripProductsInner.
        :rtype: TrainData
        """
        return self._train

    @train.setter
    def train(self, train):
        """Sets the train of this TripProductsInner.


        :param train: The train of this TripProductsInner.
        :type train: TrainData
        """

        self._train = train
