/**
 * Trip Parser
 *  Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization-262)** for more information on how to generate an access token.
 *
 * The version of the OpenAPI document: 3.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Trip from './Trip';
import Warnings from './Warnings';

/**
 * The PostTripParserRequest200Response model module.
 * @module model/PostTripParserRequest200Response
 * @version 3.0.1
 */
class PostTripParserRequest200Response {
    /**
     * Constructs a new <code>PostTripParserRequest200Response</code>.
     * @alias module:model/PostTripParserRequest200Response
     * @param data {module:model/Trip} 
     */
    constructor(data) { 
        
        PostTripParserRequest200Response.initialize(this, data);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, data) { 
        obj['data'] = data;
    }

    /**
     * Constructs a <code>PostTripParserRequest200Response</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PostTripParserRequest200Response} obj Optional instance to populate.
     * @return {module:model/PostTripParserRequest200Response} The populated <code>PostTripParserRequest200Response</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PostTripParserRequest200Response();

            if (data.hasOwnProperty('data')) {
                obj['data'] = Trip.constructFromObject(data['data']);
            }
            if (data.hasOwnProperty('warnings')) {
                obj['warnings'] = ApiClient.convertToType(data['warnings'], [Warnings]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PostTripParserRequest200Response</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PostTripParserRequest200Response</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PostTripParserRequest200Response.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `data`
        if (data['data']) { // data not null
          Trip.validateJSON(data['data']);
        }
        if (data['warnings']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['warnings'])) {
                throw new Error("Expected the field `warnings` to be an array in the JSON data but got " + data['warnings']);
            }
            // validate the optional field `warnings` (array)
            for (const item of data['warnings']) {
                Warnings.validateJSON(item);
            };
        }

        return true;
    }


}

PostTripParserRequest200Response.RequiredProperties = ["data"];

/**
 * @member {module:model/Trip} data
 */
PostTripParserRequest200Response.prototype['data'] = undefined;

/**
 * @member {Array.<module:model/Warnings>} warnings
 */
PostTripParserRequest200Response.prototype['warnings'] = undefined;






export default PostTripParserRequest200Response;

