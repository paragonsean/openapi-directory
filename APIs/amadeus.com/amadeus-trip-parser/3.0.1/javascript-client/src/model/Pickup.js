/**
 * Trip Parser
 *  Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization-262)** for more information on how to generate an access token.
 *
 * The version of the OpenAPI document: 3.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Location from './Location';

/**
 * The Pickup model module.
 * @module model/Pickup
 * @version 3.0.1
 */
class Pickup {
    /**
     * Constructs a new <code>Pickup</code>.
     *   Pick-up location and time of the rented vehicle.
     * @alias module:model/Pickup
     */
    constructor() { 
        
        Pickup.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Pickup</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Pickup} obj Optional instance to populate.
     * @return {module:model/Pickup} The populated <code>Pickup</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Pickup();

            if (data.hasOwnProperty('localDateTime')) {
                obj['localDateTime'] = ApiClient.convertToType(data['localDateTime'], 'String');
            }
            if (data.hasOwnProperty('location')) {
                obj['location'] = Location.constructFromObject(data['location']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Pickup</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Pickup</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['localDateTime'] && !(typeof data['localDateTime'] === 'string' || data['localDateTime'] instanceof String)) {
            throw new Error("Expected the field `localDateTime` to be a primitive type in the JSON string but got " + data['localDateTime']);
        }
        // validate the optional field `location`
        if (data['location']) { // data not null
          Location.validateJSON(data['location']);
        }

        return true;
    }


}



/**
 * local date and time compliant with ISO8601.
 * @member {String} localDateTime
 */
Pickup.prototype['localDateTime'] = undefined;

/**
 * @member {module:model/Location} location
 */
Pickup.prototype['location'] = undefined;






export default Pickup;

