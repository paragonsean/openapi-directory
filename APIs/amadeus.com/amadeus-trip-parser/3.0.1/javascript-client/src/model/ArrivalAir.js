/**
 * Trip Parser
 *  Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization-262)** for more information on how to generate an access token.
 *
 * The version of the OpenAPI document: 3.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ArrivalAir model module.
 * @module model/ArrivalAir
 * @version 3.0.1
 */
class ArrivalAir {
    /**
     * Constructs a new <code>ArrivalAir</code>.
     * Departure or arrival information
     * @alias module:model/ArrivalAir
     */
    constructor() { 
        
        ArrivalAir.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ArrivalAir</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ArrivalAir} obj Optional instance to populate.
     * @return {module:model/ArrivalAir} The populated <code>ArrivalAir</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ArrivalAir();

            if (data.hasOwnProperty('iataCode')) {
                obj['iataCode'] = ApiClient.convertToType(data['iataCode'], 'String');
            }
            if (data.hasOwnProperty('localDateTime')) {
                obj['localDateTime'] = ApiClient.convertToType(data['localDateTime'], 'String');
            }
            if (data.hasOwnProperty('terminal')) {
                obj['terminal'] = ApiClient.convertToType(data['terminal'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ArrivalAir</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ArrivalAir</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['iataCode'] && !(typeof data['iataCode'] === 'string' || data['iataCode'] instanceof String)) {
            throw new Error("Expected the field `iataCode` to be a primitive type in the JSON string but got " + data['iataCode']);
        }
        // ensure the json data is a string
        if (data['localDateTime'] && !(typeof data['localDateTime'] === 'string' || data['localDateTime'] instanceof String)) {
            throw new Error("Expected the field `localDateTime` to be a primitive type in the JSON string but got " + data['localDateTime']);
        }
        // ensure the json data is a string
        if (data['terminal'] && !(typeof data['terminal'] === 'string' || data['terminal'] instanceof String)) {
            throw new Error("Expected the field `terminal` to be a primitive type in the JSON string but got " + data['terminal']);
        }

        return true;
    }


}



/**
 * IATA Airport code
 * @member {String} iataCode
 */
ArrivalAir.prototype['iataCode'] = undefined;

/**
 * Local schedule dateTime of the departure or arrival. Conversion of dateTime in local date time.
 * @member {String} localDateTime
 */
ArrivalAir.prototype['localDateTime'] = undefined;

/**
 * Terminal name / number
 * @member {String} terminal
 */
ArrivalAir.prototype['terminal'] = undefined;






export default ArrivalAir;

