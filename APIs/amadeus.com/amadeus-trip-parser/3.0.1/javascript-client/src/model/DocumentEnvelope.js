/**
 * Trip Parser
 *  Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization-262)** for more information on how to generate an access token.
 *
 * The version of the OpenAPI document: 3.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DocumentEnvelopeMetaData from './DocumentEnvelopeMetaData';

/**
 * The DocumentEnvelope model module.
 * @module model/DocumentEnvelope
 * @version 3.0.1
 */
class DocumentEnvelope {
    /**
     * Constructs a new <code>DocumentEnvelope</code>.
     * Data model to convey any kind of document, any format with associated meta data to help the identification and the decoding.
     * @alias module:model/DocumentEnvelope
     */
    constructor() { 
        
        DocumentEnvelope.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DocumentEnvelope</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DocumentEnvelope} obj Optional instance to populate.
     * @return {module:model/DocumentEnvelope} The populated <code>DocumentEnvelope</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DocumentEnvelope();

            if (data.hasOwnProperty('metaData')) {
                obj['metaData'] = DocumentEnvelopeMetaData.constructFromObject(data['metaData']);
            }
            if (data.hasOwnProperty('payload')) {
                obj['payload'] = ApiClient.convertToType(data['payload'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DocumentEnvelope</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DocumentEnvelope</code>.
     */
    static validateJSON(data) {
        // validate the optional field `metaData`
        if (data['metaData']) { // data not null
          DocumentEnvelopeMetaData.validateJSON(data['metaData']);
        }
        // ensure the json data is a string
        if (data['payload'] && !(typeof data['payload'] === 'string' || data['payload'] instanceof String)) {
            throw new Error("Expected the field `payload` to be a primitive type in the JSON string but got " + data['payload']);
        }

        return true;
    }


}



/**
 * @member {module:model/DocumentEnvelopeMetaData} metaData
 */
DocumentEnvelope.prototype['metaData'] = undefined;

/**
 * This contains the payload of the document. It can either be raw data or encoded data in b6se4. see details in metaData block.
 * @member {String} payload
 */
DocumentEnvelope.prototype['payload'] = undefined;






export default DocumentEnvelope;

