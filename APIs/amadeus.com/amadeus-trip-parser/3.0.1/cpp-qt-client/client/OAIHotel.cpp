/**
 * Trip Parser
 *  Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization-262)** for more information on how to generate an access token.
 *
 * The version of the OpenAPI document: 3.0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIHotel.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIHotel::OAIHotel(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIHotel::OAIHotel() {
    this->initializeModel();
}

OAIHotel::~OAIHotel() {}

void OAIHotel::initializeModel() {

    m_hotel_isSet = false;
    m_hotel_isValid = false;
}

void OAIHotel::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIHotel::fromJsonObject(QJsonObject json) {

    m_hotel_isValid = ::OpenAPI::fromJsonValue(m_hotel, json[QString("hotel")]);
    m_hotel_isSet = !json[QString("hotel")].isNull() && m_hotel_isValid;
}

QString OAIHotel::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIHotel::asJsonObject() const {
    QJsonObject obj;
    if (m_hotel.isSet()) {
        obj.insert(QString("hotel"), ::OpenAPI::toJsonValue(m_hotel));
    }
    return obj;
}

OAIHotelData OAIHotel::getHotel() const {
    return m_hotel;
}
void OAIHotel::setHotel(const OAIHotelData &hotel) {
    m_hotel = hotel;
    m_hotel_isSet = true;
}

bool OAIHotel::is_hotel_Set() const{
    return m_hotel_isSet;
}

bool OAIHotel::is_hotel_Valid() const{
    return m_hotel_isValid;
}

bool OAIHotel::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_hotel.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIHotel::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
