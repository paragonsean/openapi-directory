/**
 * Trip Parser
 *  Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization-262)** for more information on how to generate an access token.
 *
 * The version of the OpenAPI document: 3.0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICarData.h
 *
 * Car Product
 */

#ifndef OAICarData_H
#define OAICarData_H

#include <QJsonObject>

#include "OAIAssociatedEquipments.h"
#include "OAICarVehicle.h"
#include "OAIDriver.h"
#include "OAIDropoff.h"
#include "OAIPickup.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAssociatedEquipments;
class OAIDriver;
class OAIDropoff;
class OAIPickup;
class OAICarVehicle;

class OAICarData : public OAIObject {
public:
    OAICarData();
    OAICarData(QString json);
    ~OAICarData() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIAssociatedEquipments> getAssociatedEquipments() const;
    void setAssociatedEquipments(const QList<OAIAssociatedEquipments> &associated_equipments);
    bool is_associated_equipments_Set() const;
    bool is_associated_equipments_Valid() const;

    QString getConfirmationNumber() const;
    void setConfirmationNumber(const QString &confirmation_number);
    bool is_confirmation_number_Set() const;
    bool is_confirmation_number_Valid() const;

    OAIDriver getDriver() const;
    void setDriver(const OAIDriver &driver);
    bool is_driver_Set() const;
    bool is_driver_Valid() const;

    OAIDropoff getDropoff() const;
    void setDropoff(const OAIDropoff &dropoff);
    bool is_dropoff_Set() const;
    bool is_dropoff_Valid() const;

    OAIPickup getPickup() const;
    void setPickup(const OAIPickup &pickup);
    bool is_pickup_Set() const;
    bool is_pickup_Valid() const;

    QString getServiceProviderName() const;
    void setServiceProviderName(const QString &service_provider_name);
    bool is_service_provider_name_Set() const;
    bool is_service_provider_name_Valid() const;

    OAICarVehicle getVehicle() const;
    void setVehicle(const OAICarVehicle &vehicle);
    bool is_vehicle_Set() const;
    bool is_vehicle_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIAssociatedEquipments> m_associated_equipments;
    bool m_associated_equipments_isSet;
    bool m_associated_equipments_isValid;

    QString m_confirmation_number;
    bool m_confirmation_number_isSet;
    bool m_confirmation_number_isValid;

    OAIDriver m_driver;
    bool m_driver_isSet;
    bool m_driver_isValid;

    OAIDropoff m_dropoff;
    bool m_dropoff_isSet;
    bool m_dropoff_isValid;

    OAIPickup m_pickup;
    bool m_pickup_isSet;
    bool m_pickup_isValid;

    QString m_service_provider_name;
    bool m_service_provider_name_isSet;
    bool m_service_provider_name_isValid;

    OAICarVehicle m_vehicle;
    bool m_vehicle_isSet;
    bool m_vehicle_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICarData)

#endif // OAICarData_H
