/**
 * Trip Parser
 *  Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization-262)** for more information on how to generate an access token.
 *
 * The version of the OpenAPI document: 3.0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITrain.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITrain::OAITrain(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITrain::OAITrain() {
    this->initializeModel();
}

OAITrain::~OAITrain() {}

void OAITrain::initializeModel() {

    m_train_isSet = false;
    m_train_isValid = false;
}

void OAITrain::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITrain::fromJsonObject(QJsonObject json) {

    m_train_isValid = ::OpenAPI::fromJsonValue(m_train, json[QString("train")]);
    m_train_isSet = !json[QString("train")].isNull() && m_train_isValid;
}

QString OAITrain::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITrain::asJsonObject() const {
    QJsonObject obj;
    if (m_train.isSet()) {
        obj.insert(QString("train"), ::OpenAPI::toJsonValue(m_train));
    }
    return obj;
}

OAITrainData OAITrain::getTrain() const {
    return m_train;
}
void OAITrain::setTrain(const OAITrainData &train) {
    m_train = train;
    m_train_isSet = true;
}

bool OAITrain::is_train_Set() const{
    return m_train_isSet;
}

bool OAITrain::is_train_Valid() const{
    return m_train_isValid;
}

bool OAITrain::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_train.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITrain::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
