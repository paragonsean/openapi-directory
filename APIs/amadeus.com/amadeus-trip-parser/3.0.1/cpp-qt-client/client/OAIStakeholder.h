/**
 * Trip Parser
 *  Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization-262)** for more information on how to generate an access token.
 *
 * The version of the OpenAPI document: 3.0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIStakeholder.h
 *
 * Definition of PNR travelers. Fields gender, nationality, placeOfBirth, countryOfResidence are only populated for passengerDelivery resources.
 */

#ifndef OAIStakeholder_H
#define OAIStakeholder_H

#include <QJsonObject>

#include "OAIName.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIName;

class OAIStakeholder : public OAIObject {
public:
    OAIStakeholder();
    OAIStakeholder(QString json);
    ~OAIStakeholder() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getAge() const;
    void setAge(const qint32 &age);
    bool is_age_Set() const;
    bool is_age_Valid() const;

    QString getDateOfBirth() const;
    void setDateOfBirth(const QString &date_of_birth);
    bool is_date_of_birth_Set() const;
    bool is_date_of_birth_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAIName getName() const;
    void setName(const OAIName &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getNationality() const;
    void setNationality(const QString &nationality);
    bool is_nationality_Set() const;
    bool is_nationality_Valid() const;

    QString getPassangerTypeCode() const;
    void setPassangerTypeCode(const QString &passanger_type_code);
    bool is_passanger_type_code_Set() const;
    bool is_passanger_type_code_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_age;
    bool m_age_isSet;
    bool m_age_isValid;

    QString m_date_of_birth;
    bool m_date_of_birth_isSet;
    bool m_date_of_birth_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAIName m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_nationality;
    bool m_nationality_isSet;
    bool m_nationality_isValid;

    QString m_passanger_type_code;
    bool m_passanger_type_code_isSet;
    bool m_passanger_type_code_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIStakeholder)

#endif // OAIStakeholder_H
