/**
 * Trip Parser
 *  Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization-262)** for more information on how to generate an access token.
 *
 * The version of the OpenAPI document: 3.0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIHotelData.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIHotelData::OAIHotelData(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIHotelData::OAIHotelData() {
    this->initializeModel();
}

OAIHotelData::~OAIHotelData() {}

void OAIHotelData::initializeModel() {

    m_address_isSet = false;
    m_address_isValid = false;

    m_amenities_isSet = false;
    m_amenities_isValid = false;

    m_check_in_date_isSet = false;
    m_check_in_date_isValid = false;

    m_check_out_date_isSet = false;
    m_check_out_date_isValid = false;

    m_confirmation_number_isSet = false;
    m_confirmation_number_isValid = false;

    m_contact_isSet = false;
    m_contact_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_guests_isSet = false;
    m_guests_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_policies_isSet = false;
    m_policies_isValid = false;

    m_room_isSet = false;
    m_room_isValid = false;

    m_room_quantity_isSet = false;
    m_room_quantity_isValid = false;
}

void OAIHotelData::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIHotelData::fromJsonObject(QJsonObject json) {

    m_address_isValid = ::OpenAPI::fromJsonValue(m_address, json[QString("address")]);
    m_address_isSet = !json[QString("address")].isNull() && m_address_isValid;

    m_amenities_isValid = ::OpenAPI::fromJsonValue(m_amenities, json[QString("amenities")]);
    m_amenities_isSet = !json[QString("amenities")].isNull() && m_amenities_isValid;

    m_check_in_date_isValid = ::OpenAPI::fromJsonValue(m_check_in_date, json[QString("checkInDate")]);
    m_check_in_date_isSet = !json[QString("checkInDate")].isNull() && m_check_in_date_isValid;

    m_check_out_date_isValid = ::OpenAPI::fromJsonValue(m_check_out_date, json[QString("checkOutDate")]);
    m_check_out_date_isSet = !json[QString("checkOutDate")].isNull() && m_check_out_date_isValid;

    m_confirmation_number_isValid = ::OpenAPI::fromJsonValue(m_confirmation_number, json[QString("confirmationNumber")]);
    m_confirmation_number_isSet = !json[QString("confirmationNumber")].isNull() && m_confirmation_number_isValid;

    m_contact_isValid = ::OpenAPI::fromJsonValue(m_contact, json[QString("contact")]);
    m_contact_isSet = !json[QString("contact")].isNull() && m_contact_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_guests_isValid = ::OpenAPI::fromJsonValue(m_guests, json[QString("guests")]);
    m_guests_isSet = !json[QString("guests")].isNull() && m_guests_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_policies_isValid = ::OpenAPI::fromJsonValue(m_policies, json[QString("policies")]);
    m_policies_isSet = !json[QString("policies")].isNull() && m_policies_isValid;

    m_room_isValid = ::OpenAPI::fromJsonValue(m_room, json[QString("room")]);
    m_room_isSet = !json[QString("room")].isNull() && m_room_isValid;

    m_room_quantity_isValid = ::OpenAPI::fromJsonValue(m_room_quantity, json[QString("roomQuantity")]);
    m_room_quantity_isSet = !json[QString("roomQuantity")].isNull() && m_room_quantity_isValid;
}

QString OAIHotelData::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIHotelData::asJsonObject() const {
    QJsonObject obj;
    if (m_address.isSet()) {
        obj.insert(QString("address"), ::OpenAPI::toJsonValue(m_address));
    }
    if (m_amenities.size() > 0) {
        obj.insert(QString("amenities"), ::OpenAPI::toJsonValue(m_amenities));
    }
    if (m_check_in_date_isSet) {
        obj.insert(QString("checkInDate"), ::OpenAPI::toJsonValue(m_check_in_date));
    }
    if (m_check_out_date_isSet) {
        obj.insert(QString("checkOutDate"), ::OpenAPI::toJsonValue(m_check_out_date));
    }
    if (m_confirmation_number_isSet) {
        obj.insert(QString("confirmationNumber"), ::OpenAPI::toJsonValue(m_confirmation_number));
    }
    if (m_contact.isSet()) {
        obj.insert(QString("contact"), ::OpenAPI::toJsonValue(m_contact));
    }
    if (m_description.isSet()) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_guests.isSet()) {
        obj.insert(QString("guests"), ::OpenAPI::toJsonValue(m_guests));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_policies.isSet()) {
        obj.insert(QString("policies"), ::OpenAPI::toJsonValue(m_policies));
    }
    if (m_room.isSet()) {
        obj.insert(QString("room"), ::OpenAPI::toJsonValue(m_room));
    }
    if (m_room_quantity_isSet) {
        obj.insert(QString("roomQuantity"), ::OpenAPI::toJsonValue(m_room_quantity));
    }
    return obj;
}

OAIAddress OAIHotelData::getAddress() const {
    return m_address;
}
void OAIHotelData::setAddress(const OAIAddress &address) {
    m_address = address;
    m_address_isSet = true;
}

bool OAIHotelData::is_address_Set() const{
    return m_address_isSet;
}

bool OAIHotelData::is_address_Valid() const{
    return m_address_isValid;
}

QList<QString> OAIHotelData::getAmenities() const {
    return m_amenities;
}
void OAIHotelData::setAmenities(const QList<QString> &amenities) {
    m_amenities = amenities;
    m_amenities_isSet = true;
}

bool OAIHotelData::is_amenities_Set() const{
    return m_amenities_isSet;
}

bool OAIHotelData::is_amenities_Valid() const{
    return m_amenities_isValid;
}

QString OAIHotelData::getCheckInDate() const {
    return m_check_in_date;
}
void OAIHotelData::setCheckInDate(const QString &check_in_date) {
    m_check_in_date = check_in_date;
    m_check_in_date_isSet = true;
}

bool OAIHotelData::is_check_in_date_Set() const{
    return m_check_in_date_isSet;
}

bool OAIHotelData::is_check_in_date_Valid() const{
    return m_check_in_date_isValid;
}

QString OAIHotelData::getCheckOutDate() const {
    return m_check_out_date;
}
void OAIHotelData::setCheckOutDate(const QString &check_out_date) {
    m_check_out_date = check_out_date;
    m_check_out_date_isSet = true;
}

bool OAIHotelData::is_check_out_date_Set() const{
    return m_check_out_date_isSet;
}

bool OAIHotelData::is_check_out_date_Valid() const{
    return m_check_out_date_isValid;
}

QString OAIHotelData::getConfirmationNumber() const {
    return m_confirmation_number;
}
void OAIHotelData::setConfirmationNumber(const QString &confirmation_number) {
    m_confirmation_number = confirmation_number;
    m_confirmation_number_isSet = true;
}

bool OAIHotelData::is_confirmation_number_Set() const{
    return m_confirmation_number_isSet;
}

bool OAIHotelData::is_confirmation_number_Valid() const{
    return m_confirmation_number_isValid;
}

OAIContactHotel OAIHotelData::getContact() const {
    return m_contact;
}
void OAIHotelData::setContact(const OAIContactHotel &contact) {
    m_contact = contact;
    m_contact_isSet = true;
}

bool OAIHotelData::is_contact_Set() const{
    return m_contact_isSet;
}

bool OAIHotelData::is_contact_Valid() const{
    return m_contact_isValid;
}

OAIDescription OAIHotelData::getDescription() const {
    return m_description;
}
void OAIHotelData::setDescription(const OAIDescription &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIHotelData::is_description_Set() const{
    return m_description_isSet;
}

bool OAIHotelData::is_description_Valid() const{
    return m_description_isValid;
}

OAIGuests OAIHotelData::getGuests() const {
    return m_guests;
}
void OAIHotelData::setGuests(const OAIGuests &guests) {
    m_guests = guests;
    m_guests_isSet = true;
}

bool OAIHotelData::is_guests_Set() const{
    return m_guests_isSet;
}

bool OAIHotelData::is_guests_Valid() const{
    return m_guests_isValid;
}

QString OAIHotelData::getName() const {
    return m_name;
}
void OAIHotelData::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIHotelData::is_name_Set() const{
    return m_name_isSet;
}

bool OAIHotelData::is_name_Valid() const{
    return m_name_isValid;
}

OAIPolicies OAIHotelData::getPolicies() const {
    return m_policies;
}
void OAIHotelData::setPolicies(const OAIPolicies &policies) {
    m_policies = policies;
    m_policies_isSet = true;
}

bool OAIHotelData::is_policies_Set() const{
    return m_policies_isSet;
}

bool OAIHotelData::is_policies_Valid() const{
    return m_policies_isValid;
}

OAIRoom OAIHotelData::getRoom() const {
    return m_room;
}
void OAIHotelData::setRoom(const OAIRoom &room) {
    m_room = room;
    m_room_isSet = true;
}

bool OAIHotelData::is_room_Set() const{
    return m_room_isSet;
}

bool OAIHotelData::is_room_Valid() const{
    return m_room_isValid;
}

qint32 OAIHotelData::getRoomQuantity() const {
    return m_room_quantity;
}
void OAIHotelData::setRoomQuantity(const qint32 &room_quantity) {
    m_room_quantity = room_quantity;
    m_room_quantity_isSet = true;
}

bool OAIHotelData::is_room_quantity_Set() const{
    return m_room_quantity_isSet;
}

bool OAIHotelData::is_room_quantity_Valid() const{
    return m_room_quantity_isValid;
}

bool OAIHotelData::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_address.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_amenities.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_check_in_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_check_out_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_confirmation_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_contact.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_description.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_guests.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_policies.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_room.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_room_quantity_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIHotelData::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
