/**
 * Trip Parser
 *  Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization-262)** for more information on how to generate an access token.
 *
 * The version of the OpenAPI document: 3.0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAirData.h
 *
 * 
 */

#ifndef OAIAirData_H
#define OAIAirData_H

#include <QJsonObject>

#include "OAIAirData_seats_inner.h"
#include "OAIAircraft.h"
#include "OAIArrivalAir.h"
#include "OAIArrivalAirportLocation.h"
#include "OAIBaggages.h"
#include "OAIDepartureAir.h"
#include "OAIDepartureAirportLocation.h"
#include "OAIMarketing.h"
#include "OAIMeal.h"
#include "OAIOperating.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAircraft;
class OAIArrivalAir;
class OAIArrivalAirportLocation;
class OAIBaggages;
class OAIDepartureAir;
class OAIDepartureAirportLocation;
class OAIMarketing;
class OAIMeal;
class OAIOperating;
class OAIAirData_seats_inner;

class OAIAirData : public OAIObject {
public:
    OAIAirData();
    OAIAirData(QString json);
    ~OAIAirData() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAircraft getAircraft() const;
    void setAircraft(const OAIAircraft &aircraft);
    bool is_aircraft_Set() const;
    bool is_aircraft_Valid() const;

    OAIArrivalAir getArrival() const;
    void setArrival(const OAIArrivalAir &arrival);
    bool is_arrival_Set() const;
    bool is_arrival_Valid() const;

    OAIArrivalAirportLocation getArrivalAirportLocation() const;
    void setArrivalAirportLocation(const OAIArrivalAirportLocation &arrival_airport_location);
    bool is_arrival_airport_location_Set() const;
    bool is_arrival_airport_location_Valid() const;

    OAIBaggages getBaggages() const;
    void setBaggages(const OAIBaggages &baggages);
    bool is_baggages_Set() const;
    bool is_baggages_Valid() const;

    QString getConfirmationNumber() const;
    void setConfirmationNumber(const QString &confirmation_number);
    bool is_confirmation_number_Set() const;
    bool is_confirmation_number_Valid() const;

    OAIDepartureAir getDeparture() const;
    void setDeparture(const OAIDepartureAir &departure);
    bool is_departure_Set() const;
    bool is_departure_Valid() const;

    OAIDepartureAirportLocation getDepartureAirportLocation() const;
    void setDepartureAirportLocation(const OAIDepartureAirportLocation &departure_airport_location);
    bool is_departure_airport_location_Set() const;
    bool is_departure_airport_location_Valid() const;

    OAIMarketing getMarketing() const;
    void setMarketing(const OAIMarketing &marketing);
    bool is_marketing_Set() const;
    bool is_marketing_Valid() const;

    OAIMeal getMeal() const;
    void setMeal(const OAIMeal &meal);
    bool is_meal_Set() const;
    bool is_meal_Valid() const;

    OAIOperating getOperating() const;
    void setOperating(const OAIOperating &operating);
    bool is_operating_Set() const;
    bool is_operating_Valid() const;

    QList<OAIAirData_seats_inner> getSeats() const;
    void setSeats(const QList<OAIAirData_seats_inner> &seats);
    bool is_seats_Set() const;
    bool is_seats_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAircraft m_aircraft;
    bool m_aircraft_isSet;
    bool m_aircraft_isValid;

    OAIArrivalAir m_arrival;
    bool m_arrival_isSet;
    bool m_arrival_isValid;

    OAIArrivalAirportLocation m_arrival_airport_location;
    bool m_arrival_airport_location_isSet;
    bool m_arrival_airport_location_isValid;

    OAIBaggages m_baggages;
    bool m_baggages_isSet;
    bool m_baggages_isValid;

    QString m_confirmation_number;
    bool m_confirmation_number_isSet;
    bool m_confirmation_number_isValid;

    OAIDepartureAir m_departure;
    bool m_departure_isSet;
    bool m_departure_isValid;

    OAIDepartureAirportLocation m_departure_airport_location;
    bool m_departure_airport_location_isSet;
    bool m_departure_airport_location_isValid;

    OAIMarketing m_marketing;
    bool m_marketing_isSet;
    bool m_marketing_isValid;

    OAIMeal m_meal;
    bool m_meal_isSet;
    bool m_meal_isValid;

    OAIOperating m_operating;
    bool m_operating_isSet;
    bool m_operating_isValid;

    QList<OAIAirData_seats_inner> m_seats;
    bool m_seats_isSet;
    bool m_seats_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAirData)

#endif // OAIAirData_H
