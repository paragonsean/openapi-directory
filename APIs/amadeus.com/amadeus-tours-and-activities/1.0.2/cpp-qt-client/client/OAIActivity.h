/**
 * Tours and Activities
 *  Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization-262)** for more information on how to generate an access token.     Please also be aware that our test environment is based on a subset of the production, this API in test only returns a few selected cities. You can find the list in our **[data collection](https://github.com/amadeus4dev/data-collection)**.
 *
 * The version of the OpenAPI document: 1.0.2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIActivity.h
 *
 * Activity description
 */

#ifndef OAIActivity_H
#define OAIActivity_H

#include <QJsonObject>

#include "OAIElementaryPrice.h"
#include "OAIGeoCode.h"
#include "OAILink.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGeoCode;
class OAIElementaryPrice;
class OAILink;

class OAIActivity : public OAIObject {
public:
    OAIActivity();
    OAIActivity(QString json);
    ~OAIActivity() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBookingLink() const;
    void setBookingLink(const QString &booking_link);
    bool is_booking_link_Set() const;
    bool is_booking_link_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    OAIGeoCode getGeoCode() const;
    void setGeoCode(const OAIGeoCode &geo_code);
    bool is_geo_code_Set() const;
    bool is_geo_code_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getMinimumDuration() const;
    void setMinimumDuration(const QString &minimum_duration);
    bool is_minimum_duration_Set() const;
    bool is_minimum_duration_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QList<QString> getPictures() const;
    void setPictures(const QList<QString> &pictures);
    bool is_pictures_Set() const;
    bool is_pictures_Valid() const;

    OAIElementaryPrice getPrice() const;
    void setPrice(const OAIElementaryPrice &price);
    bool is_price_Set() const;
    bool is_price_Valid() const;

    QString getRating() const;
    void setRating(const QString &rating);
    bool is_rating_Set() const;
    bool is_rating_Valid() const;

    OAILink getSelf() const;
    void setSelf(const OAILink &self);
    bool is_self_Set() const;
    bool is_self_Valid() const;

    QString getShortDescription() const;
    void setShortDescription(const QString &short_description);
    bool is_short_description_Set() const;
    bool is_short_description_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_booking_link;
    bool m_booking_link_isSet;
    bool m_booking_link_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    OAIGeoCode m_geo_code;
    bool m_geo_code_isSet;
    bool m_geo_code_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_minimum_duration;
    bool m_minimum_duration_isSet;
    bool m_minimum_duration_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QList<QString> m_pictures;
    bool m_pictures_isSet;
    bool m_pictures_isValid;

    OAIElementaryPrice m_price;
    bool m_price_isSet;
    bool m_price_isValid;

    QString m_rating;
    bool m_rating_isSet;
    bool m_rating_isValid;

    OAILink m_self;
    bool m_self_isSet;
    bool m_self_isValid;

    QString m_short_description;
    bool m_short_description_isSet;
    bool m_short_description_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIActivity)

#endif // OAIActivity_H
