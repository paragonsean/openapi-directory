/**
 * Flight Cheapest Date Search
 *  Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization-262)** for more information on how to generate an access token.  Please also be aware that our test environment is based on a subset of the production, to see what is included in test please refer to our **[data collection](https://github.com/amadeus4dev/data-collection)**. 
 *
 * The version of the OpenAPI document: 1.0.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Error400 from '../model/Error400';
import Error404 from '../model/Error404';
import Error500 from '../model/Error500';
import FlightDates from '../model/FlightDates';

/**
* FlightDates service.
* @module api/FlightDatesApi
* @version 1.0.6
*/
export default class FlightDatesApi {

    /**
    * Constructs a new FlightDatesApi. 
    * @alias module:api/FlightDatesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getFlightDates operation.
     * @callback module:api/FlightDatesApi~getFlightDatesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/FlightDates} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Find the cheapest flight dates from an origin to a destination.
     * @param {String} origin IATA code of the city from which the flight will depart  [IATA table codes](http://www.iata.org/publications/Pages/code-search.aspx) - e.g. MAD for Madrid 
     * @param {String} destination IATA code of the city to which the flight is going.  [IATA table codes](http://www.iata.org/publications/Pages/code-search.aspx) - e.g. MUC for Munich 
     * @param {Object} opts Optional parameters
     * @param {String} [departureDate] the date, or range of dates, on which the flight will depart from the origin. Dates are specified in the [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) YYYY-MM-DD format, e.g. 2017-12-25. Ranges are specified with a comma and are inclusive
     * @param {Boolean} [oneWay = false)] if this parameter is set to true, only one-way flights are considered. If this parameter is not set or set to false, only round-trip flights are considered
     * @param {String} [duration] exact duration or range of durations of the travel, in days. This parameter must not be set if oneWay is true. Ranges are specified with a comma and are inclusive, e.g. 2,8
     * @param {Boolean} [nonStop = false)] if this parameter is set to true, only flights going from the origin to the destination with no stop in-between are considered
     * @param {Number} [maxPrice] defines the price limit for each offer returned. The value should be a positive number, without decimals
     * @param {module:model/String} [viewBy] view the flight dates by DATE, DURATION, or WEEK. View by DATE (default when oneWay is true) to get the cheapest flight dates for every departure date in the given range. View by DURATION (default when oneWay is false) to get the cheapest flight dates for every departure date and for every duration in the given ranges. View by WEEK to get the cheapest flight destination for every week in the given range of departure dates. Note that specifying a detailed view but large ranges may result in a huge number of flight dates being returned. For some very large numbers of flight dates, the API may refuse to provide a response
     * @param {module:api/FlightDatesApi~getFlightDatesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/FlightDates}
     */
    getFlightDates(origin, destination, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'origin' is set
      if (origin === undefined || origin === null) {
        throw new Error("Missing the required parameter 'origin' when calling getFlightDates");
      }
      // verify the required parameter 'destination' is set
      if (destination === undefined || destination === null) {
        throw new Error("Missing the required parameter 'destination' when calling getFlightDates");
      }

      let pathParams = {
      };
      let queryParams = {
        'origin': origin,
        'destination': destination,
        'departureDate': opts['departureDate'],
        'oneWay': opts['oneWay'],
        'duration': opts['duration'],
        'nonStop': opts['nonStop'],
        'maxPrice': opts['maxPrice'],
        'viewBy': opts['viewBy']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/vnd.amadeus+json', 'application/json'];
      let returnType = FlightDates;
      return this.apiClient.callApi(
        '/shopping/flight-dates', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
