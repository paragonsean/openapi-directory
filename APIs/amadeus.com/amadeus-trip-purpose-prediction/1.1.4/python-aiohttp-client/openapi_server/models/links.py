# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Links(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, related: str=None, _self: str=None, type: str=None):
        """Links - a model defined in OpenAPI

        :param related: The related of this Links.
        :param _self: The _self of this Links.
        :param type: The type of this Links.
        """
        self.openapi_types = {
            'related': str,
            '_self': str,
            'type': str
        }

        self.attribute_map = {
            'related': 'related',
            '_self': 'self',
            'type': 'type'
        }

        self._related = related
        self.__self = _self
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Links':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Links of this Links.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def related(self):
        """Gets the related of this Links.


        :return: The related of this Links.
        :rtype: str
        """
        return self._related

    @related.setter
    def related(self, related):
        """Sets the related of this Links.


        :param related: The related of this Links.
        :type related: str
        """

        self._related = related

    @property
    def _self(self):
        """Gets the _self of this Links.


        :return: The _self of this Links.
        :rtype: str
        """
        return self.__self

    @_self.setter
    def _self(self, _self):
        """Sets the _self of this Links.


        :param _self: The _self of this Links.
        :type _self: str
        """

        self.__self = _self

    @property
    def type(self):
        """Gets the type of this Links.


        :return: The type of this Links.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this Links.


        :param type: The type of this Links.
        :type type: str
        """

        self._type = type
