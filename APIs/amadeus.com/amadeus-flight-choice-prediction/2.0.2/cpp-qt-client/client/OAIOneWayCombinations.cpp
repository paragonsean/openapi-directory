/**
 * Flight Choice Prediction
 *  Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization-262)** for more information on how to generate an access token.   Please also be aware that our test environment is based on a subset of the production, to see what is included in test please refer to our **[data collection](https://github.com/amadeus4dev/data-collection)**. 
 *
 * The version of the OpenAPI document: 2.0.2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOneWayCombinations.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOneWayCombinations::OAIOneWayCombinations(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOneWayCombinations::OAIOneWayCombinations() {
    this->initializeModel();
}

OAIOneWayCombinations::~OAIOneWayCombinations() {}

void OAIOneWayCombinations::initializeModel() {

    m_flight_offer_ids_isSet = false;
    m_flight_offer_ids_isValid = false;

    m_origin_destination_id_isSet = false;
    m_origin_destination_id_isValid = false;
}

void OAIOneWayCombinations::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOneWayCombinations::fromJsonObject(QJsonObject json) {

    m_flight_offer_ids_isValid = ::OpenAPI::fromJsonValue(m_flight_offer_ids, json[QString("flightOfferIds")]);
    m_flight_offer_ids_isSet = !json[QString("flightOfferIds")].isNull() && m_flight_offer_ids_isValid;

    m_origin_destination_id_isValid = ::OpenAPI::fromJsonValue(m_origin_destination_id, json[QString("originDestinationId")]);
    m_origin_destination_id_isSet = !json[QString("originDestinationId")].isNull() && m_origin_destination_id_isValid;
}

QString OAIOneWayCombinations::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOneWayCombinations::asJsonObject() const {
    QJsonObject obj;
    if (m_flight_offer_ids.size() > 0) {
        obj.insert(QString("flightOfferIds"), ::OpenAPI::toJsonValue(m_flight_offer_ids));
    }
    if (m_origin_destination_id_isSet) {
        obj.insert(QString("originDestinationId"), ::OpenAPI::toJsonValue(m_origin_destination_id));
    }
    return obj;
}

QList<QString> OAIOneWayCombinations::getFlightOfferIds() const {
    return m_flight_offer_ids;
}
void OAIOneWayCombinations::setFlightOfferIds(const QList<QString> &flight_offer_ids) {
    m_flight_offer_ids = flight_offer_ids;
    m_flight_offer_ids_isSet = true;
}

bool OAIOneWayCombinations::is_flight_offer_ids_Set() const{
    return m_flight_offer_ids_isSet;
}

bool OAIOneWayCombinations::is_flight_offer_ids_Valid() const{
    return m_flight_offer_ids_isValid;
}

QString OAIOneWayCombinations::getOriginDestinationId() const {
    return m_origin_destination_id;
}
void OAIOneWayCombinations::setOriginDestinationId(const QString &origin_destination_id) {
    m_origin_destination_id = origin_destination_id;
    m_origin_destination_id_isSet = true;
}

bool OAIOneWayCombinations::is_origin_destination_id_Set() const{
    return m_origin_destination_id_isSet;
}

bool OAIOneWayCombinations::is_origin_destination_id_Valid() const{
    return m_origin_destination_id_isValid;
}

bool OAIOneWayCombinations::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_flight_offer_ids.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_origin_destination_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOneWayCombinations::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
