/**
 * Flight Choice Prediction
 *  Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization-262)** for more information on how to generate an access token.   Please also be aware that our test environment is based on a subset of the production, to see what is included in test please refer to our **[data collection](https://github.com/amadeus4dev/data-collection)**. 
 *
 * The version of the OpenAPI document: 2.0.2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITravelClass.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITravelClass::OAITravelClass(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITravelClass::OAITravelClass() {
    this->initializeModel();
}

OAITravelClass::~OAITravelClass() {}

void OAITravelClass::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAITravelClass::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAITravelClass::fromJson(QString jsonString) {
    
    if ( jsonString.compare("ECONOMY", Qt::CaseInsensitive) == 0) {
        m_value = eOAITravelClass::ECONOMY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PREMIUM_ECONOMY", Qt::CaseInsensitive) == 0) {
        m_value = eOAITravelClass::PREMIUM_ECONOMY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("BUSINESS", Qt::CaseInsensitive) == 0) {
        m_value = eOAITravelClass::BUSINESS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("FIRST", Qt::CaseInsensitive) == 0) {
        m_value = eOAITravelClass::FIRST;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAITravelClass::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAITravelClass::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAITravelClass::ECONOMY:
            val = "ECONOMY";
            break;
        case eOAITravelClass::PREMIUM_ECONOMY:
            val = "PREMIUM_ECONOMY";
            break;
        case eOAITravelClass::BUSINESS:
            val = "BUSINESS";
            break;
        case eOAITravelClass::FIRST:
            val = "FIRST";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAITravelClass::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAITravelClass::eOAITravelClass OAITravelClass::getValue() const {
    return m_value;
}

void OAITravelClass::setValue(const OAITravelClass::eOAITravelClass& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAITravelClass::isSet() const {
    
    return m_value_isSet;
}

bool OAITravelClass::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
