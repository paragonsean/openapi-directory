/**
 * Flight Create Orders
 * Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization-262)** for more information on how to generate an access token.   Please also be aware that our test environment is based on a subset of the production, if you are not returning any results try with big cities/airports like LON (London) or NYC (New-York).
 *
 * The version of the OpenAPI document: 1.9.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAutomatedProcessCommon.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAutomatedProcessCommon::OAIAutomatedProcessCommon(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAutomatedProcessCommon::OAIAutomatedProcessCommon() {
    this->initializeModel();
}

OAIAutomatedProcessCommon::~OAIAutomatedProcessCommon() {}

void OAIAutomatedProcessCommon::initializeModel() {

    m_code_isSet = false;
    m_code_isValid = false;

    m_queue_isSet = false;
    m_queue_isValid = false;

    m_text_isSet = false;
    m_text_isValid = false;
}

void OAIAutomatedProcessCommon::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAutomatedProcessCommon::fromJsonObject(QJsonObject json) {

    m_code_isValid = ::OpenAPI::fromJsonValue(m_code, json[QString("code")]);
    m_code_isSet = !json[QString("code")].isNull() && m_code_isValid;

    m_queue_isValid = ::OpenAPI::fromJsonValue(m_queue, json[QString("queue")]);
    m_queue_isSet = !json[QString("queue")].isNull() && m_queue_isValid;

    m_text_isValid = ::OpenAPI::fromJsonValue(m_text, json[QString("text")]);
    m_text_isSet = !json[QString("text")].isNull() && m_text_isValid;
}

QString OAIAutomatedProcessCommon::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAutomatedProcessCommon::asJsonObject() const {
    QJsonObject obj;
    if (m_code.isSet()) {
        obj.insert(QString("code"), ::OpenAPI::toJsonValue(m_code));
    }
    if (m_queue.isSet()) {
        obj.insert(QString("queue"), ::OpenAPI::toJsonValue(m_queue));
    }
    if (m_text_isSet) {
        obj.insert(QString("text"), ::OpenAPI::toJsonValue(m_text));
    }
    return obj;
}

OAIAutomatedProcessCode OAIAutomatedProcessCommon::getCode() const {
    return m_code;
}
void OAIAutomatedProcessCommon::setCode(const OAIAutomatedProcessCode &code) {
    m_code = code;
    m_code_isSet = true;
}

bool OAIAutomatedProcessCommon::is_code_Set() const{
    return m_code_isSet;
}

bool OAIAutomatedProcessCommon::is_code_Valid() const{
    return m_code_isValid;
}

OAIQueue OAIAutomatedProcessCommon::getQueue() const {
    return m_queue;
}
void OAIAutomatedProcessCommon::setQueue(const OAIQueue &queue) {
    m_queue = queue;
    m_queue_isSet = true;
}

bool OAIAutomatedProcessCommon::is_queue_Set() const{
    return m_queue_isSet;
}

bool OAIAutomatedProcessCommon::is_queue_Valid() const{
    return m_queue_isValid;
}

QString OAIAutomatedProcessCommon::getText() const {
    return m_text;
}
void OAIAutomatedProcessCommon::setText(const QString &text) {
    m_text = text;
    m_text_isSet = true;
}

bool OAIAutomatedProcessCommon::is_text_Set() const{
    return m_text_isSet;
}

bool OAIAutomatedProcessCommon::is_text_Valid() const{
    return m_text_isValid;
}

bool OAIAutomatedProcessCommon::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_code.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_queue.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_text_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAutomatedProcessCommon::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
