/**
 * Flight Create Orders
 * Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization-262)** for more information on how to generate an access token.   Please also be aware that our test environment is based on a subset of the production, if you are not returning any results try with big cities/airports like LON (London) or NYC (New-York).
 *
 * The version of the OpenAPI document: 1.9.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreditCardCommon.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreditCardCommon::OAICreditCardCommon(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreditCardCommon::OAICreditCardCommon() {
    this->initializeModel();
}

OAICreditCardCommon::~OAICreditCardCommon() {}

void OAICreditCardCommon::initializeModel() {

    m_brand_isSet = false;
    m_brand_isValid = false;

    m_expiry_date_isSet = false;
    m_expiry_date_isValid = false;

    m_holder_isSet = false;
    m_holder_isValid = false;

    m_number_isSet = false;
    m_number_isValid = false;
}

void OAICreditCardCommon::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreditCardCommon::fromJsonObject(QJsonObject json) {

    m_brand_isValid = ::OpenAPI::fromJsonValue(m_brand, json[QString("brand")]);
    m_brand_isSet = !json[QString("brand")].isNull() && m_brand_isValid;

    m_expiry_date_isValid = ::OpenAPI::fromJsonValue(m_expiry_date, json[QString("expiryDate")]);
    m_expiry_date_isSet = !json[QString("expiryDate")].isNull() && m_expiry_date_isValid;

    m_holder_isValid = ::OpenAPI::fromJsonValue(m_holder, json[QString("holder")]);
    m_holder_isSet = !json[QString("holder")].isNull() && m_holder_isValid;

    m_number_isValid = ::OpenAPI::fromJsonValue(m_number, json[QString("number")]);
    m_number_isSet = !json[QString("number")].isNull() && m_number_isValid;
}

QString OAICreditCardCommon::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreditCardCommon::asJsonObject() const {
    QJsonObject obj;
    if (m_brand.isSet()) {
        obj.insert(QString("brand"), ::OpenAPI::toJsonValue(m_brand));
    }
    if (m_expiry_date_isSet) {
        obj.insert(QString("expiryDate"), ::OpenAPI::toJsonValue(m_expiry_date));
    }
    if (m_holder_isSet) {
        obj.insert(QString("holder"), ::OpenAPI::toJsonValue(m_holder));
    }
    if (m_number_isSet) {
        obj.insert(QString("number"), ::OpenAPI::toJsonValue(m_number));
    }
    return obj;
}

OAICreditCardBrand OAICreditCardCommon::getBrand() const {
    return m_brand;
}
void OAICreditCardCommon::setBrand(const OAICreditCardBrand &brand) {
    m_brand = brand;
    m_brand_isSet = true;
}

bool OAICreditCardCommon::is_brand_Set() const{
    return m_brand_isSet;
}

bool OAICreditCardCommon::is_brand_Valid() const{
    return m_brand_isValid;
}

QString OAICreditCardCommon::getExpiryDate() const {
    return m_expiry_date;
}
void OAICreditCardCommon::setExpiryDate(const QString &expiry_date) {
    m_expiry_date = expiry_date;
    m_expiry_date_isSet = true;
}

bool OAICreditCardCommon::is_expiry_date_Set() const{
    return m_expiry_date_isSet;
}

bool OAICreditCardCommon::is_expiry_date_Valid() const{
    return m_expiry_date_isValid;
}

QString OAICreditCardCommon::getHolder() const {
    return m_holder;
}
void OAICreditCardCommon::setHolder(const QString &holder) {
    m_holder = holder;
    m_holder_isSet = true;
}

bool OAICreditCardCommon::is_holder_Set() const{
    return m_holder_isSet;
}

bool OAICreditCardCommon::is_holder_Valid() const{
    return m_holder_isValid;
}

QString OAICreditCardCommon::getNumber() const {
    return m_number;
}
void OAICreditCardCommon::setNumber(const QString &number) {
    m_number = number;
    m_number_isSet = true;
}

bool OAICreditCardCommon::is_number_Set() const{
    return m_number_isSet;
}

bool OAICreditCardCommon::is_number_Valid() const{
    return m_number_isValid;
}

bool OAICreditCardCommon::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_brand.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_expiry_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_holder_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_number_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreditCardCommon::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
