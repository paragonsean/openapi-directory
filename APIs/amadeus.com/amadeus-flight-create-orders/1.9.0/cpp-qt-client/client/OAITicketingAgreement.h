/**
 * Flight Create Orders
 * Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization-262)** for more information on how to generate an access token.   Please also be aware that our test environment is based on a subset of the production, if you are not returning any results try with big cities/airports like LON (London) or NYC (New-York).
 *
 * The version of the OpenAPI document: 1.9.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITicketingAgreement.h
 *
 * ticketing agreement
 */

#ifndef OAITicketingAgreement_H
#define OAITicketingAgreement_H

#include <QJsonObject>

#include "OAITicketingAgreementOption.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAITicketingAgreement : public OAIObject {
public:
    OAITicketingAgreement();
    OAITicketingAgreement(QString json);
    ~OAITicketingAgreement() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDateTime() const;
    void setDateTime(const QString &date_time);
    bool is_date_time_Set() const;
    bool is_date_time_Valid() const;

    QString getDelay() const;
    void setDelay(const QString &delay);
    bool is_delay_Set() const;
    bool is_delay_Valid() const;

    OAITicketingAgreementOption getOption() const;
    void setOption(const OAITicketingAgreementOption &option);
    bool is_option_Set() const;
    bool is_option_Valid() const;

    QList<QString> getSegmentIds() const;
    void setSegmentIds(const QList<QString> &segment_ids);
    bool is_segment_ids_Set() const;
    bool is_segment_ids_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_date_time;
    bool m_date_time_isSet;
    bool m_date_time_isValid;

    QString m_delay;
    bool m_delay_isSet;
    bool m_delay_isValid;

    OAITicketingAgreementOption m_option;
    bool m_option_isSet;
    bool m_option_isValid;

    QList<QString> m_segment_ids;
    bool m_segment_ids_isSet;
    bool m_segment_ids_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITicketingAgreement)

#endif // OAITicketingAgreement_H
