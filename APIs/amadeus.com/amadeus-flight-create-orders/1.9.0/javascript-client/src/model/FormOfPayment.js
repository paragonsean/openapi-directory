/**
 * Flight Create Orders
 * Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization-262)** for more information on how to generate an access token.   Please also be aware that our test environment is based on a subset of the production, if you are not returning any results try with big cities/airports like LON (London) or NYC (New-York).
 *
 * The version of the OpenAPI document: 1.9.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import B2bWallet from './B2bWallet';
import CreditCard from './CreditCard';
import OtherMethod from './OtherMethod';

/**
 * The FormOfPayment model module.
 * @module model/FormOfPayment
 * @version 1.9.0
 */
class FormOfPayment {
    /**
     * Constructs a new <code>FormOfPayment</code>.
     * form of payment used
     * @alias module:model/FormOfPayment
     */
    constructor() { 
        
        FormOfPayment.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FormOfPayment</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FormOfPayment} obj Optional instance to populate.
     * @return {module:model/FormOfPayment} The populated <code>FormOfPayment</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FormOfPayment();

            if (data.hasOwnProperty('b2bWallet')) {
                obj['b2bWallet'] = B2bWallet.constructFromObject(data['b2bWallet']);
            }
            if (data.hasOwnProperty('creditCard')) {
                obj['creditCard'] = CreditCard.constructFromObject(data['creditCard']);
            }
            if (data.hasOwnProperty('other')) {
                obj['other'] = OtherMethod.constructFromObject(data['other']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FormOfPayment</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FormOfPayment</code>.
     */
    static validateJSON(data) {
        // validate the optional field `b2bWallet`
        if (data['b2bWallet']) { // data not null
          B2bWallet.validateJSON(data['b2bWallet']);
        }
        // validate the optional field `creditCard`
        if (data['creditCard']) { // data not null
          CreditCard.validateJSON(data['creditCard']);
        }
        // validate the optional field `other`
        if (data['other']) { // data not null
          OtherMethod.validateJSON(data['other']);
        }

        return true;
    }


}



/**
 * @member {module:model/B2bWallet} b2bWallet
 */
FormOfPayment.prototype['b2bWallet'] = undefined;

/**
 * @member {module:model/CreditCard} creditCard
 */
FormOfPayment.prototype['creditCard'] = undefined;

/**
 * @member {module:model/OtherMethod} other
 */
FormOfPayment.prototype['other'] = undefined;






export default FormOfPayment;

