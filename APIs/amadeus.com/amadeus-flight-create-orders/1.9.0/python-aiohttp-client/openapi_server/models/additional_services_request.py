# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.baggage_allowance import BaggageAllowance
from openapi_server.models.service_name import ServiceName
import re
from openapi_server import util


class AdditionalServicesRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, chargeable_checked_bags: BaggageAllowance=None, chargeable_seat_number: str=None, other_services: List[ServiceName]=None):
        """AdditionalServicesRequest - a model defined in OpenAPI

        :param chargeable_checked_bags: The chargeable_checked_bags of this AdditionalServicesRequest.
        :param chargeable_seat_number: The chargeable_seat_number of this AdditionalServicesRequest.
        :param other_services: The other_services of this AdditionalServicesRequest.
        """
        self.openapi_types = {
            'chargeable_checked_bags': BaggageAllowance,
            'chargeable_seat_number': str,
            'other_services': List[ServiceName]
        }

        self.attribute_map = {
            'chargeable_checked_bags': 'chargeableCheckedBags',
            'chargeable_seat_number': 'chargeableSeatNumber',
            'other_services': 'otherServices'
        }

        self._chargeable_checked_bags = chargeable_checked_bags
        self._chargeable_seat_number = chargeable_seat_number
        self._other_services = other_services

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AdditionalServicesRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AdditionalServicesRequest of this AdditionalServicesRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def chargeable_checked_bags(self):
        """Gets the chargeable_checked_bags of this AdditionalServicesRequest.


        :return: The chargeable_checked_bags of this AdditionalServicesRequest.
        :rtype: BaggageAllowance
        """
        return self._chargeable_checked_bags

    @chargeable_checked_bags.setter
    def chargeable_checked_bags(self, chargeable_checked_bags):
        """Sets the chargeable_checked_bags of this AdditionalServicesRequest.


        :param chargeable_checked_bags: The chargeable_checked_bags of this AdditionalServicesRequest.
        :type chargeable_checked_bags: BaggageAllowance
        """

        self._chargeable_checked_bags = chargeable_checked_bags

    @property
    def chargeable_seat_number(self):
        """Gets the chargeable_seat_number of this AdditionalServicesRequest.

        seat number

        :return: The chargeable_seat_number of this AdditionalServicesRequest.
        :rtype: str
        """
        return self._chargeable_seat_number

    @chargeable_seat_number.setter
    def chargeable_seat_number(self, chargeable_seat_number):
        """Sets the chargeable_seat_number of this AdditionalServicesRequest.

        seat number

        :param chargeable_seat_number: The chargeable_seat_number of this AdditionalServicesRequest.
        :type chargeable_seat_number: str
        """
        if chargeable_seat_number is not None and not re.search(r'[1-9][0-9]{0,2}[A-Z]?', chargeable_seat_number):
            raise ValueError("Invalid value for `chargeable_seat_number`, must be a follow pattern or equal to `/[1-9][0-9]{0,2}[A-Z]?/`")

        self._chargeable_seat_number = chargeable_seat_number

    @property
    def other_services(self):
        """Gets the other_services of this AdditionalServicesRequest.

        Other services to add

        :return: The other_services of this AdditionalServicesRequest.
        :rtype: List[ServiceName]
        """
        return self._other_services

    @other_services.setter
    def other_services(self, other_services):
        """Sets the other_services of this AdditionalServicesRequest.

        Other services to add

        :param other_services: The other_services of this AdditionalServicesRequest.
        :type other_services: List[ServiceName]
        """

        self._other_services = other_services
