/*
 * Labs64 NetLicensing RESTful API Test Center
 * The Labs64 <a href='https://netlicensing.io/wiki/restful-api' target='_blank'>NetLicensing RESTful API</a> gives you access to NetLicensingâ€™s core features.<br/><br/><strong>Authentication</strong><br/>You authenticate to the NetLicensing API by providing your account credentials or simply use our demo account - <code>demo:demo</code><br/><br/>Find out more about Labs64 NetLicensing at <a href='https://netlicensing.io' target='_blank'>netlicensing.io</a>
 *
 * The version of the OpenAPI document: 2.x
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Netlicensing;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TransactionApi
 */
@Disabled
public class TransactionApiTest {

    private final TransactionApi api = new TransactionApi();

    /**
     * Create Transaction
     *
     * Creates a new Transaction
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createTransactionTest() throws ApiException {
        Boolean active = null;
        String source = null;
        String status = null;
        OffsetDateTime dateClosed = null;
        OffsetDateTime dateCreated = null;
        String licenseeNumber = null;
        String number = null;
        String paymentMethod = null;
        Netlicensing response = api.createTransaction(active, source, status, dateClosed, dateCreated, licenseeNumber, number, paymentMethod);
        // TODO: test validations
    }

    /**
     * Get Transaction 
     *
     * Return a Transaction by &#39;transactionNumber&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTransactionTest() throws ApiException {
        String transactionNumber = null;
        Netlicensing response = api.getTransaction(transactionNumber);
        // TODO: test validations
    }

    /**
     * List Transactions
     *
     * Return a list of all Transactions for the current Vendor
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listTransactionsTest() throws ApiException {
        List<Netlicensing> response = api.listTransactions();
        // TODO: test validations
    }

    /**
     * Update Transaction
     *
     * Sets the provided properties to a Transaction. Return an updated Transaction
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateTransactionTest() throws ApiException {
        String transactionNumber = null;
        Boolean active = null;
        OffsetDateTime dateClosed = null;
        OffsetDateTime dateCreated = null;
        String number = null;
        String paymentMethod = null;
        String source = null;
        String status = null;
        Netlicensing response = api.updateTransaction(transactionNumber, active, dateClosed, dateCreated, number, paymentMethod, source, status);
        // TODO: test validations
    }

}
