/*
 * Labs64 NetLicensing RESTful API Test Center
 * The Labs64 <a href='https://netlicensing.io/wiki/restful-api' target='_blank'>NetLicensing RESTful API</a> gives you access to NetLicensingâ€™s core features.<br/><br/><strong>Authentication</strong><br/>You authenticate to the NetLicensing API by providing your account credentials or simply use our demo account - <code>demo:demo</code><br/><br/>Find out more about Labs64 NetLicensing at <a href='https://netlicensing.io' target='_blank'>netlicensing.io</a>
 *
 * The version of the OpenAPI document: 2.x
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Netlicensing;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TokenApi
 */
@Disabled
public class TokenApiTest {

    private final TokenApi api = new TokenApi();

    /**
     * Create token
     *
     * Create token by &#39;tokenType&#39; and additional token parameters
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createTokenTest() throws ApiException {
        String tokenType = null;
        String action = null;
        String apiKeyRole = null;
        String cancelURL = null;
        String cancelURLTitle = null;
        String licenseTemplateNumber = null;
        String licenseeNumber = null;
        String predefinedShoppingItem = null;
        String privateKey = null;
        String productNumber = null;
        String successURL = null;
        String successURLTitle = null;
        String type = null;
        Netlicensing response = api.createToken(tokenType, action, apiKeyRole, cancelURL, cancelURLTitle, licenseTemplateNumber, licenseeNumber, predefinedShoppingItem, privateKey, productNumber, successURL, successURLTitle, type);
        // TODO: test validations
    }

    /**
     * Delete token
     *
     * Delete a token by &#39;number&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteTokenTest() throws ApiException {
        String tokenNumber = null;
        Netlicensing response = api.deleteToken(tokenNumber);
        // TODO: test validations
    }

    /**
     * Get token
     *
     * Return a token by &#39;tokenNumber&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTokenTest() throws ApiException {
        String tokenNumber = null;
        Netlicensing response = api.getToken(tokenNumber);
        // TODO: test validations
    }

    /**
     * List Tokens
     *
     * Return a list of all tokens for the current Vendor
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listTokensTest() throws ApiException {
        List<Netlicensing> response = api.listTokens();
        // TODO: test validations
    }

}
