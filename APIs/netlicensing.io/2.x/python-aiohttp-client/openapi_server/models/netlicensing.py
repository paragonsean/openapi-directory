# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Netlicensing(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, infos: object=None, items: object=None):
        """Netlicensing - a model defined in OpenAPI

        :param infos: The infos of this Netlicensing.
        :param items: The items of this Netlicensing.
        """
        self.openapi_types = {
            'infos': object,
            'items': object
        }

        self.attribute_map = {
            'infos': 'infos',
            'items': 'items'
        }

        self._infos = infos
        self._items = items

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Netlicensing':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The netlicensing of this Netlicensing.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def infos(self):
        """Gets the infos of this Netlicensing.


        :return: The infos of this Netlicensing.
        :rtype: object
        """
        return self._infos

    @infos.setter
    def infos(self, infos):
        """Sets the infos of this Netlicensing.


        :param infos: The infos of this Netlicensing.
        :type infos: object
        """

        self._infos = infos

    @property
    def items(self):
        """Gets the items of this Netlicensing.


        :return: The items of this Netlicensing.
        :rtype: object
        """
        return self._items

    @items.setter
    def items(self, items):
        """Sets the items of this Netlicensing.


        :param items: The items of this Netlicensing.
        :type items: object
        """

        self._items = items
