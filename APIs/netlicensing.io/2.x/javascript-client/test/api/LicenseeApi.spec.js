/**
 * Labs64 NetLicensing RESTful API Test Center
 * The Labs64 <a href='https://netlicensing.io/wiki/restful-api' target='_blank'>NetLicensing RESTful API</a> gives you access to NetLicensingâ€™s core features.<br/><br/><strong>Authentication</strong><br/>You authenticate to the NetLicensing API by providing your account credentials or simply use our demo account - <code>demo:demo</code><br/><br/>Find out more about Labs64 NetLicensing at <a href='https://netlicensing.io' target='_blank'>netlicensing.io</a>
 *
 * The version of the OpenAPI document: 2.x
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Labs64NetLicensingResTfulApiTestCenter);
  }
}(this, function(expect, Labs64NetLicensingResTfulApiTestCenter) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Labs64NetLicensingResTfulApiTestCenter.LicenseeApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('LicenseeApi', function() {
    describe('createLicensee', function() {
      it('should call createLicensee successfully', function(done) {
        //uncomment below and update the code to test createLicensee
        //instance.createLicensee(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteLicensee', function() {
      it('should call deleteLicensee successfully', function(done) {
        //uncomment below and update the code to test deleteLicensee
        //instance.deleteLicensee(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getLicensee', function() {
      it('should call getLicensee successfully', function(done) {
        //uncomment below and update the code to test getLicensee
        //instance.getLicensee(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listLicensees', function() {
      it('should call listLicensees successfully', function(done) {
        //uncomment below and update the code to test listLicensees
        //instance.listLicensees(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('transferLicenses', function() {
      it('should call transferLicenses successfully', function(done) {
        //uncomment below and update the code to test transferLicenses
        //instance.transferLicenses(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateLicensee', function() {
      it('should call updateLicensee successfully', function(done) {
        //uncomment below and update the code to test updateLicensee
        //instance.updateLicensee(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('validateLicensee', function() {
      it('should call validateLicensee successfully', function(done) {
        //uncomment below and update the code to test validateLicensee
        //instance.validateLicensee(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
