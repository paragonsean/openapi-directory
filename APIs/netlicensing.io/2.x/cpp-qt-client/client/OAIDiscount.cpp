/**
 * Labs64 NetLicensing RESTful API Test Center
 * The Labs64 <a href='https://netlicensing.io/wiki/restful-api' target='_blank'>NetLicensing RESTful API</a> gives you access to NetLicensingâ€™s core features.<br/><br/><strong>Authentication</strong><br/>You authenticate to the NetLicensing API by providing your account credentials or simply use our demo account - <code>demo:demo</code><br/><br/>Find out more about Labs64 NetLicensing at <a href='https://netlicensing.io' target='_blank'>netlicensing.io</a>
 *
 * The version of the OpenAPI document: 2.x
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDiscount.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDiscount::OAIDiscount(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDiscount::OAIDiscount() {
    this->initializeModel();
}

OAIDiscount::~OAIDiscount() {}

void OAIDiscount::initializeModel() {

    m_amount_percent_isSet = false;
    m_amount_percent_isValid = false;

    m_currency_isSet = false;
    m_currency_isValid = false;

    m_total_price_isSet = false;
    m_total_price_isValid = false;
}

void OAIDiscount::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDiscount::fromJsonObject(QJsonObject json) {

    m_amount_percent_isValid = ::OpenAPI::fromJsonValue(m_amount_percent, json[QString("amountPercent")]);
    m_amount_percent_isSet = !json[QString("amountPercent")].isNull() && m_amount_percent_isValid;

    m_currency_isValid = ::OpenAPI::fromJsonValue(m_currency, json[QString("currency")]);
    m_currency_isSet = !json[QString("currency")].isNull() && m_currency_isValid;

    m_total_price_isValid = ::OpenAPI::fromJsonValue(m_total_price, json[QString("totalPrice")]);
    m_total_price_isSet = !json[QString("totalPrice")].isNull() && m_total_price_isValid;
}

QString OAIDiscount::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDiscount::asJsonObject() const {
    QJsonObject obj;
    if (m_amount_percent_isSet) {
        obj.insert(QString("amountPercent"), ::OpenAPI::toJsonValue(m_amount_percent));
    }
    if (m_currency_isSet) {
        obj.insert(QString("currency"), ::OpenAPI::toJsonValue(m_currency));
    }
    if (m_total_price_isSet) {
        obj.insert(QString("totalPrice"), ::OpenAPI::toJsonValue(m_total_price));
    }
    return obj;
}

QString OAIDiscount::getAmountPercent() const {
    return m_amount_percent;
}
void OAIDiscount::setAmountPercent(const QString &amount_percent) {
    m_amount_percent = amount_percent;
    m_amount_percent_isSet = true;
}

bool OAIDiscount::is_amount_percent_Set() const{
    return m_amount_percent_isSet;
}

bool OAIDiscount::is_amount_percent_Valid() const{
    return m_amount_percent_isValid;
}

QString OAIDiscount::getCurrency() const {
    return m_currency;
}
void OAIDiscount::setCurrency(const QString &currency) {
    m_currency = currency;
    m_currency_isSet = true;
}

bool OAIDiscount::is_currency_Set() const{
    return m_currency_isSet;
}

bool OAIDiscount::is_currency_Valid() const{
    return m_currency_isValid;
}

double OAIDiscount::getTotalPrice() const {
    return m_total_price;
}
void OAIDiscount::setTotalPrice(const double &total_price) {
    m_total_price = total_price;
    m_total_price_isSet = true;
}

bool OAIDiscount::is_total_price_Set() const{
    return m_total_price_isSet;
}

bool OAIDiscount::is_total_price_Valid() const{
    return m_total_price_isValid;
}

bool OAIDiscount::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_amount_percent_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_currency_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_price_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDiscount::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
