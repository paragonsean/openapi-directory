/**
 * Search Services
 * API for Internet Archive's Search-related services 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The OrganicResult model module.
 * @module model/OrganicResult
 * @version 1.0.0
 */
class OrganicResult {
    /**
     * Constructs a new <code>OrganicResult</code>.
     * The result of a organic search request
     * @alias module:model/OrganicResult
     */
    constructor() { 
        
        OrganicResult.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>OrganicResult</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OrganicResult} obj Optional instance to populate.
     * @return {module:model/OrganicResult} The populated <code>OrganicResult</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OrganicResult();

            if (data.hasOwnProperty('count')) {
                obj['count'] = ApiClient.convertToType(data['count'], 'Number');
            }
            if (data.hasOwnProperty('items')) {
                obj['items'] = ApiClient.convertToType(data['items'], [Object]);
            }
            if (data.hasOwnProperty('total')) {
                obj['total'] = ApiClient.convertToType(data['total'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OrganicResult</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OrganicResult</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['items'])) {
            throw new Error("Expected the field `items` to be an array in the JSON data but got " + data['items']);
        }

        return true;
    }


}



/**
 * Number of results returned
 * @member {Number} count
 */
OrganicResult.prototype['count'] = undefined;

/**
 * @member {Array.<Object>} items
 */
OrganicResult.prototype['items'] = undefined;

/**
 * Approximate number of results meeting query
 * @member {Number} total
 */
OrganicResult.prototype['total'] = undefined;






export default OrganicResult;

