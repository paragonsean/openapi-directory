/**
 * Lucidtech API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2023-03-23T15:40:40Z
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPrediction_predictions_inner.h
 *
 * 
 */

#ifndef OAIPrediction_predictions_inner_H
#define OAIPrediction_predictions_inner_H

#include <QJsonObject>

#include "OAIPrediction_predictions_inner_anyOf.h"
#include "OAIPrediction_predictions_inner_anyOf_1.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPrediction_predictions_inner_anyOf;

class OAIPrediction_predictions_inner : public OAIObject {
public:
    OAIPrediction_predictions_inner();
    OAIPrediction_predictions_inner(QString json);
    ~OAIPrediction_predictions_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getConfidence() const;
    void setConfidence(const double &confidence);
    bool is_confidence_Set() const;
    bool is_confidence_Valid() const;

    QString getLabel() const;
    void setLabel(const QString &label);
    bool is_label_Set() const;
    bool is_label_Valid() const;

    QList<double> getLocation() const;
    void setLocation(const QList<double> &location);
    bool is_location_Set() const;
    bool is_location_Valid() const;

    qint32 getPage() const;
    void setPage(const qint32 &page);
    bool is_page_Set() const;
    bool is_page_Valid() const;

    QList<QList<OAIPrediction_predictions_inner_anyOf>> getValue() const;
    void setValue(const QList<QList<OAIPrediction_predictions_inner_anyOf>> &value);
    bool is_value_Set() const;
    bool is_value_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_confidence;
    bool m_confidence_isSet;
    bool m_confidence_isValid;

    QString m_label;
    bool m_label_isSet;
    bool m_label_isValid;

    QList<double> m_location;
    bool m_location_isSet;
    bool m_location_isValid;

    qint32 m_page;
    bool m_page_isSet;
    bool m_page_isValid;

    QList<QList<OAIPrediction_predictions_inner_anyOf>> m_value;
    bool m_value_isSet;
    bool m_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPrediction_predictions_inner)

#endif // OAIPrediction_predictions_inner_H
