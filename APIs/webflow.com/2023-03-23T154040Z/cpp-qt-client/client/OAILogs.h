/**
 * Lucidtech API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2023-03-23T15:40:40Z
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILogs.h
 *
 * 
 */

#ifndef OAILogs_H
#define OAILogs_H

#include <QJsonObject>

#include "OAILogs_logs_inner.h"
#include "OAILogs_transitionId.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAILogs_logs_inner;

class OAILogs : public OAIObject {
public:
    OAILogs();
    OAILogs(QString json);
    ~OAILogs() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAILogs_logs_inner> getLogs() const;
    void setLogs(const QList<OAILogs_logs_inner> &logs);
    bool is_logs_Set() const;
    bool is_logs_Valid() const;

    QString getNextToken() const;
    void setNextToken(const QString &next_token);
    bool is_next_token_Set() const;
    bool is_next_token_Valid() const;

    QString getOrder() const;
    void setOrder(const QString &order);
    bool is_order_Set() const;
    bool is_order_Valid() const;

    QString getTransitionExecutionId() const;
    void setTransitionExecutionId(const QString &transition_execution_id);
    bool is_transition_execution_id_Set() const;
    bool is_transition_execution_id_Valid() const;

    OAILogs_transitionId getTransitionId() const;
    void setTransitionId(const OAILogs_transitionId &transition_id);
    bool is_transition_id_Set() const;
    bool is_transition_id_Valid() const;

    QString getWorkflowExecutionId() const;
    void setWorkflowExecutionId(const QString &workflow_execution_id);
    bool is_workflow_execution_id_Set() const;
    bool is_workflow_execution_id_Valid() const;

    QString getWorkflowId() const;
    void setWorkflowId(const QString &workflow_id);
    bool is_workflow_id_Set() const;
    bool is_workflow_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAILogs_logs_inner> m_logs;
    bool m_logs_isSet;
    bool m_logs_isValid;

    QString m_next_token;
    bool m_next_token_isSet;
    bool m_next_token_isValid;

    QString m_order;
    bool m_order_isSet;
    bool m_order_isValid;

    QString m_transition_execution_id;
    bool m_transition_execution_id_isSet;
    bool m_transition_execution_id_isValid;

    OAILogs_transitionId m_transition_id;
    bool m_transition_id_isSet;
    bool m_transition_id_isValid;

    QString m_workflow_execution_id;
    bool m_workflow_execution_id_isSet;
    bool m_workflow_execution_id_isValid;

    QString m_workflow_id;
    bool m_workflow_id_isSet;
    bool m_workflow_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILogs)

#endif // OAILogs_H
