/**
 * Lucidtech API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2023-03-23T15:40:40Z
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPlans_plans_inner.h
 *
 * 
 */

#ifndef OAIPlans_plans_inner_H
#define OAIPlans_plans_inner_H

#include <QJsonObject>

#include "OAIObject.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPlans_plans_inner : public OAIObject {
public:
    OAIPlans_plans_inner();
    OAIPlans_plans_inner(QString json);
    ~OAIPlans_plans_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIObject getActiveModels() const;
    void setActiveModels(const OAIObject &active_models);
    bool is_active_models_Set() const;
    bool is_active_models_Valid() const;

    bool isAvailable() const;
    void setAvailable(const bool &available);
    bool is_available_Set() const;
    bool is_available_Valid() const;

    QString getCurrency() const;
    void setCurrency(const QString &currency);
    bool is_currency_Set() const;
    bool is_currency_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    OAIObject getFieldPredictions() const;
    void setFieldPredictions(const OAIObject &field_predictions);
    bool is_field_predictions_Set() const;
    bool is_field_predictions_Valid() const;

    OAIObject getGpuHours() const;
    void setGpuHours(const OAIObject &gpu_hours);
    bool is_gpu_hours_Set() const;
    bool is_gpu_hours_Valid() const;

    qint32 getLatest() const;
    void setLatest(const qint32 &latest);
    bool is_latest_Set() const;
    bool is_latest_Valid() const;

    OAIObject getLicense() const;
    void setLicense(const OAIObject &license);
    bool is_license_Set() const;
    bool is_license_Valid() const;

    OAIObject getModelDeploymentUnits() const;
    void setModelDeploymentUnits(const OAIObject &model_deployment_units);
    bool is_model_deployment_units_Set() const;
    bool is_model_deployment_units_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getOrganizationId() const;
    void setOrganizationId(const QString &organization_id);
    bool is_organization_id_Set() const;
    bool is_organization_id_Valid() const;

    QString getPlanId() const;
    void setPlanId(const QString &plan_id);
    bool is_plan_id_Set() const;
    bool is_plan_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIObject m_active_models;
    bool m_active_models_isSet;
    bool m_active_models_isValid;

    bool m_available;
    bool m_available_isSet;
    bool m_available_isValid;

    QString m_currency;
    bool m_currency_isSet;
    bool m_currency_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    OAIObject m_field_predictions;
    bool m_field_predictions_isSet;
    bool m_field_predictions_isValid;

    OAIObject m_gpu_hours;
    bool m_gpu_hours_isSet;
    bool m_gpu_hours_isValid;

    qint32 m_latest;
    bool m_latest_isSet;
    bool m_latest_isValid;

    OAIObject m_license;
    bool m_license_isSet;
    bool m_license_isValid;

    OAIObject m_model_deployment_units;
    bool m_model_deployment_units_isSet;
    bool m_model_deployment_units_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_organization_id;
    bool m_organization_id_isSet;
    bool m_organization_id_isValid;

    QString m_plan_id;
    bool m_plan_id_isSet;
    bool m_plan_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPlans_plans_inner)

#endif // OAIPlans_plans_inner_H
