/**
 * Lucidtech API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2023-03-23T15:40:40Z
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOrganization.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOrganization::OAIOrganization(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOrganization::OAIOrganization() {
    this->initializeModel();
}

OAIOrganization::~OAIOrganization() {}

void OAIOrganization::initializeModel() {

    m_client_id_isSet = false;
    m_client_id_isValid = false;

    m_deployments_allowed_isSet = false;
    m_deployments_allowed_isValid = false;

    m_deployments_created_isSet = false;
    m_deployments_created_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_document_retention_in_days_isSet = false;
    m_document_retention_in_days_isValid = false;

    m_monthly_number_of_active_models_used_isSet = false;
    m_monthly_number_of_active_models_used_isValid = false;

    m_monthly_number_of_data_bundles_allowed_isSet = false;
    m_monthly_number_of_data_bundles_allowed_isValid = false;

    m_monthly_number_of_data_bundles_created_isSet = false;
    m_monthly_number_of_data_bundles_created_isValid = false;

    m_monthly_number_of_documents_allowed_isSet = false;
    m_monthly_number_of_documents_allowed_isValid = false;

    m_monthly_number_of_documents_created_isSet = false;
    m_monthly_number_of_documents_created_isValid = false;

    m_monthly_number_of_field_predictions_allowed_isSet = false;
    m_monthly_number_of_field_predictions_allowed_isValid = false;

    m_monthly_number_of_field_predictions_used_isSet = false;
    m_monthly_number_of_field_predictions_used_isValid = false;

    m_monthly_number_of_gpu_hours_used_isSet = false;
    m_monthly_number_of_gpu_hours_used_isValid = false;

    m_monthly_number_of_model_deployment_units_used_isSet = false;
    m_monthly_number_of_model_deployment_units_used_isValid = false;

    m_monthly_number_of_predictions_allowed_isSet = false;
    m_monthly_number_of_predictions_allowed_isValid = false;

    m_monthly_number_of_predictions_created_isSet = false;
    m_monthly_number_of_predictions_created_isValid = false;

    m_monthly_number_of_trainings_allowed_isSet = false;
    m_monthly_number_of_trainings_allowed_isValid = false;

    m_monthly_number_of_trainings_created_isSet = false;
    m_monthly_number_of_trainings_created_isValid = false;

    m_monthly_number_of_transition_executions_allowed_isSet = false;
    m_monthly_number_of_transition_executions_allowed_isValid = false;

    m_monthly_number_of_transition_executions_created_isSet = false;
    m_monthly_number_of_transition_executions_created_isValid = false;

    m_monthly_number_of_workflow_executions_allowed_isSet = false;
    m_monthly_number_of_workflow_executions_allowed_isValid = false;

    m_monthly_number_of_workflow_executions_created_isSet = false;
    m_monthly_number_of_workflow_executions_created_isValid = false;

    m_monthly_usage_summary_isSet = false;
    m_monthly_usage_summary_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_number_of_app_clients_allowed_isSet = false;
    m_number_of_app_clients_allowed_isValid = false;

    m_number_of_app_clients_created_isSet = false;
    m_number_of_app_clients_created_isValid = false;

    m_number_of_assets_allowed_isSet = false;
    m_number_of_assets_allowed_isValid = false;

    m_number_of_assets_created_isSet = false;
    m_number_of_assets_created_isValid = false;

    m_number_of_datasets_allowed_isSet = false;
    m_number_of_datasets_allowed_isValid = false;

    m_number_of_datasets_created_isSet = false;
    m_number_of_datasets_created_isValid = false;

    m_number_of_models_allowed_isSet = false;
    m_number_of_models_allowed_isValid = false;

    m_number_of_models_created_isSet = false;
    m_number_of_models_created_isValid = false;

    m_number_of_secrets_allowed_isSet = false;
    m_number_of_secrets_allowed_isValid = false;

    m_number_of_secrets_created_isSet = false;
    m_number_of_secrets_created_isValid = false;

    m_number_of_transitions_allowed_isSet = false;
    m_number_of_transitions_allowed_isValid = false;

    m_number_of_transitions_created_isSet = false;
    m_number_of_transitions_created_isValid = false;

    m_number_of_users_allowed_isSet = false;
    m_number_of_users_allowed_isValid = false;

    m_number_of_users_created_isSet = false;
    m_number_of_users_created_isValid = false;

    m_number_of_workflows_allowed_isSet = false;
    m_number_of_workflows_allowed_isValid = false;

    m_number_of_workflows_created_isSet = false;
    m_number_of_workflows_created_isValid = false;

    m_organization_id_isSet = false;
    m_organization_id_isValid = false;

    m_payment_method_id_isSet = false;
    m_payment_method_id_isValid = false;

    m_plan_id_isSet = false;
    m_plan_id_isValid = false;

    m_updated_by_isSet = false;
    m_updated_by_isValid = false;

    m_updated_time_isSet = false;
    m_updated_time_isValid = false;
}

void OAIOrganization::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOrganization::fromJsonObject(QJsonObject json) {

    m_client_id_isValid = ::OpenAPI::fromJsonValue(m_client_id, json[QString("clientId")]);
    m_client_id_isSet = !json[QString("clientId")].isNull() && m_client_id_isValid;

    m_deployments_allowed_isValid = ::OpenAPI::fromJsonValue(m_deployments_allowed, json[QString("deploymentsAllowed")]);
    m_deployments_allowed_isSet = !json[QString("deploymentsAllowed")].isNull() && m_deployments_allowed_isValid;

    m_deployments_created_isValid = ::OpenAPI::fromJsonValue(m_deployments_created, json[QString("deploymentsCreated")]);
    m_deployments_created_isSet = !json[QString("deploymentsCreated")].isNull() && m_deployments_created_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_document_retention_in_days_isValid = ::OpenAPI::fromJsonValue(m_document_retention_in_days, json[QString("documentRetentionInDays")]);
    m_document_retention_in_days_isSet = !json[QString("documentRetentionInDays")].isNull() && m_document_retention_in_days_isValid;

    m_monthly_number_of_active_models_used_isValid = ::OpenAPI::fromJsonValue(m_monthly_number_of_active_models_used, json[QString("monthlyNumberOfActiveModelsUsed")]);
    m_monthly_number_of_active_models_used_isSet = !json[QString("monthlyNumberOfActiveModelsUsed")].isNull() && m_monthly_number_of_active_models_used_isValid;

    m_monthly_number_of_data_bundles_allowed_isValid = ::OpenAPI::fromJsonValue(m_monthly_number_of_data_bundles_allowed, json[QString("monthlyNumberOfDataBundlesAllowed")]);
    m_monthly_number_of_data_bundles_allowed_isSet = !json[QString("monthlyNumberOfDataBundlesAllowed")].isNull() && m_monthly_number_of_data_bundles_allowed_isValid;

    m_monthly_number_of_data_bundles_created_isValid = ::OpenAPI::fromJsonValue(m_monthly_number_of_data_bundles_created, json[QString("monthlyNumberOfDataBundlesCreated")]);
    m_monthly_number_of_data_bundles_created_isSet = !json[QString("monthlyNumberOfDataBundlesCreated")].isNull() && m_monthly_number_of_data_bundles_created_isValid;

    m_monthly_number_of_documents_allowed_isValid = ::OpenAPI::fromJsonValue(m_monthly_number_of_documents_allowed, json[QString("monthlyNumberOfDocumentsAllowed")]);
    m_monthly_number_of_documents_allowed_isSet = !json[QString("monthlyNumberOfDocumentsAllowed")].isNull() && m_monthly_number_of_documents_allowed_isValid;

    m_monthly_number_of_documents_created_isValid = ::OpenAPI::fromJsonValue(m_monthly_number_of_documents_created, json[QString("monthlyNumberOfDocumentsCreated")]);
    m_monthly_number_of_documents_created_isSet = !json[QString("monthlyNumberOfDocumentsCreated")].isNull() && m_monthly_number_of_documents_created_isValid;

    m_monthly_number_of_field_predictions_allowed_isValid = ::OpenAPI::fromJsonValue(m_monthly_number_of_field_predictions_allowed, json[QString("monthlyNumberOfFieldPredictionsAllowed")]);
    m_monthly_number_of_field_predictions_allowed_isSet = !json[QString("monthlyNumberOfFieldPredictionsAllowed")].isNull() && m_monthly_number_of_field_predictions_allowed_isValid;

    m_monthly_number_of_field_predictions_used_isValid = ::OpenAPI::fromJsonValue(m_monthly_number_of_field_predictions_used, json[QString("monthlyNumberOfFieldPredictionsUsed")]);
    m_monthly_number_of_field_predictions_used_isSet = !json[QString("monthlyNumberOfFieldPredictionsUsed")].isNull() && m_monthly_number_of_field_predictions_used_isValid;

    m_monthly_number_of_gpu_hours_used_isValid = ::OpenAPI::fromJsonValue(m_monthly_number_of_gpu_hours_used, json[QString("monthlyNumberOfGpuHoursUsed")]);
    m_monthly_number_of_gpu_hours_used_isSet = !json[QString("monthlyNumberOfGpuHoursUsed")].isNull() && m_monthly_number_of_gpu_hours_used_isValid;

    m_monthly_number_of_model_deployment_units_used_isValid = ::OpenAPI::fromJsonValue(m_monthly_number_of_model_deployment_units_used, json[QString("monthlyNumberOfModelDeploymentUnitsUsed")]);
    m_monthly_number_of_model_deployment_units_used_isSet = !json[QString("monthlyNumberOfModelDeploymentUnitsUsed")].isNull() && m_monthly_number_of_model_deployment_units_used_isValid;

    m_monthly_number_of_predictions_allowed_isValid = ::OpenAPI::fromJsonValue(m_monthly_number_of_predictions_allowed, json[QString("monthlyNumberOfPredictionsAllowed")]);
    m_monthly_number_of_predictions_allowed_isSet = !json[QString("monthlyNumberOfPredictionsAllowed")].isNull() && m_monthly_number_of_predictions_allowed_isValid;

    m_monthly_number_of_predictions_created_isValid = ::OpenAPI::fromJsonValue(m_monthly_number_of_predictions_created, json[QString("monthlyNumberOfPredictionsCreated")]);
    m_monthly_number_of_predictions_created_isSet = !json[QString("monthlyNumberOfPredictionsCreated")].isNull() && m_monthly_number_of_predictions_created_isValid;

    m_monthly_number_of_trainings_allowed_isValid = ::OpenAPI::fromJsonValue(m_monthly_number_of_trainings_allowed, json[QString("monthlyNumberOfTrainingsAllowed")]);
    m_monthly_number_of_trainings_allowed_isSet = !json[QString("monthlyNumberOfTrainingsAllowed")].isNull() && m_monthly_number_of_trainings_allowed_isValid;

    m_monthly_number_of_trainings_created_isValid = ::OpenAPI::fromJsonValue(m_monthly_number_of_trainings_created, json[QString("monthlyNumberOfTrainingsCreated")]);
    m_monthly_number_of_trainings_created_isSet = !json[QString("monthlyNumberOfTrainingsCreated")].isNull() && m_monthly_number_of_trainings_created_isValid;

    m_monthly_number_of_transition_executions_allowed_isValid = ::OpenAPI::fromJsonValue(m_monthly_number_of_transition_executions_allowed, json[QString("monthlyNumberOfTransitionExecutionsAllowed")]);
    m_monthly_number_of_transition_executions_allowed_isSet = !json[QString("monthlyNumberOfTransitionExecutionsAllowed")].isNull() && m_monthly_number_of_transition_executions_allowed_isValid;

    m_monthly_number_of_transition_executions_created_isValid = ::OpenAPI::fromJsonValue(m_monthly_number_of_transition_executions_created, json[QString("monthlyNumberOfTransitionExecutionsCreated")]);
    m_monthly_number_of_transition_executions_created_isSet = !json[QString("monthlyNumberOfTransitionExecutionsCreated")].isNull() && m_monthly_number_of_transition_executions_created_isValid;

    m_monthly_number_of_workflow_executions_allowed_isValid = ::OpenAPI::fromJsonValue(m_monthly_number_of_workflow_executions_allowed, json[QString("monthlyNumberOfWorkflowExecutionsAllowed")]);
    m_monthly_number_of_workflow_executions_allowed_isSet = !json[QString("monthlyNumberOfWorkflowExecutionsAllowed")].isNull() && m_monthly_number_of_workflow_executions_allowed_isValid;

    m_monthly_number_of_workflow_executions_created_isValid = ::OpenAPI::fromJsonValue(m_monthly_number_of_workflow_executions_created, json[QString("monthlyNumberOfWorkflowExecutionsCreated")]);
    m_monthly_number_of_workflow_executions_created_isSet = !json[QString("monthlyNumberOfWorkflowExecutionsCreated")].isNull() && m_monthly_number_of_workflow_executions_created_isValid;

    m_monthly_usage_summary_isValid = ::OpenAPI::fromJsonValue(m_monthly_usage_summary, json[QString("monthlyUsageSummary")]);
    m_monthly_usage_summary_isSet = !json[QString("monthlyUsageSummary")].isNull() && m_monthly_usage_summary_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_number_of_app_clients_allowed_isValid = ::OpenAPI::fromJsonValue(m_number_of_app_clients_allowed, json[QString("numberOfAppClientsAllowed")]);
    m_number_of_app_clients_allowed_isSet = !json[QString("numberOfAppClientsAllowed")].isNull() && m_number_of_app_clients_allowed_isValid;

    m_number_of_app_clients_created_isValid = ::OpenAPI::fromJsonValue(m_number_of_app_clients_created, json[QString("numberOfAppClientsCreated")]);
    m_number_of_app_clients_created_isSet = !json[QString("numberOfAppClientsCreated")].isNull() && m_number_of_app_clients_created_isValid;

    m_number_of_assets_allowed_isValid = ::OpenAPI::fromJsonValue(m_number_of_assets_allowed, json[QString("numberOfAssetsAllowed")]);
    m_number_of_assets_allowed_isSet = !json[QString("numberOfAssetsAllowed")].isNull() && m_number_of_assets_allowed_isValid;

    m_number_of_assets_created_isValid = ::OpenAPI::fromJsonValue(m_number_of_assets_created, json[QString("numberOfAssetsCreated")]);
    m_number_of_assets_created_isSet = !json[QString("numberOfAssetsCreated")].isNull() && m_number_of_assets_created_isValid;

    m_number_of_datasets_allowed_isValid = ::OpenAPI::fromJsonValue(m_number_of_datasets_allowed, json[QString("numberOfDatasetsAllowed")]);
    m_number_of_datasets_allowed_isSet = !json[QString("numberOfDatasetsAllowed")].isNull() && m_number_of_datasets_allowed_isValid;

    m_number_of_datasets_created_isValid = ::OpenAPI::fromJsonValue(m_number_of_datasets_created, json[QString("numberOfDatasetsCreated")]);
    m_number_of_datasets_created_isSet = !json[QString("numberOfDatasetsCreated")].isNull() && m_number_of_datasets_created_isValid;

    m_number_of_models_allowed_isValid = ::OpenAPI::fromJsonValue(m_number_of_models_allowed, json[QString("numberOfModelsAllowed")]);
    m_number_of_models_allowed_isSet = !json[QString("numberOfModelsAllowed")].isNull() && m_number_of_models_allowed_isValid;

    m_number_of_models_created_isValid = ::OpenAPI::fromJsonValue(m_number_of_models_created, json[QString("numberOfModelsCreated")]);
    m_number_of_models_created_isSet = !json[QString("numberOfModelsCreated")].isNull() && m_number_of_models_created_isValid;

    m_number_of_secrets_allowed_isValid = ::OpenAPI::fromJsonValue(m_number_of_secrets_allowed, json[QString("numberOfSecretsAllowed")]);
    m_number_of_secrets_allowed_isSet = !json[QString("numberOfSecretsAllowed")].isNull() && m_number_of_secrets_allowed_isValid;

    m_number_of_secrets_created_isValid = ::OpenAPI::fromJsonValue(m_number_of_secrets_created, json[QString("numberOfSecretsCreated")]);
    m_number_of_secrets_created_isSet = !json[QString("numberOfSecretsCreated")].isNull() && m_number_of_secrets_created_isValid;

    m_number_of_transitions_allowed_isValid = ::OpenAPI::fromJsonValue(m_number_of_transitions_allowed, json[QString("numberOfTransitionsAllowed")]);
    m_number_of_transitions_allowed_isSet = !json[QString("numberOfTransitionsAllowed")].isNull() && m_number_of_transitions_allowed_isValid;

    m_number_of_transitions_created_isValid = ::OpenAPI::fromJsonValue(m_number_of_transitions_created, json[QString("numberOfTransitionsCreated")]);
    m_number_of_transitions_created_isSet = !json[QString("numberOfTransitionsCreated")].isNull() && m_number_of_transitions_created_isValid;

    m_number_of_users_allowed_isValid = ::OpenAPI::fromJsonValue(m_number_of_users_allowed, json[QString("numberOfUsersAllowed")]);
    m_number_of_users_allowed_isSet = !json[QString("numberOfUsersAllowed")].isNull() && m_number_of_users_allowed_isValid;

    m_number_of_users_created_isValid = ::OpenAPI::fromJsonValue(m_number_of_users_created, json[QString("numberOfUsersCreated")]);
    m_number_of_users_created_isSet = !json[QString("numberOfUsersCreated")].isNull() && m_number_of_users_created_isValid;

    m_number_of_workflows_allowed_isValid = ::OpenAPI::fromJsonValue(m_number_of_workflows_allowed, json[QString("numberOfWorkflowsAllowed")]);
    m_number_of_workflows_allowed_isSet = !json[QString("numberOfWorkflowsAllowed")].isNull() && m_number_of_workflows_allowed_isValid;

    m_number_of_workflows_created_isValid = ::OpenAPI::fromJsonValue(m_number_of_workflows_created, json[QString("numberOfWorkflowsCreated")]);
    m_number_of_workflows_created_isSet = !json[QString("numberOfWorkflowsCreated")].isNull() && m_number_of_workflows_created_isValid;

    m_organization_id_isValid = ::OpenAPI::fromJsonValue(m_organization_id, json[QString("organizationId")]);
    m_organization_id_isSet = !json[QString("organizationId")].isNull() && m_organization_id_isValid;

    m_payment_method_id_isValid = ::OpenAPI::fromJsonValue(m_payment_method_id, json[QString("paymentMethodId")]);
    m_payment_method_id_isSet = !json[QString("paymentMethodId")].isNull() && m_payment_method_id_isValid;

    m_plan_id_isValid = ::OpenAPI::fromJsonValue(m_plan_id, json[QString("planId")]);
    m_plan_id_isSet = !json[QString("planId")].isNull() && m_plan_id_isValid;

    m_updated_by_isValid = ::OpenAPI::fromJsonValue(m_updated_by, json[QString("updatedBy")]);
    m_updated_by_isSet = !json[QString("updatedBy")].isNull() && m_updated_by_isValid;

    m_updated_time_isValid = ::OpenAPI::fromJsonValue(m_updated_time, json[QString("updatedTime")]);
    m_updated_time_isSet = !json[QString("updatedTime")].isNull() && m_updated_time_isValid;
}

QString OAIOrganization::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOrganization::asJsonObject() const {
    QJsonObject obj;
    if (m_client_id_isSet) {
        obj.insert(QString("clientId"), ::OpenAPI::toJsonValue(m_client_id));
    }
    if (m_deployments_allowed_isSet) {
        obj.insert(QString("deploymentsAllowed"), ::OpenAPI::toJsonValue(m_deployments_allowed));
    }
    if (m_deployments_created_isSet) {
        obj.insert(QString("deploymentsCreated"), ::OpenAPI::toJsonValue(m_deployments_created));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_document_retention_in_days_isSet) {
        obj.insert(QString("documentRetentionInDays"), ::OpenAPI::toJsonValue(m_document_retention_in_days));
    }
    if (m_monthly_number_of_active_models_used_isSet) {
        obj.insert(QString("monthlyNumberOfActiveModelsUsed"), ::OpenAPI::toJsonValue(m_monthly_number_of_active_models_used));
    }
    if (m_monthly_number_of_data_bundles_allowed_isSet) {
        obj.insert(QString("monthlyNumberOfDataBundlesAllowed"), ::OpenAPI::toJsonValue(m_monthly_number_of_data_bundles_allowed));
    }
    if (m_monthly_number_of_data_bundles_created_isSet) {
        obj.insert(QString("monthlyNumberOfDataBundlesCreated"), ::OpenAPI::toJsonValue(m_monthly_number_of_data_bundles_created));
    }
    if (m_monthly_number_of_documents_allowed_isSet) {
        obj.insert(QString("monthlyNumberOfDocumentsAllowed"), ::OpenAPI::toJsonValue(m_monthly_number_of_documents_allowed));
    }
    if (m_monthly_number_of_documents_created_isSet) {
        obj.insert(QString("monthlyNumberOfDocumentsCreated"), ::OpenAPI::toJsonValue(m_monthly_number_of_documents_created));
    }
    if (m_monthly_number_of_field_predictions_allowed_isSet) {
        obj.insert(QString("monthlyNumberOfFieldPredictionsAllowed"), ::OpenAPI::toJsonValue(m_monthly_number_of_field_predictions_allowed));
    }
    if (m_monthly_number_of_field_predictions_used_isSet) {
        obj.insert(QString("monthlyNumberOfFieldPredictionsUsed"), ::OpenAPI::toJsonValue(m_monthly_number_of_field_predictions_used));
    }
    if (m_monthly_number_of_gpu_hours_used_isSet) {
        obj.insert(QString("monthlyNumberOfGpuHoursUsed"), ::OpenAPI::toJsonValue(m_monthly_number_of_gpu_hours_used));
    }
    if (m_monthly_number_of_model_deployment_units_used_isSet) {
        obj.insert(QString("monthlyNumberOfModelDeploymentUnitsUsed"), ::OpenAPI::toJsonValue(m_monthly_number_of_model_deployment_units_used));
    }
    if (m_monthly_number_of_predictions_allowed_isSet) {
        obj.insert(QString("monthlyNumberOfPredictionsAllowed"), ::OpenAPI::toJsonValue(m_monthly_number_of_predictions_allowed));
    }
    if (m_monthly_number_of_predictions_created_isSet) {
        obj.insert(QString("monthlyNumberOfPredictionsCreated"), ::OpenAPI::toJsonValue(m_monthly_number_of_predictions_created));
    }
    if (m_monthly_number_of_trainings_allowed_isSet) {
        obj.insert(QString("monthlyNumberOfTrainingsAllowed"), ::OpenAPI::toJsonValue(m_monthly_number_of_trainings_allowed));
    }
    if (m_monthly_number_of_trainings_created_isSet) {
        obj.insert(QString("monthlyNumberOfTrainingsCreated"), ::OpenAPI::toJsonValue(m_monthly_number_of_trainings_created));
    }
    if (m_monthly_number_of_transition_executions_allowed_isSet) {
        obj.insert(QString("monthlyNumberOfTransitionExecutionsAllowed"), ::OpenAPI::toJsonValue(m_monthly_number_of_transition_executions_allowed));
    }
    if (m_monthly_number_of_transition_executions_created_isSet) {
        obj.insert(QString("monthlyNumberOfTransitionExecutionsCreated"), ::OpenAPI::toJsonValue(m_monthly_number_of_transition_executions_created));
    }
    if (m_monthly_number_of_workflow_executions_allowed_isSet) {
        obj.insert(QString("monthlyNumberOfWorkflowExecutionsAllowed"), ::OpenAPI::toJsonValue(m_monthly_number_of_workflow_executions_allowed));
    }
    if (m_monthly_number_of_workflow_executions_created_isSet) {
        obj.insert(QString("monthlyNumberOfWorkflowExecutionsCreated"), ::OpenAPI::toJsonValue(m_monthly_number_of_workflow_executions_created));
    }
    if (m_monthly_usage_summary_isSet) {
        obj.insert(QString("monthlyUsageSummary"), ::OpenAPI::toJsonValue(m_monthly_usage_summary));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_number_of_app_clients_allowed_isSet) {
        obj.insert(QString("numberOfAppClientsAllowed"), ::OpenAPI::toJsonValue(m_number_of_app_clients_allowed));
    }
    if (m_number_of_app_clients_created_isSet) {
        obj.insert(QString("numberOfAppClientsCreated"), ::OpenAPI::toJsonValue(m_number_of_app_clients_created));
    }
    if (m_number_of_assets_allowed_isSet) {
        obj.insert(QString("numberOfAssetsAllowed"), ::OpenAPI::toJsonValue(m_number_of_assets_allowed));
    }
    if (m_number_of_assets_created_isSet) {
        obj.insert(QString("numberOfAssetsCreated"), ::OpenAPI::toJsonValue(m_number_of_assets_created));
    }
    if (m_number_of_datasets_allowed_isSet) {
        obj.insert(QString("numberOfDatasetsAllowed"), ::OpenAPI::toJsonValue(m_number_of_datasets_allowed));
    }
    if (m_number_of_datasets_created_isSet) {
        obj.insert(QString("numberOfDatasetsCreated"), ::OpenAPI::toJsonValue(m_number_of_datasets_created));
    }
    if (m_number_of_models_allowed_isSet) {
        obj.insert(QString("numberOfModelsAllowed"), ::OpenAPI::toJsonValue(m_number_of_models_allowed));
    }
    if (m_number_of_models_created_isSet) {
        obj.insert(QString("numberOfModelsCreated"), ::OpenAPI::toJsonValue(m_number_of_models_created));
    }
    if (m_number_of_secrets_allowed_isSet) {
        obj.insert(QString("numberOfSecretsAllowed"), ::OpenAPI::toJsonValue(m_number_of_secrets_allowed));
    }
    if (m_number_of_secrets_created_isSet) {
        obj.insert(QString("numberOfSecretsCreated"), ::OpenAPI::toJsonValue(m_number_of_secrets_created));
    }
    if (m_number_of_transitions_allowed_isSet) {
        obj.insert(QString("numberOfTransitionsAllowed"), ::OpenAPI::toJsonValue(m_number_of_transitions_allowed));
    }
    if (m_number_of_transitions_created_isSet) {
        obj.insert(QString("numberOfTransitionsCreated"), ::OpenAPI::toJsonValue(m_number_of_transitions_created));
    }
    if (m_number_of_users_allowed_isSet) {
        obj.insert(QString("numberOfUsersAllowed"), ::OpenAPI::toJsonValue(m_number_of_users_allowed));
    }
    if (m_number_of_users_created_isSet) {
        obj.insert(QString("numberOfUsersCreated"), ::OpenAPI::toJsonValue(m_number_of_users_created));
    }
    if (m_number_of_workflows_allowed_isSet) {
        obj.insert(QString("numberOfWorkflowsAllowed"), ::OpenAPI::toJsonValue(m_number_of_workflows_allowed));
    }
    if (m_number_of_workflows_created_isSet) {
        obj.insert(QString("numberOfWorkflowsCreated"), ::OpenAPI::toJsonValue(m_number_of_workflows_created));
    }
    if (m_organization_id_isSet) {
        obj.insert(QString("organizationId"), ::OpenAPI::toJsonValue(m_organization_id));
    }
    if (m_payment_method_id_isSet) {
        obj.insert(QString("paymentMethodId"), ::OpenAPI::toJsonValue(m_payment_method_id));
    }
    if (m_plan_id_isSet) {
        obj.insert(QString("planId"), ::OpenAPI::toJsonValue(m_plan_id));
    }
    if (m_updated_by_isSet) {
        obj.insert(QString("updatedBy"), ::OpenAPI::toJsonValue(m_updated_by));
    }
    if (m_updated_time_isSet) {
        obj.insert(QString("updatedTime"), ::OpenAPI::toJsonValue(m_updated_time));
    }
    return obj;
}

QString OAIOrganization::getClientId() const {
    return m_client_id;
}
void OAIOrganization::setClientId(const QString &client_id) {
    m_client_id = client_id;
    m_client_id_isSet = true;
}

bool OAIOrganization::is_client_id_Set() const{
    return m_client_id_isSet;
}

bool OAIOrganization::is_client_id_Valid() const{
    return m_client_id_isValid;
}

OAIObject OAIOrganization::getDeploymentsAllowed() const {
    return m_deployments_allowed;
}
void OAIOrganization::setDeploymentsAllowed(const OAIObject &deployments_allowed) {
    m_deployments_allowed = deployments_allowed;
    m_deployments_allowed_isSet = true;
}

bool OAIOrganization::is_deployments_allowed_Set() const{
    return m_deployments_allowed_isSet;
}

bool OAIOrganization::is_deployments_allowed_Valid() const{
    return m_deployments_allowed_isValid;
}

OAIObject OAIOrganization::getDeploymentsCreated() const {
    return m_deployments_created;
}
void OAIOrganization::setDeploymentsCreated(const OAIObject &deployments_created) {
    m_deployments_created = deployments_created;
    m_deployments_created_isSet = true;
}

bool OAIOrganization::is_deployments_created_Set() const{
    return m_deployments_created_isSet;
}

bool OAIOrganization::is_deployments_created_Valid() const{
    return m_deployments_created_isValid;
}

QString OAIOrganization::getDescription() const {
    return m_description;
}
void OAIOrganization::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIOrganization::is_description_Set() const{
    return m_description_isSet;
}

bool OAIOrganization::is_description_Valid() const{
    return m_description_isValid;
}

qint32 OAIOrganization::getDocumentRetentionInDays() const {
    return m_document_retention_in_days;
}
void OAIOrganization::setDocumentRetentionInDays(const qint32 &document_retention_in_days) {
    m_document_retention_in_days = document_retention_in_days;
    m_document_retention_in_days_isSet = true;
}

bool OAIOrganization::is_document_retention_in_days_Set() const{
    return m_document_retention_in_days_isSet;
}

bool OAIOrganization::is_document_retention_in_days_Valid() const{
    return m_document_retention_in_days_isValid;
}

qint32 OAIOrganization::getMonthlyNumberOfActiveModelsUsed() const {
    return m_monthly_number_of_active_models_used;
}
void OAIOrganization::setMonthlyNumberOfActiveModelsUsed(const qint32 &monthly_number_of_active_models_used) {
    m_monthly_number_of_active_models_used = monthly_number_of_active_models_used;
    m_monthly_number_of_active_models_used_isSet = true;
}

bool OAIOrganization::is_monthly_number_of_active_models_used_Set() const{
    return m_monthly_number_of_active_models_used_isSet;
}

bool OAIOrganization::is_monthly_number_of_active_models_used_Valid() const{
    return m_monthly_number_of_active_models_used_isValid;
}

qint32 OAIOrganization::getMonthlyNumberOfDataBundlesAllowed() const {
    return m_monthly_number_of_data_bundles_allowed;
}
void OAIOrganization::setMonthlyNumberOfDataBundlesAllowed(const qint32 &monthly_number_of_data_bundles_allowed) {
    m_monthly_number_of_data_bundles_allowed = monthly_number_of_data_bundles_allowed;
    m_monthly_number_of_data_bundles_allowed_isSet = true;
}

bool OAIOrganization::is_monthly_number_of_data_bundles_allowed_Set() const{
    return m_monthly_number_of_data_bundles_allowed_isSet;
}

bool OAIOrganization::is_monthly_number_of_data_bundles_allowed_Valid() const{
    return m_monthly_number_of_data_bundles_allowed_isValid;
}

qint32 OAIOrganization::getMonthlyNumberOfDataBundlesCreated() const {
    return m_monthly_number_of_data_bundles_created;
}
void OAIOrganization::setMonthlyNumberOfDataBundlesCreated(const qint32 &monthly_number_of_data_bundles_created) {
    m_monthly_number_of_data_bundles_created = monthly_number_of_data_bundles_created;
    m_monthly_number_of_data_bundles_created_isSet = true;
}

bool OAIOrganization::is_monthly_number_of_data_bundles_created_Set() const{
    return m_monthly_number_of_data_bundles_created_isSet;
}

bool OAIOrganization::is_monthly_number_of_data_bundles_created_Valid() const{
    return m_monthly_number_of_data_bundles_created_isValid;
}

qint32 OAIOrganization::getMonthlyNumberOfDocumentsAllowed() const {
    return m_monthly_number_of_documents_allowed;
}
void OAIOrganization::setMonthlyNumberOfDocumentsAllowed(const qint32 &monthly_number_of_documents_allowed) {
    m_monthly_number_of_documents_allowed = monthly_number_of_documents_allowed;
    m_monthly_number_of_documents_allowed_isSet = true;
}

bool OAIOrganization::is_monthly_number_of_documents_allowed_Set() const{
    return m_monthly_number_of_documents_allowed_isSet;
}

bool OAIOrganization::is_monthly_number_of_documents_allowed_Valid() const{
    return m_monthly_number_of_documents_allowed_isValid;
}

qint32 OAIOrganization::getMonthlyNumberOfDocumentsCreated() const {
    return m_monthly_number_of_documents_created;
}
void OAIOrganization::setMonthlyNumberOfDocumentsCreated(const qint32 &monthly_number_of_documents_created) {
    m_monthly_number_of_documents_created = monthly_number_of_documents_created;
    m_monthly_number_of_documents_created_isSet = true;
}

bool OAIOrganization::is_monthly_number_of_documents_created_Set() const{
    return m_monthly_number_of_documents_created_isSet;
}

bool OAIOrganization::is_monthly_number_of_documents_created_Valid() const{
    return m_monthly_number_of_documents_created_isValid;
}

qint32 OAIOrganization::getMonthlyNumberOfFieldPredictionsAllowed() const {
    return m_monthly_number_of_field_predictions_allowed;
}
void OAIOrganization::setMonthlyNumberOfFieldPredictionsAllowed(const qint32 &monthly_number_of_field_predictions_allowed) {
    m_monthly_number_of_field_predictions_allowed = monthly_number_of_field_predictions_allowed;
    m_monthly_number_of_field_predictions_allowed_isSet = true;
}

bool OAIOrganization::is_monthly_number_of_field_predictions_allowed_Set() const{
    return m_monthly_number_of_field_predictions_allowed_isSet;
}

bool OAIOrganization::is_monthly_number_of_field_predictions_allowed_Valid() const{
    return m_monthly_number_of_field_predictions_allowed_isValid;
}

qint32 OAIOrganization::getMonthlyNumberOfFieldPredictionsUsed() const {
    return m_monthly_number_of_field_predictions_used;
}
void OAIOrganization::setMonthlyNumberOfFieldPredictionsUsed(const qint32 &monthly_number_of_field_predictions_used) {
    m_monthly_number_of_field_predictions_used = monthly_number_of_field_predictions_used;
    m_monthly_number_of_field_predictions_used_isSet = true;
}

bool OAIOrganization::is_monthly_number_of_field_predictions_used_Set() const{
    return m_monthly_number_of_field_predictions_used_isSet;
}

bool OAIOrganization::is_monthly_number_of_field_predictions_used_Valid() const{
    return m_monthly_number_of_field_predictions_used_isValid;
}

double OAIOrganization::getMonthlyNumberOfGpuHoursUsed() const {
    return m_monthly_number_of_gpu_hours_used;
}
void OAIOrganization::setMonthlyNumberOfGpuHoursUsed(const double &monthly_number_of_gpu_hours_used) {
    m_monthly_number_of_gpu_hours_used = monthly_number_of_gpu_hours_used;
    m_monthly_number_of_gpu_hours_used_isSet = true;
}

bool OAIOrganization::is_monthly_number_of_gpu_hours_used_Set() const{
    return m_monthly_number_of_gpu_hours_used_isSet;
}

bool OAIOrganization::is_monthly_number_of_gpu_hours_used_Valid() const{
    return m_monthly_number_of_gpu_hours_used_isValid;
}

qint32 OAIOrganization::getMonthlyNumberOfModelDeploymentUnitsUsed() const {
    return m_monthly_number_of_model_deployment_units_used;
}
void OAIOrganization::setMonthlyNumberOfModelDeploymentUnitsUsed(const qint32 &monthly_number_of_model_deployment_units_used) {
    m_monthly_number_of_model_deployment_units_used = monthly_number_of_model_deployment_units_used;
    m_monthly_number_of_model_deployment_units_used_isSet = true;
}

bool OAIOrganization::is_monthly_number_of_model_deployment_units_used_Set() const{
    return m_monthly_number_of_model_deployment_units_used_isSet;
}

bool OAIOrganization::is_monthly_number_of_model_deployment_units_used_Valid() const{
    return m_monthly_number_of_model_deployment_units_used_isValid;
}

qint32 OAIOrganization::getMonthlyNumberOfPredictionsAllowed() const {
    return m_monthly_number_of_predictions_allowed;
}
void OAIOrganization::setMonthlyNumberOfPredictionsAllowed(const qint32 &monthly_number_of_predictions_allowed) {
    m_monthly_number_of_predictions_allowed = monthly_number_of_predictions_allowed;
    m_monthly_number_of_predictions_allowed_isSet = true;
}

bool OAIOrganization::is_monthly_number_of_predictions_allowed_Set() const{
    return m_monthly_number_of_predictions_allowed_isSet;
}

bool OAIOrganization::is_monthly_number_of_predictions_allowed_Valid() const{
    return m_monthly_number_of_predictions_allowed_isValid;
}

qint32 OAIOrganization::getMonthlyNumberOfPredictionsCreated() const {
    return m_monthly_number_of_predictions_created;
}
void OAIOrganization::setMonthlyNumberOfPredictionsCreated(const qint32 &monthly_number_of_predictions_created) {
    m_monthly_number_of_predictions_created = monthly_number_of_predictions_created;
    m_monthly_number_of_predictions_created_isSet = true;
}

bool OAIOrganization::is_monthly_number_of_predictions_created_Set() const{
    return m_monthly_number_of_predictions_created_isSet;
}

bool OAIOrganization::is_monthly_number_of_predictions_created_Valid() const{
    return m_monthly_number_of_predictions_created_isValid;
}

qint32 OAIOrganization::getMonthlyNumberOfTrainingsAllowed() const {
    return m_monthly_number_of_trainings_allowed;
}
void OAIOrganization::setMonthlyNumberOfTrainingsAllowed(const qint32 &monthly_number_of_trainings_allowed) {
    m_monthly_number_of_trainings_allowed = monthly_number_of_trainings_allowed;
    m_monthly_number_of_trainings_allowed_isSet = true;
}

bool OAIOrganization::is_monthly_number_of_trainings_allowed_Set() const{
    return m_monthly_number_of_trainings_allowed_isSet;
}

bool OAIOrganization::is_monthly_number_of_trainings_allowed_Valid() const{
    return m_monthly_number_of_trainings_allowed_isValid;
}

qint32 OAIOrganization::getMonthlyNumberOfTrainingsCreated() const {
    return m_monthly_number_of_trainings_created;
}
void OAIOrganization::setMonthlyNumberOfTrainingsCreated(const qint32 &monthly_number_of_trainings_created) {
    m_monthly_number_of_trainings_created = monthly_number_of_trainings_created;
    m_monthly_number_of_trainings_created_isSet = true;
}

bool OAIOrganization::is_monthly_number_of_trainings_created_Set() const{
    return m_monthly_number_of_trainings_created_isSet;
}

bool OAIOrganization::is_monthly_number_of_trainings_created_Valid() const{
    return m_monthly_number_of_trainings_created_isValid;
}

qint32 OAIOrganization::getMonthlyNumberOfTransitionExecutionsAllowed() const {
    return m_monthly_number_of_transition_executions_allowed;
}
void OAIOrganization::setMonthlyNumberOfTransitionExecutionsAllowed(const qint32 &monthly_number_of_transition_executions_allowed) {
    m_monthly_number_of_transition_executions_allowed = monthly_number_of_transition_executions_allowed;
    m_monthly_number_of_transition_executions_allowed_isSet = true;
}

bool OAIOrganization::is_monthly_number_of_transition_executions_allowed_Set() const{
    return m_monthly_number_of_transition_executions_allowed_isSet;
}

bool OAIOrganization::is_monthly_number_of_transition_executions_allowed_Valid() const{
    return m_monthly_number_of_transition_executions_allowed_isValid;
}

qint32 OAIOrganization::getMonthlyNumberOfTransitionExecutionsCreated() const {
    return m_monthly_number_of_transition_executions_created;
}
void OAIOrganization::setMonthlyNumberOfTransitionExecutionsCreated(const qint32 &monthly_number_of_transition_executions_created) {
    m_monthly_number_of_transition_executions_created = monthly_number_of_transition_executions_created;
    m_monthly_number_of_transition_executions_created_isSet = true;
}

bool OAIOrganization::is_monthly_number_of_transition_executions_created_Set() const{
    return m_monthly_number_of_transition_executions_created_isSet;
}

bool OAIOrganization::is_monthly_number_of_transition_executions_created_Valid() const{
    return m_monthly_number_of_transition_executions_created_isValid;
}

qint32 OAIOrganization::getMonthlyNumberOfWorkflowExecutionsAllowed() const {
    return m_monthly_number_of_workflow_executions_allowed;
}
void OAIOrganization::setMonthlyNumberOfWorkflowExecutionsAllowed(const qint32 &monthly_number_of_workflow_executions_allowed) {
    m_monthly_number_of_workflow_executions_allowed = monthly_number_of_workflow_executions_allowed;
    m_monthly_number_of_workflow_executions_allowed_isSet = true;
}

bool OAIOrganization::is_monthly_number_of_workflow_executions_allowed_Set() const{
    return m_monthly_number_of_workflow_executions_allowed_isSet;
}

bool OAIOrganization::is_monthly_number_of_workflow_executions_allowed_Valid() const{
    return m_monthly_number_of_workflow_executions_allowed_isValid;
}

qint32 OAIOrganization::getMonthlyNumberOfWorkflowExecutionsCreated() const {
    return m_monthly_number_of_workflow_executions_created;
}
void OAIOrganization::setMonthlyNumberOfWorkflowExecutionsCreated(const qint32 &monthly_number_of_workflow_executions_created) {
    m_monthly_number_of_workflow_executions_created = monthly_number_of_workflow_executions_created;
    m_monthly_number_of_workflow_executions_created_isSet = true;
}

bool OAIOrganization::is_monthly_number_of_workflow_executions_created_Set() const{
    return m_monthly_number_of_workflow_executions_created_isSet;
}

bool OAIOrganization::is_monthly_number_of_workflow_executions_created_Valid() const{
    return m_monthly_number_of_workflow_executions_created_isValid;
}

OAIObject OAIOrganization::getMonthlyUsageSummary() const {
    return m_monthly_usage_summary;
}
void OAIOrganization::setMonthlyUsageSummary(const OAIObject &monthly_usage_summary) {
    m_monthly_usage_summary = monthly_usage_summary;
    m_monthly_usage_summary_isSet = true;
}

bool OAIOrganization::is_monthly_usage_summary_Set() const{
    return m_monthly_usage_summary_isSet;
}

bool OAIOrganization::is_monthly_usage_summary_Valid() const{
    return m_monthly_usage_summary_isValid;
}

QString OAIOrganization::getName() const {
    return m_name;
}
void OAIOrganization::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIOrganization::is_name_Set() const{
    return m_name_isSet;
}

bool OAIOrganization::is_name_Valid() const{
    return m_name_isValid;
}

qint32 OAIOrganization::getNumberOfAppClientsAllowed() const {
    return m_number_of_app_clients_allowed;
}
void OAIOrganization::setNumberOfAppClientsAllowed(const qint32 &number_of_app_clients_allowed) {
    m_number_of_app_clients_allowed = number_of_app_clients_allowed;
    m_number_of_app_clients_allowed_isSet = true;
}

bool OAIOrganization::is_number_of_app_clients_allowed_Set() const{
    return m_number_of_app_clients_allowed_isSet;
}

bool OAIOrganization::is_number_of_app_clients_allowed_Valid() const{
    return m_number_of_app_clients_allowed_isValid;
}

qint32 OAIOrganization::getNumberOfAppClientsCreated() const {
    return m_number_of_app_clients_created;
}
void OAIOrganization::setNumberOfAppClientsCreated(const qint32 &number_of_app_clients_created) {
    m_number_of_app_clients_created = number_of_app_clients_created;
    m_number_of_app_clients_created_isSet = true;
}

bool OAIOrganization::is_number_of_app_clients_created_Set() const{
    return m_number_of_app_clients_created_isSet;
}

bool OAIOrganization::is_number_of_app_clients_created_Valid() const{
    return m_number_of_app_clients_created_isValid;
}

qint32 OAIOrganization::getNumberOfAssetsAllowed() const {
    return m_number_of_assets_allowed;
}
void OAIOrganization::setNumberOfAssetsAllowed(const qint32 &number_of_assets_allowed) {
    m_number_of_assets_allowed = number_of_assets_allowed;
    m_number_of_assets_allowed_isSet = true;
}

bool OAIOrganization::is_number_of_assets_allowed_Set() const{
    return m_number_of_assets_allowed_isSet;
}

bool OAIOrganization::is_number_of_assets_allowed_Valid() const{
    return m_number_of_assets_allowed_isValid;
}

qint32 OAIOrganization::getNumberOfAssetsCreated() const {
    return m_number_of_assets_created;
}
void OAIOrganization::setNumberOfAssetsCreated(const qint32 &number_of_assets_created) {
    m_number_of_assets_created = number_of_assets_created;
    m_number_of_assets_created_isSet = true;
}

bool OAIOrganization::is_number_of_assets_created_Set() const{
    return m_number_of_assets_created_isSet;
}

bool OAIOrganization::is_number_of_assets_created_Valid() const{
    return m_number_of_assets_created_isValid;
}

qint32 OAIOrganization::getNumberOfDatasetsAllowed() const {
    return m_number_of_datasets_allowed;
}
void OAIOrganization::setNumberOfDatasetsAllowed(const qint32 &number_of_datasets_allowed) {
    m_number_of_datasets_allowed = number_of_datasets_allowed;
    m_number_of_datasets_allowed_isSet = true;
}

bool OAIOrganization::is_number_of_datasets_allowed_Set() const{
    return m_number_of_datasets_allowed_isSet;
}

bool OAIOrganization::is_number_of_datasets_allowed_Valid() const{
    return m_number_of_datasets_allowed_isValid;
}

qint32 OAIOrganization::getNumberOfDatasetsCreated() const {
    return m_number_of_datasets_created;
}
void OAIOrganization::setNumberOfDatasetsCreated(const qint32 &number_of_datasets_created) {
    m_number_of_datasets_created = number_of_datasets_created;
    m_number_of_datasets_created_isSet = true;
}

bool OAIOrganization::is_number_of_datasets_created_Set() const{
    return m_number_of_datasets_created_isSet;
}

bool OAIOrganization::is_number_of_datasets_created_Valid() const{
    return m_number_of_datasets_created_isValid;
}

qint32 OAIOrganization::getNumberOfModelsAllowed() const {
    return m_number_of_models_allowed;
}
void OAIOrganization::setNumberOfModelsAllowed(const qint32 &number_of_models_allowed) {
    m_number_of_models_allowed = number_of_models_allowed;
    m_number_of_models_allowed_isSet = true;
}

bool OAIOrganization::is_number_of_models_allowed_Set() const{
    return m_number_of_models_allowed_isSet;
}

bool OAIOrganization::is_number_of_models_allowed_Valid() const{
    return m_number_of_models_allowed_isValid;
}

qint32 OAIOrganization::getNumberOfModelsCreated() const {
    return m_number_of_models_created;
}
void OAIOrganization::setNumberOfModelsCreated(const qint32 &number_of_models_created) {
    m_number_of_models_created = number_of_models_created;
    m_number_of_models_created_isSet = true;
}

bool OAIOrganization::is_number_of_models_created_Set() const{
    return m_number_of_models_created_isSet;
}

bool OAIOrganization::is_number_of_models_created_Valid() const{
    return m_number_of_models_created_isValid;
}

qint32 OAIOrganization::getNumberOfSecretsAllowed() const {
    return m_number_of_secrets_allowed;
}
void OAIOrganization::setNumberOfSecretsAllowed(const qint32 &number_of_secrets_allowed) {
    m_number_of_secrets_allowed = number_of_secrets_allowed;
    m_number_of_secrets_allowed_isSet = true;
}

bool OAIOrganization::is_number_of_secrets_allowed_Set() const{
    return m_number_of_secrets_allowed_isSet;
}

bool OAIOrganization::is_number_of_secrets_allowed_Valid() const{
    return m_number_of_secrets_allowed_isValid;
}

qint32 OAIOrganization::getNumberOfSecretsCreated() const {
    return m_number_of_secrets_created;
}
void OAIOrganization::setNumberOfSecretsCreated(const qint32 &number_of_secrets_created) {
    m_number_of_secrets_created = number_of_secrets_created;
    m_number_of_secrets_created_isSet = true;
}

bool OAIOrganization::is_number_of_secrets_created_Set() const{
    return m_number_of_secrets_created_isSet;
}

bool OAIOrganization::is_number_of_secrets_created_Valid() const{
    return m_number_of_secrets_created_isValid;
}

qint32 OAIOrganization::getNumberOfTransitionsAllowed() const {
    return m_number_of_transitions_allowed;
}
void OAIOrganization::setNumberOfTransitionsAllowed(const qint32 &number_of_transitions_allowed) {
    m_number_of_transitions_allowed = number_of_transitions_allowed;
    m_number_of_transitions_allowed_isSet = true;
}

bool OAIOrganization::is_number_of_transitions_allowed_Set() const{
    return m_number_of_transitions_allowed_isSet;
}

bool OAIOrganization::is_number_of_transitions_allowed_Valid() const{
    return m_number_of_transitions_allowed_isValid;
}

qint32 OAIOrganization::getNumberOfTransitionsCreated() const {
    return m_number_of_transitions_created;
}
void OAIOrganization::setNumberOfTransitionsCreated(const qint32 &number_of_transitions_created) {
    m_number_of_transitions_created = number_of_transitions_created;
    m_number_of_transitions_created_isSet = true;
}

bool OAIOrganization::is_number_of_transitions_created_Set() const{
    return m_number_of_transitions_created_isSet;
}

bool OAIOrganization::is_number_of_transitions_created_Valid() const{
    return m_number_of_transitions_created_isValid;
}

qint32 OAIOrganization::getNumberOfUsersAllowed() const {
    return m_number_of_users_allowed;
}
void OAIOrganization::setNumberOfUsersAllowed(const qint32 &number_of_users_allowed) {
    m_number_of_users_allowed = number_of_users_allowed;
    m_number_of_users_allowed_isSet = true;
}

bool OAIOrganization::is_number_of_users_allowed_Set() const{
    return m_number_of_users_allowed_isSet;
}

bool OAIOrganization::is_number_of_users_allowed_Valid() const{
    return m_number_of_users_allowed_isValid;
}

qint32 OAIOrganization::getNumberOfUsersCreated() const {
    return m_number_of_users_created;
}
void OAIOrganization::setNumberOfUsersCreated(const qint32 &number_of_users_created) {
    m_number_of_users_created = number_of_users_created;
    m_number_of_users_created_isSet = true;
}

bool OAIOrganization::is_number_of_users_created_Set() const{
    return m_number_of_users_created_isSet;
}

bool OAIOrganization::is_number_of_users_created_Valid() const{
    return m_number_of_users_created_isValid;
}

qint32 OAIOrganization::getNumberOfWorkflowsAllowed() const {
    return m_number_of_workflows_allowed;
}
void OAIOrganization::setNumberOfWorkflowsAllowed(const qint32 &number_of_workflows_allowed) {
    m_number_of_workflows_allowed = number_of_workflows_allowed;
    m_number_of_workflows_allowed_isSet = true;
}

bool OAIOrganization::is_number_of_workflows_allowed_Set() const{
    return m_number_of_workflows_allowed_isSet;
}

bool OAIOrganization::is_number_of_workflows_allowed_Valid() const{
    return m_number_of_workflows_allowed_isValid;
}

qint32 OAIOrganization::getNumberOfWorkflowsCreated() const {
    return m_number_of_workflows_created;
}
void OAIOrganization::setNumberOfWorkflowsCreated(const qint32 &number_of_workflows_created) {
    m_number_of_workflows_created = number_of_workflows_created;
    m_number_of_workflows_created_isSet = true;
}

bool OAIOrganization::is_number_of_workflows_created_Set() const{
    return m_number_of_workflows_created_isSet;
}

bool OAIOrganization::is_number_of_workflows_created_Valid() const{
    return m_number_of_workflows_created_isValid;
}

QString OAIOrganization::getOrganizationId() const {
    return m_organization_id;
}
void OAIOrganization::setOrganizationId(const QString &organization_id) {
    m_organization_id = organization_id;
    m_organization_id_isSet = true;
}

bool OAIOrganization::is_organization_id_Set() const{
    return m_organization_id_isSet;
}

bool OAIOrganization::is_organization_id_Valid() const{
    return m_organization_id_isValid;
}

QString OAIOrganization::getPaymentMethodId() const {
    return m_payment_method_id;
}
void OAIOrganization::setPaymentMethodId(const QString &payment_method_id) {
    m_payment_method_id = payment_method_id;
    m_payment_method_id_isSet = true;
}

bool OAIOrganization::is_payment_method_id_Set() const{
    return m_payment_method_id_isSet;
}

bool OAIOrganization::is_payment_method_id_Valid() const{
    return m_payment_method_id_isValid;
}

QString OAIOrganization::getPlanId() const {
    return m_plan_id;
}
void OAIOrganization::setPlanId(const QString &plan_id) {
    m_plan_id = plan_id;
    m_plan_id_isSet = true;
}

bool OAIOrganization::is_plan_id_Set() const{
    return m_plan_id_isSet;
}

bool OAIOrganization::is_plan_id_Valid() const{
    return m_plan_id_isValid;
}

QString OAIOrganization::getUpdatedBy() const {
    return m_updated_by;
}
void OAIOrganization::setUpdatedBy(const QString &updated_by) {
    m_updated_by = updated_by;
    m_updated_by_isSet = true;
}

bool OAIOrganization::is_updated_by_Set() const{
    return m_updated_by_isSet;
}

bool OAIOrganization::is_updated_by_Valid() const{
    return m_updated_by_isValid;
}

QString OAIOrganization::getUpdatedTime() const {
    return m_updated_time;
}
void OAIOrganization::setUpdatedTime(const QString &updated_time) {
    m_updated_time = updated_time;
    m_updated_time_isSet = true;
}

bool OAIOrganization::is_updated_time_Set() const{
    return m_updated_time_isSet;
}

bool OAIOrganization::is_updated_time_Valid() const{
    return m_updated_time_isValid;
}

bool OAIOrganization::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_client_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_deployments_allowed_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_deployments_created_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_document_retention_in_days_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_monthly_number_of_active_models_used_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_monthly_number_of_data_bundles_allowed_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_monthly_number_of_data_bundles_created_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_monthly_number_of_documents_allowed_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_monthly_number_of_documents_created_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_monthly_number_of_field_predictions_allowed_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_monthly_number_of_field_predictions_used_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_monthly_number_of_gpu_hours_used_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_monthly_number_of_model_deployment_units_used_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_monthly_number_of_predictions_allowed_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_monthly_number_of_predictions_created_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_monthly_number_of_trainings_allowed_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_monthly_number_of_trainings_created_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_monthly_number_of_transition_executions_allowed_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_monthly_number_of_transition_executions_created_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_monthly_number_of_workflow_executions_allowed_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_monthly_number_of_workflow_executions_created_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_monthly_usage_summary_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_number_of_app_clients_allowed_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_number_of_app_clients_created_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_number_of_assets_allowed_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_number_of_assets_created_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_number_of_datasets_allowed_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_number_of_datasets_created_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_number_of_models_allowed_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_number_of_models_created_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_number_of_secrets_allowed_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_number_of_secrets_created_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_number_of_transitions_allowed_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_number_of_transitions_created_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_number_of_users_allowed_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_number_of_users_created_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_number_of_workflows_allowed_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_number_of_workflows_created_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_organization_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_payment_method_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_plan_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_updated_by_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_updated_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOrganization::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_description_isValid && m_document_retention_in_days_isValid && m_monthly_number_of_active_models_used_isValid && m_monthly_number_of_data_bundles_allowed_isValid && m_monthly_number_of_data_bundles_created_isValid && m_monthly_number_of_documents_allowed_isValid && m_monthly_number_of_documents_created_isValid && m_monthly_number_of_field_predictions_allowed_isValid && m_monthly_number_of_field_predictions_used_isValid && m_monthly_number_of_gpu_hours_used_isValid && m_monthly_number_of_predictions_allowed_isValid && m_monthly_number_of_predictions_created_isValid && m_monthly_number_of_trainings_allowed_isValid && m_monthly_number_of_trainings_created_isValid && m_monthly_number_of_transition_executions_allowed_isValid && m_monthly_number_of_transition_executions_created_isValid && m_monthly_number_of_workflow_executions_allowed_isValid && m_monthly_number_of_workflow_executions_created_isValid && m_monthly_usage_summary_isValid && m_name_isValid && m_number_of_app_clients_allowed_isValid && m_number_of_app_clients_created_isValid && m_number_of_assets_allowed_isValid && m_number_of_assets_created_isValid && m_number_of_models_allowed_isValid && m_number_of_models_created_isValid && m_number_of_secrets_allowed_isValid && m_number_of_secrets_created_isValid && m_number_of_transitions_allowed_isValid && m_number_of_transitions_created_isValid && m_number_of_users_allowed_isValid && m_number_of_users_created_isValid && m_number_of_workflows_allowed_isValid && m_number_of_workflows_created_isValid && m_organization_id_isValid && m_payment_method_id_isValid && m_plan_id_isValid && m_updated_by_isValid && m_updated_time_isValid && true;
}

} // namespace OpenAPI
