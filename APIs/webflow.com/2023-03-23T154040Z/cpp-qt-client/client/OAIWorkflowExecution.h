/**
 * Lucidtech API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2023-03-23T15:40:40Z
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIWorkflowExecution.h
 *
 * 
 */

#ifndef OAIWorkflowExecution_H
#define OAIWorkflowExecution_H

#include <QJsonObject>

#include "OAIObject.h"
#include "OAIWorkflowExecution_completedBy_inner.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIWorkflowExecution : public OAIObject {
public:
    OAIWorkflowExecution();
    OAIWorkflowExecution(QString json);
    ~OAIWorkflowExecution() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIWorkflowExecution_completedBy_inner> getCompletedBy() const;
    void setCompletedBy(const QList<OAIWorkflowExecution_completedBy_inner> &completed_by);
    bool is_completed_by_Set() const;
    bool is_completed_by_Valid() const;

    QString getCompletedTaskLogId() const;
    void setCompletedTaskLogId(const QString &completed_task_log_id);
    bool is_completed_task_log_id_Set() const;
    bool is_completed_task_log_id_Valid() const;

    QString getEndTime() const;
    void setEndTime(const QString &end_time);
    bool is_end_time_Set() const;
    bool is_end_time_Valid() const;

    QList<OAIObject> getEvents() const;
    void setEvents(const QList<OAIObject> &events);
    bool is_events_Set() const;
    bool is_events_Valid() const;

    QString getExecutionId() const;
    void setExecutionId(const QString &execution_id);
    bool is_execution_id_Set() const;
    bool is_execution_id_Valid() const;

    OAIObject getInput() const;
    void setInput(const OAIObject &input);
    bool is_input_Set() const;
    bool is_input_Valid() const;

    QString getLogId() const;
    void setLogId(const QString &log_id);
    bool is_log_id_Set() const;
    bool is_log_id_Valid() const;

    OAIObject getOutput() const;
    void setOutput(const OAIObject &output);
    bool is_output_Set() const;
    bool is_output_Valid() const;

    QString getStartTime() const;
    void setStartTime(const QString &start_time);
    bool is_start_time_Set() const;
    bool is_start_time_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    OAIObject getTransitionExecutions() const;
    void setTransitionExecutions(const OAIObject &transition_executions);
    bool is_transition_executions_Set() const;
    bool is_transition_executions_Valid() const;

    QString getWorkflowId() const;
    void setWorkflowId(const QString &workflow_id);
    bool is_workflow_id_Set() const;
    bool is_workflow_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIWorkflowExecution_completedBy_inner> m_completed_by;
    bool m_completed_by_isSet;
    bool m_completed_by_isValid;

    QString m_completed_task_log_id;
    bool m_completed_task_log_id_isSet;
    bool m_completed_task_log_id_isValid;

    QString m_end_time;
    bool m_end_time_isSet;
    bool m_end_time_isValid;

    QList<OAIObject> m_events;
    bool m_events_isSet;
    bool m_events_isValid;

    QString m_execution_id;
    bool m_execution_id_isSet;
    bool m_execution_id_isValid;

    OAIObject m_input;
    bool m_input_isSet;
    bool m_input_isValid;

    QString m_log_id;
    bool m_log_id_isSet;
    bool m_log_id_isValid;

    OAIObject m_output;
    bool m_output_isSet;
    bool m_output_isValid;

    QString m_start_time;
    bool m_start_time_isSet;
    bool m_start_time_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    OAIObject m_transition_executions;
    bool m_transition_executions_isSet;
    bool m_transition_executions_isValid;

    QString m_workflow_id;
    bool m_workflow_id_isSet;
    bool m_workflow_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIWorkflowExecution)

#endif // OAIWorkflowExecution_H
