/**
 * Lucidtech API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2023-03-23T15:40:40Z
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPatchWorkflowExecutionId.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPatchWorkflowExecutionId::OAIPatchWorkflowExecutionId(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPatchWorkflowExecutionId::OAIPatchWorkflowExecutionId() {
    this->initializeModel();
}

OAIPatchWorkflowExecutionId::~OAIPatchWorkflowExecutionId() {}

void OAIPatchWorkflowExecutionId::initializeModel() {

    m_next_transition_id_isSet = false;
    m_next_transition_id_isValid = false;
}

void OAIPatchWorkflowExecutionId::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPatchWorkflowExecutionId::fromJsonObject(QJsonObject json) {

    m_next_transition_id_isValid = ::OpenAPI::fromJsonValue(m_next_transition_id, json[QString("nextTransitionId")]);
    m_next_transition_id_isSet = !json[QString("nextTransitionId")].isNull() && m_next_transition_id_isValid;
}

QString OAIPatchWorkflowExecutionId::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPatchWorkflowExecutionId::asJsonObject() const {
    QJsonObject obj;
    if (m_next_transition_id.isSet()) {
        obj.insert(QString("nextTransitionId"), ::OpenAPI::toJsonValue(m_next_transition_id));
    }
    return obj;
}

OAILogs_transitionId OAIPatchWorkflowExecutionId::getNextTransitionId() const {
    return m_next_transition_id;
}
void OAIPatchWorkflowExecutionId::setNextTransitionId(const OAILogs_transitionId &next_transition_id) {
    m_next_transition_id = next_transition_id;
    m_next_transition_id_isSet = true;
}

bool OAIPatchWorkflowExecutionId::is_next_transition_id_Set() const{
    return m_next_transition_id_isSet;
}

bool OAIPatchWorkflowExecutionId::is_next_transition_id_Valid() const{
    return m_next_transition_id_isValid;
}

bool OAIPatchWorkflowExecutionId::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_next_transition_id.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPatchWorkflowExecutionId::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_next_transition_id_isValid && true;
}

} // namespace OpenAPI
