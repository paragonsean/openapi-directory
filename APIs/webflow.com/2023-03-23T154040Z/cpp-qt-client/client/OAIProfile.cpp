/**
 * Lucidtech API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2023-03-23T15:40:40Z
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProfile.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProfile::OAIProfile(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProfile::OAIProfile() {
    this->initializeModel();
}

OAIProfile::~OAIProfile() {}

void OAIProfile::initializeModel() {

    m_created_time_isSet = false;
    m_created_time_isValid = false;

    m_email_isSet = false;
    m_email_isValid = false;

    m_family_name_isSet = false;
    m_family_name_isValid = false;

    m_given_name_isSet = false;
    m_given_name_isValid = false;

    m_locale_isSet = false;
    m_locale_isValid = false;

    m_metadata_isSet = false;
    m_metadata_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_number_of_organizations_allowed_isSet = false;
    m_number_of_organizations_allowed_isValid = false;

    m_number_of_organizations_created_isSet = false;
    m_number_of_organizations_created_isValid = false;

    m_picture_isSet = false;
    m_picture_isValid = false;

    m_profile_id_isSet = false;
    m_profile_id_isValid = false;

    m_updated_time_isSet = false;
    m_updated_time_isValid = false;
}

void OAIProfile::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProfile::fromJsonObject(QJsonObject json) {

    m_created_time_isValid = ::OpenAPI::fromJsonValue(m_created_time, json[QString("createdTime")]);
    m_created_time_isSet = !json[QString("createdTime")].isNull() && m_created_time_isValid;

    m_email_isValid = ::OpenAPI::fromJsonValue(m_email, json[QString("email")]);
    m_email_isSet = !json[QString("email")].isNull() && m_email_isValid;

    m_family_name_isValid = ::OpenAPI::fromJsonValue(m_family_name, json[QString("familyName")]);
    m_family_name_isSet = !json[QString("familyName")].isNull() && m_family_name_isValid;

    m_given_name_isValid = ::OpenAPI::fromJsonValue(m_given_name, json[QString("givenName")]);
    m_given_name_isSet = !json[QString("givenName")].isNull() && m_given_name_isValid;

    m_locale_isValid = ::OpenAPI::fromJsonValue(m_locale, json[QString("locale")]);
    m_locale_isSet = !json[QString("locale")].isNull() && m_locale_isValid;

    m_metadata_isValid = ::OpenAPI::fromJsonValue(m_metadata, json[QString("metadata")]);
    m_metadata_isSet = !json[QString("metadata")].isNull() && m_metadata_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_number_of_organizations_allowed_isValid = ::OpenAPI::fromJsonValue(m_number_of_organizations_allowed, json[QString("numberOfOrganizationsAllowed")]);
    m_number_of_organizations_allowed_isSet = !json[QString("numberOfOrganizationsAllowed")].isNull() && m_number_of_organizations_allowed_isValid;

    m_number_of_organizations_created_isValid = ::OpenAPI::fromJsonValue(m_number_of_organizations_created, json[QString("numberOfOrganizationsCreated")]);
    m_number_of_organizations_created_isSet = !json[QString("numberOfOrganizationsCreated")].isNull() && m_number_of_organizations_created_isValid;

    m_picture_isValid = ::OpenAPI::fromJsonValue(m_picture, json[QString("picture")]);
    m_picture_isSet = !json[QString("picture")].isNull() && m_picture_isValid;

    m_profile_id_isValid = ::OpenAPI::fromJsonValue(m_profile_id, json[QString("profileId")]);
    m_profile_id_isSet = !json[QString("profileId")].isNull() && m_profile_id_isValid;

    m_updated_time_isValid = ::OpenAPI::fromJsonValue(m_updated_time, json[QString("updatedTime")]);
    m_updated_time_isSet = !json[QString("updatedTime")].isNull() && m_updated_time_isValid;
}

QString OAIProfile::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProfile::asJsonObject() const {
    QJsonObject obj;
    if (m_created_time_isSet) {
        obj.insert(QString("createdTime"), ::OpenAPI::toJsonValue(m_created_time));
    }
    if (m_email_isSet) {
        obj.insert(QString("email"), ::OpenAPI::toJsonValue(m_email));
    }
    if (m_family_name_isSet) {
        obj.insert(QString("familyName"), ::OpenAPI::toJsonValue(m_family_name));
    }
    if (m_given_name_isSet) {
        obj.insert(QString("givenName"), ::OpenAPI::toJsonValue(m_given_name));
    }
    if (m_locale_isSet) {
        obj.insert(QString("locale"), ::OpenAPI::toJsonValue(m_locale));
    }
    if (m_metadata_isSet) {
        obj.insert(QString("metadata"), ::OpenAPI::toJsonValue(m_metadata));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_number_of_organizations_allowed_isSet) {
        obj.insert(QString("numberOfOrganizationsAllowed"), ::OpenAPI::toJsonValue(m_number_of_organizations_allowed));
    }
    if (m_number_of_organizations_created_isSet) {
        obj.insert(QString("numberOfOrganizationsCreated"), ::OpenAPI::toJsonValue(m_number_of_organizations_created));
    }
    if (m_picture_isSet) {
        obj.insert(QString("picture"), ::OpenAPI::toJsonValue(m_picture));
    }
    if (m_profile_id_isSet) {
        obj.insert(QString("profileId"), ::OpenAPI::toJsonValue(m_profile_id));
    }
    if (m_updated_time_isSet) {
        obj.insert(QString("updatedTime"), ::OpenAPI::toJsonValue(m_updated_time));
    }
    return obj;
}

QString OAIProfile::getCreatedTime() const {
    return m_created_time;
}
void OAIProfile::setCreatedTime(const QString &created_time) {
    m_created_time = created_time;
    m_created_time_isSet = true;
}

bool OAIProfile::is_created_time_Set() const{
    return m_created_time_isSet;
}

bool OAIProfile::is_created_time_Valid() const{
    return m_created_time_isValid;
}

QString OAIProfile::getEmail() const {
    return m_email;
}
void OAIProfile::setEmail(const QString &email) {
    m_email = email;
    m_email_isSet = true;
}

bool OAIProfile::is_email_Set() const{
    return m_email_isSet;
}

bool OAIProfile::is_email_Valid() const{
    return m_email_isValid;
}

QString OAIProfile::getFamilyName() const {
    return m_family_name;
}
void OAIProfile::setFamilyName(const QString &family_name) {
    m_family_name = family_name;
    m_family_name_isSet = true;
}

bool OAIProfile::is_family_name_Set() const{
    return m_family_name_isSet;
}

bool OAIProfile::is_family_name_Valid() const{
    return m_family_name_isValid;
}

QString OAIProfile::getGivenName() const {
    return m_given_name;
}
void OAIProfile::setGivenName(const QString &given_name) {
    m_given_name = given_name;
    m_given_name_isSet = true;
}

bool OAIProfile::is_given_name_Set() const{
    return m_given_name_isSet;
}

bool OAIProfile::is_given_name_Valid() const{
    return m_given_name_isValid;
}

QString OAIProfile::getLocale() const {
    return m_locale;
}
void OAIProfile::setLocale(const QString &locale) {
    m_locale = locale;
    m_locale_isSet = true;
}

bool OAIProfile::is_locale_Set() const{
    return m_locale_isSet;
}

bool OAIProfile::is_locale_Valid() const{
    return m_locale_isValid;
}

OAIObject OAIProfile::getMetadata() const {
    return m_metadata;
}
void OAIProfile::setMetadata(const OAIObject &metadata) {
    m_metadata = metadata;
    m_metadata_isSet = true;
}

bool OAIProfile::is_metadata_Set() const{
    return m_metadata_isSet;
}

bool OAIProfile::is_metadata_Valid() const{
    return m_metadata_isValid;
}

QString OAIProfile::getName() const {
    return m_name;
}
void OAIProfile::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIProfile::is_name_Set() const{
    return m_name_isSet;
}

bool OAIProfile::is_name_Valid() const{
    return m_name_isValid;
}

qint32 OAIProfile::getNumberOfOrganizationsAllowed() const {
    return m_number_of_organizations_allowed;
}
void OAIProfile::setNumberOfOrganizationsAllowed(const qint32 &number_of_organizations_allowed) {
    m_number_of_organizations_allowed = number_of_organizations_allowed;
    m_number_of_organizations_allowed_isSet = true;
}

bool OAIProfile::is_number_of_organizations_allowed_Set() const{
    return m_number_of_organizations_allowed_isSet;
}

bool OAIProfile::is_number_of_organizations_allowed_Valid() const{
    return m_number_of_organizations_allowed_isValid;
}

qint32 OAIProfile::getNumberOfOrganizationsCreated() const {
    return m_number_of_organizations_created;
}
void OAIProfile::setNumberOfOrganizationsCreated(const qint32 &number_of_organizations_created) {
    m_number_of_organizations_created = number_of_organizations_created;
    m_number_of_organizations_created_isSet = true;
}

bool OAIProfile::is_number_of_organizations_created_Set() const{
    return m_number_of_organizations_created_isSet;
}

bool OAIProfile::is_number_of_organizations_created_Valid() const{
    return m_number_of_organizations_created_isValid;
}

QString OAIProfile::getPicture() const {
    return m_picture;
}
void OAIProfile::setPicture(const QString &picture) {
    m_picture = picture;
    m_picture_isSet = true;
}

bool OAIProfile::is_picture_Set() const{
    return m_picture_isSet;
}

bool OAIProfile::is_picture_Valid() const{
    return m_picture_isValid;
}

QString OAIProfile::getProfileId() const {
    return m_profile_id;
}
void OAIProfile::setProfileId(const QString &profile_id) {
    m_profile_id = profile_id;
    m_profile_id_isSet = true;
}

bool OAIProfile::is_profile_id_Set() const{
    return m_profile_id_isSet;
}

bool OAIProfile::is_profile_id_Valid() const{
    return m_profile_id_isValid;
}

QString OAIProfile::getUpdatedTime() const {
    return m_updated_time;
}
void OAIProfile::setUpdatedTime(const QString &updated_time) {
    m_updated_time = updated_time;
    m_updated_time_isSet = true;
}

bool OAIProfile::is_updated_time_Set() const{
    return m_updated_time_isSet;
}

bool OAIProfile::is_updated_time_Valid() const{
    return m_updated_time_isValid;
}

bool OAIProfile::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_created_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_family_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_given_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_locale_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_metadata_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_number_of_organizations_allowed_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_number_of_organizations_created_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_picture_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_profile_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_updated_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProfile::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_profile_id_isValid && true;
}

} // namespace OpenAPI
