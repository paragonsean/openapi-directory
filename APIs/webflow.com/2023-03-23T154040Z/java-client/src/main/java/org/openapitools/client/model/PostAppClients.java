/*
 * Lucidtech API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2023-03-23T15:40:40Z
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * PostAppClients
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:59:04.127247-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class PostAppClients {
  public static final String SERIALIZED_NAME_CALLBACK_URLS = "callbackUrls";
  @SerializedName(SERIALIZED_NAME_CALLBACK_URLS)
  private List<String> callbackUrls = new ArrayList<>();

  public static final String SERIALIZED_NAME_DEFAULT_LOGIN_URL = "defaultLoginUrl";
  @SerializedName(SERIALIZED_NAME_DEFAULT_LOGIN_URL)
  private String defaultLoginUrl;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_GENERATE_SECRET = "generateSecret";
  @SerializedName(SERIALIZED_NAME_GENERATE_SECRET)
  private Boolean generateSecret = true;

  public static final String SERIALIZED_NAME_LOGIN_URLS = "loginUrls";
  @SerializedName(SERIALIZED_NAME_LOGIN_URLS)
  private List<String> loginUrls = new ArrayList<>();

  public static final String SERIALIZED_NAME_LOGOUT_URLS = "logoutUrls";
  @SerializedName(SERIALIZED_NAME_LOGOUT_URLS)
  private List<String> logoutUrls = new ArrayList<>();

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public PostAppClients() {
  }

  public PostAppClients callbackUrls(List<String> callbackUrls) {
    this.callbackUrls = callbackUrls;
    return this;
  }

  public PostAppClients addCallbackUrlsItem(String callbackUrlsItem) {
    if (this.callbackUrls == null) {
      this.callbackUrls = new ArrayList<>();
    }
    this.callbackUrls.add(callbackUrlsItem);
    return this;
  }

  /**
   * Get callbackUrls
   * @return callbackUrls
   */
  @javax.annotation.Nullable
  public List<String> getCallbackUrls() {
    return callbackUrls;
  }

  public void setCallbackUrls(List<String> callbackUrls) {
    this.callbackUrls = callbackUrls;
  }


  public PostAppClients defaultLoginUrl(String defaultLoginUrl) {
    this.defaultLoginUrl = defaultLoginUrl;
    return this;
  }

  /**
   * Get defaultLoginUrl
   * @return defaultLoginUrl
   */
  @javax.annotation.Nullable
  public String getDefaultLoginUrl() {
    return defaultLoginUrl;
  }

  public void setDefaultLoginUrl(String defaultLoginUrl) {
    this.defaultLoginUrl = defaultLoginUrl;
  }


  public PostAppClients description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public PostAppClients generateSecret(Boolean generateSecret) {
    this.generateSecret = generateSecret;
    return this;
  }

  /**
   * Get generateSecret
   * @return generateSecret
   */
  @javax.annotation.Nullable
  public Boolean getGenerateSecret() {
    return generateSecret;
  }

  public void setGenerateSecret(Boolean generateSecret) {
    this.generateSecret = generateSecret;
  }


  public PostAppClients loginUrls(List<String> loginUrls) {
    this.loginUrls = loginUrls;
    return this;
  }

  public PostAppClients addLoginUrlsItem(String loginUrlsItem) {
    if (this.loginUrls == null) {
      this.loginUrls = new ArrayList<>();
    }
    this.loginUrls.add(loginUrlsItem);
    return this;
  }

  /**
   * Get loginUrls
   * @return loginUrls
   */
  @javax.annotation.Nullable
  public List<String> getLoginUrls() {
    return loginUrls;
  }

  public void setLoginUrls(List<String> loginUrls) {
    this.loginUrls = loginUrls;
  }


  public PostAppClients logoutUrls(List<String> logoutUrls) {
    this.logoutUrls = logoutUrls;
    return this;
  }

  public PostAppClients addLogoutUrlsItem(String logoutUrlsItem) {
    if (this.logoutUrls == null) {
      this.logoutUrls = new ArrayList<>();
    }
    this.logoutUrls.add(logoutUrlsItem);
    return this;
  }

  /**
   * Get logoutUrls
   * @return logoutUrls
   */
  @javax.annotation.Nullable
  public List<String> getLogoutUrls() {
    return logoutUrls;
  }

  public void setLogoutUrls(List<String> logoutUrls) {
    this.logoutUrls = logoutUrls;
  }


  public PostAppClients name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PostAppClients postAppClients = (PostAppClients) o;
    return Objects.equals(this.callbackUrls, postAppClients.callbackUrls) &&
        Objects.equals(this.defaultLoginUrl, postAppClients.defaultLoginUrl) &&
        Objects.equals(this.description, postAppClients.description) &&
        Objects.equals(this.generateSecret, postAppClients.generateSecret) &&
        Objects.equals(this.loginUrls, postAppClients.loginUrls) &&
        Objects.equals(this.logoutUrls, postAppClients.logoutUrls) &&
        Objects.equals(this.name, postAppClients.name);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(callbackUrls, defaultLoginUrl, description, generateSecret, loginUrls, logoutUrls, name);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PostAppClients {\n");
    sb.append("    callbackUrls: ").append(toIndentedString(callbackUrls)).append("\n");
    sb.append("    defaultLoginUrl: ").append(toIndentedString(defaultLoginUrl)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    generateSecret: ").append(toIndentedString(generateSecret)).append("\n");
    sb.append("    loginUrls: ").append(toIndentedString(loginUrls)).append("\n");
    sb.append("    logoutUrls: ").append(toIndentedString(logoutUrls)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("callbackUrls");
    openapiFields.add("defaultLoginUrl");
    openapiFields.add("description");
    openapiFields.add("generateSecret");
    openapiFields.add("loginUrls");
    openapiFields.add("logoutUrls");
    openapiFields.add("name");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to PostAppClients
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!PostAppClients.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PostAppClients is not found in the empty JSON string", PostAppClients.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!PostAppClients.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PostAppClients` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the optional json data is an array if present
      if (jsonObj.get("callbackUrls") != null && !jsonObj.get("callbackUrls").isJsonNull() && !jsonObj.get("callbackUrls").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `callbackUrls` to be an array in the JSON string but got `%s`", jsonObj.get("callbackUrls").toString()));
      }
      if ((jsonObj.get("defaultLoginUrl") != null && !jsonObj.get("defaultLoginUrl").isJsonNull()) && !jsonObj.get("defaultLoginUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `defaultLoginUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("defaultLoginUrl").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("loginUrls") != null && !jsonObj.get("loginUrls").isJsonNull() && !jsonObj.get("loginUrls").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `loginUrls` to be an array in the JSON string but got `%s`", jsonObj.get("loginUrls").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("logoutUrls") != null && !jsonObj.get("logoutUrls").isJsonNull() && !jsonObj.get("logoutUrls").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `logoutUrls` to be an array in the JSON string but got `%s`", jsonObj.get("logoutUrls").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PostAppClients.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PostAppClients' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PostAppClients> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PostAppClients.class));

       return (TypeAdapter<T>) new TypeAdapter<PostAppClients>() {
           @Override
           public void write(JsonWriter out, PostAppClients value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PostAppClients read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of PostAppClients given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of PostAppClients
   * @throws IOException if the JSON string is invalid with respect to PostAppClients
   */
  public static PostAppClients fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PostAppClients.class);
  }

  /**
   * Convert an instance of PostAppClients to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

