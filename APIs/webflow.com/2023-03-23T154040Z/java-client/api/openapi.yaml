openapi: 3.0.1
info:
  title: Lucidtech API
  version: 2023-03-23T15:40:40Z
  x-logo:
    url: https://assets-global.website-files.com/5d3e265ac89f6a3e64292efc/5d5595354de4fbdd8c554dba_default_webclip.png
  x-origin:
  - format: openapi
    url: https://raw.githubusercontent.com/LucidtechAI/cradl-docs/master/static/oas.yaml
    version: "3.0"
  x-providerName: webflow.com
servers:
- url: "https://api.lucidtech.ai/{basePath}"
  variables:
    basePath:
      default: v1
paths:
  /appClients:
    get:
      parameters:
      - explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppClients'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 400 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 403 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 404 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 415 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 500 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - OAuth2:
        - api.lucidtech.ai/appclients:read
      x-accepts:
      - application/json
    options:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Empty'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Methods:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      x-content-type: application/json
      x-accepts:
      - application/json
    post:
      parameters:
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostAppClients'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppClient'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 400 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 403 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 404 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 415 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 500 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - OAuth2:
        - api.lucidtech.ai/appclients:write
      x-content-type: application/json
      x-accepts:
      - application/json
  /appClients/{appClientId}:
    delete:
      parameters:
      - explode: false
        in: path
        name: appClientId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppClient'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 400 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 403 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 404 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 415 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 500 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      security: []
      x-accepts:
      - application/json
    options:
      parameters:
      - explode: false
        in: path
        name: appClientId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Empty'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Methods:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      x-content-type: application/json
      x-accepts:
      - application/json
    patch:
      parameters:
      - explode: false
        in: path
        name: appClientId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchAppClientId'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppClient'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 400 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 403 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 404 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 415 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 500 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - OAuth2:
        - api.lucidtech.ai/appclients:write
      x-content-type: application/json
      x-accepts:
      - application/json
  /assets:
    get:
      parameters:
      - explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Assets'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 400 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 403 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 404 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 415 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 500 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - OAuth2:
        - api.lucidtech.ai/assets:read
      x-accepts:
      - application/json
    options:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Empty'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Methods:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      x-content-type: application/json
      x-accepts:
      - application/json
    post:
      parameters:
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostAssets'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Asset'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 400 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 403 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 404 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 415 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 500 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - OAuth2:
        - api.lucidtech.ai/assets:write
      x-content-type: application/json
      x-accepts:
      - application/json
  /assets/{assetId}:
    delete:
      parameters:
      - explode: false
        in: path
        name: assetId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Asset'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 400 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 403 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 404 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 415 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 500 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - OAuth2:
        - api.lucidtech.ai/assets:read
      x-accepts:
      - application/json
    get:
      parameters:
      - explode: false
        in: path
        name: assetId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Asset'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 400 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 403 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 404 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 415 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 500 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - OAuth2:
        - api.lucidtech.ai/assets:read
      x-accepts:
      - application/json
    options:
      parameters:
      - explode: false
        in: path
        name: assetId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Empty'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Methods:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      x-content-type: application/json
      x-accepts:
      - application/json
    patch:
      parameters:
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: assetId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchAssetId'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Asset'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 400 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 403 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 404 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 415 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 500 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - OAuth2:
        - api.lucidtech.ai/assets:write
      x-content-type: application/json
      x-accepts:
      - application/json
  /datasets:
    get:
      parameters:
      - explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Datasets'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 400 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 403 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 404 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 415 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 500 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - OAuth2:
        - api.lucidtech.ai/datasets:read
      x-accepts:
      - application/json
    options:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Empty'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Methods:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      x-content-type: application/json
      x-accepts:
      - application/json
    post:
      parameters:
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostDatasets'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dataset'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 400 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 403 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 404 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 415 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 500 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - OAuth2:
        - api.lucidtech.ai/datasets:write
      x-content-type: application/json
      x-accepts:
      - application/json
  /datasets/{datasetId}:
    delete:
      parameters:
      - explode: false
        in: path
        name: datasetId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dataset'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 400 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 403 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 404 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 415 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 500 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - OAuth2:
        - api.lucidtech.ai/datasets:read
      x-accepts:
      - application/json
    get:
      parameters:
      - explode: false
        in: path
        name: datasetId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dataset'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 400 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 403 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 404 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 415 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 500 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - OAuth2:
        - api.lucidtech.ai/datasets:read
      x-accepts:
      - application/json
    options:
      parameters:
      - explode: false
        in: path
        name: datasetId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Empty'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Methods:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      x-content-type: application/json
      x-accepts:
      - application/json
    patch:
      parameters:
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: datasetId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchDatasetId'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dataset'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 400 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 403 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 404 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 415 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 500 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - OAuth2:
        - api.lucidtech.ai/datasets:write
      x-content-type: application/json
      x-accepts:
      - application/json
  /deploymentEnvironments:
    get:
      parameters:
      - explode: true
        in: query
        name: owner
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentEnvironments'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 400 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 403 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 404 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 415 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 500 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - OAuth2:
        - api.lucidtech.ai/secrets:read
      x-accepts:
      - application/json
    options:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Empty'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Methods:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      x-content-type: application/json
      x-accepts:
      - application/json
  /deploymentEnvironments/{deploymentEnvironmentId}:
    get:
      parameters:
      - explode: false
        in: path
        name: deploymentEnvironmentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentEnvironment'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 400 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 403 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 404 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 415 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 500 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - OAuth2:
        - api.lucidtech.ai/organizations:read
      x-accepts:
      - application/json
    options:
      parameters:
      - explode: false
        in: path
        name: deploymentEnvironmentId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Empty'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Methods:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      x-content-type: application/json
      x-accepts:
      - application/json
  /documents:
    delete:
      parameters:
      - explode: true
        in: query
        name: consentId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: datasetId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Documents'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 400 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 403 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 404 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 415 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 500 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - OAuth2:
        - api.lucidtech.ai/documents:write
      x-accepts:
      - application/json
    get:
      parameters:
      - explode: true
        in: query
        name: datasetId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: order
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: documentId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: consentId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: sortBy
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Documents'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 400 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 403 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 404 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 415 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 500 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - OAuth2:
        - api.lucidtech.ai/documents:read
      x-accepts:
      - application/json
    options:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Empty'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Methods:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      x-content-type: application/json
      x-accepts:
      - application/json
    post:
      parameters:
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostDocuments'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 400 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 403 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 404 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 415 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 500 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - OAuth2:
        - api.lucidtech.ai/documents:write
      x-content-type: application/json
      x-accepts:
      - application/json
  /documents/{documentId}:
    delete:
      parameters:
      - explode: false
        in: path
        name: documentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 400 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 403 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 404 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 415 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 500 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - OAuth2:
        - api.lucidtech.ai/documents:read
      x-accepts:
      - application/json
    get:
      parameters:
      - explode: false
        in: path
        name: documentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 400 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 403 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 404 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 415 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 500 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - OAuth2:
        - api.lucidtech.ai/documents:read
      x-accepts:
      - application/json
    options:
      parameters:
      - explode: false
        in: path
        name: documentId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Empty'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Methods:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      x-content-type: application/json
      x-accepts:
      - application/json
    patch:
      parameters:
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: documentId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchDocumentId'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 400 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 403 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 404 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 415 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 500 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - OAuth2:
        - api.lucidtech.ai/documents:write
      x-content-type: application/json
      x-accepts:
      - application/json
  /logs:
    get:
      parameters:
      - explode: true
        in: query
        name: workflowId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: order
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: transitionExecutionId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: transitionId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: workflowExecutionId
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Logs'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 400 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 403 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 404 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 415 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 500 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - OAuth2:
        - api.lucidtech.ai/logs:read
      x-accepts:
      - application/json
    options:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Empty'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Methods:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      x-content-type: application/json
      x-accepts:
      - application/json
  /logs/{logId}:
    get:
      parameters:
      - explode: false
        in: path
        name: logId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Log'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 400 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 403 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 404 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 415 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 500 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - OAuth2:
        - api.lucidtech.ai/logs:read
      x-accepts:
      - application/json
    options:
      parameters:
      - explode: false
        in: path
        name: logId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Empty'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Methods:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      x-content-type: application/json
      x-accepts:
      - application/json
  /models:
    get:
      parameters:
      - explode: true
        in: query
        name: owner
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Models'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 400 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 403 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 404 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 415 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 500 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - OAuth2:
        - api.lucidtech.ai/models:read
      x-accepts:
      - application/json
    options:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Empty'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Methods:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      x-content-type: application/json
      x-accepts:
      - application/json
    post:
      parameters:
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostModels'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Model'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 400 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 403 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 404 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 415 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 500 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - OAuth2:
        - api.lucidtech.ai/models:write
      x-content-type: application/json
      x-accepts:
      - application/json
  /models/{modelId}:
    delete:
      parameters:
      - explode: false
        in: path
        name: modelId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Model'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 400 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 403 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 404 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 415 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 500 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - OAuth2:
        - api.lucidtech.ai/models:read
      x-accepts:
      - application/json
    get:
      parameters:
      - explode: false
        in: path
        name: modelId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Model'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 400 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 403 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 404 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 415 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 500 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - OAuth2:
        - api.lucidtech.ai/models:read
      x-accepts:
      - application/json
    options:
      parameters:
      - explode: false
        in: path
        name: modelId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Empty'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Methods:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      x-content-type: application/json
      x-accepts:
      - application/json
    patch:
      parameters:
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: modelId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchModelId'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Model'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 400 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 403 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 404 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 415 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 500 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - OAuth2:
        - api.lucidtech.ai/models:write
      x-content-type: application/json
      x-accepts:
      - application/json
  /models/{modelId}/dataBundles:
    get:
      parameters:
      - explode: false
        in: path
        name: modelId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: status
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataBundles'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 400 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 403 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 404 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 415 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 500 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - OAuth2:
        - api.lucidtech.ai/databundles:read
      x-accepts:
      - application/json
    options:
      parameters:
      - explode: false
        in: path
        name: modelId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Empty'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Methods:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      x-content-type: application/json
      x-accepts:
      - application/json
    post:
      parameters:
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: modelId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostDataBundles'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataBundle'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 400 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 403 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 404 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 415 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 500 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - OAuth2:
        - api.lucidtech.ai/databundles:write
      x-content-type: application/json
      x-accepts:
      - application/json
  /models/{modelId}/dataBundles/{dataBundleId}:
    delete:
      parameters:
      - explode: false
        in: path
        name: dataBundleId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: modelId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataBundle'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 400 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 403 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 404 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 415 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 500 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      security: []
      x-accepts:
      - application/json
    options:
      parameters:
      - explode: false
        in: path
        name: dataBundleId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: modelId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Empty'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Methods:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      x-content-type: application/json
      x-accepts:
      - application/json
    patch:
      parameters:
      - explode: false
        in: path
        name: dataBundleId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: modelId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchDataBundleId'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataBundle'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 400 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 403 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 404 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 415 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 500 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - OAuth2:
        - api.lucidtech.ai/databundles:write
      x-content-type: application/json
      x-accepts:
      - application/json
  /models/{modelId}/trainings:
    get:
      parameters:
      - explode: false
        in: path
        name: modelId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: status
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trainings'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 400 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 403 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 404 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 415 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 500 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - OAuth2:
        - api.lucidtech.ai/workflows.executions:read
      x-accepts:
      - application/json
    options:
      parameters:
      - explode: false
        in: path
        name: modelId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Empty'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Methods:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      x-content-type: application/json
      x-accepts:
      - application/json
    post:
      parameters:
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: modelId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostTrainings'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Training'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 400 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 403 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 404 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 415 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 500 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - OAuth2:
        - api.lucidtech.ai/workflows.executions:write
      x-content-type: application/json
      x-accepts:
      - application/json
  /models/{modelId}/trainings/{trainingId}:
    options:
      parameters:
      - explode: false
        in: path
        name: modelId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: trainingId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Empty'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Methods:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      x-content-type: application/json
      x-accepts:
      - application/json
    patch:
      parameters:
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: modelId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: trainingId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchTrainingId'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Training'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 400 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 403 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 404 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 415 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 500 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - OAuth2:
        - api.lucidtech.ai/predictions:write
      x-content-type: application/json
      x-accepts:
      - application/json
  /organizations:
    get:
      parameters:
      - explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organizations'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 400 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 403 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 404 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 415 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 500 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - OAuth2:
        - api.lucidtech.ai/organizations:read
      x-accepts:
      - application/json
    options:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Empty'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Methods:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      x-content-type: application/json
      x-accepts:
      - application/json
    post:
      parameters:
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostOrganizations'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 400 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 403 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 404 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 415 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 500 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - OAuth2:
        - api.lucidtech.ai/organizations:write
      x-content-type: application/json
      x-accepts:
      - application/json
  /organizations/{organizationId}:
    get:
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 400 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 403 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 404 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 415 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 500 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - OAuth2:
        - api.lucidtech.ai/organizations:read
      x-accepts:
      - application/json
    options:
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Empty'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Methods:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      x-content-type: application/json
      x-accepts:
      - application/json
    patch:
      parameters:
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchOrganizationId'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 400 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 403 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 404 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 415 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 500 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - OAuth2:
        - api.lucidtech.ai/organizations:write
      x-content-type: application/json
      x-accepts:
      - application/json
  /paymentMethods:
    get:
      parameters:
      - explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethods'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 400 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 403 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 404 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 415 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 500 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - OAuth2:
        - api.lucidtech.ai/paymentmethods:read
      x-accepts:
      - application/json
    options:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Empty'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Methods:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      x-content-type: application/json
      x-accepts:
      - application/json
    post:
      parameters:
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostPaymentMethods'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethod'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 400 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 403 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 404 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 415 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 500 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - OAuth2:
        - api.lucidtech.ai/paymentmethods:write
      x-content-type: application/json
      x-accepts:
      - application/json
  /paymentMethods/{paymentMethodId}:
    delete:
      parameters:
      - explode: false
        in: path
        name: paymentMethodId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethod'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 400 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 403 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 404 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 415 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 500 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - OAuth2:
        - api.lucidtech.ai/paymentmethods:read
      x-accepts:
      - application/json
    get:
      parameters:
      - explode: false
        in: path
        name: paymentMethodId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethod'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 400 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 403 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 404 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 415 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 500 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - OAuth2:
        - api.lucidtech.ai/paymentmethods:read
      x-accepts:
      - application/json
    options:
      parameters:
      - explode: false
        in: path
        name: paymentMethodId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Empty'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Methods:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      x-content-type: application/json
      x-accepts:
      - application/json
    patch:
      parameters:
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: paymentMethodId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchPaymentMethodId'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethod'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 400 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 403 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 404 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 415 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 500 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - OAuth2:
        - api.lucidtech.ai/paymentmethods:write
      x-content-type: application/json
      x-accepts:
      - application/json
  /plans:
    get:
      parameters:
      - explode: true
        in: query
        name: owner
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plans'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 400 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 403 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 404 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 415 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 500 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - OAuth2:
        - api.lucidtech.ai/plans:read
      x-accepts:
      - application/json
    options:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Empty'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Methods:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      x-content-type: application/json
      x-accepts:
      - application/json
  /plans/{planId}:
    get:
      parameters:
      - explode: false
        in: path
        name: planId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plan'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 400 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 403 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 404 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 415 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 500 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - OAuth2:
        - api.lucidtech.ai/plans:read
      x-accepts:
      - application/json
    options:
      parameters:
      - explode: false
        in: path
        name: planId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Empty'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Methods:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      x-content-type: application/json
      x-accepts:
      - application/json
  /predictions:
    get:
      parameters:
      - explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: sortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: order
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Predictions'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 400 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 403 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 404 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 415 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 500 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - OAuth2:
        - api.lucidtech.ai/predictions:read
      x-accepts:
      - application/json
    options:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Empty'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Methods:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      x-content-type: application/json
      x-accepts:
      - application/json
    post:
      parameters:
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostPredictions'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Prediction'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 400 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 403 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 404 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 415 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 500 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - OAuth2:
        - api.lucidtech.ai/predictions:write
      x-content-type: application/json
      x-accepts:
      - application/json
  /profiles/{profileId}:
    get:
      parameters:
      - explode: false
        in: path
        name: profileId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 400 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 403 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 404 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 415 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 500 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - OAuth2:
        - api.lucidtech.ai/assets:read
      x-accepts:
      - application/json
    options:
      parameters:
      - explode: false
        in: path
        name: profileId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Empty'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Methods:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      x-content-type: application/json
      x-accepts:
      - application/json
    patch:
      parameters:
      - explode: false
        in: path
        name: profileId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 400 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 403 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 404 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 415 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 500 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - OAuth2:
        - api.lucidtech.ai/assets:write
      x-accepts:
      - application/json
  /secrets:
    get:
      parameters:
      - explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Secrets'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 400 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 403 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 404 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 415 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 500 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - OAuth2:
        - api.lucidtech.ai/secrets:read
      x-accepts:
      - application/json
    options:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Empty'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Methods:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      x-content-type: application/json
      x-accepts:
      - application/json
    post:
      parameters:
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostSecrets'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Secret'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 400 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 403 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 404 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 415 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 500 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - OAuth2:
        - api.lucidtech.ai/secrets:write
      x-content-type: application/json
      x-accepts:
      - application/json
  /secrets/{secretId}:
    delete:
      parameters:
      - explode: false
        in: path
        name: secretId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Secret'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 400 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 403 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 404 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 415 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 500 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      security: []
      x-accepts:
      - application/json
    options:
      parameters:
      - explode: false
        in: path
        name: secretId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Empty'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Methods:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      x-content-type: application/json
      x-accepts:
      - application/json
    patch:
      parameters:
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: secretId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchSecretId'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Secret'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 400 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 403 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 404 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 415 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 500 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - OAuth2:
        - api.lucidtech.ai/secrets:write
      x-content-type: application/json
      x-accepts:
      - application/json
  /transitions:
    get:
      parameters:
      - explode: true
        in: query
        name: transitionType
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transitions'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 400 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 403 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 404 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 415 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 500 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - OAuth2:
        - api.lucidtech.ai/transitions:read
      x-accepts:
      - application/json
    options:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Empty'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Methods:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      x-content-type: application/json
      x-accepts:
      - application/json
    post:
      parameters:
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostTransitions'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transition'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 400 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 403 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 404 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 415 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 500 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - OAuth2:
        - api.lucidtech.ai/transitions:write
      x-content-type: application/json
      x-accepts:
      - application/json
  /transitions/{transitionId}:
    delete:
      parameters:
      - explode: false
        in: path
        name: transitionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transition'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 400 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 403 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 404 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 415 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 500 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - OAuth2:
        - api.lucidtech.ai/transitions:read
      x-accepts:
      - application/json
    get:
      parameters:
      - explode: false
        in: path
        name: transitionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transition'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 400 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 403 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 404 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 415 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 500 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - OAuth2:
        - api.lucidtech.ai/transitions:read
      x-accepts:
      - application/json
    options:
      parameters:
      - explode: false
        in: path
        name: transitionId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Empty'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Methods:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      x-content-type: application/json
      x-accepts:
      - application/json
    patch:
      parameters:
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: transitionId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchTransitionId'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transition'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 400 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 403 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 404 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 415 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 500 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - OAuth2:
        - api.lucidtech.ai/transitions:write
      x-content-type: application/json
      x-accepts:
      - application/json
  /transitions/{transitionId}/executions:
    get:
      parameters:
      - explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: order
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: executionId
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: transitionId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: status
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: sortBy
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransitionExecutions'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 400 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 403 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 404 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 415 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 500 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - OAuth2:
        - api.lucidtech.ai/transitions.executions:read
      x-accepts:
      - application/json
    options:
      parameters:
      - explode: false
        in: path
        name: transitionId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Empty'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Methods:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      x-content-type: application/json
      x-accepts:
      - application/json
    post:
      parameters:
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: transitionId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostTransitionExecution'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransitionExecution'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 400 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 403 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 404 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 415 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 500 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - OAuth2:
        - api.lucidtech.ai/transitions.executions:write
      x-content-type: application/json
      x-accepts:
      - application/json
  /transitions/{transitionId}/executions/{executionId}:
    get:
      parameters:
      - explode: false
        in: path
        name: transitionId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransitionExecution'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 400 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 403 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 404 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 415 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 500 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - OAuth2:
        - api.lucidtech.ai/transitions.executions:read
      x-accepts:
      - application/json
    options:
      parameters:
      - explode: false
        in: path
        name: transitionId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Empty'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Methods:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      x-content-type: application/json
      x-accepts:
      - application/json
    patch:
      parameters:
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: transitionId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchTransistionExecutionId'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransitionExecution'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 400 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 403 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 404 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 415 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 500 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - OAuth2:
        - api.lucidtech.ai/transitions.executions:write
      x-content-type: application/json
      x-accepts:
      - application/json
  /transitions/{transitionId}/executions/{executionId}/heartbeats:
    options:
      parameters:
      - explode: false
        in: path
        name: transitionId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Empty'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Methods:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      x-content-type: application/json
      x-accepts:
      - application/json
    post:
      parameters:
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: transitionId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostHeartbeats'
        required: true
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: 204 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 400 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 403 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 404 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 415 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 500 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - OAuth2:
        - api.lucidtech.ai/transitions.executions.heartbeats:write
      x-content-type: application/json
      x-accepts:
      - application/json
  /users:
    get:
      parameters:
      - explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Users'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 400 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 403 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 404 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 415 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 500 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - OAuth2:
        - api.lucidtech.ai/users:read
      x-accepts:
      - application/json
    options:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Empty'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Methods:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      x-content-type: application/json
      x-accepts:
      - application/json
    post:
      parameters:
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostUsers'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 400 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 403 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 404 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 415 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 500 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - OAuth2:
        - api.lucidtech.ai/users:write
      x-content-type: application/json
      x-accepts:
      - application/json
  /users/{userId}:
    delete:
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 400 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 403 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 404 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 415 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 500 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - OAuth2:
        - api.lucidtech.ai/users:read
      x-accepts:
      - application/json
    get:
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 400 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 403 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 404 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 415 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 500 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - OAuth2:
        - api.lucidtech.ai/users:read
      x-accepts:
      - application/json
    options:
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Empty'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Methods:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      x-content-type: application/json
      x-accepts:
      - application/json
    patch:
      parameters:
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchUserId'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 400 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 403 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 404 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 415 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 500 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - OAuth2:
        - api.lucidtech.ai/users:write
      x-content-type: application/json
      x-accepts:
      - application/json
  /workflows:
    get:
      parameters:
      - explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workflows'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 400 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 403 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 404 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 415 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 500 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - OAuth2:
        - api.lucidtech.ai/workflows:read
      x-accepts:
      - application/json
    options:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Empty'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Methods:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      x-content-type: application/json
      x-accepts:
      - application/json
    post:
      parameters:
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostWorkflows'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workflow'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 400 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 403 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 404 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 415 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 500 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - OAuth2:
        - api.lucidtech.ai/workflows:write
      x-content-type: application/json
      x-accepts:
      - application/json
  /workflows/{workflowId}:
    delete:
      parameters:
      - explode: false
        in: path
        name: workflowId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workflow'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 400 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 403 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 404 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 415 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 500 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - OAuth2:
        - api.lucidtech.ai/workflows:read
      x-accepts:
      - application/json
    get:
      parameters:
      - explode: false
        in: path
        name: workflowId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workflow'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 400 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 403 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 404 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 415 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 500 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - OAuth2:
        - api.lucidtech.ai/workflows:read
      x-accepts:
      - application/json
    options:
      parameters:
      - explode: false
        in: path
        name: workflowId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Empty'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Methods:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      x-content-type: application/json
      x-accepts:
      - application/json
    patch:
      parameters:
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: workflowId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchWorkflowId'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workflow'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 400 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 403 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 404 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 415 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 500 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - OAuth2:
        - api.lucidtech.ai/workflows:write
      x-content-type: application/json
      x-accepts:
      - application/json
  /workflows/{workflowId}/executions:
    get:
      parameters:
      - explode: true
        in: query
        name: fromStartTime
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: toStartTime
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: workflowId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: order
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: status
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: sortBy
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowExecutions'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 400 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 403 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 404 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 415 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 500 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - OAuth2:
        - api.lucidtech.ai/workflows.executions:read
      x-accepts:
      - application/json
    options:
      parameters:
      - explode: false
        in: path
        name: workflowId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Empty'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Methods:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      x-content-type: application/json
      x-accepts:
      - application/json
    post:
      parameters:
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: workflowId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostWorkflowExecutions'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowExecution'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 400 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 403 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 404 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 415 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 500 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - OAuth2:
        - api.lucidtech.ai/workflows.executions:write
      x-content-type: application/json
      x-accepts:
      - application/json
  /workflows/{workflowId}/executions/{executionId}:
    delete:
      parameters:
      - explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: workflowId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowExecution'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 400 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 403 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 404 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 415 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 500 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - OAuth2:
        - api.lucidtech.ai/workflows.executions:read
      x-accepts:
      - application/json
    get:
      parameters:
      - explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: workflowId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowExecution'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 400 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 403 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 404 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 415 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 500 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - OAuth2:
        - api.lucidtech.ai/workflows.executions:read
      x-accepts:
      - application/json
    options:
      parameters:
      - explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: workflowId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Empty'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Methods:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      x-content-type: application/json
      x-accepts:
      - application/json
    patch:
      parameters:
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: workflowId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchWorkflowExecutionId'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowExecution'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 400 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 403 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 404 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 415 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: 500 response
          headers:
            Access-Control-Allow-Headers:
              explode: false
              schema:
                type: string
              style: simple
            Access-Control-Allow-Origin:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - OAuth2:
        - api.lucidtech.ai/workflows.executions:write
      x-content-type: application/json
      x-accepts:
      - application/json
components:
  schemas:
    AppClient:
      additionalProperties: false
      example:
        hasSecret: true
        updatedTime: updatedTime
        clientId: clientId
        updatedBy: updatedBy
        logoutUrls:
        - logoutUrls
        - logoutUrls
        callbackUrls:
        - callbackUrls
        - callbackUrls
        description: description
        loginUrls:
        - loginUrls
        - loginUrls
        defaultLoginUrl: defaultLoginUrl
        createdBy: createdBy
        name: name
        createdTime: createdTime
        clientSecret: clientSecret
        appClientId: appClientId
      properties:
        appClientId:
          pattern: "^las:app-client:[a-z0-9-_]+$"
          type: string
        callbackUrls:
          items:
            pattern: ^http://localhost.*|^https://.*
            type: string
          nullable: true
          type: array
        clientId:
          type: string
        clientSecret:
          type: string
        createdBy:
          maxLength: 4096
          nullable: true
          type: string
        createdTime:
          nullable: true
          pattern: "^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$"
          type: string
        defaultLoginUrl:
          nullable: true
          pattern: ^http://localhost.*|^https://.*
          type: string
        description:
          maxLength: 4096
          nullable: true
          type: string
        hasSecret:
          type: boolean
        loginUrls:
          items:
            pattern: ^http://localhost.*|^https://.*
            type: string
          nullable: true
          type: array
        logoutUrls:
          items:
            pattern: ^http://localhost.*|^https://.*
            type: string
          nullable: true
          type: array
        name:
          maxLength: 4096
          nullable: true
          type: string
        updatedBy:
          maxLength: 4096
          nullable: true
          type: string
        updatedTime:
          nullable: true
          pattern: "^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$"
          type: string
      required:
      - appClientId
      - callbackUrls
      - clientId
      - createdBy
      - createdTime
      - defaultLoginUrl
      - description
      - hasSecret
      - loginUrls
      - logoutUrls
      - name
      - updatedBy
      - updatedTime
      title: appClient
      type: object
    AppClients:
      additionalProperties: false
      example:
        nextToken: nextToken
        appClients:
        - hasSecret: true
          updatedTime: updatedTime
          clientId: clientId
          updatedBy: updatedBy
          logoutUrls:
          - logoutUrls
          - logoutUrls
          callbackUrls:
          - callbackUrls
          - callbackUrls
          description: description
          loginUrls:
          - loginUrls
          - loginUrls
          defaultLoginUrl: defaultLoginUrl
          createdBy: createdBy
          name: name
          createdTime: createdTime
          clientSecret: clientSecret
          appClientId: appClientId
        - hasSecret: true
          updatedTime: updatedTime
          clientId: clientId
          updatedBy: updatedBy
          logoutUrls:
          - logoutUrls
          - logoutUrls
          callbackUrls:
          - callbackUrls
          - callbackUrls
          description: description
          loginUrls:
          - loginUrls
          - loginUrls
          defaultLoginUrl: defaultLoginUrl
          createdBy: createdBy
          name: name
          createdTime: createdTime
          clientSecret: clientSecret
          appClientId: appClientId
      properties:
        appClients:
          items:
            $ref: '#/components/schemas/AppClients_appClients_inner'
          type: array
        nextToken:
          maxLength: 4096
          nullable: true
          type: string
      required:
      - appClients
      - nextToken
      title: appClients
      type: object
    Asset:
      additionalProperties: false
      example:
        contentMD5: contentMD5
        updatedTime: updatedTime
        updatedBy: updatedBy
        createdBy: createdBy
        assetId: assetId
        name: name
        createdTime: createdTime
        description: description
        content: content
      properties:
        assetId:
          pattern: "^las:asset:[a-f0-9]{32}$"
          type: string
        content:
          minLength: 1
          type: string
        contentMD5:
          maxLength: 4096
          nullable: true
          type: string
        createdBy:
          maxLength: 4096
          nullable: true
          type: string
        createdTime:
          nullable: true
          pattern: "^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$"
          type: string
        description:
          maxLength: 4096
          nullable: true
          type: string
        name:
          maxLength: 4096
          nullable: true
          type: string
        updatedBy:
          maxLength: 4096
          nullable: true
          type: string
        updatedTime:
          nullable: true
          pattern: "^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$"
          type: string
      required:
      - assetId
      - contentMD5
      - createdBy
      - createdTime
      - description
      - name
      - updatedBy
      - updatedTime
      title: asset
      type: object
    Assets:
      additionalProperties: false
      example:
        assets:
        - contentMD5: contentMD5
          updatedTime: updatedTime
          updatedBy: updatedBy
          createdBy: createdBy
          assetId: assetId
          name: name
          createdTime: createdTime
          description: description
          content: content
        - contentMD5: contentMD5
          updatedTime: updatedTime
          updatedBy: updatedBy
          createdBy: createdBy
          assetId: assetId
          name: name
          createdTime: createdTime
          description: description
          content: content
        nextToken: nextToken
      properties:
        assets:
          items:
            $ref: '#/components/schemas/Assets_assets_inner'
          type: array
        nextToken:
          maxLength: 4096
          nullable: true
          type: string
      required:
      - assets
      - nextToken
      title: assets
      type: object
    DataBundle:
      additionalProperties: false
      example:
        summary: "{}"
        updatedTime: updatedTime
        retentionInDays: 1
        updatedBy: updatedBy
        createdBy: createdBy
        modelId: modelId
        dataBundleId: dataBundleId
        name: name
        createdTime: createdTime
        description: description
        datasets:
        - updatedTime: updatedTime
          metadata: "{}"
          retentionInDays: 1100
          updatedBy: updatedBy
          groundTruthSummary: "{}"
          description: description
          storageLocation: EU
          version: 0
          createdBy: createdBy
          numberOfDocuments: 0
          name: name
          createdTime: createdTime
          datasetId: datasetId
          containsPersonallyIdentifiableInformation: true
        - updatedTime: updatedTime
          metadata: "{}"
          retentionInDays: 1100
          updatedBy: updatedBy
          groundTruthSummary: "{}"
          description: description
          storageLocation: EU
          version: 0
          createdBy: createdBy
          numberOfDocuments: 0
          name: name
          createdTime: createdTime
          datasetId: datasetId
          containsPersonallyIdentifiableInformation: true
        status: running
      properties:
        createdBy:
          maxLength: 4096
          nullable: true
          type: string
        createdTime:
          nullable: true
          pattern: "^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$"
          type: string
        dataBundleId:
          pattern: "^las:model-data-bundle:[a-f0-9]{32}$"
          type: string
        datasets:
          items:
            $ref: '#/components/schemas/DataBundle_datasets_inner'
          type: array
        description:
          maxLength: 4096
          nullable: true
          type: string
        modelId:
          pattern: "^las:model:[a-z0-9-_]+$"
          type: string
        name:
          maxLength: 4096
          nullable: true
          type: string
        retentionInDays:
          minimum: 1
          type: integer
        status:
          enum:
          - running
          - succeeded
          - failed
          type: string
        summary:
          nullable: true
          type: object
        updatedBy:
          maxLength: 4096
          nullable: true
          type: string
        updatedTime:
          nullable: true
          pattern: "^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$"
          type: string
      required:
      - createdBy
      - createdTime
      - dataBundleId
      - datasets
      - description
      - modelId
      - name
      - status
      - summary
      - updatedBy
      - updatedTime
      title: dataBundle
      type: object
    DataBundles:
      additionalProperties: false
      example:
        nextToken: nextToken
        dataBundles:
        - summary: "{}"
          updatedTime: updatedTime
          retentionInDays: 1
          updatedBy: updatedBy
          createdBy: createdBy
          modelId: modelId
          dataBundleId: dataBundleId
          name: name
          createdTime: createdTime
          description: description
          datasets:
          - updatedTime: updatedTime
            metadata: "{}"
            retentionInDays: 1100
            updatedBy: updatedBy
            groundTruthSummary: "{}"
            description: description
            storageLocation: EU
            version: 0
            createdBy: createdBy
            numberOfDocuments: 0
            name: name
            createdTime: createdTime
            datasetId: datasetId
            containsPersonallyIdentifiableInformation: true
          - updatedTime: updatedTime
            metadata: "{}"
            retentionInDays: 1100
            updatedBy: updatedBy
            groundTruthSummary: "{}"
            description: description
            storageLocation: EU
            version: 0
            createdBy: createdBy
            numberOfDocuments: 0
            name: name
            createdTime: createdTime
            datasetId: datasetId
            containsPersonallyIdentifiableInformation: true
          status: running
        - summary: "{}"
          updatedTime: updatedTime
          retentionInDays: 1
          updatedBy: updatedBy
          createdBy: createdBy
          modelId: modelId
          dataBundleId: dataBundleId
          name: name
          createdTime: createdTime
          description: description
          datasets:
          - updatedTime: updatedTime
            metadata: "{}"
            retentionInDays: 1100
            updatedBy: updatedBy
            groundTruthSummary: "{}"
            description: description
            storageLocation: EU
            version: 0
            createdBy: createdBy
            numberOfDocuments: 0
            name: name
            createdTime: createdTime
            datasetId: datasetId
            containsPersonallyIdentifiableInformation: true
          - updatedTime: updatedTime
            metadata: "{}"
            retentionInDays: 1100
            updatedBy: updatedBy
            groundTruthSummary: "{}"
            description: description
            storageLocation: EU
            version: 0
            createdBy: createdBy
            numberOfDocuments: 0
            name: name
            createdTime: createdTime
            datasetId: datasetId
            containsPersonallyIdentifiableInformation: true
          status: running
        status:
        - running
        - running
      properties:
        dataBundles:
          items:
            $ref: '#/components/schemas/DataBundles_dataBundles_inner'
          type: array
        nextToken:
          maxLength: 4096
          nullable: true
          type: string
        status:
          items:
            enum:
            - running
            - succeeded
            - failed
            type: string
          type: array
      required:
      - dataBundles
      - nextToken
      title: dataBundles
      type: object
    Dataset:
      additionalProperties: false
      example:
        updatedTime: updatedTime
        metadata: "{}"
        retentionInDays: 1100
        updatedBy: updatedBy
        groundTruthSummary: "{}"
        description: description
        storageLocation: EU
        version: 0
        createdBy: createdBy
        numberOfDocuments: 0
        name: name
        createdTime: createdTime
        datasetId: datasetId
        containsPersonallyIdentifiableInformation: true
      properties:
        containsPersonallyIdentifiableInformation:
          type: boolean
        createdBy:
          maxLength: 4096
          nullable: true
          type: string
        createdTime:
          nullable: true
          pattern: "^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$"
          type: string
        datasetId:
          pattern: "^las:dataset:[a-f0-9]{32}$"
          type: string
        description:
          maxLength: 4096
          nullable: true
          type: string
        groundTruthSummary:
          type: object
        metadata:
          nullable: true
          type: object
        name:
          maxLength: 4096
          nullable: true
          type: string
        numberOfDocuments:
          minimum: 0
          type: integer
        retentionInDays:
          maximum: 1825
          minimum: 0
          type: integer
        storageLocation:
          enum:
          - EU
          type: string
        updatedBy:
          maxLength: 4096
          nullable: true
          type: string
        updatedTime:
          nullable: true
          pattern: "^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$"
          type: string
        version:
          minimum: 0
          type: integer
      required:
      - containsPersonallyIdentifiableInformation
      - createdBy
      - createdTime
      - datasetId
      - description
      - groundTruthSummary
      - metadata
      - numberOfDocuments
      - retentionInDays
      - storageLocation
      - updatedBy
      - updatedTime
      - version
      title: dataset
      type: object
    Datasets:
      additionalProperties: false
      example:
        nextToken: nextToken
        datasets:
        - updatedTime: updatedTime
          metadata: "{}"
          retentionInDays: 1100
          updatedBy: updatedBy
          groundTruthSummary: "{}"
          description: description
          storageLocation: EU
          version: 0
          createdBy: createdBy
          numberOfDocuments: 0
          name: name
          createdTime: createdTime
          datasetId: datasetId
          containsPersonallyIdentifiableInformation: true
        - updatedTime: updatedTime
          metadata: "{}"
          retentionInDays: 1100
          updatedBy: updatedBy
          groundTruthSummary: "{}"
          description: description
          storageLocation: EU
          version: 0
          createdBy: createdBy
          numberOfDocuments: 0
          name: name
          createdTime: createdTime
          datasetId: datasetId
          containsPersonallyIdentifiableInformation: true
      properties:
        datasets:
          items:
            $ref: '#/components/schemas/Datasets_datasets_inner'
          type: array
        nextToken:
          maxLength: 4096
          nullable: true
          type: string
      required:
      - datasets
      - nextToken
      title: datasets
      type: object
    DeploymentEnvironment:
      additionalProperties: false
      example:
        organizationId: organizationId
        deploymentEnvironmentId: deploymentEnvironmentId
        name: name
        description: description
        modelDeploymentUnits: 0
        status: available
      properties:
        deploymentEnvironmentId:
          pattern: "^las:deployment-environment:[a-z0-9-_]+(|:@[a-z0-9-_]+|:[0-9]+)$"
          type: string
        description:
          maxLength: 4096
          nullable: true
          type: string
        modelDeploymentUnits:
          minimum: 0
          type: integer
        name:
          maxLength: 4096
          nullable: true
          type: string
        organizationId:
          nullable: true
          pattern: "^las:organization:[a-z0-9-_]+$"
          type: string
        status:
          enum:
          - available
          - unavailable
          type: string
      required:
      - deploymentEnvironmentId
      - description
      - modelDeploymentUnits
      - name
      - organizationId
      - status
      title: deploymentEnvironment
      type: object
    DeploymentEnvironments:
      additionalProperties: false
      example:
        nextToken: nextToken
        deploymentEnvironments:
        - organizationId: organizationId
          deploymentEnvironmentId: deploymentEnvironmentId
          name: name
          description: description
          modelDeploymentUnits: 0
          status: available
        - organizationId: organizationId
          deploymentEnvironmentId: deploymentEnvironmentId
          name: name
          description: description
          modelDeploymentUnits: 0
          status: available
      properties:
        deploymentEnvironments:
          items:
            $ref: '#/components/schemas/DeploymentEnvironments_deploymentEnvironments_inner'
          type: array
        nextToken:
          maxLength: 4096
          nullable: true
          type: string
      required:
      - deploymentEnvironments
      - nextToken
      title: deploymentEnvironments
      type: object
    Document:
      additionalProperties: false
      example:
        contentMD5: contentMD5
        updatedTime: updatedTime
        metadata: "{}"
        retentionInDays: 1
        updatedBy: updatedBy
        description: description
        content: content
        groundTruth:
        - label: label
          value: Document_groundTruth_inner_value
        - label: label
          value: Document_groundTruth_inner_value
        consentId: consentId
        createdBy: createdBy
        name: name
        createdTime: createdTime
        datasetId: datasetId
        documentId: documentId
        contentType: application/pdf
      properties:
        consentId:
          pattern: "^las:consent:[a-f0-9]{32}$"
          type: string
        content:
          minLength: 1
          type: string
        contentMD5:
          maxLength: 4096
          nullable: true
          type: string
        contentType:
          enum:
          - application/pdf
          - image/jpeg
          - image/png
          - image/tiff
          type: string
        createdBy:
          maxLength: 4096
          nullable: true
          type: string
        createdTime:
          nullable: true
          pattern: "^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$"
          type: string
        datasetId:
          pattern: "^las:dataset:[a-f0-9]{32}$"
          type: string
        description:
          maxLength: 4096
          nullable: true
          type: string
        documentId:
          pattern: "^las:document:[a-f0-9]{32}$"
          type: string
        groundTruth:
          items:
            $ref: '#/components/schemas/Document_groundTruth_inner'
          type: array
        metadata:
          nullable: true
          type: object
        name:
          maxLength: 4096
          nullable: true
          type: string
        retentionInDays:
          minimum: 1
          type: integer
        updatedBy:
          maxLength: 4096
          nullable: true
          type: string
        updatedTime:
          nullable: true
          pattern: "^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$"
          type: string
      required:
      - contentMD5
      - contentType
      - createdBy
      - createdTime
      - description
      - documentId
      - metadata
      - name
      - retentionInDays
      - updatedBy
      - updatedTime
      title: document
      type: object
    Documents:
      additionalProperties: false
      example:
        consentId:
        - consentId
        - consentId
        documents:
        - contentMD5: contentMD5
          updatedTime: updatedTime
          metadata: "{}"
          retentionInDays: 1
          updatedBy: updatedBy
          description: description
          content: content
          groundTruth:
          - label: label
            value: Document_groundTruth_inner_value
          - label: label
            value: Document_groundTruth_inner_value
          consentId: consentId
          createdBy: createdBy
          name: name
          createdTime: createdTime
          datasetId: datasetId
          documentId: documentId
          contentType: application/pdf
        - contentMD5: contentMD5
          updatedTime: updatedTime
          metadata: "{}"
          retentionInDays: 1
          updatedBy: updatedBy
          description: description
          content: content
          groundTruth:
          - label: label
            value: Document_groundTruth_inner_value
          - label: label
            value: Document_groundTruth_inner_value
          consentId: consentId
          createdBy: createdBy
          name: name
          createdTime: createdTime
          datasetId: datasetId
          documentId: documentId
          contentType: application/pdf
        nextToken: nextToken
        datasetId:
        - datasetId
        - datasetId
        sortBy: createdTime
        order: ascending
      properties:
        consentId:
          items:
            pattern: "^las:consent:[a-f0-9]{32}$"
            type: string
          type: array
        datasetId:
          items:
            pattern: "^las:dataset:[a-f0-9]{32}$"
            type: string
          type: array
        documents:
          items:
            $ref: '#/components/schemas/Documents_documents_inner'
          type: array
        nextToken:
          maxLength: 4096
          nullable: true
          type: string
        order:
          enum:
          - ascending
          - descending
          type: string
        sortBy:
          enum:
          - createdTime
          type: string
      required:
      - documents
      - nextToken
      title: documents
      type: object
    Empty:
      title: Empty Schema
      type: object
    Error:
      example:
        message: message
      properties:
        message:
          type: string
      title: Error Schema
      type: object
    Log:
      additionalProperties: false
      example:
        transitionId: Log_transitionId
        transitionExecutionId: transitionExecutionId
        logId: logId
        startTime: startTime
        workflowExecutionId: workflowExecutionId
        events:
        - "{}"
        - "{}"
        workflowId: workflowId
      properties:
        events:
          items:
            type: object
          type: array
        logId:
          pattern: "^las:log:[a-f0-9]{32}$"
          type: string
        startTime:
          nullable: true
          pattern: "^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$"
          type: string
        transitionExecutionId:
          nullable: true
          pattern: "^las:transition-execution:[a-f0-9]{32}$"
          type: string
        transitionId:
          $ref: '#/components/schemas/Log_transitionId'
        workflowExecutionId:
          nullable: true
          pattern: "^las:workflow-execution:[a-f0-9]{32}$"
          type: string
        workflowId:
          nullable: true
          pattern: "^las:workflow:[a-f0-9]{32}$"
          type: string
      required:
      - logId
      - startTime
      - transitionExecutionId
      - transitionId
      - workflowExecutionId
      - workflowId
      title: log
      type: object
    Logs:
      additionalProperties: false
      example:
        transitionId: Logs_transitionId
        nextToken: nextToken
        transitionExecutionId: transitionExecutionId
        workflowExecutionId: workflowExecutionId
        logs:
        - transitionId: Log_transitionId
          transitionExecutionId: transitionExecutionId
          logId: logId
          startTime: startTime
          workflowExecutionId: workflowExecutionId
          events:
          - "{}"
          - "{}"
          workflowId: workflowId
        - transitionId: Log_transitionId
          transitionExecutionId: transitionExecutionId
          logId: logId
          startTime: startTime
          workflowExecutionId: workflowExecutionId
          events:
          - "{}"
          - "{}"
          workflowId: workflowId
        workflowId: workflowId
        order: ascending
      properties:
        logs:
          items:
            $ref: '#/components/schemas/Logs_logs_inner'
          type: array
        nextToken:
          maxLength: 4096
          nullable: true
          type: string
        order:
          enum:
          - ascending
          - descending
          type: string
        transitionExecutionId:
          pattern: "^las:transition-execution:[a-f0-9]{32}$"
          type: string
        transitionId:
          $ref: '#/components/schemas/Logs_transitionId'
        workflowExecutionId:
          pattern: "^las:workflow-execution:[a-f0-9]{32}$"
          type: string
        workflowId:
          pattern: "^las:workflow:[a-f0-9]{32}$"
          type: string
      required:
      - logs
      - nextToken
      title: logs
      type: object
    Model:
      additionalProperties: false
      example:
        updatedTime: updatedTime
        metadata: "{}"
        updatedBy: updatedBy
        trainingId: trainingId
        modelId: modelId
        postprocessConfig:
          strategy: BEST_FIRST
        description: description
        fieldConfig:
          key:
            description: description
            type: amount
            enum:
            - enum
            - enum
            - enum
            - enum
            - enum
            maxLength: 41
        organizationId: organizationId
        preprocessConfig:
          maxPages: 2
          autoRotate: true
          imageQuality: LOW
        createdBy: createdBy
        numberOfRunningTrainings: 0
        name: name
        numberOfDataBundles: 0
        createdTime: createdTime
        status: active
      properties:
        createdBy:
          maxLength: 4096
          nullable: true
          type: string
        createdTime:
          nullable: true
          pattern: "^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$"
          type: string
        description:
          maxLength: 4096
          nullable: true
          type: string
        fieldConfig:
          additionalProperties:
            $ref: '#/components/schemas/Model_fieldConfig_value'
          nullable: true
          type: object
        metadata:
          nullable: true
          type: object
        modelId:
          pattern: "^las:model:[a-z0-9-_]+$"
          type: string
        name:
          maxLength: 4096
          nullable: true
          type: string
        numberOfDataBundles:
          minimum: 0
          type: integer
        numberOfRunningTrainings:
          minimum: 0
          type: integer
        organizationId:
          pattern: "^las:organization:[a-z0-9-_]+$"
          type: string
        postprocessConfig:
          $ref: '#/components/schemas/Model_postprocessConfig'
        preprocessConfig:
          $ref: '#/components/schemas/Model_preprocessConfig'
        status:
          enum:
          - active
          - inactive
          type: string
        trainingId:
          nullable: true
          pattern: "^las:model-training:[a-f0-9]{32}$"
          type: string
        updatedBy:
          maxLength: 4096
          nullable: true
          type: string
        updatedTime:
          nullable: true
          pattern: "^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$"
          type: string
      required:
      - createdBy
      - createdTime
      - description
      - fieldConfig
      - metadata
      - modelId
      - name
      - numberOfDataBundles
      - numberOfRunningTrainings
      - organizationId
      - preprocessConfig
      - status
      - trainingId
      - updatedBy
      - updatedTime
      title: model
      type: object
    Models:
      additionalProperties: false
      example:
        models:
        - updatedTime: updatedTime
          metadata: "{}"
          updatedBy: updatedBy
          trainingId: trainingId
          modelId: modelId
          postprocessConfig:
            strategy: BEST_FIRST
          description: description
          fieldConfig:
            key:
              description: description
              type: amount
              enum:
              - enum
              - enum
              - enum
              - enum
              - enum
              maxLength: 41
          organizationId: organizationId
          preprocessConfig:
            maxPages: 2
            autoRotate: true
            imageQuality: LOW
          createdBy: createdBy
          numberOfRunningTrainings: 0
          name: name
          numberOfDataBundles: 0
          createdTime: createdTime
          status: active
        - updatedTime: updatedTime
          metadata: "{}"
          updatedBy: updatedBy
          trainingId: trainingId
          modelId: modelId
          postprocessConfig:
            strategy: BEST_FIRST
          description: description
          fieldConfig:
            key:
              description: description
              type: amount
              enum:
              - enum
              - enum
              - enum
              - enum
              - enum
              maxLength: 41
          organizationId: organizationId
          preprocessConfig:
            maxPages: 2
            autoRotate: true
            imageQuality: LOW
          createdBy: createdBy
          numberOfRunningTrainings: 0
          name: name
          numberOfDataBundles: 0
          createdTime: createdTime
          status: active
        nextToken: nextToken
      properties:
        models:
          items:
            $ref: '#/components/schemas/Models_models_inner'
          type: array
        nextToken:
          maxLength: 4096
          nullable: true
          type: string
      required:
      - models
      - nextToken
      title: models
      type: object
    Organization:
      additionalProperties: false
      example:
        numberOfWorkflowsCreated: 0
        monthlyNumberOfFieldPredictionsUsed: 0
        monthlyNumberOfWorkflowExecutionsCreated: 0
        description: description
        deploymentsAllowed: "{}"
        numberOfUsersAllowed: 0
        monthlyNumberOfPredictionsAllowed: 0
        monthlyNumberOfDataBundlesAllowed: 0
        numberOfDatasetsAllowed: 0
        numberOfModelsCreated: 0
        organizationId: organizationId
        monthlyNumberOfTransitionExecutionsAllowed: 0
        numberOfTransitionsCreated: 0
        monthlyNumberOfDocumentsAllowed: 0
        numberOfSecretsAllowed: 0
        monthlyNumberOfTrainingsCreated: 0
        paymentMethodId: paymentMethodId
        planId: planId
        monthlyNumberOfModelDeploymentUnitsUsed: 0
        monthlyUsageSummary: "{}"
        numberOfAppClientsCreated: 0
        numberOfAssetsCreated: 0
        updatedTime: updatedTime
        deploymentsCreated: "{}"
        monthlyNumberOfGpuHoursUsed: 0.3616076749251911
        numberOfWorkflowsAllowed: 0
        clientId: clientId
        updatedBy: updatedBy
        monthlyNumberOfWorkflowExecutionsAllowed: 0
        monthlyNumberOfActiveModelsUsed: 0
        documentRetentionInDays: 1
        monthlyNumberOfDataBundlesCreated: 0
        monthlyNumberOfPredictionsCreated: 0
        numberOfUsersCreated: 0
        numberOfDatasetsCreated: 0
        monthlyNumberOfTransitionExecutionsCreated: 0
        numberOfTransitionsAllowed: 0
        monthlyNumberOfDocumentsCreated: 0
        numberOfModelsAllowed: 0
        numberOfSecretsCreated: 0
        monthlyNumberOfTrainingsAllowed: 0
        monthlyNumberOfFieldPredictionsAllowed: 0
        name: name
        numberOfAppClientsAllowed: 0
        numberOfAssetsAllowed: 0
      properties:
        clientId:
          nullable: true
          pattern: "^[0-9a-z]+$"
          type: string
        deploymentsAllowed:
          type: object
        deploymentsCreated:
          type: object
        description:
          maxLength: 4096
          nullable: true
          type: string
        documentRetentionInDays:
          minimum: 1
          type: integer
        monthlyNumberOfActiveModelsUsed:
          minimum: 0
          type: integer
        monthlyNumberOfDataBundlesAllowed:
          minimum: 0
          type: integer
        monthlyNumberOfDataBundlesCreated:
          minimum: 0
          type: integer
        monthlyNumberOfDocumentsAllowed:
          minimum: 0
          type: integer
        monthlyNumberOfDocumentsCreated:
          minimum: 0
          type: integer
        monthlyNumberOfFieldPredictionsAllowed:
          minimum: 0
          type: integer
        monthlyNumberOfFieldPredictionsUsed:
          minimum: 0
          type: integer
        monthlyNumberOfGpuHoursUsed:
          minimum: 0
          type: number
        monthlyNumberOfModelDeploymentUnitsUsed:
          minimum: 0
          type: integer
        monthlyNumberOfPredictionsAllowed:
          minimum: 0
          type: integer
        monthlyNumberOfPredictionsCreated:
          minimum: 0
          type: integer
        monthlyNumberOfTrainingsAllowed:
          minimum: 0
          type: integer
        monthlyNumberOfTrainingsCreated:
          minimum: 0
          type: integer
        monthlyNumberOfTransitionExecutionsAllowed:
          minimum: 0
          type: integer
        monthlyNumberOfTransitionExecutionsCreated:
          minimum: 0
          type: integer
        monthlyNumberOfWorkflowExecutionsAllowed:
          minimum: 0
          type: integer
        monthlyNumberOfWorkflowExecutionsCreated:
          minimum: 0
          type: integer
        monthlyUsageSummary:
          type: object
        name:
          maxLength: 4096
          nullable: true
          type: string
        numberOfAppClientsAllowed:
          minimum: 0
          type: integer
        numberOfAppClientsCreated:
          minimum: 0
          type: integer
        numberOfAssetsAllowed:
          minimum: 0
          type: integer
        numberOfAssetsCreated:
          minimum: 0
          type: integer
        numberOfDatasetsAllowed:
          minimum: 0
          type: integer
        numberOfDatasetsCreated:
          minimum: 0
          type: integer
        numberOfModelsAllowed:
          minimum: 0
          type: integer
        numberOfModelsCreated:
          minimum: 0
          type: integer
        numberOfSecretsAllowed:
          minimum: 0
          type: integer
        numberOfSecretsCreated:
          minimum: 0
          type: integer
        numberOfTransitionsAllowed:
          minimum: 0
          type: integer
        numberOfTransitionsCreated:
          minimum: 0
          type: integer
        numberOfUsersAllowed:
          minimum: 0
          type: integer
        numberOfUsersCreated:
          minimum: 0
          type: integer
        numberOfWorkflowsAllowed:
          minimum: 0
          type: integer
        numberOfWorkflowsCreated:
          minimum: 0
          type: integer
        organizationId:
          pattern: "^las:organization:[a-z0-9-_]+$"
          type: string
        paymentMethodId:
          nullable: true
          pattern: "^las:payment-method:[a-f0-9]{32}$"
          type: string
        planId:
          nullable: true
          pattern: "^(|las:organization:[a-z0-9-_]+/)las:plan:[a-z0-9-_]+(|:@[a-z0-9-_]+|:[0-9]+)$"
          type: string
        updatedBy:
          maxLength: 4096
          nullable: true
          type: string
        updatedTime:
          nullable: true
          pattern: "^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$"
          type: string
      required:
      - description
      - documentRetentionInDays
      - monthlyNumberOfActiveModelsUsed
      - monthlyNumberOfDataBundlesAllowed
      - monthlyNumberOfDataBundlesCreated
      - monthlyNumberOfDocumentsAllowed
      - monthlyNumberOfDocumentsCreated
      - monthlyNumberOfFieldPredictionsAllowed
      - monthlyNumberOfFieldPredictionsUsed
      - monthlyNumberOfGpuHoursUsed
      - monthlyNumberOfPredictionsAllowed
      - monthlyNumberOfPredictionsCreated
      - monthlyNumberOfTrainingsAllowed
      - monthlyNumberOfTrainingsCreated
      - monthlyNumberOfTransitionExecutionsAllowed
      - monthlyNumberOfTransitionExecutionsCreated
      - monthlyNumberOfWorkflowExecutionsAllowed
      - monthlyNumberOfWorkflowExecutionsCreated
      - monthlyUsageSummary
      - name
      - numberOfAppClientsAllowed
      - numberOfAppClientsCreated
      - numberOfAssetsAllowed
      - numberOfAssetsCreated
      - numberOfModelsAllowed
      - numberOfModelsCreated
      - numberOfSecretsAllowed
      - numberOfSecretsCreated
      - numberOfTransitionsAllowed
      - numberOfTransitionsCreated
      - numberOfUsersAllowed
      - numberOfUsersCreated
      - numberOfWorkflowsAllowed
      - numberOfWorkflowsCreated
      - organizationId
      - paymentMethodId
      - planId
      - updatedBy
      - updatedTime
      title: organization
      type: object
    Organizations:
      additionalProperties: false
      example:
        nextToken: nextToken
        organizations:
        - numberOfWorkflowsCreated: 0
          monthlyNumberOfFieldPredictionsUsed: 0
          monthlyNumberOfWorkflowExecutionsCreated: 0
          description: description
          deploymentsAllowed: "{}"
          numberOfUsersAllowed: 0
          monthlyNumberOfPredictionsAllowed: 0
          monthlyNumberOfDataBundlesAllowed: 0
          numberOfDatasetsAllowed: 0
          numberOfModelsCreated: 0
          organizationId: organizationId
          monthlyNumberOfTransitionExecutionsAllowed: 0
          numberOfTransitionsCreated: 0
          monthlyNumberOfDocumentsAllowed: 0
          numberOfSecretsAllowed: 0
          monthlyNumberOfTrainingsCreated: 0
          paymentMethodId: paymentMethodId
          planId: planId
          monthlyNumberOfModelDeploymentUnitsUsed: 0
          monthlyUsageSummary: "{}"
          numberOfAppClientsCreated: 0
          numberOfAssetsCreated: 0
          updatedTime: updatedTime
          deploymentsCreated: "{}"
          monthlyNumberOfGpuHoursUsed: 0.3616076749251911
          numberOfWorkflowsAllowed: 0
          clientId: clientId
          updatedBy: updatedBy
          monthlyNumberOfWorkflowExecutionsAllowed: 0
          monthlyNumberOfActiveModelsUsed: 0
          documentRetentionInDays: 1
          monthlyNumberOfDataBundlesCreated: 0
          monthlyNumberOfPredictionsCreated: 0
          numberOfUsersCreated: 0
          numberOfDatasetsCreated: 0
          monthlyNumberOfTransitionExecutionsCreated: 0
          numberOfTransitionsAllowed: 0
          monthlyNumberOfDocumentsCreated: 0
          numberOfModelsAllowed: 0
          numberOfSecretsCreated: 0
          monthlyNumberOfTrainingsAllowed: 0
          monthlyNumberOfFieldPredictionsAllowed: 0
          name: name
          numberOfAppClientsAllowed: 0
          numberOfAssetsAllowed: 0
        - numberOfWorkflowsCreated: 0
          monthlyNumberOfFieldPredictionsUsed: 0
          monthlyNumberOfWorkflowExecutionsCreated: 0
          description: description
          deploymentsAllowed: "{}"
          numberOfUsersAllowed: 0
          monthlyNumberOfPredictionsAllowed: 0
          monthlyNumberOfDataBundlesAllowed: 0
          numberOfDatasetsAllowed: 0
          numberOfModelsCreated: 0
          organizationId: organizationId
          monthlyNumberOfTransitionExecutionsAllowed: 0
          numberOfTransitionsCreated: 0
          monthlyNumberOfDocumentsAllowed: 0
          numberOfSecretsAllowed: 0
          monthlyNumberOfTrainingsCreated: 0
          paymentMethodId: paymentMethodId
          planId: planId
          monthlyNumberOfModelDeploymentUnitsUsed: 0
          monthlyUsageSummary: "{}"
          numberOfAppClientsCreated: 0
          numberOfAssetsCreated: 0
          updatedTime: updatedTime
          deploymentsCreated: "{}"
          monthlyNumberOfGpuHoursUsed: 0.3616076749251911
          numberOfWorkflowsAllowed: 0
          clientId: clientId
          updatedBy: updatedBy
          monthlyNumberOfWorkflowExecutionsAllowed: 0
          monthlyNumberOfActiveModelsUsed: 0
          documentRetentionInDays: 1
          monthlyNumberOfDataBundlesCreated: 0
          monthlyNumberOfPredictionsCreated: 0
          numberOfUsersCreated: 0
          numberOfDatasetsCreated: 0
          monthlyNumberOfTransitionExecutionsCreated: 0
          numberOfTransitionsAllowed: 0
          monthlyNumberOfDocumentsCreated: 0
          numberOfModelsAllowed: 0
          numberOfSecretsCreated: 0
          monthlyNumberOfTrainingsAllowed: 0
          monthlyNumberOfFieldPredictionsAllowed: 0
          name: name
          numberOfAppClientsAllowed: 0
          numberOfAssetsAllowed: 0
      properties:
        nextToken:
          maxLength: 4096
          nullable: true
          type: string
        organizations:
          items:
            $ref: '#/components/schemas/Organizations_organizations_inner'
          type: array
      required:
      - nextToken
      - organizations
      title: organizations
      type: object
    PatchAppClientId:
      additionalProperties: false
      example:
        name: name
        description: description
        loginUrls:
        - loginUrls
        - loginUrls
        defaultLoginUrl: defaultLoginUrl
      minProperties: 1
      properties:
        defaultLoginUrl:
          pattern: ^http://localhost.*|^https://.*
          type: string
        description:
          maxLength: 4096
          nullable: true
          type: string
        loginUrls:
          items:
            pattern: ^http://localhost.*|^https://.*
            type: string
          type: array
        name:
          maxLength: 4096
          nullable: true
          type: string
      title: "PATCH /appClients/{appClientId}"
      type: object
    PatchAssetId:
      additionalProperties: false
      example:
        name: name
        description: description
        content: content
      minProperties: 1
      properties:
        content:
          minLength: 1
          type: string
        description:
          maxLength: 4096
          nullable: true
          type: string
        name:
          maxLength: 4096
          nullable: true
          type: string
      title: PATCH /assets/assetId
      type: object
    PatchDataBundleId:
      additionalProperties: false
      example:
        name: name
        description: description
      minProperties: 1
      properties:
        description:
          maxLength: 4096
          nullable: true
          type: string
        name:
          maxLength: 4096
          nullable: true
          type: string
      title: "PATCH /models/{modelId}/dataBundles/{dataBundleId}"
      type: object
    PatchDatasetId:
      additionalProperties: false
      example:
        metadata: "{}"
        retentionInDays: 1
        name: name
        description: description
        containsPersonallyIdentifiableInformation: true
      minProperties: 1
      properties:
        containsPersonallyIdentifiableInformation:
          type: boolean
        description:
          maxLength: 4096
          nullable: true
          type: string
        metadata:
          type: object
        name:
          maxLength: 4096
          nullable: true
          type: string
        retentionInDays:
          minimum: 1
          type: integer
      title: "PATCH /datasets/{datasetId}"
      type: object
    PatchDocumentId:
      additionalProperties: false
      example:
        groundTruth:
        - label: label
          value: Document_groundTruth_inner_value
        - label: label
          value: Document_groundTruth_inner_value
        metadata: "{}"
        retentionInDays: 1
        name: name
        datasetId: datasetId
        description: description
      minProperties: 1
      properties:
        datasetId:
          pattern: "^las:dataset:[a-f0-9]{32}$"
          type: string
        description:
          maxLength: 4096
          nullable: true
          type: string
        groundTruth:
          items:
            $ref: '#/components/schemas/Document_groundTruth_inner'
          nullable: true
          type: array
        metadata:
          type: object
        name:
          maxLength: 4096
          nullable: true
          type: string
        retentionInDays:
          minimum: 1
          type: integer
      title: "PATCH /documents/{documentId}"
      type: object
    PatchModelId:
      additionalProperties: false
      example:
        metadata: "{}"
        preprocessConfig:
          maxPages: 2
          autoRotate: true
          imageQuality: LOW
        trainingId: trainingId
        postprocessConfig:
          strategy: BEST_FIRST
        name: name
        description: description
        fieldConfig:
          key:
            description: description
            type: amount
            enum:
            - enum
            - enum
            - enum
            - enum
            - enum
            maxLength: 41
      minProperties: 1
      properties:
        description:
          maxLength: 4096
          nullable: true
          type: string
        fieldConfig:
          additionalProperties:
            $ref: '#/components/schemas/Model_fieldConfig_value'
          type: object
        metadata:
          type: object
        name:
          maxLength: 4096
          nullable: true
          type: string
        postprocessConfig:
          $ref: '#/components/schemas/Model_postprocessConfig'
        preprocessConfig:
          $ref: '#/components/schemas/Model_preprocessConfig'
        trainingId:
          nullable: true
          pattern: "^las:model-training:[a-f0-9]{32}$"
          type: string
      title: PATCH /models/modelId
      type: object
    PatchOrganizationId:
      additionalProperties: false
      example:
        paymentMethodId: paymentMethodId
        name: name
        description: description
        planId: planId
      minProperties: 1
      properties:
        description:
          maxLength: 4096
          nullable: true
          type: string
        name:
          maxLength: 4096
          nullable: true
          type: string
        paymentMethodId:
          pattern: "^las:payment-method:[a-f0-9]{32}$"
          type: string
        planId:
          pattern: "^(|las:organization:[a-z0-9-_]+/)las:plan:[a-z0-9-_]+(|:@[a-z0-9-_]+|:[0-9]+)$"
          type: string
      title: PATCH /organizations/organizationId
      type: object
    PatchPaymentMethodId:
      additionalProperties: false
      example:
        stripeSetupIntentSecret: stripeSetupIntentSecret
        name: name
        description: description
      minProperties: 1
      properties:
        description:
          maxLength: 4096
          nullable: true
          type: string
        name:
          maxLength: 4096
          nullable: true
          type: string
        stripeSetupIntentSecret:
          minLength: 1
          type: string
      title: "PATCH /paymentMethods/{paymentMethodId}"
      type: object
    PatchSecretId:
      additionalProperties: false
      example:
        data: "{}"
        name: name
        description: description
      minProperties: 1
      properties:
        data:
          type: object
        description:
          maxLength: 4096
          nullable: true
          type: string
        name:
          maxLength: 4096
          nullable: true
          type: string
      title: "PATCH /secrets/{secretId}"
      type: object
    PatchTrainingId:
      additionalProperties: false
      example:
        deploymentEnvironmentId: deploymentEnvironmentId
        metadata: "{}"
        name: name
        description: description
        status: cancelled
      minProperties: 1
      properties:
        deploymentEnvironmentId:
          nullable: true
          pattern: "^(|las:organization:[a-z0-9-_]+/)las:deployment-environment:[a-z0-9-_]+(|:@[a-z0-9-_]+|:[0-9]+)$"
          type: string
        description:
          maxLength: 4096
          nullable: true
          type: string
        metadata:
          type: object
        name:
          maxLength: 4096
          nullable: true
          type: string
        status:
          enum:
          - cancelled
          type: string
      title: "PATCH /models/{modelId}/trainings/{trainingId}"
      type: object
    PatchTransistionExecutionId:
      additionalProperties: false
      anyOf:
      - $ref: '#/components/schemas/PatchTransistionExecutionId_anyOf'
      - $ref: '#/components/schemas/PatchTransistionExecutionId_anyOf_1'
      example:
        output: "{}"
        startTime: startTime
        error: "{}"
        status: status
      properties:
        error:
          additionalProperties: false
          properties:
            message:
              maxLength: 4096
              type: string
          required:
          - message
          type: object
        output:
          type: object
        startTime:
          nullable: true
          pattern: "^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$"
          type: string
        status:
          type: string
      title: "PATCH transitions/{transitionId}/executions/{executionId}"
      type: object
    PatchTransitionId:
      additionalProperties: false
      example:
        environmentSecrets:
        - environmentSecrets
        - environmentSecrets
        environment:
          key: environment
        assets:
          jsRemoteComponent: jsRemoteComponent
        outputJsonSchema: "{}"
        name: name
        description: description
        inputJsonSchema: "{}"
        parameters:
          environmentSecrets:
          - environmentSecrets
          - environmentSecrets
          environment:
            key: environment
          memory: 6
          imageUrl: imageUrl
          cpu: 0
          secretId: secretId
      minProperties: 1
      properties:
        assets:
          $ref: '#/components/schemas/PatchTransitionId_assets'
        description:
          maxLength: 4096
          nullable: true
          type: string
        environment:
          additionalProperties:
            type: string
          type: object
        environmentSecrets:
          items:
            pattern: "^las:secret:[a-f0-9]{32}$"
            type: string
          type: array
        inputJsonSchema:
          type: object
        name:
          maxLength: 4096
          nullable: true
          type: string
        outputJsonSchema:
          type: object
        parameters:
          $ref: '#/components/schemas/PatchTransitionId_parameters'
      title: "PATCH /transitions/{transitionId}"
      type: object
    PatchUserId:
      additionalProperties: false
      example:
        metadata: "{}"
        name: name
        avatar: avatar
      minProperties: 1
      properties:
        avatar:
          maxLength: 131072
          nullable: true
          type: string
        metadata:
          type: object
        name:
          maxLength: 4096
          nullable: true
          type: string
      title: "PATCH /users/{userId}"
      type: object
    PatchWorkflowExecutionId:
      additionalProperties: false
      example:
        nextTransitionId: Logs_transitionId
      properties:
        nextTransitionId:
          $ref: '#/components/schemas/Logs_transitionId'
      required:
      - nextTransitionId
      title: "PATCH workflows/{workflowId}/executions/{executionId}"
      type: object
    PatchWorkflowId:
      additionalProperties: false
      example:
        completedConfig:
          environmentSecrets:
          - environmentSecrets
          - environmentSecrets
          environment:
            key: environment
          imageUrl: imageUrl
          secretId: secretId
        name: name
        description: description
        errorConfig:
          manualRetry: true
          email: email
      minProperties: 1
      properties:
        completedConfig:
          $ref: '#/components/schemas/PatchWorkflowId_completedConfig'
        description:
          maxLength: 4096
          nullable: true
          type: string
        errorConfig:
          $ref: '#/components/schemas/PatchWorkflowId_errorConfig'
        name:
          maxLength: 4096
          nullable: true
          type: string
      title: "PATCH /workflows/{workflowId}"
      type: object
    PaymentMethod:
      additionalProperties: false
      example:
        updatedTime: updatedTime
        updatedBy: updatedBy
        createdBy: createdBy
        paymentMethodId: paymentMethodId
        stripeSetupIntentSecret: stripeSetupIntentSecret
        name: name
        createdTime: createdTime
        description: description
        details: "{}"
        stripePublishableKey: stripePublishableKey
      properties:
        createdBy:
          maxLength: 4096
          nullable: true
          type: string
        createdTime:
          nullable: true
          pattern: "^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$"
          type: string
        description:
          maxLength: 4096
          nullable: true
          type: string
        details:
          nullable: true
          type: object
        name:
          maxLength: 4096
          nullable: true
          type: string
        paymentMethodId:
          pattern: "^las:payment-method:[a-f0-9]{32}$"
          type: string
        stripePublishableKey:
          maxLength: 4096
          nullable: true
          type: string
        stripeSetupIntentSecret:
          maxLength: 4096
          nullable: true
          type: string
        updatedBy:
          maxLength: 4096
          nullable: true
          type: string
        updatedTime:
          nullable: true
          pattern: "^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$"
          type: string
      required:
      - createdBy
      - createdTime
      - description
      - details
      - name
      - paymentMethodId
      - updatedBy
      - updatedTime
      title: payment_method
      type: object
    PaymentMethods:
      additionalProperties: false
      example:
        nextToken: nextToken
        paymentMethods:
        - updatedTime: updatedTime
          updatedBy: updatedBy
          createdBy: createdBy
          paymentMethodId: paymentMethodId
          stripeSetupIntentSecret: stripeSetupIntentSecret
          name: name
          createdTime: createdTime
          description: description
          details: "{}"
          stripePublishableKey: stripePublishableKey
        - updatedTime: updatedTime
          updatedBy: updatedBy
          createdBy: createdBy
          paymentMethodId: paymentMethodId
          stripeSetupIntentSecret: stripeSetupIntentSecret
          name: name
          createdTime: createdTime
          description: description
          details: "{}"
          stripePublishableKey: stripePublishableKey
      properties:
        nextToken:
          maxLength: 4096
          nullable: true
          type: string
        paymentMethods:
          items:
            $ref: '#/components/schemas/PaymentMethods_paymentMethods_inner'
          type: array
      required:
      - nextToken
      - paymentMethods
      title: payment_methods
      type: object
    Plan:
      additionalProperties: false
      example:
        organizationId: organizationId
        license: "{}"
        fieldPredictions: "{}"
        gpuHours: "{}"
        available: true
        name: name
        activeModels: "{}"
        description: description
        currency: USD
        modelDeploymentUnits: "{}"
        planId: planId
        latest: 1
      properties:
        activeModels:
          nullable: true
          type: object
        available:
          type: boolean
        currency:
          enum:
          - USD
          - EUR
          - NOK
          type: string
        description:
          maxLength: 4096
          nullable: true
          type: string
        fieldPredictions:
          nullable: true
          type: object
        gpuHours:
          nullable: true
          type: object
        latest:
          minimum: 1
          type: integer
        license:
          nullable: true
          type: object
        modelDeploymentUnits:
          nullable: true
          type: object
        name:
          maxLength: 4096
          nullable: true
          type: string
        organizationId:
          nullable: true
          pattern: "^las:organization:[a-z0-9-_]+$"
          type: string
        planId:
          pattern: "^las:plan:[a-z0-9-_]+(|:@[a-z0-9-_]+|:[0-9]+)$"
          type: string
      required:
      - available
      - currency
      - latest
      - name
      - organizationId
      - planId
      title: plan
      type: object
    Plans:
      additionalProperties: false
      example:
        nextToken: nextToken
        plans:
        - organizationId: organizationId
          license: "{}"
          fieldPredictions: "{}"
          gpuHours: "{}"
          available: true
          name: name
          activeModels: "{}"
          description: description
          currency: USD
          modelDeploymentUnits: "{}"
          planId: planId
          latest: 1
        - organizationId: organizationId
          license: "{}"
          fieldPredictions: "{}"
          gpuHours: "{}"
          available: true
          name: name
          activeModels: "{}"
          description: description
          currency: USD
          modelDeploymentUnits: "{}"
          planId: planId
          latest: 1
      properties:
        nextToken:
          maxLength: 4096
          nullable: true
          type: string
        plans:
          items:
            $ref: '#/components/schemas/Plans_plans_inner'
          type: array
      required:
      - nextToken
      - plans
      title: plans
      type: object
    PostAppClients:
      additionalProperties: false
      example:
        generateSecret: true
        logoutUrls:
        - logoutUrls
        - logoutUrls
        name: name
        callbackUrls:
        - callbackUrls
        - callbackUrls
        description: description
        loginUrls:
        - loginUrls
        - loginUrls
        defaultLoginUrl: defaultLoginUrl
      properties:
        callbackUrls:
          items:
            pattern: ^http://localhost.*|^https://.*
            type: string
          type: array
        defaultLoginUrl:
          pattern: ^http://localhost.*|^https://.*
          type: string
        description:
          maxLength: 4096
          nullable: true
          type: string
        generateSecret:
          default: true
          type: boolean
        loginUrls:
          items:
            pattern: ^http://localhost.*|^https://.*
            type: string
          type: array
        logoutUrls:
          items:
            pattern: ^http://localhost.*|^https://.*
            type: string
          type: array
        name:
          maxLength: 4096
          nullable: true
          type: string
      title: POST /appClients
      type: object
    PostAssets:
      additionalProperties: false
      example:
        name: name
        description: description
        content: content
      properties:
        content:
          maxLength: 6250000
          minLength: 1
          type: string
        description:
          maxLength: 4096
          nullable: true
          type: string
        name:
          maxLength: 4096
          nullable: true
          type: string
      required:
      - content
      title: POST /assets
      type: object
    PostDataBundles:
      additionalProperties: false
      example:
        datasetIds:
        - datasetIds
        - datasetIds
        name: name
        description: description
      properties:
        datasetIds:
          items:
            pattern: "^las:dataset:[a-f0-9]{32}$"
            type: string
          minItems: 1
          type: array
        description:
          maxLength: 4096
          nullable: true
          type: string
        name:
          maxLength: 4096
          nullable: true
          type: string
      title: "POST /models/{modelId}/dataBundles"
      type: object
    PostDatasets:
      additionalProperties: false
      example:
        metadata: "{}"
        retentionInDays: 1
        name: name
        description: description
        containsPersonallyIdentifiableInformation: true
      properties:
        containsPersonallyIdentifiableInformation:
          type: boolean
        description:
          maxLength: 4096
          nullable: true
          type: string
        metadata:
          type: object
        name:
          maxLength: 4096
          nullable: true
          type: string
        retentionInDays:
          minimum: 1
          type: integer
      title: POST /datasets
      type: object
    PostDocuments:
      additionalProperties: false
      example:
        groundTruth:
        - label: label
          value: Document_groundTruth_inner_value
        - label: label
          value: Document_groundTruth_inner_value
        consentId: consentId
        metadata: "{}"
        retentionInDays: 1
        name: name
        datasetId: datasetId
        description: description
        contentType: application/pdf
        content: content
      properties:
        consentId:
          pattern: "^las:consent:[a-f0-9]{32}$"
          type: string
        content:
          maxLength: 6250000
          minLength: 1
          type: string
        contentType:
          enum:
          - application/pdf
          - image/jpeg
          - image/png
          - image/tiff
          nullable: true
          type: string
        datasetId:
          pattern: "^las:dataset:[a-f0-9]{32}$"
          type: string
        description:
          maxLength: 4096
          nullable: true
          type: string
        groundTruth:
          items:
            $ref: '#/components/schemas/Document_groundTruth_inner'
          type: array
        metadata:
          type: object
        name:
          maxLength: 4096
          nullable: true
          type: string
        retentionInDays:
          minimum: 1
          type: integer
      required:
      - content
      - contentType
      title: POST /documents
      type: object
    PostHeartbeats:
      title: "POST /transitions/{transitionId}/executions/{executionId}/heartbeats"
      type: object
    PostModels:
      additionalProperties: false
      example:
        metadata: "{}"
        preprocessConfig:
          maxPages: 2
          autoRotate: true
          imageQuality: LOW
        postprocessConfig:
          strategy: BEST_FIRST
        name: name
        description: description
        fieldConfig:
          key:
            description: description
            type: amount
            enum:
            - enum
            - enum
            - enum
            - enum
            - enum
            maxLength: 41
      properties:
        description:
          maxLength: 4096
          nullable: true
          type: string
        fieldConfig:
          additionalProperties:
            $ref: '#/components/schemas/Model_fieldConfig_value'
          type: object
        metadata:
          type: object
        name:
          maxLength: 4096
          nullable: true
          type: string
        postprocessConfig:
          $ref: '#/components/schemas/Model_postprocessConfig'
        preprocessConfig:
          $ref: '#/components/schemas/Model_preprocessConfig'
      required:
      - fieldConfig
      title: POST /models
      type: object
    PostOrganizations:
      additionalProperties: false
      example:
        name: name
      properties:
        name:
          maxLength: 4096
          nullable: true
          type: string
      title: POST /organizations
      type: object
    PostPaymentMethods:
      additionalProperties: false
      example:
        name: name
        description: description
      properties:
        description:
          maxLength: 4096
          nullable: true
          type: string
        name:
          maxLength: 4096
          nullable: true
          type: string
      title: POST /paymentMethods
      type: object
    PostPredictions:
      additionalProperties: false
      example:
        trainingId: trainingId
        modelId: modelId
        postprocessConfig:
          strategy: BEST_FIRST
        maxPages: 1
        rotation: 6
        documentId: documentId
        autoRotate: true
        imageQuality: LOW
      properties:
        autoRotate:
          type: boolean
        documentId:
          pattern: "^las:document:[a-f0-9]{32}$"
          type: string
        imageQuality:
          enum:
          - LOW
          - HIGH
          type: string
        maxPages:
          maximum: 3
          minimum: 1
          type: integer
        modelId:
          pattern: "^(|las:organization:[a-z0-9-_]+/)las:model:[a-z0-9-_]+$"
          type: string
        postprocessConfig:
          $ref: '#/components/schemas/Model_postprocessConfig'
        rotation:
          enum:
          - 0
          - 90
          - 180
          - 270
          type: integer
        trainingId:
          pattern: "^las:model-training:[a-f0-9]{32}$"
          type: string
      required:
      - documentId
      - modelId
      title: POST /predictions
      type: object
    PostSecrets:
      additionalProperties: false
      example:
        data: "{}"
        name: name
        description: description
      properties:
        data:
          type: object
        description:
          maxLength: 4096
          nullable: true
          type: string
        name:
          maxLength: 4096
          nullable: true
          type: string
      required:
      - data
      title: POST /secrets
      type: object
    PostTrainings:
      additionalProperties: false
      example:
        dataScientistAssistance: true
        metadata: "{}"
        warmStartConfig:
          trainingId: trainingId
        instanceType: small-gpu
        dataBundleIds:
        - dataBundleIds
        - dataBundleIds
        name: name
        description: description
      properties:
        dataBundleIds:
          items:
            pattern: "^las:model-data-bundle:[a-f0-9]{32}$"
            type: string
          minItems: 1
          type: array
        dataScientistAssistance:
          type: boolean
        description:
          maxLength: 4096
          nullable: true
          type: string
        instanceType:
          enum:
          - small-gpu
          - medium-gpu
          - large-gpu
          nullable: true
          type: string
        metadata:
          type: object
        name:
          maxLength: 4096
          nullable: true
          type: string
        warmStartConfig:
          $ref: '#/components/schemas/PostTrainings_warmStartConfig'
      title: "POST /models/{modelId}/trainings"
      type: object
    PostTransitionExecution:
      title: "POST /transitions/{transitionId}/executions"
      type: object
    PostTransitions:
      additionalProperties: false
      example:
        outputJsonSchema: "{}"
        name: name
        description: description
        inputJsonSchema: "{}"
        parameters:
          environmentSecrets:
          - environmentSecrets
          - environmentSecrets
          environment:
            key: environment
          memory: 6
          imageUrl: imageUrl
          cpu: 0
          secretId: secretId
        transitionType: docker
        timeoutInSeconds: 315
      properties:
        description:
          maxLength: 4096
          nullable: true
          type: string
        inputJsonSchema:
          type: object
        name:
          maxLength: 4096
          nullable: true
          type: string
        outputJsonSchema:
          type: object
        parameters:
          $ref: '#/components/schemas/PostTransitions_parameters'
        timeoutInSeconds:
          maximum: 1800
          minimum: 60
          type: integer
        transitionType:
          enum:
          - docker
          - manual
          type: string
      required:
      - transitionType
      title: POST /transitions
      type: object
    PostUsers:
      additionalProperties: false
      example:
        metadata: "{}"
        name: name
        avatar: avatar
        appClientId: appClientId
        email: email
      properties:
        appClientId:
          pattern: "^las:app-client:[a-z0-9-_]+$"
          type: string
        avatar:
          maxLength: 131072
          nullable: true
          type: string
        email:
          pattern: "^[A-Za-z0-9][-+._A-Za-z0-9]*@([-_.A-Za-z0-9]+\\.)+[A-Za-z]{2,}$"
          type: string
        metadata:
          type: object
        name:
          maxLength: 4096
          nullable: true
          type: string
      required:
      - email
      title: POST /users
      type: object
    PostWorkflowExecutions:
      additionalProperties: false
      example:
        input: "{}"
      properties:
        input:
          type: object
      required:
      - input
      title: "POST /workflows/{workflowId}/executions"
      type: object
    PostWorkflows:
      additionalProperties: false
      example:
        completedConfig:
          environmentSecrets:
          - environmentSecrets
          - environmentSecrets
          environment:
            key: environment
          imageUrl: imageUrl
          secretId: secretId
        name: name
        description: description
        specification:
          definition: "{}"
          language: ASL
          version: 1.0.0
        errorConfig:
          manualRetry: true
          email: email
      properties:
        completedConfig:
          $ref: '#/components/schemas/PatchWorkflowId_completedConfig'
        description:
          maxLength: 4096
          nullable: true
          type: string
        errorConfig:
          $ref: '#/components/schemas/PatchWorkflowId_errorConfig'
        name:
          maxLength: 4096
          nullable: true
          type: string
        specification:
          $ref: '#/components/schemas/PostWorkflows_specification'
      required:
      - specification
      title: POST /workflows
      type: object
    Prediction:
      additionalProperties: false
      example:
        preprocessConfig:
          maxPages: 2
          autoRotate: true
          imageQuality: LOW
        trainingId: trainingId
        createdBy: createdBy
        modelId: modelId
        postprocessConfig:
          strategy: BEST_FIRST
        createdTime: createdTime
        inferenceTime: 0.08008281904610115
        documentId: documentId
        predictionId: predictionId
        predictions:
        - confidence: 0.6027456183070403
          location:
          - 0.14658129805029452
          - 0.14658129805029452
          - 0.14658129805029452
          - 0.14658129805029452
          label: label
          page: 0
          value: value
        - confidence: 0.6027456183070403
          location:
          - 0.14658129805029452
          - 0.14658129805029452
          - 0.14658129805029452
          - 0.14658129805029452
          label: label
          page: 0
          value: value
      properties:
        createdBy:
          maxLength: 4096
          nullable: true
          type: string
        createdTime:
          nullable: true
          pattern: "^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$"
          type: string
        documentId:
          pattern: "^las:document:[a-f0-9]{32}$"
          type: string
        inferenceTime:
          minimum: 0
          type: number
        modelId:
          pattern: "^(|las:organization:[a-z0-9-_]+/)las:model:[a-z0-9-_]+$"
          type: string
        postprocessConfig:
          $ref: '#/components/schemas/Prediction_postprocessConfig'
        predictionId:
          pattern: "^las:prediction:[a-f0-9]{32}$"
          type: string
        predictions:
          items:
            $ref: '#/components/schemas/Prediction_predictions_inner'
          type: array
        preprocessConfig:
          $ref: '#/components/schemas/Prediction_preprocessConfig'
        trainingId:
          nullable: true
          pattern: "^las:model-training:[a-f0-9]{32}$"
          type: string
      required:
      - documentId
      - inferenceTime
      - modelId
      - predictionId
      - predictions
      title: prediction
      type: object
    Predictions:
      additionalProperties: false
      example:
        nextToken: nextToken
        sortBy: createdTime
        predictions:
        - preprocessConfig:
            maxPages: 2
            autoRotate: true
            imageQuality: LOW
          trainingId: trainingId
          createdBy: createdBy
          modelId: modelId
          postprocessConfig:
            strategy: BEST_FIRST
          createdTime: createdTime
          inferenceTime: 0.08008281904610115
          documentId: documentId
          predictionId: predictionId
          predictions:
          - confidence: 0.6027456183070403
            location:
            - 0.14658129805029452
            - 0.14658129805029452
            - 0.14658129805029452
            - 0.14658129805029452
            label: label
            page: 0
            value: value
          - confidence: 0.6027456183070403
            location:
            - 0.14658129805029452
            - 0.14658129805029452
            - 0.14658129805029452
            - 0.14658129805029452
            label: label
            page: 0
            value: value
        - preprocessConfig:
            maxPages: 2
            autoRotate: true
            imageQuality: LOW
          trainingId: trainingId
          createdBy: createdBy
          modelId: modelId
          postprocessConfig:
            strategy: BEST_FIRST
          createdTime: createdTime
          inferenceTime: 0.08008281904610115
          documentId: documentId
          predictionId: predictionId
          predictions:
          - confidence: 0.6027456183070403
            location:
            - 0.14658129805029452
            - 0.14658129805029452
            - 0.14658129805029452
            - 0.14658129805029452
            label: label
            page: 0
            value: value
          - confidence: 0.6027456183070403
            location:
            - 0.14658129805029452
            - 0.14658129805029452
            - 0.14658129805029452
            - 0.14658129805029452
            label: label
            page: 0
            value: value
        order: ascending
      properties:
        nextToken:
          maxLength: 4096
          nullable: true
          type: string
        order:
          enum:
          - ascending
          - descending
          type: string
        predictions:
          items:
            $ref: '#/components/schemas/Predictions_predictions_inner'
          type: array
        sortBy:
          enum:
          - createdTime
          type: string
      required:
      - nextToken
      - predictions
      title: predictions
      type: object
    Profile:
      additionalProperties: false
      example:
        updatedTime: updatedTime
        metadata: "{}"
        numberOfOrganizationsAllowed: 0
        numberOfOrganizationsCreated: 0
        profileId: profileId
        familyName: familyName
        givenName: givenName
        name: name
        createdTime: createdTime
        locale: locale
        email: email
        picture: picture
      properties:
        createdTime:
          nullable: true
          pattern: "^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$"
          type: string
        email:
          pattern: "^[A-Za-z0-9][-+._A-Za-z0-9]*@([-_.A-Za-z0-9]+\\.)+[A-Za-z]{2,}$"
          type: string
        familyName:
          maxLength: 4096
          nullable: true
          type: string
        givenName:
          maxLength: 4096
          nullable: true
          type: string
        locale:
          maxLength: 4096
          nullable: true
          type: string
        metadata:
          nullable: true
          type: object
        name:
          maxLength: 4096
          nullable: true
          type: string
        numberOfOrganizationsAllowed:
          minimum: 0
          type: integer
        numberOfOrganizationsCreated:
          minimum: 0
          type: integer
        picture:
          maxLength: 4096
          nullable: true
          type: string
        profileId:
          pattern: "^las:profile:[a-f0-9]{32}$"
          type: string
        updatedTime:
          nullable: true
          pattern: "^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$"
          type: string
      required:
      - profileId
      title: profile
      type: object
    Secret:
      additionalProperties: false
      example:
        updatedTime: updatedTime
        updatedBy: updatedBy
        createdBy: createdBy
        name: name
        createdTime: createdTime
        description: description
        secretId: secretId
      properties:
        createdBy:
          maxLength: 4096
          nullable: true
          type: string
        createdTime:
          nullable: true
          pattern: "^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$"
          type: string
        description:
          maxLength: 4096
          nullable: true
          type: string
        name:
          maxLength: 4096
          nullable: true
          type: string
        secretId:
          pattern: "^las:secret:[a-f0-9]{32}$"
          type: string
        updatedBy:
          maxLength: 4096
          nullable: true
          type: string
        updatedTime:
          nullable: true
          pattern: "^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$"
          type: string
      required:
      - createdBy
      - createdTime
      - description
      - name
      - secretId
      - updatedBy
      - updatedTime
      title: secret
      type: object
    Secrets:
      additionalProperties: false
      example:
        nextToken: nextToken
        secrets:
        - updatedTime: updatedTime
          updatedBy: updatedBy
          createdBy: createdBy
          name: name
          createdTime: createdTime
          description: description
          secretId: secretId
        - updatedTime: updatedTime
          updatedBy: updatedBy
          createdBy: createdBy
          name: name
          createdTime: createdTime
          description: description
          secretId: secretId
      properties:
        nextToken:
          maxLength: 4096
          nullable: true
          type: string
        secrets:
          items:
            $ref: '#/components/schemas/Secrets_secrets_inner'
          type: array
      required:
      - nextToken
      - secrets
      title: secrets
      type: object
    Training:
      additionalProperties: false
      example:
        dataScientistAssistance: true
        updatedTime: updatedTime
        deploymentEnvironmentId: deploymentEnvironmentId
        metadata: "{}"
        updatedBy: updatedBy
        warmStartConfig:
          trainingId: trainingId
        trainingId: trainingId
        modelId: modelId
        gpuHours: 0.08008281904610115
        instanceType: small-gpu
        description: description
        evaluation: "{}"
        createdBy: createdBy
        dataBundleIds:
        - dataBundleIds
        - dataBundleIds
        name: name
        createdTime: createdTime
        status: waiting-for-approval
      properties:
        createdBy:
          maxLength: 4096
          nullable: true
          type: string
        createdTime:
          nullable: true
          pattern: "^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$"
          type: string
        dataBundleIds:
          items:
            pattern: "^las:model-data-bundle:[a-f0-9]{32}$"
            type: string
          type: array
        dataScientistAssistance:
          type: boolean
        deploymentEnvironmentId:
          nullable: true
          pattern: "^(|las:organization:[a-z0-9-_]+/)las:deployment-environment:[a-z0-9-_]+(|:@[a-z0-9-_]+|:[0-9]+)$"
          type: string
        description:
          maxLength: 4096
          nullable: true
          type: string
        evaluation:
          type: object
        gpuHours:
          minimum: 0
          nullable: true
          type: number
        instanceType:
          enum:
          - small-gpu
          - medium-gpu
          - large-gpu
          type: string
        metadata:
          nullable: true
          type: object
        modelId:
          pattern: "^las:model:[a-z0-9-_]+$"
          type: string
        name:
          maxLength: 4096
          nullable: true
          type: string
        status:
          enum:
          - waiting-for-approval
          - pending
          - running
          - succeeded
          - failed
          - cancelled
          type: string
        trainingId:
          pattern: "^las:model-training:[a-f0-9]{32}$"
          type: string
        updatedBy:
          maxLength: 4096
          nullable: true
          type: string
        updatedTime:
          nullable: true
          pattern: "^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$"
          type: string
        warmStartConfig:
          $ref: '#/components/schemas/Training_warmStartConfig'
      required:
      - createdBy
      - createdTime
      - dataBundleIds
      - description
      - evaluation
      - gpuHours
      - instanceType
      - metadata
      - modelId
      - name
      - status
      - trainingId
      - updatedBy
      - updatedTime
      title: training
      type: object
    Trainings:
      additionalProperties: false
      example:
        nextToken: nextToken
        trainings:
        - dataScientistAssistance: true
          updatedTime: updatedTime
          deploymentEnvironmentId: deploymentEnvironmentId
          metadata: "{}"
          updatedBy: updatedBy
          warmStartConfig:
            trainingId: trainingId
          trainingId: trainingId
          modelId: modelId
          gpuHours: 0.08008281904610115
          instanceType: small-gpu
          description: description
          evaluation: "{}"
          createdBy: createdBy
          dataBundleIds:
          - dataBundleIds
          - dataBundleIds
          name: name
          createdTime: createdTime
          status: waiting-for-approval
        - dataScientistAssistance: true
          updatedTime: updatedTime
          deploymentEnvironmentId: deploymentEnvironmentId
          metadata: "{}"
          updatedBy: updatedBy
          warmStartConfig:
            trainingId: trainingId
          trainingId: trainingId
          modelId: modelId
          gpuHours: 0.08008281904610115
          instanceType: small-gpu
          description: description
          evaluation: "{}"
          createdBy: createdBy
          dataBundleIds:
          - dataBundleIds
          - dataBundleIds
          name: name
          createdTime: createdTime
          status: waiting-for-approval
        status:
        - waiting-for-approval
        - waiting-for-approval
      properties:
        nextToken:
          maxLength: 4096
          nullable: true
          type: string
        status:
          items:
            enum:
            - waiting-for-approval
            - pending
            - running
            - succeeded
            - failed
            - cancelled
            type: string
          type: array
        trainings:
          items:
            $ref: '#/components/schemas/Trainings_trainings_inner'
          type: array
      required:
      - nextToken
      - trainings
      title: trainings
      type: object
    Transition:
      additionalProperties: false
      example:
        updatedTime: updatedTime
        updatedBy: updatedBy
        transitionId: Logs_transitionId
        description: description
        inputJsonSchema: "{}"
        timeoutInSeconds: 199
        assets:
          jsRemoteComponent: jsRemoteComponent
        outputJsonSchema: "{}"
        createdBy: createdBy
        name: name
        createdTime: createdTime
        parameters: "{}"
        transitionType: docker
      properties:
        assets:
          $ref: '#/components/schemas/PatchTransitionId_assets'
        createdBy:
          maxLength: 4096
          nullable: true
          type: string
        createdTime:
          nullable: true
          pattern: "^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$"
          type: string
        description:
          maxLength: 4096
          nullable: true
          type: string
        inputJsonSchema:
          type: object
        name:
          maxLength: 4096
          nullable: true
          type: string
        outputJsonSchema:
          type: object
        parameters:
          type: object
        timeoutInSeconds:
          maximum: 1800
          minimum: 60
          type: integer
        transitionId:
          $ref: '#/components/schemas/Logs_transitionId'
        transitionType:
          enum:
          - docker
          - manual
          type: string
        updatedBy:
          maxLength: 4096
          nullable: true
          type: string
        updatedTime:
          nullable: true
          pattern: "^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$"
          type: string
      required:
      - createdBy
      - createdTime
      - description
      - name
      - parameters
      - timeoutInSeconds
      - transitionId
      - transitionType
      - updatedBy
      - updatedTime
      title: transition
      type: object
    TransitionExecution:
      additionalProperties: false
      example:
        executionId: executionId
        input: "{}"
        transitionId: Logs_transitionId
        logId: logId
        startTime: startTime
        endTime: endTime
        completedBy: completedBy
        status: running
      properties:
        completedBy:
          maxLength: 4096
          nullable: true
          type: string
        endTime:
          nullable: true
          pattern: "^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$"
          type: string
        executionId:
          pattern: "^las:transition-execution:[a-f0-9]{32}$"
          type: string
        input:
          nullable: true
          type: object
        logId:
          nullable: true
          pattern: "^las:log:[a-f0-9]{32}$"
          type: string
        startTime:
          nullable: true
          pattern: "^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$"
          type: string
        status:
          enum:
          - running
          - succeeded
          - failed
          - rejected
          - retry
          type: string
        transitionId:
          $ref: '#/components/schemas/Logs_transitionId'
      required:
      - completedBy
      - executionId
      - input
      - status
      - transitionId
      title: transition-execution
      type: object
    TransitionExecutions:
      additionalProperties: false
      example:
        executions:
        - executionId: executionId
          input: "{}"
          transitionId: Logs_transitionId
          logId: logId
          startTime: startTime
          endTime: endTime
          completedBy: completedBy
          status: running
        - executionId: executionId
          input: "{}"
          transitionId: Logs_transitionId
          logId: logId
          startTime: startTime
          endTime: endTime
          completedBy: completedBy
          status: running
        transitionId: null
        nextToken: nextToken
        status:
        - running
        - running
      properties:
        executions:
          items:
            $ref: '#/components/schemas/TransitionExecutions_executions_inner'
          type: array
        nextToken:
          maxLength: 4096
          nullable: true
          type: string
        status:
          items:
            enum:
            - running
            - succeeded
            - failed
            - rejected
            - retry
            type: string
          type: array
        transitionId:
          $ref: '#/components/schemas/Logs_transitionId'
      required:
      - executions
      - nextToken
      - transitionId
      title: transition-executions
      type: object
    Transitions:
      additionalProperties: false
      example:
        nextToken: nextToken
        transitions:
        - updatedTime: updatedTime
          updatedBy: updatedBy
          transitionId: Logs_transitionId
          description: description
          inputJsonSchema: "{}"
          timeoutInSeconds: 199
          assets:
            jsRemoteComponent: jsRemoteComponent
          outputJsonSchema: "{}"
          createdBy: createdBy
          name: name
          createdTime: createdTime
          parameters: "{}"
          transitionType: docker
        - updatedTime: updatedTime
          updatedBy: updatedBy
          transitionId: Logs_transitionId
          description: description
          inputJsonSchema: "{}"
          timeoutInSeconds: 199
          assets:
            jsRemoteComponent: jsRemoteComponent
          outputJsonSchema: "{}"
          createdBy: createdBy
          name: name
          createdTime: createdTime
          parameters: "{}"
          transitionType: docker
        transitionType:
        - docker
        - docker
      properties:
        nextToken:
          maxLength: 4096
          nullable: true
          type: string
        transitionType:
          items:
            enum:
            - docker
            - manual
            type: string
          type: array
        transitions:
          items:
            $ref: '#/components/schemas/Transitions_transitions_inner'
          type: array
      required:
      - nextToken
      - transitions
      title: transitions
      type: object
    User:
      additionalProperties: false
      example:
        updatedTime: updatedTime
        metadata: "{}"
        updatedBy: updatedBy
        createdBy: createdBy
        profileId: profileId
        name: name
        createdTime: createdTime
        avatar: avatar
        userId: userId
        email: email
      properties:
        avatar:
          maxLength: 131072
          nullable: true
          type: string
        createdBy:
          maxLength: 4096
          nullable: true
          type: string
        createdTime:
          nullable: true
          pattern: "^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$"
          type: string
        email:
          pattern: "^[A-Za-z0-9][-+._A-Za-z0-9]*@([-_.A-Za-z0-9]+\\.)+[A-Za-z]{2,}$"
          type: string
        metadata:
          nullable: true
          type: object
        name:
          maxLength: 4096
          nullable: true
          type: string
        profileId:
          nullable: true
          pattern: "^las:profile:[a-f0-9]{32}$"
          type: string
        updatedBy:
          maxLength: 4096
          nullable: true
          type: string
        updatedTime:
          nullable: true
          pattern: "^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$"
          type: string
        userId:
          pattern: "^las:user:[a-f0-9]{32}$"
          type: string
      required:
      - createdBy
      - createdTime
      - email
      - updatedBy
      - updatedTime
      - userId
      title: user
      type: object
    Users:
      additionalProperties: false
      example:
        nextToken: nextToken
        users:
        - updatedTime: updatedTime
          metadata: "{}"
          updatedBy: updatedBy
          createdBy: createdBy
          profileId: profileId
          name: name
          createdTime: createdTime
          avatar: avatar
          userId: userId
          email: email
        - updatedTime: updatedTime
          metadata: "{}"
          updatedBy: updatedBy
          createdBy: createdBy
          profileId: profileId
          name: name
          createdTime: createdTime
          avatar: avatar
          userId: userId
          email: email
      properties:
        nextToken:
          maxLength: 4096
          nullable: true
          type: string
        users:
          items:
            $ref: '#/components/schemas/Users_users_inner'
          type: array
      required:
      - nextToken
      - users
      title: users
      type: object
    Workflow:
      additionalProperties: false
      example:
        updatedTime: updatedTime
        updatedBy: updatedBy
        numberOfRunningExecutions: 0
        completedConfig:
          environmentSecrets:
          - environmentSecrets
          - environmentSecrets
          environment:
            key: environment
          imageUrl: imageUrl
          secretId: secretId
        createdBy: createdBy
        name: name
        createdTime: createdTime
        description: description
        workflowId: workflowId
        errorConfig:
          manualRetry: true
          email: email
      properties:
        completedConfig:
          $ref: '#/components/schemas/Workflow_completedConfig'
        createdBy:
          maxLength: 4096
          nullable: true
          type: string
        createdTime:
          nullable: true
          pattern: "^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$"
          type: string
        description:
          maxLength: 4096
          nullable: true
          type: string
        errorConfig:
          $ref: '#/components/schemas/Workflow_errorConfig'
        name:
          maxLength: 4096
          nullable: true
          type: string
        numberOfRunningExecutions:
          type: integer
        updatedBy:
          maxLength: 4096
          nullable: true
          type: string
        updatedTime:
          nullable: true
          pattern: "^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$"
          type: string
        workflowId:
          pattern: "^las:workflow:[a-f0-9]{32}$"
          type: string
      required:
      - completedConfig
      - createdBy
      - createdTime
      - description
      - errorConfig
      - name
      - numberOfRunningExecutions
      - updatedBy
      - updatedTime
      - workflowId
      title: workflow
      type: object
    WorkflowExecution:
      additionalProperties: false
      example:
        output: "{}"
        transitionExecutions: "{}"
        executionId: executionId
        input: "{}"
        logId: logId
        startTime: startTime
        completedTaskLogId: completedTaskLogId
        endTime: endTime
        completedBy:
        - WorkflowExecution_completedBy_inner
        - WorkflowExecution_completedBy_inner
        events:
        - "{}"
        - "{}"
        workflowId: workflowId
        status: running
      properties:
        completedBy:
          items:
            $ref: '#/components/schemas/WorkflowExecution_completedBy_inner'
          type: array
        completedTaskLogId:
          nullable: true
          pattern: "^las:log:[a-f0-9]{32}$"
          type: string
        endTime:
          nullable: true
          pattern: "^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$"
          type: string
        events:
          items:
            type: object
          type: array
        executionId:
          pattern: "^las:workflow-execution:[a-f0-9]{32}$"
          type: string
        input:
          nullable: true
          type: object
        logId:
          nullable: true
          pattern: "^las:log:[a-f0-9]{32}$"
          type: string
        output:
          nullable: true
          type: object
        startTime:
          nullable: true
          pattern: "^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$"
          type: string
        status:
          enum:
          - running
          - succeeded
          - failed
          - rejected
          - retry
          - error
          type: string
        transitionExecutions:
          nullable: true
          type: object
        workflowId:
          pattern: "^las:workflow:[a-f0-9]{32}$"
          type: string
      required:
      - endTime
      - executionId
      - input
      - output
      - startTime
      - status
      - transitionExecutions
      - workflowId
      title: workflow-execution
      type: object
    WorkflowExecutions:
      additionalProperties: false
      example:
        executions:
        - output: "{}"
          transitionExecutions: "{}"
          executionId: executionId
          input: "{}"
          logId: logId
          startTime: startTime
          completedTaskLogId: completedTaskLogId
          endTime: endTime
          completedBy:
          - WorkflowExecution_completedBy_inner
          - WorkflowExecution_completedBy_inner
          events:
          - "{}"
          - "{}"
          workflowId: workflowId
          status: running
        - output: "{}"
          transitionExecutions: "{}"
          executionId: executionId
          input: "{}"
          logId: logId
          startTime: startTime
          completedTaskLogId: completedTaskLogId
          endTime: endTime
          completedBy:
          - WorkflowExecution_completedBy_inner
          - WorkflowExecution_completedBy_inner
          events:
          - "{}"
          - "{}"
          workflowId: workflowId
          status: running
        nextToken: nextToken
        sortBy: startTime
        workflowId: workflowId
        order: ascending
        status:
        - running
        - running
      properties:
        executions:
          items:
            $ref: '#/components/schemas/WorkflowExecutions_executions_inner'
          type: array
        nextToken:
          maxLength: 4096
          nullable: true
          type: string
        order:
          enum:
          - ascending
          - descending
          type: string
        sortBy:
          enum:
          - startTime
          - endTime
          type: string
        status:
          items:
            enum:
            - running
            - succeeded
            - failed
            - rejected
            - retry
            - error
            type: string
          type: array
        workflowId:
          pattern: "^las:workflow:[a-f0-9]{32}$"
          type: string
      required:
      - executions
      - nextToken
      - workflowId
      title: workflow-executions
      type: object
    Workflows:
      additionalProperties: false
      example:
        nextToken: nextToken
        workflows:
        - updatedTime: updatedTime
          updatedBy: updatedBy
          numberOfRunningExecutions: 0
          completedConfig:
            environmentSecrets:
            - environmentSecrets
            - environmentSecrets
            environment:
              key: environment
            imageUrl: imageUrl
            secretId: secretId
          createdBy: createdBy
          name: name
          createdTime: createdTime
          description: description
          workflowId: workflowId
          errorConfig:
            manualRetry: true
            email: email
        - updatedTime: updatedTime
          updatedBy: updatedBy
          numberOfRunningExecutions: 0
          completedConfig:
            environmentSecrets:
            - environmentSecrets
            - environmentSecrets
            environment:
              key: environment
            imageUrl: imageUrl
            secretId: secretId
          createdBy: createdBy
          name: name
          createdTime: createdTime
          description: description
          workflowId: workflowId
          errorConfig:
            manualRetry: true
            email: email
      properties:
        nextToken:
          maxLength: 4096
          nullable: true
          type: string
        workflows:
          items:
            $ref: '#/components/schemas/Workflows_workflows_inner'
          type: array
      required:
      - nextToken
      - workflows
      title: workflows
      type: object
    groundTruthList:
      anyOf:
      - items:
          $ref: '#/components/schemas/groundTruthList_anyOf_inner'
        type: array
      - items:
          items:
            $ref: '#/components/schemas/groundTruthList_anyOf_inner'
          type: array
        type: array
    AppClients_appClients_inner:
      additionalProperties: false
      example:
        hasSecret: true
        updatedTime: updatedTime
        clientId: clientId
        updatedBy: updatedBy
        logoutUrls:
        - logoutUrls
        - logoutUrls
        callbackUrls:
        - callbackUrls
        - callbackUrls
        description: description
        loginUrls:
        - loginUrls
        - loginUrls
        defaultLoginUrl: defaultLoginUrl
        createdBy: createdBy
        name: name
        createdTime: createdTime
        clientSecret: clientSecret
        appClientId: appClientId
      properties:
        appClientId:
          pattern: "^las:app-client:[a-z0-9-_]+$"
          type: string
        callbackUrls:
          items:
            pattern: ^http://localhost.*|^https://.*
            type: string
          nullable: true
          type: array
        clientId:
          type: string
        clientSecret:
          type: string
        createdBy:
          maxLength: 4096
          nullable: true
          type: string
        createdTime:
          nullable: true
          pattern: "^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$"
          type: string
        defaultLoginUrl:
          nullable: true
          pattern: ^http://localhost.*|^https://.*
          type: string
        description:
          maxLength: 4096
          nullable: true
          type: string
        hasSecret:
          type: boolean
        loginUrls:
          items:
            pattern: ^http://localhost.*|^https://.*
            type: string
          nullable: true
          type: array
        logoutUrls:
          items:
            pattern: ^http://localhost.*|^https://.*
            type: string
          nullable: true
          type: array
        name:
          maxLength: 4096
          nullable: true
          type: string
        updatedBy:
          maxLength: 4096
          nullable: true
          type: string
        updatedTime:
          nullable: true
          pattern: "^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$"
          type: string
      required:
      - appClientId
      - callbackUrls
      - clientId
      - createdBy
      - createdTime
      - defaultLoginUrl
      - description
      - hasSecret
      - loginUrls
      - logoutUrls
      - name
      - updatedBy
      - updatedTime
      type: object
    Assets_assets_inner:
      additionalProperties: false
      example:
        contentMD5: contentMD5
        updatedTime: updatedTime
        updatedBy: updatedBy
        createdBy: createdBy
        assetId: assetId
        name: name
        createdTime: createdTime
        description: description
        content: content
      properties:
        assetId:
          pattern: "^las:asset:[a-f0-9]{32}$"
          type: string
        content:
          minLength: 1
          type: string
        contentMD5:
          maxLength: 4096
          nullable: true
          type: string
        createdBy:
          maxLength: 4096
          nullable: true
          type: string
        createdTime:
          nullable: true
          pattern: "^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$"
          type: string
        description:
          maxLength: 4096
          nullable: true
          type: string
        name:
          maxLength: 4096
          nullable: true
          type: string
        updatedBy:
          maxLength: 4096
          nullable: true
          type: string
        updatedTime:
          nullable: true
          pattern: "^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$"
          type: string
      required:
      - assetId
      - contentMD5
      - createdBy
      - createdTime
      - description
      - name
      - updatedBy
      - updatedTime
      type: object
    DataBundle_datasets_inner:
      additionalProperties: false
      example:
        updatedTime: updatedTime
        metadata: "{}"
        retentionInDays: 1100
        updatedBy: updatedBy
        groundTruthSummary: "{}"
        description: description
        storageLocation: EU
        version: 0
        createdBy: createdBy
        numberOfDocuments: 0
        name: name
        createdTime: createdTime
        datasetId: datasetId
        containsPersonallyIdentifiableInformation: true
      properties:
        containsPersonallyIdentifiableInformation:
          type: boolean
        createdBy:
          maxLength: 4096
          nullable: true
          type: string
        createdTime:
          nullable: true
          pattern: "^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$"
          type: string
        datasetId:
          pattern: "^las:dataset:[a-f0-9]{32}$"
          type: string
        description:
          maxLength: 4096
          nullable: true
          type: string
        groundTruthSummary:
          type: object
        metadata:
          nullable: true
          type: object
        name:
          maxLength: 4096
          nullable: true
          type: string
        numberOfDocuments:
          minimum: 0
          type: integer
        retentionInDays:
          maximum: 1825
          minimum: 0
          type: integer
        storageLocation:
          enum:
          - EU
          type: string
        updatedBy:
          maxLength: 4096
          nullable: true
          type: string
        updatedTime:
          nullable: true
          pattern: "^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$"
          type: string
        version:
          minimum: 0
          type: integer
      required:
      - containsPersonallyIdentifiableInformation
      - datasetId
      - description
      - numberOfDocuments
      - retentionInDays
      - storageLocation
      - version
      type: object
    DataBundles_dataBundles_inner:
      additionalProperties: false
      example:
        summary: "{}"
        updatedTime: updatedTime
        retentionInDays: 1
        updatedBy: updatedBy
        createdBy: createdBy
        modelId: modelId
        dataBundleId: dataBundleId
        name: name
        createdTime: createdTime
        description: description
        datasets:
        - updatedTime: updatedTime
          metadata: "{}"
          retentionInDays: 1100
          updatedBy: updatedBy
          groundTruthSummary: "{}"
          description: description
          storageLocation: EU
          version: 0
          createdBy: createdBy
          numberOfDocuments: 0
          name: name
          createdTime: createdTime
          datasetId: datasetId
          containsPersonallyIdentifiableInformation: true
        - updatedTime: updatedTime
          metadata: "{}"
          retentionInDays: 1100
          updatedBy: updatedBy
          groundTruthSummary: "{}"
          description: description
          storageLocation: EU
          version: 0
          createdBy: createdBy
          numberOfDocuments: 0
          name: name
          createdTime: createdTime
          datasetId: datasetId
          containsPersonallyIdentifiableInformation: true
        status: running
      properties:
        createdBy:
          maxLength: 4096
          nullable: true
          type: string
        createdTime:
          nullable: true
          pattern: "^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$"
          type: string
        dataBundleId:
          pattern: "^las:model-data-bundle:[a-f0-9]{32}$"
          type: string
        datasets:
          items:
            $ref: '#/components/schemas/DataBundle_datasets_inner'
          type: array
        description:
          maxLength: 4096
          nullable: true
          type: string
        modelId:
          pattern: "^las:model:[a-z0-9-_]+$"
          type: string
        name:
          maxLength: 4096
          nullable: true
          type: string
        retentionInDays:
          minimum: 1
          type: integer
        status:
          enum:
          - running
          - succeeded
          - failed
          type: string
        summary:
          nullable: true
          type: object
        updatedBy:
          maxLength: 4096
          nullable: true
          type: string
        updatedTime:
          nullable: true
          pattern: "^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$"
          type: string
      required:
      - createdBy
      - createdTime
      - dataBundleId
      - datasets
      - description
      - modelId
      - name
      - status
      - summary
      - updatedBy
      - updatedTime
      type: object
    Datasets_datasets_inner:
      additionalProperties: false
      example:
        updatedTime: updatedTime
        metadata: "{}"
        retentionInDays: 1100
        updatedBy: updatedBy
        groundTruthSummary: "{}"
        description: description
        storageLocation: EU
        version: 0
        createdBy: createdBy
        numberOfDocuments: 0
        name: name
        createdTime: createdTime
        datasetId: datasetId
        containsPersonallyIdentifiableInformation: true
      properties:
        containsPersonallyIdentifiableInformation:
          type: boolean
        createdBy:
          maxLength: 4096
          nullable: true
          type: string
        createdTime:
          nullable: true
          pattern: "^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$"
          type: string
        datasetId:
          pattern: "^las:dataset:[a-f0-9]{32}$"
          type: string
        description:
          maxLength: 4096
          nullable: true
          type: string
        groundTruthSummary:
          type: object
        metadata:
          nullable: true
          type: object
        name:
          maxLength: 4096
          nullable: true
          type: string
        numberOfDocuments:
          minimum: 0
          type: integer
        retentionInDays:
          maximum: 1825
          minimum: 0
          type: integer
        storageLocation:
          enum:
          - EU
          type: string
        updatedBy:
          maxLength: 4096
          nullable: true
          type: string
        updatedTime:
          nullable: true
          pattern: "^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$"
          type: string
        version:
          minimum: 0
          type: integer
      required:
      - containsPersonallyIdentifiableInformation
      - createdBy
      - createdTime
      - datasetId
      - description
      - groundTruthSummary
      - metadata
      - numberOfDocuments
      - retentionInDays
      - storageLocation
      - updatedBy
      - updatedTime
      - version
      type: object
    DeploymentEnvironments_deploymentEnvironments_inner:
      additionalProperties: false
      example:
        organizationId: organizationId
        deploymentEnvironmentId: deploymentEnvironmentId
        name: name
        description: description
        modelDeploymentUnits: 0
        status: available
      properties:
        deploymentEnvironmentId:
          pattern: "^las:deployment-environment:[a-z0-9-_]+(|:@[a-z0-9-_]+|:[0-9]+)$"
          type: string
        description:
          maxLength: 4096
          nullable: true
          type: string
        modelDeploymentUnits:
          minimum: 0
          type: integer
        name:
          maxLength: 4096
          nullable: true
          type: string
        organizationId:
          nullable: true
          pattern: "^las:organization:[a-z0-9-_]+$"
          type: string
        status:
          enum:
          - available
          - unavailable
          type: string
      required:
      - deploymentEnvironmentId
      - description
      - modelDeploymentUnits
      - name
      - organizationId
      - status
      type: object
    Document_groundTruth_inner_value:
      anyOf:
      - maxLength: 512
        minLength: 0
        nullable: true
        type: string
      - nullable: true
        type: boolean
      - nullable: true
        type: number
      - $ref: '#/components/schemas/groundTruthList'
    Document_groundTruth_inner:
      additionalProperties: false
      example:
        label: label
        value: Document_groundTruth_inner_value
      properties:
        label:
          maxLength: 36
          minLength: 1
          pattern: "^[0-9A-Za-z-_]+$"
          type: string
        value:
          $ref: '#/components/schemas/Document_groundTruth_inner_value'
      required:
      - label
      - value
      type: object
    Documents_documents_inner:
      additionalProperties: false
      example:
        contentMD5: contentMD5
        updatedTime: updatedTime
        metadata: "{}"
        retentionInDays: 1
        updatedBy: updatedBy
        description: description
        content: content
        groundTruth:
        - label: label
          value: Document_groundTruth_inner_value
        - label: label
          value: Document_groundTruth_inner_value
        consentId: consentId
        createdBy: createdBy
        name: name
        createdTime: createdTime
        datasetId: datasetId
        documentId: documentId
        contentType: application/pdf
      properties:
        consentId:
          pattern: "^las:consent:[a-f0-9]{32}$"
          type: string
        content:
          minLength: 1
          type: string
        contentMD5:
          maxLength: 4096
          nullable: true
          type: string
        contentType:
          enum:
          - application/pdf
          - image/jpeg
          - image/png
          - image/tiff
          type: string
        createdBy:
          maxLength: 4096
          nullable: true
          type: string
        createdTime:
          nullable: true
          pattern: "^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$"
          type: string
        datasetId:
          pattern: "^las:dataset:[a-f0-9]{32}$"
          type: string
        description:
          maxLength: 4096
          nullable: true
          type: string
        documentId:
          pattern: "^las:document:[a-f0-9]{32}$"
          type: string
        groundTruth:
          items:
            $ref: '#/components/schemas/Document_groundTruth_inner'
          type: array
        metadata:
          nullable: true
          type: object
        name:
          maxLength: 4096
          nullable: true
          type: string
        retentionInDays:
          minimum: 1
          type: integer
        updatedBy:
          maxLength: 4096
          nullable: true
          type: string
        updatedTime:
          nullable: true
          pattern: "^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$"
          type: string
      required:
      - contentMD5
      - contentType
      - createdBy
      - createdTime
      - description
      - documentId
      - metadata
      - name
      - retentionInDays
      - updatedBy
      - updatedTime
      type: object
    Log_transitionId:
      anyOf:
      - pattern: "^las:transition:[a-f0-9]{32}$"
        type: string
      - pattern: "^las:transition:commons-[0-9A-Za-z-]+$"
        type: string
      nullable: true
    Logs_logs_inner:
      additionalProperties: false
      example:
        transitionId: Log_transitionId
        transitionExecutionId: transitionExecutionId
        logId: logId
        startTime: startTime
        workflowExecutionId: workflowExecutionId
        events:
        - "{}"
        - "{}"
        workflowId: workflowId
      properties:
        events:
          items:
            type: object
          type: array
        logId:
          pattern: "^las:log:[a-f0-9]{32}$"
          type: string
        startTime:
          nullable: true
          pattern: "^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$"
          type: string
        transitionExecutionId:
          nullable: true
          pattern: "^las:transition-execution:[a-f0-9]{32}$"
          type: string
        transitionId:
          $ref: '#/components/schemas/Log_transitionId'
        workflowExecutionId:
          nullable: true
          pattern: "^las:workflow-execution:[a-f0-9]{32}$"
          type: string
        workflowId:
          nullable: true
          pattern: "^las:workflow:[a-f0-9]{32}$"
          type: string
      required:
      - logId
      - startTime
      - transitionExecutionId
      - transitionId
      - workflowExecutionId
      - workflowId
      type: object
    Logs_transitionId:
      anyOf:
      - pattern: "^las:transition:[a-f0-9]{32}$"
        type: string
      - pattern: "^las:transition:commons-[0-9A-Za-z-]+$"
        type: string
    Model_fieldConfig_value_oneOf:
      example:
        description: description
        type: amount
        enum:
        - enum
        - enum
        - enum
        - enum
        - enum
        maxLength: 41
      properties:
        description:
          maxLength: 4096
          nullable: true
          type: string
        enum:
          items:
            maxLength: 512
            minLength: 1
            pattern: "^[0-9A-Za-zÆØÅæøå!\"#$%&()*+,\\-./:;<=>?@\\[\\]\\^_`{|}~ ]+$"
            type: string
          maxItems: 500
          minItems: 1
          type: array
          uniqueItems: true
        maxLength:
          maximum: 512
          minimum: 1
          type: integer
        type:
          enum:
          - amount
          - date
          - digits
          - enum
          - numeric
          - string
          type: string
      required:
      - type
      type: object
    Model_fieldConfig_value_oneOf_1:
      properties:
        fields:
          additionalProperties:
            $ref: '#/components/schemas/Model_fieldConfig_value_oneOf'
          type: object
        type:
          enum:
          - lines
          type: string
      required:
      - fields
      - type
      type: object
    Model_fieldConfig_value:
      oneOf:
      - $ref: '#/components/schemas/Model_fieldConfig_value_oneOf'
      - $ref: '#/components/schemas/Model_fieldConfig_value_oneOf_1'
    Model_postprocessConfig_oneOf:
      additionalProperties: false
      example:
        strategy: BEST_FIRST
      properties:
        strategy:
          enum:
          - BEST_FIRST
          type: string
      required:
      - strategy
      type: object
    Model_postprocessConfig_oneOf_1_parameters:
      properties:
        collapse:
          type: boolean
        "n":
          maximum: 3
          minimum: 1
          type: integer
      required:
      - "n"
      type: object
    Model_postprocessConfig_oneOf_1:
      additionalProperties: false
      properties:
        parameters:
          $ref: '#/components/schemas/Model_postprocessConfig_oneOf_1_parameters'
        strategy:
          enum:
          - BEST_N_PAGES
          type: string
      required:
      - parameters
      - strategy
      type: object
    Model_postprocessConfig:
      oneOf:
      - $ref: '#/components/schemas/Model_postprocessConfig_oneOf'
      - $ref: '#/components/schemas/Model_postprocessConfig_oneOf_1'
    Model_preprocessConfig:
      additionalProperties: false
      example:
        maxPages: 2
        autoRotate: true
        imageQuality: LOW
      properties:
        autoRotate:
          type: boolean
        imageQuality:
          enum:
          - LOW
          - HIGH
          type: string
        maxPages:
          maximum: 3
          minimum: 1
          type: integer
      required:
      - autoRotate
      - imageQuality
      - maxPages
      type: object
    Models_models_inner:
      additionalProperties: false
      example:
        updatedTime: updatedTime
        metadata: "{}"
        updatedBy: updatedBy
        trainingId: trainingId
        modelId: modelId
        postprocessConfig:
          strategy: BEST_FIRST
        description: description
        fieldConfig:
          key:
            description: description
            type: amount
            enum:
            - enum
            - enum
            - enum
            - enum
            - enum
            maxLength: 41
        organizationId: organizationId
        preprocessConfig:
          maxPages: 2
          autoRotate: true
          imageQuality: LOW
        createdBy: createdBy
        numberOfRunningTrainings: 0
        name: name
        numberOfDataBundles: 0
        createdTime: createdTime
        status: active
      properties:
        createdBy:
          maxLength: 4096
          nullable: true
          type: string
        createdTime:
          nullable: true
          pattern: "^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$"
          type: string
        description:
          maxLength: 4096
          nullable: true
          type: string
        fieldConfig:
          additionalProperties:
            $ref: '#/components/schemas/Model_fieldConfig_value'
          nullable: true
          type: object
        metadata:
          nullable: true
          type: object
        modelId:
          pattern: "^las:model:[a-z0-9-_]+$"
          type: string
        name:
          maxLength: 4096
          nullable: true
          type: string
        numberOfDataBundles:
          minimum: 0
          type: integer
        numberOfRunningTrainings:
          minimum: 0
          type: integer
        organizationId:
          pattern: "^las:organization:[a-z0-9-_]+$"
          type: string
        postprocessConfig:
          $ref: '#/components/schemas/Model_postprocessConfig'
        preprocessConfig:
          $ref: '#/components/schemas/Model_preprocessConfig'
        status:
          enum:
          - active
          - inactive
          type: string
        trainingId:
          nullable: true
          pattern: "^las:model-training:[a-f0-9]{32}$"
          type: string
        updatedBy:
          maxLength: 4096
          nullable: true
          type: string
        updatedTime:
          nullable: true
          pattern: "^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$"
          type: string
      required:
      - createdBy
      - createdTime
      - description
      - fieldConfig
      - metadata
      - modelId
      - name
      - numberOfDataBundles
      - numberOfRunningTrainings
      - organizationId
      - preprocessConfig
      - status
      - trainingId
      - updatedBy
      - updatedTime
      type: object
    Organizations_organizations_inner:
      additionalProperties: false
      example:
        numberOfWorkflowsCreated: 0
        monthlyNumberOfFieldPredictionsUsed: 0
        monthlyNumberOfWorkflowExecutionsCreated: 0
        description: description
        deploymentsAllowed: "{}"
        numberOfUsersAllowed: 0
        monthlyNumberOfPredictionsAllowed: 0
        monthlyNumberOfDataBundlesAllowed: 0
        numberOfDatasetsAllowed: 0
        numberOfModelsCreated: 0
        organizationId: organizationId
        monthlyNumberOfTransitionExecutionsAllowed: 0
        numberOfTransitionsCreated: 0
        monthlyNumberOfDocumentsAllowed: 0
        numberOfSecretsAllowed: 0
        monthlyNumberOfTrainingsCreated: 0
        paymentMethodId: paymentMethodId
        planId: planId
        monthlyNumberOfModelDeploymentUnitsUsed: 0
        monthlyUsageSummary: "{}"
        numberOfAppClientsCreated: 0
        numberOfAssetsCreated: 0
        updatedTime: updatedTime
        deploymentsCreated: "{}"
        monthlyNumberOfGpuHoursUsed: 0.3616076749251911
        numberOfWorkflowsAllowed: 0
        clientId: clientId
        updatedBy: updatedBy
        monthlyNumberOfWorkflowExecutionsAllowed: 0
        monthlyNumberOfActiveModelsUsed: 0
        documentRetentionInDays: 1
        monthlyNumberOfDataBundlesCreated: 0
        monthlyNumberOfPredictionsCreated: 0
        numberOfUsersCreated: 0
        numberOfDatasetsCreated: 0
        monthlyNumberOfTransitionExecutionsCreated: 0
        numberOfTransitionsAllowed: 0
        monthlyNumberOfDocumentsCreated: 0
        numberOfModelsAllowed: 0
        numberOfSecretsCreated: 0
        monthlyNumberOfTrainingsAllowed: 0
        monthlyNumberOfFieldPredictionsAllowed: 0
        name: name
        numberOfAppClientsAllowed: 0
        numberOfAssetsAllowed: 0
      properties:
        clientId:
          nullable: true
          pattern: "^[0-9a-z]+$"
          type: string
        deploymentsAllowed:
          type: object
        deploymentsCreated:
          type: object
        description:
          maxLength: 4096
          nullable: true
          type: string
        documentRetentionInDays:
          minimum: 1
          type: integer
        monthlyNumberOfActiveModelsUsed:
          minimum: 0
          type: integer
        monthlyNumberOfDataBundlesAllowed:
          minimum: 0
          type: integer
        monthlyNumberOfDataBundlesCreated:
          minimum: 0
          type: integer
        monthlyNumberOfDocumentsAllowed:
          minimum: 0
          type: integer
        monthlyNumberOfDocumentsCreated:
          minimum: 0
          type: integer
        monthlyNumberOfFieldPredictionsAllowed:
          minimum: 0
          type: integer
        monthlyNumberOfFieldPredictionsUsed:
          minimum: 0
          type: integer
        monthlyNumberOfGpuHoursUsed:
          minimum: 0
          type: number
        monthlyNumberOfModelDeploymentUnitsUsed:
          minimum: 0
          type: integer
        monthlyNumberOfPredictionsAllowed:
          minimum: 0
          type: integer
        monthlyNumberOfPredictionsCreated:
          minimum: 0
          type: integer
        monthlyNumberOfTrainingsAllowed:
          minimum: 0
          type: integer
        monthlyNumberOfTrainingsCreated:
          minimum: 0
          type: integer
        monthlyNumberOfTransitionExecutionsAllowed:
          minimum: 0
          type: integer
        monthlyNumberOfTransitionExecutionsCreated:
          minimum: 0
          type: integer
        monthlyNumberOfWorkflowExecutionsAllowed:
          minimum: 0
          type: integer
        monthlyNumberOfWorkflowExecutionsCreated:
          minimum: 0
          type: integer
        monthlyUsageSummary:
          type: object
        name:
          maxLength: 4096
          nullable: true
          type: string
        numberOfAppClientsAllowed:
          minimum: 0
          type: integer
        numberOfAppClientsCreated:
          minimum: 0
          type: integer
        numberOfAssetsAllowed:
          minimum: 0
          type: integer
        numberOfAssetsCreated:
          minimum: 0
          type: integer
        numberOfDatasetsAllowed:
          minimum: 0
          type: integer
        numberOfDatasetsCreated:
          minimum: 0
          type: integer
        numberOfModelsAllowed:
          minimum: 0
          type: integer
        numberOfModelsCreated:
          minimum: 0
          type: integer
        numberOfSecretsAllowed:
          minimum: 0
          type: integer
        numberOfSecretsCreated:
          minimum: 0
          type: integer
        numberOfTransitionsAllowed:
          minimum: 0
          type: integer
        numberOfTransitionsCreated:
          minimum: 0
          type: integer
        numberOfUsersAllowed:
          minimum: 0
          type: integer
        numberOfUsersCreated:
          minimum: 0
          type: integer
        numberOfWorkflowsAllowed:
          minimum: 0
          type: integer
        numberOfWorkflowsCreated:
          minimum: 0
          type: integer
        organizationId:
          pattern: "^las:organization:[a-z0-9-_]+$"
          type: string
        paymentMethodId:
          nullable: true
          pattern: "^las:payment-method:[a-f0-9]{32}$"
          type: string
        planId:
          nullable: true
          pattern: "^(|las:organization:[a-z0-9-_]+/)las:plan:[a-z0-9-_]+(|:@[a-z0-9-_]+|:[0-9]+)$"
          type: string
        updatedBy:
          maxLength: 4096
          nullable: true
          type: string
        updatedTime:
          nullable: true
          pattern: "^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$"
          type: string
      required:
      - description
      - documentRetentionInDays
      - monthlyNumberOfActiveModelsUsed
      - monthlyNumberOfDataBundlesAllowed
      - monthlyNumberOfDataBundlesCreated
      - monthlyNumberOfDocumentsAllowed
      - monthlyNumberOfDocumentsCreated
      - monthlyNumberOfFieldPredictionsAllowed
      - monthlyNumberOfFieldPredictionsUsed
      - monthlyNumberOfGpuHoursUsed
      - monthlyNumberOfPredictionsAllowed
      - monthlyNumberOfPredictionsCreated
      - monthlyNumberOfTrainingsAllowed
      - monthlyNumberOfTrainingsCreated
      - monthlyNumberOfTransitionExecutionsAllowed
      - monthlyNumberOfTransitionExecutionsCreated
      - monthlyNumberOfWorkflowExecutionsAllowed
      - monthlyNumberOfWorkflowExecutionsCreated
      - monthlyUsageSummary
      - name
      - numberOfAppClientsAllowed
      - numberOfAppClientsCreated
      - numberOfAssetsAllowed
      - numberOfAssetsCreated
      - numberOfModelsAllowed
      - numberOfModelsCreated
      - numberOfSecretsAllowed
      - numberOfSecretsCreated
      - numberOfTransitionsAllowed
      - numberOfTransitionsCreated
      - numberOfUsersAllowed
      - numberOfUsersCreated
      - numberOfWorkflowsAllowed
      - numberOfWorkflowsCreated
      - organizationId
      - paymentMethodId
      - planId
      - updatedBy
      - updatedTime
      type: object
    PatchTransistionExecutionId_anyOf:
      properties:
        status:
          enum:
          - succeeded
          type: string
      type: object
    PatchTransistionExecutionId_anyOf_1:
      properties:
        status:
          enum:
          - failed
          - rejected
          - retry
          type: string
      type: object
    PatchTransitionId_assets:
      additionalProperties:
        pattern: "^las:asset:[a-f0-9]{32}$"
        type: string
      example:
        jsRemoteComponent: jsRemoteComponent
      properties:
        jsRemoteComponent:
          pattern: "^las:asset:[a-f0-9]{32}$"
          type: string
      type: object
    PatchTransitionId_parameters_anyOf:
      additionalProperties: false
      example:
        environmentSecrets:
        - environmentSecrets
        - environmentSecrets
        environment:
          key: environment
        memory: 6
        imageUrl: imageUrl
        cpu: 0
        secretId: secretId
      properties:
        cpu:
          enum:
          - 256
          - 512
          - 1024
          type: integer
        environment:
          additionalProperties:
            type: string
          nullable: true
          type: object
        environmentSecrets:
          items:
            pattern: "^las:secret:[a-f0-9]{32}$"
            type: string
          nullable: true
          type: array
        imageUrl:
          type: string
        memory:
          enum:
          - 512
          - 1024
          - 2048
          - 4096
          - 8192
          type: integer
        secretId:
          nullable: true
          pattern: "^las:secret:[a-f0-9]{32}$"
          type: string
      type: object
    PatchTransitionId_parameters_anyOf_1:
      additionalProperties: false
      properties:
        assets:
          $ref: '#/components/schemas/PatchTransitionId_assets'
      type: object
    PatchTransitionId_parameters:
      anyOf:
      - $ref: '#/components/schemas/PatchTransitionId_parameters_anyOf'
      - $ref: '#/components/schemas/PatchTransitionId_parameters_anyOf_1'
    PatchWorkflowId_completedConfig:
      additionalProperties: false
      example:
        environmentSecrets:
        - environmentSecrets
        - environmentSecrets
        environment:
          key: environment
        imageUrl: imageUrl
        secretId: secretId
      properties:
        environment:
          additionalProperties:
            type: string
          type: object
        environmentSecrets:
          items:
            pattern: "^las:secret:[a-f0-9]{32}$"
            type: string
          type: array
        imageUrl:
          type: string
        secretId:
          pattern: "^las:secret:[a-f0-9]{32}$"
          type: string
      required:
      - imageUrl
      type: object
    PatchWorkflowId_errorConfig:
      additionalProperties: false
      example:
        manualRetry: true
        email: email
      properties:
        email:
          pattern: "^[A-Za-z0-9][-+._A-Za-z0-9]*@([-_.A-Za-z0-9]+\\.)+[A-Za-z]{2,}$"
          type: string
        manualRetry:
          type: boolean
      type: object
    PaymentMethods_paymentMethods_inner:
      additionalProperties: false
      example:
        updatedTime: updatedTime
        updatedBy: updatedBy
        createdBy: createdBy
        paymentMethodId: paymentMethodId
        stripeSetupIntentSecret: stripeSetupIntentSecret
        name: name
        createdTime: createdTime
        description: description
        details: "{}"
        stripePublishableKey: stripePublishableKey
      properties:
        createdBy:
          maxLength: 4096
          nullable: true
          type: string
        createdTime:
          nullable: true
          pattern: "^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$"
          type: string
        description:
          maxLength: 4096
          nullable: true
          type: string
        details:
          nullable: true
          type: object
        name:
          maxLength: 4096
          nullable: true
          type: string
        paymentMethodId:
          pattern: "^las:payment-method:[a-f0-9]{32}$"
          type: string
        stripePublishableKey:
          maxLength: 4096
          nullable: true
          type: string
        stripeSetupIntentSecret:
          maxLength: 4096
          nullable: true
          type: string
        updatedBy:
          maxLength: 4096
          nullable: true
          type: string
        updatedTime:
          nullable: true
          pattern: "^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$"
          type: string
      required:
      - createdBy
      - createdTime
      - description
      - details
      - name
      - paymentMethodId
      - updatedBy
      - updatedTime
      type: object
    Plans_plans_inner:
      additionalProperties: false
      example:
        organizationId: organizationId
        license: "{}"
        fieldPredictions: "{}"
        gpuHours: "{}"
        available: true
        name: name
        activeModels: "{}"
        description: description
        currency: USD
        modelDeploymentUnits: "{}"
        planId: planId
        latest: 1
      properties:
        activeModels:
          nullable: true
          type: object
        available:
          type: boolean
        currency:
          enum:
          - USD
          - EUR
          - NOK
          type: string
        description:
          maxLength: 4096
          nullable: true
          type: string
        fieldPredictions:
          nullable: true
          type: object
        gpuHours:
          nullable: true
          type: object
        latest:
          minimum: 1
          type: integer
        license:
          nullable: true
          type: object
        modelDeploymentUnits:
          nullable: true
          type: object
        name:
          maxLength: 4096
          nullable: true
          type: string
        organizationId:
          nullable: true
          pattern: "^las:organization:[a-z0-9-_]+$"
          type: string
        planId:
          pattern: "^las:plan:[a-z0-9-_]+(|:@[a-z0-9-_]+|:[0-9]+)$"
          type: string
      required:
      - available
      - currency
      - latest
      - name
      - organizationId
      - planId
      type: object
    PostTrainings_warmStartConfig:
      additionalProperties: false
      example:
        trainingId: trainingId
      properties:
        trainingId:
          pattern: "^las:model-training:[a-f0-9]{32}$"
          type: string
      required:
      - trainingId
      type: object
    PostTransitions_parameters_anyOf:
      additionalProperties: false
      example:
        environmentSecrets:
        - environmentSecrets
        - environmentSecrets
        environment:
          key: environment
        memory: 6
        imageUrl: imageUrl
        cpu: 0
        secretId: secretId
      properties:
        cpu:
          enum:
          - 256
          - 512
          - 1024
          type: integer
        environment:
          additionalProperties:
            type: string
          type: object
        environmentSecrets:
          items:
            pattern: "^las:secret:[a-f0-9]{32}$"
            type: string
          type: array
        imageUrl:
          type: string
        memory:
          enum:
          - 512
          - 1024
          - 2048
          - 4096
          - 8192
          type: integer
        secretId:
          pattern: "^las:secret:[a-f0-9]{32}$"
          type: string
      required:
      - imageUrl
      type: object
    PostTransitions_parameters:
      anyOf:
      - $ref: '#/components/schemas/PostTransitions_parameters_anyOf'
      - $ref: '#/components/schemas/PatchTransitionId_parameters_anyOf_1'
    PostWorkflows_specification:
      additionalProperties: false
      example:
        definition: "{}"
        language: ASL
        version: 1.0.0
      properties:
        definition:
          type: object
        language:
          enum:
          - ASL
          type: string
        version:
          enum:
          - 1.0.0
          type: string
      required:
      - definition
      type: object
    Prediction_postprocessConfig:
      nullable: true
      oneOf:
      - $ref: '#/components/schemas/Model_postprocessConfig_oneOf'
      - $ref: '#/components/schemas/Model_postprocessConfig_oneOf_1'
    Prediction_predictions_inner_anyOf:
      additionalProperties: false
      example:
        confidence: 0.6027456183070403
        location:
        - 0.14658129805029452
        - 0.14658129805029452
        - 0.14658129805029452
        - 0.14658129805029452
        label: label
        page: 0
        value: value
      properties:
        confidence:
          maximum: 1
          minimum: 0
          type: number
        label:
          maxLength: 36
          minLength: 1
          pattern: "^[0-9A-Za-z-_]+$"
          type: string
        location:
          items:
            maximum: 1
            minimum: 0
            type: number
          maxItems: 4
          minItems: 4
          type: array
        page:
          minimum: 0
          type: integer
        value:
          maxLength: 512
          minLength: 1
          nullable: true
          type: string
      required:
      - confidence
      - label
      - value
      type: object
    Prediction_predictions_inner_anyOf_1:
      additionalProperties: false
      properties:
        label:
          maxLength: 36
          minLength: 1
          pattern: "^[0-9A-Za-z-_]+$"
          type: string
        page:
          minimum: 0
          type: integer
        value:
          items:
            items:
              $ref: '#/components/schemas/Prediction_predictions_inner_anyOf'
            type: array
          type: array
      required:
      - label
      - value
      type: object
    Prediction_predictions_inner:
      anyOf:
      - $ref: '#/components/schemas/Prediction_predictions_inner_anyOf'
      - $ref: '#/components/schemas/Prediction_predictions_inner_anyOf_1'
    Prediction_preprocessConfig:
      additionalProperties: false
      example:
        maxPages: 2
        autoRotate: true
        imageQuality: LOW
      nullable: true
      properties:
        autoRotate:
          type: boolean
        imageQuality:
          enum:
          - LOW
          - HIGH
          type: string
        maxPages:
          maximum: 3
          minimum: 1
          type: integer
      required:
      - autoRotate
      - imageQuality
      - maxPages
      type: object
    Predictions_predictions_inner:
      additionalProperties: false
      example:
        preprocessConfig:
          maxPages: 2
          autoRotate: true
          imageQuality: LOW
        trainingId: trainingId
        createdBy: createdBy
        modelId: modelId
        postprocessConfig:
          strategy: BEST_FIRST
        createdTime: createdTime
        inferenceTime: 0.08008281904610115
        documentId: documentId
        predictionId: predictionId
        predictions:
        - confidence: 0.6027456183070403
          location:
          - 0.14658129805029452
          - 0.14658129805029452
          - 0.14658129805029452
          - 0.14658129805029452
          label: label
          page: 0
          value: value
        - confidence: 0.6027456183070403
          location:
          - 0.14658129805029452
          - 0.14658129805029452
          - 0.14658129805029452
          - 0.14658129805029452
          label: label
          page: 0
          value: value
      properties:
        createdBy:
          maxLength: 4096
          nullable: true
          type: string
        createdTime:
          nullable: true
          pattern: "^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$"
          type: string
        documentId:
          pattern: "^las:document:[a-f0-9]{32}$"
          type: string
        inferenceTime:
          minimum: 0
          type: number
        modelId:
          pattern: "^(|las:organization:[a-z0-9-_]+/)las:model:[a-z0-9-_]+$"
          type: string
        postprocessConfig:
          $ref: '#/components/schemas/Prediction_postprocessConfig'
        predictionId:
          pattern: "^las:prediction:[a-f0-9]{32}$"
          type: string
        predictions:
          items:
            $ref: '#/components/schemas/Prediction_predictions_inner'
          type: array
        preprocessConfig:
          $ref: '#/components/schemas/Prediction_preprocessConfig'
        trainingId:
          nullable: true
          pattern: "^las:model-training:[a-f0-9]{32}$"
          type: string
      required:
      - documentId
      - inferenceTime
      - modelId
      - predictionId
      - predictions
      type: object
    Secrets_secrets_inner:
      additionalProperties: false
      example:
        updatedTime: updatedTime
        updatedBy: updatedBy
        createdBy: createdBy
        name: name
        createdTime: createdTime
        description: description
        secretId: secretId
      properties:
        createdBy:
          maxLength: 4096
          nullable: true
          type: string
        createdTime:
          nullable: true
          pattern: "^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$"
          type: string
        description:
          maxLength: 4096
          nullable: true
          type: string
        name:
          maxLength: 4096
          nullable: true
          type: string
        secretId:
          pattern: "^las:secret:[a-f0-9]{32}$"
          type: string
        updatedBy:
          maxLength: 4096
          nullable: true
          type: string
        updatedTime:
          nullable: true
          pattern: "^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$"
          type: string
      required:
      - createdBy
      - createdTime
      - description
      - name
      - secretId
      - updatedBy
      - updatedTime
      type: object
    Training_warmStartConfig:
      anyOf:
      - $ref: '#/components/schemas/PostTrainings_warmStartConfig'
      - additionalProperties: false
        properties: {}
        type: object
    Trainings_trainings_inner:
      additionalProperties: false
      example:
        dataScientistAssistance: true
        updatedTime: updatedTime
        deploymentEnvironmentId: deploymentEnvironmentId
        metadata: "{}"
        updatedBy: updatedBy
        warmStartConfig:
          trainingId: trainingId
        trainingId: trainingId
        modelId: modelId
        gpuHours: 0.08008281904610115
        instanceType: small-gpu
        description: description
        evaluation: "{}"
        createdBy: createdBy
        dataBundleIds:
        - dataBundleIds
        - dataBundleIds
        name: name
        createdTime: createdTime
        status: waiting-for-approval
      properties:
        createdBy:
          maxLength: 4096
          nullable: true
          type: string
        createdTime:
          nullable: true
          pattern: "^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$"
          type: string
        dataBundleIds:
          items:
            pattern: "^las:model-data-bundle:[a-f0-9]{32}$"
            type: string
          type: array
        dataScientistAssistance:
          type: boolean
        deploymentEnvironmentId:
          nullable: true
          pattern: "^(|las:organization:[a-z0-9-_]+/)las:deployment-environment:[a-z0-9-_]+(|:@[a-z0-9-_]+|:[0-9]+)$"
          type: string
        description:
          maxLength: 4096
          nullable: true
          type: string
        evaluation:
          type: object
        gpuHours:
          minimum: 0
          nullable: true
          type: number
        instanceType:
          enum:
          - small-gpu
          - medium-gpu
          - large-gpu
          type: string
        metadata:
          nullable: true
          type: object
        modelId:
          pattern: "^las:model:[a-z0-9-_]+$"
          type: string
        name:
          maxLength: 4096
          nullable: true
          type: string
        status:
          enum:
          - waiting-for-approval
          - pending
          - running
          - succeeded
          - failed
          - cancelled
          type: string
        trainingId:
          pattern: "^las:model-training:[a-f0-9]{32}$"
          type: string
        updatedBy:
          maxLength: 4096
          nullable: true
          type: string
        updatedTime:
          nullable: true
          pattern: "^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$"
          type: string
        warmStartConfig:
          $ref: '#/components/schemas/Training_warmStartConfig'
      required:
      - createdBy
      - createdTime
      - dataBundleIds
      - description
      - evaluation
      - gpuHours
      - instanceType
      - metadata
      - modelId
      - name
      - status
      - trainingId
      - updatedBy
      - updatedTime
      type: object
    TransitionExecutions_executions_inner:
      additionalProperties: false
      example:
        executionId: executionId
        input: "{}"
        transitionId: Logs_transitionId
        logId: logId
        startTime: startTime
        endTime: endTime
        completedBy: completedBy
        status: running
      properties:
        completedBy:
          maxLength: 4096
          nullable: true
          type: string
        endTime:
          nullable: true
          pattern: "^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$"
          type: string
        executionId:
          pattern: "^las:transition-execution:[a-f0-9]{32}$"
          type: string
        input:
          nullable: true
          type: object
        logId:
          nullable: true
          pattern: "^las:log:[a-f0-9]{32}$"
          type: string
        startTime:
          nullable: true
          pattern: "^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$"
          type: string
        status:
          enum:
          - running
          - succeeded
          - failed
          - rejected
          - retry
          type: string
        transitionId:
          $ref: '#/components/schemas/Logs_transitionId'
      required:
      - completedBy
      - executionId
      - input
      - status
      - transitionId
      type: object
    Transitions_transitions_inner:
      additionalProperties: false
      example:
        updatedTime: updatedTime
        updatedBy: updatedBy
        transitionId: Logs_transitionId
        description: description
        inputJsonSchema: "{}"
        timeoutInSeconds: 199
        assets:
          jsRemoteComponent: jsRemoteComponent
        outputJsonSchema: "{}"
        createdBy: createdBy
        name: name
        createdTime: createdTime
        parameters: "{}"
        transitionType: docker
      properties:
        assets:
          $ref: '#/components/schemas/PatchTransitionId_assets'
        createdBy:
          maxLength: 4096
          nullable: true
          type: string
        createdTime:
          nullable: true
          pattern: "^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$"
          type: string
        description:
          maxLength: 4096
          nullable: true
          type: string
        inputJsonSchema:
          type: object
        name:
          maxLength: 4096
          nullable: true
          type: string
        outputJsonSchema:
          type: object
        parameters:
          type: object
        timeoutInSeconds:
          maximum: 1800
          minimum: 60
          type: integer
        transitionId:
          $ref: '#/components/schemas/Logs_transitionId'
        transitionType:
          enum:
          - docker
          - manual
          type: string
        updatedBy:
          maxLength: 4096
          nullable: true
          type: string
        updatedTime:
          nullable: true
          pattern: "^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$"
          type: string
      required:
      - createdBy
      - createdTime
      - description
      - name
      - parameters
      - timeoutInSeconds
      - transitionId
      - transitionType
      - updatedBy
      - updatedTime
      type: object
    Users_users_inner:
      additionalProperties: false
      example:
        updatedTime: updatedTime
        metadata: "{}"
        updatedBy: updatedBy
        createdBy: createdBy
        profileId: profileId
        name: name
        createdTime: createdTime
        avatar: avatar
        userId: userId
        email: email
      properties:
        avatar:
          maxLength: 131072
          nullable: true
          type: string
        createdBy:
          maxLength: 4096
          nullable: true
          type: string
        createdTime:
          nullable: true
          pattern: "^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$"
          type: string
        email:
          pattern: "^[A-Za-z0-9][-+._A-Za-z0-9]*@([-_.A-Za-z0-9]+\\.)+[A-Za-z]{2,}$"
          type: string
        metadata:
          nullable: true
          type: object
        name:
          maxLength: 4096
          nullable: true
          type: string
        profileId:
          nullable: true
          pattern: "^las:profile:[a-f0-9]{32}$"
          type: string
        updatedBy:
          maxLength: 4096
          nullable: true
          type: string
        updatedTime:
          nullable: true
          pattern: "^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$"
          type: string
        userId:
          pattern: "^las:user:[a-f0-9]{32}$"
          type: string
      required:
      - createdBy
      - createdTime
      - email
      - updatedBy
      - updatedTime
      - userId
      type: object
    Workflow_completedConfig:
      additionalProperties: false
      example:
        environmentSecrets:
        - environmentSecrets
        - environmentSecrets
        environment:
          key: environment
        imageUrl: imageUrl
        secretId: secretId
      nullable: true
      properties:
        environment:
          additionalProperties:
            type: string
          type: object
        environmentSecrets:
          items:
            pattern: "^las:secret:[a-f0-9]{32}$"
            type: string
          type: array
        imageUrl:
          type: string
        secretId:
          pattern: "^las:secret:[a-f0-9]{32}$"
          type: string
      required:
      - imageUrl
      type: object
    Workflow_errorConfig:
      additionalProperties: false
      example:
        manualRetry: true
        email: email
      nullable: true
      properties:
        email:
          pattern: "^[A-Za-z0-9][-+._A-Za-z0-9]*@([-_.A-Za-z0-9]+\\.)+[A-Za-z]{2,}$"
          type: string
        manualRetry:
          type: boolean
      type: object
    WorkflowExecution_completedBy_inner:
      anyOf:
      - pattern: "^las:user:[a-f0-9]{32}$"
        type: string
      - pattern: "^las:app-client:[a-z0-9-_]+$"
        type: string
    WorkflowExecutions_executions_inner:
      additionalProperties: false
      example:
        output: "{}"
        transitionExecutions: "{}"
        executionId: executionId
        input: "{}"
        logId: logId
        startTime: startTime
        completedTaskLogId: completedTaskLogId
        endTime: endTime
        completedBy:
        - WorkflowExecution_completedBy_inner
        - WorkflowExecution_completedBy_inner
        events:
        - "{}"
        - "{}"
        workflowId: workflowId
        status: running
      properties:
        completedBy:
          items:
            $ref: '#/components/schemas/WorkflowExecution_completedBy_inner'
          type: array
        completedTaskLogId:
          nullable: true
          pattern: "^las:log:[a-f0-9]{32}$"
          type: string
        endTime:
          nullable: true
          pattern: "^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$"
          type: string
        events:
          items:
            type: object
          type: array
        executionId:
          pattern: "^las:workflow-execution:[a-f0-9]{32}$"
          type: string
        input:
          nullable: true
          type: object
        logId:
          nullable: true
          pattern: "^las:log:[a-f0-9]{32}$"
          type: string
        output:
          nullable: true
          type: object
        startTime:
          nullable: true
          pattern: "^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$"
          type: string
        status:
          enum:
          - running
          - succeeded
          - failed
          - rejected
          - retry
          - error
          type: string
        transitionExecutions:
          nullable: true
          type: object
        workflowId:
          pattern: "^las:workflow:[a-f0-9]{32}$"
          type: string
      required:
      - endTime
      - executionId
      - input
      - output
      - startTime
      - status
      - transitionExecutions
      - workflowId
      type: object
    Workflows_workflows_inner:
      additionalProperties: false
      example:
        updatedTime: updatedTime
        updatedBy: updatedBy
        numberOfRunningExecutions: 0
        completedConfig:
          environmentSecrets:
          - environmentSecrets
          - environmentSecrets
          environment:
            key: environment
          imageUrl: imageUrl
          secretId: secretId
        createdBy: createdBy
        name: name
        createdTime: createdTime
        description: description
        workflowId: workflowId
        errorConfig:
          manualRetry: true
          email: email
      properties:
        completedConfig:
          $ref: '#/components/schemas/Workflow_completedConfig'
        createdBy:
          maxLength: 4096
          nullable: true
          type: string
        createdTime:
          nullable: true
          pattern: "^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$"
          type: string
        description:
          maxLength: 4096
          nullable: true
          type: string
        errorConfig:
          $ref: '#/components/schemas/Workflow_errorConfig'
        name:
          maxLength: 4096
          nullable: true
          type: string
        numberOfRunningExecutions:
          type: integer
        updatedBy:
          maxLength: 4096
          nullable: true
          type: string
        updatedTime:
          nullable: true
          pattern: "^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$"
          type: string
        workflowId:
          pattern: "^las:workflow:[a-f0-9]{32}$"
          type: string
      required:
      - completedConfig
      - createdBy
      - createdTime
      - description
      - errorConfig
      - name
      - numberOfRunningExecutions
      - updatedBy
      - updatedTime
      - workflowId
      type: object
    groundTruthList_anyOf_inner_value:
      anyOf:
      - maxLength: 512
        minLength: 0
        type: string
      - type: boolean
      - type: number
      - $ref: '#/components/schemas/groundTruthList'
      nullable: true
    groundTruthList_anyOf_inner:
      additionalProperties: false
      properties:
        label:
          maxLength: 36
          minLength: 1
          pattern: "^[0-9A-Za-z-_]+$"
          type: string
        value:
          $ref: '#/components/schemas/groundTruthList_anyOf_inner_value'
      required:
      - label
      - value
      type: object
  securitySchemes:
    OAuth2:
      flows:
        clientCredentials:
          scopes:
            api.lucidtech.ai/appclients:read: Read permissions
            api.lucidtech.ai/appclients:write: Write permissions
            api.lucidtech.ai/assets:read: Read permissions
            api.lucidtech.ai/assets:write: Write permissions
            api.lucidtech.ai/databundles:read: Read permissions
            api.lucidtech.ai/databundles:write: Write permissions
            api.lucidtech.ai/datasets:read: Read permissions
            api.lucidtech.ai/datasets:write: Write permissions
            api.lucidtech.ai/deploymentenvironments:read: Read permissions
            api.lucidtech.ai/documents:read: Read permissions
            api.lucidtech.ai/documents:write: Write permissions
            api.lucidtech.ai/logs:read: Read permissions
            api.lucidtech.ai/models:read: Read permissions
            api.lucidtech.ai/models:write: Write permissions
            api.lucidtech.ai/organizations:read: Read permissions
            api.lucidtech.ai/organizations:write: Write permissions
            api.lucidtech.ai/paymentmethods:read: Read permissions
            api.lucidtech.ai/paymentmethods:write: Write permissions
            api.lucidtech.ai/plans:read: Read permissions
            api.lucidtech.ai/predictions:read: Read permissions
            api.lucidtech.ai/predictions:write: Write permissions
            api.lucidtech.ai/profiles:read: Read permissions
            api.lucidtech.ai/profiles:write: Write permissions
            api.lucidtech.ai/secrets:read: Read permissions
            api.lucidtech.ai/secrets:write: Write permissions
            api.lucidtech.ai/trainings:read: Read permissions
            api.lucidtech.ai/trainings:write: Write permissions
            api.lucidtech.ai/transitions.executions.heartbeats:write: Write permissions
            api.lucidtech.ai/transitions.executions:read: Read permissions
            api.lucidtech.ai/transitions.executions:write: Write permissions
            api.lucidtech.ai/transitions:read: Read permissions
            api.lucidtech.ai/transitions:write: Write permissions
            api.lucidtech.ai/users:read: Read permissions
            api.lucidtech.ai/users:write: Write permissions
            api.lucidtech.ai/workflows.executions:read: Read permissions
            api.lucidtech.ai/workflows.executions:write: Write permissions
            api.lucidtech.ai/workflows:read: Read permissions
            api.lucidtech.ai/workflows:write: Write permissions
          tokenUrl: https://auth.lucidtech.ai/oauth2/token
      type: oauth2

