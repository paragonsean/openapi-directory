/**
 * Lucidtech API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2023-03-23T15:40:40Z
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ModelPostprocessConfigOneOf from './ModelPostprocessConfigOneOf';
import ModelPostprocessConfigOneOf1 from './ModelPostprocessConfigOneOf1';
import ModelPostprocessConfigOneOf1Parameters from './ModelPostprocessConfigOneOf1Parameters';

/**
 * The PredictionPostprocessConfig model module.
 * @module model/PredictionPostprocessConfig
 * @version 2023-03-23T15:40:40Z
 */
class PredictionPostprocessConfig {
    /**
     * Constructs a new <code>PredictionPostprocessConfig</code>.
     * @alias module:model/PredictionPostprocessConfig
     * @param {(module:model/ModelPostprocessConfigOneOf|module:model/ModelPostprocessConfigOneOf1)} instance The actual instance to initialize PredictionPostprocessConfig.
     */
    constructor(instance = null) {
        if (instance === null) {
            this.actualInstance = null;
            return;
        }
        var match = 0;
        var errorMessages = [];
        try {
            if (typeof instance === "ModelPostprocessConfigOneOf") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                ModelPostprocessConfigOneOf.validateJSON(instance); // throw an exception if no match
                // create ModelPostprocessConfigOneOf from JS object
                this.actualInstance = ModelPostprocessConfigOneOf.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into ModelPostprocessConfigOneOf
            errorMessages.push("Failed to construct ModelPostprocessConfigOneOf: " + err)
        }

        try {
            if (typeof instance === "ModelPostprocessConfigOneOf1") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                ModelPostprocessConfigOneOf1.validateJSON(instance); // throw an exception if no match
                // create ModelPostprocessConfigOneOf1 from JS object
                this.actualInstance = ModelPostprocessConfigOneOf1.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into ModelPostprocessConfigOneOf1
            errorMessages.push("Failed to construct ModelPostprocessConfigOneOf1: " + err)
        }

        if (match > 1) {
            throw new Error("Multiple matches found constructing `PredictionPostprocessConfig` with oneOf schemas ModelPostprocessConfigOneOf, ModelPostprocessConfigOneOf1. Input: " + JSON.stringify(instance));
        } else if (match === 0) {
            this.actualInstance = null; // clear the actual instance in case there are multiple matches
            throw new Error("No match found constructing `PredictionPostprocessConfig` with oneOf schemas ModelPostprocessConfigOneOf, ModelPostprocessConfigOneOf1. Details: " +
                            errorMessages.join(", "));
        } else { // only 1 match
            // the input is valid
        }
    }

    /**
     * Constructs a <code>PredictionPostprocessConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PredictionPostprocessConfig} obj Optional instance to populate.
     * @return {module:model/PredictionPostprocessConfig} The populated <code>PredictionPostprocessConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        return new PredictionPostprocessConfig(data);
    }

    /**
     * Gets the actual instance, which can be <code>ModelPostprocessConfigOneOf</code>, <code>ModelPostprocessConfigOneOf1</code>.
     * @return {(module:model/ModelPostprocessConfigOneOf|module:model/ModelPostprocessConfigOneOf1)} The actual instance.
     */
    getActualInstance() {
        return this.actualInstance;
    }

    /**
     * Sets the actual instance, which can be <code>ModelPostprocessConfigOneOf</code>, <code>ModelPostprocessConfigOneOf1</code>.
     * @param {(module:model/ModelPostprocessConfigOneOf|module:model/ModelPostprocessConfigOneOf1)} obj The actual instance.
     */
    setActualInstance(obj) {
       this.actualInstance = PredictionPostprocessConfig.constructFromObject(obj).getActualInstance();
    }

    /**
     * Returns the JSON representation of the actual instance.
     * @return {string}
     */
    toJSON = function(){
        return this.getActualInstance();
    }

    /**
     * Create an instance of PredictionPostprocessConfig from a JSON string.
     * @param {string} json_string JSON string.
     * @return {module:model/PredictionPostprocessConfig} An instance of PredictionPostprocessConfig.
     */
    static fromJSON = function(json_string){
        return PredictionPostprocessConfig.constructFromObject(JSON.parse(json_string));
    }
}

/**
 * @member {module:model/PredictionPostprocessConfig.StrategyEnum} strategy
 */
PredictionPostprocessConfig.prototype['strategy'] = undefined;

/**
 * @member {module:model/ModelPostprocessConfigOneOf1Parameters} parameters
 */
PredictionPostprocessConfig.prototype['parameters'] = undefined;


PredictionPostprocessConfig.OneOf = ["ModelPostprocessConfigOneOf", "ModelPostprocessConfigOneOf1"];

export default PredictionPostprocessConfig;

