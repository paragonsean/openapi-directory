/**
 * Lucidtech API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2023-03-23T15:40:40Z
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import WorkflowExecutionCompletedByInner from './WorkflowExecutionCompletedByInner';

/**
 * The WorkflowExecutionsExecutionsInner model module.
 * @module model/WorkflowExecutionsExecutionsInner
 * @version 2023-03-23T15:40:40Z
 */
class WorkflowExecutionsExecutionsInner {
    /**
     * Constructs a new <code>WorkflowExecutionsExecutionsInner</code>.
     * @alias module:model/WorkflowExecutionsExecutionsInner
     * @param endTime {String} 
     * @param executionId {String} 
     * @param input {Object} 
     * @param output {Object} 
     * @param startTime {String} 
     * @param status {module:model/WorkflowExecutionsExecutionsInner.StatusEnum} 
     * @param transitionExecutions {Object} 
     * @param workflowId {String} 
     */
    constructor(endTime, executionId, input, output, startTime, status, transitionExecutions, workflowId) { 
        
        WorkflowExecutionsExecutionsInner.initialize(this, endTime, executionId, input, output, startTime, status, transitionExecutions, workflowId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, endTime, executionId, input, output, startTime, status, transitionExecutions, workflowId) { 
        obj['endTime'] = endTime;
        obj['executionId'] = executionId;
        obj['input'] = input;
        obj['output'] = output;
        obj['startTime'] = startTime;
        obj['status'] = status;
        obj['transitionExecutions'] = transitionExecutions;
        obj['workflowId'] = workflowId;
    }

    /**
     * Constructs a <code>WorkflowExecutionsExecutionsInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WorkflowExecutionsExecutionsInner} obj Optional instance to populate.
     * @return {module:model/WorkflowExecutionsExecutionsInner} The populated <code>WorkflowExecutionsExecutionsInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WorkflowExecutionsExecutionsInner();

            if (data.hasOwnProperty('completedBy')) {
                obj['completedBy'] = ApiClient.convertToType(data['completedBy'], [WorkflowExecutionCompletedByInner]);
            }
            if (data.hasOwnProperty('completedTaskLogId')) {
                obj['completedTaskLogId'] = ApiClient.convertToType(data['completedTaskLogId'], 'String');
            }
            if (data.hasOwnProperty('endTime')) {
                obj['endTime'] = ApiClient.convertToType(data['endTime'], 'String');
            }
            if (data.hasOwnProperty('events')) {
                obj['events'] = ApiClient.convertToType(data['events'], [Object]);
            }
            if (data.hasOwnProperty('executionId')) {
                obj['executionId'] = ApiClient.convertToType(data['executionId'], 'String');
            }
            if (data.hasOwnProperty('input')) {
                obj['input'] = ApiClient.convertToType(data['input'], Object);
            }
            if (data.hasOwnProperty('logId')) {
                obj['logId'] = ApiClient.convertToType(data['logId'], 'String');
            }
            if (data.hasOwnProperty('output')) {
                obj['output'] = ApiClient.convertToType(data['output'], Object);
            }
            if (data.hasOwnProperty('startTime')) {
                obj['startTime'] = ApiClient.convertToType(data['startTime'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('transitionExecutions')) {
                obj['transitionExecutions'] = ApiClient.convertToType(data['transitionExecutions'], Object);
            }
            if (data.hasOwnProperty('workflowId')) {
                obj['workflowId'] = ApiClient.convertToType(data['workflowId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>WorkflowExecutionsExecutionsInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>WorkflowExecutionsExecutionsInner</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of WorkflowExecutionsExecutionsInner.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['completedBy']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['completedBy'])) {
                throw new Error("Expected the field `completedBy` to be an array in the JSON data but got " + data['completedBy']);
            }
            // validate the optional field `completedBy` (array)
            for (const item of data['completedBy']) {
                WorkflowExecutionCompletedByInner.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['completedTaskLogId'] && !(typeof data['completedTaskLogId'] === 'string' || data['completedTaskLogId'] instanceof String)) {
            throw new Error("Expected the field `completedTaskLogId` to be a primitive type in the JSON string but got " + data['completedTaskLogId']);
        }
        // ensure the json data is a string
        if (data['endTime'] && !(typeof data['endTime'] === 'string' || data['endTime'] instanceof String)) {
            throw new Error("Expected the field `endTime` to be a primitive type in the JSON string but got " + data['endTime']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['events'])) {
            throw new Error("Expected the field `events` to be an array in the JSON data but got " + data['events']);
        }
        // ensure the json data is a string
        if (data['executionId'] && !(typeof data['executionId'] === 'string' || data['executionId'] instanceof String)) {
            throw new Error("Expected the field `executionId` to be a primitive type in the JSON string but got " + data['executionId']);
        }
        // ensure the json data is a string
        if (data['logId'] && !(typeof data['logId'] === 'string' || data['logId'] instanceof String)) {
            throw new Error("Expected the field `logId` to be a primitive type in the JSON string but got " + data['logId']);
        }
        // ensure the json data is a string
        if (data['startTime'] && !(typeof data['startTime'] === 'string' || data['startTime'] instanceof String)) {
            throw new Error("Expected the field `startTime` to be a primitive type in the JSON string but got " + data['startTime']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // ensure the json data is a string
        if (data['workflowId'] && !(typeof data['workflowId'] === 'string' || data['workflowId'] instanceof String)) {
            throw new Error("Expected the field `workflowId` to be a primitive type in the JSON string but got " + data['workflowId']);
        }

        return true;
    }


}

WorkflowExecutionsExecutionsInner.RequiredProperties = ["endTime", "executionId", "input", "output", "startTime", "status", "transitionExecutions", "workflowId"];

/**
 * @member {Array.<module:model/WorkflowExecutionCompletedByInner>} completedBy
 */
WorkflowExecutionsExecutionsInner.prototype['completedBy'] = undefined;

/**
 * @member {String} completedTaskLogId
 */
WorkflowExecutionsExecutionsInner.prototype['completedTaskLogId'] = undefined;

/**
 * @member {String} endTime
 */
WorkflowExecutionsExecutionsInner.prototype['endTime'] = undefined;

/**
 * @member {Array.<Object>} events
 */
WorkflowExecutionsExecutionsInner.prototype['events'] = undefined;

/**
 * @member {String} executionId
 */
WorkflowExecutionsExecutionsInner.prototype['executionId'] = undefined;

/**
 * @member {Object} input
 */
WorkflowExecutionsExecutionsInner.prototype['input'] = undefined;

/**
 * @member {String} logId
 */
WorkflowExecutionsExecutionsInner.prototype['logId'] = undefined;

/**
 * @member {Object} output
 */
WorkflowExecutionsExecutionsInner.prototype['output'] = undefined;

/**
 * @member {String} startTime
 */
WorkflowExecutionsExecutionsInner.prototype['startTime'] = undefined;

/**
 * @member {module:model/WorkflowExecutionsExecutionsInner.StatusEnum} status
 */
WorkflowExecutionsExecutionsInner.prototype['status'] = undefined;

/**
 * @member {Object} transitionExecutions
 */
WorkflowExecutionsExecutionsInner.prototype['transitionExecutions'] = undefined;

/**
 * @member {String} workflowId
 */
WorkflowExecutionsExecutionsInner.prototype['workflowId'] = undefined;





/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
WorkflowExecutionsExecutionsInner['StatusEnum'] = {

    /**
     * value: "running"
     * @const
     */
    "running": "running",

    /**
     * value: "succeeded"
     * @const
     */
    "succeeded": "succeeded",

    /**
     * value: "failed"
     * @const
     */
    "failed": "failed",

    /**
     * value: "rejected"
     * @const
     */
    "rejected": "rejected",

    /**
     * value: "retry"
     * @const
     */
    "retry": "retry",

    /**
     * value: "error"
     * @const
     */
    "error": "error"
};



export default WorkflowExecutionsExecutionsInner;

