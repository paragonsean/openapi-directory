/**
 * Lucidtech API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2023-03-23T15:40:40Z
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PostWorkflowsSpecification model module.
 * @module model/PostWorkflowsSpecification
 * @version 2023-03-23T15:40:40Z
 */
class PostWorkflowsSpecification {
    /**
     * Constructs a new <code>PostWorkflowsSpecification</code>.
     * @alias module:model/PostWorkflowsSpecification
     * @param definition {Object} 
     */
    constructor(definition) { 
        
        PostWorkflowsSpecification.initialize(this, definition);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, definition) { 
        obj['definition'] = definition;
    }

    /**
     * Constructs a <code>PostWorkflowsSpecification</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PostWorkflowsSpecification} obj Optional instance to populate.
     * @return {module:model/PostWorkflowsSpecification} The populated <code>PostWorkflowsSpecification</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PostWorkflowsSpecification();

            if (data.hasOwnProperty('definition')) {
                obj['definition'] = ApiClient.convertToType(data['definition'], Object);
            }
            if (data.hasOwnProperty('language')) {
                obj['language'] = ApiClient.convertToType(data['language'], 'String');
            }
            if (data.hasOwnProperty('version')) {
                obj['version'] = ApiClient.convertToType(data['version'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PostWorkflowsSpecification</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PostWorkflowsSpecification</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PostWorkflowsSpecification.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['language'] && !(typeof data['language'] === 'string' || data['language'] instanceof String)) {
            throw new Error("Expected the field `language` to be a primitive type in the JSON string but got " + data['language']);
        }
        // ensure the json data is a string
        if (data['version'] && !(typeof data['version'] === 'string' || data['version'] instanceof String)) {
            throw new Error("Expected the field `version` to be a primitive type in the JSON string but got " + data['version']);
        }

        return true;
    }


}

PostWorkflowsSpecification.RequiredProperties = ["definition"];

/**
 * @member {Object} definition
 */
PostWorkflowsSpecification.prototype['definition'] = undefined;

/**
 * @member {module:model/PostWorkflowsSpecification.LanguageEnum} language
 */
PostWorkflowsSpecification.prototype['language'] = undefined;

/**
 * @member {module:model/PostWorkflowsSpecification.VersionEnum} version
 */
PostWorkflowsSpecification.prototype['version'] = undefined;





/**
 * Allowed values for the <code>language</code> property.
 * @enum {String}
 * @readonly
 */
PostWorkflowsSpecification['LanguageEnum'] = {

    /**
     * value: "ASL"
     * @const
     */
    "ASL": "ASL"
};


/**
 * Allowed values for the <code>version</code> property.
 * @enum {String}
 * @readonly
 */
PostWorkflowsSpecification['VersionEnum'] = {

    /**
     * value: "1.0.0"
     * @const
     */
    "1.0.0": "1.0.0"
};



export default PostWorkflowsSpecification;

