/**
 * Lucidtech API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2023-03-23T15:40:40Z
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ModelPreprocessConfig model module.
 * @module model/ModelPreprocessConfig
 * @version 2023-03-23T15:40:40Z
 */
class ModelPreprocessConfig {
    /**
     * Constructs a new <code>ModelPreprocessConfig</code>.
     * @alias module:model/ModelPreprocessConfig
     * @param autoRotate {Boolean} 
     * @param imageQuality {module:model/ModelPreprocessConfig.ImageQualityEnum} 
     * @param maxPages {Number} 
     */
    constructor(autoRotate, imageQuality, maxPages) { 
        
        ModelPreprocessConfig.initialize(this, autoRotate, imageQuality, maxPages);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, autoRotate, imageQuality, maxPages) { 
        obj['autoRotate'] = autoRotate;
        obj['imageQuality'] = imageQuality;
        obj['maxPages'] = maxPages;
    }

    /**
     * Constructs a <code>ModelPreprocessConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ModelPreprocessConfig} obj Optional instance to populate.
     * @return {module:model/ModelPreprocessConfig} The populated <code>ModelPreprocessConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ModelPreprocessConfig();

            if (data.hasOwnProperty('autoRotate')) {
                obj['autoRotate'] = ApiClient.convertToType(data['autoRotate'], 'Boolean');
            }
            if (data.hasOwnProperty('imageQuality')) {
                obj['imageQuality'] = ApiClient.convertToType(data['imageQuality'], 'String');
            }
            if (data.hasOwnProperty('maxPages')) {
                obj['maxPages'] = ApiClient.convertToType(data['maxPages'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ModelPreprocessConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ModelPreprocessConfig</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ModelPreprocessConfig.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['imageQuality'] && !(typeof data['imageQuality'] === 'string' || data['imageQuality'] instanceof String)) {
            throw new Error("Expected the field `imageQuality` to be a primitive type in the JSON string but got " + data['imageQuality']);
        }

        return true;
    }


}

ModelPreprocessConfig.RequiredProperties = ["autoRotate", "imageQuality", "maxPages"];

/**
 * @member {Boolean} autoRotate
 */
ModelPreprocessConfig.prototype['autoRotate'] = undefined;

/**
 * @member {module:model/ModelPreprocessConfig.ImageQualityEnum} imageQuality
 */
ModelPreprocessConfig.prototype['imageQuality'] = undefined;

/**
 * @member {Number} maxPages
 */
ModelPreprocessConfig.prototype['maxPages'] = undefined;





/**
 * Allowed values for the <code>imageQuality</code> property.
 * @enum {String}
 * @readonly
 */
ModelPreprocessConfig['ImageQualityEnum'] = {

    /**
     * value: "LOW"
     * @const
     */
    "LOW": "LOW",

    /**
     * value: "HIGH"
     * @const
     */
    "HIGH": "HIGH"
};



export default ModelPreprocessConfig;

