/**
 * Lucidtech API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2023-03-23T15:40:40Z
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PatchWorkflowIdCompletedConfig from './PatchWorkflowIdCompletedConfig';
import PatchWorkflowIdErrorConfig from './PatchWorkflowIdErrorConfig';

/**
 * The PatchWorkflowId model module.
 * @module model/PatchWorkflowId
 * @version 2023-03-23T15:40:40Z
 */
class PatchWorkflowId {
    /**
     * Constructs a new <code>PatchWorkflowId</code>.
     * @alias module:model/PatchWorkflowId
     */
    constructor() { 
        
        PatchWorkflowId.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PatchWorkflowId</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PatchWorkflowId} obj Optional instance to populate.
     * @return {module:model/PatchWorkflowId} The populated <code>PatchWorkflowId</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PatchWorkflowId();

            if (data.hasOwnProperty('completedConfig')) {
                obj['completedConfig'] = PatchWorkflowIdCompletedConfig.constructFromObject(data['completedConfig']);
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('errorConfig')) {
                obj['errorConfig'] = PatchWorkflowIdErrorConfig.constructFromObject(data['errorConfig']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PatchWorkflowId</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PatchWorkflowId</code>.
     */
    static validateJSON(data) {
        // validate the optional field `completedConfig`
        if (data['completedConfig']) { // data not null
          PatchWorkflowIdCompletedConfig.validateJSON(data['completedConfig']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // validate the optional field `errorConfig`
        if (data['errorConfig']) { // data not null
          PatchWorkflowIdErrorConfig.validateJSON(data['errorConfig']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }

        return true;
    }


}



/**
 * @member {module:model/PatchWorkflowIdCompletedConfig} completedConfig
 */
PatchWorkflowId.prototype['completedConfig'] = undefined;

/**
 * @member {String} description
 */
PatchWorkflowId.prototype['description'] = undefined;

/**
 * @member {module:model/PatchWorkflowIdErrorConfig} errorConfig
 */
PatchWorkflowId.prototype['errorConfig'] = undefined;

/**
 * @member {String} name
 */
PatchWorkflowId.prototype['name'] = undefined;






export default PatchWorkflowId;

