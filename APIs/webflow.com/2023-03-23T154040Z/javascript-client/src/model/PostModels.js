/**
 * Lucidtech API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2023-03-23T15:40:40Z
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ModelFieldConfigValue from './ModelFieldConfigValue';
import ModelPostprocessConfig from './ModelPostprocessConfig';
import ModelPreprocessConfig from './ModelPreprocessConfig';

/**
 * The PostModels model module.
 * @module model/PostModels
 * @version 2023-03-23T15:40:40Z
 */
class PostModels {
    /**
     * Constructs a new <code>PostModels</code>.
     * @alias module:model/PostModels
     * @param fieldConfig {Object.<String, module:model/ModelFieldConfigValue>} 
     */
    constructor(fieldConfig) { 
        
        PostModels.initialize(this, fieldConfig);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, fieldConfig) { 
        obj['fieldConfig'] = fieldConfig;
    }

    /**
     * Constructs a <code>PostModels</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PostModels} obj Optional instance to populate.
     * @return {module:model/PostModels} The populated <code>PostModels</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PostModels();

            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('fieldConfig')) {
                obj['fieldConfig'] = ApiClient.convertToType(data['fieldConfig'], {'String': ModelFieldConfigValue});
            }
            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = ApiClient.convertToType(data['metadata'], Object);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('postprocessConfig')) {
                obj['postprocessConfig'] = ModelPostprocessConfig.constructFromObject(data['postprocessConfig']);
            }
            if (data.hasOwnProperty('preprocessConfig')) {
                obj['preprocessConfig'] = ModelPreprocessConfig.constructFromObject(data['preprocessConfig']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PostModels</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PostModels</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PostModels.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `postprocessConfig`
        if (data['postprocessConfig']) { // data not null
          ModelPostprocessConfig.validateJSON(data['postprocessConfig']);
        }
        // validate the optional field `preprocessConfig`
        if (data['preprocessConfig']) { // data not null
          ModelPreprocessConfig.validateJSON(data['preprocessConfig']);
        }

        return true;
    }


}

PostModels.RequiredProperties = ["fieldConfig"];

/**
 * @member {String} description
 */
PostModels.prototype['description'] = undefined;

/**
 * @member {Object.<String, module:model/ModelFieldConfigValue>} fieldConfig
 */
PostModels.prototype['fieldConfig'] = undefined;

/**
 * @member {Object} metadata
 */
PostModels.prototype['metadata'] = undefined;

/**
 * @member {String} name
 */
PostModels.prototype['name'] = undefined;

/**
 * @member {module:model/ModelPostprocessConfig} postprocessConfig
 */
PostModels.prototype['postprocessConfig'] = undefined;

/**
 * @member {module:model/ModelPreprocessConfig} preprocessConfig
 */
PostModels.prototype['preprocessConfig'] = undefined;






export default PostModels;

