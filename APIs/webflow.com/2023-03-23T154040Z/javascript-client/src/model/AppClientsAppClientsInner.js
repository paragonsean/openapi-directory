/**
 * Lucidtech API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2023-03-23T15:40:40Z
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AppClientsAppClientsInner model module.
 * @module model/AppClientsAppClientsInner
 * @version 2023-03-23T15:40:40Z
 */
class AppClientsAppClientsInner {
    /**
     * Constructs a new <code>AppClientsAppClientsInner</code>.
     * @alias module:model/AppClientsAppClientsInner
     * @param appClientId {String} 
     * @param callbackUrls {Array.<String>} 
     * @param clientId {String} 
     * @param createdBy {String} 
     * @param createdTime {String} 
     * @param defaultLoginUrl {String} 
     * @param description {String} 
     * @param hasSecret {Boolean} 
     * @param loginUrls {Array.<String>} 
     * @param logoutUrls {Array.<String>} 
     * @param name {String} 
     * @param updatedBy {String} 
     * @param updatedTime {String} 
     */
    constructor(appClientId, callbackUrls, clientId, createdBy, createdTime, defaultLoginUrl, description, hasSecret, loginUrls, logoutUrls, name, updatedBy, updatedTime) { 
        
        AppClientsAppClientsInner.initialize(this, appClientId, callbackUrls, clientId, createdBy, createdTime, defaultLoginUrl, description, hasSecret, loginUrls, logoutUrls, name, updatedBy, updatedTime);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, appClientId, callbackUrls, clientId, createdBy, createdTime, defaultLoginUrl, description, hasSecret, loginUrls, logoutUrls, name, updatedBy, updatedTime) { 
        obj['appClientId'] = appClientId;
        obj['callbackUrls'] = callbackUrls;
        obj['clientId'] = clientId;
        obj['createdBy'] = createdBy;
        obj['createdTime'] = createdTime;
        obj['defaultLoginUrl'] = defaultLoginUrl;
        obj['description'] = description;
        obj['hasSecret'] = hasSecret;
        obj['loginUrls'] = loginUrls;
        obj['logoutUrls'] = logoutUrls;
        obj['name'] = name;
        obj['updatedBy'] = updatedBy;
        obj['updatedTime'] = updatedTime;
    }

    /**
     * Constructs a <code>AppClientsAppClientsInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AppClientsAppClientsInner} obj Optional instance to populate.
     * @return {module:model/AppClientsAppClientsInner} The populated <code>AppClientsAppClientsInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AppClientsAppClientsInner();

            if (data.hasOwnProperty('appClientId')) {
                obj['appClientId'] = ApiClient.convertToType(data['appClientId'], 'String');
            }
            if (data.hasOwnProperty('callbackUrls')) {
                obj['callbackUrls'] = ApiClient.convertToType(data['callbackUrls'], ['String']);
            }
            if (data.hasOwnProperty('clientId')) {
                obj['clientId'] = ApiClient.convertToType(data['clientId'], 'String');
            }
            if (data.hasOwnProperty('clientSecret')) {
                obj['clientSecret'] = ApiClient.convertToType(data['clientSecret'], 'String');
            }
            if (data.hasOwnProperty('createdBy')) {
                obj['createdBy'] = ApiClient.convertToType(data['createdBy'], 'String');
            }
            if (data.hasOwnProperty('createdTime')) {
                obj['createdTime'] = ApiClient.convertToType(data['createdTime'], 'String');
            }
            if (data.hasOwnProperty('defaultLoginUrl')) {
                obj['defaultLoginUrl'] = ApiClient.convertToType(data['defaultLoginUrl'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('hasSecret')) {
                obj['hasSecret'] = ApiClient.convertToType(data['hasSecret'], 'Boolean');
            }
            if (data.hasOwnProperty('loginUrls')) {
                obj['loginUrls'] = ApiClient.convertToType(data['loginUrls'], ['String']);
            }
            if (data.hasOwnProperty('logoutUrls')) {
                obj['logoutUrls'] = ApiClient.convertToType(data['logoutUrls'], ['String']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('updatedBy')) {
                obj['updatedBy'] = ApiClient.convertToType(data['updatedBy'], 'String');
            }
            if (data.hasOwnProperty('updatedTime')) {
                obj['updatedTime'] = ApiClient.convertToType(data['updatedTime'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AppClientsAppClientsInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AppClientsAppClientsInner</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AppClientsAppClientsInner.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['appClientId'] && !(typeof data['appClientId'] === 'string' || data['appClientId'] instanceof String)) {
            throw new Error("Expected the field `appClientId` to be a primitive type in the JSON string but got " + data['appClientId']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['callbackUrls'])) {
            throw new Error("Expected the field `callbackUrls` to be an array in the JSON data but got " + data['callbackUrls']);
        }
        // ensure the json data is a string
        if (data['clientId'] && !(typeof data['clientId'] === 'string' || data['clientId'] instanceof String)) {
            throw new Error("Expected the field `clientId` to be a primitive type in the JSON string but got " + data['clientId']);
        }
        // ensure the json data is a string
        if (data['clientSecret'] && !(typeof data['clientSecret'] === 'string' || data['clientSecret'] instanceof String)) {
            throw new Error("Expected the field `clientSecret` to be a primitive type in the JSON string but got " + data['clientSecret']);
        }
        // ensure the json data is a string
        if (data['createdBy'] && !(typeof data['createdBy'] === 'string' || data['createdBy'] instanceof String)) {
            throw new Error("Expected the field `createdBy` to be a primitive type in the JSON string but got " + data['createdBy']);
        }
        // ensure the json data is a string
        if (data['createdTime'] && !(typeof data['createdTime'] === 'string' || data['createdTime'] instanceof String)) {
            throw new Error("Expected the field `createdTime` to be a primitive type in the JSON string but got " + data['createdTime']);
        }
        // ensure the json data is a string
        if (data['defaultLoginUrl'] && !(typeof data['defaultLoginUrl'] === 'string' || data['defaultLoginUrl'] instanceof String)) {
            throw new Error("Expected the field `defaultLoginUrl` to be a primitive type in the JSON string but got " + data['defaultLoginUrl']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['loginUrls'])) {
            throw new Error("Expected the field `loginUrls` to be an array in the JSON data but got " + data['loginUrls']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['logoutUrls'])) {
            throw new Error("Expected the field `logoutUrls` to be an array in the JSON data but got " + data['logoutUrls']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['updatedBy'] && !(typeof data['updatedBy'] === 'string' || data['updatedBy'] instanceof String)) {
            throw new Error("Expected the field `updatedBy` to be a primitive type in the JSON string but got " + data['updatedBy']);
        }
        // ensure the json data is a string
        if (data['updatedTime'] && !(typeof data['updatedTime'] === 'string' || data['updatedTime'] instanceof String)) {
            throw new Error("Expected the field `updatedTime` to be a primitive type in the JSON string but got " + data['updatedTime']);
        }

        return true;
    }


}

AppClientsAppClientsInner.RequiredProperties = ["appClientId", "callbackUrls", "clientId", "createdBy", "createdTime", "defaultLoginUrl", "description", "hasSecret", "loginUrls", "logoutUrls", "name", "updatedBy", "updatedTime"];

/**
 * @member {String} appClientId
 */
AppClientsAppClientsInner.prototype['appClientId'] = undefined;

/**
 * @member {Array.<String>} callbackUrls
 */
AppClientsAppClientsInner.prototype['callbackUrls'] = undefined;

/**
 * @member {String} clientId
 */
AppClientsAppClientsInner.prototype['clientId'] = undefined;

/**
 * @member {String} clientSecret
 */
AppClientsAppClientsInner.prototype['clientSecret'] = undefined;

/**
 * @member {String} createdBy
 */
AppClientsAppClientsInner.prototype['createdBy'] = undefined;

/**
 * @member {String} createdTime
 */
AppClientsAppClientsInner.prototype['createdTime'] = undefined;

/**
 * @member {String} defaultLoginUrl
 */
AppClientsAppClientsInner.prototype['defaultLoginUrl'] = undefined;

/**
 * @member {String} description
 */
AppClientsAppClientsInner.prototype['description'] = undefined;

/**
 * @member {Boolean} hasSecret
 */
AppClientsAppClientsInner.prototype['hasSecret'] = undefined;

/**
 * @member {Array.<String>} loginUrls
 */
AppClientsAppClientsInner.prototype['loginUrls'] = undefined;

/**
 * @member {Array.<String>} logoutUrls
 */
AppClientsAppClientsInner.prototype['logoutUrls'] = undefined;

/**
 * @member {String} name
 */
AppClientsAppClientsInner.prototype['name'] = undefined;

/**
 * @member {String} updatedBy
 */
AppClientsAppClientsInner.prototype['updatedBy'] = undefined;

/**
 * @member {String} updatedTime
 */
AppClientsAppClientsInner.prototype['updatedTime'] = undefined;






export default AppClientsAppClientsInner;

