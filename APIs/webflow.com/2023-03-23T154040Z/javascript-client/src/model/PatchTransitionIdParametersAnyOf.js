/**
 * Lucidtech API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2023-03-23T15:40:40Z
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PatchTransitionIdParametersAnyOf model module.
 * @module model/PatchTransitionIdParametersAnyOf
 * @version 2023-03-23T15:40:40Z
 */
class PatchTransitionIdParametersAnyOf {
    /**
     * Constructs a new <code>PatchTransitionIdParametersAnyOf</code>.
     * @alias module:model/PatchTransitionIdParametersAnyOf
     */
    constructor() { 
        
        PatchTransitionIdParametersAnyOf.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PatchTransitionIdParametersAnyOf</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PatchTransitionIdParametersAnyOf} obj Optional instance to populate.
     * @return {module:model/PatchTransitionIdParametersAnyOf} The populated <code>PatchTransitionIdParametersAnyOf</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PatchTransitionIdParametersAnyOf();

            if (data.hasOwnProperty('cpu')) {
                obj['cpu'] = ApiClient.convertToType(data['cpu'], 'Number');
            }
            if (data.hasOwnProperty('environment')) {
                obj['environment'] = ApiClient.convertToType(data['environment'], {'String': 'String'});
            }
            if (data.hasOwnProperty('environmentSecrets')) {
                obj['environmentSecrets'] = ApiClient.convertToType(data['environmentSecrets'], ['String']);
            }
            if (data.hasOwnProperty('imageUrl')) {
                obj['imageUrl'] = ApiClient.convertToType(data['imageUrl'], 'String');
            }
            if (data.hasOwnProperty('memory')) {
                obj['memory'] = ApiClient.convertToType(data['memory'], 'Number');
            }
            if (data.hasOwnProperty('secretId')) {
                obj['secretId'] = ApiClient.convertToType(data['secretId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PatchTransitionIdParametersAnyOf</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PatchTransitionIdParametersAnyOf</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['environmentSecrets'])) {
            throw new Error("Expected the field `environmentSecrets` to be an array in the JSON data but got " + data['environmentSecrets']);
        }
        // ensure the json data is a string
        if (data['imageUrl'] && !(typeof data['imageUrl'] === 'string' || data['imageUrl'] instanceof String)) {
            throw new Error("Expected the field `imageUrl` to be a primitive type in the JSON string but got " + data['imageUrl']);
        }
        // ensure the json data is a string
        if (data['secretId'] && !(typeof data['secretId'] === 'string' || data['secretId'] instanceof String)) {
            throw new Error("Expected the field `secretId` to be a primitive type in the JSON string but got " + data['secretId']);
        }

        return true;
    }


}



/**
 * @member {module:model/PatchTransitionIdParametersAnyOf.CpuEnum} cpu
 */
PatchTransitionIdParametersAnyOf.prototype['cpu'] = undefined;

/**
 * @member {Object.<String, String>} environment
 */
PatchTransitionIdParametersAnyOf.prototype['environment'] = undefined;

/**
 * @member {Array.<String>} environmentSecrets
 */
PatchTransitionIdParametersAnyOf.prototype['environmentSecrets'] = undefined;

/**
 * @member {String} imageUrl
 */
PatchTransitionIdParametersAnyOf.prototype['imageUrl'] = undefined;

/**
 * @member {module:model/PatchTransitionIdParametersAnyOf.MemoryEnum} memory
 */
PatchTransitionIdParametersAnyOf.prototype['memory'] = undefined;

/**
 * @member {String} secretId
 */
PatchTransitionIdParametersAnyOf.prototype['secretId'] = undefined;





/**
 * Allowed values for the <code>cpu</code> property.
 * @enum {Number}
 * @readonly
 */
PatchTransitionIdParametersAnyOf['CpuEnum'] = {

    /**
     * value: 256
     * @const
     */
    "256": 256,

    /**
     * value: 512
     * @const
     */
    "512": 512,

    /**
     * value: 1024
     * @const
     */
    "1024": 1024
};


/**
 * Allowed values for the <code>memory</code> property.
 * @enum {Number}
 * @readonly
 */
PatchTransitionIdParametersAnyOf['MemoryEnum'] = {

    /**
     * value: 512
     * @const
     */
    "512": 512,

    /**
     * value: 1024
     * @const
     */
    "1024": 1024,

    /**
     * value: 2048
     * @const
     */
    "2048": 2048,

    /**
     * value: 4096
     * @const
     */
    "4096": 4096,

    /**
     * value: 8192
     * @const
     */
    "8192": 8192
};



export default PatchTransitionIdParametersAnyOf;

