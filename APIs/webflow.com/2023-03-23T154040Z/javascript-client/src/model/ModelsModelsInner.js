/**
 * Lucidtech API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2023-03-23T15:40:40Z
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ModelFieldConfigValue from './ModelFieldConfigValue';
import ModelPostprocessConfig from './ModelPostprocessConfig';
import ModelPreprocessConfig from './ModelPreprocessConfig';

/**
 * The ModelsModelsInner model module.
 * @module model/ModelsModelsInner
 * @version 2023-03-23T15:40:40Z
 */
class ModelsModelsInner {
    /**
     * Constructs a new <code>ModelsModelsInner</code>.
     * @alias module:model/ModelsModelsInner
     * @param createdBy {String} 
     * @param createdTime {String} 
     * @param description {String} 
     * @param fieldConfig {Object.<String, module:model/ModelFieldConfigValue>} 
     * @param metadata {Object} 
     * @param modelId {String} 
     * @param name {String} 
     * @param numberOfDataBundles {Number} 
     * @param numberOfRunningTrainings {Number} 
     * @param organizationId {String} 
     * @param preprocessConfig {module:model/ModelPreprocessConfig} 
     * @param status {module:model/ModelsModelsInner.StatusEnum} 
     * @param trainingId {String} 
     * @param updatedBy {String} 
     * @param updatedTime {String} 
     */
    constructor(createdBy, createdTime, description, fieldConfig, metadata, modelId, name, numberOfDataBundles, numberOfRunningTrainings, organizationId, preprocessConfig, status, trainingId, updatedBy, updatedTime) { 
        
        ModelsModelsInner.initialize(this, createdBy, createdTime, description, fieldConfig, metadata, modelId, name, numberOfDataBundles, numberOfRunningTrainings, organizationId, preprocessConfig, status, trainingId, updatedBy, updatedTime);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, createdBy, createdTime, description, fieldConfig, metadata, modelId, name, numberOfDataBundles, numberOfRunningTrainings, organizationId, preprocessConfig, status, trainingId, updatedBy, updatedTime) { 
        obj['createdBy'] = createdBy;
        obj['createdTime'] = createdTime;
        obj['description'] = description;
        obj['fieldConfig'] = fieldConfig;
        obj['metadata'] = metadata;
        obj['modelId'] = modelId;
        obj['name'] = name;
        obj['numberOfDataBundles'] = numberOfDataBundles;
        obj['numberOfRunningTrainings'] = numberOfRunningTrainings;
        obj['organizationId'] = organizationId;
        obj['preprocessConfig'] = preprocessConfig;
        obj['status'] = status;
        obj['trainingId'] = trainingId;
        obj['updatedBy'] = updatedBy;
        obj['updatedTime'] = updatedTime;
    }

    /**
     * Constructs a <code>ModelsModelsInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ModelsModelsInner} obj Optional instance to populate.
     * @return {module:model/ModelsModelsInner} The populated <code>ModelsModelsInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ModelsModelsInner();

            if (data.hasOwnProperty('createdBy')) {
                obj['createdBy'] = ApiClient.convertToType(data['createdBy'], 'String');
            }
            if (data.hasOwnProperty('createdTime')) {
                obj['createdTime'] = ApiClient.convertToType(data['createdTime'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('fieldConfig')) {
                obj['fieldConfig'] = ApiClient.convertToType(data['fieldConfig'], {'String': ModelFieldConfigValue});
            }
            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = ApiClient.convertToType(data['metadata'], Object);
            }
            if (data.hasOwnProperty('modelId')) {
                obj['modelId'] = ApiClient.convertToType(data['modelId'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('numberOfDataBundles')) {
                obj['numberOfDataBundles'] = ApiClient.convertToType(data['numberOfDataBundles'], 'Number');
            }
            if (data.hasOwnProperty('numberOfRunningTrainings')) {
                obj['numberOfRunningTrainings'] = ApiClient.convertToType(data['numberOfRunningTrainings'], 'Number');
            }
            if (data.hasOwnProperty('organizationId')) {
                obj['organizationId'] = ApiClient.convertToType(data['organizationId'], 'String');
            }
            if (data.hasOwnProperty('postprocessConfig')) {
                obj['postprocessConfig'] = ModelPostprocessConfig.constructFromObject(data['postprocessConfig']);
            }
            if (data.hasOwnProperty('preprocessConfig')) {
                obj['preprocessConfig'] = ModelPreprocessConfig.constructFromObject(data['preprocessConfig']);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('trainingId')) {
                obj['trainingId'] = ApiClient.convertToType(data['trainingId'], 'String');
            }
            if (data.hasOwnProperty('updatedBy')) {
                obj['updatedBy'] = ApiClient.convertToType(data['updatedBy'], 'String');
            }
            if (data.hasOwnProperty('updatedTime')) {
                obj['updatedTime'] = ApiClient.convertToType(data['updatedTime'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ModelsModelsInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ModelsModelsInner</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ModelsModelsInner.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['createdBy'] && !(typeof data['createdBy'] === 'string' || data['createdBy'] instanceof String)) {
            throw new Error("Expected the field `createdBy` to be a primitive type in the JSON string but got " + data['createdBy']);
        }
        // ensure the json data is a string
        if (data['createdTime'] && !(typeof data['createdTime'] === 'string' || data['createdTime'] instanceof String)) {
            throw new Error("Expected the field `createdTime` to be a primitive type in the JSON string but got " + data['createdTime']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['modelId'] && !(typeof data['modelId'] === 'string' || data['modelId'] instanceof String)) {
            throw new Error("Expected the field `modelId` to be a primitive type in the JSON string but got " + data['modelId']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['organizationId'] && !(typeof data['organizationId'] === 'string' || data['organizationId'] instanceof String)) {
            throw new Error("Expected the field `organizationId` to be a primitive type in the JSON string but got " + data['organizationId']);
        }
        // validate the optional field `postprocessConfig`
        if (data['postprocessConfig']) { // data not null
          ModelPostprocessConfig.validateJSON(data['postprocessConfig']);
        }
        // validate the optional field `preprocessConfig`
        if (data['preprocessConfig']) { // data not null
          ModelPreprocessConfig.validateJSON(data['preprocessConfig']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // ensure the json data is a string
        if (data['trainingId'] && !(typeof data['trainingId'] === 'string' || data['trainingId'] instanceof String)) {
            throw new Error("Expected the field `trainingId` to be a primitive type in the JSON string but got " + data['trainingId']);
        }
        // ensure the json data is a string
        if (data['updatedBy'] && !(typeof data['updatedBy'] === 'string' || data['updatedBy'] instanceof String)) {
            throw new Error("Expected the field `updatedBy` to be a primitive type in the JSON string but got " + data['updatedBy']);
        }
        // ensure the json data is a string
        if (data['updatedTime'] && !(typeof data['updatedTime'] === 'string' || data['updatedTime'] instanceof String)) {
            throw new Error("Expected the field `updatedTime` to be a primitive type in the JSON string but got " + data['updatedTime']);
        }

        return true;
    }


}

ModelsModelsInner.RequiredProperties = ["createdBy", "createdTime", "description", "fieldConfig", "metadata", "modelId", "name", "numberOfDataBundles", "numberOfRunningTrainings", "organizationId", "preprocessConfig", "status", "trainingId", "updatedBy", "updatedTime"];

/**
 * @member {String} createdBy
 */
ModelsModelsInner.prototype['createdBy'] = undefined;

/**
 * @member {String} createdTime
 */
ModelsModelsInner.prototype['createdTime'] = undefined;

/**
 * @member {String} description
 */
ModelsModelsInner.prototype['description'] = undefined;

/**
 * @member {Object.<String, module:model/ModelFieldConfigValue>} fieldConfig
 */
ModelsModelsInner.prototype['fieldConfig'] = undefined;

/**
 * @member {Object} metadata
 */
ModelsModelsInner.prototype['metadata'] = undefined;

/**
 * @member {String} modelId
 */
ModelsModelsInner.prototype['modelId'] = undefined;

/**
 * @member {String} name
 */
ModelsModelsInner.prototype['name'] = undefined;

/**
 * @member {Number} numberOfDataBundles
 */
ModelsModelsInner.prototype['numberOfDataBundles'] = undefined;

/**
 * @member {Number} numberOfRunningTrainings
 */
ModelsModelsInner.prototype['numberOfRunningTrainings'] = undefined;

/**
 * @member {String} organizationId
 */
ModelsModelsInner.prototype['organizationId'] = undefined;

/**
 * @member {module:model/ModelPostprocessConfig} postprocessConfig
 */
ModelsModelsInner.prototype['postprocessConfig'] = undefined;

/**
 * @member {module:model/ModelPreprocessConfig} preprocessConfig
 */
ModelsModelsInner.prototype['preprocessConfig'] = undefined;

/**
 * @member {module:model/ModelsModelsInner.StatusEnum} status
 */
ModelsModelsInner.prototype['status'] = undefined;

/**
 * @member {String} trainingId
 */
ModelsModelsInner.prototype['trainingId'] = undefined;

/**
 * @member {String} updatedBy
 */
ModelsModelsInner.prototype['updatedBy'] = undefined;

/**
 * @member {String} updatedTime
 */
ModelsModelsInner.prototype['updatedTime'] = undefined;





/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
ModelsModelsInner['StatusEnum'] = {

    /**
     * value: "active"
     * @const
     */
    "active": "active",

    /**
     * value: "inactive"
     * @const
     */
    "inactive": "inactive"
};



export default ModelsModelsInner;

