/**
 * Lucidtech API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2023-03-23T15:40:40Z
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.LucidtechApi);
  }
}(this, function(expect, LucidtechApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new LucidtechApi.Plan();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Plan', function() {
    it('should create an instance of Plan', function() {
      // uncomment below and update the code to test Plan
      //var instance = new LucidtechApi.Plan();
      //expect(instance).to.be.a(LucidtechApi.Plan);
    });

    it('should have the property activeModels (base name: "activeModels")', function() {
      // uncomment below and update the code to test the property activeModels
      //var instance = new LucidtechApi.Plan();
      //expect(instance).to.be();
    });

    it('should have the property available (base name: "available")', function() {
      // uncomment below and update the code to test the property available
      //var instance = new LucidtechApi.Plan();
      //expect(instance).to.be();
    });

    it('should have the property currency (base name: "currency")', function() {
      // uncomment below and update the code to test the property currency
      //var instance = new LucidtechApi.Plan();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new LucidtechApi.Plan();
      //expect(instance).to.be();
    });

    it('should have the property fieldPredictions (base name: "fieldPredictions")', function() {
      // uncomment below and update the code to test the property fieldPredictions
      //var instance = new LucidtechApi.Plan();
      //expect(instance).to.be();
    });

    it('should have the property gpuHours (base name: "gpuHours")', function() {
      // uncomment below and update the code to test the property gpuHours
      //var instance = new LucidtechApi.Plan();
      //expect(instance).to.be();
    });

    it('should have the property latest (base name: "latest")', function() {
      // uncomment below and update the code to test the property latest
      //var instance = new LucidtechApi.Plan();
      //expect(instance).to.be();
    });

    it('should have the property license (base name: "license")', function() {
      // uncomment below and update the code to test the property license
      //var instance = new LucidtechApi.Plan();
      //expect(instance).to.be();
    });

    it('should have the property modelDeploymentUnits (base name: "modelDeploymentUnits")', function() {
      // uncomment below and update the code to test the property modelDeploymentUnits
      //var instance = new LucidtechApi.Plan();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new LucidtechApi.Plan();
      //expect(instance).to.be();
    });

    it('should have the property organizationId (base name: "organizationId")', function() {
      // uncomment below and update the code to test the property organizationId
      //var instance = new LucidtechApi.Plan();
      //expect(instance).to.be();
    });

    it('should have the property planId (base name: "planId")', function() {
      // uncomment below and update the code to test the property planId
      //var instance = new LucidtechApi.Plan();
      //expect(instance).to.be();
    });

  });

}));
