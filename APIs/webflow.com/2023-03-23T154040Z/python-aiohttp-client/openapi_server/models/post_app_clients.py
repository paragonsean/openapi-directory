# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
import re
from openapi_server import util


class PostAppClients(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, callback_urls: List[str]=None, default_login_url: str=None, description: str=None, generate_secret: bool=True, login_urls: List[str]=None, logout_urls: List[str]=None, name: str=None):
        """PostAppClients - a model defined in OpenAPI

        :param callback_urls: The callback_urls of this PostAppClients.
        :param default_login_url: The default_login_url of this PostAppClients.
        :param description: The description of this PostAppClients.
        :param generate_secret: The generate_secret of this PostAppClients.
        :param login_urls: The login_urls of this PostAppClients.
        :param logout_urls: The logout_urls of this PostAppClients.
        :param name: The name of this PostAppClients.
        """
        self.openapi_types = {
            'callback_urls': List[str],
            'default_login_url': str,
            'description': str,
            'generate_secret': bool,
            'login_urls': List[str],
            'logout_urls': List[str],
            'name': str
        }

        self.attribute_map = {
            'callback_urls': 'callbackUrls',
            'default_login_url': 'defaultLoginUrl',
            'description': 'description',
            'generate_secret': 'generateSecret',
            'login_urls': 'loginUrls',
            'logout_urls': 'logoutUrls',
            'name': 'name'
        }

        self._callback_urls = callback_urls
        self._default_login_url = default_login_url
        self._description = description
        self._generate_secret = generate_secret
        self._login_urls = login_urls
        self._logout_urls = logout_urls
        self._name = name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PostAppClients':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PostAppClients of this PostAppClients.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def callback_urls(self):
        """Gets the callback_urls of this PostAppClients.


        :return: The callback_urls of this PostAppClients.
        :rtype: List[str]
        """
        return self._callback_urls

    @callback_urls.setter
    def callback_urls(self, callback_urls):
        """Sets the callback_urls of this PostAppClients.


        :param callback_urls: The callback_urls of this PostAppClients.
        :type callback_urls: List[str]
        """

        self._callback_urls = callback_urls

    @property
    def default_login_url(self):
        """Gets the default_login_url of this PostAppClients.


        :return: The default_login_url of this PostAppClients.
        :rtype: str
        """
        return self._default_login_url

    @default_login_url.setter
    def default_login_url(self, default_login_url):
        """Sets the default_login_url of this PostAppClients.


        :param default_login_url: The default_login_url of this PostAppClients.
        :type default_login_url: str
        """
        if default_login_url is not None and not re.search(r'^http:\/\/localhost.*|^https:\/\/.*', default_login_url):
            raise ValueError("Invalid value for `default_login_url`, must be a follow pattern or equal to `/^http:\/\/localhost.*|^https:\/\/.*/`")

        self._default_login_url = default_login_url

    @property
    def description(self):
        """Gets the description of this PostAppClients.


        :return: The description of this PostAppClients.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this PostAppClients.


        :param description: The description of this PostAppClients.
        :type description: str
        """
        if description is not None and len(description) > 4096:
            raise ValueError("Invalid value for `description`, length must be less than or equal to `4096`")

        self._description = description

    @property
    def generate_secret(self):
        """Gets the generate_secret of this PostAppClients.


        :return: The generate_secret of this PostAppClients.
        :rtype: bool
        """
        return self._generate_secret

    @generate_secret.setter
    def generate_secret(self, generate_secret):
        """Sets the generate_secret of this PostAppClients.


        :param generate_secret: The generate_secret of this PostAppClients.
        :type generate_secret: bool
        """

        self._generate_secret = generate_secret

    @property
    def login_urls(self):
        """Gets the login_urls of this PostAppClients.


        :return: The login_urls of this PostAppClients.
        :rtype: List[str]
        """
        return self._login_urls

    @login_urls.setter
    def login_urls(self, login_urls):
        """Sets the login_urls of this PostAppClients.


        :param login_urls: The login_urls of this PostAppClients.
        :type login_urls: List[str]
        """

        self._login_urls = login_urls

    @property
    def logout_urls(self):
        """Gets the logout_urls of this PostAppClients.


        :return: The logout_urls of this PostAppClients.
        :rtype: List[str]
        """
        return self._logout_urls

    @logout_urls.setter
    def logout_urls(self, logout_urls):
        """Sets the logout_urls of this PostAppClients.


        :param logout_urls: The logout_urls of this PostAppClients.
        :type logout_urls: List[str]
        """

        self._logout_urls = logout_urls

    @property
    def name(self):
        """Gets the name of this PostAppClients.


        :return: The name of this PostAppClients.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this PostAppClients.


        :param name: The name of this PostAppClients.
        :type name: str
        """
        if name is not None and len(name) > 4096:
            raise ValueError("Invalid value for `name`, length must be less than or equal to `4096`")

        self._name = name
