# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.deployment_environments_deployment_environments_inner import DeploymentEnvironmentsDeploymentEnvironmentsInner
from openapi_server import util


class DeploymentEnvironments(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, deployment_environments: List[DeploymentEnvironmentsDeploymentEnvironmentsInner]=None, next_token: str=None):
        """DeploymentEnvironments - a model defined in OpenAPI

        :param deployment_environments: The deployment_environments of this DeploymentEnvironments.
        :param next_token: The next_token of this DeploymentEnvironments.
        """
        self.openapi_types = {
            'deployment_environments': List[DeploymentEnvironmentsDeploymentEnvironmentsInner],
            'next_token': str
        }

        self.attribute_map = {
            'deployment_environments': 'deploymentEnvironments',
            'next_token': 'nextToken'
        }

        self._deployment_environments = deployment_environments
        self._next_token = next_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeploymentEnvironments':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeploymentEnvironments of this DeploymentEnvironments.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def deployment_environments(self):
        """Gets the deployment_environments of this DeploymentEnvironments.


        :return: The deployment_environments of this DeploymentEnvironments.
        :rtype: List[DeploymentEnvironmentsDeploymentEnvironmentsInner]
        """
        return self._deployment_environments

    @deployment_environments.setter
    def deployment_environments(self, deployment_environments):
        """Sets the deployment_environments of this DeploymentEnvironments.


        :param deployment_environments: The deployment_environments of this DeploymentEnvironments.
        :type deployment_environments: List[DeploymentEnvironmentsDeploymentEnvironmentsInner]
        """
        if deployment_environments is None:
            raise ValueError("Invalid value for `deployment_environments`, must not be `None`")

        self._deployment_environments = deployment_environments

    @property
    def next_token(self):
        """Gets the next_token of this DeploymentEnvironments.


        :return: The next_token of this DeploymentEnvironments.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this DeploymentEnvironments.


        :param next_token: The next_token of this DeploymentEnvironments.
        :type next_token: str
        """
        if next_token is None:
            raise ValueError("Invalid value for `next_token`, must not be `None`")
        if next_token is not None and len(next_token) > 4096:
            raise ValueError("Invalid value for `next_token`, length must be less than or equal to `4096`")

        self._next_token = next_token
