# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
import re
from openapi_server import util


class PatchTransitionIdAssets(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, js_remote_component: str=None):
        """PatchTransitionIdAssets - a model defined in OpenAPI

        :param js_remote_component: The js_remote_component of this PatchTransitionIdAssets.
        """
        self.openapi_types = {
            'js_remote_component': str
        }

        self.attribute_map = {
            'js_remote_component': 'jsRemoteComponent'
        }

        self._js_remote_component = js_remote_component

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PatchTransitionIdAssets':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PatchTransitionId_assets of this PatchTransitionIdAssets.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def js_remote_component(self):
        """Gets the js_remote_component of this PatchTransitionIdAssets.


        :return: The js_remote_component of this PatchTransitionIdAssets.
        :rtype: str
        """
        return self._js_remote_component

    @js_remote_component.setter
    def js_remote_component(self, js_remote_component):
        """Sets the js_remote_component of this PatchTransitionIdAssets.


        :param js_remote_component: The js_remote_component of this PatchTransitionIdAssets.
        :type js_remote_component: str
        """
        if js_remote_component is not None and not re.search(r'^las:asset:[a-f0-9]{32}$', js_remote_component):
            raise ValueError("Invalid value for `js_remote_component`, must be a follow pattern or equal to `/^las:asset:[a-f0-9]{32}$/`")

        self._js_remote_component = js_remote_component
