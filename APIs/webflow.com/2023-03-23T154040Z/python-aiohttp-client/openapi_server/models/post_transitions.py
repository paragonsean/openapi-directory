# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.post_transitions_parameters import PostTransitionsParameters
from openapi_server import util


class PostTransitions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, input_json_schema: object=None, name: str=None, output_json_schema: object=None, parameters: PostTransitionsParameters=None, timeout_in_seconds: int=None, transition_type: str=None):
        """PostTransitions - a model defined in OpenAPI

        :param description: The description of this PostTransitions.
        :param input_json_schema: The input_json_schema of this PostTransitions.
        :param name: The name of this PostTransitions.
        :param output_json_schema: The output_json_schema of this PostTransitions.
        :param parameters: The parameters of this PostTransitions.
        :param timeout_in_seconds: The timeout_in_seconds of this PostTransitions.
        :param transition_type: The transition_type of this PostTransitions.
        """
        self.openapi_types = {
            'description': str,
            'input_json_schema': object,
            'name': str,
            'output_json_schema': object,
            'parameters': PostTransitionsParameters,
            'timeout_in_seconds': int,
            'transition_type': str
        }

        self.attribute_map = {
            'description': 'description',
            'input_json_schema': 'inputJsonSchema',
            'name': 'name',
            'output_json_schema': 'outputJsonSchema',
            'parameters': 'parameters',
            'timeout_in_seconds': 'timeoutInSeconds',
            'transition_type': 'transitionType'
        }

        self._description = description
        self._input_json_schema = input_json_schema
        self._name = name
        self._output_json_schema = output_json_schema
        self._parameters = parameters
        self._timeout_in_seconds = timeout_in_seconds
        self._transition_type = transition_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PostTransitions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PostTransitions of this PostTransitions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this PostTransitions.


        :return: The description of this PostTransitions.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this PostTransitions.


        :param description: The description of this PostTransitions.
        :type description: str
        """
        if description is not None and len(description) > 4096:
            raise ValueError("Invalid value for `description`, length must be less than or equal to `4096`")

        self._description = description

    @property
    def input_json_schema(self):
        """Gets the input_json_schema of this PostTransitions.


        :return: The input_json_schema of this PostTransitions.
        :rtype: object
        """
        return self._input_json_schema

    @input_json_schema.setter
    def input_json_schema(self, input_json_schema):
        """Sets the input_json_schema of this PostTransitions.


        :param input_json_schema: The input_json_schema of this PostTransitions.
        :type input_json_schema: object
        """

        self._input_json_schema = input_json_schema

    @property
    def name(self):
        """Gets the name of this PostTransitions.


        :return: The name of this PostTransitions.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this PostTransitions.


        :param name: The name of this PostTransitions.
        :type name: str
        """
        if name is not None and len(name) > 4096:
            raise ValueError("Invalid value for `name`, length must be less than or equal to `4096`")

        self._name = name

    @property
    def output_json_schema(self):
        """Gets the output_json_schema of this PostTransitions.


        :return: The output_json_schema of this PostTransitions.
        :rtype: object
        """
        return self._output_json_schema

    @output_json_schema.setter
    def output_json_schema(self, output_json_schema):
        """Sets the output_json_schema of this PostTransitions.


        :param output_json_schema: The output_json_schema of this PostTransitions.
        :type output_json_schema: object
        """

        self._output_json_schema = output_json_schema

    @property
    def parameters(self):
        """Gets the parameters of this PostTransitions.


        :return: The parameters of this PostTransitions.
        :rtype: PostTransitionsParameters
        """
        return self._parameters

    @parameters.setter
    def parameters(self, parameters):
        """Sets the parameters of this PostTransitions.


        :param parameters: The parameters of this PostTransitions.
        :type parameters: PostTransitionsParameters
        """

        self._parameters = parameters

    @property
    def timeout_in_seconds(self):
        """Gets the timeout_in_seconds of this PostTransitions.


        :return: The timeout_in_seconds of this PostTransitions.
        :rtype: int
        """
        return self._timeout_in_seconds

    @timeout_in_seconds.setter
    def timeout_in_seconds(self, timeout_in_seconds):
        """Sets the timeout_in_seconds of this PostTransitions.


        :param timeout_in_seconds: The timeout_in_seconds of this PostTransitions.
        :type timeout_in_seconds: int
        """
        if timeout_in_seconds is not None and timeout_in_seconds > 1800:
            raise ValueError("Invalid value for `timeout_in_seconds`, must be a value less than or equal to `1800`")
        if timeout_in_seconds is not None and timeout_in_seconds < 60:
            raise ValueError("Invalid value for `timeout_in_seconds`, must be a value greater than or equal to `60`")

        self._timeout_in_seconds = timeout_in_seconds

    @property
    def transition_type(self):
        """Gets the transition_type of this PostTransitions.


        :return: The transition_type of this PostTransitions.
        :rtype: str
        """
        return self._transition_type

    @transition_type.setter
    def transition_type(self, transition_type):
        """Sets the transition_type of this PostTransitions.


        :param transition_type: The transition_type of this PostTransitions.
        :type transition_type: str
        """
        allowed_values = ["docker", "manual"]  # noqa: E501
        if transition_type not in allowed_values:
            raise ValueError(
                "Invalid value for `transition_type` ({0}), must be one of {1}"
                .format(transition_type, allowed_values)
            )

        self._transition_type = transition_type
