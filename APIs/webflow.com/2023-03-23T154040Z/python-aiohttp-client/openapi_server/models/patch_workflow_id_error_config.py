# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
import re
from openapi_server import util


class PatchWorkflowIdErrorConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, email: str=None, manual_retry: bool=None):
        """PatchWorkflowIdErrorConfig - a model defined in OpenAPI

        :param email: The email of this PatchWorkflowIdErrorConfig.
        :param manual_retry: The manual_retry of this PatchWorkflowIdErrorConfig.
        """
        self.openapi_types = {
            'email': str,
            'manual_retry': bool
        }

        self.attribute_map = {
            'email': 'email',
            'manual_retry': 'manualRetry'
        }

        self._email = email
        self._manual_retry = manual_retry

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PatchWorkflowIdErrorConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PatchWorkflowId_errorConfig of this PatchWorkflowIdErrorConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def email(self):
        """Gets the email of this PatchWorkflowIdErrorConfig.


        :return: The email of this PatchWorkflowIdErrorConfig.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this PatchWorkflowIdErrorConfig.


        :param email: The email of this PatchWorkflowIdErrorConfig.
        :type email: str
        """
        if email is not None and not re.search(r'^[A-Za-z0-9][-+._A-Za-z0-9]*@([-_.A-Za-z0-9]+\.)+[A-Za-z]{2,}$', email):
            raise ValueError("Invalid value for `email`, must be a follow pattern or equal to `/^[A-Za-z0-9][-+._A-Za-z0-9]*@([-_.A-Za-z0-9]+\.)+[A-Za-z]{2,}$/`")

        self._email = email

    @property
    def manual_retry(self):
        """Gets the manual_retry of this PatchWorkflowIdErrorConfig.


        :return: The manual_retry of this PatchWorkflowIdErrorConfig.
        :rtype: bool
        """
        return self._manual_retry

    @manual_retry.setter
    def manual_retry(self, manual_retry):
        """Sets the manual_retry of this PatchWorkflowIdErrorConfig.


        :param manual_retry: The manual_retry of this PatchWorkflowIdErrorConfig.
        :type manual_retry: bool
        """

        self._manual_retry = manual_retry
