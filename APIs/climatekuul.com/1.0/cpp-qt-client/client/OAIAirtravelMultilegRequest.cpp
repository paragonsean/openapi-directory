/**
 * climateKuul live
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAirtravelMultilegRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAirtravelMultilegRequest::OAIAirtravelMultilegRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAirtravelMultilegRequest::OAIAirtravelMultilegRequest() {
    this->initializeModel();
}

OAIAirtravelMultilegRequest::~OAIAirtravelMultilegRequest() {}

void OAIAirtravelMultilegRequest::initializeModel() {

    m_api_key_l1_isSet = false;
    m_api_key_l1_isValid = false;

    m_api_key_l2_isSet = false;
    m_api_key_l2_isValid = false;

    m_contact_email_isSet = false;
    m_contact_email_isValid = false;

    m_contact_first_name_isSet = false;
    m_contact_first_name_isValid = false;

    m_contact_last_name_isSet = false;
    m_contact_last_name_isValid = false;

    m_leg1_isSet = false;
    m_leg1_isValid = false;

    m_leg2_isSet = false;
    m_leg2_isValid = false;

    m_leg3_isSet = false;
    m_leg3_isValid = false;

    m_legs_count_isSet = false;
    m_legs_count_isValid = false;

    m_number_of_passengers_isSet = false;
    m_number_of_passengers_isValid = false;

    m_travel_mode_isSet = false;
    m_travel_mode_isValid = false;
}

void OAIAirtravelMultilegRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAirtravelMultilegRequest::fromJsonObject(QJsonObject json) {

    m_api_key_l1_isValid = ::OpenAPI::fromJsonValue(m_api_key_l1, json[QString("apiKey_l1")]);
    m_api_key_l1_isSet = !json[QString("apiKey_l1")].isNull() && m_api_key_l1_isValid;

    m_api_key_l2_isValid = ::OpenAPI::fromJsonValue(m_api_key_l2, json[QString("apiKey_l2")]);
    m_api_key_l2_isSet = !json[QString("apiKey_l2")].isNull() && m_api_key_l2_isValid;

    m_contact_email_isValid = ::OpenAPI::fromJsonValue(m_contact_email, json[QString("contactEmail")]);
    m_contact_email_isSet = !json[QString("contactEmail")].isNull() && m_contact_email_isValid;

    m_contact_first_name_isValid = ::OpenAPI::fromJsonValue(m_contact_first_name, json[QString("contactFirstName")]);
    m_contact_first_name_isSet = !json[QString("contactFirstName")].isNull() && m_contact_first_name_isValid;

    m_contact_last_name_isValid = ::OpenAPI::fromJsonValue(m_contact_last_name, json[QString("contactLastName")]);
    m_contact_last_name_isSet = !json[QString("contactLastName")].isNull() && m_contact_last_name_isValid;

    m_leg1_isValid = ::OpenAPI::fromJsonValue(m_leg1, json[QString("leg1")]);
    m_leg1_isSet = !json[QString("leg1")].isNull() && m_leg1_isValid;

    m_leg2_isValid = ::OpenAPI::fromJsonValue(m_leg2, json[QString("leg2")]);
    m_leg2_isSet = !json[QString("leg2")].isNull() && m_leg2_isValid;

    m_leg3_isValid = ::OpenAPI::fromJsonValue(m_leg3, json[QString("leg3")]);
    m_leg3_isSet = !json[QString("leg3")].isNull() && m_leg3_isValid;

    m_legs_count_isValid = ::OpenAPI::fromJsonValue(m_legs_count, json[QString("legs_count")]);
    m_legs_count_isSet = !json[QString("legs_count")].isNull() && m_legs_count_isValid;

    m_number_of_passengers_isValid = ::OpenAPI::fromJsonValue(m_number_of_passengers, json[QString("number_of_passengers")]);
    m_number_of_passengers_isSet = !json[QString("number_of_passengers")].isNull() && m_number_of_passengers_isValid;

    m_travel_mode_isValid = ::OpenAPI::fromJsonValue(m_travel_mode, json[QString("travel_mode")]);
    m_travel_mode_isSet = !json[QString("travel_mode")].isNull() && m_travel_mode_isValid;
}

QString OAIAirtravelMultilegRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAirtravelMultilegRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_api_key_l1_isSet) {
        obj.insert(QString("apiKey_l1"), ::OpenAPI::toJsonValue(m_api_key_l1));
    }
    if (m_api_key_l2_isSet) {
        obj.insert(QString("apiKey_l2"), ::OpenAPI::toJsonValue(m_api_key_l2));
    }
    if (m_contact_email_isSet) {
        obj.insert(QString("contactEmail"), ::OpenAPI::toJsonValue(m_contact_email));
    }
    if (m_contact_first_name_isSet) {
        obj.insert(QString("contactFirstName"), ::OpenAPI::toJsonValue(m_contact_first_name));
    }
    if (m_contact_last_name_isSet) {
        obj.insert(QString("contactLastName"), ::OpenAPI::toJsonValue(m_contact_last_name));
    }
    if (m_leg1.isSet()) {
        obj.insert(QString("leg1"), ::OpenAPI::toJsonValue(m_leg1));
    }
    if (m_leg2.isSet()) {
        obj.insert(QString("leg2"), ::OpenAPI::toJsonValue(m_leg2));
    }
    if (m_leg3.isSet()) {
        obj.insert(QString("leg3"), ::OpenAPI::toJsonValue(m_leg3));
    }
    if (m_legs_count_isSet) {
        obj.insert(QString("legs_count"), ::OpenAPI::toJsonValue(m_legs_count));
    }
    if (m_number_of_passengers_isSet) {
        obj.insert(QString("number_of_passengers"), ::OpenAPI::toJsonValue(m_number_of_passengers));
    }
    if (m_travel_mode_isSet) {
        obj.insert(QString("travel_mode"), ::OpenAPI::toJsonValue(m_travel_mode));
    }
    return obj;
}

QString OAIAirtravelMultilegRequest::getApiKeyL1() const {
    return m_api_key_l1;
}
void OAIAirtravelMultilegRequest::setApiKeyL1(const QString &api_key_l1) {
    m_api_key_l1 = api_key_l1;
    m_api_key_l1_isSet = true;
}

bool OAIAirtravelMultilegRequest::is_api_key_l1_Set() const{
    return m_api_key_l1_isSet;
}

bool OAIAirtravelMultilegRequest::is_api_key_l1_Valid() const{
    return m_api_key_l1_isValid;
}

QString OAIAirtravelMultilegRequest::getApiKeyL2() const {
    return m_api_key_l2;
}
void OAIAirtravelMultilegRequest::setApiKeyL2(const QString &api_key_l2) {
    m_api_key_l2 = api_key_l2;
    m_api_key_l2_isSet = true;
}

bool OAIAirtravelMultilegRequest::is_api_key_l2_Set() const{
    return m_api_key_l2_isSet;
}

bool OAIAirtravelMultilegRequest::is_api_key_l2_Valid() const{
    return m_api_key_l2_isValid;
}

QString OAIAirtravelMultilegRequest::getContactEmail() const {
    return m_contact_email;
}
void OAIAirtravelMultilegRequest::setContactEmail(const QString &contact_email) {
    m_contact_email = contact_email;
    m_contact_email_isSet = true;
}

bool OAIAirtravelMultilegRequest::is_contact_email_Set() const{
    return m_contact_email_isSet;
}

bool OAIAirtravelMultilegRequest::is_contact_email_Valid() const{
    return m_contact_email_isValid;
}

QString OAIAirtravelMultilegRequest::getContactFirstName() const {
    return m_contact_first_name;
}
void OAIAirtravelMultilegRequest::setContactFirstName(const QString &contact_first_name) {
    m_contact_first_name = contact_first_name;
    m_contact_first_name_isSet = true;
}

bool OAIAirtravelMultilegRequest::is_contact_first_name_Set() const{
    return m_contact_first_name_isSet;
}

bool OAIAirtravelMultilegRequest::is_contact_first_name_Valid() const{
    return m_contact_first_name_isValid;
}

QString OAIAirtravelMultilegRequest::getContactLastName() const {
    return m_contact_last_name;
}
void OAIAirtravelMultilegRequest::setContactLastName(const QString &contact_last_name) {
    m_contact_last_name = contact_last_name;
    m_contact_last_name_isSet = true;
}

bool OAIAirtravelMultilegRequest::is_contact_last_name_Set() const{
    return m_contact_last_name_isSet;
}

bool OAIAirtravelMultilegRequest::is_contact_last_name_Valid() const{
    return m_contact_last_name_isValid;
}

OAILeg1 OAIAirtravelMultilegRequest::getLeg1() const {
    return m_leg1;
}
void OAIAirtravelMultilegRequest::setLeg1(const OAILeg1 &leg1) {
    m_leg1 = leg1;
    m_leg1_isSet = true;
}

bool OAIAirtravelMultilegRequest::is_leg1_Set() const{
    return m_leg1_isSet;
}

bool OAIAirtravelMultilegRequest::is_leg1_Valid() const{
    return m_leg1_isValid;
}

OAILeg1 OAIAirtravelMultilegRequest::getLeg2() const {
    return m_leg2;
}
void OAIAirtravelMultilegRequest::setLeg2(const OAILeg1 &leg2) {
    m_leg2 = leg2;
    m_leg2_isSet = true;
}

bool OAIAirtravelMultilegRequest::is_leg2_Set() const{
    return m_leg2_isSet;
}

bool OAIAirtravelMultilegRequest::is_leg2_Valid() const{
    return m_leg2_isValid;
}

OAILeg1 OAIAirtravelMultilegRequest::getLeg3() const {
    return m_leg3;
}
void OAIAirtravelMultilegRequest::setLeg3(const OAILeg1 &leg3) {
    m_leg3 = leg3;
    m_leg3_isSet = true;
}

bool OAIAirtravelMultilegRequest::is_leg3_Set() const{
    return m_leg3_isSet;
}

bool OAIAirtravelMultilegRequest::is_leg3_Valid() const{
    return m_leg3_isValid;
}

QString OAIAirtravelMultilegRequest::getLegsCount() const {
    return m_legs_count;
}
void OAIAirtravelMultilegRequest::setLegsCount(const QString &legs_count) {
    m_legs_count = legs_count;
    m_legs_count_isSet = true;
}

bool OAIAirtravelMultilegRequest::is_legs_count_Set() const{
    return m_legs_count_isSet;
}

bool OAIAirtravelMultilegRequest::is_legs_count_Valid() const{
    return m_legs_count_isValid;
}

QString OAIAirtravelMultilegRequest::getNumberOfPassengers() const {
    return m_number_of_passengers;
}
void OAIAirtravelMultilegRequest::setNumberOfPassengers(const QString &number_of_passengers) {
    m_number_of_passengers = number_of_passengers;
    m_number_of_passengers_isSet = true;
}

bool OAIAirtravelMultilegRequest::is_number_of_passengers_Set() const{
    return m_number_of_passengers_isSet;
}

bool OAIAirtravelMultilegRequest::is_number_of_passengers_Valid() const{
    return m_number_of_passengers_isValid;
}

QString OAIAirtravelMultilegRequest::getTravelMode() const {
    return m_travel_mode;
}
void OAIAirtravelMultilegRequest::setTravelMode(const QString &travel_mode) {
    m_travel_mode = travel_mode;
    m_travel_mode_isSet = true;
}

bool OAIAirtravelMultilegRequest::is_travel_mode_Set() const{
    return m_travel_mode_isSet;
}

bool OAIAirtravelMultilegRequest::is_travel_mode_Valid() const{
    return m_travel_mode_isValid;
}

bool OAIAirtravelMultilegRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_api_key_l1_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_api_key_l2_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_contact_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_contact_first_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_contact_last_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_leg1.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_leg2.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_leg3.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_legs_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_number_of_passengers_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_travel_mode_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAirtravelMultilegRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_api_key_l1_isValid && m_api_key_l2_isValid && m_contact_email_isValid && m_contact_first_name_isValid && m_contact_last_name_isValid && m_leg1_isValid && m_leg2_isValid && m_leg3_isValid && m_legs_count_isValid && m_number_of_passengers_isValid && m_travel_mode_isValid && true;
}

} // namespace OpenAPI
