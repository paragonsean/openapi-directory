/**
 * climateKuul live
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILeg1.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILeg1::OAILeg1(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILeg1::OAILeg1() {
    this->initializeModel();
}

OAILeg1::~OAILeg1() {}

void OAILeg1::initializeModel() {

    m_destination_airport_code_isSet = false;
    m_destination_airport_code_isValid = false;

    m_origin_airport_code_isSet = false;
    m_origin_airport_code_isValid = false;

    m_travel_class_isSet = false;
    m_travel_class_isValid = false;
}

void OAILeg1::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILeg1::fromJsonObject(QJsonObject json) {

    m_destination_airport_code_isValid = ::OpenAPI::fromJsonValue(m_destination_airport_code, json[QString("destination_airport_code")]);
    m_destination_airport_code_isSet = !json[QString("destination_airport_code")].isNull() && m_destination_airport_code_isValid;

    m_origin_airport_code_isValid = ::OpenAPI::fromJsonValue(m_origin_airport_code, json[QString("origin_airport_code")]);
    m_origin_airport_code_isSet = !json[QString("origin_airport_code")].isNull() && m_origin_airport_code_isValid;

    m_travel_class_isValid = ::OpenAPI::fromJsonValue(m_travel_class, json[QString("travel_class")]);
    m_travel_class_isSet = !json[QString("travel_class")].isNull() && m_travel_class_isValid;
}

QString OAILeg1::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILeg1::asJsonObject() const {
    QJsonObject obj;
    if (m_destination_airport_code_isSet) {
        obj.insert(QString("destination_airport_code"), ::OpenAPI::toJsonValue(m_destination_airport_code));
    }
    if (m_origin_airport_code_isSet) {
        obj.insert(QString("origin_airport_code"), ::OpenAPI::toJsonValue(m_origin_airport_code));
    }
    if (m_travel_class_isSet) {
        obj.insert(QString("travel_class"), ::OpenAPI::toJsonValue(m_travel_class));
    }
    return obj;
}

QString OAILeg1::getDestinationAirportCode() const {
    return m_destination_airport_code;
}
void OAILeg1::setDestinationAirportCode(const QString &destination_airport_code) {
    m_destination_airport_code = destination_airport_code;
    m_destination_airport_code_isSet = true;
}

bool OAILeg1::is_destination_airport_code_Set() const{
    return m_destination_airport_code_isSet;
}

bool OAILeg1::is_destination_airport_code_Valid() const{
    return m_destination_airport_code_isValid;
}

QString OAILeg1::getOriginAirportCode() const {
    return m_origin_airport_code;
}
void OAILeg1::setOriginAirportCode(const QString &origin_airport_code) {
    m_origin_airport_code = origin_airport_code;
    m_origin_airport_code_isSet = true;
}

bool OAILeg1::is_origin_airport_code_Set() const{
    return m_origin_airport_code_isSet;
}

bool OAILeg1::is_origin_airport_code_Valid() const{
    return m_origin_airport_code_isValid;
}

QString OAILeg1::getTravelClass() const {
    return m_travel_class;
}
void OAILeg1::setTravelClass(const QString &travel_class) {
    m_travel_class = travel_class;
    m_travel_class_isSet = true;
}

bool OAILeg1::is_travel_class_Set() const{
    return m_travel_class_isSet;
}

bool OAILeg1::is_travel_class_Valid() const{
    return m_travel_class_isValid;
}

bool OAILeg1::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_destination_airport_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_origin_airport_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_travel_class_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILeg1::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_destination_airport_code_isValid && m_origin_airport_code_isValid && m_travel_class_isValid && true;
}

} // namespace OpenAPI
