/**
 * climateKuul live
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Leg1 model module.
 * @module model/Leg1
 * @version 1.0
 */
class Leg1 {
    /**
     * Constructs a new <code>Leg1</code>.
     * @alias module:model/Leg1
     * @param destinationAirportCode {String} 
     * @param originAirportCode {String} 
     * @param travelClass {String} 
     */
    constructor(destinationAirportCode, originAirportCode, travelClass) { 
        
        Leg1.initialize(this, destinationAirportCode, originAirportCode, travelClass);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, destinationAirportCode, originAirportCode, travelClass) { 
        obj['destination_airport_code'] = destinationAirportCode;
        obj['origin_airport_code'] = originAirportCode;
        obj['travel_class'] = travelClass;
    }

    /**
     * Constructs a <code>Leg1</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Leg1} obj Optional instance to populate.
     * @return {module:model/Leg1} The populated <code>Leg1</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Leg1();

            if (data.hasOwnProperty('destination_airport_code')) {
                obj['destination_airport_code'] = ApiClient.convertToType(data['destination_airport_code'], 'String');
            }
            if (data.hasOwnProperty('origin_airport_code')) {
                obj['origin_airport_code'] = ApiClient.convertToType(data['origin_airport_code'], 'String');
            }
            if (data.hasOwnProperty('travel_class')) {
                obj['travel_class'] = ApiClient.convertToType(data['travel_class'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Leg1</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Leg1</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Leg1.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['destination_airport_code'] && !(typeof data['destination_airport_code'] === 'string' || data['destination_airport_code'] instanceof String)) {
            throw new Error("Expected the field `destination_airport_code` to be a primitive type in the JSON string but got " + data['destination_airport_code']);
        }
        // ensure the json data is a string
        if (data['origin_airport_code'] && !(typeof data['origin_airport_code'] === 'string' || data['origin_airport_code'] instanceof String)) {
            throw new Error("Expected the field `origin_airport_code` to be a primitive type in the JSON string but got " + data['origin_airport_code']);
        }
        // ensure the json data is a string
        if (data['travel_class'] && !(typeof data['travel_class'] === 'string' || data['travel_class'] instanceof String)) {
            throw new Error("Expected the field `travel_class` to be a primitive type in the JSON string but got " + data['travel_class']);
        }

        return true;
    }


}

Leg1.RequiredProperties = ["destination_airport_code", "origin_airport_code", "travel_class"];

/**
 * @member {String} destination_airport_code
 */
Leg1.prototype['destination_airport_code'] = undefined;

/**
 * @member {String} origin_airport_code
 */
Leg1.prototype['origin_airport_code'] = undefined;

/**
 * @member {String} travel_class
 */
Leg1.prototype['travel_class'] = undefined;






export default Leg1;

