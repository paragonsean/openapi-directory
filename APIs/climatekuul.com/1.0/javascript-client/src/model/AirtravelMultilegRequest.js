/**
 * climateKuul live
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Leg1 from './Leg1';

/**
 * The AirtravelMultilegRequest model module.
 * @module model/AirtravelMultilegRequest
 * @version 1.0
 */
class AirtravelMultilegRequest {
    /**
     * Constructs a new <code>AirtravelMultilegRequest</code>.
     * @alias module:model/AirtravelMultilegRequest
     * @param apiKeyL1 {String} 
     * @param apiKeyL2 {String} 
     * @param contactEmail {String} 
     * @param contactFirstName {String} 
     * @param contactLastName {String} 
     * @param leg1 {module:model/Leg1} 
     * @param leg2 {module:model/Leg1} 
     * @param leg3 {module:model/Leg1} 
     * @param legsCount {String} 
     * @param numberOfPassengers {String} 
     * @param travelMode {String} 
     */
    constructor(apiKeyL1, apiKeyL2, contactEmail, contactFirstName, contactLastName, leg1, leg2, leg3, legsCount, numberOfPassengers, travelMode) { 
        
        AirtravelMultilegRequest.initialize(this, apiKeyL1, apiKeyL2, contactEmail, contactFirstName, contactLastName, leg1, leg2, leg3, legsCount, numberOfPassengers, travelMode);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, apiKeyL1, apiKeyL2, contactEmail, contactFirstName, contactLastName, leg1, leg2, leg3, legsCount, numberOfPassengers, travelMode) { 
        obj['apiKey_l1'] = apiKeyL1;
        obj['apiKey_l2'] = apiKeyL2;
        obj['contactEmail'] = contactEmail;
        obj['contactFirstName'] = contactFirstName;
        obj['contactLastName'] = contactLastName;
        obj['leg1'] = leg1;
        obj['leg2'] = leg2;
        obj['leg3'] = leg3;
        obj['legs_count'] = legsCount;
        obj['number_of_passengers'] = numberOfPassengers;
        obj['travel_mode'] = travelMode;
    }

    /**
     * Constructs a <code>AirtravelMultilegRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AirtravelMultilegRequest} obj Optional instance to populate.
     * @return {module:model/AirtravelMultilegRequest} The populated <code>AirtravelMultilegRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AirtravelMultilegRequest();

            if (data.hasOwnProperty('apiKey_l1')) {
                obj['apiKey_l1'] = ApiClient.convertToType(data['apiKey_l1'], 'String');
            }
            if (data.hasOwnProperty('apiKey_l2')) {
                obj['apiKey_l2'] = ApiClient.convertToType(data['apiKey_l2'], 'String');
            }
            if (data.hasOwnProperty('contactEmail')) {
                obj['contactEmail'] = ApiClient.convertToType(data['contactEmail'], 'String');
            }
            if (data.hasOwnProperty('contactFirstName')) {
                obj['contactFirstName'] = ApiClient.convertToType(data['contactFirstName'], 'String');
            }
            if (data.hasOwnProperty('contactLastName')) {
                obj['contactLastName'] = ApiClient.convertToType(data['contactLastName'], 'String');
            }
            if (data.hasOwnProperty('leg1')) {
                obj['leg1'] = Leg1.constructFromObject(data['leg1']);
            }
            if (data.hasOwnProperty('leg2')) {
                obj['leg2'] = Leg1.constructFromObject(data['leg2']);
            }
            if (data.hasOwnProperty('leg3')) {
                obj['leg3'] = Leg1.constructFromObject(data['leg3']);
            }
            if (data.hasOwnProperty('legs_count')) {
                obj['legs_count'] = ApiClient.convertToType(data['legs_count'], 'String');
            }
            if (data.hasOwnProperty('number_of_passengers')) {
                obj['number_of_passengers'] = ApiClient.convertToType(data['number_of_passengers'], 'String');
            }
            if (data.hasOwnProperty('travel_mode')) {
                obj['travel_mode'] = ApiClient.convertToType(data['travel_mode'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AirtravelMultilegRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AirtravelMultilegRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AirtravelMultilegRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['apiKey_l1'] && !(typeof data['apiKey_l1'] === 'string' || data['apiKey_l1'] instanceof String)) {
            throw new Error("Expected the field `apiKey_l1` to be a primitive type in the JSON string but got " + data['apiKey_l1']);
        }
        // ensure the json data is a string
        if (data['apiKey_l2'] && !(typeof data['apiKey_l2'] === 'string' || data['apiKey_l2'] instanceof String)) {
            throw new Error("Expected the field `apiKey_l2` to be a primitive type in the JSON string but got " + data['apiKey_l2']);
        }
        // ensure the json data is a string
        if (data['contactEmail'] && !(typeof data['contactEmail'] === 'string' || data['contactEmail'] instanceof String)) {
            throw new Error("Expected the field `contactEmail` to be a primitive type in the JSON string but got " + data['contactEmail']);
        }
        // ensure the json data is a string
        if (data['contactFirstName'] && !(typeof data['contactFirstName'] === 'string' || data['contactFirstName'] instanceof String)) {
            throw new Error("Expected the field `contactFirstName` to be a primitive type in the JSON string but got " + data['contactFirstName']);
        }
        // ensure the json data is a string
        if (data['contactLastName'] && !(typeof data['contactLastName'] === 'string' || data['contactLastName'] instanceof String)) {
            throw new Error("Expected the field `contactLastName` to be a primitive type in the JSON string but got " + data['contactLastName']);
        }
        // validate the optional field `leg1`
        if (data['leg1']) { // data not null
          Leg1.validateJSON(data['leg1']);
        }
        // validate the optional field `leg2`
        if (data['leg2']) { // data not null
          Leg1.validateJSON(data['leg2']);
        }
        // validate the optional field `leg3`
        if (data['leg3']) { // data not null
          Leg1.validateJSON(data['leg3']);
        }
        // ensure the json data is a string
        if (data['legs_count'] && !(typeof data['legs_count'] === 'string' || data['legs_count'] instanceof String)) {
            throw new Error("Expected the field `legs_count` to be a primitive type in the JSON string but got " + data['legs_count']);
        }
        // ensure the json data is a string
        if (data['number_of_passengers'] && !(typeof data['number_of_passengers'] === 'string' || data['number_of_passengers'] instanceof String)) {
            throw new Error("Expected the field `number_of_passengers` to be a primitive type in the JSON string but got " + data['number_of_passengers']);
        }
        // ensure the json data is a string
        if (data['travel_mode'] && !(typeof data['travel_mode'] === 'string' || data['travel_mode'] instanceof String)) {
            throw new Error("Expected the field `travel_mode` to be a primitive type in the JSON string but got " + data['travel_mode']);
        }

        return true;
    }


}

AirtravelMultilegRequest.RequiredProperties = ["apiKey_l1", "apiKey_l2", "contactEmail", "contactFirstName", "contactLastName", "leg1", "leg2", "leg3", "legs_count", "number_of_passengers", "travel_mode"];

/**
 * @member {String} apiKey_l1
 */
AirtravelMultilegRequest.prototype['apiKey_l1'] = undefined;

/**
 * @member {String} apiKey_l2
 */
AirtravelMultilegRequest.prototype['apiKey_l2'] = undefined;

/**
 * @member {String} contactEmail
 */
AirtravelMultilegRequest.prototype['contactEmail'] = undefined;

/**
 * @member {String} contactFirstName
 */
AirtravelMultilegRequest.prototype['contactFirstName'] = undefined;

/**
 * @member {String} contactLastName
 */
AirtravelMultilegRequest.prototype['contactLastName'] = undefined;

/**
 * @member {module:model/Leg1} leg1
 */
AirtravelMultilegRequest.prototype['leg1'] = undefined;

/**
 * @member {module:model/Leg1} leg2
 */
AirtravelMultilegRequest.prototype['leg2'] = undefined;

/**
 * @member {module:model/Leg1} leg3
 */
AirtravelMultilegRequest.prototype['leg3'] = undefined;

/**
 * @member {String} legs_count
 */
AirtravelMultilegRequest.prototype['legs_count'] = undefined;

/**
 * @member {String} number_of_passengers
 */
AirtravelMultilegRequest.prototype['number_of_passengers'] = undefined;

/**
 * @member {String} travel_mode
 */
AirtravelMultilegRequest.prototype['travel_mode'] = undefined;






export default AirtravelMultilegRequest;

