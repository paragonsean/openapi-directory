/**
 * climateKuul live
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";

/**
* RequestApiKey service.
* @module api/RequestApiKeyApi
* @version 1.0
*/
export default class RequestApiKeyApi {

    /**
    * Constructs a new RequestApiKeyApi. 
    * @alias module:api/RequestApiKeyApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the requestApiKey operation.
     * @callback module:api/RequestApiKeyApi~requestApiKeyCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * requestApiKey
     * @param {String} apiKeyL1 Api Key for client
     * @param {String} apiKeyL2 Integration Partner Api Key
     * @param {String} email User email
     * @param {Number} password User password
     * @param {String} userFirstName User first name
     * @param {String} userLastName User last name
     * @param {module:api/RequestApiKeyApi~requestApiKeyCallback} callback The callback function, accepting three arguments: error, data, response
     */
    requestApiKey(apiKeyL1, apiKeyL2, email, password, userFirstName, userLastName, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'apiKeyL1' is set
      if (apiKeyL1 === undefined || apiKeyL1 === null) {
        throw new Error("Missing the required parameter 'apiKeyL1' when calling requestApiKey");
      }
      // verify the required parameter 'apiKeyL2' is set
      if (apiKeyL2 === undefined || apiKeyL2 === null) {
        throw new Error("Missing the required parameter 'apiKeyL2' when calling requestApiKey");
      }
      // verify the required parameter 'email' is set
      if (email === undefined || email === null) {
        throw new Error("Missing the required parameter 'email' when calling requestApiKey");
      }
      // verify the required parameter 'password' is set
      if (password === undefined || password === null) {
        throw new Error("Missing the required parameter 'password' when calling requestApiKey");
      }
      // verify the required parameter 'userFirstName' is set
      if (userFirstName === undefined || userFirstName === null) {
        throw new Error("Missing the required parameter 'userFirstName' when calling requestApiKey");
      }
      // verify the required parameter 'userLastName' is set
      if (userLastName === undefined || userLastName === null) {
        throw new Error("Missing the required parameter 'userLastName' when calling requestApiKey");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'apiKey_l1': apiKeyL1,
        'apiKey_l2': apiKeyL2,
        'email': email,
        'password': password,
        'userFirstName': userFirstName,
        'userLastName': userLastName
      };

      let authNames = [];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = [];
      let returnType = null;
      let basePaths = ['http://api.climatekuul.com:8000/footprint'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/requestApiKey', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }


}
