/**
 * Mailsquad
 * MailSquad offers an affordable and super easy way to create, send and track delightful emails.
 *
 * The version of the OpenAPI document: 0.9
 * Contact: support@mailsquad.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIContactAdd.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIContactAdd::OAIContactAdd(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIContactAdd::OAIContactAdd() {
    this->initializeModel();
}

OAIContactAdd::~OAIContactAdd() {}

void OAIContactAdd::initializeModel() {

    m_confirmed_isSet = false;
    m_confirmed_isValid = false;

    m_customfields_isSet = false;
    m_customfields_isValid = false;

    m_email_isSet = false;
    m_email_isValid = false;

    m_ip_isSet = false;
    m_ip_isValid = false;

    m_listid_isSet = false;
    m_listid_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;
}

void OAIContactAdd::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIContactAdd::fromJsonObject(QJsonObject json) {

    m_confirmed_isValid = ::OpenAPI::fromJsonValue(m_confirmed, json[QString("confirmed")]);
    m_confirmed_isSet = !json[QString("confirmed")].isNull() && m_confirmed_isValid;

    m_customfields_isValid = ::OpenAPI::fromJsonValue(m_customfields, json[QString("customfields")]);
    m_customfields_isSet = !json[QString("customfields")].isNull() && m_customfields_isValid;

    m_email_isValid = ::OpenAPI::fromJsonValue(m_email, json[QString("email")]);
    m_email_isSet = !json[QString("email")].isNull() && m_email_isValid;

    m_ip_isValid = ::OpenAPI::fromJsonValue(m_ip, json[QString("ip")]);
    m_ip_isSet = !json[QString("ip")].isNull() && m_ip_isValid;

    m_listid_isValid = ::OpenAPI::fromJsonValue(m_listid, json[QString("listid")]);
    m_listid_isSet = !json[QString("listid")].isNull() && m_listid_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;
}

QString OAIContactAdd::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIContactAdd::asJsonObject() const {
    QJsonObject obj;
    if (m_confirmed_isSet) {
        obj.insert(QString("confirmed"), ::OpenAPI::toJsonValue(m_confirmed));
    }
    if (m_customfields_isSet) {
        obj.insert(QString("customfields"), ::OpenAPI::toJsonValue(m_customfields));
    }
    if (m_email_isSet) {
        obj.insert(QString("email"), ::OpenAPI::toJsonValue(m_email));
    }
    if (m_ip_isSet) {
        obj.insert(QString("ip"), ::OpenAPI::toJsonValue(m_ip));
    }
    if (m_listid_isSet) {
        obj.insert(QString("listid"), ::OpenAPI::toJsonValue(m_listid));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    return obj;
}

QDateTime OAIContactAdd::getConfirmed() const {
    return m_confirmed;
}
void OAIContactAdd::setConfirmed(const QDateTime &confirmed) {
    m_confirmed = confirmed;
    m_confirmed_isSet = true;
}

bool OAIContactAdd::is_confirmed_Set() const{
    return m_confirmed_isSet;
}

bool OAIContactAdd::is_confirmed_Valid() const{
    return m_confirmed_isValid;
}

OAIObject OAIContactAdd::getCustomfields() const {
    return m_customfields;
}
void OAIContactAdd::setCustomfields(const OAIObject &customfields) {
    m_customfields = customfields;
    m_customfields_isSet = true;
}

bool OAIContactAdd::is_customfields_Set() const{
    return m_customfields_isSet;
}

bool OAIContactAdd::is_customfields_Valid() const{
    return m_customfields_isValid;
}

QString OAIContactAdd::getEmail() const {
    return m_email;
}
void OAIContactAdd::setEmail(const QString &email) {
    m_email = email;
    m_email_isSet = true;
}

bool OAIContactAdd::is_email_Set() const{
    return m_email_isSet;
}

bool OAIContactAdd::is_email_Valid() const{
    return m_email_isValid;
}

QString OAIContactAdd::getIp() const {
    return m_ip;
}
void OAIContactAdd::setIp(const QString &ip) {
    m_ip = ip;
    m_ip_isSet = true;
}

bool OAIContactAdd::is_ip_Set() const{
    return m_ip_isSet;
}

bool OAIContactAdd::is_ip_Valid() const{
    return m_ip_isValid;
}

QString OAIContactAdd::getListid() const {
    return m_listid;
}
void OAIContactAdd::setListid(const QString &listid) {
    m_listid = listid;
    m_listid_isSet = true;
}

bool OAIContactAdd::is_listid_Set() const{
    return m_listid_isSet;
}

bool OAIContactAdd::is_listid_Valid() const{
    return m_listid_isValid;
}

qint32 OAIContactAdd::getStatus() const {
    return m_status;
}
void OAIContactAdd::setStatus(const qint32 &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIContactAdd::is_status_Set() const{
    return m_status_isSet;
}

bool OAIContactAdd::is_status_Valid() const{
    return m_status_isValid;
}

bool OAIContactAdd::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_confirmed_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_customfields_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ip_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_listid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIContactAdd::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_email_isValid && m_listid_isValid && true;
}

} // namespace OpenAPI
