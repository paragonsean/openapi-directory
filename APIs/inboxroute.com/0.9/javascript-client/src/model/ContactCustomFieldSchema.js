/**
 * Mailsquad
 * MailSquad offers an affordable and super easy way to create, send and track delightful emails.
 *
 * The version of the OpenAPI document: 0.9
 * Contact: support@mailsquad.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ContactCustomFieldSchema model module.
 * @module model/ContactCustomFieldSchema
 * @version 0.9
 */
class ContactCustomFieldSchema {
    /**
     * Constructs a new <code>ContactCustomFieldSchema</code>.
     * @alias module:model/ContactCustomFieldSchema
     * @param key {String} equivalent to html form input name attribute
     * @param label {String} User friendly label describing the field
     * @param type {Number} Type (   1- String / text free form   2- Numeric / integer or decimal   3- Date / ISO 8601 format (YYYY/MM/DD) ) 
     */
    constructor(key, label, type) { 
        
        ContactCustomFieldSchema.initialize(this, key, label, type);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, key, label, type) { 
        obj['key'] = key;
        obj['label'] = label;
        obj['type'] = type;
    }

    /**
     * Constructs a <code>ContactCustomFieldSchema</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ContactCustomFieldSchema} obj Optional instance to populate.
     * @return {module:model/ContactCustomFieldSchema} The populated <code>ContactCustomFieldSchema</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ContactCustomFieldSchema();

            if (data.hasOwnProperty('key')) {
                obj['key'] = ApiClient.convertToType(data['key'], 'String');
            }
            if (data.hasOwnProperty('label')) {
                obj['label'] = ApiClient.convertToType(data['label'], 'String');
            }
            if (data.hasOwnProperty('required')) {
                obj['required'] = ApiClient.convertToType(data['required'], 'Boolean');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ContactCustomFieldSchema</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ContactCustomFieldSchema</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ContactCustomFieldSchema.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['key'] && !(typeof data['key'] === 'string' || data['key'] instanceof String)) {
            throw new Error("Expected the field `key` to be a primitive type in the JSON string but got " + data['key']);
        }
        // ensure the json data is a string
        if (data['label'] && !(typeof data['label'] === 'string' || data['label'] instanceof String)) {
            throw new Error("Expected the field `label` to be a primitive type in the JSON string but got " + data['label']);
        }

        return true;
    }


}

ContactCustomFieldSchema.RequiredProperties = ["key", "label", "type"];

/**
 * equivalent to html form input name attribute
 * @member {String} key
 */
ContactCustomFieldSchema.prototype['key'] = undefined;

/**
 * User friendly label describing the field
 * @member {String} label
 */
ContactCustomFieldSchema.prototype['label'] = undefined;

/**
 * Is field required
 * @member {Boolean} required
 */
ContactCustomFieldSchema.prototype['required'] = undefined;

/**
 * Type (   1- String / text free form   2- Numeric / integer or decimal   3- Date / ISO 8601 format (YYYY/MM/DD) ) 
 * @member {Number} type
 */
ContactCustomFieldSchema.prototype['type'] = undefined;






export default ContactCustomFieldSchema;

