/**
 * Mailsquad
 * MailSquad offers an affordable and super easy way to create, send and track delightful emails.
 *
 * The version of the OpenAPI document: 0.9
 * Contact: support@mailsquad.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ContactList from './ContactList';

/**
 * The ContactListPage model module.
 * @module model/ContactListPage
 * @version 0.9
 */
class ContactListPage {
    /**
     * Constructs a new <code>ContactListPage</code>.
     * @alias module:model/ContactListPage
     */
    constructor() { 
        
        ContactListPage.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ContactListPage</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ContactListPage} obj Optional instance to populate.
     * @return {module:model/ContactListPage} The populated <code>ContactListPage</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ContactListPage();

            if (data.hasOwnProperty('page')) {
                obj['page'] = ApiClient.convertToType(data['page'], [ContactList]);
            }
            if (data.hasOwnProperty('total')) {
                obj['total'] = ApiClient.convertToType(data['total'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ContactListPage</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ContactListPage</code>.
     */
    static validateJSON(data) {
        if (data['page']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['page'])) {
                throw new Error("Expected the field `page` to be an array in the JSON data but got " + data['page']);
            }
            // validate the optional field `page` (array)
            for (const item of data['page']) {
                ContactList.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Array of ContactList for that page
 * @member {Array.<module:model/ContactList>} page
 */
ContactListPage.prototype['page'] = undefined;

/**
 * Total number of items in query
 * @member {Number} total
 */
ContactListPage.prototype['total'] = undefined;






export default ContactListPage;

