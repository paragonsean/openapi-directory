# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ContactListEventCustomization(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, redirecturl: str=None, type: int=None):
        """ContactListEventCustomization - a model defined in OpenAPI

        :param redirecturl: The redirecturl of this ContactListEventCustomization.
        :param type: The type of this ContactListEventCustomization.
        """
        self.openapi_types = {
            'redirecturl': str,
            'type': int
        }

        self.attribute_map = {
            'redirecturl': 'redirecturl',
            'type': 'type'
        }

        self._redirecturl = redirecturl
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ContactListEventCustomization':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ContactListEventCustomization of this ContactListEventCustomization.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def redirecturl(self):
        """Gets the redirecturl of this ContactListEventCustomization.

        full url of the destination landing page

        :return: The redirecturl of this ContactListEventCustomization.
        :rtype: str
        """
        return self._redirecturl

    @redirecturl.setter
    def redirecturl(self, redirecturl):
        """Sets the redirecturl of this ContactListEventCustomization.

        full url of the destination landing page

        :param redirecturl: The redirecturl of this ContactListEventCustomization.
        :type redirecturl: str
        """

        self._redirecturl = redirecturl

    @property
    def type(self):
        """Gets the type of this ContactListEventCustomization.

        Type (   1- Subscribe confirmation request landing page   2- Subscribe opt-in landing page   3- Unsubscribe confirmation landing page ) 

        :return: The type of this ContactListEventCustomization.
        :rtype: int
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this ContactListEventCustomization.

        Type (   1- Subscribe confirmation request landing page   2- Subscribe opt-in landing page   3- Unsubscribe confirmation landing page ) 

        :param type: The type of this ContactListEventCustomization.
        :type type: int
        """
        if type is None:
            raise ValueError("Invalid value for `type`, must not be `None`")

        self._type = type
