# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ContactUpdate(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, confirmed: datetime=None, customfields: object=None, email: str=None, ip: str=None, status: int=None):
        """ContactUpdate - a model defined in OpenAPI

        :param confirmed: The confirmed of this ContactUpdate.
        :param customfields: The customfields of this ContactUpdate.
        :param email: The email of this ContactUpdate.
        :param ip: The ip of this ContactUpdate.
        :param status: The status of this ContactUpdate.
        """
        self.openapi_types = {
            'confirmed': datetime,
            'customfields': object,
            'email': str,
            'ip': str,
            'status': int
        }

        self.attribute_map = {
            'confirmed': 'confirmed',
            'customfields': 'customfields',
            'email': 'email',
            'ip': 'ip',
            'status': 'status'
        }

        self._confirmed = confirmed
        self._customfields = customfields
        self._email = email
        self._ip = ip
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ContactUpdate':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ContactUpdate of this ContactUpdate.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def confirmed(self):
        """Gets the confirmed of this ContactUpdate.

        Date+time subscriber confirmed his/her list opt-in

        :return: The confirmed of this ContactUpdate.
        :rtype: datetime
        """
        return self._confirmed

    @confirmed.setter
    def confirmed(self, confirmed):
        """Sets the confirmed of this ContactUpdate.

        Date+time subscriber confirmed his/her list opt-in

        :param confirmed: The confirmed of this ContactUpdate.
        :type confirmed: datetime
        """

        self._confirmed = confirmed

    @property
    def customfields(self):
        """Gets the customfields of this ContactUpdate.

        Dictionnary of field key to value

        :return: The customfields of this ContactUpdate.
        :rtype: object
        """
        return self._customfields

    @customfields.setter
    def customfields(self, customfields):
        """Sets the customfields of this ContactUpdate.

        Dictionnary of field key to value

        :param customfields: The customfields of this ContactUpdate.
        :type customfields: object
        """

        self._customfields = customfields

    @property
    def email(self):
        """Gets the email of this ContactUpdate.

        Email address

        :return: The email of this ContactUpdate.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this ContactUpdate.

        Email address

        :param email: The email of this ContactUpdate.
        :type email: str
        """

        self._email = email

    @property
    def ip(self):
        """Gets the ip of this ContactUpdate.

        Subscriber's IP address when he/she confirmed list opt-in

        :return: The ip of this ContactUpdate.
        :rtype: str
        """
        return self._ip

    @ip.setter
    def ip(self, ip):
        """Sets the ip of this ContactUpdate.

        Subscriber's IP address when he/she confirmed list opt-in

        :param ip: The ip of this ContactUpdate.
        :type ip: str
        """

        self._ip = ip

    @property
    def status(self):
        """Gets the status of this ContactUpdate.

        Status (   1- Active,   2- Unconfirmed,   3- Unsubscribed,   4- Deleted,   5- Cleaned because of hard bounce or spam complaint) 

        :return: The status of this ContactUpdate.
        :rtype: int
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this ContactUpdate.

        Status (   1- Active,   2- Unconfirmed,   3- Unsubscribed,   4- Deleted,   5- Cleaned because of hard bounce or spam complaint) 

        :param status: The status of this ContactUpdate.
        :type status: int
        """

        self._status = status
