# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.contact_custom_field_schema import ContactCustomFieldSchema
from openapi_server.models.contact_list_event_customization import ContactListEventCustomization
from openapi_server import util


class ContactList(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, clientid: str=None, created: datetime=None, customfields: List[ContactCustomFieldSchema]=None, eventcustomizations: List[ContactListEventCustomization]=None, name: str=None):
        """ContactList - a model defined in OpenAPI

        :param id: The id of this ContactList.
        :param clientid: The clientid of this ContactList.
        :param created: The created of this ContactList.
        :param customfields: The customfields of this ContactList.
        :param eventcustomizations: The eventcustomizations of this ContactList.
        :param name: The name of this ContactList.
        """
        self.openapi_types = {
            'id': str,
            'clientid': str,
            'created': datetime,
            'customfields': List[ContactCustomFieldSchema],
            'eventcustomizations': List[ContactListEventCustomization],
            'name': str
        }

        self.attribute_map = {
            'id': '_id',
            'clientid': 'clientid',
            'created': 'created',
            'customfields': 'customfields',
            'eventcustomizations': 'eventcustomizations',
            'name': 'name'
        }

        self._id = id
        self._clientid = clientid
        self._created = created
        self._customfields = customfields
        self._eventcustomizations = eventcustomizations
        self._name = name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ContactList':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ContactList of this ContactList.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this ContactList.

        Unique 16 characters ID

        :return: The id of this ContactList.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ContactList.

        Unique 16 characters ID

        :param id: The id of this ContactList.
        :type id: str
        """

        self._id = id

    @property
    def clientid(self):
        """Gets the clientid of this ContactList.

        Unique 16 characters ID of the client owner

        :return: The clientid of this ContactList.
        :rtype: str
        """
        return self._clientid

    @clientid.setter
    def clientid(self, clientid):
        """Sets the clientid of this ContactList.

        Unique 16 characters ID of the client owner

        :param clientid: The clientid of this ContactList.
        :type clientid: str
        """

        self._clientid = clientid

    @property
    def created(self):
        """Gets the created of this ContactList.


        :return: The created of this ContactList.
        :rtype: datetime
        """
        return self._created

    @created.setter
    def created(self, created):
        """Sets the created of this ContactList.


        :param created: The created of this ContactList.
        :type created: datetime
        """

        self._created = created

    @property
    def customfields(self):
        """Gets the customfields of this ContactList.

        Array of ContactCustomFieldSchema

        :return: The customfields of this ContactList.
        :rtype: List[ContactCustomFieldSchema]
        """
        return self._customfields

    @customfields.setter
    def customfields(self, customfields):
        """Sets the customfields of this ContactList.

        Array of ContactCustomFieldSchema

        :param customfields: The customfields of this ContactList.
        :type customfields: List[ContactCustomFieldSchema]
        """

        self._customfields = customfields

    @property
    def eventcustomizations(self):
        """Gets the eventcustomizations of this ContactList.

        Array of ContactListEventCustomization

        :return: The eventcustomizations of this ContactList.
        :rtype: List[ContactListEventCustomization]
        """
        return self._eventcustomizations

    @eventcustomizations.setter
    def eventcustomizations(self, eventcustomizations):
        """Sets the eventcustomizations of this ContactList.

        Array of ContactListEventCustomization

        :param eventcustomizations: The eventcustomizations of this ContactList.
        :type eventcustomizations: List[ContactListEventCustomization]
        """

        self._eventcustomizations = eventcustomizations

    @property
    def name(self):
        """Gets the name of this ContactList.

        Name of the contact list

        :return: The name of this ContactList.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ContactList.

        Name of the contact list

        :param name: The name of this ContactList.
        :type name: str
        """

        self._name = name
