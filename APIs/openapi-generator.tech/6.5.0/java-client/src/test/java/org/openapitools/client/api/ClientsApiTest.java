/*
 * OpenAPI Generator Online
 * This is an online openapi generator server.  You can find out more at https://github.com/OpenAPITools/openapi-generator.
 *
 * The version of the OpenAPI document: 6.5.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CliOption;
import java.io.File;
import org.openapitools.client.model.GeneratorInput;
import org.openapitools.client.model.ResponseCode;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ClientsApi
 */
@Disabled
public class ClientsApiTest {

    private final ClientsApi api = new ClientsApi();

    /**
     * Gets languages supported by the client generator
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void clientOptionsTest() throws ApiException {
        List<String> response = api.clientOptions();
        // TODO: test validations
    }

    /**
     * Downloads a pre-generated file
     *
     * A valid &#x60;fileId&#x60; is generated by the &#x60;/clients/{language}&#x60; or &#x60;/servers/{language}&#x60; POST operations.  The fileId code can be used just once, after which a new &#x60;fileId&#x60; will need to be requested.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void downloadFileTest() throws ApiException {
        String fileId = null;
        File response = api.downloadFile(fileId);
        // TODO: test validations
    }

    /**
     * Generates a client library
     *
     * Accepts a &#x60;GeneratorInput&#x60; options map for spec location and generation options
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void generateClientTest() throws ApiException {
        String language = null;
        GeneratorInput generatorInput = null;
        ResponseCode response = api.generateClient(language, generatorInput);
        // TODO: test validations
    }

    /**
     * Returns options for a client library
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getClientOptionsTest() throws ApiException {
        String language = null;
        Map<String, CliOption> response = api.getClientOptions(language);
        // TODO: test validations
    }

}
