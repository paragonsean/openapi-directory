/**
 * OpenAPI Generator Online
 * This is an online openapi generator server.  You can find out more at https://github.com/OpenAPITools/openapi-generator.
 *
 * The version of the OpenAPI document: 6.5.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AuthorizationValue from './AuthorizationValue';

/**
 * The GeneratorInput model module.
 * @module model/GeneratorInput
 * @version 6.5.0
 */
class GeneratorInput {
    /**
     * Constructs a new <code>GeneratorInput</code>.
     * @alias module:model/GeneratorInput
     */
    constructor() { 
        
        GeneratorInput.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GeneratorInput</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GeneratorInput} obj Optional instance to populate.
     * @return {module:model/GeneratorInput} The populated <code>GeneratorInput</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GeneratorInput();

            if (data.hasOwnProperty('authorizationValue')) {
                obj['authorizationValue'] = AuthorizationValue.constructFromObject(data['authorizationValue']);
            }
            if (data.hasOwnProperty('openAPIUrl')) {
                obj['openAPIUrl'] = ApiClient.convertToType(data['openAPIUrl'], 'String');
            }
            if (data.hasOwnProperty('options')) {
                obj['options'] = ApiClient.convertToType(data['options'], {'String': 'String'});
            }
            if (data.hasOwnProperty('spec')) {
                obj['spec'] = ApiClient.convertToType(data['spec'], Object);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GeneratorInput</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GeneratorInput</code>.
     */
    static validateJSON(data) {
        // validate the optional field `authorizationValue`
        if (data['authorizationValue']) { // data not null
          AuthorizationValue.validateJSON(data['authorizationValue']);
        }
        // ensure the json data is a string
        if (data['openAPIUrl'] && !(typeof data['openAPIUrl'] === 'string' || data['openAPIUrl'] instanceof String)) {
            throw new Error("Expected the field `openAPIUrl` to be a primitive type in the JSON string but got " + data['openAPIUrl']);
        }

        return true;
    }


}



/**
 * @member {module:model/AuthorizationValue} authorizationValue
 */
GeneratorInput.prototype['authorizationValue'] = undefined;

/**
 * @member {String} openAPIUrl
 */
GeneratorInput.prototype['openAPIUrl'] = undefined;

/**
 * @member {Object.<String, String>} options
 */
GeneratorInput.prototype['options'] = undefined;

/**
 * @member {Object} spec
 */
GeneratorInput.prototype['spec'] = undefined;






export default GeneratorInput;

