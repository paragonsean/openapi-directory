/**
 * OpenAPI Generator Online
 * This is an online openapi generator server.  You can find out more at https://github.com/OpenAPITools/openapi-generator.
 *
 * The version of the OpenAPI document: 6.5.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGeneratorInput.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGeneratorInput::OAIGeneratorInput(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGeneratorInput::OAIGeneratorInput() {
    this->initializeModel();
}

OAIGeneratorInput::~OAIGeneratorInput() {}

void OAIGeneratorInput::initializeModel() {

    m_authorization_value_isSet = false;
    m_authorization_value_isValid = false;

    m_open_api_url_isSet = false;
    m_open_api_url_isValid = false;

    m_options_isSet = false;
    m_options_isValid = false;

    m_spec_isSet = false;
    m_spec_isValid = false;
}

void OAIGeneratorInput::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGeneratorInput::fromJsonObject(QJsonObject json) {

    m_authorization_value_isValid = ::OpenAPI::fromJsonValue(m_authorization_value, json[QString("authorizationValue")]);
    m_authorization_value_isSet = !json[QString("authorizationValue")].isNull() && m_authorization_value_isValid;

    m_open_api_url_isValid = ::OpenAPI::fromJsonValue(m_open_api_url, json[QString("openAPIUrl")]);
    m_open_api_url_isSet = !json[QString("openAPIUrl")].isNull() && m_open_api_url_isValid;

    m_options_isValid = ::OpenAPI::fromJsonValue(m_options, json[QString("options")]);
    m_options_isSet = !json[QString("options")].isNull() && m_options_isValid;

    m_spec_isValid = ::OpenAPI::fromJsonValue(m_spec, json[QString("spec")]);
    m_spec_isSet = !json[QString("spec")].isNull() && m_spec_isValid;
}

QString OAIGeneratorInput::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGeneratorInput::asJsonObject() const {
    QJsonObject obj;
    if (m_authorization_value.isSet()) {
        obj.insert(QString("authorizationValue"), ::OpenAPI::toJsonValue(m_authorization_value));
    }
    if (m_open_api_url_isSet) {
        obj.insert(QString("openAPIUrl"), ::OpenAPI::toJsonValue(m_open_api_url));
    }
    if (m_options.size() > 0) {
        obj.insert(QString("options"), ::OpenAPI::toJsonValue(m_options));
    }
    if (m_spec_isSet) {
        obj.insert(QString("spec"), ::OpenAPI::toJsonValue(m_spec));
    }
    return obj;
}

OAIAuthorizationValue OAIGeneratorInput::getAuthorizationValue() const {
    return m_authorization_value;
}
void OAIGeneratorInput::setAuthorizationValue(const OAIAuthorizationValue &authorization_value) {
    m_authorization_value = authorization_value;
    m_authorization_value_isSet = true;
}

bool OAIGeneratorInput::is_authorization_value_Set() const{
    return m_authorization_value_isSet;
}

bool OAIGeneratorInput::is_authorization_value_Valid() const{
    return m_authorization_value_isValid;
}

QString OAIGeneratorInput::getOpenApiUrl() const {
    return m_open_api_url;
}
void OAIGeneratorInput::setOpenApiUrl(const QString &open_api_url) {
    m_open_api_url = open_api_url;
    m_open_api_url_isSet = true;
}

bool OAIGeneratorInput::is_open_api_url_Set() const{
    return m_open_api_url_isSet;
}

bool OAIGeneratorInput::is_open_api_url_Valid() const{
    return m_open_api_url_isValid;
}

QMap<QString, QString> OAIGeneratorInput::getOptions() const {
    return m_options;
}
void OAIGeneratorInput::setOptions(const QMap<QString, QString> &options) {
    m_options = options;
    m_options_isSet = true;
}

bool OAIGeneratorInput::is_options_Set() const{
    return m_options_isSet;
}

bool OAIGeneratorInput::is_options_Valid() const{
    return m_options_isValid;
}

OAIObject OAIGeneratorInput::getSpec() const {
    return m_spec;
}
void OAIGeneratorInput::setSpec(const OAIObject &spec) {
    m_spec = spec;
    m_spec_isSet = true;
}

bool OAIGeneratorInput::is_spec_Set() const{
    return m_spec_isSet;
}

bool OAIGeneratorInput::is_spec_Valid() const{
    return m_spec_isValid;
}

bool OAIGeneratorInput::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_authorization_value.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_open_api_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_options.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_spec_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGeneratorInput::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
