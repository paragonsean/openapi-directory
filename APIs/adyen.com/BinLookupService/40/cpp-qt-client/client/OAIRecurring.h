/**
 * Adyen BinLookup API
 * The BIN Lookup API provides endpoints for retrieving information, such as cost estimates, and 3D Secure supported version based on a given BIN.  ## Authentication You need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.  If using an API key, add an `X-API-Key` header with the API key as the value, for example:   ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ```  Alternatively, you can use the username and password to connect to the API using basic authentication, for example:  ``` curl -U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\ -H \"Content-Type: application/json\" \\ ... ```  ## Versioning The BinLookup API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://pal-test.adyen.com/pal/servlet/BinLookup/v40/get3dsAvailability ```## Going live  To authneticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.  The live endpoint URLs contain a prefix which is unique to your company account: ```  https://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/BinLookup/v40/get3dsAvailability ```  Get your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.
 *
 * The version of the OpenAPI document: 40
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRecurring.h
 *
 * 
 */

#ifndef OAIRecurring_H
#define OAIRecurring_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIRecurring : public OAIObject {
public:
    OAIRecurring();
    OAIRecurring(QString json);
    ~OAIRecurring() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getContract() const;
    void setContract(const QString &contract);
    bool is_contract_Set() const;
    bool is_contract_Valid() const;

    QString getRecurringDetailName() const;
    void setRecurringDetailName(const QString &recurring_detail_name);
    bool is_recurring_detail_name_Set() const;
    bool is_recurring_detail_name_Valid() const;

    QDateTime getRecurringExpiry() const;
    void setRecurringExpiry(const QDateTime &recurring_expiry);
    bool is_recurring_expiry_Set() const;
    bool is_recurring_expiry_Valid() const;

    QString getRecurringFrequency() const;
    void setRecurringFrequency(const QString &recurring_frequency);
    bool is_recurring_frequency_Set() const;
    bool is_recurring_frequency_Valid() const;

    QString getTokenService() const;
    void setTokenService(const QString &token_service);
    bool is_token_service_Set() const;
    bool is_token_service_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_contract;
    bool m_contract_isSet;
    bool m_contract_isValid;

    QString m_recurring_detail_name;
    bool m_recurring_detail_name_isSet;
    bool m_recurring_detail_name_isValid;

    QDateTime m_recurring_expiry;
    bool m_recurring_expiry_isSet;
    bool m_recurring_expiry_isValid;

    QString m_recurring_frequency;
    bool m_recurring_frequency_isSet;
    bool m_recurring_frequency_isValid;

    QString m_token_service;
    bool m_token_service_isSet;
    bool m_token_service_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRecurring)

#endif // OAIRecurring_H
