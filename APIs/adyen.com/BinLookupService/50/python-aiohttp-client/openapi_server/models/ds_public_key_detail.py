# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DSPublicKeyDetail(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, brand: str=None, directory_server_id: str=None, from_sdk_version: str=None, public_key: str=None, root_certificates: str=None):
        """DSPublicKeyDetail - a model defined in OpenAPI

        :param brand: The brand of this DSPublicKeyDetail.
        :param directory_server_id: The directory_server_id of this DSPublicKeyDetail.
        :param from_sdk_version: The from_sdk_version of this DSPublicKeyDetail.
        :param public_key: The public_key of this DSPublicKeyDetail.
        :param root_certificates: The root_certificates of this DSPublicKeyDetail.
        """
        self.openapi_types = {
            'brand': str,
            'directory_server_id': str,
            'from_sdk_version': str,
            'public_key': str,
            'root_certificates': str
        }

        self.attribute_map = {
            'brand': 'brand',
            'directory_server_id': 'directoryServerId',
            'from_sdk_version': 'fromSDKVersion',
            'public_key': 'publicKey',
            'root_certificates': 'rootCertificates'
        }

        self._brand = brand
        self._directory_server_id = directory_server_id
        self._from_sdk_version = from_sdk_version
        self._public_key = public_key
        self._root_certificates = root_certificates

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DSPublicKeyDetail':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DSPublicKeyDetail of this DSPublicKeyDetail.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def brand(self):
        """Gets the brand of this DSPublicKeyDetail.

        Card brand.

        :return: The brand of this DSPublicKeyDetail.
        :rtype: str
        """
        return self._brand

    @brand.setter
    def brand(self, brand):
        """Sets the brand of this DSPublicKeyDetail.

        Card brand.

        :param brand: The brand of this DSPublicKeyDetail.
        :type brand: str
        """

        self._brand = brand

    @property
    def directory_server_id(self):
        """Gets the directory_server_id of this DSPublicKeyDetail.

        Directory Server (DS) identifier.

        :return: The directory_server_id of this DSPublicKeyDetail.
        :rtype: str
        """
        return self._directory_server_id

    @directory_server_id.setter
    def directory_server_id(self, directory_server_id):
        """Sets the directory_server_id of this DSPublicKeyDetail.

        Directory Server (DS) identifier.

        :param directory_server_id: The directory_server_id of this DSPublicKeyDetail.
        :type directory_server_id: str
        """

        self._directory_server_id = directory_server_id

    @property
    def from_sdk_version(self):
        """Gets the from_sdk_version of this DSPublicKeyDetail.

        The version of the mobile 3D Secure 2 SDK. For the possible values, refer to the versions in [Adyen 3DS2 Android](https://github.com/Adyen/adyen-3ds2-android/releases) and [Adyen 3DS2 iOS](https://github.com/Adyen/adyen-3ds2-ios/releases).

        :return: The from_sdk_version of this DSPublicKeyDetail.
        :rtype: str
        """
        return self._from_sdk_version

    @from_sdk_version.setter
    def from_sdk_version(self, from_sdk_version):
        """Sets the from_sdk_version of this DSPublicKeyDetail.

        The version of the mobile 3D Secure 2 SDK. For the possible values, refer to the versions in [Adyen 3DS2 Android](https://github.com/Adyen/adyen-3ds2-android/releases) and [Adyen 3DS2 iOS](https://github.com/Adyen/adyen-3ds2-ios/releases).

        :param from_sdk_version: The from_sdk_version of this DSPublicKeyDetail.
        :type from_sdk_version: str
        """

        self._from_sdk_version = from_sdk_version

    @property
    def public_key(self):
        """Gets the public_key of this DSPublicKeyDetail.

        Public key. The 3D Secure 2 SDK encrypts the device information by using the DS public key.

        :return: The public_key of this DSPublicKeyDetail.
        :rtype: str
        """
        return self._public_key

    @public_key.setter
    def public_key(self, public_key):
        """Sets the public_key of this DSPublicKeyDetail.

        Public key. The 3D Secure 2 SDK encrypts the device information by using the DS public key.

        :param public_key: The public_key of this DSPublicKeyDetail.
        :type public_key: str
        """

        self._public_key = public_key

    @property
    def root_certificates(self):
        """Gets the root_certificates of this DSPublicKeyDetail.

        Directory Server root certificates. The 3D Secure 2 SDK verifies the ACS signed content using the rootCertificates.

        :return: The root_certificates of this DSPublicKeyDetail.
        :rtype: str
        """
        return self._root_certificates

    @root_certificates.setter
    def root_certificates(self, root_certificates):
        """Sets the root_certificates of this DSPublicKeyDetail.

        Directory Server root certificates. The 3D Secure 2 SDK verifies the ACS signed content using the rootCertificates.

        :param root_certificates: The root_certificates of this DSPublicKeyDetail.
        :type root_certificates: str
        """

        self._root_certificates = root_certificates
