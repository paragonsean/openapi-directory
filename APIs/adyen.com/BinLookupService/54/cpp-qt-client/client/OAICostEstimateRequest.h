/**
 * Adyen BinLookup API
 * The BIN Lookup API provides endpoints for retrieving information, such as cost estimates, and 3D Secure supported version based on a given BIN.  ## Authentication You need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.  If using an API key, add an `X-API-Key` header with the API key as the value, for example:   ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ```  Alternatively, you can use the username and password to connect to the API using basic authentication, for example:  ``` curl -U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\ -H \"Content-Type: application/json\" \\ ... ```  ## Versioning The BinLookup API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://pal-test.adyen.com/pal/servlet/BinLookup/v54/get3dsAvailability ```## Going live  To authneticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.  The live endpoint URLs contain a prefix which is unique to your company account: ```  https://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/BinLookup/v54/get3dsAvailability ```  Get your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.
 *
 * The version of the OpenAPI document: 54
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICostEstimateRequest.h
 *
 * 
 */

#ifndef OAICostEstimateRequest_H
#define OAICostEstimateRequest_H

#include <QJsonObject>

#include "OAIAmount.h"
#include "OAICostEstimateAssumptions.h"
#include "OAIMerchantDetails.h"
#include "OAIRecurring.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAmount;
class OAICostEstimateAssumptions;
class OAIMerchantDetails;
class OAIRecurring;

class OAICostEstimateRequest : public OAIObject {
public:
    OAICostEstimateRequest();
    OAICostEstimateRequest(QString json);
    ~OAICostEstimateRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAmount getAmount() const;
    void setAmount(const OAIAmount &amount);
    bool is_amount_Set() const;
    bool is_amount_Valid() const;

    OAICostEstimateAssumptions getAssumptions() const;
    void setAssumptions(const OAICostEstimateAssumptions &assumptions);
    bool is_assumptions_Set() const;
    bool is_assumptions_Valid() const;

    QString getCardNumber() const;
    void setCardNumber(const QString &card_number);
    bool is_card_number_Set() const;
    bool is_card_number_Valid() const;

    QString getEncryptedCardNumber() const;
    void setEncryptedCardNumber(const QString &encrypted_card_number);
    bool is_encrypted_card_number_Set() const;
    bool is_encrypted_card_number_Valid() const;

    QString getMerchantAccount() const;
    void setMerchantAccount(const QString &merchant_account);
    bool is_merchant_account_Set() const;
    bool is_merchant_account_Valid() const;

    OAIMerchantDetails getMerchantDetails() const;
    void setMerchantDetails(const OAIMerchantDetails &merchant_details);
    bool is_merchant_details_Set() const;
    bool is_merchant_details_Valid() const;

    OAIRecurring getRecurring() const;
    void setRecurring(const OAIRecurring &recurring);
    bool is_recurring_Set() const;
    bool is_recurring_Valid() const;

    QString getSelectedRecurringDetailReference() const;
    void setSelectedRecurringDetailReference(const QString &selected_recurring_detail_reference);
    bool is_selected_recurring_detail_reference_Set() const;
    bool is_selected_recurring_detail_reference_Valid() const;

    QString getShopperInteraction() const;
    void setShopperInteraction(const QString &shopper_interaction);
    bool is_shopper_interaction_Set() const;
    bool is_shopper_interaction_Valid() const;

    QString getShopperReference() const;
    void setShopperReference(const QString &shopper_reference);
    bool is_shopper_reference_Set() const;
    bool is_shopper_reference_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAmount m_amount;
    bool m_amount_isSet;
    bool m_amount_isValid;

    OAICostEstimateAssumptions m_assumptions;
    bool m_assumptions_isSet;
    bool m_assumptions_isValid;

    QString m_card_number;
    bool m_card_number_isSet;
    bool m_card_number_isValid;

    QString m_encrypted_card_number;
    bool m_encrypted_card_number_isSet;
    bool m_encrypted_card_number_isValid;

    QString m_merchant_account;
    bool m_merchant_account_isSet;
    bool m_merchant_account_isValid;

    OAIMerchantDetails m_merchant_details;
    bool m_merchant_details_isSet;
    bool m_merchant_details_isValid;

    OAIRecurring m_recurring;
    bool m_recurring_isSet;
    bool m_recurring_isValid;

    QString m_selected_recurring_detail_reference;
    bool m_selected_recurring_detail_reference_isSet;
    bool m_selected_recurring_detail_reference_isValid;

    QString m_shopper_interaction;
    bool m_shopper_interaction_isSet;
    bool m_shopper_interaction_isValid;

    QString m_shopper_reference;
    bool m_shopper_reference_isSet;
    bool m_shopper_reference_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICostEstimateRequest)

#endif // OAICostEstimateRequest_H
