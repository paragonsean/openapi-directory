/**
 * Adyen BinLookup API
 * The BIN Lookup API provides endpoints for retrieving information, such as cost estimates, and 3D Secure supported version based on a given BIN.  ## Authentication You need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.  If using an API key, add an `X-API-Key` header with the API key as the value, for example:   ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ```  Alternatively, you can use the username and password to connect to the API using basic authentication, for example:  ``` curl -U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\ -H \"Content-Type: application/json\" \\ ... ```  ## Versioning The BinLookup API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://pal-test.adyen.com/pal/servlet/BinLookup/v52/get3dsAvailability ```## Going live  To authneticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.  The live endpoint URLs contain a prefix which is unique to your company account: ```  https://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/BinLookup/v52/get3dsAvailability ```  Get your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.
 *
 * The version of the OpenAPI document: 52
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICardBin.h
 *
 * 
 */

#ifndef OAICardBin_H
#define OAICardBin_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICardBin : public OAIObject {
public:
    OAICardBin();
    OAICardBin(QString json);
    ~OAICardBin() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBin() const;
    void setBin(const QString &bin);
    bool is_bin_Set() const;
    bool is_bin_Valid() const;

    bool isCommercial() const;
    void setCommercial(const bool &commercial);
    bool is_commercial_Set() const;
    bool is_commercial_Valid() const;

    QString getFundingSource() const;
    void setFundingSource(const QString &funding_source);
    bool is_funding_source_Set() const;
    bool is_funding_source_Valid() const;

    QString getFundsAvailability() const;
    void setFundsAvailability(const QString &funds_availability);
    bool is_funds_availability_Set() const;
    bool is_funds_availability_Valid() const;

    QString getIssuingBank() const;
    void setIssuingBank(const QString &issuing_bank);
    bool is_issuing_bank_Set() const;
    bool is_issuing_bank_Valid() const;

    QString getIssuingCountry() const;
    void setIssuingCountry(const QString &issuing_country);
    bool is_issuing_country_Set() const;
    bool is_issuing_country_Valid() const;

    QString getIssuingCurrency() const;
    void setIssuingCurrency(const QString &issuing_currency);
    bool is_issuing_currency_Set() const;
    bool is_issuing_currency_Valid() const;

    QString getPaymentMethod() const;
    void setPaymentMethod(const QString &payment_method);
    bool is_payment_method_Set() const;
    bool is_payment_method_Valid() const;

    QString getPayoutEligible() const;
    void setPayoutEligible(const QString &payout_eligible);
    bool is_payout_eligible_Set() const;
    bool is_payout_eligible_Valid() const;

    QString getSummary() const;
    void setSummary(const QString &summary);
    bool is_summary_Set() const;
    bool is_summary_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_bin;
    bool m_bin_isSet;
    bool m_bin_isValid;

    bool m_commercial;
    bool m_commercial_isSet;
    bool m_commercial_isValid;

    QString m_funding_source;
    bool m_funding_source_isSet;
    bool m_funding_source_isValid;

    QString m_funds_availability;
    bool m_funds_availability_isSet;
    bool m_funds_availability_isValid;

    QString m_issuing_bank;
    bool m_issuing_bank_isSet;
    bool m_issuing_bank_isValid;

    QString m_issuing_country;
    bool m_issuing_country_isSet;
    bool m_issuing_country_isValid;

    QString m_issuing_currency;
    bool m_issuing_currency_isSet;
    bool m_issuing_currency_isValid;

    QString m_payment_method;
    bool m_payment_method_isSet;
    bool m_payment_method_isValid;

    QString m_payout_eligible;
    bool m_payout_eligible_isSet;
    bool m_payout_eligible_isValid;

    QString m_summary;
    bool m_summary_isSet;
    bool m_summary_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICardBin)

#endif // OAICardBin_H
