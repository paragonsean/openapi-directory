/**
 * Adyen BinLookup API
 * The BIN Lookup API provides endpoints for retrieving information, such as cost estimates, and 3D Secure supported version based on a given BIN.  ## Authentication You need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.  If using an API key, add an `X-API-Key` header with the API key as the value, for example:   ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ```  Alternatively, you can use the username and password to connect to the API using basic authentication, for example:  ``` curl -U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\ -H \"Content-Type: application/json\" \\ ... ```  ## Versioning The BinLookup API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://pal-test.adyen.com/pal/servlet/BinLookup/v52/get3dsAvailability ```## Going live  To authneticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.  The live endpoint URLs contain a prefix which is unique to your company account: ```  https://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/BinLookup/v52/get3dsAvailability ```  Get your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.
 *
 * The version of the OpenAPI document: 52
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Amount from './Amount';
import CardBin from './CardBin';

/**
 * The CostEstimateResponse model module.
 * @module model/CostEstimateResponse
 * @version 52
 */
class CostEstimateResponse {
    /**
     * Constructs a new <code>CostEstimateResponse</code>.
     * @alias module:model/CostEstimateResponse
     */
    constructor() { 
        
        CostEstimateResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CostEstimateResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CostEstimateResponse} obj Optional instance to populate.
     * @return {module:model/CostEstimateResponse} The populated <code>CostEstimateResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CostEstimateResponse();

            if (data.hasOwnProperty('cardBin')) {
                obj['cardBin'] = CardBin.constructFromObject(data['cardBin']);
            }
            if (data.hasOwnProperty('costEstimateAmount')) {
                obj['costEstimateAmount'] = Amount.constructFromObject(data['costEstimateAmount']);
            }
            if (data.hasOwnProperty('costEstimateReference')) {
                obj['costEstimateReference'] = ApiClient.convertToType(data['costEstimateReference'], 'String');
            }
            if (data.hasOwnProperty('resultCode')) {
                obj['resultCode'] = ApiClient.convertToType(data['resultCode'], 'String');
            }
            if (data.hasOwnProperty('surchargeType')) {
                obj['surchargeType'] = ApiClient.convertToType(data['surchargeType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CostEstimateResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CostEstimateResponse</code>.
     */
    static validateJSON(data) {
        // validate the optional field `cardBin`
        if (data['cardBin']) { // data not null
          CardBin.validateJSON(data['cardBin']);
        }
        // validate the optional field `costEstimateAmount`
        if (data['costEstimateAmount']) { // data not null
          Amount.validateJSON(data['costEstimateAmount']);
        }
        // ensure the json data is a string
        if (data['costEstimateReference'] && !(typeof data['costEstimateReference'] === 'string' || data['costEstimateReference'] instanceof String)) {
            throw new Error("Expected the field `costEstimateReference` to be a primitive type in the JSON string but got " + data['costEstimateReference']);
        }
        // ensure the json data is a string
        if (data['resultCode'] && !(typeof data['resultCode'] === 'string' || data['resultCode'] instanceof String)) {
            throw new Error("Expected the field `resultCode` to be a primitive type in the JSON string but got " + data['resultCode']);
        }
        // ensure the json data is a string
        if (data['surchargeType'] && !(typeof data['surchargeType'] === 'string' || data['surchargeType'] instanceof String)) {
            throw new Error("Expected the field `surchargeType` to be a primitive type in the JSON string but got " + data['surchargeType']);
        }

        return true;
    }


}



/**
 * Card BIN details.
 * @member {module:model/CardBin} cardBin
 */
CostEstimateResponse.prototype['cardBin'] = undefined;

/**
 * The estimated cost (scheme fee + interchange) in the settlement currency. If the settlement currency cannot be determined, the fee in EUR is returned.
 * @member {module:model/Amount} costEstimateAmount
 */
CostEstimateResponse.prototype['costEstimateAmount'] = undefined;

/**
 * Adyen's 16-character reference associated with the request.
 * @member {String} costEstimateReference
 */
CostEstimateResponse.prototype['costEstimateReference'] = undefined;

/**
 * The result of the cost estimation.
 * @member {String} resultCode
 */
CostEstimateResponse.prototype['resultCode'] = undefined;

/**
 * Indicates the way the charges can be passed on to the cardholder. The following values are possible: * `ZERO` - the charges are not allowed to pass on * `PASSTHROUGH` - the charges can be passed on * `UNLIMITED` - there is no limit on how much surcharge is passed on
 * @member {String} surchargeType
 */
CostEstimateResponse.prototype['surchargeType'] = undefined;






export default CostEstimateResponse;

