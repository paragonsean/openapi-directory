# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ThreeDS2CardRangeDetail(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, acs_info_ind: List[str]=None, brand_code: str=None, end_range: str=None, start_range: str=None, three_ds2_versions: List[str]=None, three_ds_method_url: str=None):
        """ThreeDS2CardRangeDetail - a model defined in OpenAPI

        :param acs_info_ind: The acs_info_ind of this ThreeDS2CardRangeDetail.
        :param brand_code: The brand_code of this ThreeDS2CardRangeDetail.
        :param end_range: The end_range of this ThreeDS2CardRangeDetail.
        :param start_range: The start_range of this ThreeDS2CardRangeDetail.
        :param three_ds2_versions: The three_ds2_versions of this ThreeDS2CardRangeDetail.
        :param three_ds_method_url: The three_ds_method_url of this ThreeDS2CardRangeDetail.
        """
        self.openapi_types = {
            'acs_info_ind': List[str],
            'brand_code': str,
            'end_range': str,
            'start_range': str,
            'three_ds2_versions': List[str],
            'three_ds_method_url': str
        }

        self.attribute_map = {
            'acs_info_ind': 'acsInfoInd',
            'brand_code': 'brandCode',
            'end_range': 'endRange',
            'start_range': 'startRange',
            'three_ds2_versions': 'threeDS2Versions',
            'three_ds_method_url': 'threeDSMethodURL'
        }

        self._acs_info_ind = acs_info_ind
        self._brand_code = brand_code
        self._end_range = end_range
        self._start_range = start_range
        self._three_ds2_versions = three_ds2_versions
        self._three_ds_method_url = three_ds_method_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ThreeDS2CardRangeDetail':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ThreeDS2CardRangeDetail of this ThreeDS2CardRangeDetail.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def acs_info_ind(self):
        """Gets the acs_info_ind of this ThreeDS2CardRangeDetail.

        Provides additional information to the 3DS Server. Possible values: - 01 (Authentication is available at ACS) - 02 (Attempts supported by ACS or DS) - 03 (Decoupled authentication supported) - 04 (Whitelisting supported)

        :return: The acs_info_ind of this ThreeDS2CardRangeDetail.
        :rtype: List[str]
        """
        return self._acs_info_ind

    @acs_info_ind.setter
    def acs_info_ind(self, acs_info_ind):
        """Sets the acs_info_ind of this ThreeDS2CardRangeDetail.

        Provides additional information to the 3DS Server. Possible values: - 01 (Authentication is available at ACS) - 02 (Attempts supported by ACS or DS) - 03 (Decoupled authentication supported) - 04 (Whitelisting supported)

        :param acs_info_ind: The acs_info_ind of this ThreeDS2CardRangeDetail.
        :type acs_info_ind: List[str]
        """

        self._acs_info_ind = acs_info_ind

    @property
    def brand_code(self):
        """Gets the brand_code of this ThreeDS2CardRangeDetail.

        Card brand.

        :return: The brand_code of this ThreeDS2CardRangeDetail.
        :rtype: str
        """
        return self._brand_code

    @brand_code.setter
    def brand_code(self, brand_code):
        """Sets the brand_code of this ThreeDS2CardRangeDetail.

        Card brand.

        :param brand_code: The brand_code of this ThreeDS2CardRangeDetail.
        :type brand_code: str
        """

        self._brand_code = brand_code

    @property
    def end_range(self):
        """Gets the end_range of this ThreeDS2CardRangeDetail.

        BIN end range.

        :return: The end_range of this ThreeDS2CardRangeDetail.
        :rtype: str
        """
        return self._end_range

    @end_range.setter
    def end_range(self, end_range):
        """Sets the end_range of this ThreeDS2CardRangeDetail.

        BIN end range.

        :param end_range: The end_range of this ThreeDS2CardRangeDetail.
        :type end_range: str
        """

        self._end_range = end_range

    @property
    def start_range(self):
        """Gets the start_range of this ThreeDS2CardRangeDetail.

        BIN start range.

        :return: The start_range of this ThreeDS2CardRangeDetail.
        :rtype: str
        """
        return self._start_range

    @start_range.setter
    def start_range(self, start_range):
        """Sets the start_range of this ThreeDS2CardRangeDetail.

        BIN start range.

        :param start_range: The start_range of this ThreeDS2CardRangeDetail.
        :type start_range: str
        """

        self._start_range = start_range

    @property
    def three_ds2_versions(self):
        """Gets the three_ds2_versions of this ThreeDS2CardRangeDetail.

        Supported 3D Secure protocol versions

        :return: The three_ds2_versions of this ThreeDS2CardRangeDetail.
        :rtype: List[str]
        """
        return self._three_ds2_versions

    @three_ds2_versions.setter
    def three_ds2_versions(self, three_ds2_versions):
        """Sets the three_ds2_versions of this ThreeDS2CardRangeDetail.

        Supported 3D Secure protocol versions

        :param three_ds2_versions: The three_ds2_versions of this ThreeDS2CardRangeDetail.
        :type three_ds2_versions: List[str]
        """

        self._three_ds2_versions = three_ds2_versions

    @property
    def three_ds_method_url(self):
        """Gets the three_ds_method_url of this ThreeDS2CardRangeDetail.

        In a 3D Secure 2 browser-based flow, this is the URL where you should send the device fingerprint to.

        :return: The three_ds_method_url of this ThreeDS2CardRangeDetail.
        :rtype: str
        """
        return self._three_ds_method_url

    @three_ds_method_url.setter
    def three_ds_method_url(self, three_ds_method_url):
        """Sets the three_ds_method_url of this ThreeDS2CardRangeDetail.

        In a 3D Secure 2 browser-based flow, this is the URL where you should send the device fingerprint to.

        :param three_ds_method_url: The three_ds_method_url of this ThreeDS2CardRangeDetail.
        :type three_ds_method_url: str
        """

        self._three_ds_method_url = three_ds_method_url
