# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AvsAddress(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, street_address: str=None, zip: str=None):
        """AvsAddress - a model defined in OpenAPI

        :param street_address: The street_address of this AvsAddress.
        :param zip: The zip of this AvsAddress.
        """
        self.openapi_types = {
            'street_address': str,
            'zip': str
        }

        self.attribute_map = {
            'street_address': 'streetAddress',
            'zip': 'zip'
        }

        self._street_address = street_address
        self._zip = zip

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AvsAddress':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AvsAddress of this AvsAddress.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def street_address(self):
        """Gets the street_address of this AvsAddress.

        The street and house number of the address.  Example: 1 Infinite Loop, Cupertino.

        :return: The street_address of this AvsAddress.
        :rtype: str
        """
        return self._street_address

    @street_address.setter
    def street_address(self, street_address):
        """Sets the street_address of this AvsAddress.

        The street and house number of the address.  Example: 1 Infinite Loop, Cupertino.

        :param street_address: The street_address of this AvsAddress.
        :type street_address: str
        """
        if street_address is None:
            raise ValueError("Invalid value for `street_address`, must not be `None`")

        self._street_address = street_address

    @property
    def zip(self):
        """Gets the zip of this AvsAddress.

        The zip or post code of the address.  Example: CA 95014

        :return: The zip of this AvsAddress.
        :rtype: str
        """
        return self._zip

    @zip.setter
    def zip(self, zip):
        """Sets the zip of this AvsAddress.

        The zip or post code of the address.  Example: CA 95014

        :param zip: The zip of this AvsAddress.
        :type zip: str
        """

        self._zip = zip
