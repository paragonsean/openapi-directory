openapi: 3.1.0
info:
  contact:
    email: developer-experience@adyen.com
    name: Adyen Developer Experience team
    url: https://www.adyen.help/hc/en-us/community/topics
    x-twitter: Adyen
  description: "The Test Cards API provides endpoints for generating custom test card\
    \ numbers. For more information, refer to [Custom test cards](https://docs.adyen.com/development-resources/testing/create-test-cards)\
    \ documentation."
  termsOfService: https://www.adyen.com/legal/terms-and-conditions
  title: Adyen Test Cards API
  version: "1"
  x-apisguru-categories:
  - payment
  x-logo:
    url: https://twitter.com/Adyen/profile_image?size=original
  x-origin:
  - format: openapi
    url: https://raw.githubusercontent.com/Adyen/adyen-openapi/main/json/TestCardService-v1.json
    version: "3.1"
  x-providerName: adyen.com
  x-publicVersion: true
  x-serviceName: TestCardService
  x-timestamp: 2022-05-03T09:24:07Z
servers:
- url: https://pal-test.adyen.com/pal/services/TestCard/v1
tags:
- name: General
paths:
  /createTestCardRanges:
    post:
      description: Creates one or more test card ranges.
      operationId: post_create_test_card_ranges
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTestCardRangesRequest'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTestCardRangesResult'
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      summary: Creates one or more test card ranges.
      tags:
      - General
      x-groupName: General
      x-sortIndex: 0
      x-openapi-router-controller: openapi_server.controllers.general_controller
      x-codegen-request-body-name: body
components:
  examples: {}
  schemas:
    AvsAddress:
      example:
        zip: zip
        streetAddress: streetAddress
      properties:
        streetAddress:
          description: |-
            The street and house number of the address.

            Example: 1 Infinite Loop, Cupertino.
          title: streetAddress
          type: string
        zip:
          description: |-
            The zip or post code of the address.

            Example: CA 95014
          title: zip
          type: string
      required:
      - streetAddress
      title: AvsAddress
    CreateTestCardRangesRequest:
      example:
        accountCode: accountCode
        accountTypeCode: accountTypeCode
        testCardRanges:
        - cvc: cvc
          address:
            zip: zip
            streetAddress: streetAddress
          rangeStart: rangeStart
          threeDDirectoryServerResponse: "N"
          cardHolderName: cardHolderName
          threeDUsername: threeDUsername
          expiryMonth: APRIL
          threeDPassword: threeDPassword
          expiryYear: 0
          rangeEnd: rangeEnd
        - cvc: cvc
          address:
            zip: zip
            streetAddress: streetAddress
          rangeStart: rangeStart
          threeDDirectoryServerResponse: "N"
          cardHolderName: cardHolderName
          threeDUsername: threeDUsername
          expiryMonth: APRIL
          threeDPassword: threeDPassword
          expiryYear: 0
          rangeEnd: rangeEnd
      properties:
        accountCode:
          description: "The code of the account, for which the test card ranges should\
            \ be created."
          title: accountCode
          type: string
        accountTypeCode:
          description: |-
            The type of the account, for which the test card ranges should be created.

            Permitted values:
            * Company
            * MerchantAccount
            > These values are case-sensitive.
          title: accountTypeCode
          type: string
        testCardRanges:
          description: A list of test card ranges to create.
          items:
            $ref: '#/components/schemas/TestCardRange'
          title: testCardRanges
          type: array
      required:
      - accountCode
      - accountTypeCode
      - testCardRanges
      title: CreateTestCardRangesRequest
    CreateTestCardRangesResult:
      example:
        rangeCreationResults:
        - cardNumberRangeEnd: cardNumberRangeEnd
          cardNumberRangeStart: cardNumberRangeStart
          creationResultCode: ALREADY_EXISTS
          message: message
        - cardNumberRangeEnd: cardNumberRangeEnd
          cardNumberRangeStart: cardNumberRangeStart
          creationResultCode: ALREADY_EXISTS
          message: message
      properties:
        rangeCreationResults:
          description: The results of the test card creation.
          items:
            $ref: '#/components/schemas/TestCardRangeCreationResult'
          title: rangeCreationResults
          type: array
      required:
      - rangeCreationResults
      title: CreateTestCardRangesResult
    ServiceError:
      example:
        errorType: errorType
        errorCode: errorCode
        message: message
        pspReference: pspReference
        status: 0
      properties:
        errorCode:
          description: The error code mapped to the error message.
          title: errorCode
          type: string
        errorType:
          description: The category of the error.
          title: errorType
          type: string
        message:
          description: A short explanation of the issue.
          title: message
          type: string
        pspReference:
          description: The PSP reference of the payment.
          title: pspReference
          type: string
        status:
          description: The HTTP response status.
          format: int32
          title: status
          type: integer
      title: ServiceError
    TestCardRange:
      example:
        cvc: cvc
        address:
          zip: zip
          streetAddress: streetAddress
        rangeStart: rangeStart
        threeDDirectoryServerResponse: "N"
        cardHolderName: cardHolderName
        threeDUsername: threeDUsername
        expiryMonth: APRIL
        threeDPassword: threeDPassword
        expiryYear: 0
        rangeEnd: rangeEnd
      properties:
        address:
          $ref: '#/components/schemas/AvsAddress'
        cardHolderName:
          description: "The name of the card holder, as it appears on the card, for\
            \ the test card range."
          title: cardHolderName
          type: string
        cvc:
          description: |-
            The test card range security code.

            Example: 123
          title: cvc
          type: string
        expiryMonth:
          description: |-
            Expiry month for the test card range.

            Allowed values:
            * JANUARY
            * FEBRUARY
            * MARCH
            * APRIL
            * MAY
            * JUNE
            * JULY
            * AUGUST
            * SEPTEMBER
            * OCTOBER
            * NOVEMBER
            * DECEMBER
          enum:
          - APRIL
          - AUGUST
          - DECEMBER
          - FEBRUARY
          - JANUARY
          - JULY
          - JUNE
          - MARCH
          - MAY
          - NOVEMBER
          - OCTOBER
          - SEPTEMBER
          title: expiryMonth
          type: string
        expiryYear:
          description: |-
            Expiry year for the test card range.

            Example: 2020
          format: int32
          title: expiryYear
          type: integer
        rangeEnd:
          description: |-
            The last test card number in the test card range (inclusive):

            * Min 6, max 19 digits
            * BIN compliant
            Example: 5432 1234 1234 4321
          title: rangeEnd
          type: string
        rangeStart:
          description: |-
            The first test card number in the test card range (inclusive):

            * Min 6, max 19 digits
            * BIN compliant
            Example: 5432 1234 1234 1234
          title: rangeStart
          type: string
        threeDDirectoryServerResponse:
          description: |-
            3D Secure server response. It notifies whether the specified card holder is enrolled in a 3D Secure service. Possible values:

            * Y (Authentication available)
            * N (Card holder not enrolled/not participating)
            * U (Unable to authenticate)
          enum:
          - "N"
          - U
          - "Y"
          title: threeDDirectoryServerResponse
          type: string
        threeDPassword:
          description: The password used for 3D Secure authentication.
          title: threeDPassword
          type: string
        threeDUsername:
          description: The username used for 3D Secure authentication.
          title: threeDUsername
          type: string
      required:
      - cardHolderName
      - expiryMonth
      - expiryYear
      - rangeEnd
      - rangeStart
      title: TestCardRange
    TestCardRangeCreationResult:
      example:
        cardNumberRangeEnd: cardNumberRangeEnd
        cardNumberRangeStart: cardNumberRangeStart
        creationResultCode: ALREADY_EXISTS
        message: message
      properties:
        cardNumberRangeEnd:
          description: |-
            The last test card number in the generated test card range.

            Example: 5432 1234 1234 4321
          title: cardNumberRangeEnd
          type: string
        cardNumberRangeStart:
          description: |-
            The first test card number in the generated test card range.

            Example: 5432 1234 1234 1234
          title: cardNumberRangeStart
          type: string
        creationResultCode:
          description: |-
            Notification message. It informs about the outcome of the operation. Possible values:
            * CREATED
            * ALREADY_EXISTS
            * ERROR
          enum:
          - ALREADY_EXISTS
          - CREATED
          - ERROR
          title: creationResultCode
          type: string
        message:
          description: An optional information message about the result.
          title: message
          type: string
      required:
      - cardNumberRangeEnd
      - cardNumberRangeStart
      - creationResultCode
      title: TestCardRangeCreationResult
  securitySchemes:
    ApiKeyAuth:
      in: header
      name: X-API-Key
      type: apiKey
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_ApiKeyAuth
    BasicAuth:
      scheme: basic
      type: http
      x-basicInfoFunc: openapi_server.controllers.security_controller.info_from_BasicAuth
x-groups:
- General
