/**
 * Adyen Test Cards API
 * The Test Cards API provides endpoints for generating custom test card numbers. For more information, refer to [Custom test cards](https://docs.adyen.com/development-resources/testing/create-test-cards) documentation.
 *
 * The version of the OpenAPI document: 1
 * Contact: developer-experience@adyen.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AvsAddress model module.
 * @module model/AvsAddress
 * @version 1
 */
class AvsAddress {
    /**
     * Constructs a new <code>AvsAddress</code>.
     * @alias module:model/AvsAddress
     * @param streetAddress {String} The street and house number of the address.  Example: 1 Infinite Loop, Cupertino.
     */
    constructor(streetAddress) { 
        
        AvsAddress.initialize(this, streetAddress);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, streetAddress) { 
        obj['streetAddress'] = streetAddress;
    }

    /**
     * Constructs a <code>AvsAddress</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AvsAddress} obj Optional instance to populate.
     * @return {module:model/AvsAddress} The populated <code>AvsAddress</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AvsAddress();

            if (data.hasOwnProperty('streetAddress')) {
                obj['streetAddress'] = ApiClient.convertToType(data['streetAddress'], 'String');
            }
            if (data.hasOwnProperty('zip')) {
                obj['zip'] = ApiClient.convertToType(data['zip'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AvsAddress</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AvsAddress</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AvsAddress.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['streetAddress'] && !(typeof data['streetAddress'] === 'string' || data['streetAddress'] instanceof String)) {
            throw new Error("Expected the field `streetAddress` to be a primitive type in the JSON string but got " + data['streetAddress']);
        }
        // ensure the json data is a string
        if (data['zip'] && !(typeof data['zip'] === 'string' || data['zip'] instanceof String)) {
            throw new Error("Expected the field `zip` to be a primitive type in the JSON string but got " + data['zip']);
        }

        return true;
    }


}

AvsAddress.RequiredProperties = ["streetAddress"];

/**
 * The street and house number of the address.  Example: 1 Infinite Loop, Cupertino.
 * @member {String} streetAddress
 */
AvsAddress.prototype['streetAddress'] = undefined;

/**
 * The zip or post code of the address.  Example: CA 95014
 * @member {String} zip
 */
AvsAddress.prototype['zip'] = undefined;






export default AvsAddress;

