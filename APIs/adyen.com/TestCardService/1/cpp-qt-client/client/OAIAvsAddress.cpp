/**
 * Adyen Test Cards API
 * The Test Cards API provides endpoints for generating custom test card numbers. For more information, refer to [Custom test cards](https://docs.adyen.com/development-resources/testing/create-test-cards) documentation.
 *
 * The version of the OpenAPI document: 1
 * Contact: developer-experience@adyen.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAvsAddress.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAvsAddress::OAIAvsAddress(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAvsAddress::OAIAvsAddress() {
    this->initializeModel();
}

OAIAvsAddress::~OAIAvsAddress() {}

void OAIAvsAddress::initializeModel() {

    m_street_address_isSet = false;
    m_street_address_isValid = false;

    m_zip_isSet = false;
    m_zip_isValid = false;
}

void OAIAvsAddress::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAvsAddress::fromJsonObject(QJsonObject json) {

    m_street_address_isValid = ::OpenAPI::fromJsonValue(m_street_address, json[QString("streetAddress")]);
    m_street_address_isSet = !json[QString("streetAddress")].isNull() && m_street_address_isValid;

    m_zip_isValid = ::OpenAPI::fromJsonValue(m_zip, json[QString("zip")]);
    m_zip_isSet = !json[QString("zip")].isNull() && m_zip_isValid;
}

QString OAIAvsAddress::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAvsAddress::asJsonObject() const {
    QJsonObject obj;
    if (m_street_address_isSet) {
        obj.insert(QString("streetAddress"), ::OpenAPI::toJsonValue(m_street_address));
    }
    if (m_zip_isSet) {
        obj.insert(QString("zip"), ::OpenAPI::toJsonValue(m_zip));
    }
    return obj;
}

QString OAIAvsAddress::getStreetAddress() const {
    return m_street_address;
}
void OAIAvsAddress::setStreetAddress(const QString &street_address) {
    m_street_address = street_address;
    m_street_address_isSet = true;
}

bool OAIAvsAddress::is_street_address_Set() const{
    return m_street_address_isSet;
}

bool OAIAvsAddress::is_street_address_Valid() const{
    return m_street_address_isValid;
}

QString OAIAvsAddress::getZip() const {
    return m_zip;
}
void OAIAvsAddress::setZip(const QString &zip) {
    m_zip = zip;
    m_zip_isSet = true;
}

bool OAIAvsAddress::is_zip_Set() const{
    return m_zip_isSet;
}

bool OAIAvsAddress::is_zip_Valid() const{
    return m_zip_isValid;
}

bool OAIAvsAddress::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_street_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_zip_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAvsAddress::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_street_address_isValid && true;
}

} // namespace OpenAPI
