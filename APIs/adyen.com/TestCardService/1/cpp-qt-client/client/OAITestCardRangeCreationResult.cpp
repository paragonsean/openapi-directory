/**
 * Adyen Test Cards API
 * The Test Cards API provides endpoints for generating custom test card numbers. For more information, refer to [Custom test cards](https://docs.adyen.com/development-resources/testing/create-test-cards) documentation.
 *
 * The version of the OpenAPI document: 1
 * Contact: developer-experience@adyen.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITestCardRangeCreationResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITestCardRangeCreationResult::OAITestCardRangeCreationResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITestCardRangeCreationResult::OAITestCardRangeCreationResult() {
    this->initializeModel();
}

OAITestCardRangeCreationResult::~OAITestCardRangeCreationResult() {}

void OAITestCardRangeCreationResult::initializeModel() {

    m_card_number_range_end_isSet = false;
    m_card_number_range_end_isValid = false;

    m_card_number_range_start_isSet = false;
    m_card_number_range_start_isValid = false;

    m_creation_result_code_isSet = false;
    m_creation_result_code_isValid = false;

    m_message_isSet = false;
    m_message_isValid = false;
}

void OAITestCardRangeCreationResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITestCardRangeCreationResult::fromJsonObject(QJsonObject json) {

    m_card_number_range_end_isValid = ::OpenAPI::fromJsonValue(m_card_number_range_end, json[QString("cardNumberRangeEnd")]);
    m_card_number_range_end_isSet = !json[QString("cardNumberRangeEnd")].isNull() && m_card_number_range_end_isValid;

    m_card_number_range_start_isValid = ::OpenAPI::fromJsonValue(m_card_number_range_start, json[QString("cardNumberRangeStart")]);
    m_card_number_range_start_isSet = !json[QString("cardNumberRangeStart")].isNull() && m_card_number_range_start_isValid;

    m_creation_result_code_isValid = ::OpenAPI::fromJsonValue(m_creation_result_code, json[QString("creationResultCode")]);
    m_creation_result_code_isSet = !json[QString("creationResultCode")].isNull() && m_creation_result_code_isValid;

    m_message_isValid = ::OpenAPI::fromJsonValue(m_message, json[QString("message")]);
    m_message_isSet = !json[QString("message")].isNull() && m_message_isValid;
}

QString OAITestCardRangeCreationResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITestCardRangeCreationResult::asJsonObject() const {
    QJsonObject obj;
    if (m_card_number_range_end_isSet) {
        obj.insert(QString("cardNumberRangeEnd"), ::OpenAPI::toJsonValue(m_card_number_range_end));
    }
    if (m_card_number_range_start_isSet) {
        obj.insert(QString("cardNumberRangeStart"), ::OpenAPI::toJsonValue(m_card_number_range_start));
    }
    if (m_creation_result_code_isSet) {
        obj.insert(QString("creationResultCode"), ::OpenAPI::toJsonValue(m_creation_result_code));
    }
    if (m_message_isSet) {
        obj.insert(QString("message"), ::OpenAPI::toJsonValue(m_message));
    }
    return obj;
}

QString OAITestCardRangeCreationResult::getCardNumberRangeEnd() const {
    return m_card_number_range_end;
}
void OAITestCardRangeCreationResult::setCardNumberRangeEnd(const QString &card_number_range_end) {
    m_card_number_range_end = card_number_range_end;
    m_card_number_range_end_isSet = true;
}

bool OAITestCardRangeCreationResult::is_card_number_range_end_Set() const{
    return m_card_number_range_end_isSet;
}

bool OAITestCardRangeCreationResult::is_card_number_range_end_Valid() const{
    return m_card_number_range_end_isValid;
}

QString OAITestCardRangeCreationResult::getCardNumberRangeStart() const {
    return m_card_number_range_start;
}
void OAITestCardRangeCreationResult::setCardNumberRangeStart(const QString &card_number_range_start) {
    m_card_number_range_start = card_number_range_start;
    m_card_number_range_start_isSet = true;
}

bool OAITestCardRangeCreationResult::is_card_number_range_start_Set() const{
    return m_card_number_range_start_isSet;
}

bool OAITestCardRangeCreationResult::is_card_number_range_start_Valid() const{
    return m_card_number_range_start_isValid;
}

QString OAITestCardRangeCreationResult::getCreationResultCode() const {
    return m_creation_result_code;
}
void OAITestCardRangeCreationResult::setCreationResultCode(const QString &creation_result_code) {
    m_creation_result_code = creation_result_code;
    m_creation_result_code_isSet = true;
}

bool OAITestCardRangeCreationResult::is_creation_result_code_Set() const{
    return m_creation_result_code_isSet;
}

bool OAITestCardRangeCreationResult::is_creation_result_code_Valid() const{
    return m_creation_result_code_isValid;
}

QString OAITestCardRangeCreationResult::getMessage() const {
    return m_message;
}
void OAITestCardRangeCreationResult::setMessage(const QString &message) {
    m_message = message;
    m_message_isSet = true;
}

bool OAITestCardRangeCreationResult::is_message_Set() const{
    return m_message_isSet;
}

bool OAITestCardRangeCreationResult::is_message_Valid() const{
    return m_message_isValid;
}

bool OAITestCardRangeCreationResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_card_number_range_end_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_card_number_range_start_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_creation_result_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_message_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITestCardRangeCreationResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_card_number_range_end_isValid && m_card_number_range_start_isValid && m_creation_result_code_isValid && true;
}

} // namespace OpenAPI
