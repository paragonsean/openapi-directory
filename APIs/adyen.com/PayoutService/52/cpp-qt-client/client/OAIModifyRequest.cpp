/**
 * Adyen Payout API
 * A set of API endpoints that allow you to store payout details, confirm, or decline a payout.  For more information, refer to [Online payouts](https://docs.adyen.com/online-payments/online-payouts). ## Authentication To use the Payout API, you need to have [two API credentials](https://docs.adyen.com/online-payments/online-payouts#payouts-to-bank-accounts-and-wallets): one for storing payout details and submitting payouts, and another one for confirming or declining payouts. If you don't have the required API credentials, contact our [Support Team](https://www.adyen.help/hc/en-us/requests/new).  If using an API key, add an `X-API-Key` header with the API key as the value, for example:   ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ```  Alternatively, you can use the username and password to connect to the API using [basic authentication](https://docs.adyen.com/development-resources/api-credentials#basic-authentication).  The following example shows how to authenticate your request with basic authentication when submitting a payout:  ``` curl -U \"storePayout@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\ -H \"Content-Type: application/json\" \\ ... ```  ## Versioning Payments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://pal-test.adyen.com/pal/servlet/Payout/v52/payout ```  ## Going live  To authenticate to the live endpoints, you need [API credentials](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.  The live endpoint URLs contain a prefix which is unique to your company account: ```  https://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payout/v52/payout ```  Get your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.
 *
 * The version of the OpenAPI document: 52
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIModifyRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIModifyRequest::OAIModifyRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIModifyRequest::OAIModifyRequest() {
    this->initializeModel();
}

OAIModifyRequest::~OAIModifyRequest() {}

void OAIModifyRequest::initializeModel() {

    m_additional_data_isSet = false;
    m_additional_data_isValid = false;

    m_merchant_account_isSet = false;
    m_merchant_account_isValid = false;

    m_original_reference_isSet = false;
    m_original_reference_isValid = false;
}

void OAIModifyRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIModifyRequest::fromJsonObject(QJsonObject json) {

    m_additional_data_isValid = ::OpenAPI::fromJsonValue(m_additional_data, json[QString("additionalData")]);
    m_additional_data_isSet = !json[QString("additionalData")].isNull() && m_additional_data_isValid;

    m_merchant_account_isValid = ::OpenAPI::fromJsonValue(m_merchant_account, json[QString("merchantAccount")]);
    m_merchant_account_isSet = !json[QString("merchantAccount")].isNull() && m_merchant_account_isValid;

    m_original_reference_isValid = ::OpenAPI::fromJsonValue(m_original_reference, json[QString("originalReference")]);
    m_original_reference_isSet = !json[QString("originalReference")].isNull() && m_original_reference_isValid;
}

QString OAIModifyRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIModifyRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_additional_data.size() > 0) {
        obj.insert(QString("additionalData"), ::OpenAPI::toJsonValue(m_additional_data));
    }
    if (m_merchant_account_isSet) {
        obj.insert(QString("merchantAccount"), ::OpenAPI::toJsonValue(m_merchant_account));
    }
    if (m_original_reference_isSet) {
        obj.insert(QString("originalReference"), ::OpenAPI::toJsonValue(m_original_reference));
    }
    return obj;
}

QMap<QString, QString> OAIModifyRequest::getAdditionalData() const {
    return m_additional_data;
}
void OAIModifyRequest::setAdditionalData(const QMap<QString, QString> &additional_data) {
    m_additional_data = additional_data;
    m_additional_data_isSet = true;
}

bool OAIModifyRequest::is_additional_data_Set() const{
    return m_additional_data_isSet;
}

bool OAIModifyRequest::is_additional_data_Valid() const{
    return m_additional_data_isValid;
}

QString OAIModifyRequest::getMerchantAccount() const {
    return m_merchant_account;
}
void OAIModifyRequest::setMerchantAccount(const QString &merchant_account) {
    m_merchant_account = merchant_account;
    m_merchant_account_isSet = true;
}

bool OAIModifyRequest::is_merchant_account_Set() const{
    return m_merchant_account_isSet;
}

bool OAIModifyRequest::is_merchant_account_Valid() const{
    return m_merchant_account_isValid;
}

QString OAIModifyRequest::getOriginalReference() const {
    return m_original_reference;
}
void OAIModifyRequest::setOriginalReference(const QString &original_reference) {
    m_original_reference = original_reference;
    m_original_reference_isSet = true;
}

bool OAIModifyRequest::is_original_reference_Set() const{
    return m_original_reference_isSet;
}

bool OAIModifyRequest::is_original_reference_Valid() const{
    return m_original_reference_isValid;
}

bool OAIModifyRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_additional_data.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_merchant_account_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_original_reference_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIModifyRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_merchant_account_isValid && m_original_reference_isValid && true;
}

} // namespace OpenAPI
