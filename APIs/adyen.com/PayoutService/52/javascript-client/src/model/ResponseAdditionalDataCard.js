/**
 * Adyen Payout API
 * A set of API endpoints that allow you to store payout details, confirm, or decline a payout.  For more information, refer to [Online payouts](https://docs.adyen.com/online-payments/online-payouts). ## Authentication To use the Payout API, you need to have [two API credentials](https://docs.adyen.com/online-payments/online-payouts#payouts-to-bank-accounts-and-wallets): one for storing payout details and submitting payouts, and another one for confirming or declining payouts. If you don't have the required API credentials, contact our [Support Team](https://www.adyen.help/hc/en-us/requests/new).  If using an API key, add an `X-API-Key` header with the API key as the value, for example:   ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ```  Alternatively, you can use the username and password to connect to the API using [basic authentication](https://docs.adyen.com/development-resources/api-credentials#basic-authentication).  The following example shows how to authenticate your request with basic authentication when submitting a payout:  ``` curl -U \"storePayout@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\ -H \"Content-Type: application/json\" \\ ... ```  ## Versioning Payments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://pal-test.adyen.com/pal/servlet/Payout/v52/payout ```  ## Going live  To authenticate to the live endpoints, you need [API credentials](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.  The live endpoint URLs contain a prefix which is unique to your company account: ```  https://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payout/v52/payout ```  Get your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.
 *
 * The version of the OpenAPI document: 52
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ResponseAdditionalDataCard model module.
 * @module model/ResponseAdditionalDataCard
 * @version 52
 */
class ResponseAdditionalDataCard {
    /**
     * Constructs a new <code>ResponseAdditionalDataCard</code>.
     * @alias module:model/ResponseAdditionalDataCard
     */
    constructor() { 
        
        ResponseAdditionalDataCard.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ResponseAdditionalDataCard</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ResponseAdditionalDataCard} obj Optional instance to populate.
     * @return {module:model/ResponseAdditionalDataCard} The populated <code>ResponseAdditionalDataCard</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ResponseAdditionalDataCard();

            if (data.hasOwnProperty('cardBin')) {
                obj['cardBin'] = ApiClient.convertToType(data['cardBin'], 'String');
            }
            if (data.hasOwnProperty('cardHolderName')) {
                obj['cardHolderName'] = ApiClient.convertToType(data['cardHolderName'], 'String');
            }
            if (data.hasOwnProperty('cardIssuingBank')) {
                obj['cardIssuingBank'] = ApiClient.convertToType(data['cardIssuingBank'], 'String');
            }
            if (data.hasOwnProperty('cardIssuingCountry')) {
                obj['cardIssuingCountry'] = ApiClient.convertToType(data['cardIssuingCountry'], 'String');
            }
            if (data.hasOwnProperty('cardIssuingCurrency')) {
                obj['cardIssuingCurrency'] = ApiClient.convertToType(data['cardIssuingCurrency'], 'String');
            }
            if (data.hasOwnProperty('cardPaymentMethod')) {
                obj['cardPaymentMethod'] = ApiClient.convertToType(data['cardPaymentMethod'], 'String');
            }
            if (data.hasOwnProperty('cardSummary')) {
                obj['cardSummary'] = ApiClient.convertToType(data['cardSummary'], 'String');
            }
            if (data.hasOwnProperty('issuerBin')) {
                obj['issuerBin'] = ApiClient.convertToType(data['issuerBin'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ResponseAdditionalDataCard</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ResponseAdditionalDataCard</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['cardBin'] && !(typeof data['cardBin'] === 'string' || data['cardBin'] instanceof String)) {
            throw new Error("Expected the field `cardBin` to be a primitive type in the JSON string but got " + data['cardBin']);
        }
        // ensure the json data is a string
        if (data['cardHolderName'] && !(typeof data['cardHolderName'] === 'string' || data['cardHolderName'] instanceof String)) {
            throw new Error("Expected the field `cardHolderName` to be a primitive type in the JSON string but got " + data['cardHolderName']);
        }
        // ensure the json data is a string
        if (data['cardIssuingBank'] && !(typeof data['cardIssuingBank'] === 'string' || data['cardIssuingBank'] instanceof String)) {
            throw new Error("Expected the field `cardIssuingBank` to be a primitive type in the JSON string but got " + data['cardIssuingBank']);
        }
        // ensure the json data is a string
        if (data['cardIssuingCountry'] && !(typeof data['cardIssuingCountry'] === 'string' || data['cardIssuingCountry'] instanceof String)) {
            throw new Error("Expected the field `cardIssuingCountry` to be a primitive type in the JSON string but got " + data['cardIssuingCountry']);
        }
        // ensure the json data is a string
        if (data['cardIssuingCurrency'] && !(typeof data['cardIssuingCurrency'] === 'string' || data['cardIssuingCurrency'] instanceof String)) {
            throw new Error("Expected the field `cardIssuingCurrency` to be a primitive type in the JSON string but got " + data['cardIssuingCurrency']);
        }
        // ensure the json data is a string
        if (data['cardPaymentMethod'] && !(typeof data['cardPaymentMethod'] === 'string' || data['cardPaymentMethod'] instanceof String)) {
            throw new Error("Expected the field `cardPaymentMethod` to be a primitive type in the JSON string but got " + data['cardPaymentMethod']);
        }
        // ensure the json data is a string
        if (data['cardSummary'] && !(typeof data['cardSummary'] === 'string' || data['cardSummary'] instanceof String)) {
            throw new Error("Expected the field `cardSummary` to be a primitive type in the JSON string but got " + data['cardSummary']);
        }
        // ensure the json data is a string
        if (data['issuerBin'] && !(typeof data['issuerBin'] === 'string' || data['issuerBin'] instanceof String)) {
            throw new Error("Expected the field `issuerBin` to be a primitive type in the JSON string but got " + data['issuerBin']);
        }

        return true;
    }


}



/**
 * The first six digits of the card number.  This is the [Bank Identification Number (BIN)](https://docs.adyen.com/get-started-with-adyen/payment-glossary#bank-identification-number-bin) for card numbers with a six-digit BIN.  Example: 521234
 * @member {String} cardBin
 */
ResponseAdditionalDataCard.prototype['cardBin'] = undefined;

/**
 * The cardholder name passed in the payment request.
 * @member {String} cardHolderName
 */
ResponseAdditionalDataCard.prototype['cardHolderName'] = undefined;

/**
 * The bank or the financial institution granting lines of credit through card association branded payment cards. This information can be included when available.
 * @member {String} cardIssuingBank
 */
ResponseAdditionalDataCard.prototype['cardIssuingBank'] = undefined;

/**
 * The country where the card was issued.  Example: US
 * @member {String} cardIssuingCountry
 */
ResponseAdditionalDataCard.prototype['cardIssuingCountry'] = undefined;

/**
 * The currency in which the card is issued, if this information is available. Provided as the currency code or currency number from the ISO-4217 standard.   Example: USD
 * @member {String} cardIssuingCurrency
 */
ResponseAdditionalDataCard.prototype['cardIssuingCurrency'] = undefined;

/**
 * The card payment method used for the transaction.  Example: amex
 * @member {String} cardPaymentMethod
 */
ResponseAdditionalDataCard.prototype['cardPaymentMethod'] = undefined;

/**
 * The last four digits of a card number.  > Returned only in case of a card payment.
 * @member {String} cardSummary
 */
ResponseAdditionalDataCard.prototype['cardSummary'] = undefined;

/**
 * The first eight digits of the card number. Only returned if the card number is 16 digits or more.  This is the [Bank Identification Number (BIN)](https://docs.adyen.com/get-started-with-adyen/payment-glossary#bank-identification-number-bin) for card numbers with an eight-digit BIN.  Example: 52123423
 * @member {String} issuerBin
 */
ResponseAdditionalDataCard.prototype['issuerBin'] = undefined;






export default ResponseAdditionalDataCard;

