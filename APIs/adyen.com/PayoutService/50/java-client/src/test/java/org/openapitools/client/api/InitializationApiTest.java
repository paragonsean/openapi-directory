/*
 * Adyen Payout API
 * A set of API endpoints that allow you to store payout details, confirm, or decline a payout.  For more information, refer to [Online payouts](https://docs.adyen.com/online-payments/online-payouts). ## Authentication To use the Payout API, you need to have [two API credentials](https://docs.adyen.com/online-payments/online-payouts#payouts-to-bank-accounts-and-wallets): one for storing payout details and submitting payouts, and another one for confirming or declining payouts. If you don't have the required API credentials, contact our [Support Team](https://www.adyen.help/hc/en-us/requests/new).  If using an API key, add an `X-API-Key` header with the API key as the value, for example:   ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ```  Alternatively, you can use the username and password to connect to the API using [basic authentication](https://docs.adyen.com/development-resources/api-credentials#basic-authentication).  The following example shows how to authenticate your request with basic authentication when submitting a payout:  ``` curl -U \"storePayout@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\ -H \"Content-Type: application/json\" \\ ... ```  ## Versioning Payments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://pal-test.adyen.com/pal/servlet/Payout/v50/payout ```  ## Going live  To authenticate to the live endpoints, you need [API credentials](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.  The live endpoint URLs contain a prefix which is unique to your company account: ```  https://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payout/v50/payout ```  Get your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.
 *
 * The version of the OpenAPI document: 50
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ServiceError;
import org.openapitools.client.model.StoreDetailAndSubmitRequest;
import org.openapitools.client.model.StoreDetailAndSubmitResponse;
import org.openapitools.client.model.StoreDetailRequest;
import org.openapitools.client.model.StoreDetailResponse;
import org.openapitools.client.model.SubmitRequest;
import org.openapitools.client.model.SubmitResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for InitializationApi
 */
@Disabled
public class InitializationApiTest {

    private final InitializationApi api = new InitializationApi();

    /**
     * Store payout details
     *
     * Stores payment details under the &#x60;PAYOUT&#x60; recurring contract. These payment details can be used later to submit a payout via the &#x60;/submitThirdParty&#x60; call.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postStoreDetailTest() throws ApiException {
        StoreDetailRequest storeDetailRequest = null;
        StoreDetailResponse response = api.postStoreDetail(storeDetailRequest);
        // TODO: test validations
    }

    /**
     * Store details and submit a payout
     *
     * Submits a payout and stores its details for subsequent payouts.  The submitted payout must be confirmed or declined either by a reviewer or via &#x60;/confirmThirdParty&#x60; or &#x60;/declineThirdParty&#x60; calls.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postStoreDetailAndSubmitThirdPartyTest() throws ApiException {
        StoreDetailAndSubmitRequest storeDetailAndSubmitRequest = null;
        StoreDetailAndSubmitResponse response = api.postStoreDetailAndSubmitThirdParty(storeDetailAndSubmitRequest);
        // TODO: test validations
    }

    /**
     * Submit a payout
     *
     * Submits a payout using the previously stored payment details. To store payment details, use the &#x60;/storeDetail&#x60; API call.  The submitted payout must be confirmed or declined either by a reviewer or via &#x60;/confirmThirdParty&#x60; or &#x60;/declineThirdParty&#x60; calls.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postSubmitThirdPartyTest() throws ApiException {
        SubmitRequest submitRequest = null;
        SubmitResponse response = api.postSubmitThirdParty(submitRequest);
        // TODO: test validations
    }

}
