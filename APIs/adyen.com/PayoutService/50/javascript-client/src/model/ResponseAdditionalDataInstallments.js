/**
 * Adyen Payout API
 * A set of API endpoints that allow you to store payout details, confirm, or decline a payout.  For more information, refer to [Online payouts](https://docs.adyen.com/online-payments/online-payouts). ## Authentication To use the Payout API, you need to have [two API credentials](https://docs.adyen.com/online-payments/online-payouts#payouts-to-bank-accounts-and-wallets): one for storing payout details and submitting payouts, and another one for confirming or declining payouts. If you don't have the required API credentials, contact our [Support Team](https://www.adyen.help/hc/en-us/requests/new).  If using an API key, add an `X-API-Key` header with the API key as the value, for example:   ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ```  Alternatively, you can use the username and password to connect to the API using [basic authentication](https://docs.adyen.com/development-resources/api-credentials#basic-authentication).  The following example shows how to authenticate your request with basic authentication when submitting a payout:  ``` curl -U \"storePayout@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\ -H \"Content-Type: application/json\" \\ ... ```  ## Versioning Payments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://pal-test.adyen.com/pal/servlet/Payout/v50/payout ```  ## Going live  To authenticate to the live endpoints, you need [API credentials](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.  The live endpoint URLs contain a prefix which is unique to your company account: ```  https://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payout/v50/payout ```  Get your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.
 *
 * The version of the OpenAPI document: 50
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ResponseAdditionalDataInstallments model module.
 * @module model/ResponseAdditionalDataInstallments
 * @version 50
 */
class ResponseAdditionalDataInstallments {
    /**
     * Constructs a new <code>ResponseAdditionalDataInstallments</code>.
     * @alias module:model/ResponseAdditionalDataInstallments
     */
    constructor() { 
        
        ResponseAdditionalDataInstallments.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ResponseAdditionalDataInstallments</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ResponseAdditionalDataInstallments} obj Optional instance to populate.
     * @return {module:model/ResponseAdditionalDataInstallments} The populated <code>ResponseAdditionalDataInstallments</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ResponseAdditionalDataInstallments();

            if (data.hasOwnProperty('installmentPaymentData.installmentType')) {
                obj['installmentPaymentData.installmentType'] = ApiClient.convertToType(data['installmentPaymentData.installmentType'], 'String');
            }
            if (data.hasOwnProperty('installmentPaymentData.option[itemNr].annualPercentageRate')) {
                obj['installmentPaymentData.option[itemNr].annualPercentageRate'] = ApiClient.convertToType(data['installmentPaymentData.option[itemNr].annualPercentageRate'], 'String');
            }
            if (data.hasOwnProperty('installmentPaymentData.option[itemNr].firstInstallmentAmount')) {
                obj['installmentPaymentData.option[itemNr].firstInstallmentAmount'] = ApiClient.convertToType(data['installmentPaymentData.option[itemNr].firstInstallmentAmount'], 'String');
            }
            if (data.hasOwnProperty('installmentPaymentData.option[itemNr].installmentFee')) {
                obj['installmentPaymentData.option[itemNr].installmentFee'] = ApiClient.convertToType(data['installmentPaymentData.option[itemNr].installmentFee'], 'String');
            }
            if (data.hasOwnProperty('installmentPaymentData.option[itemNr].interestRate')) {
                obj['installmentPaymentData.option[itemNr].interestRate'] = ApiClient.convertToType(data['installmentPaymentData.option[itemNr].interestRate'], 'String');
            }
            if (data.hasOwnProperty('installmentPaymentData.option[itemNr].maximumNumberOfInstallments')) {
                obj['installmentPaymentData.option[itemNr].maximumNumberOfInstallments'] = ApiClient.convertToType(data['installmentPaymentData.option[itemNr].maximumNumberOfInstallments'], 'String');
            }
            if (data.hasOwnProperty('installmentPaymentData.option[itemNr].minimumNumberOfInstallments')) {
                obj['installmentPaymentData.option[itemNr].minimumNumberOfInstallments'] = ApiClient.convertToType(data['installmentPaymentData.option[itemNr].minimumNumberOfInstallments'], 'String');
            }
            if (data.hasOwnProperty('installmentPaymentData.option[itemNr].numberOfInstallments')) {
                obj['installmentPaymentData.option[itemNr].numberOfInstallments'] = ApiClient.convertToType(data['installmentPaymentData.option[itemNr].numberOfInstallments'], 'String');
            }
            if (data.hasOwnProperty('installmentPaymentData.option[itemNr].subsequentInstallmentAmount')) {
                obj['installmentPaymentData.option[itemNr].subsequentInstallmentAmount'] = ApiClient.convertToType(data['installmentPaymentData.option[itemNr].subsequentInstallmentAmount'], 'String');
            }
            if (data.hasOwnProperty('installmentPaymentData.option[itemNr].totalAmountDue')) {
                obj['installmentPaymentData.option[itemNr].totalAmountDue'] = ApiClient.convertToType(data['installmentPaymentData.option[itemNr].totalAmountDue'], 'String');
            }
            if (data.hasOwnProperty('installmentPaymentData.paymentOptions')) {
                obj['installmentPaymentData.paymentOptions'] = ApiClient.convertToType(data['installmentPaymentData.paymentOptions'], 'String');
            }
            if (data.hasOwnProperty('installments.value')) {
                obj['installments.value'] = ApiClient.convertToType(data['installments.value'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ResponseAdditionalDataInstallments</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ResponseAdditionalDataInstallments</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['installmentPaymentData.installmentType'] && !(typeof data['installmentPaymentData.installmentType'] === 'string' || data['installmentPaymentData.installmentType'] instanceof String)) {
            throw new Error("Expected the field `installmentPaymentData.installmentType` to be a primitive type in the JSON string but got " + data['installmentPaymentData.installmentType']);
        }
        // ensure the json data is a string
        if (data['installmentPaymentData.option[itemNr].annualPercentageRate'] && !(typeof data['installmentPaymentData.option[itemNr].annualPercentageRate'] === 'string' || data['installmentPaymentData.option[itemNr].annualPercentageRate'] instanceof String)) {
            throw new Error("Expected the field `installmentPaymentData.option[itemNr].annualPercentageRate` to be a primitive type in the JSON string but got " + data['installmentPaymentData.option[itemNr].annualPercentageRate']);
        }
        // ensure the json data is a string
        if (data['installmentPaymentData.option[itemNr].firstInstallmentAmount'] && !(typeof data['installmentPaymentData.option[itemNr].firstInstallmentAmount'] === 'string' || data['installmentPaymentData.option[itemNr].firstInstallmentAmount'] instanceof String)) {
            throw new Error("Expected the field `installmentPaymentData.option[itemNr].firstInstallmentAmount` to be a primitive type in the JSON string but got " + data['installmentPaymentData.option[itemNr].firstInstallmentAmount']);
        }
        // ensure the json data is a string
        if (data['installmentPaymentData.option[itemNr].installmentFee'] && !(typeof data['installmentPaymentData.option[itemNr].installmentFee'] === 'string' || data['installmentPaymentData.option[itemNr].installmentFee'] instanceof String)) {
            throw new Error("Expected the field `installmentPaymentData.option[itemNr].installmentFee` to be a primitive type in the JSON string but got " + data['installmentPaymentData.option[itemNr].installmentFee']);
        }
        // ensure the json data is a string
        if (data['installmentPaymentData.option[itemNr].interestRate'] && !(typeof data['installmentPaymentData.option[itemNr].interestRate'] === 'string' || data['installmentPaymentData.option[itemNr].interestRate'] instanceof String)) {
            throw new Error("Expected the field `installmentPaymentData.option[itemNr].interestRate` to be a primitive type in the JSON string but got " + data['installmentPaymentData.option[itemNr].interestRate']);
        }
        // ensure the json data is a string
        if (data['installmentPaymentData.option[itemNr].maximumNumberOfInstallments'] && !(typeof data['installmentPaymentData.option[itemNr].maximumNumberOfInstallments'] === 'string' || data['installmentPaymentData.option[itemNr].maximumNumberOfInstallments'] instanceof String)) {
            throw new Error("Expected the field `installmentPaymentData.option[itemNr].maximumNumberOfInstallments` to be a primitive type in the JSON string but got " + data['installmentPaymentData.option[itemNr].maximumNumberOfInstallments']);
        }
        // ensure the json data is a string
        if (data['installmentPaymentData.option[itemNr].minimumNumberOfInstallments'] && !(typeof data['installmentPaymentData.option[itemNr].minimumNumberOfInstallments'] === 'string' || data['installmentPaymentData.option[itemNr].minimumNumberOfInstallments'] instanceof String)) {
            throw new Error("Expected the field `installmentPaymentData.option[itemNr].minimumNumberOfInstallments` to be a primitive type in the JSON string but got " + data['installmentPaymentData.option[itemNr].minimumNumberOfInstallments']);
        }
        // ensure the json data is a string
        if (data['installmentPaymentData.option[itemNr].numberOfInstallments'] && !(typeof data['installmentPaymentData.option[itemNr].numberOfInstallments'] === 'string' || data['installmentPaymentData.option[itemNr].numberOfInstallments'] instanceof String)) {
            throw new Error("Expected the field `installmentPaymentData.option[itemNr].numberOfInstallments` to be a primitive type in the JSON string but got " + data['installmentPaymentData.option[itemNr].numberOfInstallments']);
        }
        // ensure the json data is a string
        if (data['installmentPaymentData.option[itemNr].subsequentInstallmentAmount'] && !(typeof data['installmentPaymentData.option[itemNr].subsequentInstallmentAmount'] === 'string' || data['installmentPaymentData.option[itemNr].subsequentInstallmentAmount'] instanceof String)) {
            throw new Error("Expected the field `installmentPaymentData.option[itemNr].subsequentInstallmentAmount` to be a primitive type in the JSON string but got " + data['installmentPaymentData.option[itemNr].subsequentInstallmentAmount']);
        }
        // ensure the json data is a string
        if (data['installmentPaymentData.option[itemNr].totalAmountDue'] && !(typeof data['installmentPaymentData.option[itemNr].totalAmountDue'] === 'string' || data['installmentPaymentData.option[itemNr].totalAmountDue'] instanceof String)) {
            throw new Error("Expected the field `installmentPaymentData.option[itemNr].totalAmountDue` to be a primitive type in the JSON string but got " + data['installmentPaymentData.option[itemNr].totalAmountDue']);
        }
        // ensure the json data is a string
        if (data['installmentPaymentData.paymentOptions'] && !(typeof data['installmentPaymentData.paymentOptions'] === 'string' || data['installmentPaymentData.paymentOptions'] instanceof String)) {
            throw new Error("Expected the field `installmentPaymentData.paymentOptions` to be a primitive type in the JSON string but got " + data['installmentPaymentData.paymentOptions']);
        }
        // ensure the json data is a string
        if (data['installments.value'] && !(typeof data['installments.value'] === 'string' || data['installments.value'] instanceof String)) {
            throw new Error("Expected the field `installments.value` to be a primitive type in the JSON string but got " + data['installments.value']);
        }

        return true;
    }


}



/**
 * Type of installment. The value of `installmentType` should be **IssuerFinanced**.
 * @member {String} installmentPaymentData.installmentType
 */
ResponseAdditionalDataInstallments.prototype['installmentPaymentData.installmentType'] = undefined;

/**
 * Annual interest rate.
 * @member {String} installmentPaymentData.option[itemNr].annualPercentageRate
 */
ResponseAdditionalDataInstallments.prototype['installmentPaymentData.option[itemNr].annualPercentageRate'] = undefined;

/**
 * First Installment Amount in minor units.
 * @member {String} installmentPaymentData.option[itemNr].firstInstallmentAmount
 */
ResponseAdditionalDataInstallments.prototype['installmentPaymentData.option[itemNr].firstInstallmentAmount'] = undefined;

/**
 * Installment fee amount in minor units.
 * @member {String} installmentPaymentData.option[itemNr].installmentFee
 */
ResponseAdditionalDataInstallments.prototype['installmentPaymentData.option[itemNr].installmentFee'] = undefined;

/**
 * Interest rate for the installment period.
 * @member {String} installmentPaymentData.option[itemNr].interestRate
 */
ResponseAdditionalDataInstallments.prototype['installmentPaymentData.option[itemNr].interestRate'] = undefined;

/**
 * Maximum number of installments possible for this payment.
 * @member {String} installmentPaymentData.option[itemNr].maximumNumberOfInstallments
 */
ResponseAdditionalDataInstallments.prototype['installmentPaymentData.option[itemNr].maximumNumberOfInstallments'] = undefined;

/**
 * Minimum number of installments possible for this payment.
 * @member {String} installmentPaymentData.option[itemNr].minimumNumberOfInstallments
 */
ResponseAdditionalDataInstallments.prototype['installmentPaymentData.option[itemNr].minimumNumberOfInstallments'] = undefined;

/**
 * Total number of installments possible for this payment.
 * @member {String} installmentPaymentData.option[itemNr].numberOfInstallments
 */
ResponseAdditionalDataInstallments.prototype['installmentPaymentData.option[itemNr].numberOfInstallments'] = undefined;

/**
 * Subsequent Installment Amount in minor units.
 * @member {String} installmentPaymentData.option[itemNr].subsequentInstallmentAmount
 */
ResponseAdditionalDataInstallments.prototype['installmentPaymentData.option[itemNr].subsequentInstallmentAmount'] = undefined;

/**
 * Total amount in minor units.
 * @member {String} installmentPaymentData.option[itemNr].totalAmountDue
 */
ResponseAdditionalDataInstallments.prototype['installmentPaymentData.option[itemNr].totalAmountDue'] = undefined;

/**
 * Possible values: * PayInInstallmentsOnly * PayInFullOnly * PayInFullOrInstallments
 * @member {String} installmentPaymentData.paymentOptions
 */
ResponseAdditionalDataInstallments.prototype['installmentPaymentData.paymentOptions'] = undefined;

/**
 * The number of installments that the payment amount should be charged with.  Example: 5 > Only relevant for card payments in countries that support installments.
 * @member {String} installments.value
 */
ResponseAdditionalDataInstallments.prototype['installments.value'] = undefined;






export default ResponseAdditionalDataInstallments;

