/**
 * Adyen Payout API
 * A set of API endpoints that allow you to store payout details, confirm, or decline a payout.  For more information, refer to [Online payouts](https://docs.adyen.com/online-payments/online-payouts). ## Authentication To use the Payout API, you need to have [two API credentials](https://docs.adyen.com/online-payments/online-payouts#payouts-to-bank-accounts-and-wallets): one for storing payout details and submitting payouts, and another one for confirming or declining payouts. If you don't have the required API credentials, contact our [Support Team](https://www.adyen.help/hc/en-us/requests/new).  If using an API key, add an `X-API-Key` header with the API key as the value, for example:   ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ```  Alternatively, you can use the username and password to connect to the API using [basic authentication](https://docs.adyen.com/development-resources/api-credentials#basic-authentication).  The following example shows how to authenticate your request with basic authentication when submitting a payout:  ``` curl -U \"storePayout@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\ -H \"Content-Type: application/json\" \\ ... ```  ## Versioning Payments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://pal-test.adyen.com/pal/servlet/Payout/v30/payout ```  ## Going live  To authenticate to the live endpoints, you need [API credentials](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.  The live endpoint URLs contain a prefix which is unique to your company account: ```  https://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payout/v30/payout ```  Get your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.
 *
 * The version of the OpenAPI document: 30
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIResponseAdditionalDataInstallments.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIResponseAdditionalDataInstallments::OAIResponseAdditionalDataInstallments(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIResponseAdditionalDataInstallments::OAIResponseAdditionalDataInstallments() {
    this->initializeModel();
}

OAIResponseAdditionalDataInstallments::~OAIResponseAdditionalDataInstallments() {}

void OAIResponseAdditionalDataInstallments::initializeModel() {

    m_installment_payment_data_installment_type_isSet = false;
    m_installment_payment_data_installment_type_isValid = false;

    m_installment_payment_data_option_item_nr_annual_percentage_rate_isSet = false;
    m_installment_payment_data_option_item_nr_annual_percentage_rate_isValid = false;

    m_installment_payment_data_option_item_nr_first_installment_amount_isSet = false;
    m_installment_payment_data_option_item_nr_first_installment_amount_isValid = false;

    m_installment_payment_data_option_item_nr_installment_fee_isSet = false;
    m_installment_payment_data_option_item_nr_installment_fee_isValid = false;

    m_installment_payment_data_option_item_nr_interest_rate_isSet = false;
    m_installment_payment_data_option_item_nr_interest_rate_isValid = false;

    m_installment_payment_data_option_item_nr_maximum_number_of_installments_isSet = false;
    m_installment_payment_data_option_item_nr_maximum_number_of_installments_isValid = false;

    m_installment_payment_data_option_item_nr_minimum_number_of_installments_isSet = false;
    m_installment_payment_data_option_item_nr_minimum_number_of_installments_isValid = false;

    m_installment_payment_data_option_item_nr_number_of_installments_isSet = false;
    m_installment_payment_data_option_item_nr_number_of_installments_isValid = false;

    m_installment_payment_data_option_item_nr_subsequent_installment_amount_isSet = false;
    m_installment_payment_data_option_item_nr_subsequent_installment_amount_isValid = false;

    m_installment_payment_data_option_item_nr_total_amount_due_isSet = false;
    m_installment_payment_data_option_item_nr_total_amount_due_isValid = false;

    m_installment_payment_data_payment_options_isSet = false;
    m_installment_payment_data_payment_options_isValid = false;

    m_installments_value_isSet = false;
    m_installments_value_isValid = false;
}

void OAIResponseAdditionalDataInstallments::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIResponseAdditionalDataInstallments::fromJsonObject(QJsonObject json) {

    m_installment_payment_data_installment_type_isValid = ::OpenAPI::fromJsonValue(m_installment_payment_data_installment_type, json[QString("installmentPaymentData.installmentType")]);
    m_installment_payment_data_installment_type_isSet = !json[QString("installmentPaymentData.installmentType")].isNull() && m_installment_payment_data_installment_type_isValid;

    m_installment_payment_data_option_item_nr_annual_percentage_rate_isValid = ::OpenAPI::fromJsonValue(m_installment_payment_data_option_item_nr_annual_percentage_rate, json[QString("installmentPaymentData.option[itemNr].annualPercentageRate")]);
    m_installment_payment_data_option_item_nr_annual_percentage_rate_isSet = !json[QString("installmentPaymentData.option[itemNr].annualPercentageRate")].isNull() && m_installment_payment_data_option_item_nr_annual_percentage_rate_isValid;

    m_installment_payment_data_option_item_nr_first_installment_amount_isValid = ::OpenAPI::fromJsonValue(m_installment_payment_data_option_item_nr_first_installment_amount, json[QString("installmentPaymentData.option[itemNr].firstInstallmentAmount")]);
    m_installment_payment_data_option_item_nr_first_installment_amount_isSet = !json[QString("installmentPaymentData.option[itemNr].firstInstallmentAmount")].isNull() && m_installment_payment_data_option_item_nr_first_installment_amount_isValid;

    m_installment_payment_data_option_item_nr_installment_fee_isValid = ::OpenAPI::fromJsonValue(m_installment_payment_data_option_item_nr_installment_fee, json[QString("installmentPaymentData.option[itemNr].installmentFee")]);
    m_installment_payment_data_option_item_nr_installment_fee_isSet = !json[QString("installmentPaymentData.option[itemNr].installmentFee")].isNull() && m_installment_payment_data_option_item_nr_installment_fee_isValid;

    m_installment_payment_data_option_item_nr_interest_rate_isValid = ::OpenAPI::fromJsonValue(m_installment_payment_data_option_item_nr_interest_rate, json[QString("installmentPaymentData.option[itemNr].interestRate")]);
    m_installment_payment_data_option_item_nr_interest_rate_isSet = !json[QString("installmentPaymentData.option[itemNr].interestRate")].isNull() && m_installment_payment_data_option_item_nr_interest_rate_isValid;

    m_installment_payment_data_option_item_nr_maximum_number_of_installments_isValid = ::OpenAPI::fromJsonValue(m_installment_payment_data_option_item_nr_maximum_number_of_installments, json[QString("installmentPaymentData.option[itemNr].maximumNumberOfInstallments")]);
    m_installment_payment_data_option_item_nr_maximum_number_of_installments_isSet = !json[QString("installmentPaymentData.option[itemNr].maximumNumberOfInstallments")].isNull() && m_installment_payment_data_option_item_nr_maximum_number_of_installments_isValid;

    m_installment_payment_data_option_item_nr_minimum_number_of_installments_isValid = ::OpenAPI::fromJsonValue(m_installment_payment_data_option_item_nr_minimum_number_of_installments, json[QString("installmentPaymentData.option[itemNr].minimumNumberOfInstallments")]);
    m_installment_payment_data_option_item_nr_minimum_number_of_installments_isSet = !json[QString("installmentPaymentData.option[itemNr].minimumNumberOfInstallments")].isNull() && m_installment_payment_data_option_item_nr_minimum_number_of_installments_isValid;

    m_installment_payment_data_option_item_nr_number_of_installments_isValid = ::OpenAPI::fromJsonValue(m_installment_payment_data_option_item_nr_number_of_installments, json[QString("installmentPaymentData.option[itemNr].numberOfInstallments")]);
    m_installment_payment_data_option_item_nr_number_of_installments_isSet = !json[QString("installmentPaymentData.option[itemNr].numberOfInstallments")].isNull() && m_installment_payment_data_option_item_nr_number_of_installments_isValid;

    m_installment_payment_data_option_item_nr_subsequent_installment_amount_isValid = ::OpenAPI::fromJsonValue(m_installment_payment_data_option_item_nr_subsequent_installment_amount, json[QString("installmentPaymentData.option[itemNr].subsequentInstallmentAmount")]);
    m_installment_payment_data_option_item_nr_subsequent_installment_amount_isSet = !json[QString("installmentPaymentData.option[itemNr].subsequentInstallmentAmount")].isNull() && m_installment_payment_data_option_item_nr_subsequent_installment_amount_isValid;

    m_installment_payment_data_option_item_nr_total_amount_due_isValid = ::OpenAPI::fromJsonValue(m_installment_payment_data_option_item_nr_total_amount_due, json[QString("installmentPaymentData.option[itemNr].totalAmountDue")]);
    m_installment_payment_data_option_item_nr_total_amount_due_isSet = !json[QString("installmentPaymentData.option[itemNr].totalAmountDue")].isNull() && m_installment_payment_data_option_item_nr_total_amount_due_isValid;

    m_installment_payment_data_payment_options_isValid = ::OpenAPI::fromJsonValue(m_installment_payment_data_payment_options, json[QString("installmentPaymentData.paymentOptions")]);
    m_installment_payment_data_payment_options_isSet = !json[QString("installmentPaymentData.paymentOptions")].isNull() && m_installment_payment_data_payment_options_isValid;

    m_installments_value_isValid = ::OpenAPI::fromJsonValue(m_installments_value, json[QString("installments.value")]);
    m_installments_value_isSet = !json[QString("installments.value")].isNull() && m_installments_value_isValid;
}

QString OAIResponseAdditionalDataInstallments::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIResponseAdditionalDataInstallments::asJsonObject() const {
    QJsonObject obj;
    if (m_installment_payment_data_installment_type_isSet) {
        obj.insert(QString("installmentPaymentData.installmentType"), ::OpenAPI::toJsonValue(m_installment_payment_data_installment_type));
    }
    if (m_installment_payment_data_option_item_nr_annual_percentage_rate_isSet) {
        obj.insert(QString("installmentPaymentData.option[itemNr].annualPercentageRate"), ::OpenAPI::toJsonValue(m_installment_payment_data_option_item_nr_annual_percentage_rate));
    }
    if (m_installment_payment_data_option_item_nr_first_installment_amount_isSet) {
        obj.insert(QString("installmentPaymentData.option[itemNr].firstInstallmentAmount"), ::OpenAPI::toJsonValue(m_installment_payment_data_option_item_nr_first_installment_amount));
    }
    if (m_installment_payment_data_option_item_nr_installment_fee_isSet) {
        obj.insert(QString("installmentPaymentData.option[itemNr].installmentFee"), ::OpenAPI::toJsonValue(m_installment_payment_data_option_item_nr_installment_fee));
    }
    if (m_installment_payment_data_option_item_nr_interest_rate_isSet) {
        obj.insert(QString("installmentPaymentData.option[itemNr].interestRate"), ::OpenAPI::toJsonValue(m_installment_payment_data_option_item_nr_interest_rate));
    }
    if (m_installment_payment_data_option_item_nr_maximum_number_of_installments_isSet) {
        obj.insert(QString("installmentPaymentData.option[itemNr].maximumNumberOfInstallments"), ::OpenAPI::toJsonValue(m_installment_payment_data_option_item_nr_maximum_number_of_installments));
    }
    if (m_installment_payment_data_option_item_nr_minimum_number_of_installments_isSet) {
        obj.insert(QString("installmentPaymentData.option[itemNr].minimumNumberOfInstallments"), ::OpenAPI::toJsonValue(m_installment_payment_data_option_item_nr_minimum_number_of_installments));
    }
    if (m_installment_payment_data_option_item_nr_number_of_installments_isSet) {
        obj.insert(QString("installmentPaymentData.option[itemNr].numberOfInstallments"), ::OpenAPI::toJsonValue(m_installment_payment_data_option_item_nr_number_of_installments));
    }
    if (m_installment_payment_data_option_item_nr_subsequent_installment_amount_isSet) {
        obj.insert(QString("installmentPaymentData.option[itemNr].subsequentInstallmentAmount"), ::OpenAPI::toJsonValue(m_installment_payment_data_option_item_nr_subsequent_installment_amount));
    }
    if (m_installment_payment_data_option_item_nr_total_amount_due_isSet) {
        obj.insert(QString("installmentPaymentData.option[itemNr].totalAmountDue"), ::OpenAPI::toJsonValue(m_installment_payment_data_option_item_nr_total_amount_due));
    }
    if (m_installment_payment_data_payment_options_isSet) {
        obj.insert(QString("installmentPaymentData.paymentOptions"), ::OpenAPI::toJsonValue(m_installment_payment_data_payment_options));
    }
    if (m_installments_value_isSet) {
        obj.insert(QString("installments.value"), ::OpenAPI::toJsonValue(m_installments_value));
    }
    return obj;
}

QString OAIResponseAdditionalDataInstallments::getInstallmentPaymentDataInstallmentType() const {
    return m_installment_payment_data_installment_type;
}
void OAIResponseAdditionalDataInstallments::setInstallmentPaymentDataInstallmentType(const QString &installment_payment_data_installment_type) {
    m_installment_payment_data_installment_type = installment_payment_data_installment_type;
    m_installment_payment_data_installment_type_isSet = true;
}

bool OAIResponseAdditionalDataInstallments::is_installment_payment_data_installment_type_Set() const{
    return m_installment_payment_data_installment_type_isSet;
}

bool OAIResponseAdditionalDataInstallments::is_installment_payment_data_installment_type_Valid() const{
    return m_installment_payment_data_installment_type_isValid;
}

QString OAIResponseAdditionalDataInstallments::getInstallmentPaymentDataOptionItemNrAnnualPercentageRate() const {
    return m_installment_payment_data_option_item_nr_annual_percentage_rate;
}
void OAIResponseAdditionalDataInstallments::setInstallmentPaymentDataOptionItemNrAnnualPercentageRate(const QString &installment_payment_data_option_item_nr_annual_percentage_rate) {
    m_installment_payment_data_option_item_nr_annual_percentage_rate = installment_payment_data_option_item_nr_annual_percentage_rate;
    m_installment_payment_data_option_item_nr_annual_percentage_rate_isSet = true;
}

bool OAIResponseAdditionalDataInstallments::is_installment_payment_data_option_item_nr_annual_percentage_rate_Set() const{
    return m_installment_payment_data_option_item_nr_annual_percentage_rate_isSet;
}

bool OAIResponseAdditionalDataInstallments::is_installment_payment_data_option_item_nr_annual_percentage_rate_Valid() const{
    return m_installment_payment_data_option_item_nr_annual_percentage_rate_isValid;
}

QString OAIResponseAdditionalDataInstallments::getInstallmentPaymentDataOptionItemNrFirstInstallmentAmount() const {
    return m_installment_payment_data_option_item_nr_first_installment_amount;
}
void OAIResponseAdditionalDataInstallments::setInstallmentPaymentDataOptionItemNrFirstInstallmentAmount(const QString &installment_payment_data_option_item_nr_first_installment_amount) {
    m_installment_payment_data_option_item_nr_first_installment_amount = installment_payment_data_option_item_nr_first_installment_amount;
    m_installment_payment_data_option_item_nr_first_installment_amount_isSet = true;
}

bool OAIResponseAdditionalDataInstallments::is_installment_payment_data_option_item_nr_first_installment_amount_Set() const{
    return m_installment_payment_data_option_item_nr_first_installment_amount_isSet;
}

bool OAIResponseAdditionalDataInstallments::is_installment_payment_data_option_item_nr_first_installment_amount_Valid() const{
    return m_installment_payment_data_option_item_nr_first_installment_amount_isValid;
}

QString OAIResponseAdditionalDataInstallments::getInstallmentPaymentDataOptionItemNrInstallmentFee() const {
    return m_installment_payment_data_option_item_nr_installment_fee;
}
void OAIResponseAdditionalDataInstallments::setInstallmentPaymentDataOptionItemNrInstallmentFee(const QString &installment_payment_data_option_item_nr_installment_fee) {
    m_installment_payment_data_option_item_nr_installment_fee = installment_payment_data_option_item_nr_installment_fee;
    m_installment_payment_data_option_item_nr_installment_fee_isSet = true;
}

bool OAIResponseAdditionalDataInstallments::is_installment_payment_data_option_item_nr_installment_fee_Set() const{
    return m_installment_payment_data_option_item_nr_installment_fee_isSet;
}

bool OAIResponseAdditionalDataInstallments::is_installment_payment_data_option_item_nr_installment_fee_Valid() const{
    return m_installment_payment_data_option_item_nr_installment_fee_isValid;
}

QString OAIResponseAdditionalDataInstallments::getInstallmentPaymentDataOptionItemNrInterestRate() const {
    return m_installment_payment_data_option_item_nr_interest_rate;
}
void OAIResponseAdditionalDataInstallments::setInstallmentPaymentDataOptionItemNrInterestRate(const QString &installment_payment_data_option_item_nr_interest_rate) {
    m_installment_payment_data_option_item_nr_interest_rate = installment_payment_data_option_item_nr_interest_rate;
    m_installment_payment_data_option_item_nr_interest_rate_isSet = true;
}

bool OAIResponseAdditionalDataInstallments::is_installment_payment_data_option_item_nr_interest_rate_Set() const{
    return m_installment_payment_data_option_item_nr_interest_rate_isSet;
}

bool OAIResponseAdditionalDataInstallments::is_installment_payment_data_option_item_nr_interest_rate_Valid() const{
    return m_installment_payment_data_option_item_nr_interest_rate_isValid;
}

QString OAIResponseAdditionalDataInstallments::getInstallmentPaymentDataOptionItemNrMaximumNumberOfInstallments() const {
    return m_installment_payment_data_option_item_nr_maximum_number_of_installments;
}
void OAIResponseAdditionalDataInstallments::setInstallmentPaymentDataOptionItemNrMaximumNumberOfInstallments(const QString &installment_payment_data_option_item_nr_maximum_number_of_installments) {
    m_installment_payment_data_option_item_nr_maximum_number_of_installments = installment_payment_data_option_item_nr_maximum_number_of_installments;
    m_installment_payment_data_option_item_nr_maximum_number_of_installments_isSet = true;
}

bool OAIResponseAdditionalDataInstallments::is_installment_payment_data_option_item_nr_maximum_number_of_installments_Set() const{
    return m_installment_payment_data_option_item_nr_maximum_number_of_installments_isSet;
}

bool OAIResponseAdditionalDataInstallments::is_installment_payment_data_option_item_nr_maximum_number_of_installments_Valid() const{
    return m_installment_payment_data_option_item_nr_maximum_number_of_installments_isValid;
}

QString OAIResponseAdditionalDataInstallments::getInstallmentPaymentDataOptionItemNrMinimumNumberOfInstallments() const {
    return m_installment_payment_data_option_item_nr_minimum_number_of_installments;
}
void OAIResponseAdditionalDataInstallments::setInstallmentPaymentDataOptionItemNrMinimumNumberOfInstallments(const QString &installment_payment_data_option_item_nr_minimum_number_of_installments) {
    m_installment_payment_data_option_item_nr_minimum_number_of_installments = installment_payment_data_option_item_nr_minimum_number_of_installments;
    m_installment_payment_data_option_item_nr_minimum_number_of_installments_isSet = true;
}

bool OAIResponseAdditionalDataInstallments::is_installment_payment_data_option_item_nr_minimum_number_of_installments_Set() const{
    return m_installment_payment_data_option_item_nr_minimum_number_of_installments_isSet;
}

bool OAIResponseAdditionalDataInstallments::is_installment_payment_data_option_item_nr_minimum_number_of_installments_Valid() const{
    return m_installment_payment_data_option_item_nr_minimum_number_of_installments_isValid;
}

QString OAIResponseAdditionalDataInstallments::getInstallmentPaymentDataOptionItemNrNumberOfInstallments() const {
    return m_installment_payment_data_option_item_nr_number_of_installments;
}
void OAIResponseAdditionalDataInstallments::setInstallmentPaymentDataOptionItemNrNumberOfInstallments(const QString &installment_payment_data_option_item_nr_number_of_installments) {
    m_installment_payment_data_option_item_nr_number_of_installments = installment_payment_data_option_item_nr_number_of_installments;
    m_installment_payment_data_option_item_nr_number_of_installments_isSet = true;
}

bool OAIResponseAdditionalDataInstallments::is_installment_payment_data_option_item_nr_number_of_installments_Set() const{
    return m_installment_payment_data_option_item_nr_number_of_installments_isSet;
}

bool OAIResponseAdditionalDataInstallments::is_installment_payment_data_option_item_nr_number_of_installments_Valid() const{
    return m_installment_payment_data_option_item_nr_number_of_installments_isValid;
}

QString OAIResponseAdditionalDataInstallments::getInstallmentPaymentDataOptionItemNrSubsequentInstallmentAmount() const {
    return m_installment_payment_data_option_item_nr_subsequent_installment_amount;
}
void OAIResponseAdditionalDataInstallments::setInstallmentPaymentDataOptionItemNrSubsequentInstallmentAmount(const QString &installment_payment_data_option_item_nr_subsequent_installment_amount) {
    m_installment_payment_data_option_item_nr_subsequent_installment_amount = installment_payment_data_option_item_nr_subsequent_installment_amount;
    m_installment_payment_data_option_item_nr_subsequent_installment_amount_isSet = true;
}

bool OAIResponseAdditionalDataInstallments::is_installment_payment_data_option_item_nr_subsequent_installment_amount_Set() const{
    return m_installment_payment_data_option_item_nr_subsequent_installment_amount_isSet;
}

bool OAIResponseAdditionalDataInstallments::is_installment_payment_data_option_item_nr_subsequent_installment_amount_Valid() const{
    return m_installment_payment_data_option_item_nr_subsequent_installment_amount_isValid;
}

QString OAIResponseAdditionalDataInstallments::getInstallmentPaymentDataOptionItemNrTotalAmountDue() const {
    return m_installment_payment_data_option_item_nr_total_amount_due;
}
void OAIResponseAdditionalDataInstallments::setInstallmentPaymentDataOptionItemNrTotalAmountDue(const QString &installment_payment_data_option_item_nr_total_amount_due) {
    m_installment_payment_data_option_item_nr_total_amount_due = installment_payment_data_option_item_nr_total_amount_due;
    m_installment_payment_data_option_item_nr_total_amount_due_isSet = true;
}

bool OAIResponseAdditionalDataInstallments::is_installment_payment_data_option_item_nr_total_amount_due_Set() const{
    return m_installment_payment_data_option_item_nr_total_amount_due_isSet;
}

bool OAIResponseAdditionalDataInstallments::is_installment_payment_data_option_item_nr_total_amount_due_Valid() const{
    return m_installment_payment_data_option_item_nr_total_amount_due_isValid;
}

QString OAIResponseAdditionalDataInstallments::getInstallmentPaymentDataPaymentOptions() const {
    return m_installment_payment_data_payment_options;
}
void OAIResponseAdditionalDataInstallments::setInstallmentPaymentDataPaymentOptions(const QString &installment_payment_data_payment_options) {
    m_installment_payment_data_payment_options = installment_payment_data_payment_options;
    m_installment_payment_data_payment_options_isSet = true;
}

bool OAIResponseAdditionalDataInstallments::is_installment_payment_data_payment_options_Set() const{
    return m_installment_payment_data_payment_options_isSet;
}

bool OAIResponseAdditionalDataInstallments::is_installment_payment_data_payment_options_Valid() const{
    return m_installment_payment_data_payment_options_isValid;
}

QString OAIResponseAdditionalDataInstallments::getInstallmentsValue() const {
    return m_installments_value;
}
void OAIResponseAdditionalDataInstallments::setInstallmentsValue(const QString &installments_value) {
    m_installments_value = installments_value;
    m_installments_value_isSet = true;
}

bool OAIResponseAdditionalDataInstallments::is_installments_value_Set() const{
    return m_installments_value_isSet;
}

bool OAIResponseAdditionalDataInstallments::is_installments_value_Valid() const{
    return m_installments_value_isValid;
}

bool OAIResponseAdditionalDataInstallments::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_installment_payment_data_installment_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_installment_payment_data_option_item_nr_annual_percentage_rate_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_installment_payment_data_option_item_nr_first_installment_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_installment_payment_data_option_item_nr_installment_fee_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_installment_payment_data_option_item_nr_interest_rate_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_installment_payment_data_option_item_nr_maximum_number_of_installments_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_installment_payment_data_option_item_nr_minimum_number_of_installments_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_installment_payment_data_option_item_nr_number_of_installments_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_installment_payment_data_option_item_nr_subsequent_installment_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_installment_payment_data_option_item_nr_total_amount_due_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_installment_payment_data_payment_options_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_installments_value_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIResponseAdditionalDataInstallments::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
