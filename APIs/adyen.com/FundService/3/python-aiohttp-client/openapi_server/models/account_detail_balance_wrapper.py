# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.account_detail_balance import AccountDetailBalance
from openapi_server import util


class AccountDetailBalanceWrapper(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_detail_balance: AccountDetailBalance=None):
        """AccountDetailBalanceWrapper - a model defined in OpenAPI

        :param account_detail_balance: The account_detail_balance of this AccountDetailBalanceWrapper.
        """
        self.openapi_types = {
            'account_detail_balance': AccountDetailBalance
        }

        self.attribute_map = {
            'account_detail_balance': 'AccountDetailBalance'
        }

        self._account_detail_balance = account_detail_balance

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AccountDetailBalanceWrapper':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AccountDetailBalanceWrapper of this AccountDetailBalanceWrapper.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_detail_balance(self):
        """Gets the account_detail_balance of this AccountDetailBalanceWrapper.


        :return: The account_detail_balance of this AccountDetailBalanceWrapper.
        :rtype: AccountDetailBalance
        """
        return self._account_detail_balance

    @account_detail_balance.setter
    def account_detail_balance(self, account_detail_balance):
        """Sets the account_detail_balance of this AccountDetailBalanceWrapper.


        :param account_detail_balance: The account_detail_balance of this AccountDetailBalanceWrapper.
        :type account_detail_balance: AccountDetailBalance
        """

        self._account_detail_balance = account_detail_balance
