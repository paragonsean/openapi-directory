/**
 * Fund API
 * This API is used for the classic integration. If you are just starting your implementation, refer to our [new integration guide](https://docs.adyen.com/marketplaces-and-platforms) instead.  The Fund API provides endpoints for managing the funds in the accounts on your platform. These management operations include, for example, the transfer of funds from one account to another, the payout of funds to an account holder, and the retrieval of balances in an account.  For more information, refer to our [documentation](https://docs.adyen.com/marketplaces-and-platforms/classic/). ## Authentication Your Adyen contact will provide your API credential and an API key. To connect to the API, add an `X-API-Key` header with the API key as the value, for example:   ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ```  Alternatively, you can use the username and password to connect to the API using basic authentication. For example:  ``` curl -U \"ws@MarketPlace.YOUR_PLATFORM_ACCOUNT\":\"YOUR_WS_PASSWORD\" \\ -H \"Content-Type: application/json\" \\ ... ``` When going live, you need to generate new web service user credentials to access the [live endpoints](https://docs.adyen.com/development-resources/live-endpoints).  ## Versioning The Fund API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://cal-test.adyen.com/cal/services/Fund/v3/accountHolderBalance ```
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AccountDetailBalanceWrapper from './AccountDetailBalanceWrapper';
import DetailBalance from './DetailBalance';

/**
 * The AccountHolderBalanceResponse model module.
 * @module model/AccountHolderBalanceResponse
 * @version 3
 */
class AccountHolderBalanceResponse {
    /**
     * Constructs a new <code>AccountHolderBalanceResponse</code>.
     * @alias module:model/AccountHolderBalanceResponse
     */
    constructor() { 
        
        AccountHolderBalanceResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AccountHolderBalanceResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AccountHolderBalanceResponse} obj Optional instance to populate.
     * @return {module:model/AccountHolderBalanceResponse} The populated <code>AccountHolderBalanceResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AccountHolderBalanceResponse();

            if (data.hasOwnProperty('balancePerAccount')) {
                obj['balancePerAccount'] = ApiClient.convertToType(data['balancePerAccount'], [AccountDetailBalanceWrapper]);
            }
            if (data.hasOwnProperty('pspReference')) {
                obj['pspReference'] = ApiClient.convertToType(data['pspReference'], 'String');
            }
            if (data.hasOwnProperty('resultCode')) {
                obj['resultCode'] = ApiClient.convertToType(data['resultCode'], 'String');
            }
            if (data.hasOwnProperty('submittedAsync')) {
                obj['submittedAsync'] = ApiClient.convertToType(data['submittedAsync'], 'Boolean');
            }
            if (data.hasOwnProperty('totalBalance')) {
                obj['totalBalance'] = DetailBalance.constructFromObject(data['totalBalance']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AccountHolderBalanceResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AccountHolderBalanceResponse</code>.
     */
    static validateJSON(data) {
        if (data['balancePerAccount']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['balancePerAccount'])) {
                throw new Error("Expected the field `balancePerAccount` to be an array in the JSON data but got " + data['balancePerAccount']);
            }
            // validate the optional field `balancePerAccount` (array)
            for (const item of data['balancePerAccount']) {
                AccountDetailBalanceWrapper.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['pspReference'] && !(typeof data['pspReference'] === 'string' || data['pspReference'] instanceof String)) {
            throw new Error("Expected the field `pspReference` to be a primitive type in the JSON string but got " + data['pspReference']);
        }
        // ensure the json data is a string
        if (data['resultCode'] && !(typeof data['resultCode'] === 'string' || data['resultCode'] instanceof String)) {
            throw new Error("Expected the field `resultCode` to be a primitive type in the JSON string but got " + data['resultCode']);
        }
        // validate the optional field `totalBalance`
        if (data['totalBalance']) { // data not null
          DetailBalance.validateJSON(data['totalBalance']);
        }

        return true;
    }


}



/**
 * A list of each account and their balances.
 * @member {Array.<module:model/AccountDetailBalanceWrapper>} balancePerAccount
 */
AccountHolderBalanceResponse.prototype['balancePerAccount'] = undefined;

/**
 * The reference of a request. Can be used to uniquely identify the request.
 * @member {String} pspReference
 */
AccountHolderBalanceResponse.prototype['pspReference'] = undefined;

/**
 * The result code.
 * @member {String} resultCode
 */
AccountHolderBalanceResponse.prototype['resultCode'] = undefined;

/**
 * Indicates whether the request is processed asynchronously. Depending on the request's platform settings, the following scenarios may be applied: * **true**: The request is queued and will be executed when the providing service is available in the order in which the requests are received. * **false**: The processing of the request is immediately attempted; it may result in an error if the providing service is unavailable.
 * @member {Boolean} submittedAsync
 */
AccountHolderBalanceResponse.prototype['submittedAsync'] = undefined;

/**
 * The total balance of the account holder.
 * @member {module:model/DetailBalance} totalBalance
 */
AccountHolderBalanceResponse.prototype['totalBalance'] = undefined;






export default AccountHolderBalanceResponse;

