# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.detail_balance import DetailBalance
from openapi_server import util


class AccountDetailBalance(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_code: str=None, detail_balance: DetailBalance=None):
        """AccountDetailBalance - a model defined in OpenAPI

        :param account_code: The account_code of this AccountDetailBalance.
        :param detail_balance: The detail_balance of this AccountDetailBalance.
        """
        self.openapi_types = {
            'account_code': str,
            'detail_balance': DetailBalance
        }

        self.attribute_map = {
            'account_code': 'accountCode',
            'detail_balance': 'detailBalance'
        }

        self._account_code = account_code
        self._detail_balance = detail_balance

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AccountDetailBalance':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AccountDetailBalance of this AccountDetailBalance.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_code(self):
        """Gets the account_code of this AccountDetailBalance.

        The code of the account that holds the balance.

        :return: The account_code of this AccountDetailBalance.
        :rtype: str
        """
        return self._account_code

    @account_code.setter
    def account_code(self, account_code):
        """Sets the account_code of this AccountDetailBalance.

        The code of the account that holds the balance.

        :param account_code: The account_code of this AccountDetailBalance.
        :type account_code: str
        """

        self._account_code = account_code

    @property
    def detail_balance(self):
        """Gets the detail_balance of this AccountDetailBalance.

        Details of the balance held by the account.

        :return: The detail_balance of this AccountDetailBalance.
        :rtype: DetailBalance
        """
        return self._detail_balance

    @detail_balance.setter
    def detail_balance(self, detail_balance):
        """Sets the detail_balance of this AccountDetailBalance.

        Details of the balance held by the account.

        :param detail_balance: The detail_balance of this AccountDetailBalance.
        :type detail_balance: DetailBalance
        """

        self._detail_balance = detail_balance
