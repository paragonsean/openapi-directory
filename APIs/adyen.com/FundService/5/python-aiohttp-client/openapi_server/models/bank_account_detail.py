# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BankAccountDetail(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_number: str=None, account_type: str=None, bank_account_name: str=None, bank_account_reference: str=None, bank_account_uuid: str=None, bank_bic_swift: str=None, bank_city: str=None, bank_code: str=None, bank_name: str=None, branch_code: str=None, check_code: str=None, country_code: str=None, currency_code: str=None, iban: str=None, owner_city: str=None, owner_country_code: str=None, owner_date_of_birth: str=None, owner_house_number_or_name: str=None, owner_name: str=None, owner_nationality: str=None, owner_postal_code: str=None, owner_state: str=None, owner_street: str=None, primary_account: bool=None, tax_id: str=None, url_for_verification: str=None):
        """BankAccountDetail - a model defined in OpenAPI

        :param account_number: The account_number of this BankAccountDetail.
        :param account_type: The account_type of this BankAccountDetail.
        :param bank_account_name: The bank_account_name of this BankAccountDetail.
        :param bank_account_reference: The bank_account_reference of this BankAccountDetail.
        :param bank_account_uuid: The bank_account_uuid of this BankAccountDetail.
        :param bank_bic_swift: The bank_bic_swift of this BankAccountDetail.
        :param bank_city: The bank_city of this BankAccountDetail.
        :param bank_code: The bank_code of this BankAccountDetail.
        :param bank_name: The bank_name of this BankAccountDetail.
        :param branch_code: The branch_code of this BankAccountDetail.
        :param check_code: The check_code of this BankAccountDetail.
        :param country_code: The country_code of this BankAccountDetail.
        :param currency_code: The currency_code of this BankAccountDetail.
        :param iban: The iban of this BankAccountDetail.
        :param owner_city: The owner_city of this BankAccountDetail.
        :param owner_country_code: The owner_country_code of this BankAccountDetail.
        :param owner_date_of_birth: The owner_date_of_birth of this BankAccountDetail.
        :param owner_house_number_or_name: The owner_house_number_or_name of this BankAccountDetail.
        :param owner_name: The owner_name of this BankAccountDetail.
        :param owner_nationality: The owner_nationality of this BankAccountDetail.
        :param owner_postal_code: The owner_postal_code of this BankAccountDetail.
        :param owner_state: The owner_state of this BankAccountDetail.
        :param owner_street: The owner_street of this BankAccountDetail.
        :param primary_account: The primary_account of this BankAccountDetail.
        :param tax_id: The tax_id of this BankAccountDetail.
        :param url_for_verification: The url_for_verification of this BankAccountDetail.
        """
        self.openapi_types = {
            'account_number': str,
            'account_type': str,
            'bank_account_name': str,
            'bank_account_reference': str,
            'bank_account_uuid': str,
            'bank_bic_swift': str,
            'bank_city': str,
            'bank_code': str,
            'bank_name': str,
            'branch_code': str,
            'check_code': str,
            'country_code': str,
            'currency_code': str,
            'iban': str,
            'owner_city': str,
            'owner_country_code': str,
            'owner_date_of_birth': str,
            'owner_house_number_or_name': str,
            'owner_name': str,
            'owner_nationality': str,
            'owner_postal_code': str,
            'owner_state': str,
            'owner_street': str,
            'primary_account': bool,
            'tax_id': str,
            'url_for_verification': str
        }

        self.attribute_map = {
            'account_number': 'accountNumber',
            'account_type': 'accountType',
            'bank_account_name': 'bankAccountName',
            'bank_account_reference': 'bankAccountReference',
            'bank_account_uuid': 'bankAccountUUID',
            'bank_bic_swift': 'bankBicSwift',
            'bank_city': 'bankCity',
            'bank_code': 'bankCode',
            'bank_name': 'bankName',
            'branch_code': 'branchCode',
            'check_code': 'checkCode',
            'country_code': 'countryCode',
            'currency_code': 'currencyCode',
            'iban': 'iban',
            'owner_city': 'ownerCity',
            'owner_country_code': 'ownerCountryCode',
            'owner_date_of_birth': 'ownerDateOfBirth',
            'owner_house_number_or_name': 'ownerHouseNumberOrName',
            'owner_name': 'ownerName',
            'owner_nationality': 'ownerNationality',
            'owner_postal_code': 'ownerPostalCode',
            'owner_state': 'ownerState',
            'owner_street': 'ownerStreet',
            'primary_account': 'primaryAccount',
            'tax_id': 'taxId',
            'url_for_verification': 'urlForVerification'
        }

        self._account_number = account_number
        self._account_type = account_type
        self._bank_account_name = bank_account_name
        self._bank_account_reference = bank_account_reference
        self._bank_account_uuid = bank_account_uuid
        self._bank_bic_swift = bank_bic_swift
        self._bank_city = bank_city
        self._bank_code = bank_code
        self._bank_name = bank_name
        self._branch_code = branch_code
        self._check_code = check_code
        self._country_code = country_code
        self._currency_code = currency_code
        self._iban = iban
        self._owner_city = owner_city
        self._owner_country_code = owner_country_code
        self._owner_date_of_birth = owner_date_of_birth
        self._owner_house_number_or_name = owner_house_number_or_name
        self._owner_name = owner_name
        self._owner_nationality = owner_nationality
        self._owner_postal_code = owner_postal_code
        self._owner_state = owner_state
        self._owner_street = owner_street
        self._primary_account = primary_account
        self._tax_id = tax_id
        self._url_for_verification = url_for_verification

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BankAccountDetail':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BankAccountDetail of this BankAccountDetail.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_number(self):
        """Gets the account_number of this BankAccountDetail.

        The bank account number (without separators). >Refer to [Required information](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-process/required-information) for details on field requirements.

        :return: The account_number of this BankAccountDetail.
        :rtype: str
        """
        return self._account_number

    @account_number.setter
    def account_number(self, account_number):
        """Sets the account_number of this BankAccountDetail.

        The bank account number (without separators). >Refer to [Required information](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-process/required-information) for details on field requirements.

        :param account_number: The account_number of this BankAccountDetail.
        :type account_number: str
        """

        self._account_number = account_number

    @property
    def account_type(self):
        """Gets the account_type of this BankAccountDetail.

        The type of bank account. Only applicable to bank accounts held in the USA. The permitted values are: `checking`, `savings`.  >Refer to [Required information](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-process/required-information) for details on field requirements.

        :return: The account_type of this BankAccountDetail.
        :rtype: str
        """
        return self._account_type

    @account_type.setter
    def account_type(self, account_type):
        """Sets the account_type of this BankAccountDetail.

        The type of bank account. Only applicable to bank accounts held in the USA. The permitted values are: `checking`, `savings`.  >Refer to [Required information](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-process/required-information) for details on field requirements.

        :param account_type: The account_type of this BankAccountDetail.
        :type account_type: str
        """

        self._account_type = account_type

    @property
    def bank_account_name(self):
        """Gets the bank_account_name of this BankAccountDetail.

        The name of the bank account.

        :return: The bank_account_name of this BankAccountDetail.
        :rtype: str
        """
        return self._bank_account_name

    @bank_account_name.setter
    def bank_account_name(self, bank_account_name):
        """Sets the bank_account_name of this BankAccountDetail.

        The name of the bank account.

        :param bank_account_name: The bank_account_name of this BankAccountDetail.
        :type bank_account_name: str
        """

        self._bank_account_name = bank_account_name

    @property
    def bank_account_reference(self):
        """Gets the bank_account_reference of this BankAccountDetail.

        Merchant reference to the bank account.

        :return: The bank_account_reference of this BankAccountDetail.
        :rtype: str
        """
        return self._bank_account_reference

    @bank_account_reference.setter
    def bank_account_reference(self, bank_account_reference):
        """Sets the bank_account_reference of this BankAccountDetail.

        Merchant reference to the bank account.

        :param bank_account_reference: The bank_account_reference of this BankAccountDetail.
        :type bank_account_reference: str
        """

        self._bank_account_reference = bank_account_reference

    @property
    def bank_account_uuid(self):
        """Gets the bank_account_uuid of this BankAccountDetail.

        The unique identifier (UUID) of the Bank Account. >If, during an account holder create or update request, this field is left blank (but other fields provided), a new Bank Account will be created with a procedurally-generated UUID.  >If, during an account holder create request, a UUID is provided, the creation of the Bank Account will fail while the creation of the account holder will continue.  >If, during an account holder update request, a UUID that is not correlated with an existing Bank Account is provided, the update of the account holder will fail.  >If, during an account holder update request, a UUID that is correlated with an existing Bank Account is provided, the existing Bank Account will be updated. 

        :return: The bank_account_uuid of this BankAccountDetail.
        :rtype: str
        """
        return self._bank_account_uuid

    @bank_account_uuid.setter
    def bank_account_uuid(self, bank_account_uuid):
        """Sets the bank_account_uuid of this BankAccountDetail.

        The unique identifier (UUID) of the Bank Account. >If, during an account holder create or update request, this field is left blank (but other fields provided), a new Bank Account will be created with a procedurally-generated UUID.  >If, during an account holder create request, a UUID is provided, the creation of the Bank Account will fail while the creation of the account holder will continue.  >If, during an account holder update request, a UUID that is not correlated with an existing Bank Account is provided, the update of the account holder will fail.  >If, during an account holder update request, a UUID that is correlated with an existing Bank Account is provided, the existing Bank Account will be updated. 

        :param bank_account_uuid: The bank_account_uuid of this BankAccountDetail.
        :type bank_account_uuid: str
        """

        self._bank_account_uuid = bank_account_uuid

    @property
    def bank_bic_swift(self):
        """Gets the bank_bic_swift of this BankAccountDetail.

        The bank identifier code. >Refer to [Required information](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-process/required-information) for details on field requirements.

        :return: The bank_bic_swift of this BankAccountDetail.
        :rtype: str
        """
        return self._bank_bic_swift

    @bank_bic_swift.setter
    def bank_bic_swift(self, bank_bic_swift):
        """Sets the bank_bic_swift of this BankAccountDetail.

        The bank identifier code. >Refer to [Required information](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-process/required-information) for details on field requirements.

        :param bank_bic_swift: The bank_bic_swift of this BankAccountDetail.
        :type bank_bic_swift: str
        """

        self._bank_bic_swift = bank_bic_swift

    @property
    def bank_city(self):
        """Gets the bank_city of this BankAccountDetail.

        The city in which the bank branch is located.  >Refer to [Required information](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-process/required-information) for details on field requirements.

        :return: The bank_city of this BankAccountDetail.
        :rtype: str
        """
        return self._bank_city

    @bank_city.setter
    def bank_city(self, bank_city):
        """Sets the bank_city of this BankAccountDetail.

        The city in which the bank branch is located.  >Refer to [Required information](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-process/required-information) for details on field requirements.

        :param bank_city: The bank_city of this BankAccountDetail.
        :type bank_city: str
        """

        self._bank_city = bank_city

    @property
    def bank_code(self):
        """Gets the bank_code of this BankAccountDetail.

        The bank code of the banking institution with which the bank account is registered.  >Refer to [Required information](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-process/required-information) for details on field requirements.

        :return: The bank_code of this BankAccountDetail.
        :rtype: str
        """
        return self._bank_code

    @bank_code.setter
    def bank_code(self, bank_code):
        """Sets the bank_code of this BankAccountDetail.

        The bank code of the banking institution with which the bank account is registered.  >Refer to [Required information](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-process/required-information) for details on field requirements.

        :param bank_code: The bank_code of this BankAccountDetail.
        :type bank_code: str
        """

        self._bank_code = bank_code

    @property
    def bank_name(self):
        """Gets the bank_name of this BankAccountDetail.

        The name of the banking institution with which the bank account is held.  >Refer to [Required information](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-process/required-information) for details on field requirements.

        :return: The bank_name of this BankAccountDetail.
        :rtype: str
        """
        return self._bank_name

    @bank_name.setter
    def bank_name(self, bank_name):
        """Sets the bank_name of this BankAccountDetail.

        The name of the banking institution with which the bank account is held.  >Refer to [Required information](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-process/required-information) for details on field requirements.

        :param bank_name: The bank_name of this BankAccountDetail.
        :type bank_name: str
        """

        self._bank_name = bank_name

    @property
    def branch_code(self):
        """Gets the branch_code of this BankAccountDetail.

        The branch code of the branch under which the bank account is registered. The value to be specified in this parameter depends on the country of the bank account: * United States - Routing number * United Kingdom - Sort code * Germany - Bankleitzahl >Refer to [Required information](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-process/required-information) for details on field requirements.

        :return: The branch_code of this BankAccountDetail.
        :rtype: str
        """
        return self._branch_code

    @branch_code.setter
    def branch_code(self, branch_code):
        """Sets the branch_code of this BankAccountDetail.

        The branch code of the branch under which the bank account is registered. The value to be specified in this parameter depends on the country of the bank account: * United States - Routing number * United Kingdom - Sort code * Germany - Bankleitzahl >Refer to [Required information](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-process/required-information) for details on field requirements.

        :param branch_code: The branch_code of this BankAccountDetail.
        :type branch_code: str
        """

        self._branch_code = branch_code

    @property
    def check_code(self):
        """Gets the check_code of this BankAccountDetail.

        The check code of the bank account.  >Refer to [Required information](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-process/required-information) for details on field requirements.

        :return: The check_code of this BankAccountDetail.
        :rtype: str
        """
        return self._check_code

    @check_code.setter
    def check_code(self, check_code):
        """Sets the check_code of this BankAccountDetail.

        The check code of the bank account.  >Refer to [Required information](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-process/required-information) for details on field requirements.

        :param check_code: The check_code of this BankAccountDetail.
        :type check_code: str
        """

        self._check_code = check_code

    @property
    def country_code(self):
        """Gets the country_code of this BankAccountDetail.

        The two-letter country code in which the bank account is registered. >The permitted country codes are defined in ISO-3166-1 alpha-2 (e.g. 'NL').  >Refer to [Required information](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-process/required-information) for details on field requirements.

        :return: The country_code of this BankAccountDetail.
        :rtype: str
        """
        return self._country_code

    @country_code.setter
    def country_code(self, country_code):
        """Sets the country_code of this BankAccountDetail.

        The two-letter country code in which the bank account is registered. >The permitted country codes are defined in ISO-3166-1 alpha-2 (e.g. 'NL').  >Refer to [Required information](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-process/required-information) for details on field requirements.

        :param country_code: The country_code of this BankAccountDetail.
        :type country_code: str
        """

        self._country_code = country_code

    @property
    def currency_code(self):
        """Gets the currency_code of this BankAccountDetail.

        The currency in which the bank account deals. >The permitted currency codes are defined in ISO-4217 (e.g. 'EUR'). 

        :return: The currency_code of this BankAccountDetail.
        :rtype: str
        """
        return self._currency_code

    @currency_code.setter
    def currency_code(self, currency_code):
        """Sets the currency_code of this BankAccountDetail.

        The currency in which the bank account deals. >The permitted currency codes are defined in ISO-4217 (e.g. 'EUR'). 

        :param currency_code: The currency_code of this BankAccountDetail.
        :type currency_code: str
        """

        self._currency_code = currency_code

    @property
    def iban(self):
        """Gets the iban of this BankAccountDetail.

        The international bank account number. >The IBAN standard is defined in ISO-13616.  >Refer to [Required information](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-process/required-information) for details on field requirements.

        :return: The iban of this BankAccountDetail.
        :rtype: str
        """
        return self._iban

    @iban.setter
    def iban(self, iban):
        """Sets the iban of this BankAccountDetail.

        The international bank account number. >The IBAN standard is defined in ISO-13616.  >Refer to [Required information](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-process/required-information) for details on field requirements.

        :param iban: The iban of this BankAccountDetail.
        :type iban: str
        """

        self._iban = iban

    @property
    def owner_city(self):
        """Gets the owner_city of this BankAccountDetail.

        The city of residence of the bank account owner. >Refer to [Required information](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-process/required-information) for details on field requirements.

        :return: The owner_city of this BankAccountDetail.
        :rtype: str
        """
        return self._owner_city

    @owner_city.setter
    def owner_city(self, owner_city):
        """Sets the owner_city of this BankAccountDetail.

        The city of residence of the bank account owner. >Refer to [Required information](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-process/required-information) for details on field requirements.

        :param owner_city: The owner_city of this BankAccountDetail.
        :type owner_city: str
        """

        self._owner_city = owner_city

    @property
    def owner_country_code(self):
        """Gets the owner_country_code of this BankAccountDetail.

        The country code of the country of residence of the bank account owner. >The permitted country codes are defined in ISO-3166-1 alpha-2 (e.g. 'NL').  >Refer to [Required information](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-process/required-information) for details on field requirements.

        :return: The owner_country_code of this BankAccountDetail.
        :rtype: str
        """
        return self._owner_country_code

    @owner_country_code.setter
    def owner_country_code(self, owner_country_code):
        """Sets the owner_country_code of this BankAccountDetail.

        The country code of the country of residence of the bank account owner. >The permitted country codes are defined in ISO-3166-1 alpha-2 (e.g. 'NL').  >Refer to [Required information](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-process/required-information) for details on field requirements.

        :param owner_country_code: The owner_country_code of this BankAccountDetail.
        :type owner_country_code: str
        """

        self._owner_country_code = owner_country_code

    @property
    def owner_date_of_birth(self):
        """Gets the owner_date_of_birth of this BankAccountDetail.

        The date of birth of the bank account owner. The date should be in ISO-8601 format yyyy-mm-dd (e.g. 2000-01-31).

        :return: The owner_date_of_birth of this BankAccountDetail.
        :rtype: str
        """
        return self._owner_date_of_birth

    @owner_date_of_birth.setter
    def owner_date_of_birth(self, owner_date_of_birth):
        """Sets the owner_date_of_birth of this BankAccountDetail.

        The date of birth of the bank account owner. The date should be in ISO-8601 format yyyy-mm-dd (e.g. 2000-01-31).

        :param owner_date_of_birth: The owner_date_of_birth of this BankAccountDetail.
        :type owner_date_of_birth: str
        """

        self._owner_date_of_birth = owner_date_of_birth

    @property
    def owner_house_number_or_name(self):
        """Gets the owner_house_number_or_name of this BankAccountDetail.

        The house name or number of the residence of the bank account owner. >Refer to [Required information](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-process/required-information) for details on field requirements.

        :return: The owner_house_number_or_name of this BankAccountDetail.
        :rtype: str
        """
        return self._owner_house_number_or_name

    @owner_house_number_or_name.setter
    def owner_house_number_or_name(self, owner_house_number_or_name):
        """Sets the owner_house_number_or_name of this BankAccountDetail.

        The house name or number of the residence of the bank account owner. >Refer to [Required information](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-process/required-information) for details on field requirements.

        :param owner_house_number_or_name: The owner_house_number_or_name of this BankAccountDetail.
        :type owner_house_number_or_name: str
        """

        self._owner_house_number_or_name = owner_house_number_or_name

    @property
    def owner_name(self):
        """Gets the owner_name of this BankAccountDetail.

        The name of the bank account owner. >Refer to [Required information](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-process/required-information) for details on field requirements.

        :return: The owner_name of this BankAccountDetail.
        :rtype: str
        """
        return self._owner_name

    @owner_name.setter
    def owner_name(self, owner_name):
        """Sets the owner_name of this BankAccountDetail.

        The name of the bank account owner. >Refer to [Required information](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-process/required-information) for details on field requirements.

        :param owner_name: The owner_name of this BankAccountDetail.
        :type owner_name: str
        """

        self._owner_name = owner_name

    @property
    def owner_nationality(self):
        """Gets the owner_nationality of this BankAccountDetail.

        The country code of the country of nationality of the bank account owner. >The permitted country codes are defined in ISO-3166-1 alpha-2 (e.g. 'NL').  >Refer to [Required information](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-process/required-information) for details on field requirements.

        :return: The owner_nationality of this BankAccountDetail.
        :rtype: str
        """
        return self._owner_nationality

    @owner_nationality.setter
    def owner_nationality(self, owner_nationality):
        """Sets the owner_nationality of this BankAccountDetail.

        The country code of the country of nationality of the bank account owner. >The permitted country codes are defined in ISO-3166-1 alpha-2 (e.g. 'NL').  >Refer to [Required information](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-process/required-information) for details on field requirements.

        :param owner_nationality: The owner_nationality of this BankAccountDetail.
        :type owner_nationality: str
        """

        self._owner_nationality = owner_nationality

    @property
    def owner_postal_code(self):
        """Gets the owner_postal_code of this BankAccountDetail.

        The postal code of the residence of the bank account owner. >Refer to [Required information](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-process/required-information) for details on field requirements.

        :return: The owner_postal_code of this BankAccountDetail.
        :rtype: str
        """
        return self._owner_postal_code

    @owner_postal_code.setter
    def owner_postal_code(self, owner_postal_code):
        """Sets the owner_postal_code of this BankAccountDetail.

        The postal code of the residence of the bank account owner. >Refer to [Required information](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-process/required-information) for details on field requirements.

        :param owner_postal_code: The owner_postal_code of this BankAccountDetail.
        :type owner_postal_code: str
        """

        self._owner_postal_code = owner_postal_code

    @property
    def owner_state(self):
        """Gets the owner_state of this BankAccountDetail.

        The state of residence of the bank account owner. >Refer to [Required information](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-process/required-information) for details on field requirements.

        :return: The owner_state of this BankAccountDetail.
        :rtype: str
        """
        return self._owner_state

    @owner_state.setter
    def owner_state(self, owner_state):
        """Sets the owner_state of this BankAccountDetail.

        The state of residence of the bank account owner. >Refer to [Required information](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-process/required-information) for details on field requirements.

        :param owner_state: The owner_state of this BankAccountDetail.
        :type owner_state: str
        """

        self._owner_state = owner_state

    @property
    def owner_street(self):
        """Gets the owner_street of this BankAccountDetail.

        The street name of the residence of the bank account owner. >Refer to [Required information](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-process/required-information) for details on field requirements.

        :return: The owner_street of this BankAccountDetail.
        :rtype: str
        """
        return self._owner_street

    @owner_street.setter
    def owner_street(self, owner_street):
        """Sets the owner_street of this BankAccountDetail.

        The street name of the residence of the bank account owner. >Refer to [Required information](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-process/required-information) for details on field requirements.

        :param owner_street: The owner_street of this BankAccountDetail.
        :type owner_street: str
        """

        self._owner_street = owner_street

    @property
    def primary_account(self):
        """Gets the primary_account of this BankAccountDetail.

        If set to true, the bank account is a primary account.

        :return: The primary_account of this BankAccountDetail.
        :rtype: bool
        """
        return self._primary_account

    @primary_account.setter
    def primary_account(self, primary_account):
        """Sets the primary_account of this BankAccountDetail.

        If set to true, the bank account is a primary account.

        :param primary_account: The primary_account of this BankAccountDetail.
        :type primary_account: bool
        """

        self._primary_account = primary_account

    @property
    def tax_id(self):
        """Gets the tax_id of this BankAccountDetail.

        The tax ID number.  >Refer to [Required information](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-process/required-information) for details on field requirements.

        :return: The tax_id of this BankAccountDetail.
        :rtype: str
        """
        return self._tax_id

    @tax_id.setter
    def tax_id(self, tax_id):
        """Sets the tax_id of this BankAccountDetail.

        The tax ID number.  >Refer to [Required information](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-process/required-information) for details on field requirements.

        :param tax_id: The tax_id of this BankAccountDetail.
        :type tax_id: str
        """

        self._tax_id = tax_id

    @property
    def url_for_verification(self):
        """Gets the url_for_verification of this BankAccountDetail.

        The URL to be used for bank account verification. This may be generated on bank account creation.  >Refer to [Required information](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-process/required-information) for details on field requirements.

        :return: The url_for_verification of this BankAccountDetail.
        :rtype: str
        """
        return self._url_for_verification

    @url_for_verification.setter
    def url_for_verification(self, url_for_verification):
        """Sets the url_for_verification of this BankAccountDetail.

        The URL to be used for bank account verification. This may be generated on bank account creation.  >Refer to [Required information](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-process/required-information) for details on field requirements.

        :param url_for_verification: The url_for_verification of this BankAccountDetail.
        :type url_for_verification: str
        """

        self._url_for_verification = url_for_verification
