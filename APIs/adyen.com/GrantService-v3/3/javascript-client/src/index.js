/**
 * Capital API
 * Adyen Capital allows you to build an embedded financing offering for your users to serve their operational needs. Learn more about [Adyen Capital](https://docs.adyen.com/marketplaces-and-platforms/capital).  ## Authentication Your Adyen contact will provide your API credential and an API key. To connect to the API, add an `X-API-Key` header with the API key as the value, for example:   ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ```  Alternatively, you can use the username and password to connect to the API using basic authentication. For example:  ``` curl -H \"Content-Type: application/json\" \\ -U \"ws@BalancePlatform.YOUR_BALANCE_PLATFORM\":\"YOUR_WS_PASSWORD\" \\ ... ``` ## Roles and permissions To use the Capital API, you need an additional role for your API credential. Your Adyen contact will set up the roles and permissions for you. ## Versioning The Capital API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://balanceplatform-api-test.adyen.com/btl/v3/grants ``` ## Going live When going live, your Adyen contact will provide your API credential for the live environment. You can then use the username and password to send requests to `https://balanceplatform-api-live.adyen.com/btl/v3`.  
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Amount from './model/Amount';
import CapitalBalance from './model/CapitalBalance';
import CapitalGrant from './model/CapitalGrant';
import CapitalGrantInfo from './model/CapitalGrantInfo';
import CapitalGrants from './model/CapitalGrants';
import Counterparty from './model/Counterparty';
import Fee from './model/Fee';
import InvalidField from './model/InvalidField';
import JSONObject from './model/JSONObject';
import JSONPath from './model/JSONPath';
import Repayment from './model/Repayment';
import RepaymentTerm from './model/RepaymentTerm';
import RestServiceError from './model/RestServiceError';
import ThresholdRepayment from './model/ThresholdRepayment';
import CapitalApi from './api/CapitalApi';


/**
* Adyen Capital allows you to build an embedded financing offering for your users to serve their operational needs. Learn more about [Adyen Capital](https://docs.adyen.com/marketplaces-and-platforms/capital).  ## Authentication Your Adyen contact will provide your API credential and an API key. To connect to the API, add an &#x60;X-API-Key&#x60; header with the API key as the value, for example:   &#x60;&#x60;&#x60; curl -H \&quot;Content-Type: application/json\&quot; \\ -H \&quot;X-API-Key: YOUR_API_KEY\&quot; \\ ... &#x60;&#x60;&#x60;  Alternatively, you can use the username and password to connect to the API using basic authentication. For example:  &#x60;&#x60;&#x60; curl -H \&quot;Content-Type: application/json\&quot; \\ -U \&quot;ws@BalancePlatform.YOUR_BALANCE_PLATFORM\&quot;:\&quot;YOUR_WS_PASSWORD\&quot; \\ ... &#x60;&#x60;&#x60; ## Roles and permissions To use the Capital API, you need an additional role for your API credential. Your Adyen contact will set up the roles and permissions for you. ## Versioning The Capital API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \&quot;vXX\&quot;, where XX is the version number.  For example: &#x60;&#x60;&#x60; https://balanceplatform-api-test.adyen.com/btl/v3/grants &#x60;&#x60;&#x60; ## Going live When going live, your Adyen contact will provide your API credential for the live environment. You can then use the username and password to send requests to &#x60;https://balanceplatform-api-live.adyen.com/btl/v3&#x60;.  .<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var CapitalApi = require('index'); // See note below*.
* var xxxSvc = new CapitalApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new CapitalApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new CapitalApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new CapitalApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 3
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Amount model constructor.
     * @property {module:model/Amount}
     */
    Amount,

    /**
     * The CapitalBalance model constructor.
     * @property {module:model/CapitalBalance}
     */
    CapitalBalance,

    /**
     * The CapitalGrant model constructor.
     * @property {module:model/CapitalGrant}
     */
    CapitalGrant,

    /**
     * The CapitalGrantInfo model constructor.
     * @property {module:model/CapitalGrantInfo}
     */
    CapitalGrantInfo,

    /**
     * The CapitalGrants model constructor.
     * @property {module:model/CapitalGrants}
     */
    CapitalGrants,

    /**
     * The Counterparty model constructor.
     * @property {module:model/Counterparty}
     */
    Counterparty,

    /**
     * The Fee model constructor.
     * @property {module:model/Fee}
     */
    Fee,

    /**
     * The InvalidField model constructor.
     * @property {module:model/InvalidField}
     */
    InvalidField,

    /**
     * The JSONObject model constructor.
     * @property {module:model/JSONObject}
     */
    JSONObject,

    /**
     * The JSONPath model constructor.
     * @property {module:model/JSONPath}
     */
    JSONPath,

    /**
     * The Repayment model constructor.
     * @property {module:model/Repayment}
     */
    Repayment,

    /**
     * The RepaymentTerm model constructor.
     * @property {module:model/RepaymentTerm}
     */
    RepaymentTerm,

    /**
     * The RestServiceError model constructor.
     * @property {module:model/RestServiceError}
     */
    RestServiceError,

    /**
     * The ThresholdRepayment model constructor.
     * @property {module:model/ThresholdRepayment}
     */
    ThresholdRepayment,

    /**
    * The CapitalApi service constructor.
    * @property {module:api/CapitalApi}
    */
    CapitalApi
};
