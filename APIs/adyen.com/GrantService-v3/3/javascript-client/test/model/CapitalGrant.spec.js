/**
 * Capital API
 * Adyen Capital allows you to build an embedded financing offering for your users to serve their operational needs. Learn more about [Adyen Capital](https://docs.adyen.com/marketplaces-and-platforms/capital).  ## Authentication Your Adyen contact will provide your API credential and an API key. To connect to the API, add an `X-API-Key` header with the API key as the value, for example:   ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ```  Alternatively, you can use the username and password to connect to the API using basic authentication. For example:  ``` curl -H \"Content-Type: application/json\" \\ -U \"ws@BalancePlatform.YOUR_BALANCE_PLATFORM\":\"YOUR_WS_PASSWORD\" \\ ... ``` ## Roles and permissions To use the Capital API, you need an additional role for your API credential. Your Adyen contact will set up the roles and permissions for you. ## Versioning The Capital API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://balanceplatform-api-test.adyen.com/btl/v3/grants ``` ## Going live When going live, your Adyen contact will provide your API credential for the live environment. You can then use the username and password to send requests to `https://balanceplatform-api-live.adyen.com/btl/v3`.  
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CapitalApi);
  }
}(this, function(expect, CapitalApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CapitalApi.CapitalGrant();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CapitalGrant', function() {
    it('should create an instance of CapitalGrant', function() {
      // uncomment below and update the code to test CapitalGrant
      //var instance = new CapitalApi.CapitalGrant();
      //expect(instance).to.be.a(CapitalApi.CapitalGrant);
    });

    it('should have the property amount (base name: "amount")', function() {
      // uncomment below and update the code to test the property amount
      //var instance = new CapitalApi.CapitalGrant();
      //expect(instance).to.be();
    });

    it('should have the property balances (base name: "balances")', function() {
      // uncomment below and update the code to test the property balances
      //var instance = new CapitalApi.CapitalGrant();
      //expect(instance).to.be();
    });

    it('should have the property counterparty (base name: "counterparty")', function() {
      // uncomment below and update the code to test the property counterparty
      //var instance = new CapitalApi.CapitalGrant();
      //expect(instance).to.be();
    });

    it('should have the property fee (base name: "fee")', function() {
      // uncomment below and update the code to test the property fee
      //var instance = new CapitalApi.CapitalGrant();
      //expect(instance).to.be();
    });

    it('should have the property grantAccountId (base name: "grantAccountId")', function() {
      // uncomment below and update the code to test the property grantAccountId
      //var instance = new CapitalApi.CapitalGrant();
      //expect(instance).to.be();
    });

    it('should have the property grantOfferId (base name: "grantOfferId")', function() {
      // uncomment below and update the code to test the property grantOfferId
      //var instance = new CapitalApi.CapitalGrant();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new CapitalApi.CapitalGrant();
      //expect(instance).to.be();
    });

    it('should have the property repayment (base name: "repayment")', function() {
      // uncomment below and update the code to test the property repayment
      //var instance = new CapitalApi.CapitalGrant();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new CapitalApi.CapitalGrant();
      //expect(instance).to.be();
    });

  });

}));
