# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.capital_grant import CapitalGrant
from openapi_server import util


class CapitalGrants(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, grants: List[CapitalGrant]=None):
        """CapitalGrants - a model defined in OpenAPI

        :param grants: The grants of this CapitalGrants.
        """
        self.openapi_types = {
            'grants': List[CapitalGrant]
        }

        self.attribute_map = {
            'grants': 'grants'
        }

        self._grants = grants

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CapitalGrants':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CapitalGrants of this CapitalGrants.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def grants(self):
        """Gets the grants of this CapitalGrants.

        The unique identifier of the grant.

        :return: The grants of this CapitalGrants.
        :rtype: List[CapitalGrant]
        """
        return self._grants

    @grants.setter
    def grants(self, grants):
        """Sets the grants of this CapitalGrants.

        The unique identifier of the grant.

        :param grants: The grants of this CapitalGrants.
        :type grants: List[CapitalGrant]
        """
        if grants is None:
            raise ValueError("Invalid value for `grants`, must not be `None`")

        self._grants = grants
