/**
 * Report webhooks
 * Adyen sends webhooks to inform your system that reports were generated and are ready to be downloaded.  You can download reports programmatically by making an HTTP GET request, or manually from your [Balance Platform Customer Area](https://balanceplatform-test.adyen.com/balanceplatform).
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import BalancePlatformNotificationResponse from './model/BalancePlatformNotificationResponse';
import ReportNotificationData from './model/ReportNotificationData';
import ReportNotificationRequest from './model/ReportNotificationRequest';
import Resource from './model/Resource';
import ResourceReference from './model/ResourceReference';


/**
* Adyen sends webhooks to inform your system that reports were generated and are ready to be downloaded.  You can download reports programmatically by making an HTTP GET request, or manually from your [Balance Platform Customer Area](https://balanceplatform-test.adyen.com/balanceplatform)..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var ReportWebhooks = require('index'); // See note below*.
* var xxxSvc = new ReportWebhooks.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new ReportWebhooks.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new ReportWebhooks.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new ReportWebhooks.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The BalancePlatformNotificationResponse model constructor.
     * @property {module:model/BalancePlatformNotificationResponse}
     */
    BalancePlatformNotificationResponse,

    /**
     * The ReportNotificationData model constructor.
     * @property {module:model/ReportNotificationData}
     */
    ReportNotificationData,

    /**
     * The ReportNotificationRequest model constructor.
     * @property {module:model/ReportNotificationRequest}
     */
    ReportNotificationRequest,

    /**
     * The Resource model constructor.
     * @property {module:model/Resource}
     */
    Resource,

    /**
     * The ResourceReference model constructor.
     * @property {module:model/ResourceReference}
     */
    ResourceReference
};
