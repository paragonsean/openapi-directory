# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.resource_reference import ResourceReference
from openapi_server import util


class ReportNotificationData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_holder: ResourceReference=None, balance_account: ResourceReference=None, balance_platform: str=None, creation_date: datetime=None, download_url: str=None, file_name: str=None, report_type: str=None):
        """ReportNotificationData - a model defined in OpenAPI

        :param account_holder: The account_holder of this ReportNotificationData.
        :param balance_account: The balance_account of this ReportNotificationData.
        :param balance_platform: The balance_platform of this ReportNotificationData.
        :param creation_date: The creation_date of this ReportNotificationData.
        :param download_url: The download_url of this ReportNotificationData.
        :param file_name: The file_name of this ReportNotificationData.
        :param report_type: The report_type of this ReportNotificationData.
        """
        self.openapi_types = {
            'account_holder': ResourceReference,
            'balance_account': ResourceReference,
            'balance_platform': str,
            'creation_date': datetime,
            'download_url': str,
            'file_name': str,
            'report_type': str
        }

        self.attribute_map = {
            'account_holder': 'accountHolder',
            'balance_account': 'balanceAccount',
            'balance_platform': 'balancePlatform',
            'creation_date': 'creationDate',
            'download_url': 'downloadUrl',
            'file_name': 'fileName',
            'report_type': 'reportType'
        }

        self._account_holder = account_holder
        self._balance_account = balance_account
        self._balance_platform = balance_platform
        self._creation_date = creation_date
        self._download_url = download_url
        self._file_name = file_name
        self._report_type = report_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReportNotificationData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ReportNotificationData of this ReportNotificationData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_holder(self):
        """Gets the account_holder of this ReportNotificationData.

        The account holder related to the report.

        :return: The account_holder of this ReportNotificationData.
        :rtype: ResourceReference
        """
        return self._account_holder

    @account_holder.setter
    def account_holder(self, account_holder):
        """Sets the account_holder of this ReportNotificationData.

        The account holder related to the report.

        :param account_holder: The account_holder of this ReportNotificationData.
        :type account_holder: ResourceReference
        """

        self._account_holder = account_holder

    @property
    def balance_account(self):
        """Gets the balance_account of this ReportNotificationData.

        The balance account related to the report.

        :return: The balance_account of this ReportNotificationData.
        :rtype: ResourceReference
        """
        return self._balance_account

    @balance_account.setter
    def balance_account(self, balance_account):
        """Sets the balance_account of this ReportNotificationData.

        The balance account related to the report.

        :param balance_account: The balance_account of this ReportNotificationData.
        :type balance_account: ResourceReference
        """

        self._balance_account = balance_account

    @property
    def balance_platform(self):
        """Gets the balance_platform of this ReportNotificationData.

        The unique identifier of the balance platform.

        :return: The balance_platform of this ReportNotificationData.
        :rtype: str
        """
        return self._balance_platform

    @balance_platform.setter
    def balance_platform(self, balance_platform):
        """Sets the balance_platform of this ReportNotificationData.

        The unique identifier of the balance platform.

        :param balance_platform: The balance_platform of this ReportNotificationData.
        :type balance_platform: str
        """

        self._balance_platform = balance_platform

    @property
    def creation_date(self):
        """Gets the creation_date of this ReportNotificationData.

        The date and time when the event was triggered, in ISO 8601 extended format. For example, **2020-12-18T10:15:30+01:00**.

        :return: The creation_date of this ReportNotificationData.
        :rtype: datetime
        """
        return self._creation_date

    @creation_date.setter
    def creation_date(self, creation_date):
        """Sets the creation_date of this ReportNotificationData.

        The date and time when the event was triggered, in ISO 8601 extended format. For example, **2020-12-18T10:15:30+01:00**.

        :param creation_date: The creation_date of this ReportNotificationData.
        :type creation_date: datetime
        """

        self._creation_date = creation_date

    @property
    def download_url(self):
        """Gets the download_url of this ReportNotificationData.

        The URL at which you can download the report. To download, you must authenticate your GET request with your [API credentials](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/overview).

        :return: The download_url of this ReportNotificationData.
        :rtype: str
        """
        return self._download_url

    @download_url.setter
    def download_url(self, download_url):
        """Sets the download_url of this ReportNotificationData.

        The URL at which you can download the report. To download, you must authenticate your GET request with your [API credentials](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/overview).

        :param download_url: The download_url of this ReportNotificationData.
        :type download_url: str
        """
        if download_url is None:
            raise ValueError("Invalid value for `download_url`, must not be `None`")

        self._download_url = download_url

    @property
    def file_name(self):
        """Gets the file_name of this ReportNotificationData.

        The filename of the report.

        :return: The file_name of this ReportNotificationData.
        :rtype: str
        """
        return self._file_name

    @file_name.setter
    def file_name(self, file_name):
        """Sets the file_name of this ReportNotificationData.

        The filename of the report.

        :param file_name: The file_name of this ReportNotificationData.
        :type file_name: str
        """
        if file_name is None:
            raise ValueError("Invalid value for `file_name`, must not be `None`")

        self._file_name = file_name

    @property
    def report_type(self):
        """Gets the report_type of this ReportNotificationData.

        Type of report.

        :return: The report_type of this ReportNotificationData.
        :rtype: str
        """
        return self._report_type

    @report_type.setter
    def report_type(self, report_type):
        """Sets the report_type of this ReportNotificationData.

        Type of report.

        :param report_type: The report_type of this ReportNotificationData.
        :type report_type: str
        """
        if report_type is None:
            raise ValueError("Invalid value for `report_type`, must not be `None`")

        self._report_type = report_type
