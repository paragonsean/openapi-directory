/**
 * Report webhooks
 * Adyen sends webhooks to inform your system that reports were generated and are ready to be downloaded.  You can download reports programmatically by making an HTTP GET request, or manually from your [Balance Platform Customer Area](https://balanceplatform-test.adyen.com/balanceplatform).
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBalancePlatformNotificationResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBalancePlatformNotificationResponse::OAIBalancePlatformNotificationResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBalancePlatformNotificationResponse::OAIBalancePlatformNotificationResponse() {
    this->initializeModel();
}

OAIBalancePlatformNotificationResponse::~OAIBalancePlatformNotificationResponse() {}

void OAIBalancePlatformNotificationResponse::initializeModel() {

    m_notification_response_isSet = false;
    m_notification_response_isValid = false;
}

void OAIBalancePlatformNotificationResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBalancePlatformNotificationResponse::fromJsonObject(QJsonObject json) {

    m_notification_response_isValid = ::OpenAPI::fromJsonValue(m_notification_response, json[QString("notificationResponse")]);
    m_notification_response_isSet = !json[QString("notificationResponse")].isNull() && m_notification_response_isValid;
}

QString OAIBalancePlatformNotificationResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBalancePlatformNotificationResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_notification_response_isSet) {
        obj.insert(QString("notificationResponse"), ::OpenAPI::toJsonValue(m_notification_response));
    }
    return obj;
}

QString OAIBalancePlatformNotificationResponse::getNotificationResponse() const {
    return m_notification_response;
}
void OAIBalancePlatformNotificationResponse::setNotificationResponse(const QString &notification_response) {
    m_notification_response = notification_response;
    m_notification_response_isSet = true;
}

bool OAIBalancePlatformNotificationResponse::is_notification_response_Set() const{
    return m_notification_response_isSet;
}

bool OAIBalancePlatformNotificationResponse::is_notification_response_Valid() const{
    return m_notification_response_isValid;
}

bool OAIBalancePlatformNotificationResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_notification_response_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBalancePlatformNotificationResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
