/**
 * Adyen Data Protection API
 * Adyen Data Protection API provides a way for you to process [Subject Erasure Requests](https://gdpr-info.eu/art-17-gdpr/) as mandated in GDPR.  Use our API to submit a request to delete shopper's data, including payment details and other related information (for example, delivery address or shopper email).## Authentication Each request to the Data Protection API must be signed with an API key. Get your API Key from your Customer Area, as described in [How to get the API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key). Then set this key to the `X-API-Key` header value, for example:  ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: Your_API_key\" \\ ... ``` Note that when going live, you need to generate a new API Key to access the [live endpoints](https://docs.adyen.com/development-resources/live-endpoints).  ## Versioning Data Protection Service API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://ca-test.adyen.com/ca/services/DataProtectionService/v1/requestSubjectErasure ```
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SubjectErasureResponse model module.
 * @module model/SubjectErasureResponse
 * @version 1
 */
class SubjectErasureResponse {
    /**
     * Constructs a new <code>SubjectErasureResponse</code>.
     * @alias module:model/SubjectErasureResponse
     */
    constructor() { 
        
        SubjectErasureResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SubjectErasureResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SubjectErasureResponse} obj Optional instance to populate.
     * @return {module:model/SubjectErasureResponse} The populated <code>SubjectErasureResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SubjectErasureResponse();

            if (data.hasOwnProperty('result')) {
                obj['result'] = ApiClient.convertToType(data['result'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SubjectErasureResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SubjectErasureResponse</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['result'] && !(typeof data['result'] === 'string' || data['result'] instanceof String)) {
            throw new Error("Expected the field `result` to be a primitive type in the JSON string but got " + data['result']);
        }

        return true;
    }


}



/**
 * The result of this operation.
 * @member {module:model/SubjectErasureResponse.ResultEnum} result
 */
SubjectErasureResponse.prototype['result'] = undefined;





/**
 * Allowed values for the <code>result</code> property.
 * @enum {String}
 * @readonly
 */
SubjectErasureResponse['ResultEnum'] = {

    /**
     * value: "ACTIVE_RECURRING_TOKEN_EXISTS"
     * @const
     */
    "ACTIVE_RECURRING_TOKEN_EXISTS": "ACTIVE_RECURRING_TOKEN_EXISTS",

    /**
     * value: "ALREADY_PROCESSED"
     * @const
     */
    "ALREADY_PROCESSED": "ALREADY_PROCESSED",

    /**
     * value: "PAYMENT_NOT_FOUND"
     * @const
     */
    "PAYMENT_NOT_FOUND": "PAYMENT_NOT_FOUND",

    /**
     * value: "SUCCESS"
     * @const
     */
    "SUCCESS": "SUCCESS"
};



export default SubjectErasureResponse;

