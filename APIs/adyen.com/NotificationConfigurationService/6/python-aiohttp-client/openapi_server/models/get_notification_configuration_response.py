# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.error_field_type import ErrorFieldType
from openapi_server.models.notification_configuration_details import NotificationConfigurationDetails
from openapi_server import util


class GetNotificationConfigurationResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, configuration_details: NotificationConfigurationDetails=None, invalid_fields: List[ErrorFieldType]=None, psp_reference: str=None, result_code: str=None):
        """GetNotificationConfigurationResponse - a model defined in OpenAPI

        :param configuration_details: The configuration_details of this GetNotificationConfigurationResponse.
        :param invalid_fields: The invalid_fields of this GetNotificationConfigurationResponse.
        :param psp_reference: The psp_reference of this GetNotificationConfigurationResponse.
        :param result_code: The result_code of this GetNotificationConfigurationResponse.
        """
        self.openapi_types = {
            'configuration_details': NotificationConfigurationDetails,
            'invalid_fields': List[ErrorFieldType],
            'psp_reference': str,
            'result_code': str
        }

        self.attribute_map = {
            'configuration_details': 'configurationDetails',
            'invalid_fields': 'invalidFields',
            'psp_reference': 'pspReference',
            'result_code': 'resultCode'
        }

        self._configuration_details = configuration_details
        self._invalid_fields = invalid_fields
        self._psp_reference = psp_reference
        self._result_code = result_code

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetNotificationConfigurationResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetNotificationConfigurationResponse of this GetNotificationConfigurationResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def configuration_details(self):
        """Gets the configuration_details of this GetNotificationConfigurationResponse.

        Details of the notification subscription configuration.

        :return: The configuration_details of this GetNotificationConfigurationResponse.
        :rtype: NotificationConfigurationDetails
        """
        return self._configuration_details

    @configuration_details.setter
    def configuration_details(self, configuration_details):
        """Sets the configuration_details of this GetNotificationConfigurationResponse.

        Details of the notification subscription configuration.

        :param configuration_details: The configuration_details of this GetNotificationConfigurationResponse.
        :type configuration_details: NotificationConfigurationDetails
        """
        if configuration_details is None:
            raise ValueError("Invalid value for `configuration_details`, must not be `None`")

        self._configuration_details = configuration_details

    @property
    def invalid_fields(self):
        """Gets the invalid_fields of this GetNotificationConfigurationResponse.

        Contains field validation errors that would prevent requests from being processed.

        :return: The invalid_fields of this GetNotificationConfigurationResponse.
        :rtype: List[ErrorFieldType]
        """
        return self._invalid_fields

    @invalid_fields.setter
    def invalid_fields(self, invalid_fields):
        """Sets the invalid_fields of this GetNotificationConfigurationResponse.

        Contains field validation errors that would prevent requests from being processed.

        :param invalid_fields: The invalid_fields of this GetNotificationConfigurationResponse.
        :type invalid_fields: List[ErrorFieldType]
        """

        self._invalid_fields = invalid_fields

    @property
    def psp_reference(self):
        """Gets the psp_reference of this GetNotificationConfigurationResponse.

        The reference of a request. Can be used to uniquely identify the request.

        :return: The psp_reference of this GetNotificationConfigurationResponse.
        :rtype: str
        """
        return self._psp_reference

    @psp_reference.setter
    def psp_reference(self, psp_reference):
        """Sets the psp_reference of this GetNotificationConfigurationResponse.

        The reference of a request. Can be used to uniquely identify the request.

        :param psp_reference: The psp_reference of this GetNotificationConfigurationResponse.
        :type psp_reference: str
        """

        self._psp_reference = psp_reference

    @property
    def result_code(self):
        """Gets the result_code of this GetNotificationConfigurationResponse.

        The result code.

        :return: The result_code of this GetNotificationConfigurationResponse.
        :rtype: str
        """
        return self._result_code

    @result_code.setter
    def result_code(self, result_code):
        """Sets the result_code of this GetNotificationConfigurationResponse.

        The result code.

        :param result_code: The result_code of this GetNotificationConfigurationResponse.
        :type result_code: str
        """

        self._result_code = result_code
