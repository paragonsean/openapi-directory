openapi: 3.1.0
info:
  contact:
    name: Adyen Developer Experience team
    url: https://github.com/Adyen/adyen-openapi
    x-twitter: Adyen
  description: |-
    This API is used for the classic integration. If you are just starting your implementation, refer to our [new integration guide](https://docs.adyen.com/marketplaces-and-platforms) instead.

    The Notification Configuration API provides endpoints for setting up and testing notifications that inform you of events on your platform, for example when a verification check or a payout has been completed.

    For more information, refer to our [documentation](https://docs.adyen.com/marketplaces-and-platforms/classic/notifications).
    ## Authentication
    Your Adyen contact will provide your API credential and an API key. To connect to the API, add an `X-API-Key` header with the API key as the value, for example:

     ```
    curl
    -H "Content-Type: application/json" \
    -H "X-API-Key: YOUR_API_KEY" \
    ...
    ```

    Alternatively, you can use the username and password to connect to the API using basic authentication. For example:

    ```
    curl
    -U "ws@MarketPlace.YOUR_PLATFORM_ACCOUNT":"YOUR_WS_PASSWORD" \
    -H "Content-Type: application/json" \
    ...
    ```
    When going live, you need to generate new web service user credentials to access the [live endpoints](https://docs.adyen.com/development-resources/live-endpoints).

    ## Versioning
    The Notification Configuration API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: "vXX", where XX is the version number.

    For example:
    ```
    https://cal-test.adyen.com/cal/services/Notification/v3/createNotificationConfiguration
    ```
  termsOfService: https://www.adyen.com/legal/terms-and-conditions
  title: Notification Configuration API
  version: "3"
  x-apisguru-categories:
  - payment
  x-logo:
    url: https://twitter.com/Adyen/profile_image?size=original
  x-origin:
  - format: openapi
    url: https://raw.githubusercontent.com/Adyen/adyen-openapi/main/json/NotificationConfigurationService-v3.json
    version: "3.1"
  x-preferred: false
  x-providerName: adyen.com
  x-publicVersion: true
  x-serviceName: NotificationConfigurationService
  x-timestamp: 2023-05-30T15:27:19Z
servers:
- url: https://cal-test.adyen.com/cal/services/Notification/v3
tags:
- name: General
paths:
  /createNotificationConfiguration:
    post:
      description: "Creates a subscription to notifications informing you of events\
        \ on your platform. After the subscription is created, the events specified\
        \ in the configuration will be sent to the URL specified in the configuration.\
        \ Subscriptions must be configured on a per-event basis (as opposed to, for\
        \ example, a per-account holder basis), so all event notifications of a marketplace\
        \ and of a given type will be sent to the same endpoint(s). A marketplace\
        \ may have multiple endpoints if desired; an event notification may be sent\
        \ to as many or as few different endpoints as configured."
      operationId: post-createNotificationConfiguration
      requestBody:
        content:
          application/json:
            examples:
              basic:
                $ref: '#/components/examples/post-createNotificationConfiguration-basic'
            schema:
              $ref: '#/components/schemas/CreateNotificationConfigurationRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                basic:
                  $ref: '#/components/examples/post-createNotificationConfiguration-basic-200'
              schema:
                $ref: '#/components/schemas/GetNotificationConfigurationResponse'
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      summary: Subscribe to notifications
      tags:
      - General
      x-groupName: General
      x-methodName: createNotificationConfiguration
      x-sortIndex: 1
      x-content-type: application/json
      x-accepts:
      - application/json
  /deleteNotificationConfigurations:
    post:
      description: "Deletes an existing notification subscription configuration. After\
        \ the subscription is deleted, no further event notifications will be sent\
        \ to the URL defined in the subscription."
      operationId: post-deleteNotificationConfigurations
      requestBody:
        content:
          application/json:
            examples:
              basic:
                $ref: '#/components/examples/post-deleteNotificationConfigurations-basic'
            schema:
              $ref: '#/components/schemas/DeleteNotificationConfigurationRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                basic:
                  $ref: '#/components/examples/post-deleteNotificationConfigurations-basic-200'
              schema:
                $ref: '#/components/schemas/GenericResponse'
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      summary: Delete a notification subscription configuration
      tags:
      - General
      x-groupName: General
      x-methodName: deleteNotificationConfigurations
      x-sortIndex: 6
      x-content-type: application/json
      x-accepts:
      - application/json
  /getNotificationConfiguration:
    post:
      description: Returns the details of the configuration of a notification subscription.
      operationId: post-getNotificationConfiguration
      requestBody:
        content:
          application/json:
            examples:
              basic:
                $ref: '#/components/examples/post-getNotificationConfiguration-basic'
            schema:
              $ref: '#/components/schemas/GetNotificationConfigurationRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                basic:
                  $ref: '#/components/examples/post-getNotificationConfiguration-basic-200'
              schema:
                $ref: '#/components/schemas/GetNotificationConfigurationResponse'
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      summary: Get a notification subscription configuration
      tags:
      - General
      x-groupName: General
      x-methodName: getNotificationConfiguration
      x-sortIndex: 2
      x-content-type: application/json
      x-accepts:
      - application/json
  /getNotificationConfigurationList:
    post:
      description: Returns the details of the configurations of all of the notification
        subscriptions in the platform of the executing user.
      operationId: post-getNotificationConfigurationList
      requestBody:
        content:
          application/json:
            examples:
              basic:
                $ref: '#/components/examples/post-getNotificationConfigurationList-basic'
            schema:
              $ref: '#/components/schemas/EmptyRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                basic:
                  $ref: '#/components/examples/post-getNotificationConfigurationList-basic-200'
              schema:
                $ref: '#/components/schemas/GetNotificationConfigurationListResponse'
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      summary: Get a list of notification subscription configurations
      tags:
      - General
      x-groupName: General
      x-methodName: getNotificationConfigurationList
      x-sortIndex: 3
      x-content-type: application/json
      x-accepts:
      - application/json
  /testNotificationConfiguration:
    post:
      description: "Tests an existing notification subscription configuration. For\
        \ each event type specified, a test notification will be generated and sent\
        \ to the URL configured in the subscription specified."
      operationId: post-testNotificationConfiguration
      requestBody:
        content:
          application/json:
            examples:
              basic:
                $ref: '#/components/examples/post-testNotificationConfiguration-basic'
            schema:
              $ref: '#/components/schemas/TestNotificationConfigurationRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                basic:
                  $ref: '#/components/examples/post-testNotificationConfiguration-basic-200'
              schema:
                $ref: '#/components/schemas/TestNotificationConfigurationResponse'
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      summary: Test a notification configuration
      tags:
      - General
      x-groupName: General
      x-methodName: testNotificationConfiguration
      x-sortIndex: 4
      x-content-type: application/json
      x-accepts:
      - application/json
  /updateNotificationConfiguration:
    post:
      description: "Updates an existing notification subscription configuration. If\
        \ you are updating the event types, you must provide all event types, otherwise\
        \ the previous event type configuration will be overwritten."
      operationId: post-updateNotificationConfiguration
      requestBody:
        content:
          application/json:
            examples:
              basic:
                $ref: '#/components/examples/post-updateNotificationConfiguration-basic'
            schema:
              $ref: '#/components/schemas/UpdateNotificationConfigurationRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                basic:
                  $ref: '#/components/examples/post-updateNotificationConfiguration-basic-200'
              schema:
                $ref: '#/components/schemas/GetNotificationConfigurationResponse'
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      summary: Update a notification subscription configuration
      tags:
      - General
      x-groupName: General
      x-methodName: updateNotificationConfiguration
      x-sortIndex: 5
      x-content-type: application/json
      x-accepts:
      - application/json
components:
  examples:
    post-createNotificationConfiguration-basic:
      summary: Create a notification configuration
      value:
        configurationDetails:
          active: true
          description: Test notification769551
          eventConfigs:
          - NotificationEventConfiguration:
              eventType: ACCOUNT_HOLDER_VERIFICATION
              includeMode: INCLUDE
          messageFormat: SOAP
          notifyPassword: testPassword
          notifyURL: https://www.adyen.com/notification-handler
          notifyUsername: testUserName
          sendActionHeader: true
          sslProtocol: TLSv13
    post-createNotificationConfiguration-basic-200:
      summary: Example response for request 'basic'
      value:
        configurationDetails:
          active: "true"
          description: Test notification769551
          eventConfigs:
          - NotificationEventConfiguration:
              eventType: ACCOUNT_HOLDER_VERIFICATION
              includeMode: INCLUDE
          messageFormat: SOAP
          notificationId: 28467
          notifyURL: https://www.adyen.com/notification-handler
          sendActionHeader: "true"
          sslProtocol: TLSv13
        pspReference: "8616178952143018"
        submittedAsync: "false"
    post-deleteNotificationConfigurations-basic:
      description: Deletes an existing notification subscription configuration
      summary: Delete a notification configuration
      value:
        notificationIds:
        - 27891
    post-deleteNotificationConfigurations-basic-200:
      description: Example response of deleting a notification configuration
      summary: Delete a notification configuration
      value:
        pspReference: "8516480472498802"
        submittedAsync: "false"
    post-getNotificationConfiguration-basic:
      description: Returns the details of the configuration of a notification subscription
      summary: Get a notification configuration
      value:
        notificationId: 21259
    post-getNotificationConfiguration-basic-200:
      description: Example response with a notification configuration
      summary: Get a notification configuration
      value:
        configurationDetails:
          active: "true"
          apiVersion: 4
          description: test123
          eventConfigs:
          - NotificationEventConfiguration:
              eventType: ACCOUNT_HOLDER_VERIFICATION
              includeMode: INCLUDE
          messageFormat: SOAP
          notificationId: 50061
          notifyURL: https://www.adyen.com/notification-handler
          sendActionHeader: "true"
          sslProtocol: TLSv13
        pspReference: "8516480418110057"
        submittedAsync: "false"
    post-getNotificationConfigurationList-basic:
      description: Returns the details of the configurations of all of the notification
        subscriptions in the platform of the executing user.
      summary: Get a list of configurations
      value: {}
    post-getNotificationConfigurationList-basic-200:
      description: Example response with a list of notification configurations for
        the executing user
      summary: Get a list of configuration
      value:
        configurations:
        - NotificationConfigurationDetails:
            active: "true"
            description: Unique description 12223
            eventConfigs:
            - NotificationEventConfiguration:
                eventType: ACCOUNT_HOLDER_VERIFICATION
                includeMode: INCLUDE
            messageFormat: JSON
            notificationId: 27893
            notifyURL: https://www.adyen.com/notification-handler
            sendActionHeader: "false"
            sslProtocol: TLSv13
        - NotificationConfigurationDetails:
            active: "true"
            description: just testing things
            eventConfigs:
            - NotificationEventConfiguration:
                eventType: ACCOUNT_HOLDER_VERIFICATION
                includeMode: INCLUDE
            messageFormat: JSON
            notificationId: 25032
            notifyURL: https://www.adyen.com/notification-handler
            sendActionHeader: "false"
            sslProtocol: TLSv13
        pspReference: "8516480434183690"
        submittedAsync: "false"
    post-testNotificationConfiguration-basic:
      description: Returns the test result for a notification subscription
      summary: Test a notification configuration
      value:
        eventTypes:
        - ACCOUNT_HOLDER_VERIFICATION
        notificationId: 25032
    post-testNotificationConfiguration-basic-200:
      description: Example response of a test notification configuration request
      summary: Test a notification configuration
      value:
        errorMessages:
        - "The required string \"[accepted]\" is not in all the results"
        eventTypes:
        - ACCOUNT_HOLDER_VERIFICATION
        exchangeMessages:
        - messageCode: Number
          messageDescription: "1"
        - messageCode: Title
          messageDescription: "Test 1: 8616480452462678"
        notificationId: 25032
        okMessages:
        - '...'
        - "ResponseTime_ms: 262"
        - "ResponseCode: 404"
        pspReference: "8616480452462678"
    post-updateNotificationConfiguration-basic:
      summary: Update notification configurations
      value:
        configurationDetails:
          active: false
          description: new description799847
          eventConfigs:
          - NotificationEventConfiguration:
              eventType: ACCOUNT_HOLDER_CREATED
              includeMode: EXCLUDE
          - NotificationEventConfiguration:
              eventType: ACCOUNT_CREATED
              includeMode: INCLUDE
          notificationId: 21259
          notifyPassword: testPassword2
          notifyURL: http://www.adyen.com
          notifyUsername: testUserName2
          sendActionHeader: false
          sslProtocol: TLSv13
    post-updateNotificationConfiguration-basic-200:
      summary: Example response for request 'basic'
      value:
        configurationDetails:
          active: "false"
          description: new description799847
          eventConfigs:
          - NotificationEventConfiguration:
              eventType: ACCOUNT_CREATED
              includeMode: INCLUDE
          - NotificationEventConfiguration:
              eventType: ACCOUNT_HOLDER_CREATED
              includeMode: EXCLUDE
          messageFormat: JSON
          notificationId: 21259
          notifyURL: http://www.adyen.com
          sendActionHeader: "false"
          sslProtocol: TLSv13
        pspReference: "8516178951636344"
        submittedAsync: "false"
  schemas:
    CreateNotificationConfigurationRequest:
      example:
        configurationDetails:
          apiVersion: 0
          eventConfigs:
          - NotificationEventConfiguration:
              includeMode: EXCLUDE
              eventType: ACCOUNT_CLOSED
          - NotificationEventConfiguration:
              includeMode: EXCLUDE
              eventType: ACCOUNT_CLOSED
          messageFormat: JSON
          notifyUsername: notifyUsername
          active: true
          description: description
          notifyURL: notifyURL
          sslProtocol: TLSv12
          notificationId: 6
          sendActionHeader: true
          notifyPassword: notifyPassword
      properties:
        configurationDetails:
          $ref: '#/components/schemas/NotificationConfigurationDetails'
      required:
      - configurationDetails
    DeleteNotificationConfigurationRequest:
      example:
        notificationIds:
        - 0
        - 0
      properties:
        notificationIds:
          description: A list of IDs of the notification subscription configurations
            to be deleted.
          items:
            format: int64
            type: integer
          type: array
      required:
      - notificationIds
    EmptyRequest:
      type: object
    ExchangeMessage:
      example:
        messageCode: messageCode
        messageDescription: messageDescription
      properties:
        messageCode:
          type: string
        messageDescription:
          type: string
    ExchangeMessageWrapper:
      example:
        ExchangeMessage:
          messageCode: messageCode
          messageDescription: messageDescription
      properties:
        ExchangeMessage:
          $ref: '#/components/schemas/ExchangeMessage'
    GenericResponse:
      example:
        submittedAsync: true
        resultCode: resultCode
        pspReference: pspReference
      properties:
        pspReference:
          description: The reference of a request. Can be used to uniquely identify
            the request.
          type: string
        resultCode:
          description: The result code.
          type: string
        submittedAsync:
          description: |-
            Indicates whether the request is processed asynchronously. Depending on the request's platform settings, the following scenarios may be applied:
            * **true**: The request is queued and will be executed when the providing service is available in the order in which the requests are received.
            * **false**: The processing of the request is immediately attempted; it may result in an error if the providing service is unavailable.
          type: boolean
    GetNotificationConfigurationListResponse:
      example:
        submittedAsync: true
        configurations:
        - NotificationConfigurationDetails:
            apiVersion: 0
            eventConfigs:
            - NotificationEventConfiguration:
                includeMode: EXCLUDE
                eventType: ACCOUNT_CLOSED
            - NotificationEventConfiguration:
                includeMode: EXCLUDE
                eventType: ACCOUNT_CLOSED
            messageFormat: JSON
            notifyUsername: notifyUsername
            active: true
            description: description
            notifyURL: notifyURL
            sslProtocol: TLSv12
            notificationId: 6
            sendActionHeader: true
            notifyPassword: notifyPassword
        - NotificationConfigurationDetails:
            apiVersion: 0
            eventConfigs:
            - NotificationEventConfiguration:
                includeMode: EXCLUDE
                eventType: ACCOUNT_CLOSED
            - NotificationEventConfiguration:
                includeMode: EXCLUDE
                eventType: ACCOUNT_CLOSED
            messageFormat: JSON
            notifyUsername: notifyUsername
            active: true
            description: description
            notifyURL: notifyURL
            sslProtocol: TLSv12
            notificationId: 6
            sendActionHeader: true
            notifyPassword: notifyPassword
        resultCode: resultCode
        pspReference: pspReference
      properties:
        configurations:
          description: Details of the notification subscription configurations.
          items:
            $ref: '#/components/schemas/NotificationConfigurationDetailsWrapper'
          type: array
        pspReference:
          description: The reference of a request. Can be used to uniquely identify
            the request.
          type: string
        resultCode:
          description: The result code.
          type: string
        submittedAsync:
          description: |-
            Indicates whether the request is processed asynchronously. Depending on the request's platform settings, the following scenarios may be applied:
            * **true**: The request is queued and will be executed when the providing service is available in the order in which the requests are received.
            * **false**: The processing of the request is immediately attempted; it may result in an error if the providing service is unavailable.
          type: boolean
    GetNotificationConfigurationRequest:
      example:
        notificationId: 0
      properties:
        notificationId:
          description: The ID of the notification subscription configuration whose
            details are to be retrieved.
          format: int64
          type: integer
      required:
      - notificationId
    GetNotificationConfigurationResponse:
      example:
        submittedAsync: true
        configurationDetails:
          apiVersion: 0
          eventConfigs:
          - NotificationEventConfiguration:
              includeMode: EXCLUDE
              eventType: ACCOUNT_CLOSED
          - NotificationEventConfiguration:
              includeMode: EXCLUDE
              eventType: ACCOUNT_CLOSED
          messageFormat: JSON
          notifyUsername: notifyUsername
          active: true
          description: description
          notifyURL: notifyURL
          sslProtocol: TLSv12
          notificationId: 6
          sendActionHeader: true
          notifyPassword: notifyPassword
        resultCode: resultCode
        pspReference: pspReference
      properties:
        configurationDetails:
          $ref: '#/components/schemas/NotificationConfigurationDetails'
        pspReference:
          description: The reference of a request. Can be used to uniquely identify
            the request.
          type: string
        resultCode:
          description: The result code.
          type: string
        submittedAsync:
          description: |-
            Indicates whether the request is processed asynchronously. Depending on the request's platform settings, the following scenarios may be applied:
            * **true**: The request is queued and will be executed when the providing service is available in the order in which the requests are received.
            * **false**: The processing of the request is immediately attempted; it may result in an error if the providing service is unavailable.
          type: boolean
      required:
      - configurationDetails
    NotificationConfigurationDetails:
      example:
        apiVersion: 0
        eventConfigs:
        - NotificationEventConfiguration:
            includeMode: EXCLUDE
            eventType: ACCOUNT_CLOSED
        - NotificationEventConfiguration:
            includeMode: EXCLUDE
            eventType: ACCOUNT_CLOSED
        messageFormat: JSON
        notifyUsername: notifyUsername
        active: true
        description: description
        notifyURL: notifyURL
        sslProtocol: TLSv12
        notificationId: 6
        sendActionHeader: true
        notifyPassword: notifyPassword
      properties:
        active:
          description: Indicates whether the notification subscription is active.
          type: boolean
        apiVersion:
          description: "The version of the notification to which you are subscribing.\
            \ To make sure that your integration can properly process the notification,\
            \ subscribe to the same version as the API that you're using."
          format: int32
          type: integer
        description:
          description: A description of the notification subscription configuration.
          type: string
        eventConfigs:
          description: Contains objects that define event types and their subscription
            settings.
          items:
            $ref: '#/components/schemas/NotificationEventConfigurationWrapper'
          type: array
        messageFormat:
          deprecated: true
          description: |-
            The data format of the notification to be sent.
            >Permitted values: `JSON`, `SOAP`.
          enum:
          - JSON
          - SOAP
          type: string
        notificationId:
          description: "Adyen-generated ID for the entry, returned in the response\
            \ when you create a notification configuration. Required when updating\
            \ an existing configuration using [`/updateNotificationConfiguration`](https://docs.adyen.com/api-explorer/#/NotificationConfigurationService/latest/post/updateNotificationConfiguration)."
          format: int64
          type: integer
        notifyPassword:
          description: The password to use when accessing the notifyURL with the specified
            username.
          type: string
        notifyURL:
          description: The URL to which the notifications are to be sent.
          type: string
        notifyUsername:
          description: The username to use when accessing the notifyURL.
          type: string
        sendActionHeader:
          deprecated: true
          description: |-
            Indicates whether an action header should be included.
            >Only applies to SOAP messages (as specified in messageFormat).
          type: boolean
        sslProtocol:
          description: |-
            The SSL protocol employed by the endpoint.
            >Permitted values: `TLSv12`, `TLSv13`.
          enum:
          - TLSv12
          - TLSv13
          type: string
    NotificationConfigurationDetailsWrapper:
      example:
        NotificationConfigurationDetails:
          apiVersion: 0
          eventConfigs:
          - NotificationEventConfiguration:
              includeMode: EXCLUDE
              eventType: ACCOUNT_CLOSED
          - NotificationEventConfiguration:
              includeMode: EXCLUDE
              eventType: ACCOUNT_CLOSED
          messageFormat: JSON
          notifyUsername: notifyUsername
          active: true
          description: description
          notifyURL: notifyURL
          sslProtocol: TLSv12
          notificationId: 6
          sendActionHeader: true
          notifyPassword: notifyPassword
      properties:
        NotificationConfigurationDetails:
          $ref: '#/components/schemas/NotificationConfigurationDetails'
    NotificationEventConfiguration:
      example:
        includeMode: EXCLUDE
        eventType: ACCOUNT_CLOSED
      properties:
        eventType:
          description: |-
            The type of event.

            Possible values: **ACCOUNT_CLOSED**, **ACCOUNT_CREATED**, **ACCOUNT_FUNDS_BELOW_THRESHOLD**, **ACCOUNT_HOLDER_CREATED**, **ACCOUNT_HOLDER_LIMIT_REACHED**, **ACCOUNT_HOLDER_PAYOUT**, **ACCOUNT_HOLDER_STATUS_CHANGE**, **ACCOUNT_HOLDER_STORE_STATUS_CHANGE**, **ACCOUNT_HOLDER_UPCOMING_DEADLINE**, **ACCOUNT_HOLDER_UPDATED**, **ACCOUNT_HOLDER_VERIFICATION**, **ACCOUNT_UPDATED**, **BENEFICIARY_SETUP**, **COMPENSATE_NEGATIVE_BALANCE**, **DIRECT_DEBIT_INITIATED**, **PAYMENT_FAILURE**, **REFUND_FUNDS_TRANSFER**, **REPORT_AVAILABLE**, **SCHEDULED_REFUNDS**, **TRANSFER_FUNDS**.
          enum:
          - ACCOUNT_CLOSED
          - ACCOUNT_CREATED
          - ACCOUNT_FUNDS_BELOW_THRESHOLD
          - ACCOUNT_HOLDER_CREATED
          - ACCOUNT_HOLDER_LIMIT_REACHED
          - ACCOUNT_HOLDER_MIGRATED
          - ACCOUNT_HOLDER_PAYOUT
          - ACCOUNT_HOLDER_STATUS_CHANGE
          - ACCOUNT_HOLDER_STORE_STATUS_CHANGE
          - ACCOUNT_HOLDER_UPCOMING_DEADLINE
          - ACCOUNT_HOLDER_UPDATED
          - ACCOUNT_HOLDER_VERIFICATION
          - ACCOUNT_UPDATED
          - BENEFICIARY_SETUP
          - COMPENSATE_NEGATIVE_BALANCE
          - DIRECT_DEBIT_INITIATED
          - FUNDS_MIGRATED
          - PAYMENT_FAILURE
          - PENDING_CREDIT
          - REFUND_FUNDS_TRANSFER
          - REPORT_AVAILABLE
          - SCHEDULED_REFUNDS
          - SCORE_SIGNAL_TRIGGERED
          - TRANSFER_FUNDS
          - TRANSFER_NOT_PAIDOUT_TRANSFERS
          type: string
        includeMode:
          description: |-
            Indicates whether the specified `eventType` is sent to your webhook endpoint.
            Possible values:
            * **INCLUDE**: Send the specified `eventType`.
            * **EXCLUDE**: Send all event types except the specified `eventType` and other event types with the `includeMode` set to **EXCLUDE**.
          enum:
          - EXCLUDE
          - INCLUDE
          type: string
      required:
      - eventType
      - includeMode
    NotificationEventConfigurationWrapper:
      example:
        NotificationEventConfiguration:
          includeMode: EXCLUDE
          eventType: ACCOUNT_CLOSED
      properties:
        NotificationEventConfiguration:
          $ref: '#/components/schemas/NotificationEventConfiguration'
    ServiceError:
      example:
        errorType: errorType
        errorCode: errorCode
        message: message
        pspReference: pspReference
        status: 1
      properties:
        errorCode:
          description: The error code mapped to the error message.
          type: string
        errorType:
          description: The category of the error.
          type: string
        message:
          description: A short explanation of the issue.
          type: string
        pspReference:
          description: The PSP reference of the payment.
          type: string
        status:
          description: The HTTP response status.
          format: int32
          type: integer
    TestNotificationConfigurationRequest:
      example:
        notificationId: 0
        eventTypes:
        - ACCOUNT_CLOSED
        - ACCOUNT_CLOSED
      properties:
        eventTypes:
          description: |-
            The event types to test.  If left blank, then all of the configured event types will be tested.
            >Permitted values: `ACCOUNT_HOLDER_CREATED`, `ACCOUNT_CREATED`, `ACCOUNT_UPDATED`, `ACCOUNT_HOLDER_UPDATED`, `ACCOUNT_HOLDER_STATUS_CHANGE`, `ACCOUNT_HOLDER_STORE_STATUS_CHANGE` `ACCOUNT_HOLDER_VERIFICATION`, `ACCOUNT_HOLDER_LIMIT_REACHED`, `ACCOUNT_HOLDER_PAYOUT`, `PAYMENT_FAILURE`, `SCHEDULED_REFUNDS`, `REPORT_AVAILABLE`, `TRANSFER_FUNDS`, `BENEFICIARY_SETUP`, `COMPENSATE_NEGATIVE_BALANCE`.
          items:
            enum:
            - ACCOUNT_CLOSED
            - ACCOUNT_CREATED
            - ACCOUNT_FUNDS_BELOW_THRESHOLD
            - ACCOUNT_HOLDER_CREATED
            - ACCOUNT_HOLDER_LIMIT_REACHED
            - ACCOUNT_HOLDER_MIGRATED
            - ACCOUNT_HOLDER_PAYOUT
            - ACCOUNT_HOLDER_STATUS_CHANGE
            - ACCOUNT_HOLDER_STORE_STATUS_CHANGE
            - ACCOUNT_HOLDER_UPCOMING_DEADLINE
            - ACCOUNT_HOLDER_UPDATED
            - ACCOUNT_HOLDER_VERIFICATION
            - ACCOUNT_UPDATED
            - BENEFICIARY_SETUP
            - COMPENSATE_NEGATIVE_BALANCE
            - DIRECT_DEBIT_INITIATED
            - FUNDS_MIGRATED
            - PAYMENT_FAILURE
            - PENDING_CREDIT
            - REFUND_FUNDS_TRANSFER
            - REPORT_AVAILABLE
            - SCHEDULED_REFUNDS
            - SCORE_SIGNAL_TRIGGERED
            - TRANSFER_FUNDS
            - TRANSFER_NOT_PAIDOUT_TRANSFERS
            type: string
          type: array
        notificationId:
          description: The ID of the notification subscription configuration to be
            tested.
          format: int64
          type: integer
      required:
      - notificationId
    TestNotificationConfigurationResponse:
      example:
        errorMessages:
        - errorMessages
        - errorMessages
        submittedAsync: true
        resultCode: resultCode
        exchangeMessages:
        - ExchangeMessage:
            messageCode: messageCode
            messageDescription: messageDescription
        - ExchangeMessage:
            messageCode: messageCode
            messageDescription: messageDescription
        okMessages:
        - okMessages
        - okMessages
        notificationId: 0
        eventTypes:
        - ACCOUNT_CLOSED
        - ACCOUNT_CLOSED
        pspReference: pspReference
      properties:
        errorMessages:
          description: Any error messages encountered.
          items:
            type: string
          type: array
        eventTypes:
          description: |-
            The event types that were tested.
            >Permitted values: `ACCOUNT_HOLDER_CREATED`, `ACCOUNT_CREATED`, `ACCOUNT_UPDATED`, `ACCOUNT_HOLDER_UPDATED`, `ACCOUNT_HOLDER_STATUS_CHANGE`, `ACCOUNT_HOLDER_STORE_STATUS_CHANGE` `ACCOUNT_HOLDER_VERIFICATION`, `ACCOUNT_HOLDER_LIMIT_REACHED`, `ACCOUNT_HOLDER_PAYOUT`, `PAYMENT_FAILURE`, `SCHEDULED_REFUNDS`, `REPORT_AVAILABLE`, `TRANSFER_FUNDS`, `BENEFICIARY_SETUP`, `COMPENSATE_NEGATIVE_BALANCE`.
          items:
            enum:
            - ACCOUNT_CLOSED
            - ACCOUNT_CREATED
            - ACCOUNT_FUNDS_BELOW_THRESHOLD
            - ACCOUNT_HOLDER_CREATED
            - ACCOUNT_HOLDER_LIMIT_REACHED
            - ACCOUNT_HOLDER_MIGRATED
            - ACCOUNT_HOLDER_PAYOUT
            - ACCOUNT_HOLDER_STATUS_CHANGE
            - ACCOUNT_HOLDER_STORE_STATUS_CHANGE
            - ACCOUNT_HOLDER_UPCOMING_DEADLINE
            - ACCOUNT_HOLDER_UPDATED
            - ACCOUNT_HOLDER_VERIFICATION
            - ACCOUNT_UPDATED
            - BENEFICIARY_SETUP
            - COMPENSATE_NEGATIVE_BALANCE
            - DIRECT_DEBIT_INITIATED
            - FUNDS_MIGRATED
            - PAYMENT_FAILURE
            - PENDING_CREDIT
            - REFUND_FUNDS_TRANSFER
            - REPORT_AVAILABLE
            - SCHEDULED_REFUNDS
            - SCORE_SIGNAL_TRIGGERED
            - TRANSFER_FUNDS
            - TRANSFER_NOT_PAIDOUT_TRANSFERS
            type: string
          type: array
        exchangeMessages:
          description: The notification message and related response messages.
          items:
            $ref: '#/components/schemas/ExchangeMessageWrapper'
          type: array
        notificationId:
          description: The ID of the notification subscription configuration.
          format: int64
          type: integer
        okMessages:
          description: A list of messages describing the testing steps.
          items:
            type: string
          type: array
        pspReference:
          description: The reference of a request. Can be used to uniquely identify
            the request.
          type: string
        resultCode:
          description: The result code.
          type: string
        submittedAsync:
          description: |-
            Indicates whether the request is processed asynchronously. Depending on the request's platform settings, the following scenarios may be applied:
            * **true**: The request is queued and will be executed when the providing service is available in the order in which the requests are received.
            * **false**: The processing of the request is immediately attempted; it may result in an error if the providing service is unavailable.
          type: boolean
      required:
      - notificationId
    UpdateNotificationConfigurationRequest:
      example:
        configurationDetails:
          apiVersion: 0
          eventConfigs:
          - NotificationEventConfiguration:
              includeMode: EXCLUDE
              eventType: ACCOUNT_CLOSED
          - NotificationEventConfiguration:
              includeMode: EXCLUDE
              eventType: ACCOUNT_CLOSED
          messageFormat: JSON
          notifyUsername: notifyUsername
          active: true
          description: description
          notifyURL: notifyURL
          sslProtocol: TLSv12
          notificationId: 6
          sendActionHeader: true
          notifyPassword: notifyPassword
      properties:
        configurationDetails:
          $ref: '#/components/schemas/NotificationConfigurationDetails'
      required:
      - configurationDetails
  securitySchemes:
    ApiKeyAuth:
      in: header
      name: X-API-Key
      type: apiKey
    BasicAuth:
      scheme: basic
      type: http
x-groups:
- General

