/**
 * Adyen Payment API
 * A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.  To learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).  ## Authentication You need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.  If using an API key, add an `X-API-Key` header with the API key as the value, for example:   ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ```  Alternatively, you can use the username and password to connect to the API using basic authentication, for example:  ``` curl -U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\ -H \"Content-Type: application/json\" \\ ... ```  ## Versioning Payments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://pal-test.adyen.com/pal/servlet/Payment/v40/authorise ```  ## Going live  To authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.  The live endpoint URLs contain a prefix which is unique to your company account: ```  https://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payment/v40/authorise ```  Get your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.
 *
 * The version of the OpenAPI document: 40
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPaymentRequest_additionalData.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPaymentRequest_additionalData::OAIPaymentRequest_additionalData(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPaymentRequest_additionalData::OAIPaymentRequest_additionalData() {
    this->initializeModel();
}

OAIPaymentRequest_additionalData::~OAIPaymentRequest_additionalData() {}

void OAIPaymentRequest_additionalData::initializeModel() {

    m_allow3_ds2_isSet = false;
    m_allow3_ds2_isValid = false;

    m_challenge_window_size_isSet = false;
    m_challenge_window_size_isValid = false;

    m_execute_three_d_isSet = false;
    m_execute_three_d_isValid = false;

    m_mpi_implementation_type_isSet = false;
    m_mpi_implementation_type_isValid = false;

    m_sca_exemption_isSet = false;
    m_sca_exemption_isValid = false;

    m_three_ds_version_isSet = false;
    m_three_ds_version_isValid = false;

    m_airline_agency_invoice_number_isSet = false;
    m_airline_agency_invoice_number_isValid = false;

    m_airline_agency_plan_name_isSet = false;
    m_airline_agency_plan_name_isValid = false;

    m_airline_airline_code_isSet = false;
    m_airline_airline_code_isValid = false;

    m_airline_airline_designator_code_isSet = false;
    m_airline_airline_designator_code_isValid = false;

    m_airline_boarding_fee_isSet = false;
    m_airline_boarding_fee_isValid = false;

    m_airline_computerized_reservation_system_isSet = false;
    m_airline_computerized_reservation_system_isValid = false;

    m_airline_customer_reference_number_isSet = false;
    m_airline_customer_reference_number_isValid = false;

    m_airline_document_type_isSet = false;
    m_airline_document_type_isValid = false;

    m_airline_flight_date_isSet = false;
    m_airline_flight_date_isValid = false;

    m_airline_leg_carrier_code_isSet = false;
    m_airline_leg_carrier_code_isValid = false;

    m_airline_leg_class_of_travel_isSet = false;
    m_airline_leg_class_of_travel_isValid = false;

    m_airline_leg_date_of_travel_isSet = false;
    m_airline_leg_date_of_travel_isValid = false;

    m_airline_leg_depart_airport_isSet = false;
    m_airline_leg_depart_airport_isValid = false;

    m_airline_leg_depart_tax_isSet = false;
    m_airline_leg_depart_tax_isValid = false;

    m_airline_leg_destination_code_isSet = false;
    m_airline_leg_destination_code_isValid = false;

    m_airline_leg_fare_base_code_isSet = false;
    m_airline_leg_fare_base_code_isValid = false;

    m_airline_leg_flight_number_isSet = false;
    m_airline_leg_flight_number_isValid = false;

    m_airline_leg_stop_over_code_isSet = false;
    m_airline_leg_stop_over_code_isValid = false;

    m_airline_passenger_date_of_birth_isSet = false;
    m_airline_passenger_date_of_birth_isValid = false;

    m_airline_passenger_first_name_isSet = false;
    m_airline_passenger_first_name_isValid = false;

    m_airline_passenger_last_name_isSet = false;
    m_airline_passenger_last_name_isValid = false;

    m_airline_passenger_telephone_number_isSet = false;
    m_airline_passenger_telephone_number_isValid = false;

    m_airline_passenger_traveller_type_isSet = false;
    m_airline_passenger_traveller_type_isValid = false;

    m_airline_passenger_name_isSet = false;
    m_airline_passenger_name_isValid = false;

    m_airline_ticket_issue_address_isSet = false;
    m_airline_ticket_issue_address_isValid = false;

    m_airline_ticket_number_isSet = false;
    m_airline_ticket_number_isValid = false;

    m_airline_travel_agency_code_isSet = false;
    m_airline_travel_agency_code_isValid = false;

    m_airline_travel_agency_name_isSet = false;
    m_airline_travel_agency_name_isValid = false;

    m_car_rental_check_out_date_isSet = false;
    m_car_rental_check_out_date_isValid = false;

    m_car_rental_customer_service_toll_free_number_isSet = false;
    m_car_rental_customer_service_toll_free_number_isValid = false;

    m_car_rental_days_rented_isSet = false;
    m_car_rental_days_rented_isValid = false;

    m_car_rental_fuel_charges_isSet = false;
    m_car_rental_fuel_charges_isValid = false;

    m_car_rental_insurance_charges_isSet = false;
    m_car_rental_insurance_charges_isValid = false;

    m_car_rental_location_city_isSet = false;
    m_car_rental_location_city_isValid = false;

    m_car_rental_location_country_isSet = false;
    m_car_rental_location_country_isValid = false;

    m_car_rental_location_state_province_isSet = false;
    m_car_rental_location_state_province_isValid = false;

    m_car_rental_no_show_indicator_isSet = false;
    m_car_rental_no_show_indicator_isValid = false;

    m_car_rental_one_way_drop_off_charges_isSet = false;
    m_car_rental_one_way_drop_off_charges_isValid = false;

    m_car_rental_rate_isSet = false;
    m_car_rental_rate_isValid = false;

    m_car_rental_rate_indicator_isSet = false;
    m_car_rental_rate_indicator_isValid = false;

    m_car_rental_rental_agreement_number_isSet = false;
    m_car_rental_rental_agreement_number_isValid = false;

    m_car_rental_rental_class_id_isSet = false;
    m_car_rental_rental_class_id_isValid = false;

    m_car_rental_renter_name_isSet = false;
    m_car_rental_renter_name_isValid = false;

    m_car_rental_return_city_isSet = false;
    m_car_rental_return_city_isValid = false;

    m_car_rental_return_country_isSet = false;
    m_car_rental_return_country_isValid = false;

    m_car_rental_return_date_isSet = false;
    m_car_rental_return_date_isValid = false;

    m_car_rental_return_location_id_isSet = false;
    m_car_rental_return_location_id_isValid = false;

    m_car_rental_return_state_province_isSet = false;
    m_car_rental_return_state_province_isValid = false;

    m_car_rental_tax_exempt_indicator_isSet = false;
    m_car_rental_tax_exempt_indicator_isValid = false;

    m_travel_entertainment_auth_data_duration_isSet = false;
    m_travel_entertainment_auth_data_duration_isValid = false;

    m_travel_entertainment_auth_data_market_isSet = false;
    m_travel_entertainment_auth_data_market_isValid = false;

    m_requested_test_error_response_code_isSet = false;
    m_requested_test_error_response_code_isValid = false;

    m_allow_partial_auth_isSet = false;
    m_allow_partial_auth_isValid = false;

    m_authorisation_type_isSet = false;
    m_authorisation_type_isValid = false;

    m_custom_routing_flag_isSet = false;
    m_custom_routing_flag_isValid = false;

    m_industry_usage_isSet = false;
    m_industry_usage_isValid = false;

    m_manual_capture_isSet = false;
    m_manual_capture_isValid = false;

    m_network_tx_reference_isSet = false;
    m_network_tx_reference_isValid = false;

    m_overwrite_brand_isSet = false;
    m_overwrite_brand_isValid = false;

    m_sub_merchant_city_isSet = false;
    m_sub_merchant_city_isValid = false;

    m_sub_merchant_country_isSet = false;
    m_sub_merchant_country_isValid = false;

    m_sub_merchant_id_isSet = false;
    m_sub_merchant_id_isValid = false;

    m_sub_merchant_name_isSet = false;
    m_sub_merchant_name_isValid = false;

    m_sub_merchant_postal_code_isSet = false;
    m_sub_merchant_postal_code_isValid = false;

    m_sub_merchant_state_isSet = false;
    m_sub_merchant_state_isValid = false;

    m_sub_merchant_street_isSet = false;
    m_sub_merchant_street_isValid = false;

    m_sub_merchant_tax_id_isSet = false;
    m_sub_merchant_tax_id_isValid = false;

    m_enhanced_scheme_data_customer_reference_isSet = false;
    m_enhanced_scheme_data_customer_reference_isValid = false;

    m_enhanced_scheme_data_destination_country_code_isSet = false;
    m_enhanced_scheme_data_destination_country_code_isValid = false;

    m_enhanced_scheme_data_destination_postal_code_isSet = false;
    m_enhanced_scheme_data_destination_postal_code_isValid = false;

    m_enhanced_scheme_data_destination_state_province_code_isSet = false;
    m_enhanced_scheme_data_destination_state_province_code_isValid = false;

    m_enhanced_scheme_data_duty_amount_isSet = false;
    m_enhanced_scheme_data_duty_amount_isValid = false;

    m_enhanced_scheme_data_freight_amount_isSet = false;
    m_enhanced_scheme_data_freight_amount_isValid = false;

    m_enhanced_scheme_data_item_detail_line_item_nr_commodity_code_isSet = false;
    m_enhanced_scheme_data_item_detail_line_item_nr_commodity_code_isValid = false;

    m_enhanced_scheme_data_item_detail_line_item_nr_description_isSet = false;
    m_enhanced_scheme_data_item_detail_line_item_nr_description_isValid = false;

    m_enhanced_scheme_data_item_detail_line_item_nr_discount_amount_isSet = false;
    m_enhanced_scheme_data_item_detail_line_item_nr_discount_amount_isValid = false;

    m_enhanced_scheme_data_item_detail_line_item_nr_product_code_isSet = false;
    m_enhanced_scheme_data_item_detail_line_item_nr_product_code_isValid = false;

    m_enhanced_scheme_data_item_detail_line_item_nr_quantity_isSet = false;
    m_enhanced_scheme_data_item_detail_line_item_nr_quantity_isValid = false;

    m_enhanced_scheme_data_item_detail_line_item_nr_total_amount_isSet = false;
    m_enhanced_scheme_data_item_detail_line_item_nr_total_amount_isValid = false;

    m_enhanced_scheme_data_item_detail_line_item_nr_unit_of_measure_isSet = false;
    m_enhanced_scheme_data_item_detail_line_item_nr_unit_of_measure_isValid = false;

    m_enhanced_scheme_data_item_detail_line_item_nr_unit_price_isSet = false;
    m_enhanced_scheme_data_item_detail_line_item_nr_unit_price_isValid = false;

    m_enhanced_scheme_data_order_date_isSet = false;
    m_enhanced_scheme_data_order_date_isValid = false;

    m_enhanced_scheme_data_ship_from_postal_code_isSet = false;
    m_enhanced_scheme_data_ship_from_postal_code_isValid = false;

    m_enhanced_scheme_data_total_tax_amount_isSet = false;
    m_enhanced_scheme_data_total_tax_amount_isValid = false;

    m_lodging_check_in_date_isSet = false;
    m_lodging_check_in_date_isValid = false;

    m_lodging_check_out_date_isSet = false;
    m_lodging_check_out_date_isValid = false;

    m_lodging_customer_service_toll_free_number_isSet = false;
    m_lodging_customer_service_toll_free_number_isValid = false;

    m_lodging_fire_safety_act_indicator_isSet = false;
    m_lodging_fire_safety_act_indicator_isValid = false;

    m_lodging_folio_cash_advances_isSet = false;
    m_lodging_folio_cash_advances_isValid = false;

    m_lodging_folio_number_isSet = false;
    m_lodging_folio_number_isValid = false;

    m_lodging_food_beverage_charges_isSet = false;
    m_lodging_food_beverage_charges_isValid = false;

    m_lodging_no_show_indicator_isSet = false;
    m_lodging_no_show_indicator_isValid = false;

    m_lodging_prepaid_expenses_isSet = false;
    m_lodging_prepaid_expenses_isValid = false;

    m_lodging_property_phone_number_isSet = false;
    m_lodging_property_phone_number_isValid = false;

    m_lodging_room1_number_of_nights_isSet = false;
    m_lodging_room1_number_of_nights_isValid = false;

    m_lodging_room1_rate_isSet = false;
    m_lodging_room1_rate_isValid = false;

    m_lodging_total_room_tax_isSet = false;
    m_lodging_total_room_tax_isValid = false;

    m_lodging_total_tax_isSet = false;
    m_lodging_total_tax_isValid = false;

    m_openinvoicedata_merchant_data_isSet = false;
    m_openinvoicedata_merchant_data_isValid = false;

    m_openinvoicedata_number_of_lines_isSet = false;
    m_openinvoicedata_number_of_lines_isValid = false;

    m_openinvoicedata_recipient_first_name_isSet = false;
    m_openinvoicedata_recipient_first_name_isValid = false;

    m_openinvoicedata_recipient_last_name_isSet = false;
    m_openinvoicedata_recipient_last_name_isValid = false;

    m_openinvoicedata_line_item_nr_currency_code_isSet = false;
    m_openinvoicedata_line_item_nr_currency_code_isValid = false;

    m_openinvoicedata_line_item_nr_description_isSet = false;
    m_openinvoicedata_line_item_nr_description_isValid = false;

    m_openinvoicedata_line_item_nr_item_amount_isSet = false;
    m_openinvoicedata_line_item_nr_item_amount_isValid = false;

    m_openinvoicedata_line_item_nr_item_id_isSet = false;
    m_openinvoicedata_line_item_nr_item_id_isValid = false;

    m_openinvoicedata_line_item_nr_item_vat_amount_isSet = false;
    m_openinvoicedata_line_item_nr_item_vat_amount_isValid = false;

    m_openinvoicedata_line_item_nr_item_vat_percentage_isSet = false;
    m_openinvoicedata_line_item_nr_item_vat_percentage_isValid = false;

    m_openinvoicedata_line_item_nr_number_of_items_isSet = false;
    m_openinvoicedata_line_item_nr_number_of_items_isValid = false;

    m_openinvoicedata_line_item_nr_return_shipping_company_isSet = false;
    m_openinvoicedata_line_item_nr_return_shipping_company_isValid = false;

    m_openinvoicedata_line_item_nr_return_tracking_number_isSet = false;
    m_openinvoicedata_line_item_nr_return_tracking_number_isValid = false;

    m_openinvoicedata_line_item_nr_return_tracking_uri_isSet = false;
    m_openinvoicedata_line_item_nr_return_tracking_uri_isValid = false;

    m_openinvoicedata_line_item_nr_shipping_company_isSet = false;
    m_openinvoicedata_line_item_nr_shipping_company_isValid = false;

    m_openinvoicedata_line_item_nr_shipping_method_isSet = false;
    m_openinvoicedata_line_item_nr_shipping_method_isValid = false;

    m_openinvoicedata_line_item_nr_tracking_number_isSet = false;
    m_openinvoicedata_line_item_nr_tracking_number_isValid = false;

    m_openinvoicedata_line_item_nr_tracking_uri_isSet = false;
    m_openinvoicedata_line_item_nr_tracking_uri_isValid = false;

    m_opi_include_trans_token_isSet = false;
    m_opi_include_trans_token_isValid = false;

    m_ratepay_installment_amount_isSet = false;
    m_ratepay_installment_amount_isValid = false;

    m_ratepay_interest_rate_isSet = false;
    m_ratepay_interest_rate_isValid = false;

    m_ratepay_last_installment_amount_isSet = false;
    m_ratepay_last_installment_amount_isValid = false;

    m_ratepay_payment_firstday_isSet = false;
    m_ratepay_payment_firstday_isValid = false;

    m_ratepaydata_delivery_date_isSet = false;
    m_ratepaydata_delivery_date_isValid = false;

    m_ratepaydata_due_date_isSet = false;
    m_ratepaydata_due_date_isValid = false;

    m_ratepaydata_invoice_date_isSet = false;
    m_ratepaydata_invoice_date_isValid = false;

    m_ratepaydata_invoice_id_isSet = false;
    m_ratepaydata_invoice_id_isValid = false;

    m_retry_chain_attempt_number_isSet = false;
    m_retry_chain_attempt_number_isValid = false;

    m_retry_order_attempt_number_isSet = false;
    m_retry_order_attempt_number_isValid = false;

    m_retry_skip_retry_isSet = false;
    m_retry_skip_retry_isValid = false;

    m_riskdata__custom_field_name_isSet = false;
    m_riskdata__custom_field_name_isValid = false;

    m_riskdata_basket_item_item_nr_amount_per_item_isSet = false;
    m_riskdata_basket_item_item_nr_amount_per_item_isValid = false;

    m_riskdata_basket_item_item_nr_brand_isSet = false;
    m_riskdata_basket_item_item_nr_brand_isValid = false;

    m_riskdata_basket_item_item_nr_category_isSet = false;
    m_riskdata_basket_item_item_nr_category_isValid = false;

    m_riskdata_basket_item_item_nr_color_isSet = false;
    m_riskdata_basket_item_item_nr_color_isValid = false;

    m_riskdata_basket_item_item_nr_currency_isSet = false;
    m_riskdata_basket_item_item_nr_currency_isValid = false;

    m_riskdata_basket_item_item_nr_item_id_isSet = false;
    m_riskdata_basket_item_item_nr_item_id_isValid = false;

    m_riskdata_basket_item_item_nr_manufacturer_isSet = false;
    m_riskdata_basket_item_item_nr_manufacturer_isValid = false;

    m_riskdata_basket_item_item_nr_product_title_isSet = false;
    m_riskdata_basket_item_item_nr_product_title_isValid = false;

    m_riskdata_basket_item_item_nr_quantity_isSet = false;
    m_riskdata_basket_item_item_nr_quantity_isValid = false;

    m_riskdata_basket_item_item_nr_receiver_email_isSet = false;
    m_riskdata_basket_item_item_nr_receiver_email_isValid = false;

    m_riskdata_basket_item_item_nr_size_isSet = false;
    m_riskdata_basket_item_item_nr_size_isValid = false;

    m_riskdata_basket_item_item_nr_sku_isSet = false;
    m_riskdata_basket_item_item_nr_sku_isValid = false;

    m_riskdata_basket_item_item_nr_upc_isSet = false;
    m_riskdata_basket_item_item_nr_upc_isValid = false;

    m_riskdata_promotions_promotion_item_nr_promotion_code_isSet = false;
    m_riskdata_promotions_promotion_item_nr_promotion_code_isValid = false;

    m_riskdata_promotions_promotion_item_nr_promotion_discount_amount_isSet = false;
    m_riskdata_promotions_promotion_item_nr_promotion_discount_amount_isValid = false;

    m_riskdata_promotions_promotion_item_nr_promotion_discount_currency_isSet = false;
    m_riskdata_promotions_promotion_item_nr_promotion_discount_currency_isValid = false;

    m_riskdata_promotions_promotion_item_nr_promotion_discount_percentage_isSet = false;
    m_riskdata_promotions_promotion_item_nr_promotion_discount_percentage_isValid = false;

    m_riskdata_promotions_promotion_item_nr_promotion_name_isSet = false;
    m_riskdata_promotions_promotion_item_nr_promotion_name_isValid = false;

    m_riskdata_risk_profile_reference_isSet = false;
    m_riskdata_risk_profile_reference_isValid = false;

    m_riskdata_skip_risk_isSet = false;
    m_riskdata_skip_risk_isValid = false;

    m_pay_pal_country_code_isSet = false;
    m_pay_pal_country_code_isValid = false;

    m_pay_pal_email_id_isSet = false;
    m_pay_pal_email_id_isValid = false;

    m_pay_pal_first_name_isSet = false;
    m_pay_pal_first_name_isValid = false;

    m_pay_pal_last_name_isSet = false;
    m_pay_pal_last_name_isValid = false;

    m_pay_pal_payer_id_isSet = false;
    m_pay_pal_payer_id_isValid = false;

    m_pay_pal_phone_isSet = false;
    m_pay_pal_phone_isValid = false;

    m_pay_pal_protection_eligibility_isSet = false;
    m_pay_pal_protection_eligibility_isValid = false;

    m_pay_pal_transaction_id_isSet = false;
    m_pay_pal_transaction_id_isValid = false;

    m_avs_result_raw_isSet = false;
    m_avs_result_raw_isValid = false;

    m_bin_isSet = false;
    m_bin_isValid = false;

    m_cvc_result_raw_isSet = false;
    m_cvc_result_raw_isValid = false;

    m_risk_token_isSet = false;
    m_risk_token_isValid = false;

    m_three_d_authenticated_isSet = false;
    m_three_d_authenticated_isValid = false;

    m_three_d_offered_isSet = false;
    m_three_d_offered_isValid = false;

    m_token_data_type_isSet = false;
    m_token_data_type_isValid = false;

    m_sub_merchant_number_of_sub_sellers_isSet = false;
    m_sub_merchant_number_of_sub_sellers_isValid = false;

    m_sub_merchant_sub_seller_sub_seller_nr_city_isSet = false;
    m_sub_merchant_sub_seller_sub_seller_nr_city_isValid = false;

    m_sub_merchant_sub_seller_sub_seller_nr_country_isSet = false;
    m_sub_merchant_sub_seller_sub_seller_nr_country_isValid = false;

    m_sub_merchant_sub_seller_sub_seller_nr_id_isSet = false;
    m_sub_merchant_sub_seller_sub_seller_nr_id_isValid = false;

    m_sub_merchant_sub_seller_sub_seller_nr_mcc_isSet = false;
    m_sub_merchant_sub_seller_sub_seller_nr_mcc_isValid = false;

    m_sub_merchant_sub_seller_sub_seller_nr_name_isSet = false;
    m_sub_merchant_sub_seller_sub_seller_nr_name_isValid = false;

    m_sub_merchant_sub_seller_sub_seller_nr_postal_code_isSet = false;
    m_sub_merchant_sub_seller_sub_seller_nr_postal_code_isValid = false;

    m_sub_merchant_sub_seller_sub_seller_nr_state_isSet = false;
    m_sub_merchant_sub_seller_sub_seller_nr_state_isValid = false;

    m_sub_merchant_sub_seller_sub_seller_nr_street_isSet = false;
    m_sub_merchant_sub_seller_sub_seller_nr_street_isValid = false;

    m_sub_merchant_sub_seller_sub_seller_nr_tax_id_isSet = false;
    m_sub_merchant_sub_seller_sub_seller_nr_tax_id_isValid = false;

    m_enhanced_scheme_data_employee_name_isSet = false;
    m_enhanced_scheme_data_employee_name_isValid = false;

    m_enhanced_scheme_data_job_description_isSet = false;
    m_enhanced_scheme_data_job_description_isValid = false;

    m_enhanced_scheme_data_regular_hours_rate_isSet = false;
    m_enhanced_scheme_data_regular_hours_rate_isValid = false;

    m_enhanced_scheme_data_regular_hours_worked_isSet = false;
    m_enhanced_scheme_data_regular_hours_worked_isValid = false;

    m_enhanced_scheme_data_request_name_isSet = false;
    m_enhanced_scheme_data_request_name_isValid = false;

    m_enhanced_scheme_data_temp_start_date_isSet = false;
    m_enhanced_scheme_data_temp_start_date_isValid = false;

    m_enhanced_scheme_data_temp_week_ending_isSet = false;
    m_enhanced_scheme_data_temp_week_ending_isValid = false;

    m_androidpay_token_isSet = false;
    m_androidpay_token_isValid = false;

    m_masterpass_transaction_id_isSet = false;
    m_masterpass_transaction_id_isValid = false;

    m_payment_token_isSet = false;
    m_payment_token_isValid = false;

    m_paywithgoogle_token_isSet = false;
    m_paywithgoogle_token_isValid = false;

    m_samsungpay_token_isSet = false;
    m_samsungpay_token_isValid = false;

    m_visacheckout_call_id_isSet = false;
    m_visacheckout_call_id_isValid = false;
}

void OAIPaymentRequest_additionalData::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPaymentRequest_additionalData::fromJsonObject(QJsonObject json) {

    m_allow3_ds2_isValid = ::OpenAPI::fromJsonValue(m_allow3_ds2, json[QString("allow3DS2")]);
    m_allow3_ds2_isSet = !json[QString("allow3DS2")].isNull() && m_allow3_ds2_isValid;

    m_challenge_window_size_isValid = ::OpenAPI::fromJsonValue(m_challenge_window_size, json[QString("challengeWindowSize")]);
    m_challenge_window_size_isSet = !json[QString("challengeWindowSize")].isNull() && m_challenge_window_size_isValid;

    m_execute_three_d_isValid = ::OpenAPI::fromJsonValue(m_execute_three_d, json[QString("executeThreeD")]);
    m_execute_three_d_isSet = !json[QString("executeThreeD")].isNull() && m_execute_three_d_isValid;

    m_mpi_implementation_type_isValid = ::OpenAPI::fromJsonValue(m_mpi_implementation_type, json[QString("mpiImplementationType")]);
    m_mpi_implementation_type_isSet = !json[QString("mpiImplementationType")].isNull() && m_mpi_implementation_type_isValid;

    m_sca_exemption_isValid = ::OpenAPI::fromJsonValue(m_sca_exemption, json[QString("scaExemption")]);
    m_sca_exemption_isSet = !json[QString("scaExemption")].isNull() && m_sca_exemption_isValid;

    m_three_ds_version_isValid = ::OpenAPI::fromJsonValue(m_three_ds_version, json[QString("threeDSVersion")]);
    m_three_ds_version_isSet = !json[QString("threeDSVersion")].isNull() && m_three_ds_version_isValid;

    m_airline_agency_invoice_number_isValid = ::OpenAPI::fromJsonValue(m_airline_agency_invoice_number, json[QString("airline.agency_invoice_number")]);
    m_airline_agency_invoice_number_isSet = !json[QString("airline.agency_invoice_number")].isNull() && m_airline_agency_invoice_number_isValid;

    m_airline_agency_plan_name_isValid = ::OpenAPI::fromJsonValue(m_airline_agency_plan_name, json[QString("airline.agency_plan_name")]);
    m_airline_agency_plan_name_isSet = !json[QString("airline.agency_plan_name")].isNull() && m_airline_agency_plan_name_isValid;

    m_airline_airline_code_isValid = ::OpenAPI::fromJsonValue(m_airline_airline_code, json[QString("airline.airline_code")]);
    m_airline_airline_code_isSet = !json[QString("airline.airline_code")].isNull() && m_airline_airline_code_isValid;

    m_airline_airline_designator_code_isValid = ::OpenAPI::fromJsonValue(m_airline_airline_designator_code, json[QString("airline.airline_designator_code")]);
    m_airline_airline_designator_code_isSet = !json[QString("airline.airline_designator_code")].isNull() && m_airline_airline_designator_code_isValid;

    m_airline_boarding_fee_isValid = ::OpenAPI::fromJsonValue(m_airline_boarding_fee, json[QString("airline.boarding_fee")]);
    m_airline_boarding_fee_isSet = !json[QString("airline.boarding_fee")].isNull() && m_airline_boarding_fee_isValid;

    m_airline_computerized_reservation_system_isValid = ::OpenAPI::fromJsonValue(m_airline_computerized_reservation_system, json[QString("airline.computerized_reservation_system")]);
    m_airline_computerized_reservation_system_isSet = !json[QString("airline.computerized_reservation_system")].isNull() && m_airline_computerized_reservation_system_isValid;

    m_airline_customer_reference_number_isValid = ::OpenAPI::fromJsonValue(m_airline_customer_reference_number, json[QString("airline.customer_reference_number")]);
    m_airline_customer_reference_number_isSet = !json[QString("airline.customer_reference_number")].isNull() && m_airline_customer_reference_number_isValid;

    m_airline_document_type_isValid = ::OpenAPI::fromJsonValue(m_airline_document_type, json[QString("airline.document_type")]);
    m_airline_document_type_isSet = !json[QString("airline.document_type")].isNull() && m_airline_document_type_isValid;

    m_airline_flight_date_isValid = ::OpenAPI::fromJsonValue(m_airline_flight_date, json[QString("airline.flight_date")]);
    m_airline_flight_date_isSet = !json[QString("airline.flight_date")].isNull() && m_airline_flight_date_isValid;

    m_airline_leg_carrier_code_isValid = ::OpenAPI::fromJsonValue(m_airline_leg_carrier_code, json[QString("airline.leg.carrier_code")]);
    m_airline_leg_carrier_code_isSet = !json[QString("airline.leg.carrier_code")].isNull() && m_airline_leg_carrier_code_isValid;

    m_airline_leg_class_of_travel_isValid = ::OpenAPI::fromJsonValue(m_airline_leg_class_of_travel, json[QString("airline.leg.class_of_travel")]);
    m_airline_leg_class_of_travel_isSet = !json[QString("airline.leg.class_of_travel")].isNull() && m_airline_leg_class_of_travel_isValid;

    m_airline_leg_date_of_travel_isValid = ::OpenAPI::fromJsonValue(m_airline_leg_date_of_travel, json[QString("airline.leg.date_of_travel")]);
    m_airline_leg_date_of_travel_isSet = !json[QString("airline.leg.date_of_travel")].isNull() && m_airline_leg_date_of_travel_isValid;

    m_airline_leg_depart_airport_isValid = ::OpenAPI::fromJsonValue(m_airline_leg_depart_airport, json[QString("airline.leg.depart_airport")]);
    m_airline_leg_depart_airport_isSet = !json[QString("airline.leg.depart_airport")].isNull() && m_airline_leg_depart_airport_isValid;

    m_airline_leg_depart_tax_isValid = ::OpenAPI::fromJsonValue(m_airline_leg_depart_tax, json[QString("airline.leg.depart_tax")]);
    m_airline_leg_depart_tax_isSet = !json[QString("airline.leg.depart_tax")].isNull() && m_airline_leg_depart_tax_isValid;

    m_airline_leg_destination_code_isValid = ::OpenAPI::fromJsonValue(m_airline_leg_destination_code, json[QString("airline.leg.destination_code")]);
    m_airline_leg_destination_code_isSet = !json[QString("airline.leg.destination_code")].isNull() && m_airline_leg_destination_code_isValid;

    m_airline_leg_fare_base_code_isValid = ::OpenAPI::fromJsonValue(m_airline_leg_fare_base_code, json[QString("airline.leg.fare_base_code")]);
    m_airline_leg_fare_base_code_isSet = !json[QString("airline.leg.fare_base_code")].isNull() && m_airline_leg_fare_base_code_isValid;

    m_airline_leg_flight_number_isValid = ::OpenAPI::fromJsonValue(m_airline_leg_flight_number, json[QString("airline.leg.flight_number")]);
    m_airline_leg_flight_number_isSet = !json[QString("airline.leg.flight_number")].isNull() && m_airline_leg_flight_number_isValid;

    m_airline_leg_stop_over_code_isValid = ::OpenAPI::fromJsonValue(m_airline_leg_stop_over_code, json[QString("airline.leg.stop_over_code")]);
    m_airline_leg_stop_over_code_isSet = !json[QString("airline.leg.stop_over_code")].isNull() && m_airline_leg_stop_over_code_isValid;

    m_airline_passenger_date_of_birth_isValid = ::OpenAPI::fromJsonValue(m_airline_passenger_date_of_birth, json[QString("airline.passenger.date_of_birth")]);
    m_airline_passenger_date_of_birth_isSet = !json[QString("airline.passenger.date_of_birth")].isNull() && m_airline_passenger_date_of_birth_isValid;

    m_airline_passenger_first_name_isValid = ::OpenAPI::fromJsonValue(m_airline_passenger_first_name, json[QString("airline.passenger.first_name")]);
    m_airline_passenger_first_name_isSet = !json[QString("airline.passenger.first_name")].isNull() && m_airline_passenger_first_name_isValid;

    m_airline_passenger_last_name_isValid = ::OpenAPI::fromJsonValue(m_airline_passenger_last_name, json[QString("airline.passenger.last_name")]);
    m_airline_passenger_last_name_isSet = !json[QString("airline.passenger.last_name")].isNull() && m_airline_passenger_last_name_isValid;

    m_airline_passenger_telephone_number_isValid = ::OpenAPI::fromJsonValue(m_airline_passenger_telephone_number, json[QString("airline.passenger.telephone_number")]);
    m_airline_passenger_telephone_number_isSet = !json[QString("airline.passenger.telephone_number")].isNull() && m_airline_passenger_telephone_number_isValid;

    m_airline_passenger_traveller_type_isValid = ::OpenAPI::fromJsonValue(m_airline_passenger_traveller_type, json[QString("airline.passenger.traveller_type")]);
    m_airline_passenger_traveller_type_isSet = !json[QString("airline.passenger.traveller_type")].isNull() && m_airline_passenger_traveller_type_isValid;

    m_airline_passenger_name_isValid = ::OpenAPI::fromJsonValue(m_airline_passenger_name, json[QString("airline.passenger_name")]);
    m_airline_passenger_name_isSet = !json[QString("airline.passenger_name")].isNull() && m_airline_passenger_name_isValid;

    m_airline_ticket_issue_address_isValid = ::OpenAPI::fromJsonValue(m_airline_ticket_issue_address, json[QString("airline.ticket_issue_address")]);
    m_airline_ticket_issue_address_isSet = !json[QString("airline.ticket_issue_address")].isNull() && m_airline_ticket_issue_address_isValid;

    m_airline_ticket_number_isValid = ::OpenAPI::fromJsonValue(m_airline_ticket_number, json[QString("airline.ticket_number")]);
    m_airline_ticket_number_isSet = !json[QString("airline.ticket_number")].isNull() && m_airline_ticket_number_isValid;

    m_airline_travel_agency_code_isValid = ::OpenAPI::fromJsonValue(m_airline_travel_agency_code, json[QString("airline.travel_agency_code")]);
    m_airline_travel_agency_code_isSet = !json[QString("airline.travel_agency_code")].isNull() && m_airline_travel_agency_code_isValid;

    m_airline_travel_agency_name_isValid = ::OpenAPI::fromJsonValue(m_airline_travel_agency_name, json[QString("airline.travel_agency_name")]);
    m_airline_travel_agency_name_isSet = !json[QString("airline.travel_agency_name")].isNull() && m_airline_travel_agency_name_isValid;

    m_car_rental_check_out_date_isValid = ::OpenAPI::fromJsonValue(m_car_rental_check_out_date, json[QString("carRental.checkOutDate")]);
    m_car_rental_check_out_date_isSet = !json[QString("carRental.checkOutDate")].isNull() && m_car_rental_check_out_date_isValid;

    m_car_rental_customer_service_toll_free_number_isValid = ::OpenAPI::fromJsonValue(m_car_rental_customer_service_toll_free_number, json[QString("carRental.customerServiceTollFreeNumber")]);
    m_car_rental_customer_service_toll_free_number_isSet = !json[QString("carRental.customerServiceTollFreeNumber")].isNull() && m_car_rental_customer_service_toll_free_number_isValid;

    m_car_rental_days_rented_isValid = ::OpenAPI::fromJsonValue(m_car_rental_days_rented, json[QString("carRental.daysRented")]);
    m_car_rental_days_rented_isSet = !json[QString("carRental.daysRented")].isNull() && m_car_rental_days_rented_isValid;

    m_car_rental_fuel_charges_isValid = ::OpenAPI::fromJsonValue(m_car_rental_fuel_charges, json[QString("carRental.fuelCharges")]);
    m_car_rental_fuel_charges_isSet = !json[QString("carRental.fuelCharges")].isNull() && m_car_rental_fuel_charges_isValid;

    m_car_rental_insurance_charges_isValid = ::OpenAPI::fromJsonValue(m_car_rental_insurance_charges, json[QString("carRental.insuranceCharges")]);
    m_car_rental_insurance_charges_isSet = !json[QString("carRental.insuranceCharges")].isNull() && m_car_rental_insurance_charges_isValid;

    m_car_rental_location_city_isValid = ::OpenAPI::fromJsonValue(m_car_rental_location_city, json[QString("carRental.locationCity")]);
    m_car_rental_location_city_isSet = !json[QString("carRental.locationCity")].isNull() && m_car_rental_location_city_isValid;

    m_car_rental_location_country_isValid = ::OpenAPI::fromJsonValue(m_car_rental_location_country, json[QString("carRental.locationCountry")]);
    m_car_rental_location_country_isSet = !json[QString("carRental.locationCountry")].isNull() && m_car_rental_location_country_isValid;

    m_car_rental_location_state_province_isValid = ::OpenAPI::fromJsonValue(m_car_rental_location_state_province, json[QString("carRental.locationStateProvince")]);
    m_car_rental_location_state_province_isSet = !json[QString("carRental.locationStateProvince")].isNull() && m_car_rental_location_state_province_isValid;

    m_car_rental_no_show_indicator_isValid = ::OpenAPI::fromJsonValue(m_car_rental_no_show_indicator, json[QString("carRental.noShowIndicator")]);
    m_car_rental_no_show_indicator_isSet = !json[QString("carRental.noShowIndicator")].isNull() && m_car_rental_no_show_indicator_isValid;

    m_car_rental_one_way_drop_off_charges_isValid = ::OpenAPI::fromJsonValue(m_car_rental_one_way_drop_off_charges, json[QString("carRental.oneWayDropOffCharges")]);
    m_car_rental_one_way_drop_off_charges_isSet = !json[QString("carRental.oneWayDropOffCharges")].isNull() && m_car_rental_one_way_drop_off_charges_isValid;

    m_car_rental_rate_isValid = ::OpenAPI::fromJsonValue(m_car_rental_rate, json[QString("carRental.rate")]);
    m_car_rental_rate_isSet = !json[QString("carRental.rate")].isNull() && m_car_rental_rate_isValid;

    m_car_rental_rate_indicator_isValid = ::OpenAPI::fromJsonValue(m_car_rental_rate_indicator, json[QString("carRental.rateIndicator")]);
    m_car_rental_rate_indicator_isSet = !json[QString("carRental.rateIndicator")].isNull() && m_car_rental_rate_indicator_isValid;

    m_car_rental_rental_agreement_number_isValid = ::OpenAPI::fromJsonValue(m_car_rental_rental_agreement_number, json[QString("carRental.rentalAgreementNumber")]);
    m_car_rental_rental_agreement_number_isSet = !json[QString("carRental.rentalAgreementNumber")].isNull() && m_car_rental_rental_agreement_number_isValid;

    m_car_rental_rental_class_id_isValid = ::OpenAPI::fromJsonValue(m_car_rental_rental_class_id, json[QString("carRental.rentalClassId")]);
    m_car_rental_rental_class_id_isSet = !json[QString("carRental.rentalClassId")].isNull() && m_car_rental_rental_class_id_isValid;

    m_car_rental_renter_name_isValid = ::OpenAPI::fromJsonValue(m_car_rental_renter_name, json[QString("carRental.renterName")]);
    m_car_rental_renter_name_isSet = !json[QString("carRental.renterName")].isNull() && m_car_rental_renter_name_isValid;

    m_car_rental_return_city_isValid = ::OpenAPI::fromJsonValue(m_car_rental_return_city, json[QString("carRental.returnCity")]);
    m_car_rental_return_city_isSet = !json[QString("carRental.returnCity")].isNull() && m_car_rental_return_city_isValid;

    m_car_rental_return_country_isValid = ::OpenAPI::fromJsonValue(m_car_rental_return_country, json[QString("carRental.returnCountry")]);
    m_car_rental_return_country_isSet = !json[QString("carRental.returnCountry")].isNull() && m_car_rental_return_country_isValid;

    m_car_rental_return_date_isValid = ::OpenAPI::fromJsonValue(m_car_rental_return_date, json[QString("carRental.returnDate")]);
    m_car_rental_return_date_isSet = !json[QString("carRental.returnDate")].isNull() && m_car_rental_return_date_isValid;

    m_car_rental_return_location_id_isValid = ::OpenAPI::fromJsonValue(m_car_rental_return_location_id, json[QString("carRental.returnLocationId")]);
    m_car_rental_return_location_id_isSet = !json[QString("carRental.returnLocationId")].isNull() && m_car_rental_return_location_id_isValid;

    m_car_rental_return_state_province_isValid = ::OpenAPI::fromJsonValue(m_car_rental_return_state_province, json[QString("carRental.returnStateProvince")]);
    m_car_rental_return_state_province_isSet = !json[QString("carRental.returnStateProvince")].isNull() && m_car_rental_return_state_province_isValid;

    m_car_rental_tax_exempt_indicator_isValid = ::OpenAPI::fromJsonValue(m_car_rental_tax_exempt_indicator, json[QString("carRental.taxExemptIndicator")]);
    m_car_rental_tax_exempt_indicator_isSet = !json[QString("carRental.taxExemptIndicator")].isNull() && m_car_rental_tax_exempt_indicator_isValid;

    m_travel_entertainment_auth_data_duration_isValid = ::OpenAPI::fromJsonValue(m_travel_entertainment_auth_data_duration, json[QString("travelEntertainmentAuthData.duration")]);
    m_travel_entertainment_auth_data_duration_isSet = !json[QString("travelEntertainmentAuthData.duration")].isNull() && m_travel_entertainment_auth_data_duration_isValid;

    m_travel_entertainment_auth_data_market_isValid = ::OpenAPI::fromJsonValue(m_travel_entertainment_auth_data_market, json[QString("travelEntertainmentAuthData.market")]);
    m_travel_entertainment_auth_data_market_isSet = !json[QString("travelEntertainmentAuthData.market")].isNull() && m_travel_entertainment_auth_data_market_isValid;

    m_requested_test_error_response_code_isValid = ::OpenAPI::fromJsonValue(m_requested_test_error_response_code, json[QString("RequestedTestErrorResponseCode")]);
    m_requested_test_error_response_code_isSet = !json[QString("RequestedTestErrorResponseCode")].isNull() && m_requested_test_error_response_code_isValid;

    m_allow_partial_auth_isValid = ::OpenAPI::fromJsonValue(m_allow_partial_auth, json[QString("allowPartialAuth")]);
    m_allow_partial_auth_isSet = !json[QString("allowPartialAuth")].isNull() && m_allow_partial_auth_isValid;

    m_authorisation_type_isValid = ::OpenAPI::fromJsonValue(m_authorisation_type, json[QString("authorisationType")]);
    m_authorisation_type_isSet = !json[QString("authorisationType")].isNull() && m_authorisation_type_isValid;

    m_custom_routing_flag_isValid = ::OpenAPI::fromJsonValue(m_custom_routing_flag, json[QString("customRoutingFlag")]);
    m_custom_routing_flag_isSet = !json[QString("customRoutingFlag")].isNull() && m_custom_routing_flag_isValid;

    m_industry_usage_isValid = ::OpenAPI::fromJsonValue(m_industry_usage, json[QString("industryUsage")]);
    m_industry_usage_isSet = !json[QString("industryUsage")].isNull() && m_industry_usage_isValid;

    m_manual_capture_isValid = ::OpenAPI::fromJsonValue(m_manual_capture, json[QString("manualCapture")]);
    m_manual_capture_isSet = !json[QString("manualCapture")].isNull() && m_manual_capture_isValid;

    m_network_tx_reference_isValid = ::OpenAPI::fromJsonValue(m_network_tx_reference, json[QString("networkTxReference")]);
    m_network_tx_reference_isSet = !json[QString("networkTxReference")].isNull() && m_network_tx_reference_isValid;

    m_overwrite_brand_isValid = ::OpenAPI::fromJsonValue(m_overwrite_brand, json[QString("overwriteBrand")]);
    m_overwrite_brand_isSet = !json[QString("overwriteBrand")].isNull() && m_overwrite_brand_isValid;

    m_sub_merchant_city_isValid = ::OpenAPI::fromJsonValue(m_sub_merchant_city, json[QString("subMerchantCity")]);
    m_sub_merchant_city_isSet = !json[QString("subMerchantCity")].isNull() && m_sub_merchant_city_isValid;

    m_sub_merchant_country_isValid = ::OpenAPI::fromJsonValue(m_sub_merchant_country, json[QString("subMerchantCountry")]);
    m_sub_merchant_country_isSet = !json[QString("subMerchantCountry")].isNull() && m_sub_merchant_country_isValid;

    m_sub_merchant_id_isValid = ::OpenAPI::fromJsonValue(m_sub_merchant_id, json[QString("subMerchantID")]);
    m_sub_merchant_id_isSet = !json[QString("subMerchantID")].isNull() && m_sub_merchant_id_isValid;

    m_sub_merchant_name_isValid = ::OpenAPI::fromJsonValue(m_sub_merchant_name, json[QString("subMerchantName")]);
    m_sub_merchant_name_isSet = !json[QString("subMerchantName")].isNull() && m_sub_merchant_name_isValid;

    m_sub_merchant_postal_code_isValid = ::OpenAPI::fromJsonValue(m_sub_merchant_postal_code, json[QString("subMerchantPostalCode")]);
    m_sub_merchant_postal_code_isSet = !json[QString("subMerchantPostalCode")].isNull() && m_sub_merchant_postal_code_isValid;

    m_sub_merchant_state_isValid = ::OpenAPI::fromJsonValue(m_sub_merchant_state, json[QString("subMerchantState")]);
    m_sub_merchant_state_isSet = !json[QString("subMerchantState")].isNull() && m_sub_merchant_state_isValid;

    m_sub_merchant_street_isValid = ::OpenAPI::fromJsonValue(m_sub_merchant_street, json[QString("subMerchantStreet")]);
    m_sub_merchant_street_isSet = !json[QString("subMerchantStreet")].isNull() && m_sub_merchant_street_isValid;

    m_sub_merchant_tax_id_isValid = ::OpenAPI::fromJsonValue(m_sub_merchant_tax_id, json[QString("subMerchantTaxId")]);
    m_sub_merchant_tax_id_isSet = !json[QString("subMerchantTaxId")].isNull() && m_sub_merchant_tax_id_isValid;

    m_enhanced_scheme_data_customer_reference_isValid = ::OpenAPI::fromJsonValue(m_enhanced_scheme_data_customer_reference, json[QString("enhancedSchemeData.customerReference")]);
    m_enhanced_scheme_data_customer_reference_isSet = !json[QString("enhancedSchemeData.customerReference")].isNull() && m_enhanced_scheme_data_customer_reference_isValid;

    m_enhanced_scheme_data_destination_country_code_isValid = ::OpenAPI::fromJsonValue(m_enhanced_scheme_data_destination_country_code, json[QString("enhancedSchemeData.destinationCountryCode")]);
    m_enhanced_scheme_data_destination_country_code_isSet = !json[QString("enhancedSchemeData.destinationCountryCode")].isNull() && m_enhanced_scheme_data_destination_country_code_isValid;

    m_enhanced_scheme_data_destination_postal_code_isValid = ::OpenAPI::fromJsonValue(m_enhanced_scheme_data_destination_postal_code, json[QString("enhancedSchemeData.destinationPostalCode")]);
    m_enhanced_scheme_data_destination_postal_code_isSet = !json[QString("enhancedSchemeData.destinationPostalCode")].isNull() && m_enhanced_scheme_data_destination_postal_code_isValid;

    m_enhanced_scheme_data_destination_state_province_code_isValid = ::OpenAPI::fromJsonValue(m_enhanced_scheme_data_destination_state_province_code, json[QString("enhancedSchemeData.destinationStateProvinceCode")]);
    m_enhanced_scheme_data_destination_state_province_code_isSet = !json[QString("enhancedSchemeData.destinationStateProvinceCode")].isNull() && m_enhanced_scheme_data_destination_state_province_code_isValid;

    m_enhanced_scheme_data_duty_amount_isValid = ::OpenAPI::fromJsonValue(m_enhanced_scheme_data_duty_amount, json[QString("enhancedSchemeData.dutyAmount")]);
    m_enhanced_scheme_data_duty_amount_isSet = !json[QString("enhancedSchemeData.dutyAmount")].isNull() && m_enhanced_scheme_data_duty_amount_isValid;

    m_enhanced_scheme_data_freight_amount_isValid = ::OpenAPI::fromJsonValue(m_enhanced_scheme_data_freight_amount, json[QString("enhancedSchemeData.freightAmount")]);
    m_enhanced_scheme_data_freight_amount_isSet = !json[QString("enhancedSchemeData.freightAmount")].isNull() && m_enhanced_scheme_data_freight_amount_isValid;

    m_enhanced_scheme_data_item_detail_line_item_nr_commodity_code_isValid = ::OpenAPI::fromJsonValue(m_enhanced_scheme_data_item_detail_line_item_nr_commodity_code, json[QString("enhancedSchemeData.itemDetailLine[itemNr].commodityCode")]);
    m_enhanced_scheme_data_item_detail_line_item_nr_commodity_code_isSet = !json[QString("enhancedSchemeData.itemDetailLine[itemNr].commodityCode")].isNull() && m_enhanced_scheme_data_item_detail_line_item_nr_commodity_code_isValid;

    m_enhanced_scheme_data_item_detail_line_item_nr_description_isValid = ::OpenAPI::fromJsonValue(m_enhanced_scheme_data_item_detail_line_item_nr_description, json[QString("enhancedSchemeData.itemDetailLine[itemNr].description")]);
    m_enhanced_scheme_data_item_detail_line_item_nr_description_isSet = !json[QString("enhancedSchemeData.itemDetailLine[itemNr].description")].isNull() && m_enhanced_scheme_data_item_detail_line_item_nr_description_isValid;

    m_enhanced_scheme_data_item_detail_line_item_nr_discount_amount_isValid = ::OpenAPI::fromJsonValue(m_enhanced_scheme_data_item_detail_line_item_nr_discount_amount, json[QString("enhancedSchemeData.itemDetailLine[itemNr].discountAmount")]);
    m_enhanced_scheme_data_item_detail_line_item_nr_discount_amount_isSet = !json[QString("enhancedSchemeData.itemDetailLine[itemNr].discountAmount")].isNull() && m_enhanced_scheme_data_item_detail_line_item_nr_discount_amount_isValid;

    m_enhanced_scheme_data_item_detail_line_item_nr_product_code_isValid = ::OpenAPI::fromJsonValue(m_enhanced_scheme_data_item_detail_line_item_nr_product_code, json[QString("enhancedSchemeData.itemDetailLine[itemNr].productCode")]);
    m_enhanced_scheme_data_item_detail_line_item_nr_product_code_isSet = !json[QString("enhancedSchemeData.itemDetailLine[itemNr].productCode")].isNull() && m_enhanced_scheme_data_item_detail_line_item_nr_product_code_isValid;

    m_enhanced_scheme_data_item_detail_line_item_nr_quantity_isValid = ::OpenAPI::fromJsonValue(m_enhanced_scheme_data_item_detail_line_item_nr_quantity, json[QString("enhancedSchemeData.itemDetailLine[itemNr].quantity")]);
    m_enhanced_scheme_data_item_detail_line_item_nr_quantity_isSet = !json[QString("enhancedSchemeData.itemDetailLine[itemNr].quantity")].isNull() && m_enhanced_scheme_data_item_detail_line_item_nr_quantity_isValid;

    m_enhanced_scheme_data_item_detail_line_item_nr_total_amount_isValid = ::OpenAPI::fromJsonValue(m_enhanced_scheme_data_item_detail_line_item_nr_total_amount, json[QString("enhancedSchemeData.itemDetailLine[itemNr].totalAmount")]);
    m_enhanced_scheme_data_item_detail_line_item_nr_total_amount_isSet = !json[QString("enhancedSchemeData.itemDetailLine[itemNr].totalAmount")].isNull() && m_enhanced_scheme_data_item_detail_line_item_nr_total_amount_isValid;

    m_enhanced_scheme_data_item_detail_line_item_nr_unit_of_measure_isValid = ::OpenAPI::fromJsonValue(m_enhanced_scheme_data_item_detail_line_item_nr_unit_of_measure, json[QString("enhancedSchemeData.itemDetailLine[itemNr].unitOfMeasure")]);
    m_enhanced_scheme_data_item_detail_line_item_nr_unit_of_measure_isSet = !json[QString("enhancedSchemeData.itemDetailLine[itemNr].unitOfMeasure")].isNull() && m_enhanced_scheme_data_item_detail_line_item_nr_unit_of_measure_isValid;

    m_enhanced_scheme_data_item_detail_line_item_nr_unit_price_isValid = ::OpenAPI::fromJsonValue(m_enhanced_scheme_data_item_detail_line_item_nr_unit_price, json[QString("enhancedSchemeData.itemDetailLine[itemNr].unitPrice")]);
    m_enhanced_scheme_data_item_detail_line_item_nr_unit_price_isSet = !json[QString("enhancedSchemeData.itemDetailLine[itemNr].unitPrice")].isNull() && m_enhanced_scheme_data_item_detail_line_item_nr_unit_price_isValid;

    m_enhanced_scheme_data_order_date_isValid = ::OpenAPI::fromJsonValue(m_enhanced_scheme_data_order_date, json[QString("enhancedSchemeData.orderDate")]);
    m_enhanced_scheme_data_order_date_isSet = !json[QString("enhancedSchemeData.orderDate")].isNull() && m_enhanced_scheme_data_order_date_isValid;

    m_enhanced_scheme_data_ship_from_postal_code_isValid = ::OpenAPI::fromJsonValue(m_enhanced_scheme_data_ship_from_postal_code, json[QString("enhancedSchemeData.shipFromPostalCode")]);
    m_enhanced_scheme_data_ship_from_postal_code_isSet = !json[QString("enhancedSchemeData.shipFromPostalCode")].isNull() && m_enhanced_scheme_data_ship_from_postal_code_isValid;

    m_enhanced_scheme_data_total_tax_amount_isValid = ::OpenAPI::fromJsonValue(m_enhanced_scheme_data_total_tax_amount, json[QString("enhancedSchemeData.totalTaxAmount")]);
    m_enhanced_scheme_data_total_tax_amount_isSet = !json[QString("enhancedSchemeData.totalTaxAmount")].isNull() && m_enhanced_scheme_data_total_tax_amount_isValid;

    m_lodging_check_in_date_isValid = ::OpenAPI::fromJsonValue(m_lodging_check_in_date, json[QString("lodging.checkInDate")]);
    m_lodging_check_in_date_isSet = !json[QString("lodging.checkInDate")].isNull() && m_lodging_check_in_date_isValid;

    m_lodging_check_out_date_isValid = ::OpenAPI::fromJsonValue(m_lodging_check_out_date, json[QString("lodging.checkOutDate")]);
    m_lodging_check_out_date_isSet = !json[QString("lodging.checkOutDate")].isNull() && m_lodging_check_out_date_isValid;

    m_lodging_customer_service_toll_free_number_isValid = ::OpenAPI::fromJsonValue(m_lodging_customer_service_toll_free_number, json[QString("lodging.customerServiceTollFreeNumber")]);
    m_lodging_customer_service_toll_free_number_isSet = !json[QString("lodging.customerServiceTollFreeNumber")].isNull() && m_lodging_customer_service_toll_free_number_isValid;

    m_lodging_fire_safety_act_indicator_isValid = ::OpenAPI::fromJsonValue(m_lodging_fire_safety_act_indicator, json[QString("lodging.fireSafetyActIndicator")]);
    m_lodging_fire_safety_act_indicator_isSet = !json[QString("lodging.fireSafetyActIndicator")].isNull() && m_lodging_fire_safety_act_indicator_isValid;

    m_lodging_folio_cash_advances_isValid = ::OpenAPI::fromJsonValue(m_lodging_folio_cash_advances, json[QString("lodging.folioCashAdvances")]);
    m_lodging_folio_cash_advances_isSet = !json[QString("lodging.folioCashAdvances")].isNull() && m_lodging_folio_cash_advances_isValid;

    m_lodging_folio_number_isValid = ::OpenAPI::fromJsonValue(m_lodging_folio_number, json[QString("lodging.folioNumber")]);
    m_lodging_folio_number_isSet = !json[QString("lodging.folioNumber")].isNull() && m_lodging_folio_number_isValid;

    m_lodging_food_beverage_charges_isValid = ::OpenAPI::fromJsonValue(m_lodging_food_beverage_charges, json[QString("lodging.foodBeverageCharges")]);
    m_lodging_food_beverage_charges_isSet = !json[QString("lodging.foodBeverageCharges")].isNull() && m_lodging_food_beverage_charges_isValid;

    m_lodging_no_show_indicator_isValid = ::OpenAPI::fromJsonValue(m_lodging_no_show_indicator, json[QString("lodging.noShowIndicator")]);
    m_lodging_no_show_indicator_isSet = !json[QString("lodging.noShowIndicator")].isNull() && m_lodging_no_show_indicator_isValid;

    m_lodging_prepaid_expenses_isValid = ::OpenAPI::fromJsonValue(m_lodging_prepaid_expenses, json[QString("lodging.prepaidExpenses")]);
    m_lodging_prepaid_expenses_isSet = !json[QString("lodging.prepaidExpenses")].isNull() && m_lodging_prepaid_expenses_isValid;

    m_lodging_property_phone_number_isValid = ::OpenAPI::fromJsonValue(m_lodging_property_phone_number, json[QString("lodging.propertyPhoneNumber")]);
    m_lodging_property_phone_number_isSet = !json[QString("lodging.propertyPhoneNumber")].isNull() && m_lodging_property_phone_number_isValid;

    m_lodging_room1_number_of_nights_isValid = ::OpenAPI::fromJsonValue(m_lodging_room1_number_of_nights, json[QString("lodging.room1.numberOfNights")]);
    m_lodging_room1_number_of_nights_isSet = !json[QString("lodging.room1.numberOfNights")].isNull() && m_lodging_room1_number_of_nights_isValid;

    m_lodging_room1_rate_isValid = ::OpenAPI::fromJsonValue(m_lodging_room1_rate, json[QString("lodging.room1.rate")]);
    m_lodging_room1_rate_isSet = !json[QString("lodging.room1.rate")].isNull() && m_lodging_room1_rate_isValid;

    m_lodging_total_room_tax_isValid = ::OpenAPI::fromJsonValue(m_lodging_total_room_tax, json[QString("lodging.totalRoomTax")]);
    m_lodging_total_room_tax_isSet = !json[QString("lodging.totalRoomTax")].isNull() && m_lodging_total_room_tax_isValid;

    m_lodging_total_tax_isValid = ::OpenAPI::fromJsonValue(m_lodging_total_tax, json[QString("lodging.totalTax")]);
    m_lodging_total_tax_isSet = !json[QString("lodging.totalTax")].isNull() && m_lodging_total_tax_isValid;

    m_openinvoicedata_merchant_data_isValid = ::OpenAPI::fromJsonValue(m_openinvoicedata_merchant_data, json[QString("openinvoicedata.merchantData")]);
    m_openinvoicedata_merchant_data_isSet = !json[QString("openinvoicedata.merchantData")].isNull() && m_openinvoicedata_merchant_data_isValid;

    m_openinvoicedata_number_of_lines_isValid = ::OpenAPI::fromJsonValue(m_openinvoicedata_number_of_lines, json[QString("openinvoicedata.numberOfLines")]);
    m_openinvoicedata_number_of_lines_isSet = !json[QString("openinvoicedata.numberOfLines")].isNull() && m_openinvoicedata_number_of_lines_isValid;

    m_openinvoicedata_recipient_first_name_isValid = ::OpenAPI::fromJsonValue(m_openinvoicedata_recipient_first_name, json[QString("openinvoicedata.recipientFirstName")]);
    m_openinvoicedata_recipient_first_name_isSet = !json[QString("openinvoicedata.recipientFirstName")].isNull() && m_openinvoicedata_recipient_first_name_isValid;

    m_openinvoicedata_recipient_last_name_isValid = ::OpenAPI::fromJsonValue(m_openinvoicedata_recipient_last_name, json[QString("openinvoicedata.recipientLastName")]);
    m_openinvoicedata_recipient_last_name_isSet = !json[QString("openinvoicedata.recipientLastName")].isNull() && m_openinvoicedata_recipient_last_name_isValid;

    m_openinvoicedata_line_item_nr_currency_code_isValid = ::OpenAPI::fromJsonValue(m_openinvoicedata_line_item_nr_currency_code, json[QString("openinvoicedataLine[itemNr].currencyCode")]);
    m_openinvoicedata_line_item_nr_currency_code_isSet = !json[QString("openinvoicedataLine[itemNr].currencyCode")].isNull() && m_openinvoicedata_line_item_nr_currency_code_isValid;

    m_openinvoicedata_line_item_nr_description_isValid = ::OpenAPI::fromJsonValue(m_openinvoicedata_line_item_nr_description, json[QString("openinvoicedataLine[itemNr].description")]);
    m_openinvoicedata_line_item_nr_description_isSet = !json[QString("openinvoicedataLine[itemNr].description")].isNull() && m_openinvoicedata_line_item_nr_description_isValid;

    m_openinvoicedata_line_item_nr_item_amount_isValid = ::OpenAPI::fromJsonValue(m_openinvoicedata_line_item_nr_item_amount, json[QString("openinvoicedataLine[itemNr].itemAmount")]);
    m_openinvoicedata_line_item_nr_item_amount_isSet = !json[QString("openinvoicedataLine[itemNr].itemAmount")].isNull() && m_openinvoicedata_line_item_nr_item_amount_isValid;

    m_openinvoicedata_line_item_nr_item_id_isValid = ::OpenAPI::fromJsonValue(m_openinvoicedata_line_item_nr_item_id, json[QString("openinvoicedataLine[itemNr].itemId")]);
    m_openinvoicedata_line_item_nr_item_id_isSet = !json[QString("openinvoicedataLine[itemNr].itemId")].isNull() && m_openinvoicedata_line_item_nr_item_id_isValid;

    m_openinvoicedata_line_item_nr_item_vat_amount_isValid = ::OpenAPI::fromJsonValue(m_openinvoicedata_line_item_nr_item_vat_amount, json[QString("openinvoicedataLine[itemNr].itemVatAmount")]);
    m_openinvoicedata_line_item_nr_item_vat_amount_isSet = !json[QString("openinvoicedataLine[itemNr].itemVatAmount")].isNull() && m_openinvoicedata_line_item_nr_item_vat_amount_isValid;

    m_openinvoicedata_line_item_nr_item_vat_percentage_isValid = ::OpenAPI::fromJsonValue(m_openinvoicedata_line_item_nr_item_vat_percentage, json[QString("openinvoicedataLine[itemNr].itemVatPercentage")]);
    m_openinvoicedata_line_item_nr_item_vat_percentage_isSet = !json[QString("openinvoicedataLine[itemNr].itemVatPercentage")].isNull() && m_openinvoicedata_line_item_nr_item_vat_percentage_isValid;

    m_openinvoicedata_line_item_nr_number_of_items_isValid = ::OpenAPI::fromJsonValue(m_openinvoicedata_line_item_nr_number_of_items, json[QString("openinvoicedataLine[itemNr].numberOfItems")]);
    m_openinvoicedata_line_item_nr_number_of_items_isSet = !json[QString("openinvoicedataLine[itemNr].numberOfItems")].isNull() && m_openinvoicedata_line_item_nr_number_of_items_isValid;

    m_openinvoicedata_line_item_nr_return_shipping_company_isValid = ::OpenAPI::fromJsonValue(m_openinvoicedata_line_item_nr_return_shipping_company, json[QString("openinvoicedataLine[itemNr].returnShippingCompany")]);
    m_openinvoicedata_line_item_nr_return_shipping_company_isSet = !json[QString("openinvoicedataLine[itemNr].returnShippingCompany")].isNull() && m_openinvoicedata_line_item_nr_return_shipping_company_isValid;

    m_openinvoicedata_line_item_nr_return_tracking_number_isValid = ::OpenAPI::fromJsonValue(m_openinvoicedata_line_item_nr_return_tracking_number, json[QString("openinvoicedataLine[itemNr].returnTrackingNumber")]);
    m_openinvoicedata_line_item_nr_return_tracking_number_isSet = !json[QString("openinvoicedataLine[itemNr].returnTrackingNumber")].isNull() && m_openinvoicedata_line_item_nr_return_tracking_number_isValid;

    m_openinvoicedata_line_item_nr_return_tracking_uri_isValid = ::OpenAPI::fromJsonValue(m_openinvoicedata_line_item_nr_return_tracking_uri, json[QString("openinvoicedataLine[itemNr].returnTrackingUri")]);
    m_openinvoicedata_line_item_nr_return_tracking_uri_isSet = !json[QString("openinvoicedataLine[itemNr].returnTrackingUri")].isNull() && m_openinvoicedata_line_item_nr_return_tracking_uri_isValid;

    m_openinvoicedata_line_item_nr_shipping_company_isValid = ::OpenAPI::fromJsonValue(m_openinvoicedata_line_item_nr_shipping_company, json[QString("openinvoicedataLine[itemNr].shippingCompany")]);
    m_openinvoicedata_line_item_nr_shipping_company_isSet = !json[QString("openinvoicedataLine[itemNr].shippingCompany")].isNull() && m_openinvoicedata_line_item_nr_shipping_company_isValid;

    m_openinvoicedata_line_item_nr_shipping_method_isValid = ::OpenAPI::fromJsonValue(m_openinvoicedata_line_item_nr_shipping_method, json[QString("openinvoicedataLine[itemNr].shippingMethod")]);
    m_openinvoicedata_line_item_nr_shipping_method_isSet = !json[QString("openinvoicedataLine[itemNr].shippingMethod")].isNull() && m_openinvoicedata_line_item_nr_shipping_method_isValid;

    m_openinvoicedata_line_item_nr_tracking_number_isValid = ::OpenAPI::fromJsonValue(m_openinvoicedata_line_item_nr_tracking_number, json[QString("openinvoicedataLine[itemNr].trackingNumber")]);
    m_openinvoicedata_line_item_nr_tracking_number_isSet = !json[QString("openinvoicedataLine[itemNr].trackingNumber")].isNull() && m_openinvoicedata_line_item_nr_tracking_number_isValid;

    m_openinvoicedata_line_item_nr_tracking_uri_isValid = ::OpenAPI::fromJsonValue(m_openinvoicedata_line_item_nr_tracking_uri, json[QString("openinvoicedataLine[itemNr].trackingUri")]);
    m_openinvoicedata_line_item_nr_tracking_uri_isSet = !json[QString("openinvoicedataLine[itemNr].trackingUri")].isNull() && m_openinvoicedata_line_item_nr_tracking_uri_isValid;

    m_opi_include_trans_token_isValid = ::OpenAPI::fromJsonValue(m_opi_include_trans_token, json[QString("opi.includeTransToken")]);
    m_opi_include_trans_token_isSet = !json[QString("opi.includeTransToken")].isNull() && m_opi_include_trans_token_isValid;

    m_ratepay_installment_amount_isValid = ::OpenAPI::fromJsonValue(m_ratepay_installment_amount, json[QString("ratepay.installmentAmount")]);
    m_ratepay_installment_amount_isSet = !json[QString("ratepay.installmentAmount")].isNull() && m_ratepay_installment_amount_isValid;

    m_ratepay_interest_rate_isValid = ::OpenAPI::fromJsonValue(m_ratepay_interest_rate, json[QString("ratepay.interestRate")]);
    m_ratepay_interest_rate_isSet = !json[QString("ratepay.interestRate")].isNull() && m_ratepay_interest_rate_isValid;

    m_ratepay_last_installment_amount_isValid = ::OpenAPI::fromJsonValue(m_ratepay_last_installment_amount, json[QString("ratepay.lastInstallmentAmount")]);
    m_ratepay_last_installment_amount_isSet = !json[QString("ratepay.lastInstallmentAmount")].isNull() && m_ratepay_last_installment_amount_isValid;

    m_ratepay_payment_firstday_isValid = ::OpenAPI::fromJsonValue(m_ratepay_payment_firstday, json[QString("ratepay.paymentFirstday")]);
    m_ratepay_payment_firstday_isSet = !json[QString("ratepay.paymentFirstday")].isNull() && m_ratepay_payment_firstday_isValid;

    m_ratepaydata_delivery_date_isValid = ::OpenAPI::fromJsonValue(m_ratepaydata_delivery_date, json[QString("ratepaydata.deliveryDate")]);
    m_ratepaydata_delivery_date_isSet = !json[QString("ratepaydata.deliveryDate")].isNull() && m_ratepaydata_delivery_date_isValid;

    m_ratepaydata_due_date_isValid = ::OpenAPI::fromJsonValue(m_ratepaydata_due_date, json[QString("ratepaydata.dueDate")]);
    m_ratepaydata_due_date_isSet = !json[QString("ratepaydata.dueDate")].isNull() && m_ratepaydata_due_date_isValid;

    m_ratepaydata_invoice_date_isValid = ::OpenAPI::fromJsonValue(m_ratepaydata_invoice_date, json[QString("ratepaydata.invoiceDate")]);
    m_ratepaydata_invoice_date_isSet = !json[QString("ratepaydata.invoiceDate")].isNull() && m_ratepaydata_invoice_date_isValid;

    m_ratepaydata_invoice_id_isValid = ::OpenAPI::fromJsonValue(m_ratepaydata_invoice_id, json[QString("ratepaydata.invoiceId")]);
    m_ratepaydata_invoice_id_isSet = !json[QString("ratepaydata.invoiceId")].isNull() && m_ratepaydata_invoice_id_isValid;

    m_retry_chain_attempt_number_isValid = ::OpenAPI::fromJsonValue(m_retry_chain_attempt_number, json[QString("retry.chainAttemptNumber")]);
    m_retry_chain_attempt_number_isSet = !json[QString("retry.chainAttemptNumber")].isNull() && m_retry_chain_attempt_number_isValid;

    m_retry_order_attempt_number_isValid = ::OpenAPI::fromJsonValue(m_retry_order_attempt_number, json[QString("retry.orderAttemptNumber")]);
    m_retry_order_attempt_number_isSet = !json[QString("retry.orderAttemptNumber")].isNull() && m_retry_order_attempt_number_isValid;

    m_retry_skip_retry_isValid = ::OpenAPI::fromJsonValue(m_retry_skip_retry, json[QString("retry.skipRetry")]);
    m_retry_skip_retry_isSet = !json[QString("retry.skipRetry")].isNull() && m_retry_skip_retry_isValid;

    m_riskdata__custom_field_name_isValid = ::OpenAPI::fromJsonValue(m_riskdata__custom_field_name, json[QString("riskdata.[customFieldName]")]);
    m_riskdata__custom_field_name_isSet = !json[QString("riskdata.[customFieldName]")].isNull() && m_riskdata__custom_field_name_isValid;

    m_riskdata_basket_item_item_nr_amount_per_item_isValid = ::OpenAPI::fromJsonValue(m_riskdata_basket_item_item_nr_amount_per_item, json[QString("riskdata.basket.item[itemNr].amountPerItem")]);
    m_riskdata_basket_item_item_nr_amount_per_item_isSet = !json[QString("riskdata.basket.item[itemNr].amountPerItem")].isNull() && m_riskdata_basket_item_item_nr_amount_per_item_isValid;

    m_riskdata_basket_item_item_nr_brand_isValid = ::OpenAPI::fromJsonValue(m_riskdata_basket_item_item_nr_brand, json[QString("riskdata.basket.item[itemNr].brand")]);
    m_riskdata_basket_item_item_nr_brand_isSet = !json[QString("riskdata.basket.item[itemNr].brand")].isNull() && m_riskdata_basket_item_item_nr_brand_isValid;

    m_riskdata_basket_item_item_nr_category_isValid = ::OpenAPI::fromJsonValue(m_riskdata_basket_item_item_nr_category, json[QString("riskdata.basket.item[itemNr].category")]);
    m_riskdata_basket_item_item_nr_category_isSet = !json[QString("riskdata.basket.item[itemNr].category")].isNull() && m_riskdata_basket_item_item_nr_category_isValid;

    m_riskdata_basket_item_item_nr_color_isValid = ::OpenAPI::fromJsonValue(m_riskdata_basket_item_item_nr_color, json[QString("riskdata.basket.item[itemNr].color")]);
    m_riskdata_basket_item_item_nr_color_isSet = !json[QString("riskdata.basket.item[itemNr].color")].isNull() && m_riskdata_basket_item_item_nr_color_isValid;

    m_riskdata_basket_item_item_nr_currency_isValid = ::OpenAPI::fromJsonValue(m_riskdata_basket_item_item_nr_currency, json[QString("riskdata.basket.item[itemNr].currency")]);
    m_riskdata_basket_item_item_nr_currency_isSet = !json[QString("riskdata.basket.item[itemNr].currency")].isNull() && m_riskdata_basket_item_item_nr_currency_isValid;

    m_riskdata_basket_item_item_nr_item_id_isValid = ::OpenAPI::fromJsonValue(m_riskdata_basket_item_item_nr_item_id, json[QString("riskdata.basket.item[itemNr].itemID")]);
    m_riskdata_basket_item_item_nr_item_id_isSet = !json[QString("riskdata.basket.item[itemNr].itemID")].isNull() && m_riskdata_basket_item_item_nr_item_id_isValid;

    m_riskdata_basket_item_item_nr_manufacturer_isValid = ::OpenAPI::fromJsonValue(m_riskdata_basket_item_item_nr_manufacturer, json[QString("riskdata.basket.item[itemNr].manufacturer")]);
    m_riskdata_basket_item_item_nr_manufacturer_isSet = !json[QString("riskdata.basket.item[itemNr].manufacturer")].isNull() && m_riskdata_basket_item_item_nr_manufacturer_isValid;

    m_riskdata_basket_item_item_nr_product_title_isValid = ::OpenAPI::fromJsonValue(m_riskdata_basket_item_item_nr_product_title, json[QString("riskdata.basket.item[itemNr].productTitle")]);
    m_riskdata_basket_item_item_nr_product_title_isSet = !json[QString("riskdata.basket.item[itemNr].productTitle")].isNull() && m_riskdata_basket_item_item_nr_product_title_isValid;

    m_riskdata_basket_item_item_nr_quantity_isValid = ::OpenAPI::fromJsonValue(m_riskdata_basket_item_item_nr_quantity, json[QString("riskdata.basket.item[itemNr].quantity")]);
    m_riskdata_basket_item_item_nr_quantity_isSet = !json[QString("riskdata.basket.item[itemNr].quantity")].isNull() && m_riskdata_basket_item_item_nr_quantity_isValid;

    m_riskdata_basket_item_item_nr_receiver_email_isValid = ::OpenAPI::fromJsonValue(m_riskdata_basket_item_item_nr_receiver_email, json[QString("riskdata.basket.item[itemNr].receiverEmail")]);
    m_riskdata_basket_item_item_nr_receiver_email_isSet = !json[QString("riskdata.basket.item[itemNr].receiverEmail")].isNull() && m_riskdata_basket_item_item_nr_receiver_email_isValid;

    m_riskdata_basket_item_item_nr_size_isValid = ::OpenAPI::fromJsonValue(m_riskdata_basket_item_item_nr_size, json[QString("riskdata.basket.item[itemNr].size")]);
    m_riskdata_basket_item_item_nr_size_isSet = !json[QString("riskdata.basket.item[itemNr].size")].isNull() && m_riskdata_basket_item_item_nr_size_isValid;

    m_riskdata_basket_item_item_nr_sku_isValid = ::OpenAPI::fromJsonValue(m_riskdata_basket_item_item_nr_sku, json[QString("riskdata.basket.item[itemNr].sku")]);
    m_riskdata_basket_item_item_nr_sku_isSet = !json[QString("riskdata.basket.item[itemNr].sku")].isNull() && m_riskdata_basket_item_item_nr_sku_isValid;

    m_riskdata_basket_item_item_nr_upc_isValid = ::OpenAPI::fromJsonValue(m_riskdata_basket_item_item_nr_upc, json[QString("riskdata.basket.item[itemNr].upc")]);
    m_riskdata_basket_item_item_nr_upc_isSet = !json[QString("riskdata.basket.item[itemNr].upc")].isNull() && m_riskdata_basket_item_item_nr_upc_isValid;

    m_riskdata_promotions_promotion_item_nr_promotion_code_isValid = ::OpenAPI::fromJsonValue(m_riskdata_promotions_promotion_item_nr_promotion_code, json[QString("riskdata.promotions.promotion[itemNr].promotionCode")]);
    m_riskdata_promotions_promotion_item_nr_promotion_code_isSet = !json[QString("riskdata.promotions.promotion[itemNr].promotionCode")].isNull() && m_riskdata_promotions_promotion_item_nr_promotion_code_isValid;

    m_riskdata_promotions_promotion_item_nr_promotion_discount_amount_isValid = ::OpenAPI::fromJsonValue(m_riskdata_promotions_promotion_item_nr_promotion_discount_amount, json[QString("riskdata.promotions.promotion[itemNr].promotionDiscountAmount")]);
    m_riskdata_promotions_promotion_item_nr_promotion_discount_amount_isSet = !json[QString("riskdata.promotions.promotion[itemNr].promotionDiscountAmount")].isNull() && m_riskdata_promotions_promotion_item_nr_promotion_discount_amount_isValid;

    m_riskdata_promotions_promotion_item_nr_promotion_discount_currency_isValid = ::OpenAPI::fromJsonValue(m_riskdata_promotions_promotion_item_nr_promotion_discount_currency, json[QString("riskdata.promotions.promotion[itemNr].promotionDiscountCurrency")]);
    m_riskdata_promotions_promotion_item_nr_promotion_discount_currency_isSet = !json[QString("riskdata.promotions.promotion[itemNr].promotionDiscountCurrency")].isNull() && m_riskdata_promotions_promotion_item_nr_promotion_discount_currency_isValid;

    m_riskdata_promotions_promotion_item_nr_promotion_discount_percentage_isValid = ::OpenAPI::fromJsonValue(m_riskdata_promotions_promotion_item_nr_promotion_discount_percentage, json[QString("riskdata.promotions.promotion[itemNr].promotionDiscountPercentage")]);
    m_riskdata_promotions_promotion_item_nr_promotion_discount_percentage_isSet = !json[QString("riskdata.promotions.promotion[itemNr].promotionDiscountPercentage")].isNull() && m_riskdata_promotions_promotion_item_nr_promotion_discount_percentage_isValid;

    m_riskdata_promotions_promotion_item_nr_promotion_name_isValid = ::OpenAPI::fromJsonValue(m_riskdata_promotions_promotion_item_nr_promotion_name, json[QString("riskdata.promotions.promotion[itemNr].promotionName")]);
    m_riskdata_promotions_promotion_item_nr_promotion_name_isSet = !json[QString("riskdata.promotions.promotion[itemNr].promotionName")].isNull() && m_riskdata_promotions_promotion_item_nr_promotion_name_isValid;

    m_riskdata_risk_profile_reference_isValid = ::OpenAPI::fromJsonValue(m_riskdata_risk_profile_reference, json[QString("riskdata.riskProfileReference")]);
    m_riskdata_risk_profile_reference_isSet = !json[QString("riskdata.riskProfileReference")].isNull() && m_riskdata_risk_profile_reference_isValid;

    m_riskdata_skip_risk_isValid = ::OpenAPI::fromJsonValue(m_riskdata_skip_risk, json[QString("riskdata.skipRisk")]);
    m_riskdata_skip_risk_isSet = !json[QString("riskdata.skipRisk")].isNull() && m_riskdata_skip_risk_isValid;

    m_pay_pal_country_code_isValid = ::OpenAPI::fromJsonValue(m_pay_pal_country_code, json[QString("PayPal.CountryCode")]);
    m_pay_pal_country_code_isSet = !json[QString("PayPal.CountryCode")].isNull() && m_pay_pal_country_code_isValid;

    m_pay_pal_email_id_isValid = ::OpenAPI::fromJsonValue(m_pay_pal_email_id, json[QString("PayPal.EmailId")]);
    m_pay_pal_email_id_isSet = !json[QString("PayPal.EmailId")].isNull() && m_pay_pal_email_id_isValid;

    m_pay_pal_first_name_isValid = ::OpenAPI::fromJsonValue(m_pay_pal_first_name, json[QString("PayPal.FirstName")]);
    m_pay_pal_first_name_isSet = !json[QString("PayPal.FirstName")].isNull() && m_pay_pal_first_name_isValid;

    m_pay_pal_last_name_isValid = ::OpenAPI::fromJsonValue(m_pay_pal_last_name, json[QString("PayPal.LastName")]);
    m_pay_pal_last_name_isSet = !json[QString("PayPal.LastName")].isNull() && m_pay_pal_last_name_isValid;

    m_pay_pal_payer_id_isValid = ::OpenAPI::fromJsonValue(m_pay_pal_payer_id, json[QString("PayPal.PayerId")]);
    m_pay_pal_payer_id_isSet = !json[QString("PayPal.PayerId")].isNull() && m_pay_pal_payer_id_isValid;

    m_pay_pal_phone_isValid = ::OpenAPI::fromJsonValue(m_pay_pal_phone, json[QString("PayPal.Phone")]);
    m_pay_pal_phone_isSet = !json[QString("PayPal.Phone")].isNull() && m_pay_pal_phone_isValid;

    m_pay_pal_protection_eligibility_isValid = ::OpenAPI::fromJsonValue(m_pay_pal_protection_eligibility, json[QString("PayPal.ProtectionEligibility")]);
    m_pay_pal_protection_eligibility_isSet = !json[QString("PayPal.ProtectionEligibility")].isNull() && m_pay_pal_protection_eligibility_isValid;

    m_pay_pal_transaction_id_isValid = ::OpenAPI::fromJsonValue(m_pay_pal_transaction_id, json[QString("PayPal.TransactionId")]);
    m_pay_pal_transaction_id_isSet = !json[QString("PayPal.TransactionId")].isNull() && m_pay_pal_transaction_id_isValid;

    m_avs_result_raw_isValid = ::OpenAPI::fromJsonValue(m_avs_result_raw, json[QString("avsResultRaw")]);
    m_avs_result_raw_isSet = !json[QString("avsResultRaw")].isNull() && m_avs_result_raw_isValid;

    m_bin_isValid = ::OpenAPI::fromJsonValue(m_bin, json[QString("bin")]);
    m_bin_isSet = !json[QString("bin")].isNull() && m_bin_isValid;

    m_cvc_result_raw_isValid = ::OpenAPI::fromJsonValue(m_cvc_result_raw, json[QString("cvcResultRaw")]);
    m_cvc_result_raw_isSet = !json[QString("cvcResultRaw")].isNull() && m_cvc_result_raw_isValid;

    m_risk_token_isValid = ::OpenAPI::fromJsonValue(m_risk_token, json[QString("riskToken")]);
    m_risk_token_isSet = !json[QString("riskToken")].isNull() && m_risk_token_isValid;

    m_three_d_authenticated_isValid = ::OpenAPI::fromJsonValue(m_three_d_authenticated, json[QString("threeDAuthenticated")]);
    m_three_d_authenticated_isSet = !json[QString("threeDAuthenticated")].isNull() && m_three_d_authenticated_isValid;

    m_three_d_offered_isValid = ::OpenAPI::fromJsonValue(m_three_d_offered, json[QString("threeDOffered")]);
    m_three_d_offered_isSet = !json[QString("threeDOffered")].isNull() && m_three_d_offered_isValid;

    m_token_data_type_isValid = ::OpenAPI::fromJsonValue(m_token_data_type, json[QString("tokenDataType")]);
    m_token_data_type_isSet = !json[QString("tokenDataType")].isNull() && m_token_data_type_isValid;

    m_sub_merchant_number_of_sub_sellers_isValid = ::OpenAPI::fromJsonValue(m_sub_merchant_number_of_sub_sellers, json[QString("subMerchant.numberOfSubSellers")]);
    m_sub_merchant_number_of_sub_sellers_isSet = !json[QString("subMerchant.numberOfSubSellers")].isNull() && m_sub_merchant_number_of_sub_sellers_isValid;

    m_sub_merchant_sub_seller_sub_seller_nr_city_isValid = ::OpenAPI::fromJsonValue(m_sub_merchant_sub_seller_sub_seller_nr_city, json[QString("subMerchant.subSeller[subSellerNr].city")]);
    m_sub_merchant_sub_seller_sub_seller_nr_city_isSet = !json[QString("subMerchant.subSeller[subSellerNr].city")].isNull() && m_sub_merchant_sub_seller_sub_seller_nr_city_isValid;

    m_sub_merchant_sub_seller_sub_seller_nr_country_isValid = ::OpenAPI::fromJsonValue(m_sub_merchant_sub_seller_sub_seller_nr_country, json[QString("subMerchant.subSeller[subSellerNr].country")]);
    m_sub_merchant_sub_seller_sub_seller_nr_country_isSet = !json[QString("subMerchant.subSeller[subSellerNr].country")].isNull() && m_sub_merchant_sub_seller_sub_seller_nr_country_isValid;

    m_sub_merchant_sub_seller_sub_seller_nr_id_isValid = ::OpenAPI::fromJsonValue(m_sub_merchant_sub_seller_sub_seller_nr_id, json[QString("subMerchant.subSeller[subSellerNr].id")]);
    m_sub_merchant_sub_seller_sub_seller_nr_id_isSet = !json[QString("subMerchant.subSeller[subSellerNr].id")].isNull() && m_sub_merchant_sub_seller_sub_seller_nr_id_isValid;

    m_sub_merchant_sub_seller_sub_seller_nr_mcc_isValid = ::OpenAPI::fromJsonValue(m_sub_merchant_sub_seller_sub_seller_nr_mcc, json[QString("subMerchant.subSeller[subSellerNr].mcc")]);
    m_sub_merchant_sub_seller_sub_seller_nr_mcc_isSet = !json[QString("subMerchant.subSeller[subSellerNr].mcc")].isNull() && m_sub_merchant_sub_seller_sub_seller_nr_mcc_isValid;

    m_sub_merchant_sub_seller_sub_seller_nr_name_isValid = ::OpenAPI::fromJsonValue(m_sub_merchant_sub_seller_sub_seller_nr_name, json[QString("subMerchant.subSeller[subSellerNr].name")]);
    m_sub_merchant_sub_seller_sub_seller_nr_name_isSet = !json[QString("subMerchant.subSeller[subSellerNr].name")].isNull() && m_sub_merchant_sub_seller_sub_seller_nr_name_isValid;

    m_sub_merchant_sub_seller_sub_seller_nr_postal_code_isValid = ::OpenAPI::fromJsonValue(m_sub_merchant_sub_seller_sub_seller_nr_postal_code, json[QString("subMerchant.subSeller[subSellerNr].postalCode")]);
    m_sub_merchant_sub_seller_sub_seller_nr_postal_code_isSet = !json[QString("subMerchant.subSeller[subSellerNr].postalCode")].isNull() && m_sub_merchant_sub_seller_sub_seller_nr_postal_code_isValid;

    m_sub_merchant_sub_seller_sub_seller_nr_state_isValid = ::OpenAPI::fromJsonValue(m_sub_merchant_sub_seller_sub_seller_nr_state, json[QString("subMerchant.subSeller[subSellerNr].state")]);
    m_sub_merchant_sub_seller_sub_seller_nr_state_isSet = !json[QString("subMerchant.subSeller[subSellerNr].state")].isNull() && m_sub_merchant_sub_seller_sub_seller_nr_state_isValid;

    m_sub_merchant_sub_seller_sub_seller_nr_street_isValid = ::OpenAPI::fromJsonValue(m_sub_merchant_sub_seller_sub_seller_nr_street, json[QString("subMerchant.subSeller[subSellerNr].street")]);
    m_sub_merchant_sub_seller_sub_seller_nr_street_isSet = !json[QString("subMerchant.subSeller[subSellerNr].street")].isNull() && m_sub_merchant_sub_seller_sub_seller_nr_street_isValid;

    m_sub_merchant_sub_seller_sub_seller_nr_tax_id_isValid = ::OpenAPI::fromJsonValue(m_sub_merchant_sub_seller_sub_seller_nr_tax_id, json[QString("subMerchant.subSeller[subSellerNr].taxId")]);
    m_sub_merchant_sub_seller_sub_seller_nr_tax_id_isSet = !json[QString("subMerchant.subSeller[subSellerNr].taxId")].isNull() && m_sub_merchant_sub_seller_sub_seller_nr_tax_id_isValid;

    m_enhanced_scheme_data_employee_name_isValid = ::OpenAPI::fromJsonValue(m_enhanced_scheme_data_employee_name, json[QString("enhancedSchemeData.employeeName")]);
    m_enhanced_scheme_data_employee_name_isSet = !json[QString("enhancedSchemeData.employeeName")].isNull() && m_enhanced_scheme_data_employee_name_isValid;

    m_enhanced_scheme_data_job_description_isValid = ::OpenAPI::fromJsonValue(m_enhanced_scheme_data_job_description, json[QString("enhancedSchemeData.jobDescription")]);
    m_enhanced_scheme_data_job_description_isSet = !json[QString("enhancedSchemeData.jobDescription")].isNull() && m_enhanced_scheme_data_job_description_isValid;

    m_enhanced_scheme_data_regular_hours_rate_isValid = ::OpenAPI::fromJsonValue(m_enhanced_scheme_data_regular_hours_rate, json[QString("enhancedSchemeData.regularHoursRate")]);
    m_enhanced_scheme_data_regular_hours_rate_isSet = !json[QString("enhancedSchemeData.regularHoursRate")].isNull() && m_enhanced_scheme_data_regular_hours_rate_isValid;

    m_enhanced_scheme_data_regular_hours_worked_isValid = ::OpenAPI::fromJsonValue(m_enhanced_scheme_data_regular_hours_worked, json[QString("enhancedSchemeData.regularHoursWorked")]);
    m_enhanced_scheme_data_regular_hours_worked_isSet = !json[QString("enhancedSchemeData.regularHoursWorked")].isNull() && m_enhanced_scheme_data_regular_hours_worked_isValid;

    m_enhanced_scheme_data_request_name_isValid = ::OpenAPI::fromJsonValue(m_enhanced_scheme_data_request_name, json[QString("enhancedSchemeData.requestName")]);
    m_enhanced_scheme_data_request_name_isSet = !json[QString("enhancedSchemeData.requestName")].isNull() && m_enhanced_scheme_data_request_name_isValid;

    m_enhanced_scheme_data_temp_start_date_isValid = ::OpenAPI::fromJsonValue(m_enhanced_scheme_data_temp_start_date, json[QString("enhancedSchemeData.tempStartDate")]);
    m_enhanced_scheme_data_temp_start_date_isSet = !json[QString("enhancedSchemeData.tempStartDate")].isNull() && m_enhanced_scheme_data_temp_start_date_isValid;

    m_enhanced_scheme_data_temp_week_ending_isValid = ::OpenAPI::fromJsonValue(m_enhanced_scheme_data_temp_week_ending, json[QString("enhancedSchemeData.tempWeekEnding")]);
    m_enhanced_scheme_data_temp_week_ending_isSet = !json[QString("enhancedSchemeData.tempWeekEnding")].isNull() && m_enhanced_scheme_data_temp_week_ending_isValid;

    m_androidpay_token_isValid = ::OpenAPI::fromJsonValue(m_androidpay_token, json[QString("androidpay.token")]);
    m_androidpay_token_isSet = !json[QString("androidpay.token")].isNull() && m_androidpay_token_isValid;

    m_masterpass_transaction_id_isValid = ::OpenAPI::fromJsonValue(m_masterpass_transaction_id, json[QString("masterpass.transactionId")]);
    m_masterpass_transaction_id_isSet = !json[QString("masterpass.transactionId")].isNull() && m_masterpass_transaction_id_isValid;

    m_payment_token_isValid = ::OpenAPI::fromJsonValue(m_payment_token, json[QString("payment.token")]);
    m_payment_token_isSet = !json[QString("payment.token")].isNull() && m_payment_token_isValid;

    m_paywithgoogle_token_isValid = ::OpenAPI::fromJsonValue(m_paywithgoogle_token, json[QString("paywithgoogle.token")]);
    m_paywithgoogle_token_isSet = !json[QString("paywithgoogle.token")].isNull() && m_paywithgoogle_token_isValid;

    m_samsungpay_token_isValid = ::OpenAPI::fromJsonValue(m_samsungpay_token, json[QString("samsungpay.token")]);
    m_samsungpay_token_isSet = !json[QString("samsungpay.token")].isNull() && m_samsungpay_token_isValid;

    m_visacheckout_call_id_isValid = ::OpenAPI::fromJsonValue(m_visacheckout_call_id, json[QString("visacheckout.callId")]);
    m_visacheckout_call_id_isSet = !json[QString("visacheckout.callId")].isNull() && m_visacheckout_call_id_isValid;
}

QString OAIPaymentRequest_additionalData::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPaymentRequest_additionalData::asJsonObject() const {
    QJsonObject obj;
    if (m_allow3_ds2_isSet) {
        obj.insert(QString("allow3DS2"), ::OpenAPI::toJsonValue(m_allow3_ds2));
    }
    if (m_challenge_window_size_isSet) {
        obj.insert(QString("challengeWindowSize"), ::OpenAPI::toJsonValue(m_challenge_window_size));
    }
    if (m_execute_three_d_isSet) {
        obj.insert(QString("executeThreeD"), ::OpenAPI::toJsonValue(m_execute_three_d));
    }
    if (m_mpi_implementation_type_isSet) {
        obj.insert(QString("mpiImplementationType"), ::OpenAPI::toJsonValue(m_mpi_implementation_type));
    }
    if (m_sca_exemption_isSet) {
        obj.insert(QString("scaExemption"), ::OpenAPI::toJsonValue(m_sca_exemption));
    }
    if (m_three_ds_version_isSet) {
        obj.insert(QString("threeDSVersion"), ::OpenAPI::toJsonValue(m_three_ds_version));
    }
    if (m_airline_agency_invoice_number_isSet) {
        obj.insert(QString("airline.agency_invoice_number"), ::OpenAPI::toJsonValue(m_airline_agency_invoice_number));
    }
    if (m_airline_agency_plan_name_isSet) {
        obj.insert(QString("airline.agency_plan_name"), ::OpenAPI::toJsonValue(m_airline_agency_plan_name));
    }
    if (m_airline_airline_code_isSet) {
        obj.insert(QString("airline.airline_code"), ::OpenAPI::toJsonValue(m_airline_airline_code));
    }
    if (m_airline_airline_designator_code_isSet) {
        obj.insert(QString("airline.airline_designator_code"), ::OpenAPI::toJsonValue(m_airline_airline_designator_code));
    }
    if (m_airline_boarding_fee_isSet) {
        obj.insert(QString("airline.boarding_fee"), ::OpenAPI::toJsonValue(m_airline_boarding_fee));
    }
    if (m_airline_computerized_reservation_system_isSet) {
        obj.insert(QString("airline.computerized_reservation_system"), ::OpenAPI::toJsonValue(m_airline_computerized_reservation_system));
    }
    if (m_airline_customer_reference_number_isSet) {
        obj.insert(QString("airline.customer_reference_number"), ::OpenAPI::toJsonValue(m_airline_customer_reference_number));
    }
    if (m_airline_document_type_isSet) {
        obj.insert(QString("airline.document_type"), ::OpenAPI::toJsonValue(m_airline_document_type));
    }
    if (m_airline_flight_date_isSet) {
        obj.insert(QString("airline.flight_date"), ::OpenAPI::toJsonValue(m_airline_flight_date));
    }
    if (m_airline_leg_carrier_code_isSet) {
        obj.insert(QString("airline.leg.carrier_code"), ::OpenAPI::toJsonValue(m_airline_leg_carrier_code));
    }
    if (m_airline_leg_class_of_travel_isSet) {
        obj.insert(QString("airline.leg.class_of_travel"), ::OpenAPI::toJsonValue(m_airline_leg_class_of_travel));
    }
    if (m_airline_leg_date_of_travel_isSet) {
        obj.insert(QString("airline.leg.date_of_travel"), ::OpenAPI::toJsonValue(m_airline_leg_date_of_travel));
    }
    if (m_airline_leg_depart_airport_isSet) {
        obj.insert(QString("airline.leg.depart_airport"), ::OpenAPI::toJsonValue(m_airline_leg_depart_airport));
    }
    if (m_airline_leg_depart_tax_isSet) {
        obj.insert(QString("airline.leg.depart_tax"), ::OpenAPI::toJsonValue(m_airline_leg_depart_tax));
    }
    if (m_airline_leg_destination_code_isSet) {
        obj.insert(QString("airline.leg.destination_code"), ::OpenAPI::toJsonValue(m_airline_leg_destination_code));
    }
    if (m_airline_leg_fare_base_code_isSet) {
        obj.insert(QString("airline.leg.fare_base_code"), ::OpenAPI::toJsonValue(m_airline_leg_fare_base_code));
    }
    if (m_airline_leg_flight_number_isSet) {
        obj.insert(QString("airline.leg.flight_number"), ::OpenAPI::toJsonValue(m_airline_leg_flight_number));
    }
    if (m_airline_leg_stop_over_code_isSet) {
        obj.insert(QString("airline.leg.stop_over_code"), ::OpenAPI::toJsonValue(m_airline_leg_stop_over_code));
    }
    if (m_airline_passenger_date_of_birth_isSet) {
        obj.insert(QString("airline.passenger.date_of_birth"), ::OpenAPI::toJsonValue(m_airline_passenger_date_of_birth));
    }
    if (m_airline_passenger_first_name_isSet) {
        obj.insert(QString("airline.passenger.first_name"), ::OpenAPI::toJsonValue(m_airline_passenger_first_name));
    }
    if (m_airline_passenger_last_name_isSet) {
        obj.insert(QString("airline.passenger.last_name"), ::OpenAPI::toJsonValue(m_airline_passenger_last_name));
    }
    if (m_airline_passenger_telephone_number_isSet) {
        obj.insert(QString("airline.passenger.telephone_number"), ::OpenAPI::toJsonValue(m_airline_passenger_telephone_number));
    }
    if (m_airline_passenger_traveller_type_isSet) {
        obj.insert(QString("airline.passenger.traveller_type"), ::OpenAPI::toJsonValue(m_airline_passenger_traveller_type));
    }
    if (m_airline_passenger_name_isSet) {
        obj.insert(QString("airline.passenger_name"), ::OpenAPI::toJsonValue(m_airline_passenger_name));
    }
    if (m_airline_ticket_issue_address_isSet) {
        obj.insert(QString("airline.ticket_issue_address"), ::OpenAPI::toJsonValue(m_airline_ticket_issue_address));
    }
    if (m_airline_ticket_number_isSet) {
        obj.insert(QString("airline.ticket_number"), ::OpenAPI::toJsonValue(m_airline_ticket_number));
    }
    if (m_airline_travel_agency_code_isSet) {
        obj.insert(QString("airline.travel_agency_code"), ::OpenAPI::toJsonValue(m_airline_travel_agency_code));
    }
    if (m_airline_travel_agency_name_isSet) {
        obj.insert(QString("airline.travel_agency_name"), ::OpenAPI::toJsonValue(m_airline_travel_agency_name));
    }
    if (m_car_rental_check_out_date_isSet) {
        obj.insert(QString("carRental.checkOutDate"), ::OpenAPI::toJsonValue(m_car_rental_check_out_date));
    }
    if (m_car_rental_customer_service_toll_free_number_isSet) {
        obj.insert(QString("carRental.customerServiceTollFreeNumber"), ::OpenAPI::toJsonValue(m_car_rental_customer_service_toll_free_number));
    }
    if (m_car_rental_days_rented_isSet) {
        obj.insert(QString("carRental.daysRented"), ::OpenAPI::toJsonValue(m_car_rental_days_rented));
    }
    if (m_car_rental_fuel_charges_isSet) {
        obj.insert(QString("carRental.fuelCharges"), ::OpenAPI::toJsonValue(m_car_rental_fuel_charges));
    }
    if (m_car_rental_insurance_charges_isSet) {
        obj.insert(QString("carRental.insuranceCharges"), ::OpenAPI::toJsonValue(m_car_rental_insurance_charges));
    }
    if (m_car_rental_location_city_isSet) {
        obj.insert(QString("carRental.locationCity"), ::OpenAPI::toJsonValue(m_car_rental_location_city));
    }
    if (m_car_rental_location_country_isSet) {
        obj.insert(QString("carRental.locationCountry"), ::OpenAPI::toJsonValue(m_car_rental_location_country));
    }
    if (m_car_rental_location_state_province_isSet) {
        obj.insert(QString("carRental.locationStateProvince"), ::OpenAPI::toJsonValue(m_car_rental_location_state_province));
    }
    if (m_car_rental_no_show_indicator_isSet) {
        obj.insert(QString("carRental.noShowIndicator"), ::OpenAPI::toJsonValue(m_car_rental_no_show_indicator));
    }
    if (m_car_rental_one_way_drop_off_charges_isSet) {
        obj.insert(QString("carRental.oneWayDropOffCharges"), ::OpenAPI::toJsonValue(m_car_rental_one_way_drop_off_charges));
    }
    if (m_car_rental_rate_isSet) {
        obj.insert(QString("carRental.rate"), ::OpenAPI::toJsonValue(m_car_rental_rate));
    }
    if (m_car_rental_rate_indicator_isSet) {
        obj.insert(QString("carRental.rateIndicator"), ::OpenAPI::toJsonValue(m_car_rental_rate_indicator));
    }
    if (m_car_rental_rental_agreement_number_isSet) {
        obj.insert(QString("carRental.rentalAgreementNumber"), ::OpenAPI::toJsonValue(m_car_rental_rental_agreement_number));
    }
    if (m_car_rental_rental_class_id_isSet) {
        obj.insert(QString("carRental.rentalClassId"), ::OpenAPI::toJsonValue(m_car_rental_rental_class_id));
    }
    if (m_car_rental_renter_name_isSet) {
        obj.insert(QString("carRental.renterName"), ::OpenAPI::toJsonValue(m_car_rental_renter_name));
    }
    if (m_car_rental_return_city_isSet) {
        obj.insert(QString("carRental.returnCity"), ::OpenAPI::toJsonValue(m_car_rental_return_city));
    }
    if (m_car_rental_return_country_isSet) {
        obj.insert(QString("carRental.returnCountry"), ::OpenAPI::toJsonValue(m_car_rental_return_country));
    }
    if (m_car_rental_return_date_isSet) {
        obj.insert(QString("carRental.returnDate"), ::OpenAPI::toJsonValue(m_car_rental_return_date));
    }
    if (m_car_rental_return_location_id_isSet) {
        obj.insert(QString("carRental.returnLocationId"), ::OpenAPI::toJsonValue(m_car_rental_return_location_id));
    }
    if (m_car_rental_return_state_province_isSet) {
        obj.insert(QString("carRental.returnStateProvince"), ::OpenAPI::toJsonValue(m_car_rental_return_state_province));
    }
    if (m_car_rental_tax_exempt_indicator_isSet) {
        obj.insert(QString("carRental.taxExemptIndicator"), ::OpenAPI::toJsonValue(m_car_rental_tax_exempt_indicator));
    }
    if (m_travel_entertainment_auth_data_duration_isSet) {
        obj.insert(QString("travelEntertainmentAuthData.duration"), ::OpenAPI::toJsonValue(m_travel_entertainment_auth_data_duration));
    }
    if (m_travel_entertainment_auth_data_market_isSet) {
        obj.insert(QString("travelEntertainmentAuthData.market"), ::OpenAPI::toJsonValue(m_travel_entertainment_auth_data_market));
    }
    if (m_requested_test_error_response_code_isSet) {
        obj.insert(QString("RequestedTestErrorResponseCode"), ::OpenAPI::toJsonValue(m_requested_test_error_response_code));
    }
    if (m_allow_partial_auth_isSet) {
        obj.insert(QString("allowPartialAuth"), ::OpenAPI::toJsonValue(m_allow_partial_auth));
    }
    if (m_authorisation_type_isSet) {
        obj.insert(QString("authorisationType"), ::OpenAPI::toJsonValue(m_authorisation_type));
    }
    if (m_custom_routing_flag_isSet) {
        obj.insert(QString("customRoutingFlag"), ::OpenAPI::toJsonValue(m_custom_routing_flag));
    }
    if (m_industry_usage_isSet) {
        obj.insert(QString("industryUsage"), ::OpenAPI::toJsonValue(m_industry_usage));
    }
    if (m_manual_capture_isSet) {
        obj.insert(QString("manualCapture"), ::OpenAPI::toJsonValue(m_manual_capture));
    }
    if (m_network_tx_reference_isSet) {
        obj.insert(QString("networkTxReference"), ::OpenAPI::toJsonValue(m_network_tx_reference));
    }
    if (m_overwrite_brand_isSet) {
        obj.insert(QString("overwriteBrand"), ::OpenAPI::toJsonValue(m_overwrite_brand));
    }
    if (m_sub_merchant_city_isSet) {
        obj.insert(QString("subMerchantCity"), ::OpenAPI::toJsonValue(m_sub_merchant_city));
    }
    if (m_sub_merchant_country_isSet) {
        obj.insert(QString("subMerchantCountry"), ::OpenAPI::toJsonValue(m_sub_merchant_country));
    }
    if (m_sub_merchant_id_isSet) {
        obj.insert(QString("subMerchantID"), ::OpenAPI::toJsonValue(m_sub_merchant_id));
    }
    if (m_sub_merchant_name_isSet) {
        obj.insert(QString("subMerchantName"), ::OpenAPI::toJsonValue(m_sub_merchant_name));
    }
    if (m_sub_merchant_postal_code_isSet) {
        obj.insert(QString("subMerchantPostalCode"), ::OpenAPI::toJsonValue(m_sub_merchant_postal_code));
    }
    if (m_sub_merchant_state_isSet) {
        obj.insert(QString("subMerchantState"), ::OpenAPI::toJsonValue(m_sub_merchant_state));
    }
    if (m_sub_merchant_street_isSet) {
        obj.insert(QString("subMerchantStreet"), ::OpenAPI::toJsonValue(m_sub_merchant_street));
    }
    if (m_sub_merchant_tax_id_isSet) {
        obj.insert(QString("subMerchantTaxId"), ::OpenAPI::toJsonValue(m_sub_merchant_tax_id));
    }
    if (m_enhanced_scheme_data_customer_reference_isSet) {
        obj.insert(QString("enhancedSchemeData.customerReference"), ::OpenAPI::toJsonValue(m_enhanced_scheme_data_customer_reference));
    }
    if (m_enhanced_scheme_data_destination_country_code_isSet) {
        obj.insert(QString("enhancedSchemeData.destinationCountryCode"), ::OpenAPI::toJsonValue(m_enhanced_scheme_data_destination_country_code));
    }
    if (m_enhanced_scheme_data_destination_postal_code_isSet) {
        obj.insert(QString("enhancedSchemeData.destinationPostalCode"), ::OpenAPI::toJsonValue(m_enhanced_scheme_data_destination_postal_code));
    }
    if (m_enhanced_scheme_data_destination_state_province_code_isSet) {
        obj.insert(QString("enhancedSchemeData.destinationStateProvinceCode"), ::OpenAPI::toJsonValue(m_enhanced_scheme_data_destination_state_province_code));
    }
    if (m_enhanced_scheme_data_duty_amount_isSet) {
        obj.insert(QString("enhancedSchemeData.dutyAmount"), ::OpenAPI::toJsonValue(m_enhanced_scheme_data_duty_amount));
    }
    if (m_enhanced_scheme_data_freight_amount_isSet) {
        obj.insert(QString("enhancedSchemeData.freightAmount"), ::OpenAPI::toJsonValue(m_enhanced_scheme_data_freight_amount));
    }
    if (m_enhanced_scheme_data_item_detail_line_item_nr_commodity_code_isSet) {
        obj.insert(QString("enhancedSchemeData.itemDetailLine[itemNr].commodityCode"), ::OpenAPI::toJsonValue(m_enhanced_scheme_data_item_detail_line_item_nr_commodity_code));
    }
    if (m_enhanced_scheme_data_item_detail_line_item_nr_description_isSet) {
        obj.insert(QString("enhancedSchemeData.itemDetailLine[itemNr].description"), ::OpenAPI::toJsonValue(m_enhanced_scheme_data_item_detail_line_item_nr_description));
    }
    if (m_enhanced_scheme_data_item_detail_line_item_nr_discount_amount_isSet) {
        obj.insert(QString("enhancedSchemeData.itemDetailLine[itemNr].discountAmount"), ::OpenAPI::toJsonValue(m_enhanced_scheme_data_item_detail_line_item_nr_discount_amount));
    }
    if (m_enhanced_scheme_data_item_detail_line_item_nr_product_code_isSet) {
        obj.insert(QString("enhancedSchemeData.itemDetailLine[itemNr].productCode"), ::OpenAPI::toJsonValue(m_enhanced_scheme_data_item_detail_line_item_nr_product_code));
    }
    if (m_enhanced_scheme_data_item_detail_line_item_nr_quantity_isSet) {
        obj.insert(QString("enhancedSchemeData.itemDetailLine[itemNr].quantity"), ::OpenAPI::toJsonValue(m_enhanced_scheme_data_item_detail_line_item_nr_quantity));
    }
    if (m_enhanced_scheme_data_item_detail_line_item_nr_total_amount_isSet) {
        obj.insert(QString("enhancedSchemeData.itemDetailLine[itemNr].totalAmount"), ::OpenAPI::toJsonValue(m_enhanced_scheme_data_item_detail_line_item_nr_total_amount));
    }
    if (m_enhanced_scheme_data_item_detail_line_item_nr_unit_of_measure_isSet) {
        obj.insert(QString("enhancedSchemeData.itemDetailLine[itemNr].unitOfMeasure"), ::OpenAPI::toJsonValue(m_enhanced_scheme_data_item_detail_line_item_nr_unit_of_measure));
    }
    if (m_enhanced_scheme_data_item_detail_line_item_nr_unit_price_isSet) {
        obj.insert(QString("enhancedSchemeData.itemDetailLine[itemNr].unitPrice"), ::OpenAPI::toJsonValue(m_enhanced_scheme_data_item_detail_line_item_nr_unit_price));
    }
    if (m_enhanced_scheme_data_order_date_isSet) {
        obj.insert(QString("enhancedSchemeData.orderDate"), ::OpenAPI::toJsonValue(m_enhanced_scheme_data_order_date));
    }
    if (m_enhanced_scheme_data_ship_from_postal_code_isSet) {
        obj.insert(QString("enhancedSchemeData.shipFromPostalCode"), ::OpenAPI::toJsonValue(m_enhanced_scheme_data_ship_from_postal_code));
    }
    if (m_enhanced_scheme_data_total_tax_amount_isSet) {
        obj.insert(QString("enhancedSchemeData.totalTaxAmount"), ::OpenAPI::toJsonValue(m_enhanced_scheme_data_total_tax_amount));
    }
    if (m_lodging_check_in_date_isSet) {
        obj.insert(QString("lodging.checkInDate"), ::OpenAPI::toJsonValue(m_lodging_check_in_date));
    }
    if (m_lodging_check_out_date_isSet) {
        obj.insert(QString("lodging.checkOutDate"), ::OpenAPI::toJsonValue(m_lodging_check_out_date));
    }
    if (m_lodging_customer_service_toll_free_number_isSet) {
        obj.insert(QString("lodging.customerServiceTollFreeNumber"), ::OpenAPI::toJsonValue(m_lodging_customer_service_toll_free_number));
    }
    if (m_lodging_fire_safety_act_indicator_isSet) {
        obj.insert(QString("lodging.fireSafetyActIndicator"), ::OpenAPI::toJsonValue(m_lodging_fire_safety_act_indicator));
    }
    if (m_lodging_folio_cash_advances_isSet) {
        obj.insert(QString("lodging.folioCashAdvances"), ::OpenAPI::toJsonValue(m_lodging_folio_cash_advances));
    }
    if (m_lodging_folio_number_isSet) {
        obj.insert(QString("lodging.folioNumber"), ::OpenAPI::toJsonValue(m_lodging_folio_number));
    }
    if (m_lodging_food_beverage_charges_isSet) {
        obj.insert(QString("lodging.foodBeverageCharges"), ::OpenAPI::toJsonValue(m_lodging_food_beverage_charges));
    }
    if (m_lodging_no_show_indicator_isSet) {
        obj.insert(QString("lodging.noShowIndicator"), ::OpenAPI::toJsonValue(m_lodging_no_show_indicator));
    }
    if (m_lodging_prepaid_expenses_isSet) {
        obj.insert(QString("lodging.prepaidExpenses"), ::OpenAPI::toJsonValue(m_lodging_prepaid_expenses));
    }
    if (m_lodging_property_phone_number_isSet) {
        obj.insert(QString("lodging.propertyPhoneNumber"), ::OpenAPI::toJsonValue(m_lodging_property_phone_number));
    }
    if (m_lodging_room1_number_of_nights_isSet) {
        obj.insert(QString("lodging.room1.numberOfNights"), ::OpenAPI::toJsonValue(m_lodging_room1_number_of_nights));
    }
    if (m_lodging_room1_rate_isSet) {
        obj.insert(QString("lodging.room1.rate"), ::OpenAPI::toJsonValue(m_lodging_room1_rate));
    }
    if (m_lodging_total_room_tax_isSet) {
        obj.insert(QString("lodging.totalRoomTax"), ::OpenAPI::toJsonValue(m_lodging_total_room_tax));
    }
    if (m_lodging_total_tax_isSet) {
        obj.insert(QString("lodging.totalTax"), ::OpenAPI::toJsonValue(m_lodging_total_tax));
    }
    if (m_openinvoicedata_merchant_data_isSet) {
        obj.insert(QString("openinvoicedata.merchantData"), ::OpenAPI::toJsonValue(m_openinvoicedata_merchant_data));
    }
    if (m_openinvoicedata_number_of_lines_isSet) {
        obj.insert(QString("openinvoicedata.numberOfLines"), ::OpenAPI::toJsonValue(m_openinvoicedata_number_of_lines));
    }
    if (m_openinvoicedata_recipient_first_name_isSet) {
        obj.insert(QString("openinvoicedata.recipientFirstName"), ::OpenAPI::toJsonValue(m_openinvoicedata_recipient_first_name));
    }
    if (m_openinvoicedata_recipient_last_name_isSet) {
        obj.insert(QString("openinvoicedata.recipientLastName"), ::OpenAPI::toJsonValue(m_openinvoicedata_recipient_last_name));
    }
    if (m_openinvoicedata_line_item_nr_currency_code_isSet) {
        obj.insert(QString("openinvoicedataLine[itemNr].currencyCode"), ::OpenAPI::toJsonValue(m_openinvoicedata_line_item_nr_currency_code));
    }
    if (m_openinvoicedata_line_item_nr_description_isSet) {
        obj.insert(QString("openinvoicedataLine[itemNr].description"), ::OpenAPI::toJsonValue(m_openinvoicedata_line_item_nr_description));
    }
    if (m_openinvoicedata_line_item_nr_item_amount_isSet) {
        obj.insert(QString("openinvoicedataLine[itemNr].itemAmount"), ::OpenAPI::toJsonValue(m_openinvoicedata_line_item_nr_item_amount));
    }
    if (m_openinvoicedata_line_item_nr_item_id_isSet) {
        obj.insert(QString("openinvoicedataLine[itemNr].itemId"), ::OpenAPI::toJsonValue(m_openinvoicedata_line_item_nr_item_id));
    }
    if (m_openinvoicedata_line_item_nr_item_vat_amount_isSet) {
        obj.insert(QString("openinvoicedataLine[itemNr].itemVatAmount"), ::OpenAPI::toJsonValue(m_openinvoicedata_line_item_nr_item_vat_amount));
    }
    if (m_openinvoicedata_line_item_nr_item_vat_percentage_isSet) {
        obj.insert(QString("openinvoicedataLine[itemNr].itemVatPercentage"), ::OpenAPI::toJsonValue(m_openinvoicedata_line_item_nr_item_vat_percentage));
    }
    if (m_openinvoicedata_line_item_nr_number_of_items_isSet) {
        obj.insert(QString("openinvoicedataLine[itemNr].numberOfItems"), ::OpenAPI::toJsonValue(m_openinvoicedata_line_item_nr_number_of_items));
    }
    if (m_openinvoicedata_line_item_nr_return_shipping_company_isSet) {
        obj.insert(QString("openinvoicedataLine[itemNr].returnShippingCompany"), ::OpenAPI::toJsonValue(m_openinvoicedata_line_item_nr_return_shipping_company));
    }
    if (m_openinvoicedata_line_item_nr_return_tracking_number_isSet) {
        obj.insert(QString("openinvoicedataLine[itemNr].returnTrackingNumber"), ::OpenAPI::toJsonValue(m_openinvoicedata_line_item_nr_return_tracking_number));
    }
    if (m_openinvoicedata_line_item_nr_return_tracking_uri_isSet) {
        obj.insert(QString("openinvoicedataLine[itemNr].returnTrackingUri"), ::OpenAPI::toJsonValue(m_openinvoicedata_line_item_nr_return_tracking_uri));
    }
    if (m_openinvoicedata_line_item_nr_shipping_company_isSet) {
        obj.insert(QString("openinvoicedataLine[itemNr].shippingCompany"), ::OpenAPI::toJsonValue(m_openinvoicedata_line_item_nr_shipping_company));
    }
    if (m_openinvoicedata_line_item_nr_shipping_method_isSet) {
        obj.insert(QString("openinvoicedataLine[itemNr].shippingMethod"), ::OpenAPI::toJsonValue(m_openinvoicedata_line_item_nr_shipping_method));
    }
    if (m_openinvoicedata_line_item_nr_tracking_number_isSet) {
        obj.insert(QString("openinvoicedataLine[itemNr].trackingNumber"), ::OpenAPI::toJsonValue(m_openinvoicedata_line_item_nr_tracking_number));
    }
    if (m_openinvoicedata_line_item_nr_tracking_uri_isSet) {
        obj.insert(QString("openinvoicedataLine[itemNr].trackingUri"), ::OpenAPI::toJsonValue(m_openinvoicedata_line_item_nr_tracking_uri));
    }
    if (m_opi_include_trans_token_isSet) {
        obj.insert(QString("opi.includeTransToken"), ::OpenAPI::toJsonValue(m_opi_include_trans_token));
    }
    if (m_ratepay_installment_amount_isSet) {
        obj.insert(QString("ratepay.installmentAmount"), ::OpenAPI::toJsonValue(m_ratepay_installment_amount));
    }
    if (m_ratepay_interest_rate_isSet) {
        obj.insert(QString("ratepay.interestRate"), ::OpenAPI::toJsonValue(m_ratepay_interest_rate));
    }
    if (m_ratepay_last_installment_amount_isSet) {
        obj.insert(QString("ratepay.lastInstallmentAmount"), ::OpenAPI::toJsonValue(m_ratepay_last_installment_amount));
    }
    if (m_ratepay_payment_firstday_isSet) {
        obj.insert(QString("ratepay.paymentFirstday"), ::OpenAPI::toJsonValue(m_ratepay_payment_firstday));
    }
    if (m_ratepaydata_delivery_date_isSet) {
        obj.insert(QString("ratepaydata.deliveryDate"), ::OpenAPI::toJsonValue(m_ratepaydata_delivery_date));
    }
    if (m_ratepaydata_due_date_isSet) {
        obj.insert(QString("ratepaydata.dueDate"), ::OpenAPI::toJsonValue(m_ratepaydata_due_date));
    }
    if (m_ratepaydata_invoice_date_isSet) {
        obj.insert(QString("ratepaydata.invoiceDate"), ::OpenAPI::toJsonValue(m_ratepaydata_invoice_date));
    }
    if (m_ratepaydata_invoice_id_isSet) {
        obj.insert(QString("ratepaydata.invoiceId"), ::OpenAPI::toJsonValue(m_ratepaydata_invoice_id));
    }
    if (m_retry_chain_attempt_number_isSet) {
        obj.insert(QString("retry.chainAttemptNumber"), ::OpenAPI::toJsonValue(m_retry_chain_attempt_number));
    }
    if (m_retry_order_attempt_number_isSet) {
        obj.insert(QString("retry.orderAttemptNumber"), ::OpenAPI::toJsonValue(m_retry_order_attempt_number));
    }
    if (m_retry_skip_retry_isSet) {
        obj.insert(QString("retry.skipRetry"), ::OpenAPI::toJsonValue(m_retry_skip_retry));
    }
    if (m_riskdata__custom_field_name_isSet) {
        obj.insert(QString("riskdata.[customFieldName]"), ::OpenAPI::toJsonValue(m_riskdata__custom_field_name));
    }
    if (m_riskdata_basket_item_item_nr_amount_per_item_isSet) {
        obj.insert(QString("riskdata.basket.item[itemNr].amountPerItem"), ::OpenAPI::toJsonValue(m_riskdata_basket_item_item_nr_amount_per_item));
    }
    if (m_riskdata_basket_item_item_nr_brand_isSet) {
        obj.insert(QString("riskdata.basket.item[itemNr].brand"), ::OpenAPI::toJsonValue(m_riskdata_basket_item_item_nr_brand));
    }
    if (m_riskdata_basket_item_item_nr_category_isSet) {
        obj.insert(QString("riskdata.basket.item[itemNr].category"), ::OpenAPI::toJsonValue(m_riskdata_basket_item_item_nr_category));
    }
    if (m_riskdata_basket_item_item_nr_color_isSet) {
        obj.insert(QString("riskdata.basket.item[itemNr].color"), ::OpenAPI::toJsonValue(m_riskdata_basket_item_item_nr_color));
    }
    if (m_riskdata_basket_item_item_nr_currency_isSet) {
        obj.insert(QString("riskdata.basket.item[itemNr].currency"), ::OpenAPI::toJsonValue(m_riskdata_basket_item_item_nr_currency));
    }
    if (m_riskdata_basket_item_item_nr_item_id_isSet) {
        obj.insert(QString("riskdata.basket.item[itemNr].itemID"), ::OpenAPI::toJsonValue(m_riskdata_basket_item_item_nr_item_id));
    }
    if (m_riskdata_basket_item_item_nr_manufacturer_isSet) {
        obj.insert(QString("riskdata.basket.item[itemNr].manufacturer"), ::OpenAPI::toJsonValue(m_riskdata_basket_item_item_nr_manufacturer));
    }
    if (m_riskdata_basket_item_item_nr_product_title_isSet) {
        obj.insert(QString("riskdata.basket.item[itemNr].productTitle"), ::OpenAPI::toJsonValue(m_riskdata_basket_item_item_nr_product_title));
    }
    if (m_riskdata_basket_item_item_nr_quantity_isSet) {
        obj.insert(QString("riskdata.basket.item[itemNr].quantity"), ::OpenAPI::toJsonValue(m_riskdata_basket_item_item_nr_quantity));
    }
    if (m_riskdata_basket_item_item_nr_receiver_email_isSet) {
        obj.insert(QString("riskdata.basket.item[itemNr].receiverEmail"), ::OpenAPI::toJsonValue(m_riskdata_basket_item_item_nr_receiver_email));
    }
    if (m_riskdata_basket_item_item_nr_size_isSet) {
        obj.insert(QString("riskdata.basket.item[itemNr].size"), ::OpenAPI::toJsonValue(m_riskdata_basket_item_item_nr_size));
    }
    if (m_riskdata_basket_item_item_nr_sku_isSet) {
        obj.insert(QString("riskdata.basket.item[itemNr].sku"), ::OpenAPI::toJsonValue(m_riskdata_basket_item_item_nr_sku));
    }
    if (m_riskdata_basket_item_item_nr_upc_isSet) {
        obj.insert(QString("riskdata.basket.item[itemNr].upc"), ::OpenAPI::toJsonValue(m_riskdata_basket_item_item_nr_upc));
    }
    if (m_riskdata_promotions_promotion_item_nr_promotion_code_isSet) {
        obj.insert(QString("riskdata.promotions.promotion[itemNr].promotionCode"), ::OpenAPI::toJsonValue(m_riskdata_promotions_promotion_item_nr_promotion_code));
    }
    if (m_riskdata_promotions_promotion_item_nr_promotion_discount_amount_isSet) {
        obj.insert(QString("riskdata.promotions.promotion[itemNr].promotionDiscountAmount"), ::OpenAPI::toJsonValue(m_riskdata_promotions_promotion_item_nr_promotion_discount_amount));
    }
    if (m_riskdata_promotions_promotion_item_nr_promotion_discount_currency_isSet) {
        obj.insert(QString("riskdata.promotions.promotion[itemNr].promotionDiscountCurrency"), ::OpenAPI::toJsonValue(m_riskdata_promotions_promotion_item_nr_promotion_discount_currency));
    }
    if (m_riskdata_promotions_promotion_item_nr_promotion_discount_percentage_isSet) {
        obj.insert(QString("riskdata.promotions.promotion[itemNr].promotionDiscountPercentage"), ::OpenAPI::toJsonValue(m_riskdata_promotions_promotion_item_nr_promotion_discount_percentage));
    }
    if (m_riskdata_promotions_promotion_item_nr_promotion_name_isSet) {
        obj.insert(QString("riskdata.promotions.promotion[itemNr].promotionName"), ::OpenAPI::toJsonValue(m_riskdata_promotions_promotion_item_nr_promotion_name));
    }
    if (m_riskdata_risk_profile_reference_isSet) {
        obj.insert(QString("riskdata.riskProfileReference"), ::OpenAPI::toJsonValue(m_riskdata_risk_profile_reference));
    }
    if (m_riskdata_skip_risk_isSet) {
        obj.insert(QString("riskdata.skipRisk"), ::OpenAPI::toJsonValue(m_riskdata_skip_risk));
    }
    if (m_pay_pal_country_code_isSet) {
        obj.insert(QString("PayPal.CountryCode"), ::OpenAPI::toJsonValue(m_pay_pal_country_code));
    }
    if (m_pay_pal_email_id_isSet) {
        obj.insert(QString("PayPal.EmailId"), ::OpenAPI::toJsonValue(m_pay_pal_email_id));
    }
    if (m_pay_pal_first_name_isSet) {
        obj.insert(QString("PayPal.FirstName"), ::OpenAPI::toJsonValue(m_pay_pal_first_name));
    }
    if (m_pay_pal_last_name_isSet) {
        obj.insert(QString("PayPal.LastName"), ::OpenAPI::toJsonValue(m_pay_pal_last_name));
    }
    if (m_pay_pal_payer_id_isSet) {
        obj.insert(QString("PayPal.PayerId"), ::OpenAPI::toJsonValue(m_pay_pal_payer_id));
    }
    if (m_pay_pal_phone_isSet) {
        obj.insert(QString("PayPal.Phone"), ::OpenAPI::toJsonValue(m_pay_pal_phone));
    }
    if (m_pay_pal_protection_eligibility_isSet) {
        obj.insert(QString("PayPal.ProtectionEligibility"), ::OpenAPI::toJsonValue(m_pay_pal_protection_eligibility));
    }
    if (m_pay_pal_transaction_id_isSet) {
        obj.insert(QString("PayPal.TransactionId"), ::OpenAPI::toJsonValue(m_pay_pal_transaction_id));
    }
    if (m_avs_result_raw_isSet) {
        obj.insert(QString("avsResultRaw"), ::OpenAPI::toJsonValue(m_avs_result_raw));
    }
    if (m_bin_isSet) {
        obj.insert(QString("bin"), ::OpenAPI::toJsonValue(m_bin));
    }
    if (m_cvc_result_raw_isSet) {
        obj.insert(QString("cvcResultRaw"), ::OpenAPI::toJsonValue(m_cvc_result_raw));
    }
    if (m_risk_token_isSet) {
        obj.insert(QString("riskToken"), ::OpenAPI::toJsonValue(m_risk_token));
    }
    if (m_three_d_authenticated_isSet) {
        obj.insert(QString("threeDAuthenticated"), ::OpenAPI::toJsonValue(m_three_d_authenticated));
    }
    if (m_three_d_offered_isSet) {
        obj.insert(QString("threeDOffered"), ::OpenAPI::toJsonValue(m_three_d_offered));
    }
    if (m_token_data_type_isSet) {
        obj.insert(QString("tokenDataType"), ::OpenAPI::toJsonValue(m_token_data_type));
    }
    if (m_sub_merchant_number_of_sub_sellers_isSet) {
        obj.insert(QString("subMerchant.numberOfSubSellers"), ::OpenAPI::toJsonValue(m_sub_merchant_number_of_sub_sellers));
    }
    if (m_sub_merchant_sub_seller_sub_seller_nr_city_isSet) {
        obj.insert(QString("subMerchant.subSeller[subSellerNr].city"), ::OpenAPI::toJsonValue(m_sub_merchant_sub_seller_sub_seller_nr_city));
    }
    if (m_sub_merchant_sub_seller_sub_seller_nr_country_isSet) {
        obj.insert(QString("subMerchant.subSeller[subSellerNr].country"), ::OpenAPI::toJsonValue(m_sub_merchant_sub_seller_sub_seller_nr_country));
    }
    if (m_sub_merchant_sub_seller_sub_seller_nr_id_isSet) {
        obj.insert(QString("subMerchant.subSeller[subSellerNr].id"), ::OpenAPI::toJsonValue(m_sub_merchant_sub_seller_sub_seller_nr_id));
    }
    if (m_sub_merchant_sub_seller_sub_seller_nr_mcc_isSet) {
        obj.insert(QString("subMerchant.subSeller[subSellerNr].mcc"), ::OpenAPI::toJsonValue(m_sub_merchant_sub_seller_sub_seller_nr_mcc));
    }
    if (m_sub_merchant_sub_seller_sub_seller_nr_name_isSet) {
        obj.insert(QString("subMerchant.subSeller[subSellerNr].name"), ::OpenAPI::toJsonValue(m_sub_merchant_sub_seller_sub_seller_nr_name));
    }
    if (m_sub_merchant_sub_seller_sub_seller_nr_postal_code_isSet) {
        obj.insert(QString("subMerchant.subSeller[subSellerNr].postalCode"), ::OpenAPI::toJsonValue(m_sub_merchant_sub_seller_sub_seller_nr_postal_code));
    }
    if (m_sub_merchant_sub_seller_sub_seller_nr_state_isSet) {
        obj.insert(QString("subMerchant.subSeller[subSellerNr].state"), ::OpenAPI::toJsonValue(m_sub_merchant_sub_seller_sub_seller_nr_state));
    }
    if (m_sub_merchant_sub_seller_sub_seller_nr_street_isSet) {
        obj.insert(QString("subMerchant.subSeller[subSellerNr].street"), ::OpenAPI::toJsonValue(m_sub_merchant_sub_seller_sub_seller_nr_street));
    }
    if (m_sub_merchant_sub_seller_sub_seller_nr_tax_id_isSet) {
        obj.insert(QString("subMerchant.subSeller[subSellerNr].taxId"), ::OpenAPI::toJsonValue(m_sub_merchant_sub_seller_sub_seller_nr_tax_id));
    }
    if (m_enhanced_scheme_data_employee_name_isSet) {
        obj.insert(QString("enhancedSchemeData.employeeName"), ::OpenAPI::toJsonValue(m_enhanced_scheme_data_employee_name));
    }
    if (m_enhanced_scheme_data_job_description_isSet) {
        obj.insert(QString("enhancedSchemeData.jobDescription"), ::OpenAPI::toJsonValue(m_enhanced_scheme_data_job_description));
    }
    if (m_enhanced_scheme_data_regular_hours_rate_isSet) {
        obj.insert(QString("enhancedSchemeData.regularHoursRate"), ::OpenAPI::toJsonValue(m_enhanced_scheme_data_regular_hours_rate));
    }
    if (m_enhanced_scheme_data_regular_hours_worked_isSet) {
        obj.insert(QString("enhancedSchemeData.regularHoursWorked"), ::OpenAPI::toJsonValue(m_enhanced_scheme_data_regular_hours_worked));
    }
    if (m_enhanced_scheme_data_request_name_isSet) {
        obj.insert(QString("enhancedSchemeData.requestName"), ::OpenAPI::toJsonValue(m_enhanced_scheme_data_request_name));
    }
    if (m_enhanced_scheme_data_temp_start_date_isSet) {
        obj.insert(QString("enhancedSchemeData.tempStartDate"), ::OpenAPI::toJsonValue(m_enhanced_scheme_data_temp_start_date));
    }
    if (m_enhanced_scheme_data_temp_week_ending_isSet) {
        obj.insert(QString("enhancedSchemeData.tempWeekEnding"), ::OpenAPI::toJsonValue(m_enhanced_scheme_data_temp_week_ending));
    }
    if (m_androidpay_token_isSet) {
        obj.insert(QString("androidpay.token"), ::OpenAPI::toJsonValue(m_androidpay_token));
    }
    if (m_masterpass_transaction_id_isSet) {
        obj.insert(QString("masterpass.transactionId"), ::OpenAPI::toJsonValue(m_masterpass_transaction_id));
    }
    if (m_payment_token_isSet) {
        obj.insert(QString("payment.token"), ::OpenAPI::toJsonValue(m_payment_token));
    }
    if (m_paywithgoogle_token_isSet) {
        obj.insert(QString("paywithgoogle.token"), ::OpenAPI::toJsonValue(m_paywithgoogle_token));
    }
    if (m_samsungpay_token_isSet) {
        obj.insert(QString("samsungpay.token"), ::OpenAPI::toJsonValue(m_samsungpay_token));
    }
    if (m_visacheckout_call_id_isSet) {
        obj.insert(QString("visacheckout.callId"), ::OpenAPI::toJsonValue(m_visacheckout_call_id));
    }
    return obj;
}

QString OAIPaymentRequest_additionalData::getAllow3Ds2() const {
    return m_allow3_ds2;
}
void OAIPaymentRequest_additionalData::setAllow3Ds2(const QString &allow3_ds2) {
    m_allow3_ds2 = allow3_ds2;
    m_allow3_ds2_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_allow3_ds2_Set() const{
    return m_allow3_ds2_isSet;
}

bool OAIPaymentRequest_additionalData::is_allow3_ds2_Valid() const{
    return m_allow3_ds2_isValid;
}

QString OAIPaymentRequest_additionalData::getChallengeWindowSize() const {
    return m_challenge_window_size;
}
void OAIPaymentRequest_additionalData::setChallengeWindowSize(const QString &challenge_window_size) {
    m_challenge_window_size = challenge_window_size;
    m_challenge_window_size_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_challenge_window_size_Set() const{
    return m_challenge_window_size_isSet;
}

bool OAIPaymentRequest_additionalData::is_challenge_window_size_Valid() const{
    return m_challenge_window_size_isValid;
}

QString OAIPaymentRequest_additionalData::getExecuteThreeD() const {
    return m_execute_three_d;
}
void OAIPaymentRequest_additionalData::setExecuteThreeD(const QString &execute_three_d) {
    m_execute_three_d = execute_three_d;
    m_execute_three_d_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_execute_three_d_Set() const{
    return m_execute_three_d_isSet;
}

bool OAIPaymentRequest_additionalData::is_execute_three_d_Valid() const{
    return m_execute_three_d_isValid;
}

QString OAIPaymentRequest_additionalData::getMpiImplementationType() const {
    return m_mpi_implementation_type;
}
void OAIPaymentRequest_additionalData::setMpiImplementationType(const QString &mpi_implementation_type) {
    m_mpi_implementation_type = mpi_implementation_type;
    m_mpi_implementation_type_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_mpi_implementation_type_Set() const{
    return m_mpi_implementation_type_isSet;
}

bool OAIPaymentRequest_additionalData::is_mpi_implementation_type_Valid() const{
    return m_mpi_implementation_type_isValid;
}

QString OAIPaymentRequest_additionalData::getScaExemption() const {
    return m_sca_exemption;
}
void OAIPaymentRequest_additionalData::setScaExemption(const QString &sca_exemption) {
    m_sca_exemption = sca_exemption;
    m_sca_exemption_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_sca_exemption_Set() const{
    return m_sca_exemption_isSet;
}

bool OAIPaymentRequest_additionalData::is_sca_exemption_Valid() const{
    return m_sca_exemption_isValid;
}

QString OAIPaymentRequest_additionalData::getThreeDsVersion() const {
    return m_three_ds_version;
}
void OAIPaymentRequest_additionalData::setThreeDsVersion(const QString &three_ds_version) {
    m_three_ds_version = three_ds_version;
    m_three_ds_version_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_three_ds_version_Set() const{
    return m_three_ds_version_isSet;
}

bool OAIPaymentRequest_additionalData::is_three_ds_version_Valid() const{
    return m_three_ds_version_isValid;
}

QString OAIPaymentRequest_additionalData::getAirlineAgencyInvoiceNumber() const {
    return m_airline_agency_invoice_number;
}
void OAIPaymentRequest_additionalData::setAirlineAgencyInvoiceNumber(const QString &airline_agency_invoice_number) {
    m_airline_agency_invoice_number = airline_agency_invoice_number;
    m_airline_agency_invoice_number_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_airline_agency_invoice_number_Set() const{
    return m_airline_agency_invoice_number_isSet;
}

bool OAIPaymentRequest_additionalData::is_airline_agency_invoice_number_Valid() const{
    return m_airline_agency_invoice_number_isValid;
}

QString OAIPaymentRequest_additionalData::getAirlineAgencyPlanName() const {
    return m_airline_agency_plan_name;
}
void OAIPaymentRequest_additionalData::setAirlineAgencyPlanName(const QString &airline_agency_plan_name) {
    m_airline_agency_plan_name = airline_agency_plan_name;
    m_airline_agency_plan_name_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_airline_agency_plan_name_Set() const{
    return m_airline_agency_plan_name_isSet;
}

bool OAIPaymentRequest_additionalData::is_airline_agency_plan_name_Valid() const{
    return m_airline_agency_plan_name_isValid;
}

QString OAIPaymentRequest_additionalData::getAirlineAirlineCode() const {
    return m_airline_airline_code;
}
void OAIPaymentRequest_additionalData::setAirlineAirlineCode(const QString &airline_airline_code) {
    m_airline_airline_code = airline_airline_code;
    m_airline_airline_code_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_airline_airline_code_Set() const{
    return m_airline_airline_code_isSet;
}

bool OAIPaymentRequest_additionalData::is_airline_airline_code_Valid() const{
    return m_airline_airline_code_isValid;
}

QString OAIPaymentRequest_additionalData::getAirlineAirlineDesignatorCode() const {
    return m_airline_airline_designator_code;
}
void OAIPaymentRequest_additionalData::setAirlineAirlineDesignatorCode(const QString &airline_airline_designator_code) {
    m_airline_airline_designator_code = airline_airline_designator_code;
    m_airline_airline_designator_code_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_airline_airline_designator_code_Set() const{
    return m_airline_airline_designator_code_isSet;
}

bool OAIPaymentRequest_additionalData::is_airline_airline_designator_code_Valid() const{
    return m_airline_airline_designator_code_isValid;
}

QString OAIPaymentRequest_additionalData::getAirlineBoardingFee() const {
    return m_airline_boarding_fee;
}
void OAIPaymentRequest_additionalData::setAirlineBoardingFee(const QString &airline_boarding_fee) {
    m_airline_boarding_fee = airline_boarding_fee;
    m_airline_boarding_fee_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_airline_boarding_fee_Set() const{
    return m_airline_boarding_fee_isSet;
}

bool OAIPaymentRequest_additionalData::is_airline_boarding_fee_Valid() const{
    return m_airline_boarding_fee_isValid;
}

QString OAIPaymentRequest_additionalData::getAirlineComputerizedReservationSystem() const {
    return m_airline_computerized_reservation_system;
}
void OAIPaymentRequest_additionalData::setAirlineComputerizedReservationSystem(const QString &airline_computerized_reservation_system) {
    m_airline_computerized_reservation_system = airline_computerized_reservation_system;
    m_airline_computerized_reservation_system_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_airline_computerized_reservation_system_Set() const{
    return m_airline_computerized_reservation_system_isSet;
}

bool OAIPaymentRequest_additionalData::is_airline_computerized_reservation_system_Valid() const{
    return m_airline_computerized_reservation_system_isValid;
}

QString OAIPaymentRequest_additionalData::getAirlineCustomerReferenceNumber() const {
    return m_airline_customer_reference_number;
}
void OAIPaymentRequest_additionalData::setAirlineCustomerReferenceNumber(const QString &airline_customer_reference_number) {
    m_airline_customer_reference_number = airline_customer_reference_number;
    m_airline_customer_reference_number_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_airline_customer_reference_number_Set() const{
    return m_airline_customer_reference_number_isSet;
}

bool OAIPaymentRequest_additionalData::is_airline_customer_reference_number_Valid() const{
    return m_airline_customer_reference_number_isValid;
}

QString OAIPaymentRequest_additionalData::getAirlineDocumentType() const {
    return m_airline_document_type;
}
void OAIPaymentRequest_additionalData::setAirlineDocumentType(const QString &airline_document_type) {
    m_airline_document_type = airline_document_type;
    m_airline_document_type_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_airline_document_type_Set() const{
    return m_airline_document_type_isSet;
}

bool OAIPaymentRequest_additionalData::is_airline_document_type_Valid() const{
    return m_airline_document_type_isValid;
}

QString OAIPaymentRequest_additionalData::getAirlineFlightDate() const {
    return m_airline_flight_date;
}
void OAIPaymentRequest_additionalData::setAirlineFlightDate(const QString &airline_flight_date) {
    m_airline_flight_date = airline_flight_date;
    m_airline_flight_date_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_airline_flight_date_Set() const{
    return m_airline_flight_date_isSet;
}

bool OAIPaymentRequest_additionalData::is_airline_flight_date_Valid() const{
    return m_airline_flight_date_isValid;
}

QString OAIPaymentRequest_additionalData::getAirlineLegCarrierCode() const {
    return m_airline_leg_carrier_code;
}
void OAIPaymentRequest_additionalData::setAirlineLegCarrierCode(const QString &airline_leg_carrier_code) {
    m_airline_leg_carrier_code = airline_leg_carrier_code;
    m_airline_leg_carrier_code_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_airline_leg_carrier_code_Set() const{
    return m_airline_leg_carrier_code_isSet;
}

bool OAIPaymentRequest_additionalData::is_airline_leg_carrier_code_Valid() const{
    return m_airline_leg_carrier_code_isValid;
}

QString OAIPaymentRequest_additionalData::getAirlineLegClassOfTravel() const {
    return m_airline_leg_class_of_travel;
}
void OAIPaymentRequest_additionalData::setAirlineLegClassOfTravel(const QString &airline_leg_class_of_travel) {
    m_airline_leg_class_of_travel = airline_leg_class_of_travel;
    m_airline_leg_class_of_travel_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_airline_leg_class_of_travel_Set() const{
    return m_airline_leg_class_of_travel_isSet;
}

bool OAIPaymentRequest_additionalData::is_airline_leg_class_of_travel_Valid() const{
    return m_airline_leg_class_of_travel_isValid;
}

QString OAIPaymentRequest_additionalData::getAirlineLegDateOfTravel() const {
    return m_airline_leg_date_of_travel;
}
void OAIPaymentRequest_additionalData::setAirlineLegDateOfTravel(const QString &airline_leg_date_of_travel) {
    m_airline_leg_date_of_travel = airline_leg_date_of_travel;
    m_airline_leg_date_of_travel_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_airline_leg_date_of_travel_Set() const{
    return m_airline_leg_date_of_travel_isSet;
}

bool OAIPaymentRequest_additionalData::is_airline_leg_date_of_travel_Valid() const{
    return m_airline_leg_date_of_travel_isValid;
}

QString OAIPaymentRequest_additionalData::getAirlineLegDepartAirport() const {
    return m_airline_leg_depart_airport;
}
void OAIPaymentRequest_additionalData::setAirlineLegDepartAirport(const QString &airline_leg_depart_airport) {
    m_airline_leg_depart_airport = airline_leg_depart_airport;
    m_airline_leg_depart_airport_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_airline_leg_depart_airport_Set() const{
    return m_airline_leg_depart_airport_isSet;
}

bool OAIPaymentRequest_additionalData::is_airline_leg_depart_airport_Valid() const{
    return m_airline_leg_depart_airport_isValid;
}

QString OAIPaymentRequest_additionalData::getAirlineLegDepartTax() const {
    return m_airline_leg_depart_tax;
}
void OAIPaymentRequest_additionalData::setAirlineLegDepartTax(const QString &airline_leg_depart_tax) {
    m_airline_leg_depart_tax = airline_leg_depart_tax;
    m_airline_leg_depart_tax_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_airline_leg_depart_tax_Set() const{
    return m_airline_leg_depart_tax_isSet;
}

bool OAIPaymentRequest_additionalData::is_airline_leg_depart_tax_Valid() const{
    return m_airline_leg_depart_tax_isValid;
}

QString OAIPaymentRequest_additionalData::getAirlineLegDestinationCode() const {
    return m_airline_leg_destination_code;
}
void OAIPaymentRequest_additionalData::setAirlineLegDestinationCode(const QString &airline_leg_destination_code) {
    m_airline_leg_destination_code = airline_leg_destination_code;
    m_airline_leg_destination_code_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_airline_leg_destination_code_Set() const{
    return m_airline_leg_destination_code_isSet;
}

bool OAIPaymentRequest_additionalData::is_airline_leg_destination_code_Valid() const{
    return m_airline_leg_destination_code_isValid;
}

QString OAIPaymentRequest_additionalData::getAirlineLegFareBaseCode() const {
    return m_airline_leg_fare_base_code;
}
void OAIPaymentRequest_additionalData::setAirlineLegFareBaseCode(const QString &airline_leg_fare_base_code) {
    m_airline_leg_fare_base_code = airline_leg_fare_base_code;
    m_airline_leg_fare_base_code_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_airline_leg_fare_base_code_Set() const{
    return m_airline_leg_fare_base_code_isSet;
}

bool OAIPaymentRequest_additionalData::is_airline_leg_fare_base_code_Valid() const{
    return m_airline_leg_fare_base_code_isValid;
}

QString OAIPaymentRequest_additionalData::getAirlineLegFlightNumber() const {
    return m_airline_leg_flight_number;
}
void OAIPaymentRequest_additionalData::setAirlineLegFlightNumber(const QString &airline_leg_flight_number) {
    m_airline_leg_flight_number = airline_leg_flight_number;
    m_airline_leg_flight_number_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_airline_leg_flight_number_Set() const{
    return m_airline_leg_flight_number_isSet;
}

bool OAIPaymentRequest_additionalData::is_airline_leg_flight_number_Valid() const{
    return m_airline_leg_flight_number_isValid;
}

QString OAIPaymentRequest_additionalData::getAirlineLegStopOverCode() const {
    return m_airline_leg_stop_over_code;
}
void OAIPaymentRequest_additionalData::setAirlineLegStopOverCode(const QString &airline_leg_stop_over_code) {
    m_airline_leg_stop_over_code = airline_leg_stop_over_code;
    m_airline_leg_stop_over_code_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_airline_leg_stop_over_code_Set() const{
    return m_airline_leg_stop_over_code_isSet;
}

bool OAIPaymentRequest_additionalData::is_airline_leg_stop_over_code_Valid() const{
    return m_airline_leg_stop_over_code_isValid;
}

QString OAIPaymentRequest_additionalData::getAirlinePassengerDateOfBirth() const {
    return m_airline_passenger_date_of_birth;
}
void OAIPaymentRequest_additionalData::setAirlinePassengerDateOfBirth(const QString &airline_passenger_date_of_birth) {
    m_airline_passenger_date_of_birth = airline_passenger_date_of_birth;
    m_airline_passenger_date_of_birth_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_airline_passenger_date_of_birth_Set() const{
    return m_airline_passenger_date_of_birth_isSet;
}

bool OAIPaymentRequest_additionalData::is_airline_passenger_date_of_birth_Valid() const{
    return m_airline_passenger_date_of_birth_isValid;
}

QString OAIPaymentRequest_additionalData::getAirlinePassengerFirstName() const {
    return m_airline_passenger_first_name;
}
void OAIPaymentRequest_additionalData::setAirlinePassengerFirstName(const QString &airline_passenger_first_name) {
    m_airline_passenger_first_name = airline_passenger_first_name;
    m_airline_passenger_first_name_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_airline_passenger_first_name_Set() const{
    return m_airline_passenger_first_name_isSet;
}

bool OAIPaymentRequest_additionalData::is_airline_passenger_first_name_Valid() const{
    return m_airline_passenger_first_name_isValid;
}

QString OAIPaymentRequest_additionalData::getAirlinePassengerLastName() const {
    return m_airline_passenger_last_name;
}
void OAIPaymentRequest_additionalData::setAirlinePassengerLastName(const QString &airline_passenger_last_name) {
    m_airline_passenger_last_name = airline_passenger_last_name;
    m_airline_passenger_last_name_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_airline_passenger_last_name_Set() const{
    return m_airline_passenger_last_name_isSet;
}

bool OAIPaymentRequest_additionalData::is_airline_passenger_last_name_Valid() const{
    return m_airline_passenger_last_name_isValid;
}

QString OAIPaymentRequest_additionalData::getAirlinePassengerTelephoneNumber() const {
    return m_airline_passenger_telephone_number;
}
void OAIPaymentRequest_additionalData::setAirlinePassengerTelephoneNumber(const QString &airline_passenger_telephone_number) {
    m_airline_passenger_telephone_number = airline_passenger_telephone_number;
    m_airline_passenger_telephone_number_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_airline_passenger_telephone_number_Set() const{
    return m_airline_passenger_telephone_number_isSet;
}

bool OAIPaymentRequest_additionalData::is_airline_passenger_telephone_number_Valid() const{
    return m_airline_passenger_telephone_number_isValid;
}

QString OAIPaymentRequest_additionalData::getAirlinePassengerTravellerType() const {
    return m_airline_passenger_traveller_type;
}
void OAIPaymentRequest_additionalData::setAirlinePassengerTravellerType(const QString &airline_passenger_traveller_type) {
    m_airline_passenger_traveller_type = airline_passenger_traveller_type;
    m_airline_passenger_traveller_type_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_airline_passenger_traveller_type_Set() const{
    return m_airline_passenger_traveller_type_isSet;
}

bool OAIPaymentRequest_additionalData::is_airline_passenger_traveller_type_Valid() const{
    return m_airline_passenger_traveller_type_isValid;
}

QString OAIPaymentRequest_additionalData::getAirlinePassengerName() const {
    return m_airline_passenger_name;
}
void OAIPaymentRequest_additionalData::setAirlinePassengerName(const QString &airline_passenger_name) {
    m_airline_passenger_name = airline_passenger_name;
    m_airline_passenger_name_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_airline_passenger_name_Set() const{
    return m_airline_passenger_name_isSet;
}

bool OAIPaymentRequest_additionalData::is_airline_passenger_name_Valid() const{
    return m_airline_passenger_name_isValid;
}

QString OAIPaymentRequest_additionalData::getAirlineTicketIssueAddress() const {
    return m_airline_ticket_issue_address;
}
void OAIPaymentRequest_additionalData::setAirlineTicketIssueAddress(const QString &airline_ticket_issue_address) {
    m_airline_ticket_issue_address = airline_ticket_issue_address;
    m_airline_ticket_issue_address_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_airline_ticket_issue_address_Set() const{
    return m_airline_ticket_issue_address_isSet;
}

bool OAIPaymentRequest_additionalData::is_airline_ticket_issue_address_Valid() const{
    return m_airline_ticket_issue_address_isValid;
}

QString OAIPaymentRequest_additionalData::getAirlineTicketNumber() const {
    return m_airline_ticket_number;
}
void OAIPaymentRequest_additionalData::setAirlineTicketNumber(const QString &airline_ticket_number) {
    m_airline_ticket_number = airline_ticket_number;
    m_airline_ticket_number_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_airline_ticket_number_Set() const{
    return m_airline_ticket_number_isSet;
}

bool OAIPaymentRequest_additionalData::is_airline_ticket_number_Valid() const{
    return m_airline_ticket_number_isValid;
}

QString OAIPaymentRequest_additionalData::getAirlineTravelAgencyCode() const {
    return m_airline_travel_agency_code;
}
void OAIPaymentRequest_additionalData::setAirlineTravelAgencyCode(const QString &airline_travel_agency_code) {
    m_airline_travel_agency_code = airline_travel_agency_code;
    m_airline_travel_agency_code_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_airline_travel_agency_code_Set() const{
    return m_airline_travel_agency_code_isSet;
}

bool OAIPaymentRequest_additionalData::is_airline_travel_agency_code_Valid() const{
    return m_airline_travel_agency_code_isValid;
}

QString OAIPaymentRequest_additionalData::getAirlineTravelAgencyName() const {
    return m_airline_travel_agency_name;
}
void OAIPaymentRequest_additionalData::setAirlineTravelAgencyName(const QString &airline_travel_agency_name) {
    m_airline_travel_agency_name = airline_travel_agency_name;
    m_airline_travel_agency_name_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_airline_travel_agency_name_Set() const{
    return m_airline_travel_agency_name_isSet;
}

bool OAIPaymentRequest_additionalData::is_airline_travel_agency_name_Valid() const{
    return m_airline_travel_agency_name_isValid;
}

QString OAIPaymentRequest_additionalData::getCarRentalCheckOutDate() const {
    return m_car_rental_check_out_date;
}
void OAIPaymentRequest_additionalData::setCarRentalCheckOutDate(const QString &car_rental_check_out_date) {
    m_car_rental_check_out_date = car_rental_check_out_date;
    m_car_rental_check_out_date_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_car_rental_check_out_date_Set() const{
    return m_car_rental_check_out_date_isSet;
}

bool OAIPaymentRequest_additionalData::is_car_rental_check_out_date_Valid() const{
    return m_car_rental_check_out_date_isValid;
}

QString OAIPaymentRequest_additionalData::getCarRentalCustomerServiceTollFreeNumber() const {
    return m_car_rental_customer_service_toll_free_number;
}
void OAIPaymentRequest_additionalData::setCarRentalCustomerServiceTollFreeNumber(const QString &car_rental_customer_service_toll_free_number) {
    m_car_rental_customer_service_toll_free_number = car_rental_customer_service_toll_free_number;
    m_car_rental_customer_service_toll_free_number_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_car_rental_customer_service_toll_free_number_Set() const{
    return m_car_rental_customer_service_toll_free_number_isSet;
}

bool OAIPaymentRequest_additionalData::is_car_rental_customer_service_toll_free_number_Valid() const{
    return m_car_rental_customer_service_toll_free_number_isValid;
}

QString OAIPaymentRequest_additionalData::getCarRentalDaysRented() const {
    return m_car_rental_days_rented;
}
void OAIPaymentRequest_additionalData::setCarRentalDaysRented(const QString &car_rental_days_rented) {
    m_car_rental_days_rented = car_rental_days_rented;
    m_car_rental_days_rented_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_car_rental_days_rented_Set() const{
    return m_car_rental_days_rented_isSet;
}

bool OAIPaymentRequest_additionalData::is_car_rental_days_rented_Valid() const{
    return m_car_rental_days_rented_isValid;
}

QString OAIPaymentRequest_additionalData::getCarRentalFuelCharges() const {
    return m_car_rental_fuel_charges;
}
void OAIPaymentRequest_additionalData::setCarRentalFuelCharges(const QString &car_rental_fuel_charges) {
    m_car_rental_fuel_charges = car_rental_fuel_charges;
    m_car_rental_fuel_charges_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_car_rental_fuel_charges_Set() const{
    return m_car_rental_fuel_charges_isSet;
}

bool OAIPaymentRequest_additionalData::is_car_rental_fuel_charges_Valid() const{
    return m_car_rental_fuel_charges_isValid;
}

QString OAIPaymentRequest_additionalData::getCarRentalInsuranceCharges() const {
    return m_car_rental_insurance_charges;
}
void OAIPaymentRequest_additionalData::setCarRentalInsuranceCharges(const QString &car_rental_insurance_charges) {
    m_car_rental_insurance_charges = car_rental_insurance_charges;
    m_car_rental_insurance_charges_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_car_rental_insurance_charges_Set() const{
    return m_car_rental_insurance_charges_isSet;
}

bool OAIPaymentRequest_additionalData::is_car_rental_insurance_charges_Valid() const{
    return m_car_rental_insurance_charges_isValid;
}

QString OAIPaymentRequest_additionalData::getCarRentalLocationCity() const {
    return m_car_rental_location_city;
}
void OAIPaymentRequest_additionalData::setCarRentalLocationCity(const QString &car_rental_location_city) {
    m_car_rental_location_city = car_rental_location_city;
    m_car_rental_location_city_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_car_rental_location_city_Set() const{
    return m_car_rental_location_city_isSet;
}

bool OAIPaymentRequest_additionalData::is_car_rental_location_city_Valid() const{
    return m_car_rental_location_city_isValid;
}

QString OAIPaymentRequest_additionalData::getCarRentalLocationCountry() const {
    return m_car_rental_location_country;
}
void OAIPaymentRequest_additionalData::setCarRentalLocationCountry(const QString &car_rental_location_country) {
    m_car_rental_location_country = car_rental_location_country;
    m_car_rental_location_country_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_car_rental_location_country_Set() const{
    return m_car_rental_location_country_isSet;
}

bool OAIPaymentRequest_additionalData::is_car_rental_location_country_Valid() const{
    return m_car_rental_location_country_isValid;
}

QString OAIPaymentRequest_additionalData::getCarRentalLocationStateProvince() const {
    return m_car_rental_location_state_province;
}
void OAIPaymentRequest_additionalData::setCarRentalLocationStateProvince(const QString &car_rental_location_state_province) {
    m_car_rental_location_state_province = car_rental_location_state_province;
    m_car_rental_location_state_province_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_car_rental_location_state_province_Set() const{
    return m_car_rental_location_state_province_isSet;
}

bool OAIPaymentRequest_additionalData::is_car_rental_location_state_province_Valid() const{
    return m_car_rental_location_state_province_isValid;
}

QString OAIPaymentRequest_additionalData::getCarRentalNoShowIndicator() const {
    return m_car_rental_no_show_indicator;
}
void OAIPaymentRequest_additionalData::setCarRentalNoShowIndicator(const QString &car_rental_no_show_indicator) {
    m_car_rental_no_show_indicator = car_rental_no_show_indicator;
    m_car_rental_no_show_indicator_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_car_rental_no_show_indicator_Set() const{
    return m_car_rental_no_show_indicator_isSet;
}

bool OAIPaymentRequest_additionalData::is_car_rental_no_show_indicator_Valid() const{
    return m_car_rental_no_show_indicator_isValid;
}

QString OAIPaymentRequest_additionalData::getCarRentalOneWayDropOffCharges() const {
    return m_car_rental_one_way_drop_off_charges;
}
void OAIPaymentRequest_additionalData::setCarRentalOneWayDropOffCharges(const QString &car_rental_one_way_drop_off_charges) {
    m_car_rental_one_way_drop_off_charges = car_rental_one_way_drop_off_charges;
    m_car_rental_one_way_drop_off_charges_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_car_rental_one_way_drop_off_charges_Set() const{
    return m_car_rental_one_way_drop_off_charges_isSet;
}

bool OAIPaymentRequest_additionalData::is_car_rental_one_way_drop_off_charges_Valid() const{
    return m_car_rental_one_way_drop_off_charges_isValid;
}

QString OAIPaymentRequest_additionalData::getCarRentalRate() const {
    return m_car_rental_rate;
}
void OAIPaymentRequest_additionalData::setCarRentalRate(const QString &car_rental_rate) {
    m_car_rental_rate = car_rental_rate;
    m_car_rental_rate_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_car_rental_rate_Set() const{
    return m_car_rental_rate_isSet;
}

bool OAIPaymentRequest_additionalData::is_car_rental_rate_Valid() const{
    return m_car_rental_rate_isValid;
}

QString OAIPaymentRequest_additionalData::getCarRentalRateIndicator() const {
    return m_car_rental_rate_indicator;
}
void OAIPaymentRequest_additionalData::setCarRentalRateIndicator(const QString &car_rental_rate_indicator) {
    m_car_rental_rate_indicator = car_rental_rate_indicator;
    m_car_rental_rate_indicator_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_car_rental_rate_indicator_Set() const{
    return m_car_rental_rate_indicator_isSet;
}

bool OAIPaymentRequest_additionalData::is_car_rental_rate_indicator_Valid() const{
    return m_car_rental_rate_indicator_isValid;
}

QString OAIPaymentRequest_additionalData::getCarRentalRentalAgreementNumber() const {
    return m_car_rental_rental_agreement_number;
}
void OAIPaymentRequest_additionalData::setCarRentalRentalAgreementNumber(const QString &car_rental_rental_agreement_number) {
    m_car_rental_rental_agreement_number = car_rental_rental_agreement_number;
    m_car_rental_rental_agreement_number_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_car_rental_rental_agreement_number_Set() const{
    return m_car_rental_rental_agreement_number_isSet;
}

bool OAIPaymentRequest_additionalData::is_car_rental_rental_agreement_number_Valid() const{
    return m_car_rental_rental_agreement_number_isValid;
}

QString OAIPaymentRequest_additionalData::getCarRentalRentalClassId() const {
    return m_car_rental_rental_class_id;
}
void OAIPaymentRequest_additionalData::setCarRentalRentalClassId(const QString &car_rental_rental_class_id) {
    m_car_rental_rental_class_id = car_rental_rental_class_id;
    m_car_rental_rental_class_id_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_car_rental_rental_class_id_Set() const{
    return m_car_rental_rental_class_id_isSet;
}

bool OAIPaymentRequest_additionalData::is_car_rental_rental_class_id_Valid() const{
    return m_car_rental_rental_class_id_isValid;
}

QString OAIPaymentRequest_additionalData::getCarRentalRenterName() const {
    return m_car_rental_renter_name;
}
void OAIPaymentRequest_additionalData::setCarRentalRenterName(const QString &car_rental_renter_name) {
    m_car_rental_renter_name = car_rental_renter_name;
    m_car_rental_renter_name_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_car_rental_renter_name_Set() const{
    return m_car_rental_renter_name_isSet;
}

bool OAIPaymentRequest_additionalData::is_car_rental_renter_name_Valid() const{
    return m_car_rental_renter_name_isValid;
}

QString OAIPaymentRequest_additionalData::getCarRentalReturnCity() const {
    return m_car_rental_return_city;
}
void OAIPaymentRequest_additionalData::setCarRentalReturnCity(const QString &car_rental_return_city) {
    m_car_rental_return_city = car_rental_return_city;
    m_car_rental_return_city_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_car_rental_return_city_Set() const{
    return m_car_rental_return_city_isSet;
}

bool OAIPaymentRequest_additionalData::is_car_rental_return_city_Valid() const{
    return m_car_rental_return_city_isValid;
}

QString OAIPaymentRequest_additionalData::getCarRentalReturnCountry() const {
    return m_car_rental_return_country;
}
void OAIPaymentRequest_additionalData::setCarRentalReturnCountry(const QString &car_rental_return_country) {
    m_car_rental_return_country = car_rental_return_country;
    m_car_rental_return_country_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_car_rental_return_country_Set() const{
    return m_car_rental_return_country_isSet;
}

bool OAIPaymentRequest_additionalData::is_car_rental_return_country_Valid() const{
    return m_car_rental_return_country_isValid;
}

QString OAIPaymentRequest_additionalData::getCarRentalReturnDate() const {
    return m_car_rental_return_date;
}
void OAIPaymentRequest_additionalData::setCarRentalReturnDate(const QString &car_rental_return_date) {
    m_car_rental_return_date = car_rental_return_date;
    m_car_rental_return_date_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_car_rental_return_date_Set() const{
    return m_car_rental_return_date_isSet;
}

bool OAIPaymentRequest_additionalData::is_car_rental_return_date_Valid() const{
    return m_car_rental_return_date_isValid;
}

QString OAIPaymentRequest_additionalData::getCarRentalReturnLocationId() const {
    return m_car_rental_return_location_id;
}
void OAIPaymentRequest_additionalData::setCarRentalReturnLocationId(const QString &car_rental_return_location_id) {
    m_car_rental_return_location_id = car_rental_return_location_id;
    m_car_rental_return_location_id_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_car_rental_return_location_id_Set() const{
    return m_car_rental_return_location_id_isSet;
}

bool OAIPaymentRequest_additionalData::is_car_rental_return_location_id_Valid() const{
    return m_car_rental_return_location_id_isValid;
}

QString OAIPaymentRequest_additionalData::getCarRentalReturnStateProvince() const {
    return m_car_rental_return_state_province;
}
void OAIPaymentRequest_additionalData::setCarRentalReturnStateProvince(const QString &car_rental_return_state_province) {
    m_car_rental_return_state_province = car_rental_return_state_province;
    m_car_rental_return_state_province_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_car_rental_return_state_province_Set() const{
    return m_car_rental_return_state_province_isSet;
}

bool OAIPaymentRequest_additionalData::is_car_rental_return_state_province_Valid() const{
    return m_car_rental_return_state_province_isValid;
}

QString OAIPaymentRequest_additionalData::getCarRentalTaxExemptIndicator() const {
    return m_car_rental_tax_exempt_indicator;
}
void OAIPaymentRequest_additionalData::setCarRentalTaxExemptIndicator(const QString &car_rental_tax_exempt_indicator) {
    m_car_rental_tax_exempt_indicator = car_rental_tax_exempt_indicator;
    m_car_rental_tax_exempt_indicator_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_car_rental_tax_exempt_indicator_Set() const{
    return m_car_rental_tax_exempt_indicator_isSet;
}

bool OAIPaymentRequest_additionalData::is_car_rental_tax_exempt_indicator_Valid() const{
    return m_car_rental_tax_exempt_indicator_isValid;
}

QString OAIPaymentRequest_additionalData::getTravelEntertainmentAuthDataDuration() const {
    return m_travel_entertainment_auth_data_duration;
}
void OAIPaymentRequest_additionalData::setTravelEntertainmentAuthDataDuration(const QString &travel_entertainment_auth_data_duration) {
    m_travel_entertainment_auth_data_duration = travel_entertainment_auth_data_duration;
    m_travel_entertainment_auth_data_duration_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_travel_entertainment_auth_data_duration_Set() const{
    return m_travel_entertainment_auth_data_duration_isSet;
}

bool OAIPaymentRequest_additionalData::is_travel_entertainment_auth_data_duration_Valid() const{
    return m_travel_entertainment_auth_data_duration_isValid;
}

QString OAIPaymentRequest_additionalData::getTravelEntertainmentAuthDataMarket() const {
    return m_travel_entertainment_auth_data_market;
}
void OAIPaymentRequest_additionalData::setTravelEntertainmentAuthDataMarket(const QString &travel_entertainment_auth_data_market) {
    m_travel_entertainment_auth_data_market = travel_entertainment_auth_data_market;
    m_travel_entertainment_auth_data_market_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_travel_entertainment_auth_data_market_Set() const{
    return m_travel_entertainment_auth_data_market_isSet;
}

bool OAIPaymentRequest_additionalData::is_travel_entertainment_auth_data_market_Valid() const{
    return m_travel_entertainment_auth_data_market_isValid;
}

QString OAIPaymentRequest_additionalData::getRequestedTestErrorResponseCode() const {
    return m_requested_test_error_response_code;
}
void OAIPaymentRequest_additionalData::setRequestedTestErrorResponseCode(const QString &requested_test_error_response_code) {
    m_requested_test_error_response_code = requested_test_error_response_code;
    m_requested_test_error_response_code_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_requested_test_error_response_code_Set() const{
    return m_requested_test_error_response_code_isSet;
}

bool OAIPaymentRequest_additionalData::is_requested_test_error_response_code_Valid() const{
    return m_requested_test_error_response_code_isValid;
}

QString OAIPaymentRequest_additionalData::getAllowPartialAuth() const {
    return m_allow_partial_auth;
}
void OAIPaymentRequest_additionalData::setAllowPartialAuth(const QString &allow_partial_auth) {
    m_allow_partial_auth = allow_partial_auth;
    m_allow_partial_auth_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_allow_partial_auth_Set() const{
    return m_allow_partial_auth_isSet;
}

bool OAIPaymentRequest_additionalData::is_allow_partial_auth_Valid() const{
    return m_allow_partial_auth_isValid;
}

QString OAIPaymentRequest_additionalData::getAuthorisationType() const {
    return m_authorisation_type;
}
void OAIPaymentRequest_additionalData::setAuthorisationType(const QString &authorisation_type) {
    m_authorisation_type = authorisation_type;
    m_authorisation_type_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_authorisation_type_Set() const{
    return m_authorisation_type_isSet;
}

bool OAIPaymentRequest_additionalData::is_authorisation_type_Valid() const{
    return m_authorisation_type_isValid;
}

QString OAIPaymentRequest_additionalData::getCustomRoutingFlag() const {
    return m_custom_routing_flag;
}
void OAIPaymentRequest_additionalData::setCustomRoutingFlag(const QString &custom_routing_flag) {
    m_custom_routing_flag = custom_routing_flag;
    m_custom_routing_flag_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_custom_routing_flag_Set() const{
    return m_custom_routing_flag_isSet;
}

bool OAIPaymentRequest_additionalData::is_custom_routing_flag_Valid() const{
    return m_custom_routing_flag_isValid;
}

QString OAIPaymentRequest_additionalData::getIndustryUsage() const {
    return m_industry_usage;
}
void OAIPaymentRequest_additionalData::setIndustryUsage(const QString &industry_usage) {
    m_industry_usage = industry_usage;
    m_industry_usage_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_industry_usage_Set() const{
    return m_industry_usage_isSet;
}

bool OAIPaymentRequest_additionalData::is_industry_usage_Valid() const{
    return m_industry_usage_isValid;
}

QString OAIPaymentRequest_additionalData::getManualCapture() const {
    return m_manual_capture;
}
void OAIPaymentRequest_additionalData::setManualCapture(const QString &manual_capture) {
    m_manual_capture = manual_capture;
    m_manual_capture_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_manual_capture_Set() const{
    return m_manual_capture_isSet;
}

bool OAIPaymentRequest_additionalData::is_manual_capture_Valid() const{
    return m_manual_capture_isValid;
}

QString OAIPaymentRequest_additionalData::getNetworkTxReference() const {
    return m_network_tx_reference;
}
void OAIPaymentRequest_additionalData::setNetworkTxReference(const QString &network_tx_reference) {
    m_network_tx_reference = network_tx_reference;
    m_network_tx_reference_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_network_tx_reference_Set() const{
    return m_network_tx_reference_isSet;
}

bool OAIPaymentRequest_additionalData::is_network_tx_reference_Valid() const{
    return m_network_tx_reference_isValid;
}

QString OAIPaymentRequest_additionalData::getOverwriteBrand() const {
    return m_overwrite_brand;
}
void OAIPaymentRequest_additionalData::setOverwriteBrand(const QString &overwrite_brand) {
    m_overwrite_brand = overwrite_brand;
    m_overwrite_brand_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_overwrite_brand_Set() const{
    return m_overwrite_brand_isSet;
}

bool OAIPaymentRequest_additionalData::is_overwrite_brand_Valid() const{
    return m_overwrite_brand_isValid;
}

QString OAIPaymentRequest_additionalData::getSubMerchantCity() const {
    return m_sub_merchant_city;
}
void OAIPaymentRequest_additionalData::setSubMerchantCity(const QString &sub_merchant_city) {
    m_sub_merchant_city = sub_merchant_city;
    m_sub_merchant_city_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_sub_merchant_city_Set() const{
    return m_sub_merchant_city_isSet;
}

bool OAIPaymentRequest_additionalData::is_sub_merchant_city_Valid() const{
    return m_sub_merchant_city_isValid;
}

QString OAIPaymentRequest_additionalData::getSubMerchantCountry() const {
    return m_sub_merchant_country;
}
void OAIPaymentRequest_additionalData::setSubMerchantCountry(const QString &sub_merchant_country) {
    m_sub_merchant_country = sub_merchant_country;
    m_sub_merchant_country_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_sub_merchant_country_Set() const{
    return m_sub_merchant_country_isSet;
}

bool OAIPaymentRequest_additionalData::is_sub_merchant_country_Valid() const{
    return m_sub_merchant_country_isValid;
}

QString OAIPaymentRequest_additionalData::getSubMerchantId() const {
    return m_sub_merchant_id;
}
void OAIPaymentRequest_additionalData::setSubMerchantId(const QString &sub_merchant_id) {
    m_sub_merchant_id = sub_merchant_id;
    m_sub_merchant_id_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_sub_merchant_id_Set() const{
    return m_sub_merchant_id_isSet;
}

bool OAIPaymentRequest_additionalData::is_sub_merchant_id_Valid() const{
    return m_sub_merchant_id_isValid;
}

QString OAIPaymentRequest_additionalData::getSubMerchantName() const {
    return m_sub_merchant_name;
}
void OAIPaymentRequest_additionalData::setSubMerchantName(const QString &sub_merchant_name) {
    m_sub_merchant_name = sub_merchant_name;
    m_sub_merchant_name_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_sub_merchant_name_Set() const{
    return m_sub_merchant_name_isSet;
}

bool OAIPaymentRequest_additionalData::is_sub_merchant_name_Valid() const{
    return m_sub_merchant_name_isValid;
}

QString OAIPaymentRequest_additionalData::getSubMerchantPostalCode() const {
    return m_sub_merchant_postal_code;
}
void OAIPaymentRequest_additionalData::setSubMerchantPostalCode(const QString &sub_merchant_postal_code) {
    m_sub_merchant_postal_code = sub_merchant_postal_code;
    m_sub_merchant_postal_code_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_sub_merchant_postal_code_Set() const{
    return m_sub_merchant_postal_code_isSet;
}

bool OAIPaymentRequest_additionalData::is_sub_merchant_postal_code_Valid() const{
    return m_sub_merchant_postal_code_isValid;
}

QString OAIPaymentRequest_additionalData::getSubMerchantState() const {
    return m_sub_merchant_state;
}
void OAIPaymentRequest_additionalData::setSubMerchantState(const QString &sub_merchant_state) {
    m_sub_merchant_state = sub_merchant_state;
    m_sub_merchant_state_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_sub_merchant_state_Set() const{
    return m_sub_merchant_state_isSet;
}

bool OAIPaymentRequest_additionalData::is_sub_merchant_state_Valid() const{
    return m_sub_merchant_state_isValid;
}

QString OAIPaymentRequest_additionalData::getSubMerchantStreet() const {
    return m_sub_merchant_street;
}
void OAIPaymentRequest_additionalData::setSubMerchantStreet(const QString &sub_merchant_street) {
    m_sub_merchant_street = sub_merchant_street;
    m_sub_merchant_street_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_sub_merchant_street_Set() const{
    return m_sub_merchant_street_isSet;
}

bool OAIPaymentRequest_additionalData::is_sub_merchant_street_Valid() const{
    return m_sub_merchant_street_isValid;
}

QString OAIPaymentRequest_additionalData::getSubMerchantTaxId() const {
    return m_sub_merchant_tax_id;
}
void OAIPaymentRequest_additionalData::setSubMerchantTaxId(const QString &sub_merchant_tax_id) {
    m_sub_merchant_tax_id = sub_merchant_tax_id;
    m_sub_merchant_tax_id_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_sub_merchant_tax_id_Set() const{
    return m_sub_merchant_tax_id_isSet;
}

bool OAIPaymentRequest_additionalData::is_sub_merchant_tax_id_Valid() const{
    return m_sub_merchant_tax_id_isValid;
}

QString OAIPaymentRequest_additionalData::getEnhancedSchemeDataCustomerReference() const {
    return m_enhanced_scheme_data_customer_reference;
}
void OAIPaymentRequest_additionalData::setEnhancedSchemeDataCustomerReference(const QString &enhanced_scheme_data_customer_reference) {
    m_enhanced_scheme_data_customer_reference = enhanced_scheme_data_customer_reference;
    m_enhanced_scheme_data_customer_reference_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_enhanced_scheme_data_customer_reference_Set() const{
    return m_enhanced_scheme_data_customer_reference_isSet;
}

bool OAIPaymentRequest_additionalData::is_enhanced_scheme_data_customer_reference_Valid() const{
    return m_enhanced_scheme_data_customer_reference_isValid;
}

QString OAIPaymentRequest_additionalData::getEnhancedSchemeDataDestinationCountryCode() const {
    return m_enhanced_scheme_data_destination_country_code;
}
void OAIPaymentRequest_additionalData::setEnhancedSchemeDataDestinationCountryCode(const QString &enhanced_scheme_data_destination_country_code) {
    m_enhanced_scheme_data_destination_country_code = enhanced_scheme_data_destination_country_code;
    m_enhanced_scheme_data_destination_country_code_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_enhanced_scheme_data_destination_country_code_Set() const{
    return m_enhanced_scheme_data_destination_country_code_isSet;
}

bool OAIPaymentRequest_additionalData::is_enhanced_scheme_data_destination_country_code_Valid() const{
    return m_enhanced_scheme_data_destination_country_code_isValid;
}

QString OAIPaymentRequest_additionalData::getEnhancedSchemeDataDestinationPostalCode() const {
    return m_enhanced_scheme_data_destination_postal_code;
}
void OAIPaymentRequest_additionalData::setEnhancedSchemeDataDestinationPostalCode(const QString &enhanced_scheme_data_destination_postal_code) {
    m_enhanced_scheme_data_destination_postal_code = enhanced_scheme_data_destination_postal_code;
    m_enhanced_scheme_data_destination_postal_code_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_enhanced_scheme_data_destination_postal_code_Set() const{
    return m_enhanced_scheme_data_destination_postal_code_isSet;
}

bool OAIPaymentRequest_additionalData::is_enhanced_scheme_data_destination_postal_code_Valid() const{
    return m_enhanced_scheme_data_destination_postal_code_isValid;
}

QString OAIPaymentRequest_additionalData::getEnhancedSchemeDataDestinationStateProvinceCode() const {
    return m_enhanced_scheme_data_destination_state_province_code;
}
void OAIPaymentRequest_additionalData::setEnhancedSchemeDataDestinationStateProvinceCode(const QString &enhanced_scheme_data_destination_state_province_code) {
    m_enhanced_scheme_data_destination_state_province_code = enhanced_scheme_data_destination_state_province_code;
    m_enhanced_scheme_data_destination_state_province_code_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_enhanced_scheme_data_destination_state_province_code_Set() const{
    return m_enhanced_scheme_data_destination_state_province_code_isSet;
}

bool OAIPaymentRequest_additionalData::is_enhanced_scheme_data_destination_state_province_code_Valid() const{
    return m_enhanced_scheme_data_destination_state_province_code_isValid;
}

QString OAIPaymentRequest_additionalData::getEnhancedSchemeDataDutyAmount() const {
    return m_enhanced_scheme_data_duty_amount;
}
void OAIPaymentRequest_additionalData::setEnhancedSchemeDataDutyAmount(const QString &enhanced_scheme_data_duty_amount) {
    m_enhanced_scheme_data_duty_amount = enhanced_scheme_data_duty_amount;
    m_enhanced_scheme_data_duty_amount_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_enhanced_scheme_data_duty_amount_Set() const{
    return m_enhanced_scheme_data_duty_amount_isSet;
}

bool OAIPaymentRequest_additionalData::is_enhanced_scheme_data_duty_amount_Valid() const{
    return m_enhanced_scheme_data_duty_amount_isValid;
}

QString OAIPaymentRequest_additionalData::getEnhancedSchemeDataFreightAmount() const {
    return m_enhanced_scheme_data_freight_amount;
}
void OAIPaymentRequest_additionalData::setEnhancedSchemeDataFreightAmount(const QString &enhanced_scheme_data_freight_amount) {
    m_enhanced_scheme_data_freight_amount = enhanced_scheme_data_freight_amount;
    m_enhanced_scheme_data_freight_amount_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_enhanced_scheme_data_freight_amount_Set() const{
    return m_enhanced_scheme_data_freight_amount_isSet;
}

bool OAIPaymentRequest_additionalData::is_enhanced_scheme_data_freight_amount_Valid() const{
    return m_enhanced_scheme_data_freight_amount_isValid;
}

QString OAIPaymentRequest_additionalData::getEnhancedSchemeDataItemDetailLineItemNrCommodityCode() const {
    return m_enhanced_scheme_data_item_detail_line_item_nr_commodity_code;
}
void OAIPaymentRequest_additionalData::setEnhancedSchemeDataItemDetailLineItemNrCommodityCode(const QString &enhanced_scheme_data_item_detail_line_item_nr_commodity_code) {
    m_enhanced_scheme_data_item_detail_line_item_nr_commodity_code = enhanced_scheme_data_item_detail_line_item_nr_commodity_code;
    m_enhanced_scheme_data_item_detail_line_item_nr_commodity_code_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_enhanced_scheme_data_item_detail_line_item_nr_commodity_code_Set() const{
    return m_enhanced_scheme_data_item_detail_line_item_nr_commodity_code_isSet;
}

bool OAIPaymentRequest_additionalData::is_enhanced_scheme_data_item_detail_line_item_nr_commodity_code_Valid() const{
    return m_enhanced_scheme_data_item_detail_line_item_nr_commodity_code_isValid;
}

QString OAIPaymentRequest_additionalData::getEnhancedSchemeDataItemDetailLineItemNrDescription() const {
    return m_enhanced_scheme_data_item_detail_line_item_nr_description;
}
void OAIPaymentRequest_additionalData::setEnhancedSchemeDataItemDetailLineItemNrDescription(const QString &enhanced_scheme_data_item_detail_line_item_nr_description) {
    m_enhanced_scheme_data_item_detail_line_item_nr_description = enhanced_scheme_data_item_detail_line_item_nr_description;
    m_enhanced_scheme_data_item_detail_line_item_nr_description_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_enhanced_scheme_data_item_detail_line_item_nr_description_Set() const{
    return m_enhanced_scheme_data_item_detail_line_item_nr_description_isSet;
}

bool OAIPaymentRequest_additionalData::is_enhanced_scheme_data_item_detail_line_item_nr_description_Valid() const{
    return m_enhanced_scheme_data_item_detail_line_item_nr_description_isValid;
}

QString OAIPaymentRequest_additionalData::getEnhancedSchemeDataItemDetailLineItemNrDiscountAmount() const {
    return m_enhanced_scheme_data_item_detail_line_item_nr_discount_amount;
}
void OAIPaymentRequest_additionalData::setEnhancedSchemeDataItemDetailLineItemNrDiscountAmount(const QString &enhanced_scheme_data_item_detail_line_item_nr_discount_amount) {
    m_enhanced_scheme_data_item_detail_line_item_nr_discount_amount = enhanced_scheme_data_item_detail_line_item_nr_discount_amount;
    m_enhanced_scheme_data_item_detail_line_item_nr_discount_amount_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_enhanced_scheme_data_item_detail_line_item_nr_discount_amount_Set() const{
    return m_enhanced_scheme_data_item_detail_line_item_nr_discount_amount_isSet;
}

bool OAIPaymentRequest_additionalData::is_enhanced_scheme_data_item_detail_line_item_nr_discount_amount_Valid() const{
    return m_enhanced_scheme_data_item_detail_line_item_nr_discount_amount_isValid;
}

QString OAIPaymentRequest_additionalData::getEnhancedSchemeDataItemDetailLineItemNrProductCode() const {
    return m_enhanced_scheme_data_item_detail_line_item_nr_product_code;
}
void OAIPaymentRequest_additionalData::setEnhancedSchemeDataItemDetailLineItemNrProductCode(const QString &enhanced_scheme_data_item_detail_line_item_nr_product_code) {
    m_enhanced_scheme_data_item_detail_line_item_nr_product_code = enhanced_scheme_data_item_detail_line_item_nr_product_code;
    m_enhanced_scheme_data_item_detail_line_item_nr_product_code_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_enhanced_scheme_data_item_detail_line_item_nr_product_code_Set() const{
    return m_enhanced_scheme_data_item_detail_line_item_nr_product_code_isSet;
}

bool OAIPaymentRequest_additionalData::is_enhanced_scheme_data_item_detail_line_item_nr_product_code_Valid() const{
    return m_enhanced_scheme_data_item_detail_line_item_nr_product_code_isValid;
}

QString OAIPaymentRequest_additionalData::getEnhancedSchemeDataItemDetailLineItemNrQuantity() const {
    return m_enhanced_scheme_data_item_detail_line_item_nr_quantity;
}
void OAIPaymentRequest_additionalData::setEnhancedSchemeDataItemDetailLineItemNrQuantity(const QString &enhanced_scheme_data_item_detail_line_item_nr_quantity) {
    m_enhanced_scheme_data_item_detail_line_item_nr_quantity = enhanced_scheme_data_item_detail_line_item_nr_quantity;
    m_enhanced_scheme_data_item_detail_line_item_nr_quantity_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_enhanced_scheme_data_item_detail_line_item_nr_quantity_Set() const{
    return m_enhanced_scheme_data_item_detail_line_item_nr_quantity_isSet;
}

bool OAIPaymentRequest_additionalData::is_enhanced_scheme_data_item_detail_line_item_nr_quantity_Valid() const{
    return m_enhanced_scheme_data_item_detail_line_item_nr_quantity_isValid;
}

QString OAIPaymentRequest_additionalData::getEnhancedSchemeDataItemDetailLineItemNrTotalAmount() const {
    return m_enhanced_scheme_data_item_detail_line_item_nr_total_amount;
}
void OAIPaymentRequest_additionalData::setEnhancedSchemeDataItemDetailLineItemNrTotalAmount(const QString &enhanced_scheme_data_item_detail_line_item_nr_total_amount) {
    m_enhanced_scheme_data_item_detail_line_item_nr_total_amount = enhanced_scheme_data_item_detail_line_item_nr_total_amount;
    m_enhanced_scheme_data_item_detail_line_item_nr_total_amount_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_enhanced_scheme_data_item_detail_line_item_nr_total_amount_Set() const{
    return m_enhanced_scheme_data_item_detail_line_item_nr_total_amount_isSet;
}

bool OAIPaymentRequest_additionalData::is_enhanced_scheme_data_item_detail_line_item_nr_total_amount_Valid() const{
    return m_enhanced_scheme_data_item_detail_line_item_nr_total_amount_isValid;
}

QString OAIPaymentRequest_additionalData::getEnhancedSchemeDataItemDetailLineItemNrUnitOfMeasure() const {
    return m_enhanced_scheme_data_item_detail_line_item_nr_unit_of_measure;
}
void OAIPaymentRequest_additionalData::setEnhancedSchemeDataItemDetailLineItemNrUnitOfMeasure(const QString &enhanced_scheme_data_item_detail_line_item_nr_unit_of_measure) {
    m_enhanced_scheme_data_item_detail_line_item_nr_unit_of_measure = enhanced_scheme_data_item_detail_line_item_nr_unit_of_measure;
    m_enhanced_scheme_data_item_detail_line_item_nr_unit_of_measure_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_enhanced_scheme_data_item_detail_line_item_nr_unit_of_measure_Set() const{
    return m_enhanced_scheme_data_item_detail_line_item_nr_unit_of_measure_isSet;
}

bool OAIPaymentRequest_additionalData::is_enhanced_scheme_data_item_detail_line_item_nr_unit_of_measure_Valid() const{
    return m_enhanced_scheme_data_item_detail_line_item_nr_unit_of_measure_isValid;
}

QString OAIPaymentRequest_additionalData::getEnhancedSchemeDataItemDetailLineItemNrUnitPrice() const {
    return m_enhanced_scheme_data_item_detail_line_item_nr_unit_price;
}
void OAIPaymentRequest_additionalData::setEnhancedSchemeDataItemDetailLineItemNrUnitPrice(const QString &enhanced_scheme_data_item_detail_line_item_nr_unit_price) {
    m_enhanced_scheme_data_item_detail_line_item_nr_unit_price = enhanced_scheme_data_item_detail_line_item_nr_unit_price;
    m_enhanced_scheme_data_item_detail_line_item_nr_unit_price_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_enhanced_scheme_data_item_detail_line_item_nr_unit_price_Set() const{
    return m_enhanced_scheme_data_item_detail_line_item_nr_unit_price_isSet;
}

bool OAIPaymentRequest_additionalData::is_enhanced_scheme_data_item_detail_line_item_nr_unit_price_Valid() const{
    return m_enhanced_scheme_data_item_detail_line_item_nr_unit_price_isValid;
}

QString OAIPaymentRequest_additionalData::getEnhancedSchemeDataOrderDate() const {
    return m_enhanced_scheme_data_order_date;
}
void OAIPaymentRequest_additionalData::setEnhancedSchemeDataOrderDate(const QString &enhanced_scheme_data_order_date) {
    m_enhanced_scheme_data_order_date = enhanced_scheme_data_order_date;
    m_enhanced_scheme_data_order_date_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_enhanced_scheme_data_order_date_Set() const{
    return m_enhanced_scheme_data_order_date_isSet;
}

bool OAIPaymentRequest_additionalData::is_enhanced_scheme_data_order_date_Valid() const{
    return m_enhanced_scheme_data_order_date_isValid;
}

QString OAIPaymentRequest_additionalData::getEnhancedSchemeDataShipFromPostalCode() const {
    return m_enhanced_scheme_data_ship_from_postal_code;
}
void OAIPaymentRequest_additionalData::setEnhancedSchemeDataShipFromPostalCode(const QString &enhanced_scheme_data_ship_from_postal_code) {
    m_enhanced_scheme_data_ship_from_postal_code = enhanced_scheme_data_ship_from_postal_code;
    m_enhanced_scheme_data_ship_from_postal_code_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_enhanced_scheme_data_ship_from_postal_code_Set() const{
    return m_enhanced_scheme_data_ship_from_postal_code_isSet;
}

bool OAIPaymentRequest_additionalData::is_enhanced_scheme_data_ship_from_postal_code_Valid() const{
    return m_enhanced_scheme_data_ship_from_postal_code_isValid;
}

QString OAIPaymentRequest_additionalData::getEnhancedSchemeDataTotalTaxAmount() const {
    return m_enhanced_scheme_data_total_tax_amount;
}
void OAIPaymentRequest_additionalData::setEnhancedSchemeDataTotalTaxAmount(const QString &enhanced_scheme_data_total_tax_amount) {
    m_enhanced_scheme_data_total_tax_amount = enhanced_scheme_data_total_tax_amount;
    m_enhanced_scheme_data_total_tax_amount_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_enhanced_scheme_data_total_tax_amount_Set() const{
    return m_enhanced_scheme_data_total_tax_amount_isSet;
}

bool OAIPaymentRequest_additionalData::is_enhanced_scheme_data_total_tax_amount_Valid() const{
    return m_enhanced_scheme_data_total_tax_amount_isValid;
}

QString OAIPaymentRequest_additionalData::getLodgingCheckInDate() const {
    return m_lodging_check_in_date;
}
void OAIPaymentRequest_additionalData::setLodgingCheckInDate(const QString &lodging_check_in_date) {
    m_lodging_check_in_date = lodging_check_in_date;
    m_lodging_check_in_date_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_lodging_check_in_date_Set() const{
    return m_lodging_check_in_date_isSet;
}

bool OAIPaymentRequest_additionalData::is_lodging_check_in_date_Valid() const{
    return m_lodging_check_in_date_isValid;
}

QString OAIPaymentRequest_additionalData::getLodgingCheckOutDate() const {
    return m_lodging_check_out_date;
}
void OAIPaymentRequest_additionalData::setLodgingCheckOutDate(const QString &lodging_check_out_date) {
    m_lodging_check_out_date = lodging_check_out_date;
    m_lodging_check_out_date_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_lodging_check_out_date_Set() const{
    return m_lodging_check_out_date_isSet;
}

bool OAIPaymentRequest_additionalData::is_lodging_check_out_date_Valid() const{
    return m_lodging_check_out_date_isValid;
}

QString OAIPaymentRequest_additionalData::getLodgingCustomerServiceTollFreeNumber() const {
    return m_lodging_customer_service_toll_free_number;
}
void OAIPaymentRequest_additionalData::setLodgingCustomerServiceTollFreeNumber(const QString &lodging_customer_service_toll_free_number) {
    m_lodging_customer_service_toll_free_number = lodging_customer_service_toll_free_number;
    m_lodging_customer_service_toll_free_number_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_lodging_customer_service_toll_free_number_Set() const{
    return m_lodging_customer_service_toll_free_number_isSet;
}

bool OAIPaymentRequest_additionalData::is_lodging_customer_service_toll_free_number_Valid() const{
    return m_lodging_customer_service_toll_free_number_isValid;
}

QString OAIPaymentRequest_additionalData::getLodgingFireSafetyActIndicator() const {
    return m_lodging_fire_safety_act_indicator;
}
void OAIPaymentRequest_additionalData::setLodgingFireSafetyActIndicator(const QString &lodging_fire_safety_act_indicator) {
    m_lodging_fire_safety_act_indicator = lodging_fire_safety_act_indicator;
    m_lodging_fire_safety_act_indicator_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_lodging_fire_safety_act_indicator_Set() const{
    return m_lodging_fire_safety_act_indicator_isSet;
}

bool OAIPaymentRequest_additionalData::is_lodging_fire_safety_act_indicator_Valid() const{
    return m_lodging_fire_safety_act_indicator_isValid;
}

QString OAIPaymentRequest_additionalData::getLodgingFolioCashAdvances() const {
    return m_lodging_folio_cash_advances;
}
void OAIPaymentRequest_additionalData::setLodgingFolioCashAdvances(const QString &lodging_folio_cash_advances) {
    m_lodging_folio_cash_advances = lodging_folio_cash_advances;
    m_lodging_folio_cash_advances_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_lodging_folio_cash_advances_Set() const{
    return m_lodging_folio_cash_advances_isSet;
}

bool OAIPaymentRequest_additionalData::is_lodging_folio_cash_advances_Valid() const{
    return m_lodging_folio_cash_advances_isValid;
}

QString OAIPaymentRequest_additionalData::getLodgingFolioNumber() const {
    return m_lodging_folio_number;
}
void OAIPaymentRequest_additionalData::setLodgingFolioNumber(const QString &lodging_folio_number) {
    m_lodging_folio_number = lodging_folio_number;
    m_lodging_folio_number_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_lodging_folio_number_Set() const{
    return m_lodging_folio_number_isSet;
}

bool OAIPaymentRequest_additionalData::is_lodging_folio_number_Valid() const{
    return m_lodging_folio_number_isValid;
}

QString OAIPaymentRequest_additionalData::getLodgingFoodBeverageCharges() const {
    return m_lodging_food_beverage_charges;
}
void OAIPaymentRequest_additionalData::setLodgingFoodBeverageCharges(const QString &lodging_food_beverage_charges) {
    m_lodging_food_beverage_charges = lodging_food_beverage_charges;
    m_lodging_food_beverage_charges_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_lodging_food_beverage_charges_Set() const{
    return m_lodging_food_beverage_charges_isSet;
}

bool OAIPaymentRequest_additionalData::is_lodging_food_beverage_charges_Valid() const{
    return m_lodging_food_beverage_charges_isValid;
}

QString OAIPaymentRequest_additionalData::getLodgingNoShowIndicator() const {
    return m_lodging_no_show_indicator;
}
void OAIPaymentRequest_additionalData::setLodgingNoShowIndicator(const QString &lodging_no_show_indicator) {
    m_lodging_no_show_indicator = lodging_no_show_indicator;
    m_lodging_no_show_indicator_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_lodging_no_show_indicator_Set() const{
    return m_lodging_no_show_indicator_isSet;
}

bool OAIPaymentRequest_additionalData::is_lodging_no_show_indicator_Valid() const{
    return m_lodging_no_show_indicator_isValid;
}

QString OAIPaymentRequest_additionalData::getLodgingPrepaidExpenses() const {
    return m_lodging_prepaid_expenses;
}
void OAIPaymentRequest_additionalData::setLodgingPrepaidExpenses(const QString &lodging_prepaid_expenses) {
    m_lodging_prepaid_expenses = lodging_prepaid_expenses;
    m_lodging_prepaid_expenses_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_lodging_prepaid_expenses_Set() const{
    return m_lodging_prepaid_expenses_isSet;
}

bool OAIPaymentRequest_additionalData::is_lodging_prepaid_expenses_Valid() const{
    return m_lodging_prepaid_expenses_isValid;
}

QString OAIPaymentRequest_additionalData::getLodgingPropertyPhoneNumber() const {
    return m_lodging_property_phone_number;
}
void OAIPaymentRequest_additionalData::setLodgingPropertyPhoneNumber(const QString &lodging_property_phone_number) {
    m_lodging_property_phone_number = lodging_property_phone_number;
    m_lodging_property_phone_number_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_lodging_property_phone_number_Set() const{
    return m_lodging_property_phone_number_isSet;
}

bool OAIPaymentRequest_additionalData::is_lodging_property_phone_number_Valid() const{
    return m_lodging_property_phone_number_isValid;
}

QString OAIPaymentRequest_additionalData::getLodgingRoom1NumberOfNights() const {
    return m_lodging_room1_number_of_nights;
}
void OAIPaymentRequest_additionalData::setLodgingRoom1NumberOfNights(const QString &lodging_room1_number_of_nights) {
    m_lodging_room1_number_of_nights = lodging_room1_number_of_nights;
    m_lodging_room1_number_of_nights_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_lodging_room1_number_of_nights_Set() const{
    return m_lodging_room1_number_of_nights_isSet;
}

bool OAIPaymentRequest_additionalData::is_lodging_room1_number_of_nights_Valid() const{
    return m_lodging_room1_number_of_nights_isValid;
}

QString OAIPaymentRequest_additionalData::getLodgingRoom1Rate() const {
    return m_lodging_room1_rate;
}
void OAIPaymentRequest_additionalData::setLodgingRoom1Rate(const QString &lodging_room1_rate) {
    m_lodging_room1_rate = lodging_room1_rate;
    m_lodging_room1_rate_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_lodging_room1_rate_Set() const{
    return m_lodging_room1_rate_isSet;
}

bool OAIPaymentRequest_additionalData::is_lodging_room1_rate_Valid() const{
    return m_lodging_room1_rate_isValid;
}

QString OAIPaymentRequest_additionalData::getLodgingTotalRoomTax() const {
    return m_lodging_total_room_tax;
}
void OAIPaymentRequest_additionalData::setLodgingTotalRoomTax(const QString &lodging_total_room_tax) {
    m_lodging_total_room_tax = lodging_total_room_tax;
    m_lodging_total_room_tax_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_lodging_total_room_tax_Set() const{
    return m_lodging_total_room_tax_isSet;
}

bool OAIPaymentRequest_additionalData::is_lodging_total_room_tax_Valid() const{
    return m_lodging_total_room_tax_isValid;
}

QString OAIPaymentRequest_additionalData::getLodgingTotalTax() const {
    return m_lodging_total_tax;
}
void OAIPaymentRequest_additionalData::setLodgingTotalTax(const QString &lodging_total_tax) {
    m_lodging_total_tax = lodging_total_tax;
    m_lodging_total_tax_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_lodging_total_tax_Set() const{
    return m_lodging_total_tax_isSet;
}

bool OAIPaymentRequest_additionalData::is_lodging_total_tax_Valid() const{
    return m_lodging_total_tax_isValid;
}

QString OAIPaymentRequest_additionalData::getOpeninvoicedataMerchantData() const {
    return m_openinvoicedata_merchant_data;
}
void OAIPaymentRequest_additionalData::setOpeninvoicedataMerchantData(const QString &openinvoicedata_merchant_data) {
    m_openinvoicedata_merchant_data = openinvoicedata_merchant_data;
    m_openinvoicedata_merchant_data_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_openinvoicedata_merchant_data_Set() const{
    return m_openinvoicedata_merchant_data_isSet;
}

bool OAIPaymentRequest_additionalData::is_openinvoicedata_merchant_data_Valid() const{
    return m_openinvoicedata_merchant_data_isValid;
}

QString OAIPaymentRequest_additionalData::getOpeninvoicedataNumberOfLines() const {
    return m_openinvoicedata_number_of_lines;
}
void OAIPaymentRequest_additionalData::setOpeninvoicedataNumberOfLines(const QString &openinvoicedata_number_of_lines) {
    m_openinvoicedata_number_of_lines = openinvoicedata_number_of_lines;
    m_openinvoicedata_number_of_lines_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_openinvoicedata_number_of_lines_Set() const{
    return m_openinvoicedata_number_of_lines_isSet;
}

bool OAIPaymentRequest_additionalData::is_openinvoicedata_number_of_lines_Valid() const{
    return m_openinvoicedata_number_of_lines_isValid;
}

QString OAIPaymentRequest_additionalData::getOpeninvoicedataRecipientFirstName() const {
    return m_openinvoicedata_recipient_first_name;
}
void OAIPaymentRequest_additionalData::setOpeninvoicedataRecipientFirstName(const QString &openinvoicedata_recipient_first_name) {
    m_openinvoicedata_recipient_first_name = openinvoicedata_recipient_first_name;
    m_openinvoicedata_recipient_first_name_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_openinvoicedata_recipient_first_name_Set() const{
    return m_openinvoicedata_recipient_first_name_isSet;
}

bool OAIPaymentRequest_additionalData::is_openinvoicedata_recipient_first_name_Valid() const{
    return m_openinvoicedata_recipient_first_name_isValid;
}

QString OAIPaymentRequest_additionalData::getOpeninvoicedataRecipientLastName() const {
    return m_openinvoicedata_recipient_last_name;
}
void OAIPaymentRequest_additionalData::setOpeninvoicedataRecipientLastName(const QString &openinvoicedata_recipient_last_name) {
    m_openinvoicedata_recipient_last_name = openinvoicedata_recipient_last_name;
    m_openinvoicedata_recipient_last_name_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_openinvoicedata_recipient_last_name_Set() const{
    return m_openinvoicedata_recipient_last_name_isSet;
}

bool OAIPaymentRequest_additionalData::is_openinvoicedata_recipient_last_name_Valid() const{
    return m_openinvoicedata_recipient_last_name_isValid;
}

QString OAIPaymentRequest_additionalData::getOpeninvoicedataLineItemNrCurrencyCode() const {
    return m_openinvoicedata_line_item_nr_currency_code;
}
void OAIPaymentRequest_additionalData::setOpeninvoicedataLineItemNrCurrencyCode(const QString &openinvoicedata_line_item_nr_currency_code) {
    m_openinvoicedata_line_item_nr_currency_code = openinvoicedata_line_item_nr_currency_code;
    m_openinvoicedata_line_item_nr_currency_code_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_openinvoicedata_line_item_nr_currency_code_Set() const{
    return m_openinvoicedata_line_item_nr_currency_code_isSet;
}

bool OAIPaymentRequest_additionalData::is_openinvoicedata_line_item_nr_currency_code_Valid() const{
    return m_openinvoicedata_line_item_nr_currency_code_isValid;
}

QString OAIPaymentRequest_additionalData::getOpeninvoicedataLineItemNrDescription() const {
    return m_openinvoicedata_line_item_nr_description;
}
void OAIPaymentRequest_additionalData::setOpeninvoicedataLineItemNrDescription(const QString &openinvoicedata_line_item_nr_description) {
    m_openinvoicedata_line_item_nr_description = openinvoicedata_line_item_nr_description;
    m_openinvoicedata_line_item_nr_description_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_openinvoicedata_line_item_nr_description_Set() const{
    return m_openinvoicedata_line_item_nr_description_isSet;
}

bool OAIPaymentRequest_additionalData::is_openinvoicedata_line_item_nr_description_Valid() const{
    return m_openinvoicedata_line_item_nr_description_isValid;
}

QString OAIPaymentRequest_additionalData::getOpeninvoicedataLineItemNrItemAmount() const {
    return m_openinvoicedata_line_item_nr_item_amount;
}
void OAIPaymentRequest_additionalData::setOpeninvoicedataLineItemNrItemAmount(const QString &openinvoicedata_line_item_nr_item_amount) {
    m_openinvoicedata_line_item_nr_item_amount = openinvoicedata_line_item_nr_item_amount;
    m_openinvoicedata_line_item_nr_item_amount_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_openinvoicedata_line_item_nr_item_amount_Set() const{
    return m_openinvoicedata_line_item_nr_item_amount_isSet;
}

bool OAIPaymentRequest_additionalData::is_openinvoicedata_line_item_nr_item_amount_Valid() const{
    return m_openinvoicedata_line_item_nr_item_amount_isValid;
}

QString OAIPaymentRequest_additionalData::getOpeninvoicedataLineItemNrItemId() const {
    return m_openinvoicedata_line_item_nr_item_id;
}
void OAIPaymentRequest_additionalData::setOpeninvoicedataLineItemNrItemId(const QString &openinvoicedata_line_item_nr_item_id) {
    m_openinvoicedata_line_item_nr_item_id = openinvoicedata_line_item_nr_item_id;
    m_openinvoicedata_line_item_nr_item_id_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_openinvoicedata_line_item_nr_item_id_Set() const{
    return m_openinvoicedata_line_item_nr_item_id_isSet;
}

bool OAIPaymentRequest_additionalData::is_openinvoicedata_line_item_nr_item_id_Valid() const{
    return m_openinvoicedata_line_item_nr_item_id_isValid;
}

QString OAIPaymentRequest_additionalData::getOpeninvoicedataLineItemNrItemVatAmount() const {
    return m_openinvoicedata_line_item_nr_item_vat_amount;
}
void OAIPaymentRequest_additionalData::setOpeninvoicedataLineItemNrItemVatAmount(const QString &openinvoicedata_line_item_nr_item_vat_amount) {
    m_openinvoicedata_line_item_nr_item_vat_amount = openinvoicedata_line_item_nr_item_vat_amount;
    m_openinvoicedata_line_item_nr_item_vat_amount_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_openinvoicedata_line_item_nr_item_vat_amount_Set() const{
    return m_openinvoicedata_line_item_nr_item_vat_amount_isSet;
}

bool OAIPaymentRequest_additionalData::is_openinvoicedata_line_item_nr_item_vat_amount_Valid() const{
    return m_openinvoicedata_line_item_nr_item_vat_amount_isValid;
}

QString OAIPaymentRequest_additionalData::getOpeninvoicedataLineItemNrItemVatPercentage() const {
    return m_openinvoicedata_line_item_nr_item_vat_percentage;
}
void OAIPaymentRequest_additionalData::setOpeninvoicedataLineItemNrItemVatPercentage(const QString &openinvoicedata_line_item_nr_item_vat_percentage) {
    m_openinvoicedata_line_item_nr_item_vat_percentage = openinvoicedata_line_item_nr_item_vat_percentage;
    m_openinvoicedata_line_item_nr_item_vat_percentage_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_openinvoicedata_line_item_nr_item_vat_percentage_Set() const{
    return m_openinvoicedata_line_item_nr_item_vat_percentage_isSet;
}

bool OAIPaymentRequest_additionalData::is_openinvoicedata_line_item_nr_item_vat_percentage_Valid() const{
    return m_openinvoicedata_line_item_nr_item_vat_percentage_isValid;
}

QString OAIPaymentRequest_additionalData::getOpeninvoicedataLineItemNrNumberOfItems() const {
    return m_openinvoicedata_line_item_nr_number_of_items;
}
void OAIPaymentRequest_additionalData::setOpeninvoicedataLineItemNrNumberOfItems(const QString &openinvoicedata_line_item_nr_number_of_items) {
    m_openinvoicedata_line_item_nr_number_of_items = openinvoicedata_line_item_nr_number_of_items;
    m_openinvoicedata_line_item_nr_number_of_items_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_openinvoicedata_line_item_nr_number_of_items_Set() const{
    return m_openinvoicedata_line_item_nr_number_of_items_isSet;
}

bool OAIPaymentRequest_additionalData::is_openinvoicedata_line_item_nr_number_of_items_Valid() const{
    return m_openinvoicedata_line_item_nr_number_of_items_isValid;
}

QString OAIPaymentRequest_additionalData::getOpeninvoicedataLineItemNrReturnShippingCompany() const {
    return m_openinvoicedata_line_item_nr_return_shipping_company;
}
void OAIPaymentRequest_additionalData::setOpeninvoicedataLineItemNrReturnShippingCompany(const QString &openinvoicedata_line_item_nr_return_shipping_company) {
    m_openinvoicedata_line_item_nr_return_shipping_company = openinvoicedata_line_item_nr_return_shipping_company;
    m_openinvoicedata_line_item_nr_return_shipping_company_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_openinvoicedata_line_item_nr_return_shipping_company_Set() const{
    return m_openinvoicedata_line_item_nr_return_shipping_company_isSet;
}

bool OAIPaymentRequest_additionalData::is_openinvoicedata_line_item_nr_return_shipping_company_Valid() const{
    return m_openinvoicedata_line_item_nr_return_shipping_company_isValid;
}

QString OAIPaymentRequest_additionalData::getOpeninvoicedataLineItemNrReturnTrackingNumber() const {
    return m_openinvoicedata_line_item_nr_return_tracking_number;
}
void OAIPaymentRequest_additionalData::setOpeninvoicedataLineItemNrReturnTrackingNumber(const QString &openinvoicedata_line_item_nr_return_tracking_number) {
    m_openinvoicedata_line_item_nr_return_tracking_number = openinvoicedata_line_item_nr_return_tracking_number;
    m_openinvoicedata_line_item_nr_return_tracking_number_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_openinvoicedata_line_item_nr_return_tracking_number_Set() const{
    return m_openinvoicedata_line_item_nr_return_tracking_number_isSet;
}

bool OAIPaymentRequest_additionalData::is_openinvoicedata_line_item_nr_return_tracking_number_Valid() const{
    return m_openinvoicedata_line_item_nr_return_tracking_number_isValid;
}

QString OAIPaymentRequest_additionalData::getOpeninvoicedataLineItemNrReturnTrackingUri() const {
    return m_openinvoicedata_line_item_nr_return_tracking_uri;
}
void OAIPaymentRequest_additionalData::setOpeninvoicedataLineItemNrReturnTrackingUri(const QString &openinvoicedata_line_item_nr_return_tracking_uri) {
    m_openinvoicedata_line_item_nr_return_tracking_uri = openinvoicedata_line_item_nr_return_tracking_uri;
    m_openinvoicedata_line_item_nr_return_tracking_uri_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_openinvoicedata_line_item_nr_return_tracking_uri_Set() const{
    return m_openinvoicedata_line_item_nr_return_tracking_uri_isSet;
}

bool OAIPaymentRequest_additionalData::is_openinvoicedata_line_item_nr_return_tracking_uri_Valid() const{
    return m_openinvoicedata_line_item_nr_return_tracking_uri_isValid;
}

QString OAIPaymentRequest_additionalData::getOpeninvoicedataLineItemNrShippingCompany() const {
    return m_openinvoicedata_line_item_nr_shipping_company;
}
void OAIPaymentRequest_additionalData::setOpeninvoicedataLineItemNrShippingCompany(const QString &openinvoicedata_line_item_nr_shipping_company) {
    m_openinvoicedata_line_item_nr_shipping_company = openinvoicedata_line_item_nr_shipping_company;
    m_openinvoicedata_line_item_nr_shipping_company_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_openinvoicedata_line_item_nr_shipping_company_Set() const{
    return m_openinvoicedata_line_item_nr_shipping_company_isSet;
}

bool OAIPaymentRequest_additionalData::is_openinvoicedata_line_item_nr_shipping_company_Valid() const{
    return m_openinvoicedata_line_item_nr_shipping_company_isValid;
}

QString OAIPaymentRequest_additionalData::getOpeninvoicedataLineItemNrShippingMethod() const {
    return m_openinvoicedata_line_item_nr_shipping_method;
}
void OAIPaymentRequest_additionalData::setOpeninvoicedataLineItemNrShippingMethod(const QString &openinvoicedata_line_item_nr_shipping_method) {
    m_openinvoicedata_line_item_nr_shipping_method = openinvoicedata_line_item_nr_shipping_method;
    m_openinvoicedata_line_item_nr_shipping_method_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_openinvoicedata_line_item_nr_shipping_method_Set() const{
    return m_openinvoicedata_line_item_nr_shipping_method_isSet;
}

bool OAIPaymentRequest_additionalData::is_openinvoicedata_line_item_nr_shipping_method_Valid() const{
    return m_openinvoicedata_line_item_nr_shipping_method_isValid;
}

QString OAIPaymentRequest_additionalData::getOpeninvoicedataLineItemNrTrackingNumber() const {
    return m_openinvoicedata_line_item_nr_tracking_number;
}
void OAIPaymentRequest_additionalData::setOpeninvoicedataLineItemNrTrackingNumber(const QString &openinvoicedata_line_item_nr_tracking_number) {
    m_openinvoicedata_line_item_nr_tracking_number = openinvoicedata_line_item_nr_tracking_number;
    m_openinvoicedata_line_item_nr_tracking_number_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_openinvoicedata_line_item_nr_tracking_number_Set() const{
    return m_openinvoicedata_line_item_nr_tracking_number_isSet;
}

bool OAIPaymentRequest_additionalData::is_openinvoicedata_line_item_nr_tracking_number_Valid() const{
    return m_openinvoicedata_line_item_nr_tracking_number_isValid;
}

QString OAIPaymentRequest_additionalData::getOpeninvoicedataLineItemNrTrackingUri() const {
    return m_openinvoicedata_line_item_nr_tracking_uri;
}
void OAIPaymentRequest_additionalData::setOpeninvoicedataLineItemNrTrackingUri(const QString &openinvoicedata_line_item_nr_tracking_uri) {
    m_openinvoicedata_line_item_nr_tracking_uri = openinvoicedata_line_item_nr_tracking_uri;
    m_openinvoicedata_line_item_nr_tracking_uri_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_openinvoicedata_line_item_nr_tracking_uri_Set() const{
    return m_openinvoicedata_line_item_nr_tracking_uri_isSet;
}

bool OAIPaymentRequest_additionalData::is_openinvoicedata_line_item_nr_tracking_uri_Valid() const{
    return m_openinvoicedata_line_item_nr_tracking_uri_isValid;
}

QString OAIPaymentRequest_additionalData::getOpiIncludeTransToken() const {
    return m_opi_include_trans_token;
}
void OAIPaymentRequest_additionalData::setOpiIncludeTransToken(const QString &opi_include_trans_token) {
    m_opi_include_trans_token = opi_include_trans_token;
    m_opi_include_trans_token_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_opi_include_trans_token_Set() const{
    return m_opi_include_trans_token_isSet;
}

bool OAIPaymentRequest_additionalData::is_opi_include_trans_token_Valid() const{
    return m_opi_include_trans_token_isValid;
}

QString OAIPaymentRequest_additionalData::getRatepayInstallmentAmount() const {
    return m_ratepay_installment_amount;
}
void OAIPaymentRequest_additionalData::setRatepayInstallmentAmount(const QString &ratepay_installment_amount) {
    m_ratepay_installment_amount = ratepay_installment_amount;
    m_ratepay_installment_amount_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_ratepay_installment_amount_Set() const{
    return m_ratepay_installment_amount_isSet;
}

bool OAIPaymentRequest_additionalData::is_ratepay_installment_amount_Valid() const{
    return m_ratepay_installment_amount_isValid;
}

QString OAIPaymentRequest_additionalData::getRatepayInterestRate() const {
    return m_ratepay_interest_rate;
}
void OAIPaymentRequest_additionalData::setRatepayInterestRate(const QString &ratepay_interest_rate) {
    m_ratepay_interest_rate = ratepay_interest_rate;
    m_ratepay_interest_rate_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_ratepay_interest_rate_Set() const{
    return m_ratepay_interest_rate_isSet;
}

bool OAIPaymentRequest_additionalData::is_ratepay_interest_rate_Valid() const{
    return m_ratepay_interest_rate_isValid;
}

QString OAIPaymentRequest_additionalData::getRatepayLastInstallmentAmount() const {
    return m_ratepay_last_installment_amount;
}
void OAIPaymentRequest_additionalData::setRatepayLastInstallmentAmount(const QString &ratepay_last_installment_amount) {
    m_ratepay_last_installment_amount = ratepay_last_installment_amount;
    m_ratepay_last_installment_amount_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_ratepay_last_installment_amount_Set() const{
    return m_ratepay_last_installment_amount_isSet;
}

bool OAIPaymentRequest_additionalData::is_ratepay_last_installment_amount_Valid() const{
    return m_ratepay_last_installment_amount_isValid;
}

QString OAIPaymentRequest_additionalData::getRatepayPaymentFirstday() const {
    return m_ratepay_payment_firstday;
}
void OAIPaymentRequest_additionalData::setRatepayPaymentFirstday(const QString &ratepay_payment_firstday) {
    m_ratepay_payment_firstday = ratepay_payment_firstday;
    m_ratepay_payment_firstday_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_ratepay_payment_firstday_Set() const{
    return m_ratepay_payment_firstday_isSet;
}

bool OAIPaymentRequest_additionalData::is_ratepay_payment_firstday_Valid() const{
    return m_ratepay_payment_firstday_isValid;
}

QString OAIPaymentRequest_additionalData::getRatepaydataDeliveryDate() const {
    return m_ratepaydata_delivery_date;
}
void OAIPaymentRequest_additionalData::setRatepaydataDeliveryDate(const QString &ratepaydata_delivery_date) {
    m_ratepaydata_delivery_date = ratepaydata_delivery_date;
    m_ratepaydata_delivery_date_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_ratepaydata_delivery_date_Set() const{
    return m_ratepaydata_delivery_date_isSet;
}

bool OAIPaymentRequest_additionalData::is_ratepaydata_delivery_date_Valid() const{
    return m_ratepaydata_delivery_date_isValid;
}

QString OAIPaymentRequest_additionalData::getRatepaydataDueDate() const {
    return m_ratepaydata_due_date;
}
void OAIPaymentRequest_additionalData::setRatepaydataDueDate(const QString &ratepaydata_due_date) {
    m_ratepaydata_due_date = ratepaydata_due_date;
    m_ratepaydata_due_date_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_ratepaydata_due_date_Set() const{
    return m_ratepaydata_due_date_isSet;
}

bool OAIPaymentRequest_additionalData::is_ratepaydata_due_date_Valid() const{
    return m_ratepaydata_due_date_isValid;
}

QString OAIPaymentRequest_additionalData::getRatepaydataInvoiceDate() const {
    return m_ratepaydata_invoice_date;
}
void OAIPaymentRequest_additionalData::setRatepaydataInvoiceDate(const QString &ratepaydata_invoice_date) {
    m_ratepaydata_invoice_date = ratepaydata_invoice_date;
    m_ratepaydata_invoice_date_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_ratepaydata_invoice_date_Set() const{
    return m_ratepaydata_invoice_date_isSet;
}

bool OAIPaymentRequest_additionalData::is_ratepaydata_invoice_date_Valid() const{
    return m_ratepaydata_invoice_date_isValid;
}

QString OAIPaymentRequest_additionalData::getRatepaydataInvoiceId() const {
    return m_ratepaydata_invoice_id;
}
void OAIPaymentRequest_additionalData::setRatepaydataInvoiceId(const QString &ratepaydata_invoice_id) {
    m_ratepaydata_invoice_id = ratepaydata_invoice_id;
    m_ratepaydata_invoice_id_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_ratepaydata_invoice_id_Set() const{
    return m_ratepaydata_invoice_id_isSet;
}

bool OAIPaymentRequest_additionalData::is_ratepaydata_invoice_id_Valid() const{
    return m_ratepaydata_invoice_id_isValid;
}

QString OAIPaymentRequest_additionalData::getRetryChainAttemptNumber() const {
    return m_retry_chain_attempt_number;
}
void OAIPaymentRequest_additionalData::setRetryChainAttemptNumber(const QString &retry_chain_attempt_number) {
    m_retry_chain_attempt_number = retry_chain_attempt_number;
    m_retry_chain_attempt_number_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_retry_chain_attempt_number_Set() const{
    return m_retry_chain_attempt_number_isSet;
}

bool OAIPaymentRequest_additionalData::is_retry_chain_attempt_number_Valid() const{
    return m_retry_chain_attempt_number_isValid;
}

QString OAIPaymentRequest_additionalData::getRetryOrderAttemptNumber() const {
    return m_retry_order_attempt_number;
}
void OAIPaymentRequest_additionalData::setRetryOrderAttemptNumber(const QString &retry_order_attempt_number) {
    m_retry_order_attempt_number = retry_order_attempt_number;
    m_retry_order_attempt_number_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_retry_order_attempt_number_Set() const{
    return m_retry_order_attempt_number_isSet;
}

bool OAIPaymentRequest_additionalData::is_retry_order_attempt_number_Valid() const{
    return m_retry_order_attempt_number_isValid;
}

QString OAIPaymentRequest_additionalData::getRetrySkipRetry() const {
    return m_retry_skip_retry;
}
void OAIPaymentRequest_additionalData::setRetrySkipRetry(const QString &retry_skip_retry) {
    m_retry_skip_retry = retry_skip_retry;
    m_retry_skip_retry_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_retry_skip_retry_Set() const{
    return m_retry_skip_retry_isSet;
}

bool OAIPaymentRequest_additionalData::is_retry_skip_retry_Valid() const{
    return m_retry_skip_retry_isValid;
}

QString OAIPaymentRequest_additionalData::getRiskdataCustomFieldName() const {
    return m_riskdata__custom_field_name;
}
void OAIPaymentRequest_additionalData::setRiskdataCustomFieldName(const QString &riskdata__custom_field_name) {
    m_riskdata__custom_field_name = riskdata__custom_field_name;
    m_riskdata__custom_field_name_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_riskdata__custom_field_name_Set() const{
    return m_riskdata__custom_field_name_isSet;
}

bool OAIPaymentRequest_additionalData::is_riskdata__custom_field_name_Valid() const{
    return m_riskdata__custom_field_name_isValid;
}

QString OAIPaymentRequest_additionalData::getRiskdataBasketItemItemNrAmountPerItem() const {
    return m_riskdata_basket_item_item_nr_amount_per_item;
}
void OAIPaymentRequest_additionalData::setRiskdataBasketItemItemNrAmountPerItem(const QString &riskdata_basket_item_item_nr_amount_per_item) {
    m_riskdata_basket_item_item_nr_amount_per_item = riskdata_basket_item_item_nr_amount_per_item;
    m_riskdata_basket_item_item_nr_amount_per_item_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_riskdata_basket_item_item_nr_amount_per_item_Set() const{
    return m_riskdata_basket_item_item_nr_amount_per_item_isSet;
}

bool OAIPaymentRequest_additionalData::is_riskdata_basket_item_item_nr_amount_per_item_Valid() const{
    return m_riskdata_basket_item_item_nr_amount_per_item_isValid;
}

QString OAIPaymentRequest_additionalData::getRiskdataBasketItemItemNrBrand() const {
    return m_riskdata_basket_item_item_nr_brand;
}
void OAIPaymentRequest_additionalData::setRiskdataBasketItemItemNrBrand(const QString &riskdata_basket_item_item_nr_brand) {
    m_riskdata_basket_item_item_nr_brand = riskdata_basket_item_item_nr_brand;
    m_riskdata_basket_item_item_nr_brand_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_riskdata_basket_item_item_nr_brand_Set() const{
    return m_riskdata_basket_item_item_nr_brand_isSet;
}

bool OAIPaymentRequest_additionalData::is_riskdata_basket_item_item_nr_brand_Valid() const{
    return m_riskdata_basket_item_item_nr_brand_isValid;
}

QString OAIPaymentRequest_additionalData::getRiskdataBasketItemItemNrCategory() const {
    return m_riskdata_basket_item_item_nr_category;
}
void OAIPaymentRequest_additionalData::setRiskdataBasketItemItemNrCategory(const QString &riskdata_basket_item_item_nr_category) {
    m_riskdata_basket_item_item_nr_category = riskdata_basket_item_item_nr_category;
    m_riskdata_basket_item_item_nr_category_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_riskdata_basket_item_item_nr_category_Set() const{
    return m_riskdata_basket_item_item_nr_category_isSet;
}

bool OAIPaymentRequest_additionalData::is_riskdata_basket_item_item_nr_category_Valid() const{
    return m_riskdata_basket_item_item_nr_category_isValid;
}

QString OAIPaymentRequest_additionalData::getRiskdataBasketItemItemNrColor() const {
    return m_riskdata_basket_item_item_nr_color;
}
void OAIPaymentRequest_additionalData::setRiskdataBasketItemItemNrColor(const QString &riskdata_basket_item_item_nr_color) {
    m_riskdata_basket_item_item_nr_color = riskdata_basket_item_item_nr_color;
    m_riskdata_basket_item_item_nr_color_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_riskdata_basket_item_item_nr_color_Set() const{
    return m_riskdata_basket_item_item_nr_color_isSet;
}

bool OAIPaymentRequest_additionalData::is_riskdata_basket_item_item_nr_color_Valid() const{
    return m_riskdata_basket_item_item_nr_color_isValid;
}

QString OAIPaymentRequest_additionalData::getRiskdataBasketItemItemNrCurrency() const {
    return m_riskdata_basket_item_item_nr_currency;
}
void OAIPaymentRequest_additionalData::setRiskdataBasketItemItemNrCurrency(const QString &riskdata_basket_item_item_nr_currency) {
    m_riskdata_basket_item_item_nr_currency = riskdata_basket_item_item_nr_currency;
    m_riskdata_basket_item_item_nr_currency_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_riskdata_basket_item_item_nr_currency_Set() const{
    return m_riskdata_basket_item_item_nr_currency_isSet;
}

bool OAIPaymentRequest_additionalData::is_riskdata_basket_item_item_nr_currency_Valid() const{
    return m_riskdata_basket_item_item_nr_currency_isValid;
}

QString OAIPaymentRequest_additionalData::getRiskdataBasketItemItemNrItemId() const {
    return m_riskdata_basket_item_item_nr_item_id;
}
void OAIPaymentRequest_additionalData::setRiskdataBasketItemItemNrItemId(const QString &riskdata_basket_item_item_nr_item_id) {
    m_riskdata_basket_item_item_nr_item_id = riskdata_basket_item_item_nr_item_id;
    m_riskdata_basket_item_item_nr_item_id_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_riskdata_basket_item_item_nr_item_id_Set() const{
    return m_riskdata_basket_item_item_nr_item_id_isSet;
}

bool OAIPaymentRequest_additionalData::is_riskdata_basket_item_item_nr_item_id_Valid() const{
    return m_riskdata_basket_item_item_nr_item_id_isValid;
}

QString OAIPaymentRequest_additionalData::getRiskdataBasketItemItemNrManufacturer() const {
    return m_riskdata_basket_item_item_nr_manufacturer;
}
void OAIPaymentRequest_additionalData::setRiskdataBasketItemItemNrManufacturer(const QString &riskdata_basket_item_item_nr_manufacturer) {
    m_riskdata_basket_item_item_nr_manufacturer = riskdata_basket_item_item_nr_manufacturer;
    m_riskdata_basket_item_item_nr_manufacturer_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_riskdata_basket_item_item_nr_manufacturer_Set() const{
    return m_riskdata_basket_item_item_nr_manufacturer_isSet;
}

bool OAIPaymentRequest_additionalData::is_riskdata_basket_item_item_nr_manufacturer_Valid() const{
    return m_riskdata_basket_item_item_nr_manufacturer_isValid;
}

QString OAIPaymentRequest_additionalData::getRiskdataBasketItemItemNrProductTitle() const {
    return m_riskdata_basket_item_item_nr_product_title;
}
void OAIPaymentRequest_additionalData::setRiskdataBasketItemItemNrProductTitle(const QString &riskdata_basket_item_item_nr_product_title) {
    m_riskdata_basket_item_item_nr_product_title = riskdata_basket_item_item_nr_product_title;
    m_riskdata_basket_item_item_nr_product_title_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_riskdata_basket_item_item_nr_product_title_Set() const{
    return m_riskdata_basket_item_item_nr_product_title_isSet;
}

bool OAIPaymentRequest_additionalData::is_riskdata_basket_item_item_nr_product_title_Valid() const{
    return m_riskdata_basket_item_item_nr_product_title_isValid;
}

QString OAIPaymentRequest_additionalData::getRiskdataBasketItemItemNrQuantity() const {
    return m_riskdata_basket_item_item_nr_quantity;
}
void OAIPaymentRequest_additionalData::setRiskdataBasketItemItemNrQuantity(const QString &riskdata_basket_item_item_nr_quantity) {
    m_riskdata_basket_item_item_nr_quantity = riskdata_basket_item_item_nr_quantity;
    m_riskdata_basket_item_item_nr_quantity_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_riskdata_basket_item_item_nr_quantity_Set() const{
    return m_riskdata_basket_item_item_nr_quantity_isSet;
}

bool OAIPaymentRequest_additionalData::is_riskdata_basket_item_item_nr_quantity_Valid() const{
    return m_riskdata_basket_item_item_nr_quantity_isValid;
}

QString OAIPaymentRequest_additionalData::getRiskdataBasketItemItemNrReceiverEmail() const {
    return m_riskdata_basket_item_item_nr_receiver_email;
}
void OAIPaymentRequest_additionalData::setRiskdataBasketItemItemNrReceiverEmail(const QString &riskdata_basket_item_item_nr_receiver_email) {
    m_riskdata_basket_item_item_nr_receiver_email = riskdata_basket_item_item_nr_receiver_email;
    m_riskdata_basket_item_item_nr_receiver_email_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_riskdata_basket_item_item_nr_receiver_email_Set() const{
    return m_riskdata_basket_item_item_nr_receiver_email_isSet;
}

bool OAIPaymentRequest_additionalData::is_riskdata_basket_item_item_nr_receiver_email_Valid() const{
    return m_riskdata_basket_item_item_nr_receiver_email_isValid;
}

QString OAIPaymentRequest_additionalData::getRiskdataBasketItemItemNrSize() const {
    return m_riskdata_basket_item_item_nr_size;
}
void OAIPaymentRequest_additionalData::setRiskdataBasketItemItemNrSize(const QString &riskdata_basket_item_item_nr_size) {
    m_riskdata_basket_item_item_nr_size = riskdata_basket_item_item_nr_size;
    m_riskdata_basket_item_item_nr_size_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_riskdata_basket_item_item_nr_size_Set() const{
    return m_riskdata_basket_item_item_nr_size_isSet;
}

bool OAIPaymentRequest_additionalData::is_riskdata_basket_item_item_nr_size_Valid() const{
    return m_riskdata_basket_item_item_nr_size_isValid;
}

QString OAIPaymentRequest_additionalData::getRiskdataBasketItemItemNrSku() const {
    return m_riskdata_basket_item_item_nr_sku;
}
void OAIPaymentRequest_additionalData::setRiskdataBasketItemItemNrSku(const QString &riskdata_basket_item_item_nr_sku) {
    m_riskdata_basket_item_item_nr_sku = riskdata_basket_item_item_nr_sku;
    m_riskdata_basket_item_item_nr_sku_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_riskdata_basket_item_item_nr_sku_Set() const{
    return m_riskdata_basket_item_item_nr_sku_isSet;
}

bool OAIPaymentRequest_additionalData::is_riskdata_basket_item_item_nr_sku_Valid() const{
    return m_riskdata_basket_item_item_nr_sku_isValid;
}

QString OAIPaymentRequest_additionalData::getRiskdataBasketItemItemNrUpc() const {
    return m_riskdata_basket_item_item_nr_upc;
}
void OAIPaymentRequest_additionalData::setRiskdataBasketItemItemNrUpc(const QString &riskdata_basket_item_item_nr_upc) {
    m_riskdata_basket_item_item_nr_upc = riskdata_basket_item_item_nr_upc;
    m_riskdata_basket_item_item_nr_upc_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_riskdata_basket_item_item_nr_upc_Set() const{
    return m_riskdata_basket_item_item_nr_upc_isSet;
}

bool OAIPaymentRequest_additionalData::is_riskdata_basket_item_item_nr_upc_Valid() const{
    return m_riskdata_basket_item_item_nr_upc_isValid;
}

QString OAIPaymentRequest_additionalData::getRiskdataPromotionsPromotionItemNrPromotionCode() const {
    return m_riskdata_promotions_promotion_item_nr_promotion_code;
}
void OAIPaymentRequest_additionalData::setRiskdataPromotionsPromotionItemNrPromotionCode(const QString &riskdata_promotions_promotion_item_nr_promotion_code) {
    m_riskdata_promotions_promotion_item_nr_promotion_code = riskdata_promotions_promotion_item_nr_promotion_code;
    m_riskdata_promotions_promotion_item_nr_promotion_code_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_riskdata_promotions_promotion_item_nr_promotion_code_Set() const{
    return m_riskdata_promotions_promotion_item_nr_promotion_code_isSet;
}

bool OAIPaymentRequest_additionalData::is_riskdata_promotions_promotion_item_nr_promotion_code_Valid() const{
    return m_riskdata_promotions_promotion_item_nr_promotion_code_isValid;
}

QString OAIPaymentRequest_additionalData::getRiskdataPromotionsPromotionItemNrPromotionDiscountAmount() const {
    return m_riskdata_promotions_promotion_item_nr_promotion_discount_amount;
}
void OAIPaymentRequest_additionalData::setRiskdataPromotionsPromotionItemNrPromotionDiscountAmount(const QString &riskdata_promotions_promotion_item_nr_promotion_discount_amount) {
    m_riskdata_promotions_promotion_item_nr_promotion_discount_amount = riskdata_promotions_promotion_item_nr_promotion_discount_amount;
    m_riskdata_promotions_promotion_item_nr_promotion_discount_amount_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_riskdata_promotions_promotion_item_nr_promotion_discount_amount_Set() const{
    return m_riskdata_promotions_promotion_item_nr_promotion_discount_amount_isSet;
}

bool OAIPaymentRequest_additionalData::is_riskdata_promotions_promotion_item_nr_promotion_discount_amount_Valid() const{
    return m_riskdata_promotions_promotion_item_nr_promotion_discount_amount_isValid;
}

QString OAIPaymentRequest_additionalData::getRiskdataPromotionsPromotionItemNrPromotionDiscountCurrency() const {
    return m_riskdata_promotions_promotion_item_nr_promotion_discount_currency;
}
void OAIPaymentRequest_additionalData::setRiskdataPromotionsPromotionItemNrPromotionDiscountCurrency(const QString &riskdata_promotions_promotion_item_nr_promotion_discount_currency) {
    m_riskdata_promotions_promotion_item_nr_promotion_discount_currency = riskdata_promotions_promotion_item_nr_promotion_discount_currency;
    m_riskdata_promotions_promotion_item_nr_promotion_discount_currency_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_riskdata_promotions_promotion_item_nr_promotion_discount_currency_Set() const{
    return m_riskdata_promotions_promotion_item_nr_promotion_discount_currency_isSet;
}

bool OAIPaymentRequest_additionalData::is_riskdata_promotions_promotion_item_nr_promotion_discount_currency_Valid() const{
    return m_riskdata_promotions_promotion_item_nr_promotion_discount_currency_isValid;
}

QString OAIPaymentRequest_additionalData::getRiskdataPromotionsPromotionItemNrPromotionDiscountPercentage() const {
    return m_riskdata_promotions_promotion_item_nr_promotion_discount_percentage;
}
void OAIPaymentRequest_additionalData::setRiskdataPromotionsPromotionItemNrPromotionDiscountPercentage(const QString &riskdata_promotions_promotion_item_nr_promotion_discount_percentage) {
    m_riskdata_promotions_promotion_item_nr_promotion_discount_percentage = riskdata_promotions_promotion_item_nr_promotion_discount_percentage;
    m_riskdata_promotions_promotion_item_nr_promotion_discount_percentage_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_riskdata_promotions_promotion_item_nr_promotion_discount_percentage_Set() const{
    return m_riskdata_promotions_promotion_item_nr_promotion_discount_percentage_isSet;
}

bool OAIPaymentRequest_additionalData::is_riskdata_promotions_promotion_item_nr_promotion_discount_percentage_Valid() const{
    return m_riskdata_promotions_promotion_item_nr_promotion_discount_percentage_isValid;
}

QString OAIPaymentRequest_additionalData::getRiskdataPromotionsPromotionItemNrPromotionName() const {
    return m_riskdata_promotions_promotion_item_nr_promotion_name;
}
void OAIPaymentRequest_additionalData::setRiskdataPromotionsPromotionItemNrPromotionName(const QString &riskdata_promotions_promotion_item_nr_promotion_name) {
    m_riskdata_promotions_promotion_item_nr_promotion_name = riskdata_promotions_promotion_item_nr_promotion_name;
    m_riskdata_promotions_promotion_item_nr_promotion_name_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_riskdata_promotions_promotion_item_nr_promotion_name_Set() const{
    return m_riskdata_promotions_promotion_item_nr_promotion_name_isSet;
}

bool OAIPaymentRequest_additionalData::is_riskdata_promotions_promotion_item_nr_promotion_name_Valid() const{
    return m_riskdata_promotions_promotion_item_nr_promotion_name_isValid;
}

QString OAIPaymentRequest_additionalData::getRiskdataRiskProfileReference() const {
    return m_riskdata_risk_profile_reference;
}
void OAIPaymentRequest_additionalData::setRiskdataRiskProfileReference(const QString &riskdata_risk_profile_reference) {
    m_riskdata_risk_profile_reference = riskdata_risk_profile_reference;
    m_riskdata_risk_profile_reference_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_riskdata_risk_profile_reference_Set() const{
    return m_riskdata_risk_profile_reference_isSet;
}

bool OAIPaymentRequest_additionalData::is_riskdata_risk_profile_reference_Valid() const{
    return m_riskdata_risk_profile_reference_isValid;
}

QString OAIPaymentRequest_additionalData::getRiskdataSkipRisk() const {
    return m_riskdata_skip_risk;
}
void OAIPaymentRequest_additionalData::setRiskdataSkipRisk(const QString &riskdata_skip_risk) {
    m_riskdata_skip_risk = riskdata_skip_risk;
    m_riskdata_skip_risk_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_riskdata_skip_risk_Set() const{
    return m_riskdata_skip_risk_isSet;
}

bool OAIPaymentRequest_additionalData::is_riskdata_skip_risk_Valid() const{
    return m_riskdata_skip_risk_isValid;
}

QString OAIPaymentRequest_additionalData::getPayPalCountryCode() const {
    return m_pay_pal_country_code;
}
void OAIPaymentRequest_additionalData::setPayPalCountryCode(const QString &pay_pal_country_code) {
    m_pay_pal_country_code = pay_pal_country_code;
    m_pay_pal_country_code_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_pay_pal_country_code_Set() const{
    return m_pay_pal_country_code_isSet;
}

bool OAIPaymentRequest_additionalData::is_pay_pal_country_code_Valid() const{
    return m_pay_pal_country_code_isValid;
}

QString OAIPaymentRequest_additionalData::getPayPalEmailId() const {
    return m_pay_pal_email_id;
}
void OAIPaymentRequest_additionalData::setPayPalEmailId(const QString &pay_pal_email_id) {
    m_pay_pal_email_id = pay_pal_email_id;
    m_pay_pal_email_id_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_pay_pal_email_id_Set() const{
    return m_pay_pal_email_id_isSet;
}

bool OAIPaymentRequest_additionalData::is_pay_pal_email_id_Valid() const{
    return m_pay_pal_email_id_isValid;
}

QString OAIPaymentRequest_additionalData::getPayPalFirstName() const {
    return m_pay_pal_first_name;
}
void OAIPaymentRequest_additionalData::setPayPalFirstName(const QString &pay_pal_first_name) {
    m_pay_pal_first_name = pay_pal_first_name;
    m_pay_pal_first_name_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_pay_pal_first_name_Set() const{
    return m_pay_pal_first_name_isSet;
}

bool OAIPaymentRequest_additionalData::is_pay_pal_first_name_Valid() const{
    return m_pay_pal_first_name_isValid;
}

QString OAIPaymentRequest_additionalData::getPayPalLastName() const {
    return m_pay_pal_last_name;
}
void OAIPaymentRequest_additionalData::setPayPalLastName(const QString &pay_pal_last_name) {
    m_pay_pal_last_name = pay_pal_last_name;
    m_pay_pal_last_name_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_pay_pal_last_name_Set() const{
    return m_pay_pal_last_name_isSet;
}

bool OAIPaymentRequest_additionalData::is_pay_pal_last_name_Valid() const{
    return m_pay_pal_last_name_isValid;
}

QString OAIPaymentRequest_additionalData::getPayPalPayerId() const {
    return m_pay_pal_payer_id;
}
void OAIPaymentRequest_additionalData::setPayPalPayerId(const QString &pay_pal_payer_id) {
    m_pay_pal_payer_id = pay_pal_payer_id;
    m_pay_pal_payer_id_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_pay_pal_payer_id_Set() const{
    return m_pay_pal_payer_id_isSet;
}

bool OAIPaymentRequest_additionalData::is_pay_pal_payer_id_Valid() const{
    return m_pay_pal_payer_id_isValid;
}

QString OAIPaymentRequest_additionalData::getPayPalPhone() const {
    return m_pay_pal_phone;
}
void OAIPaymentRequest_additionalData::setPayPalPhone(const QString &pay_pal_phone) {
    m_pay_pal_phone = pay_pal_phone;
    m_pay_pal_phone_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_pay_pal_phone_Set() const{
    return m_pay_pal_phone_isSet;
}

bool OAIPaymentRequest_additionalData::is_pay_pal_phone_Valid() const{
    return m_pay_pal_phone_isValid;
}

QString OAIPaymentRequest_additionalData::getPayPalProtectionEligibility() const {
    return m_pay_pal_protection_eligibility;
}
void OAIPaymentRequest_additionalData::setPayPalProtectionEligibility(const QString &pay_pal_protection_eligibility) {
    m_pay_pal_protection_eligibility = pay_pal_protection_eligibility;
    m_pay_pal_protection_eligibility_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_pay_pal_protection_eligibility_Set() const{
    return m_pay_pal_protection_eligibility_isSet;
}

bool OAIPaymentRequest_additionalData::is_pay_pal_protection_eligibility_Valid() const{
    return m_pay_pal_protection_eligibility_isValid;
}

QString OAIPaymentRequest_additionalData::getPayPalTransactionId() const {
    return m_pay_pal_transaction_id;
}
void OAIPaymentRequest_additionalData::setPayPalTransactionId(const QString &pay_pal_transaction_id) {
    m_pay_pal_transaction_id = pay_pal_transaction_id;
    m_pay_pal_transaction_id_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_pay_pal_transaction_id_Set() const{
    return m_pay_pal_transaction_id_isSet;
}

bool OAIPaymentRequest_additionalData::is_pay_pal_transaction_id_Valid() const{
    return m_pay_pal_transaction_id_isValid;
}

QString OAIPaymentRequest_additionalData::getAvsResultRaw() const {
    return m_avs_result_raw;
}
void OAIPaymentRequest_additionalData::setAvsResultRaw(const QString &avs_result_raw) {
    m_avs_result_raw = avs_result_raw;
    m_avs_result_raw_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_avs_result_raw_Set() const{
    return m_avs_result_raw_isSet;
}

bool OAIPaymentRequest_additionalData::is_avs_result_raw_Valid() const{
    return m_avs_result_raw_isValid;
}

QString OAIPaymentRequest_additionalData::getBin() const {
    return m_bin;
}
void OAIPaymentRequest_additionalData::setBin(const QString &bin) {
    m_bin = bin;
    m_bin_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_bin_Set() const{
    return m_bin_isSet;
}

bool OAIPaymentRequest_additionalData::is_bin_Valid() const{
    return m_bin_isValid;
}

QString OAIPaymentRequest_additionalData::getCvcResultRaw() const {
    return m_cvc_result_raw;
}
void OAIPaymentRequest_additionalData::setCvcResultRaw(const QString &cvc_result_raw) {
    m_cvc_result_raw = cvc_result_raw;
    m_cvc_result_raw_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_cvc_result_raw_Set() const{
    return m_cvc_result_raw_isSet;
}

bool OAIPaymentRequest_additionalData::is_cvc_result_raw_Valid() const{
    return m_cvc_result_raw_isValid;
}

QString OAIPaymentRequest_additionalData::getRiskToken() const {
    return m_risk_token;
}
void OAIPaymentRequest_additionalData::setRiskToken(const QString &risk_token) {
    m_risk_token = risk_token;
    m_risk_token_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_risk_token_Set() const{
    return m_risk_token_isSet;
}

bool OAIPaymentRequest_additionalData::is_risk_token_Valid() const{
    return m_risk_token_isValid;
}

QString OAIPaymentRequest_additionalData::getThreeDAuthenticated() const {
    return m_three_d_authenticated;
}
void OAIPaymentRequest_additionalData::setThreeDAuthenticated(const QString &three_d_authenticated) {
    m_three_d_authenticated = three_d_authenticated;
    m_three_d_authenticated_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_three_d_authenticated_Set() const{
    return m_three_d_authenticated_isSet;
}

bool OAIPaymentRequest_additionalData::is_three_d_authenticated_Valid() const{
    return m_three_d_authenticated_isValid;
}

QString OAIPaymentRequest_additionalData::getThreeDOffered() const {
    return m_three_d_offered;
}
void OAIPaymentRequest_additionalData::setThreeDOffered(const QString &three_d_offered) {
    m_three_d_offered = three_d_offered;
    m_three_d_offered_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_three_d_offered_Set() const{
    return m_three_d_offered_isSet;
}

bool OAIPaymentRequest_additionalData::is_three_d_offered_Valid() const{
    return m_three_d_offered_isValid;
}

QString OAIPaymentRequest_additionalData::getTokenDataType() const {
    return m_token_data_type;
}
void OAIPaymentRequest_additionalData::setTokenDataType(const QString &token_data_type) {
    m_token_data_type = token_data_type;
    m_token_data_type_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_token_data_type_Set() const{
    return m_token_data_type_isSet;
}

bool OAIPaymentRequest_additionalData::is_token_data_type_Valid() const{
    return m_token_data_type_isValid;
}

QString OAIPaymentRequest_additionalData::getSubMerchantNumberOfSubSellers() const {
    return m_sub_merchant_number_of_sub_sellers;
}
void OAIPaymentRequest_additionalData::setSubMerchantNumberOfSubSellers(const QString &sub_merchant_number_of_sub_sellers) {
    m_sub_merchant_number_of_sub_sellers = sub_merchant_number_of_sub_sellers;
    m_sub_merchant_number_of_sub_sellers_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_sub_merchant_number_of_sub_sellers_Set() const{
    return m_sub_merchant_number_of_sub_sellers_isSet;
}

bool OAIPaymentRequest_additionalData::is_sub_merchant_number_of_sub_sellers_Valid() const{
    return m_sub_merchant_number_of_sub_sellers_isValid;
}

QString OAIPaymentRequest_additionalData::getSubMerchantSubSellerSubSellerNrCity() const {
    return m_sub_merchant_sub_seller_sub_seller_nr_city;
}
void OAIPaymentRequest_additionalData::setSubMerchantSubSellerSubSellerNrCity(const QString &sub_merchant_sub_seller_sub_seller_nr_city) {
    m_sub_merchant_sub_seller_sub_seller_nr_city = sub_merchant_sub_seller_sub_seller_nr_city;
    m_sub_merchant_sub_seller_sub_seller_nr_city_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_sub_merchant_sub_seller_sub_seller_nr_city_Set() const{
    return m_sub_merchant_sub_seller_sub_seller_nr_city_isSet;
}

bool OAIPaymentRequest_additionalData::is_sub_merchant_sub_seller_sub_seller_nr_city_Valid() const{
    return m_sub_merchant_sub_seller_sub_seller_nr_city_isValid;
}

QString OAIPaymentRequest_additionalData::getSubMerchantSubSellerSubSellerNrCountry() const {
    return m_sub_merchant_sub_seller_sub_seller_nr_country;
}
void OAIPaymentRequest_additionalData::setSubMerchantSubSellerSubSellerNrCountry(const QString &sub_merchant_sub_seller_sub_seller_nr_country) {
    m_sub_merchant_sub_seller_sub_seller_nr_country = sub_merchant_sub_seller_sub_seller_nr_country;
    m_sub_merchant_sub_seller_sub_seller_nr_country_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_sub_merchant_sub_seller_sub_seller_nr_country_Set() const{
    return m_sub_merchant_sub_seller_sub_seller_nr_country_isSet;
}

bool OAIPaymentRequest_additionalData::is_sub_merchant_sub_seller_sub_seller_nr_country_Valid() const{
    return m_sub_merchant_sub_seller_sub_seller_nr_country_isValid;
}

QString OAIPaymentRequest_additionalData::getSubMerchantSubSellerSubSellerNrId() const {
    return m_sub_merchant_sub_seller_sub_seller_nr_id;
}
void OAIPaymentRequest_additionalData::setSubMerchantSubSellerSubSellerNrId(const QString &sub_merchant_sub_seller_sub_seller_nr_id) {
    m_sub_merchant_sub_seller_sub_seller_nr_id = sub_merchant_sub_seller_sub_seller_nr_id;
    m_sub_merchant_sub_seller_sub_seller_nr_id_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_sub_merchant_sub_seller_sub_seller_nr_id_Set() const{
    return m_sub_merchant_sub_seller_sub_seller_nr_id_isSet;
}

bool OAIPaymentRequest_additionalData::is_sub_merchant_sub_seller_sub_seller_nr_id_Valid() const{
    return m_sub_merchant_sub_seller_sub_seller_nr_id_isValid;
}

QString OAIPaymentRequest_additionalData::getSubMerchantSubSellerSubSellerNrMcc() const {
    return m_sub_merchant_sub_seller_sub_seller_nr_mcc;
}
void OAIPaymentRequest_additionalData::setSubMerchantSubSellerSubSellerNrMcc(const QString &sub_merchant_sub_seller_sub_seller_nr_mcc) {
    m_sub_merchant_sub_seller_sub_seller_nr_mcc = sub_merchant_sub_seller_sub_seller_nr_mcc;
    m_sub_merchant_sub_seller_sub_seller_nr_mcc_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_sub_merchant_sub_seller_sub_seller_nr_mcc_Set() const{
    return m_sub_merchant_sub_seller_sub_seller_nr_mcc_isSet;
}

bool OAIPaymentRequest_additionalData::is_sub_merchant_sub_seller_sub_seller_nr_mcc_Valid() const{
    return m_sub_merchant_sub_seller_sub_seller_nr_mcc_isValid;
}

QString OAIPaymentRequest_additionalData::getSubMerchantSubSellerSubSellerNrName() const {
    return m_sub_merchant_sub_seller_sub_seller_nr_name;
}
void OAIPaymentRequest_additionalData::setSubMerchantSubSellerSubSellerNrName(const QString &sub_merchant_sub_seller_sub_seller_nr_name) {
    m_sub_merchant_sub_seller_sub_seller_nr_name = sub_merchant_sub_seller_sub_seller_nr_name;
    m_sub_merchant_sub_seller_sub_seller_nr_name_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_sub_merchant_sub_seller_sub_seller_nr_name_Set() const{
    return m_sub_merchant_sub_seller_sub_seller_nr_name_isSet;
}

bool OAIPaymentRequest_additionalData::is_sub_merchant_sub_seller_sub_seller_nr_name_Valid() const{
    return m_sub_merchant_sub_seller_sub_seller_nr_name_isValid;
}

QString OAIPaymentRequest_additionalData::getSubMerchantSubSellerSubSellerNrPostalCode() const {
    return m_sub_merchant_sub_seller_sub_seller_nr_postal_code;
}
void OAIPaymentRequest_additionalData::setSubMerchantSubSellerSubSellerNrPostalCode(const QString &sub_merchant_sub_seller_sub_seller_nr_postal_code) {
    m_sub_merchant_sub_seller_sub_seller_nr_postal_code = sub_merchant_sub_seller_sub_seller_nr_postal_code;
    m_sub_merchant_sub_seller_sub_seller_nr_postal_code_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_sub_merchant_sub_seller_sub_seller_nr_postal_code_Set() const{
    return m_sub_merchant_sub_seller_sub_seller_nr_postal_code_isSet;
}

bool OAIPaymentRequest_additionalData::is_sub_merchant_sub_seller_sub_seller_nr_postal_code_Valid() const{
    return m_sub_merchant_sub_seller_sub_seller_nr_postal_code_isValid;
}

QString OAIPaymentRequest_additionalData::getSubMerchantSubSellerSubSellerNrState() const {
    return m_sub_merchant_sub_seller_sub_seller_nr_state;
}
void OAIPaymentRequest_additionalData::setSubMerchantSubSellerSubSellerNrState(const QString &sub_merchant_sub_seller_sub_seller_nr_state) {
    m_sub_merchant_sub_seller_sub_seller_nr_state = sub_merchant_sub_seller_sub_seller_nr_state;
    m_sub_merchant_sub_seller_sub_seller_nr_state_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_sub_merchant_sub_seller_sub_seller_nr_state_Set() const{
    return m_sub_merchant_sub_seller_sub_seller_nr_state_isSet;
}

bool OAIPaymentRequest_additionalData::is_sub_merchant_sub_seller_sub_seller_nr_state_Valid() const{
    return m_sub_merchant_sub_seller_sub_seller_nr_state_isValid;
}

QString OAIPaymentRequest_additionalData::getSubMerchantSubSellerSubSellerNrStreet() const {
    return m_sub_merchant_sub_seller_sub_seller_nr_street;
}
void OAIPaymentRequest_additionalData::setSubMerchantSubSellerSubSellerNrStreet(const QString &sub_merchant_sub_seller_sub_seller_nr_street) {
    m_sub_merchant_sub_seller_sub_seller_nr_street = sub_merchant_sub_seller_sub_seller_nr_street;
    m_sub_merchant_sub_seller_sub_seller_nr_street_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_sub_merchant_sub_seller_sub_seller_nr_street_Set() const{
    return m_sub_merchant_sub_seller_sub_seller_nr_street_isSet;
}

bool OAIPaymentRequest_additionalData::is_sub_merchant_sub_seller_sub_seller_nr_street_Valid() const{
    return m_sub_merchant_sub_seller_sub_seller_nr_street_isValid;
}

QString OAIPaymentRequest_additionalData::getSubMerchantSubSellerSubSellerNrTaxId() const {
    return m_sub_merchant_sub_seller_sub_seller_nr_tax_id;
}
void OAIPaymentRequest_additionalData::setSubMerchantSubSellerSubSellerNrTaxId(const QString &sub_merchant_sub_seller_sub_seller_nr_tax_id) {
    m_sub_merchant_sub_seller_sub_seller_nr_tax_id = sub_merchant_sub_seller_sub_seller_nr_tax_id;
    m_sub_merchant_sub_seller_sub_seller_nr_tax_id_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_sub_merchant_sub_seller_sub_seller_nr_tax_id_Set() const{
    return m_sub_merchant_sub_seller_sub_seller_nr_tax_id_isSet;
}

bool OAIPaymentRequest_additionalData::is_sub_merchant_sub_seller_sub_seller_nr_tax_id_Valid() const{
    return m_sub_merchant_sub_seller_sub_seller_nr_tax_id_isValid;
}

QString OAIPaymentRequest_additionalData::getEnhancedSchemeDataEmployeeName() const {
    return m_enhanced_scheme_data_employee_name;
}
void OAIPaymentRequest_additionalData::setEnhancedSchemeDataEmployeeName(const QString &enhanced_scheme_data_employee_name) {
    m_enhanced_scheme_data_employee_name = enhanced_scheme_data_employee_name;
    m_enhanced_scheme_data_employee_name_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_enhanced_scheme_data_employee_name_Set() const{
    return m_enhanced_scheme_data_employee_name_isSet;
}

bool OAIPaymentRequest_additionalData::is_enhanced_scheme_data_employee_name_Valid() const{
    return m_enhanced_scheme_data_employee_name_isValid;
}

QString OAIPaymentRequest_additionalData::getEnhancedSchemeDataJobDescription() const {
    return m_enhanced_scheme_data_job_description;
}
void OAIPaymentRequest_additionalData::setEnhancedSchemeDataJobDescription(const QString &enhanced_scheme_data_job_description) {
    m_enhanced_scheme_data_job_description = enhanced_scheme_data_job_description;
    m_enhanced_scheme_data_job_description_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_enhanced_scheme_data_job_description_Set() const{
    return m_enhanced_scheme_data_job_description_isSet;
}

bool OAIPaymentRequest_additionalData::is_enhanced_scheme_data_job_description_Valid() const{
    return m_enhanced_scheme_data_job_description_isValid;
}

QString OAIPaymentRequest_additionalData::getEnhancedSchemeDataRegularHoursRate() const {
    return m_enhanced_scheme_data_regular_hours_rate;
}
void OAIPaymentRequest_additionalData::setEnhancedSchemeDataRegularHoursRate(const QString &enhanced_scheme_data_regular_hours_rate) {
    m_enhanced_scheme_data_regular_hours_rate = enhanced_scheme_data_regular_hours_rate;
    m_enhanced_scheme_data_regular_hours_rate_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_enhanced_scheme_data_regular_hours_rate_Set() const{
    return m_enhanced_scheme_data_regular_hours_rate_isSet;
}

bool OAIPaymentRequest_additionalData::is_enhanced_scheme_data_regular_hours_rate_Valid() const{
    return m_enhanced_scheme_data_regular_hours_rate_isValid;
}

QString OAIPaymentRequest_additionalData::getEnhancedSchemeDataRegularHoursWorked() const {
    return m_enhanced_scheme_data_regular_hours_worked;
}
void OAIPaymentRequest_additionalData::setEnhancedSchemeDataRegularHoursWorked(const QString &enhanced_scheme_data_regular_hours_worked) {
    m_enhanced_scheme_data_regular_hours_worked = enhanced_scheme_data_regular_hours_worked;
    m_enhanced_scheme_data_regular_hours_worked_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_enhanced_scheme_data_regular_hours_worked_Set() const{
    return m_enhanced_scheme_data_regular_hours_worked_isSet;
}

bool OAIPaymentRequest_additionalData::is_enhanced_scheme_data_regular_hours_worked_Valid() const{
    return m_enhanced_scheme_data_regular_hours_worked_isValid;
}

QString OAIPaymentRequest_additionalData::getEnhancedSchemeDataRequestName() const {
    return m_enhanced_scheme_data_request_name;
}
void OAIPaymentRequest_additionalData::setEnhancedSchemeDataRequestName(const QString &enhanced_scheme_data_request_name) {
    m_enhanced_scheme_data_request_name = enhanced_scheme_data_request_name;
    m_enhanced_scheme_data_request_name_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_enhanced_scheme_data_request_name_Set() const{
    return m_enhanced_scheme_data_request_name_isSet;
}

bool OAIPaymentRequest_additionalData::is_enhanced_scheme_data_request_name_Valid() const{
    return m_enhanced_scheme_data_request_name_isValid;
}

QString OAIPaymentRequest_additionalData::getEnhancedSchemeDataTempStartDate() const {
    return m_enhanced_scheme_data_temp_start_date;
}
void OAIPaymentRequest_additionalData::setEnhancedSchemeDataTempStartDate(const QString &enhanced_scheme_data_temp_start_date) {
    m_enhanced_scheme_data_temp_start_date = enhanced_scheme_data_temp_start_date;
    m_enhanced_scheme_data_temp_start_date_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_enhanced_scheme_data_temp_start_date_Set() const{
    return m_enhanced_scheme_data_temp_start_date_isSet;
}

bool OAIPaymentRequest_additionalData::is_enhanced_scheme_data_temp_start_date_Valid() const{
    return m_enhanced_scheme_data_temp_start_date_isValid;
}

QString OAIPaymentRequest_additionalData::getEnhancedSchemeDataTempWeekEnding() const {
    return m_enhanced_scheme_data_temp_week_ending;
}
void OAIPaymentRequest_additionalData::setEnhancedSchemeDataTempWeekEnding(const QString &enhanced_scheme_data_temp_week_ending) {
    m_enhanced_scheme_data_temp_week_ending = enhanced_scheme_data_temp_week_ending;
    m_enhanced_scheme_data_temp_week_ending_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_enhanced_scheme_data_temp_week_ending_Set() const{
    return m_enhanced_scheme_data_temp_week_ending_isSet;
}

bool OAIPaymentRequest_additionalData::is_enhanced_scheme_data_temp_week_ending_Valid() const{
    return m_enhanced_scheme_data_temp_week_ending_isValid;
}

QString OAIPaymentRequest_additionalData::getAndroidpayToken() const {
    return m_androidpay_token;
}
void OAIPaymentRequest_additionalData::setAndroidpayToken(const QString &androidpay_token) {
    m_androidpay_token = androidpay_token;
    m_androidpay_token_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_androidpay_token_Set() const{
    return m_androidpay_token_isSet;
}

bool OAIPaymentRequest_additionalData::is_androidpay_token_Valid() const{
    return m_androidpay_token_isValid;
}

QString OAIPaymentRequest_additionalData::getMasterpassTransactionId() const {
    return m_masterpass_transaction_id;
}
void OAIPaymentRequest_additionalData::setMasterpassTransactionId(const QString &masterpass_transaction_id) {
    m_masterpass_transaction_id = masterpass_transaction_id;
    m_masterpass_transaction_id_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_masterpass_transaction_id_Set() const{
    return m_masterpass_transaction_id_isSet;
}

bool OAIPaymentRequest_additionalData::is_masterpass_transaction_id_Valid() const{
    return m_masterpass_transaction_id_isValid;
}

QString OAIPaymentRequest_additionalData::getPaymentToken() const {
    return m_payment_token;
}
void OAIPaymentRequest_additionalData::setPaymentToken(const QString &payment_token) {
    m_payment_token = payment_token;
    m_payment_token_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_payment_token_Set() const{
    return m_payment_token_isSet;
}

bool OAIPaymentRequest_additionalData::is_payment_token_Valid() const{
    return m_payment_token_isValid;
}

QString OAIPaymentRequest_additionalData::getPaywithgoogleToken() const {
    return m_paywithgoogle_token;
}
void OAIPaymentRequest_additionalData::setPaywithgoogleToken(const QString &paywithgoogle_token) {
    m_paywithgoogle_token = paywithgoogle_token;
    m_paywithgoogle_token_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_paywithgoogle_token_Set() const{
    return m_paywithgoogle_token_isSet;
}

bool OAIPaymentRequest_additionalData::is_paywithgoogle_token_Valid() const{
    return m_paywithgoogle_token_isValid;
}

QString OAIPaymentRequest_additionalData::getSamsungpayToken() const {
    return m_samsungpay_token;
}
void OAIPaymentRequest_additionalData::setSamsungpayToken(const QString &samsungpay_token) {
    m_samsungpay_token = samsungpay_token;
    m_samsungpay_token_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_samsungpay_token_Set() const{
    return m_samsungpay_token_isSet;
}

bool OAIPaymentRequest_additionalData::is_samsungpay_token_Valid() const{
    return m_samsungpay_token_isValid;
}

QString OAIPaymentRequest_additionalData::getVisacheckoutCallId() const {
    return m_visacheckout_call_id;
}
void OAIPaymentRequest_additionalData::setVisacheckoutCallId(const QString &visacheckout_call_id) {
    m_visacheckout_call_id = visacheckout_call_id;
    m_visacheckout_call_id_isSet = true;
}

bool OAIPaymentRequest_additionalData::is_visacheckout_call_id_Set() const{
    return m_visacheckout_call_id_isSet;
}

bool OAIPaymentRequest_additionalData::is_visacheckout_call_id_Valid() const{
    return m_visacheckout_call_id_isValid;
}

bool OAIPaymentRequest_additionalData::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_allow3_ds2_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_challenge_window_size_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_execute_three_d_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mpi_implementation_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sca_exemption_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_three_ds_version_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_airline_agency_invoice_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_airline_agency_plan_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_airline_airline_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_airline_airline_designator_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_airline_boarding_fee_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_airline_computerized_reservation_system_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_airline_customer_reference_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_airline_document_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_airline_flight_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_airline_leg_carrier_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_airline_leg_class_of_travel_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_airline_leg_date_of_travel_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_airline_leg_depart_airport_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_airline_leg_depart_tax_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_airline_leg_destination_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_airline_leg_fare_base_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_airline_leg_flight_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_airline_leg_stop_over_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_airline_passenger_date_of_birth_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_airline_passenger_first_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_airline_passenger_last_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_airline_passenger_telephone_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_airline_passenger_traveller_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_airline_passenger_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_airline_ticket_issue_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_airline_ticket_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_airline_travel_agency_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_airline_travel_agency_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_car_rental_check_out_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_car_rental_customer_service_toll_free_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_car_rental_days_rented_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_car_rental_fuel_charges_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_car_rental_insurance_charges_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_car_rental_location_city_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_car_rental_location_country_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_car_rental_location_state_province_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_car_rental_no_show_indicator_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_car_rental_one_way_drop_off_charges_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_car_rental_rate_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_car_rental_rate_indicator_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_car_rental_rental_agreement_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_car_rental_rental_class_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_car_rental_renter_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_car_rental_return_city_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_car_rental_return_country_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_car_rental_return_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_car_rental_return_location_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_car_rental_return_state_province_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_car_rental_tax_exempt_indicator_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_travel_entertainment_auth_data_duration_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_travel_entertainment_auth_data_market_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_requested_test_error_response_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_allow_partial_auth_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_authorisation_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_custom_routing_flag_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_industry_usage_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_manual_capture_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_network_tx_reference_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_overwrite_brand_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sub_merchant_city_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sub_merchant_country_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sub_merchant_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sub_merchant_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sub_merchant_postal_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sub_merchant_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sub_merchant_street_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sub_merchant_tax_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_enhanced_scheme_data_customer_reference_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_enhanced_scheme_data_destination_country_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_enhanced_scheme_data_destination_postal_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_enhanced_scheme_data_destination_state_province_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_enhanced_scheme_data_duty_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_enhanced_scheme_data_freight_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_enhanced_scheme_data_item_detail_line_item_nr_commodity_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_enhanced_scheme_data_item_detail_line_item_nr_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_enhanced_scheme_data_item_detail_line_item_nr_discount_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_enhanced_scheme_data_item_detail_line_item_nr_product_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_enhanced_scheme_data_item_detail_line_item_nr_quantity_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_enhanced_scheme_data_item_detail_line_item_nr_total_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_enhanced_scheme_data_item_detail_line_item_nr_unit_of_measure_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_enhanced_scheme_data_item_detail_line_item_nr_unit_price_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_enhanced_scheme_data_order_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_enhanced_scheme_data_ship_from_postal_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_enhanced_scheme_data_total_tax_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_lodging_check_in_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_lodging_check_out_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_lodging_customer_service_toll_free_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_lodging_fire_safety_act_indicator_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_lodging_folio_cash_advances_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_lodging_folio_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_lodging_food_beverage_charges_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_lodging_no_show_indicator_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_lodging_prepaid_expenses_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_lodging_property_phone_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_lodging_room1_number_of_nights_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_lodging_room1_rate_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_lodging_total_room_tax_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_lodging_total_tax_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_openinvoicedata_merchant_data_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_openinvoicedata_number_of_lines_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_openinvoicedata_recipient_first_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_openinvoicedata_recipient_last_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_openinvoicedata_line_item_nr_currency_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_openinvoicedata_line_item_nr_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_openinvoicedata_line_item_nr_item_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_openinvoicedata_line_item_nr_item_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_openinvoicedata_line_item_nr_item_vat_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_openinvoicedata_line_item_nr_item_vat_percentage_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_openinvoicedata_line_item_nr_number_of_items_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_openinvoicedata_line_item_nr_return_shipping_company_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_openinvoicedata_line_item_nr_return_tracking_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_openinvoicedata_line_item_nr_return_tracking_uri_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_openinvoicedata_line_item_nr_shipping_company_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_openinvoicedata_line_item_nr_shipping_method_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_openinvoicedata_line_item_nr_tracking_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_openinvoicedata_line_item_nr_tracking_uri_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_opi_include_trans_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ratepay_installment_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ratepay_interest_rate_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ratepay_last_installment_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ratepay_payment_firstday_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ratepaydata_delivery_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ratepaydata_due_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ratepaydata_invoice_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ratepaydata_invoice_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_retry_chain_attempt_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_retry_order_attempt_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_retry_skip_retry_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_riskdata__custom_field_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_riskdata_basket_item_item_nr_amount_per_item_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_riskdata_basket_item_item_nr_brand_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_riskdata_basket_item_item_nr_category_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_riskdata_basket_item_item_nr_color_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_riskdata_basket_item_item_nr_currency_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_riskdata_basket_item_item_nr_item_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_riskdata_basket_item_item_nr_manufacturer_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_riskdata_basket_item_item_nr_product_title_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_riskdata_basket_item_item_nr_quantity_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_riskdata_basket_item_item_nr_receiver_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_riskdata_basket_item_item_nr_size_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_riskdata_basket_item_item_nr_sku_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_riskdata_basket_item_item_nr_upc_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_riskdata_promotions_promotion_item_nr_promotion_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_riskdata_promotions_promotion_item_nr_promotion_discount_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_riskdata_promotions_promotion_item_nr_promotion_discount_currency_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_riskdata_promotions_promotion_item_nr_promotion_discount_percentage_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_riskdata_promotions_promotion_item_nr_promotion_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_riskdata_risk_profile_reference_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_riskdata_skip_risk_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pay_pal_country_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pay_pal_email_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pay_pal_first_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pay_pal_last_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pay_pal_payer_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pay_pal_phone_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pay_pal_protection_eligibility_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pay_pal_transaction_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_avs_result_raw_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_bin_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_cvc_result_raw_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_risk_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_three_d_authenticated_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_three_d_offered_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_token_data_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sub_merchant_number_of_sub_sellers_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sub_merchant_sub_seller_sub_seller_nr_city_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sub_merchant_sub_seller_sub_seller_nr_country_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sub_merchant_sub_seller_sub_seller_nr_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sub_merchant_sub_seller_sub_seller_nr_mcc_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sub_merchant_sub_seller_sub_seller_nr_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sub_merchant_sub_seller_sub_seller_nr_postal_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sub_merchant_sub_seller_sub_seller_nr_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sub_merchant_sub_seller_sub_seller_nr_street_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sub_merchant_sub_seller_sub_seller_nr_tax_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_enhanced_scheme_data_employee_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_enhanced_scheme_data_job_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_enhanced_scheme_data_regular_hours_rate_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_enhanced_scheme_data_regular_hours_worked_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_enhanced_scheme_data_request_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_enhanced_scheme_data_temp_start_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_enhanced_scheme_data_temp_week_ending_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_androidpay_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_masterpass_transaction_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_payment_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_paywithgoogle_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_samsungpay_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_visacheckout_call_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPaymentRequest_additionalData::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_airline_passenger_name_isValid && true;
}

} // namespace OpenAPI
