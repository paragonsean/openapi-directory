/**
 * Adyen Payment API
 * A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.  To learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).  ## Authentication You need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.  If using an API key, add an `X-API-Key` header with the API key as the value, for example:   ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ```  Alternatively, you can use the username and password to connect to the API using basic authentication, for example:  ``` curl -U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\ -H \"Content-Type: application/json\" \\ ... ```  ## Versioning Payments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://pal-test.adyen.com/pal/servlet/Payment/v40/authorise ```  ## Going live  To authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.  The live endpoint URLs contain a prefix which is unique to your company account: ```  https://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payment/v40/authorise ```  Get your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.
 *
 * The version of the OpenAPI document: 40
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Amount from './Amount';

/**
 * The MerchantRiskIndicator model module.
 * @module model/MerchantRiskIndicator
 * @version 40
 */
class MerchantRiskIndicator {
    /**
     * Constructs a new <code>MerchantRiskIndicator</code>.
     * @alias module:model/MerchantRiskIndicator
     */
    constructor() { 
        
        MerchantRiskIndicator.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MerchantRiskIndicator</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MerchantRiskIndicator} obj Optional instance to populate.
     * @return {module:model/MerchantRiskIndicator} The populated <code>MerchantRiskIndicator</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MerchantRiskIndicator();

            if (data.hasOwnProperty('addressMatch')) {
                obj['addressMatch'] = ApiClient.convertToType(data['addressMatch'], 'Boolean');
            }
            if (data.hasOwnProperty('deliveryAddressIndicator')) {
                obj['deliveryAddressIndicator'] = ApiClient.convertToType(data['deliveryAddressIndicator'], 'String');
            }
            if (data.hasOwnProperty('deliveryEmail')) {
                obj['deliveryEmail'] = ApiClient.convertToType(data['deliveryEmail'], 'String');
            }
            if (data.hasOwnProperty('deliveryTimeframe')) {
                obj['deliveryTimeframe'] = ApiClient.convertToType(data['deliveryTimeframe'], 'String');
            }
            if (data.hasOwnProperty('giftCardAmount')) {
                obj['giftCardAmount'] = Amount.constructFromObject(data['giftCardAmount']);
            }
            if (data.hasOwnProperty('giftCardCount')) {
                obj['giftCardCount'] = ApiClient.convertToType(data['giftCardCount'], 'Number');
            }
            if (data.hasOwnProperty('preOrderDate')) {
                obj['preOrderDate'] = ApiClient.convertToType(data['preOrderDate'], 'Date');
            }
            if (data.hasOwnProperty('preOrderPurchase')) {
                obj['preOrderPurchase'] = ApiClient.convertToType(data['preOrderPurchase'], 'Boolean');
            }
            if (data.hasOwnProperty('reorderItems')) {
                obj['reorderItems'] = ApiClient.convertToType(data['reorderItems'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MerchantRiskIndicator</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MerchantRiskIndicator</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['deliveryAddressIndicator'] && !(typeof data['deliveryAddressIndicator'] === 'string' || data['deliveryAddressIndicator'] instanceof String)) {
            throw new Error("Expected the field `deliveryAddressIndicator` to be a primitive type in the JSON string but got " + data['deliveryAddressIndicator']);
        }
        // ensure the json data is a string
        if (data['deliveryEmail'] && !(typeof data['deliveryEmail'] === 'string' || data['deliveryEmail'] instanceof String)) {
            throw new Error("Expected the field `deliveryEmail` to be a primitive type in the JSON string but got " + data['deliveryEmail']);
        }
        // ensure the json data is a string
        if (data['deliveryTimeframe'] && !(typeof data['deliveryTimeframe'] === 'string' || data['deliveryTimeframe'] instanceof String)) {
            throw new Error("Expected the field `deliveryTimeframe` to be a primitive type in the JSON string but got " + data['deliveryTimeframe']);
        }
        // validate the optional field `giftCardAmount`
        if (data['giftCardAmount']) { // data not null
          Amount.validateJSON(data['giftCardAmount']);
        }

        return true;
    }


}



/**
 * Whether the chosen delivery address is identical to the billing address.
 * @member {Boolean} addressMatch
 */
MerchantRiskIndicator.prototype['addressMatch'] = undefined;

/**
 * Indicator regarding the delivery address. Allowed values: * `shipToBillingAddress` * `shipToVerifiedAddress` * `shipToNewAddress` * `shipToStore` * `digitalGoods` * `goodsNotShipped` * `other`
 * @member {module:model/MerchantRiskIndicator.DeliveryAddressIndicatorEnum} deliveryAddressIndicator
 */
MerchantRiskIndicator.prototype['deliveryAddressIndicator'] = undefined;

/**
 * The delivery email address (for digital goods).
 * @member {String} deliveryEmail
 */
MerchantRiskIndicator.prototype['deliveryEmail'] = undefined;

/**
 * The estimated delivery time for the shopper to receive the goods. Allowed values: * `electronicDelivery` * `sameDayShipping` * `overnightShipping` * `twoOrMoreDaysShipping`
 * @member {module:model/MerchantRiskIndicator.DeliveryTimeframeEnum} deliveryTimeframe
 */
MerchantRiskIndicator.prototype['deliveryTimeframe'] = undefined;

/**
 * For prepaid or gift card purchase, the purchase amount total of prepaid or gift card(s).
 * @member {module:model/Amount} giftCardAmount
 */
MerchantRiskIndicator.prototype['giftCardAmount'] = undefined;

/**
 * For prepaid or gift card purchase, total count of individual prepaid or gift cards/codes purchased.
 * @member {Number} giftCardCount
 */
MerchantRiskIndicator.prototype['giftCardCount'] = undefined;

/**
 * For pre-order purchases, the expected date this product will be available to the shopper.
 * @member {Date} preOrderDate
 */
MerchantRiskIndicator.prototype['preOrderDate'] = undefined;

/**
 * Indicator for whether this transaction is for pre-ordering a product.
 * @member {Boolean} preOrderPurchase
 */
MerchantRiskIndicator.prototype['preOrderPurchase'] = undefined;

/**
 * Indicator for whether the shopper has already purchased the same items in the past.
 * @member {Boolean} reorderItems
 */
MerchantRiskIndicator.prototype['reorderItems'] = undefined;





/**
 * Allowed values for the <code>deliveryAddressIndicator</code> property.
 * @enum {String}
 * @readonly
 */
MerchantRiskIndicator['DeliveryAddressIndicatorEnum'] = {

    /**
     * value: "shipToBillingAddress"
     * @const
     */
    "shipToBillingAddress": "shipToBillingAddress",

    /**
     * value: "shipToVerifiedAddress"
     * @const
     */
    "shipToVerifiedAddress": "shipToVerifiedAddress",

    /**
     * value: "shipToNewAddress"
     * @const
     */
    "shipToNewAddress": "shipToNewAddress",

    /**
     * value: "shipToStore"
     * @const
     */
    "shipToStore": "shipToStore",

    /**
     * value: "digitalGoods"
     * @const
     */
    "digitalGoods": "digitalGoods",

    /**
     * value: "goodsNotShipped"
     * @const
     */
    "goodsNotShipped": "goodsNotShipped",

    /**
     * value: "other"
     * @const
     */
    "other": "other"
};


/**
 * Allowed values for the <code>deliveryTimeframe</code> property.
 * @enum {String}
 * @readonly
 */
MerchantRiskIndicator['DeliveryTimeframeEnum'] = {

    /**
     * value: "electronicDelivery"
     * @const
     */
    "electronicDelivery": "electronicDelivery",

    /**
     * value: "sameDayShipping"
     * @const
     */
    "sameDayShipping": "sameDayShipping",

    /**
     * value: "overnightShipping"
     * @const
     */
    "overnightShipping": "overnightShipping",

    /**
     * value: "twoOrMoreDaysShipping"
     * @const
     */
    "twoOrMoreDaysShipping": "twoOrMoreDaysShipping"
};



export default MerchantRiskIndicator;

