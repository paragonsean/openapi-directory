/**
 * Adyen Payment API
 * A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.  To learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).  ## Authentication You need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.  If using an API key, add an `X-API-Key` header with the API key as the value, for example:   ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ```  Alternatively, you can use the username and password to connect to the API using basic authentication, for example:  ``` curl -U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\ -H \"Content-Type: application/json\" \\ ... ```  ## Versioning Payments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://pal-test.adyen.com/pal/servlet/Payment/v46/authorise ```  ## Going live  To authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.  The live endpoint URLs contain a prefix which is unique to your company account: ```  https://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payment/v46/authorise ```  Get your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.
 *
 * The version of the OpenAPI document: 46
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AdditionalDataRisk model module.
 * @module model/AdditionalDataRisk
 * @version 46
 */
class AdditionalDataRisk {
    /**
     * Constructs a new <code>AdditionalDataRisk</code>.
     * @alias module:model/AdditionalDataRisk
     */
    constructor() { 
        
        AdditionalDataRisk.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AdditionalDataRisk</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AdditionalDataRisk} obj Optional instance to populate.
     * @return {module:model/AdditionalDataRisk} The populated <code>AdditionalDataRisk</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AdditionalDataRisk();

            if (data.hasOwnProperty('riskdata.[customFieldName]')) {
                obj['riskdata.[customFieldName]'] = ApiClient.convertToType(data['riskdata.[customFieldName]'], 'String');
            }
            if (data.hasOwnProperty('riskdata.basket.item[itemNr].amountPerItem')) {
                obj['riskdata.basket.item[itemNr].amountPerItem'] = ApiClient.convertToType(data['riskdata.basket.item[itemNr].amountPerItem'], 'String');
            }
            if (data.hasOwnProperty('riskdata.basket.item[itemNr].brand')) {
                obj['riskdata.basket.item[itemNr].brand'] = ApiClient.convertToType(data['riskdata.basket.item[itemNr].brand'], 'String');
            }
            if (data.hasOwnProperty('riskdata.basket.item[itemNr].category')) {
                obj['riskdata.basket.item[itemNr].category'] = ApiClient.convertToType(data['riskdata.basket.item[itemNr].category'], 'String');
            }
            if (data.hasOwnProperty('riskdata.basket.item[itemNr].color')) {
                obj['riskdata.basket.item[itemNr].color'] = ApiClient.convertToType(data['riskdata.basket.item[itemNr].color'], 'String');
            }
            if (data.hasOwnProperty('riskdata.basket.item[itemNr].currency')) {
                obj['riskdata.basket.item[itemNr].currency'] = ApiClient.convertToType(data['riskdata.basket.item[itemNr].currency'], 'String');
            }
            if (data.hasOwnProperty('riskdata.basket.item[itemNr].itemID')) {
                obj['riskdata.basket.item[itemNr].itemID'] = ApiClient.convertToType(data['riskdata.basket.item[itemNr].itemID'], 'String');
            }
            if (data.hasOwnProperty('riskdata.basket.item[itemNr].manufacturer')) {
                obj['riskdata.basket.item[itemNr].manufacturer'] = ApiClient.convertToType(data['riskdata.basket.item[itemNr].manufacturer'], 'String');
            }
            if (data.hasOwnProperty('riskdata.basket.item[itemNr].productTitle')) {
                obj['riskdata.basket.item[itemNr].productTitle'] = ApiClient.convertToType(data['riskdata.basket.item[itemNr].productTitle'], 'String');
            }
            if (data.hasOwnProperty('riskdata.basket.item[itemNr].quantity')) {
                obj['riskdata.basket.item[itemNr].quantity'] = ApiClient.convertToType(data['riskdata.basket.item[itemNr].quantity'], 'String');
            }
            if (data.hasOwnProperty('riskdata.basket.item[itemNr].receiverEmail')) {
                obj['riskdata.basket.item[itemNr].receiverEmail'] = ApiClient.convertToType(data['riskdata.basket.item[itemNr].receiverEmail'], 'String');
            }
            if (data.hasOwnProperty('riskdata.basket.item[itemNr].size')) {
                obj['riskdata.basket.item[itemNr].size'] = ApiClient.convertToType(data['riskdata.basket.item[itemNr].size'], 'String');
            }
            if (data.hasOwnProperty('riskdata.basket.item[itemNr].sku')) {
                obj['riskdata.basket.item[itemNr].sku'] = ApiClient.convertToType(data['riskdata.basket.item[itemNr].sku'], 'String');
            }
            if (data.hasOwnProperty('riskdata.basket.item[itemNr].upc')) {
                obj['riskdata.basket.item[itemNr].upc'] = ApiClient.convertToType(data['riskdata.basket.item[itemNr].upc'], 'String');
            }
            if (data.hasOwnProperty('riskdata.promotions.promotion[itemNr].promotionCode')) {
                obj['riskdata.promotions.promotion[itemNr].promotionCode'] = ApiClient.convertToType(data['riskdata.promotions.promotion[itemNr].promotionCode'], 'String');
            }
            if (data.hasOwnProperty('riskdata.promotions.promotion[itemNr].promotionDiscountAmount')) {
                obj['riskdata.promotions.promotion[itemNr].promotionDiscountAmount'] = ApiClient.convertToType(data['riskdata.promotions.promotion[itemNr].promotionDiscountAmount'], 'String');
            }
            if (data.hasOwnProperty('riskdata.promotions.promotion[itemNr].promotionDiscountCurrency')) {
                obj['riskdata.promotions.promotion[itemNr].promotionDiscountCurrency'] = ApiClient.convertToType(data['riskdata.promotions.promotion[itemNr].promotionDiscountCurrency'], 'String');
            }
            if (data.hasOwnProperty('riskdata.promotions.promotion[itemNr].promotionDiscountPercentage')) {
                obj['riskdata.promotions.promotion[itemNr].promotionDiscountPercentage'] = ApiClient.convertToType(data['riskdata.promotions.promotion[itemNr].promotionDiscountPercentage'], 'String');
            }
            if (data.hasOwnProperty('riskdata.promotions.promotion[itemNr].promotionName')) {
                obj['riskdata.promotions.promotion[itemNr].promotionName'] = ApiClient.convertToType(data['riskdata.promotions.promotion[itemNr].promotionName'], 'String');
            }
            if (data.hasOwnProperty('riskdata.riskProfileReference')) {
                obj['riskdata.riskProfileReference'] = ApiClient.convertToType(data['riskdata.riskProfileReference'], 'String');
            }
            if (data.hasOwnProperty('riskdata.skipRisk')) {
                obj['riskdata.skipRisk'] = ApiClient.convertToType(data['riskdata.skipRisk'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AdditionalDataRisk</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AdditionalDataRisk</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['riskdata.[customFieldName]'] && !(typeof data['riskdata.[customFieldName]'] === 'string' || data['riskdata.[customFieldName]'] instanceof String)) {
            throw new Error("Expected the field `riskdata.[customFieldName]` to be a primitive type in the JSON string but got " + data['riskdata.[customFieldName]']);
        }
        // ensure the json data is a string
        if (data['riskdata.basket.item[itemNr].amountPerItem'] && !(typeof data['riskdata.basket.item[itemNr].amountPerItem'] === 'string' || data['riskdata.basket.item[itemNr].amountPerItem'] instanceof String)) {
            throw new Error("Expected the field `riskdata.basket.item[itemNr].amountPerItem` to be a primitive type in the JSON string but got " + data['riskdata.basket.item[itemNr].amountPerItem']);
        }
        // ensure the json data is a string
        if (data['riskdata.basket.item[itemNr].brand'] && !(typeof data['riskdata.basket.item[itemNr].brand'] === 'string' || data['riskdata.basket.item[itemNr].brand'] instanceof String)) {
            throw new Error("Expected the field `riskdata.basket.item[itemNr].brand` to be a primitive type in the JSON string but got " + data['riskdata.basket.item[itemNr].brand']);
        }
        // ensure the json data is a string
        if (data['riskdata.basket.item[itemNr].category'] && !(typeof data['riskdata.basket.item[itemNr].category'] === 'string' || data['riskdata.basket.item[itemNr].category'] instanceof String)) {
            throw new Error("Expected the field `riskdata.basket.item[itemNr].category` to be a primitive type in the JSON string but got " + data['riskdata.basket.item[itemNr].category']);
        }
        // ensure the json data is a string
        if (data['riskdata.basket.item[itemNr].color'] && !(typeof data['riskdata.basket.item[itemNr].color'] === 'string' || data['riskdata.basket.item[itemNr].color'] instanceof String)) {
            throw new Error("Expected the field `riskdata.basket.item[itemNr].color` to be a primitive type in the JSON string but got " + data['riskdata.basket.item[itemNr].color']);
        }
        // ensure the json data is a string
        if (data['riskdata.basket.item[itemNr].currency'] && !(typeof data['riskdata.basket.item[itemNr].currency'] === 'string' || data['riskdata.basket.item[itemNr].currency'] instanceof String)) {
            throw new Error("Expected the field `riskdata.basket.item[itemNr].currency` to be a primitive type in the JSON string but got " + data['riskdata.basket.item[itemNr].currency']);
        }
        // ensure the json data is a string
        if (data['riskdata.basket.item[itemNr].itemID'] && !(typeof data['riskdata.basket.item[itemNr].itemID'] === 'string' || data['riskdata.basket.item[itemNr].itemID'] instanceof String)) {
            throw new Error("Expected the field `riskdata.basket.item[itemNr].itemID` to be a primitive type in the JSON string but got " + data['riskdata.basket.item[itemNr].itemID']);
        }
        // ensure the json data is a string
        if (data['riskdata.basket.item[itemNr].manufacturer'] && !(typeof data['riskdata.basket.item[itemNr].manufacturer'] === 'string' || data['riskdata.basket.item[itemNr].manufacturer'] instanceof String)) {
            throw new Error("Expected the field `riskdata.basket.item[itemNr].manufacturer` to be a primitive type in the JSON string but got " + data['riskdata.basket.item[itemNr].manufacturer']);
        }
        // ensure the json data is a string
        if (data['riskdata.basket.item[itemNr].productTitle'] && !(typeof data['riskdata.basket.item[itemNr].productTitle'] === 'string' || data['riskdata.basket.item[itemNr].productTitle'] instanceof String)) {
            throw new Error("Expected the field `riskdata.basket.item[itemNr].productTitle` to be a primitive type in the JSON string but got " + data['riskdata.basket.item[itemNr].productTitle']);
        }
        // ensure the json data is a string
        if (data['riskdata.basket.item[itemNr].quantity'] && !(typeof data['riskdata.basket.item[itemNr].quantity'] === 'string' || data['riskdata.basket.item[itemNr].quantity'] instanceof String)) {
            throw new Error("Expected the field `riskdata.basket.item[itemNr].quantity` to be a primitive type in the JSON string but got " + data['riskdata.basket.item[itemNr].quantity']);
        }
        // ensure the json data is a string
        if (data['riskdata.basket.item[itemNr].receiverEmail'] && !(typeof data['riskdata.basket.item[itemNr].receiverEmail'] === 'string' || data['riskdata.basket.item[itemNr].receiverEmail'] instanceof String)) {
            throw new Error("Expected the field `riskdata.basket.item[itemNr].receiverEmail` to be a primitive type in the JSON string but got " + data['riskdata.basket.item[itemNr].receiverEmail']);
        }
        // ensure the json data is a string
        if (data['riskdata.basket.item[itemNr].size'] && !(typeof data['riskdata.basket.item[itemNr].size'] === 'string' || data['riskdata.basket.item[itemNr].size'] instanceof String)) {
            throw new Error("Expected the field `riskdata.basket.item[itemNr].size` to be a primitive type in the JSON string but got " + data['riskdata.basket.item[itemNr].size']);
        }
        // ensure the json data is a string
        if (data['riskdata.basket.item[itemNr].sku'] && !(typeof data['riskdata.basket.item[itemNr].sku'] === 'string' || data['riskdata.basket.item[itemNr].sku'] instanceof String)) {
            throw new Error("Expected the field `riskdata.basket.item[itemNr].sku` to be a primitive type in the JSON string but got " + data['riskdata.basket.item[itemNr].sku']);
        }
        // ensure the json data is a string
        if (data['riskdata.basket.item[itemNr].upc'] && !(typeof data['riskdata.basket.item[itemNr].upc'] === 'string' || data['riskdata.basket.item[itemNr].upc'] instanceof String)) {
            throw new Error("Expected the field `riskdata.basket.item[itemNr].upc` to be a primitive type in the JSON string but got " + data['riskdata.basket.item[itemNr].upc']);
        }
        // ensure the json data is a string
        if (data['riskdata.promotions.promotion[itemNr].promotionCode'] && !(typeof data['riskdata.promotions.promotion[itemNr].promotionCode'] === 'string' || data['riskdata.promotions.promotion[itemNr].promotionCode'] instanceof String)) {
            throw new Error("Expected the field `riskdata.promotions.promotion[itemNr].promotionCode` to be a primitive type in the JSON string but got " + data['riskdata.promotions.promotion[itemNr].promotionCode']);
        }
        // ensure the json data is a string
        if (data['riskdata.promotions.promotion[itemNr].promotionDiscountAmount'] && !(typeof data['riskdata.promotions.promotion[itemNr].promotionDiscountAmount'] === 'string' || data['riskdata.promotions.promotion[itemNr].promotionDiscountAmount'] instanceof String)) {
            throw new Error("Expected the field `riskdata.promotions.promotion[itemNr].promotionDiscountAmount` to be a primitive type in the JSON string but got " + data['riskdata.promotions.promotion[itemNr].promotionDiscountAmount']);
        }
        // ensure the json data is a string
        if (data['riskdata.promotions.promotion[itemNr].promotionDiscountCurrency'] && !(typeof data['riskdata.promotions.promotion[itemNr].promotionDiscountCurrency'] === 'string' || data['riskdata.promotions.promotion[itemNr].promotionDiscountCurrency'] instanceof String)) {
            throw new Error("Expected the field `riskdata.promotions.promotion[itemNr].promotionDiscountCurrency` to be a primitive type in the JSON string but got " + data['riskdata.promotions.promotion[itemNr].promotionDiscountCurrency']);
        }
        // ensure the json data is a string
        if (data['riskdata.promotions.promotion[itemNr].promotionDiscountPercentage'] && !(typeof data['riskdata.promotions.promotion[itemNr].promotionDiscountPercentage'] === 'string' || data['riskdata.promotions.promotion[itemNr].promotionDiscountPercentage'] instanceof String)) {
            throw new Error("Expected the field `riskdata.promotions.promotion[itemNr].promotionDiscountPercentage` to be a primitive type in the JSON string but got " + data['riskdata.promotions.promotion[itemNr].promotionDiscountPercentage']);
        }
        // ensure the json data is a string
        if (data['riskdata.promotions.promotion[itemNr].promotionName'] && !(typeof data['riskdata.promotions.promotion[itemNr].promotionName'] === 'string' || data['riskdata.promotions.promotion[itemNr].promotionName'] instanceof String)) {
            throw new Error("Expected the field `riskdata.promotions.promotion[itemNr].promotionName` to be a primitive type in the JSON string but got " + data['riskdata.promotions.promotion[itemNr].promotionName']);
        }
        // ensure the json data is a string
        if (data['riskdata.riskProfileReference'] && !(typeof data['riskdata.riskProfileReference'] === 'string' || data['riskdata.riskProfileReference'] instanceof String)) {
            throw new Error("Expected the field `riskdata.riskProfileReference` to be a primitive type in the JSON string but got " + data['riskdata.riskProfileReference']);
        }
        // ensure the json data is a string
        if (data['riskdata.skipRisk'] && !(typeof data['riskdata.skipRisk'] === 'string' || data['riskdata.skipRisk'] instanceof String)) {
            throw new Error("Expected the field `riskdata.skipRisk` to be a primitive type in the JSON string but got " + data['riskdata.skipRisk']);
        }

        return true;
    }


}



/**
 * The data for your custom risk field. For more information, refer to [Create custom risk fields](https://docs.adyen.com/risk-management/configure-custom-risk-rules#step-1-create-custom-risk-fields).
 * @member {String} riskdata.[customFieldName]
 */
AdditionalDataRisk.prototype['riskdata.[customFieldName]'] = undefined;

/**
 * The price of item in the basket, represented in [minor units](https://docs.adyen.com/development-resources/currency-codes).
 * @member {String} riskdata.basket.item[itemNr].amountPerItem
 */
AdditionalDataRisk.prototype['riskdata.basket.item[itemNr].amountPerItem'] = undefined;

/**
 * Brand of the item.
 * @member {String} riskdata.basket.item[itemNr].brand
 */
AdditionalDataRisk.prototype['riskdata.basket.item[itemNr].brand'] = undefined;

/**
 * Category of the item.
 * @member {String} riskdata.basket.item[itemNr].category
 */
AdditionalDataRisk.prototype['riskdata.basket.item[itemNr].category'] = undefined;

/**
 * Color of the item.
 * @member {String} riskdata.basket.item[itemNr].color
 */
AdditionalDataRisk.prototype['riskdata.basket.item[itemNr].color'] = undefined;

/**
 * The three-character [ISO currency code](https://en.wikipedia.org/wiki/ISO_4217).
 * @member {String} riskdata.basket.item[itemNr].currency
 */
AdditionalDataRisk.prototype['riskdata.basket.item[itemNr].currency'] = undefined;

/**
 * ID of the item.
 * @member {String} riskdata.basket.item[itemNr].itemID
 */
AdditionalDataRisk.prototype['riskdata.basket.item[itemNr].itemID'] = undefined;

/**
 * Manufacturer of the item.
 * @member {String} riskdata.basket.item[itemNr].manufacturer
 */
AdditionalDataRisk.prototype['riskdata.basket.item[itemNr].manufacturer'] = undefined;

/**
 * A text description of the product the invoice line refers to.
 * @member {String} riskdata.basket.item[itemNr].productTitle
 */
AdditionalDataRisk.prototype['riskdata.basket.item[itemNr].productTitle'] = undefined;

/**
 * Quantity of the item purchased.
 * @member {String} riskdata.basket.item[itemNr].quantity
 */
AdditionalDataRisk.prototype['riskdata.basket.item[itemNr].quantity'] = undefined;

/**
 * Email associated with the given product in the basket (usually in electronic gift cards).
 * @member {String} riskdata.basket.item[itemNr].receiverEmail
 */
AdditionalDataRisk.prototype['riskdata.basket.item[itemNr].receiverEmail'] = undefined;

/**
 * Size of the item.
 * @member {String} riskdata.basket.item[itemNr].size
 */
AdditionalDataRisk.prototype['riskdata.basket.item[itemNr].size'] = undefined;

/**
 * [Stock keeping unit](https://en.wikipedia.org/wiki/Stock_keeping_unit).
 * @member {String} riskdata.basket.item[itemNr].sku
 */
AdditionalDataRisk.prototype['riskdata.basket.item[itemNr].sku'] = undefined;

/**
 * [Universal Product Code](https://en.wikipedia.org/wiki/Universal_Product_Code).
 * @member {String} riskdata.basket.item[itemNr].upc
 */
AdditionalDataRisk.prototype['riskdata.basket.item[itemNr].upc'] = undefined;

/**
 * Code of the promotion.
 * @member {String} riskdata.promotions.promotion[itemNr].promotionCode
 */
AdditionalDataRisk.prototype['riskdata.promotions.promotion[itemNr].promotionCode'] = undefined;

/**
 * The discount amount of the promotion, represented in [minor units](https://docs.adyen.com/development-resources/currency-codes).
 * @member {String} riskdata.promotions.promotion[itemNr].promotionDiscountAmount
 */
AdditionalDataRisk.prototype['riskdata.promotions.promotion[itemNr].promotionDiscountAmount'] = undefined;

/**
 * The three-character [ISO currency code](https://en.wikipedia.org/wiki/ISO_4217).
 * @member {String} riskdata.promotions.promotion[itemNr].promotionDiscountCurrency
 */
AdditionalDataRisk.prototype['riskdata.promotions.promotion[itemNr].promotionDiscountCurrency'] = undefined;

/**
 * Promotion's percentage discount. It is represented in percentage value and there is no need to include the '%' sign.  e.g. for a promotion discount of 30%, the value of the field should be 30.
 * @member {String} riskdata.promotions.promotion[itemNr].promotionDiscountPercentage
 */
AdditionalDataRisk.prototype['riskdata.promotions.promotion[itemNr].promotionDiscountPercentage'] = undefined;

/**
 * Name of the promotion.
 * @member {String} riskdata.promotions.promotion[itemNr].promotionName
 */
AdditionalDataRisk.prototype['riskdata.promotions.promotion[itemNr].promotionName'] = undefined;

/**
 * Reference number of the risk profile that you want to apply to the payment. If not provided or left blank, the merchant-level account's default risk profile will be applied to the payment. For more information, see [dynamically assign a risk profile to a payment](https://docs.adyen.com/risk-management/create-and-use-risk-profiles#dynamically-assign-a-risk-profile-to-a-payment).
 * @member {String} riskdata.riskProfileReference
 */
AdditionalDataRisk.prototype['riskdata.riskProfileReference'] = undefined;

/**
 * If this parameter is provided with the value **true**, risk checks for the payment request are skipped and the transaction will not get a risk score.
 * @member {String} riskdata.skipRisk
 */
AdditionalDataRisk.prototype['riskdata.skipRisk'] = undefined;






export default AdditionalDataRisk;

