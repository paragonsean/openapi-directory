/**
 * Adyen Payment API
 * A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.  To learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).  ## Authentication You need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.  If using an API key, add an `X-API-Key` header with the API key as the value, for example:   ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ```  Alternatively, you can use the username and password to connect to the API using basic authentication, for example:  ``` curl -U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\ -H \"Content-Type: application/json\" \\ ... ```  ## Versioning Payments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://pal-test.adyen.com/pal/servlet/Payment/v46/authorise ```  ## Going live  To authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.  The live endpoint URLs contain a prefix which is unique to your company account: ```  https://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payment/v46/authorise ```  Get your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.
 *
 * The version of the OpenAPI document: 46
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AdjustAuthorisationRequestAdditionalData from './AdjustAuthorisationRequestAdditionalData';
import Split from './Split';
import ThreeDSecureData from './ThreeDSecureData';

/**
 * The CancelRequest model module.
 * @module model/CancelRequest
 * @version 46
 */
class CancelRequest {
    /**
     * Constructs a new <code>CancelRequest</code>.
     * @alias module:model/CancelRequest
     * @param merchantAccount {String} The merchant account that is used to process the payment.
     * @param originalReference {String} The original pspReference of the payment to modify. This reference is returned in: * authorisation response * authorisation notification  
     */
    constructor(merchantAccount, originalReference) { 
        
        CancelRequest.initialize(this, merchantAccount, originalReference);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, merchantAccount, originalReference) { 
        obj['merchantAccount'] = merchantAccount;
        obj['originalReference'] = originalReference;
    }

    /**
     * Constructs a <code>CancelRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CancelRequest} obj Optional instance to populate.
     * @return {module:model/CancelRequest} The populated <code>CancelRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CancelRequest();

            if (data.hasOwnProperty('additionalData')) {
                obj['additionalData'] = AdjustAuthorisationRequestAdditionalData.constructFromObject(data['additionalData']);
            }
            if (data.hasOwnProperty('merchantAccount')) {
                obj['merchantAccount'] = ApiClient.convertToType(data['merchantAccount'], 'String');
            }
            if (data.hasOwnProperty('mpiData')) {
                obj['mpiData'] = ThreeDSecureData.constructFromObject(data['mpiData']);
            }
            if (data.hasOwnProperty('originalMerchantReference')) {
                obj['originalMerchantReference'] = ApiClient.convertToType(data['originalMerchantReference'], 'String');
            }
            if (data.hasOwnProperty('originalReference')) {
                obj['originalReference'] = ApiClient.convertToType(data['originalReference'], 'String');
            }
            if (data.hasOwnProperty('reference')) {
                obj['reference'] = ApiClient.convertToType(data['reference'], 'String');
            }
            if (data.hasOwnProperty('splits')) {
                obj['splits'] = ApiClient.convertToType(data['splits'], [Split]);
            }
            if (data.hasOwnProperty('tenderReference')) {
                obj['tenderReference'] = ApiClient.convertToType(data['tenderReference'], 'String');
            }
            if (data.hasOwnProperty('uniqueTerminalId')) {
                obj['uniqueTerminalId'] = ApiClient.convertToType(data['uniqueTerminalId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CancelRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CancelRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CancelRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `additionalData`
        if (data['additionalData']) { // data not null
          AdjustAuthorisationRequestAdditionalData.validateJSON(data['additionalData']);
        }
        // ensure the json data is a string
        if (data['merchantAccount'] && !(typeof data['merchantAccount'] === 'string' || data['merchantAccount'] instanceof String)) {
            throw new Error("Expected the field `merchantAccount` to be a primitive type in the JSON string but got " + data['merchantAccount']);
        }
        // validate the optional field `mpiData`
        if (data['mpiData']) { // data not null
          ThreeDSecureData.validateJSON(data['mpiData']);
        }
        // ensure the json data is a string
        if (data['originalMerchantReference'] && !(typeof data['originalMerchantReference'] === 'string' || data['originalMerchantReference'] instanceof String)) {
            throw new Error("Expected the field `originalMerchantReference` to be a primitive type in the JSON string but got " + data['originalMerchantReference']);
        }
        // ensure the json data is a string
        if (data['originalReference'] && !(typeof data['originalReference'] === 'string' || data['originalReference'] instanceof String)) {
            throw new Error("Expected the field `originalReference` to be a primitive type in the JSON string but got " + data['originalReference']);
        }
        // ensure the json data is a string
        if (data['reference'] && !(typeof data['reference'] === 'string' || data['reference'] instanceof String)) {
            throw new Error("Expected the field `reference` to be a primitive type in the JSON string but got " + data['reference']);
        }
        if (data['splits']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['splits'])) {
                throw new Error("Expected the field `splits` to be an array in the JSON data but got " + data['splits']);
            }
            // validate the optional field `splits` (array)
            for (const item of data['splits']) {
                Split.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['tenderReference'] && !(typeof data['tenderReference'] === 'string' || data['tenderReference'] instanceof String)) {
            throw new Error("Expected the field `tenderReference` to be a primitive type in the JSON string but got " + data['tenderReference']);
        }
        // ensure the json data is a string
        if (data['uniqueTerminalId'] && !(typeof data['uniqueTerminalId'] === 'string' || data['uniqueTerminalId'] instanceof String)) {
            throw new Error("Expected the field `uniqueTerminalId` to be a primitive type in the JSON string but got " + data['uniqueTerminalId']);
        }

        return true;
    }


}

CancelRequest.RequiredProperties = ["merchantAccount", "originalReference"];

/**
 * @member {module:model/AdjustAuthorisationRequestAdditionalData} additionalData
 */
CancelRequest.prototype['additionalData'] = undefined;

/**
 * The merchant account that is used to process the payment.
 * @member {String} merchantAccount
 */
CancelRequest.prototype['merchantAccount'] = undefined;

/**
 * Authentication data produced by an MPI (Mastercard SecureCode, Visa Secure, or Cartes Bancaires).
 * @member {module:model/ThreeDSecureData} mpiData
 */
CancelRequest.prototype['mpiData'] = undefined;

/**
 * The original merchant reference to cancel.
 * @member {String} originalMerchantReference
 */
CancelRequest.prototype['originalMerchantReference'] = undefined;

/**
 * The original pspReference of the payment to modify. This reference is returned in: * authorisation response * authorisation notification  
 * @member {String} originalReference
 */
CancelRequest.prototype['originalReference'] = undefined;

/**
 * Your reference for the payment modification. This reference is visible in Customer Area and in reports. Maximum length: 80 characters.
 * @member {String} reference
 */
CancelRequest.prototype['reference'] = undefined;

/**
 * An array of objects specifying how the amount should be split between accounts when using Adyen for Platforms. For details, refer to [Providing split information](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information).
 * @member {Array.<module:model/Split>} splits
 */
CancelRequest.prototype['splits'] = undefined;

/**
 * The transaction reference provided by the PED. For point-of-sale integrations only.
 * @member {String} tenderReference
 */
CancelRequest.prototype['tenderReference'] = undefined;

/**
 * Unique terminal ID for the PED that originally processed the request. For point-of-sale integrations only.
 * @member {String} uniqueTerminalId
 */
CancelRequest.prototype['uniqueTerminalId'] = undefined;






export default CancelRequest;

