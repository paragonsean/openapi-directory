/**
 * Adyen Payment API
 * A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.  To learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).  ## Authentication You need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.  If using an API key, add an `X-API-Key` header with the API key as the value, for example:   ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ```  Alternatively, you can use the username and password to connect to the API using basic authentication, for example:  ``` curl -U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\ -H \"Content-Type: application/json\" \\ ... ```  ## Versioning Payments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://pal-test.adyen.com/pal/servlet/Payment/v46/authorise ```  ## Going live  To authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.  The live endpoint URLs contain a prefix which is unique to your company account: ```  https://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payment/v46/authorise ```  Get your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.
 *
 * The version of the OpenAPI document: 46
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAdditionalDataTemporaryServices.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAdditionalDataTemporaryServices::OAIAdditionalDataTemporaryServices(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAdditionalDataTemporaryServices::OAIAdditionalDataTemporaryServices() {
    this->initializeModel();
}

OAIAdditionalDataTemporaryServices::~OAIAdditionalDataTemporaryServices() {}

void OAIAdditionalDataTemporaryServices::initializeModel() {

    m_enhanced_scheme_data_customer_reference_isSet = false;
    m_enhanced_scheme_data_customer_reference_isValid = false;

    m_enhanced_scheme_data_employee_name_isSet = false;
    m_enhanced_scheme_data_employee_name_isValid = false;

    m_enhanced_scheme_data_job_description_isSet = false;
    m_enhanced_scheme_data_job_description_isValid = false;

    m_enhanced_scheme_data_regular_hours_rate_isSet = false;
    m_enhanced_scheme_data_regular_hours_rate_isValid = false;

    m_enhanced_scheme_data_regular_hours_worked_isSet = false;
    m_enhanced_scheme_data_regular_hours_worked_isValid = false;

    m_enhanced_scheme_data_request_name_isSet = false;
    m_enhanced_scheme_data_request_name_isValid = false;

    m_enhanced_scheme_data_temp_start_date_isSet = false;
    m_enhanced_scheme_data_temp_start_date_isValid = false;

    m_enhanced_scheme_data_temp_week_ending_isSet = false;
    m_enhanced_scheme_data_temp_week_ending_isValid = false;

    m_enhanced_scheme_data_total_tax_amount_isSet = false;
    m_enhanced_scheme_data_total_tax_amount_isValid = false;
}

void OAIAdditionalDataTemporaryServices::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAdditionalDataTemporaryServices::fromJsonObject(QJsonObject json) {

    m_enhanced_scheme_data_customer_reference_isValid = ::OpenAPI::fromJsonValue(m_enhanced_scheme_data_customer_reference, json[QString("enhancedSchemeData.customerReference")]);
    m_enhanced_scheme_data_customer_reference_isSet = !json[QString("enhancedSchemeData.customerReference")].isNull() && m_enhanced_scheme_data_customer_reference_isValid;

    m_enhanced_scheme_data_employee_name_isValid = ::OpenAPI::fromJsonValue(m_enhanced_scheme_data_employee_name, json[QString("enhancedSchemeData.employeeName")]);
    m_enhanced_scheme_data_employee_name_isSet = !json[QString("enhancedSchemeData.employeeName")].isNull() && m_enhanced_scheme_data_employee_name_isValid;

    m_enhanced_scheme_data_job_description_isValid = ::OpenAPI::fromJsonValue(m_enhanced_scheme_data_job_description, json[QString("enhancedSchemeData.jobDescription")]);
    m_enhanced_scheme_data_job_description_isSet = !json[QString("enhancedSchemeData.jobDescription")].isNull() && m_enhanced_scheme_data_job_description_isValid;

    m_enhanced_scheme_data_regular_hours_rate_isValid = ::OpenAPI::fromJsonValue(m_enhanced_scheme_data_regular_hours_rate, json[QString("enhancedSchemeData.regularHoursRate")]);
    m_enhanced_scheme_data_regular_hours_rate_isSet = !json[QString("enhancedSchemeData.regularHoursRate")].isNull() && m_enhanced_scheme_data_regular_hours_rate_isValid;

    m_enhanced_scheme_data_regular_hours_worked_isValid = ::OpenAPI::fromJsonValue(m_enhanced_scheme_data_regular_hours_worked, json[QString("enhancedSchemeData.regularHoursWorked")]);
    m_enhanced_scheme_data_regular_hours_worked_isSet = !json[QString("enhancedSchemeData.regularHoursWorked")].isNull() && m_enhanced_scheme_data_regular_hours_worked_isValid;

    m_enhanced_scheme_data_request_name_isValid = ::OpenAPI::fromJsonValue(m_enhanced_scheme_data_request_name, json[QString("enhancedSchemeData.requestName")]);
    m_enhanced_scheme_data_request_name_isSet = !json[QString("enhancedSchemeData.requestName")].isNull() && m_enhanced_scheme_data_request_name_isValid;

    m_enhanced_scheme_data_temp_start_date_isValid = ::OpenAPI::fromJsonValue(m_enhanced_scheme_data_temp_start_date, json[QString("enhancedSchemeData.tempStartDate")]);
    m_enhanced_scheme_data_temp_start_date_isSet = !json[QString("enhancedSchemeData.tempStartDate")].isNull() && m_enhanced_scheme_data_temp_start_date_isValid;

    m_enhanced_scheme_data_temp_week_ending_isValid = ::OpenAPI::fromJsonValue(m_enhanced_scheme_data_temp_week_ending, json[QString("enhancedSchemeData.tempWeekEnding")]);
    m_enhanced_scheme_data_temp_week_ending_isSet = !json[QString("enhancedSchemeData.tempWeekEnding")].isNull() && m_enhanced_scheme_data_temp_week_ending_isValid;

    m_enhanced_scheme_data_total_tax_amount_isValid = ::OpenAPI::fromJsonValue(m_enhanced_scheme_data_total_tax_amount, json[QString("enhancedSchemeData.totalTaxAmount")]);
    m_enhanced_scheme_data_total_tax_amount_isSet = !json[QString("enhancedSchemeData.totalTaxAmount")].isNull() && m_enhanced_scheme_data_total_tax_amount_isValid;
}

QString OAIAdditionalDataTemporaryServices::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAdditionalDataTemporaryServices::asJsonObject() const {
    QJsonObject obj;
    if (m_enhanced_scheme_data_customer_reference_isSet) {
        obj.insert(QString("enhancedSchemeData.customerReference"), ::OpenAPI::toJsonValue(m_enhanced_scheme_data_customer_reference));
    }
    if (m_enhanced_scheme_data_employee_name_isSet) {
        obj.insert(QString("enhancedSchemeData.employeeName"), ::OpenAPI::toJsonValue(m_enhanced_scheme_data_employee_name));
    }
    if (m_enhanced_scheme_data_job_description_isSet) {
        obj.insert(QString("enhancedSchemeData.jobDescription"), ::OpenAPI::toJsonValue(m_enhanced_scheme_data_job_description));
    }
    if (m_enhanced_scheme_data_regular_hours_rate_isSet) {
        obj.insert(QString("enhancedSchemeData.regularHoursRate"), ::OpenAPI::toJsonValue(m_enhanced_scheme_data_regular_hours_rate));
    }
    if (m_enhanced_scheme_data_regular_hours_worked_isSet) {
        obj.insert(QString("enhancedSchemeData.regularHoursWorked"), ::OpenAPI::toJsonValue(m_enhanced_scheme_data_regular_hours_worked));
    }
    if (m_enhanced_scheme_data_request_name_isSet) {
        obj.insert(QString("enhancedSchemeData.requestName"), ::OpenAPI::toJsonValue(m_enhanced_scheme_data_request_name));
    }
    if (m_enhanced_scheme_data_temp_start_date_isSet) {
        obj.insert(QString("enhancedSchemeData.tempStartDate"), ::OpenAPI::toJsonValue(m_enhanced_scheme_data_temp_start_date));
    }
    if (m_enhanced_scheme_data_temp_week_ending_isSet) {
        obj.insert(QString("enhancedSchemeData.tempWeekEnding"), ::OpenAPI::toJsonValue(m_enhanced_scheme_data_temp_week_ending));
    }
    if (m_enhanced_scheme_data_total_tax_amount_isSet) {
        obj.insert(QString("enhancedSchemeData.totalTaxAmount"), ::OpenAPI::toJsonValue(m_enhanced_scheme_data_total_tax_amount));
    }
    return obj;
}

QString OAIAdditionalDataTemporaryServices::getEnhancedSchemeDataCustomerReference() const {
    return m_enhanced_scheme_data_customer_reference;
}
void OAIAdditionalDataTemporaryServices::setEnhancedSchemeDataCustomerReference(const QString &enhanced_scheme_data_customer_reference) {
    m_enhanced_scheme_data_customer_reference = enhanced_scheme_data_customer_reference;
    m_enhanced_scheme_data_customer_reference_isSet = true;
}

bool OAIAdditionalDataTemporaryServices::is_enhanced_scheme_data_customer_reference_Set() const{
    return m_enhanced_scheme_data_customer_reference_isSet;
}

bool OAIAdditionalDataTemporaryServices::is_enhanced_scheme_data_customer_reference_Valid() const{
    return m_enhanced_scheme_data_customer_reference_isValid;
}

QString OAIAdditionalDataTemporaryServices::getEnhancedSchemeDataEmployeeName() const {
    return m_enhanced_scheme_data_employee_name;
}
void OAIAdditionalDataTemporaryServices::setEnhancedSchemeDataEmployeeName(const QString &enhanced_scheme_data_employee_name) {
    m_enhanced_scheme_data_employee_name = enhanced_scheme_data_employee_name;
    m_enhanced_scheme_data_employee_name_isSet = true;
}

bool OAIAdditionalDataTemporaryServices::is_enhanced_scheme_data_employee_name_Set() const{
    return m_enhanced_scheme_data_employee_name_isSet;
}

bool OAIAdditionalDataTemporaryServices::is_enhanced_scheme_data_employee_name_Valid() const{
    return m_enhanced_scheme_data_employee_name_isValid;
}

QString OAIAdditionalDataTemporaryServices::getEnhancedSchemeDataJobDescription() const {
    return m_enhanced_scheme_data_job_description;
}
void OAIAdditionalDataTemporaryServices::setEnhancedSchemeDataJobDescription(const QString &enhanced_scheme_data_job_description) {
    m_enhanced_scheme_data_job_description = enhanced_scheme_data_job_description;
    m_enhanced_scheme_data_job_description_isSet = true;
}

bool OAIAdditionalDataTemporaryServices::is_enhanced_scheme_data_job_description_Set() const{
    return m_enhanced_scheme_data_job_description_isSet;
}

bool OAIAdditionalDataTemporaryServices::is_enhanced_scheme_data_job_description_Valid() const{
    return m_enhanced_scheme_data_job_description_isValid;
}

QString OAIAdditionalDataTemporaryServices::getEnhancedSchemeDataRegularHoursRate() const {
    return m_enhanced_scheme_data_regular_hours_rate;
}
void OAIAdditionalDataTemporaryServices::setEnhancedSchemeDataRegularHoursRate(const QString &enhanced_scheme_data_regular_hours_rate) {
    m_enhanced_scheme_data_regular_hours_rate = enhanced_scheme_data_regular_hours_rate;
    m_enhanced_scheme_data_regular_hours_rate_isSet = true;
}

bool OAIAdditionalDataTemporaryServices::is_enhanced_scheme_data_regular_hours_rate_Set() const{
    return m_enhanced_scheme_data_regular_hours_rate_isSet;
}

bool OAIAdditionalDataTemporaryServices::is_enhanced_scheme_data_regular_hours_rate_Valid() const{
    return m_enhanced_scheme_data_regular_hours_rate_isValid;
}

QString OAIAdditionalDataTemporaryServices::getEnhancedSchemeDataRegularHoursWorked() const {
    return m_enhanced_scheme_data_regular_hours_worked;
}
void OAIAdditionalDataTemporaryServices::setEnhancedSchemeDataRegularHoursWorked(const QString &enhanced_scheme_data_regular_hours_worked) {
    m_enhanced_scheme_data_regular_hours_worked = enhanced_scheme_data_regular_hours_worked;
    m_enhanced_scheme_data_regular_hours_worked_isSet = true;
}

bool OAIAdditionalDataTemporaryServices::is_enhanced_scheme_data_regular_hours_worked_Set() const{
    return m_enhanced_scheme_data_regular_hours_worked_isSet;
}

bool OAIAdditionalDataTemporaryServices::is_enhanced_scheme_data_regular_hours_worked_Valid() const{
    return m_enhanced_scheme_data_regular_hours_worked_isValid;
}

QString OAIAdditionalDataTemporaryServices::getEnhancedSchemeDataRequestName() const {
    return m_enhanced_scheme_data_request_name;
}
void OAIAdditionalDataTemporaryServices::setEnhancedSchemeDataRequestName(const QString &enhanced_scheme_data_request_name) {
    m_enhanced_scheme_data_request_name = enhanced_scheme_data_request_name;
    m_enhanced_scheme_data_request_name_isSet = true;
}

bool OAIAdditionalDataTemporaryServices::is_enhanced_scheme_data_request_name_Set() const{
    return m_enhanced_scheme_data_request_name_isSet;
}

bool OAIAdditionalDataTemporaryServices::is_enhanced_scheme_data_request_name_Valid() const{
    return m_enhanced_scheme_data_request_name_isValid;
}

QString OAIAdditionalDataTemporaryServices::getEnhancedSchemeDataTempStartDate() const {
    return m_enhanced_scheme_data_temp_start_date;
}
void OAIAdditionalDataTemporaryServices::setEnhancedSchemeDataTempStartDate(const QString &enhanced_scheme_data_temp_start_date) {
    m_enhanced_scheme_data_temp_start_date = enhanced_scheme_data_temp_start_date;
    m_enhanced_scheme_data_temp_start_date_isSet = true;
}

bool OAIAdditionalDataTemporaryServices::is_enhanced_scheme_data_temp_start_date_Set() const{
    return m_enhanced_scheme_data_temp_start_date_isSet;
}

bool OAIAdditionalDataTemporaryServices::is_enhanced_scheme_data_temp_start_date_Valid() const{
    return m_enhanced_scheme_data_temp_start_date_isValid;
}

QString OAIAdditionalDataTemporaryServices::getEnhancedSchemeDataTempWeekEnding() const {
    return m_enhanced_scheme_data_temp_week_ending;
}
void OAIAdditionalDataTemporaryServices::setEnhancedSchemeDataTempWeekEnding(const QString &enhanced_scheme_data_temp_week_ending) {
    m_enhanced_scheme_data_temp_week_ending = enhanced_scheme_data_temp_week_ending;
    m_enhanced_scheme_data_temp_week_ending_isSet = true;
}

bool OAIAdditionalDataTemporaryServices::is_enhanced_scheme_data_temp_week_ending_Set() const{
    return m_enhanced_scheme_data_temp_week_ending_isSet;
}

bool OAIAdditionalDataTemporaryServices::is_enhanced_scheme_data_temp_week_ending_Valid() const{
    return m_enhanced_scheme_data_temp_week_ending_isValid;
}

QString OAIAdditionalDataTemporaryServices::getEnhancedSchemeDataTotalTaxAmount() const {
    return m_enhanced_scheme_data_total_tax_amount;
}
void OAIAdditionalDataTemporaryServices::setEnhancedSchemeDataTotalTaxAmount(const QString &enhanced_scheme_data_total_tax_amount) {
    m_enhanced_scheme_data_total_tax_amount = enhanced_scheme_data_total_tax_amount;
    m_enhanced_scheme_data_total_tax_amount_isSet = true;
}

bool OAIAdditionalDataTemporaryServices::is_enhanced_scheme_data_total_tax_amount_Set() const{
    return m_enhanced_scheme_data_total_tax_amount_isSet;
}

bool OAIAdditionalDataTemporaryServices::is_enhanced_scheme_data_total_tax_amount_Valid() const{
    return m_enhanced_scheme_data_total_tax_amount_isValid;
}

bool OAIAdditionalDataTemporaryServices::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_enhanced_scheme_data_customer_reference_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_enhanced_scheme_data_employee_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_enhanced_scheme_data_job_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_enhanced_scheme_data_regular_hours_rate_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_enhanced_scheme_data_regular_hours_worked_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_enhanced_scheme_data_request_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_enhanced_scheme_data_temp_start_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_enhanced_scheme_data_temp_week_ending_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_enhanced_scheme_data_total_tax_amount_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAdditionalDataTemporaryServices::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
