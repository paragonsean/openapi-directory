/*
 * Adyen Payment API
 * A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.  To learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).  ## Authentication You need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.  If using an API key, add an `X-API-Key` header with the API key as the value, for example:   ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ```  Alternatively, you can use the username and password to connect to the API using basic authentication, for example:  ``` curl -U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\ -H \"Content-Type: application/json\" \\ ... ```  ## Versioning Payments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://pal-test.adyen.com/pal/servlet/Payment/v46/authorise ```  ## Going live  To authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.  The live endpoint URLs contain a prefix which is unique to your company account: ```  https://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payment/v46/authorise ```  Get your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.
 *
 * The version of the OpenAPI document: 46
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for AdditionalDataLodging
 */
public class AdditionalDataLodgingTest {
    private final AdditionalDataLodging model = new AdditionalDataLodging();

    /**
     * Model tests for AdditionalDataLodging
     */
    @Test
    public void testAdditionalDataLodging() {
        // TODO: test AdditionalDataLodging
    }

    /**
     * Test the property 'lodgingCheckInDate'
     */
    @Test
    public void lodgingCheckInDateTest() {
        // TODO: test lodgingCheckInDate
    }

    /**
     * Test the property 'lodgingCheckOutDate'
     */
    @Test
    public void lodgingCheckOutDateTest() {
        // TODO: test lodgingCheckOutDate
    }

    /**
     * Test the property 'lodgingCustomerServiceTollFreeNumber'
     */
    @Test
    public void lodgingCustomerServiceTollFreeNumberTest() {
        // TODO: test lodgingCustomerServiceTollFreeNumber
    }

    /**
     * Test the property 'lodgingFireSafetyActIndicator'
     */
    @Test
    public void lodgingFireSafetyActIndicatorTest() {
        // TODO: test lodgingFireSafetyActIndicator
    }

    /**
     * Test the property 'lodgingFolioCashAdvances'
     */
    @Test
    public void lodgingFolioCashAdvancesTest() {
        // TODO: test lodgingFolioCashAdvances
    }

    /**
     * Test the property 'lodgingFolioNumber'
     */
    @Test
    public void lodgingFolioNumberTest() {
        // TODO: test lodgingFolioNumber
    }

    /**
     * Test the property 'lodgingFoodBeverageCharges'
     */
    @Test
    public void lodgingFoodBeverageChargesTest() {
        // TODO: test lodgingFoodBeverageCharges
    }

    /**
     * Test the property 'lodgingNoShowIndicator'
     */
    @Test
    public void lodgingNoShowIndicatorTest() {
        // TODO: test lodgingNoShowIndicator
    }

    /**
     * Test the property 'lodgingPrepaidExpenses'
     */
    @Test
    public void lodgingPrepaidExpensesTest() {
        // TODO: test lodgingPrepaidExpenses
    }

    /**
     * Test the property 'lodgingPropertyPhoneNumber'
     */
    @Test
    public void lodgingPropertyPhoneNumberTest() {
        // TODO: test lodgingPropertyPhoneNumber
    }

    /**
     * Test the property 'lodgingRoom1NumberOfNights'
     */
    @Test
    public void lodgingRoom1NumberOfNightsTest() {
        // TODO: test lodgingRoom1NumberOfNights
    }

    /**
     * Test the property 'lodgingRoom1Rate'
     */
    @Test
    public void lodgingRoom1RateTest() {
        // TODO: test lodgingRoom1Rate
    }

    /**
     * Test the property 'lodgingTotalRoomTax'
     */
    @Test
    public void lodgingTotalRoomTaxTest() {
        // TODO: test lodgingTotalRoomTax
    }

    /**
     * Test the property 'lodgingTotalTax'
     */
    @Test
    public void lodgingTotalTaxTest() {
        // TODO: test lodgingTotalTax
    }

    /**
     * Test the property 'travelEntertainmentAuthDataDuration'
     */
    @Test
    public void travelEntertainmentAuthDataDurationTest() {
        // TODO: test travelEntertainmentAuthDataDuration
    }

    /**
     * Test the property 'travelEntertainmentAuthDataMarket'
     */
    @Test
    public void travelEntertainmentAuthDataMarketTest() {
        // TODO: test travelEntertainmentAuthDataMarket
    }

}
