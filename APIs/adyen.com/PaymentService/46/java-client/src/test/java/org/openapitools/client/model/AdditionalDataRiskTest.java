/*
 * Adyen Payment API
 * A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.  To learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).  ## Authentication You need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.  If using an API key, add an `X-API-Key` header with the API key as the value, for example:   ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ```  Alternatively, you can use the username and password to connect to the API using basic authentication, for example:  ``` curl -U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\ -H \"Content-Type: application/json\" \\ ... ```  ## Versioning Payments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://pal-test.adyen.com/pal/servlet/Payment/v46/authorise ```  ## Going live  To authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.  The live endpoint URLs contain a prefix which is unique to your company account: ```  https://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payment/v46/authorise ```  Get your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.
 *
 * The version of the OpenAPI document: 46
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for AdditionalDataRisk
 */
public class AdditionalDataRiskTest {
    private final AdditionalDataRisk model = new AdditionalDataRisk();

    /**
     * Model tests for AdditionalDataRisk
     */
    @Test
    public void testAdditionalDataRisk() {
        // TODO: test AdditionalDataRisk
    }

    /**
     * Test the property 'riskdataCustomFieldName'
     */
    @Test
    public void riskdataCustomFieldNameTest() {
        // TODO: test riskdataCustomFieldName
    }

    /**
     * Test the property 'riskdataBasketItemItemNrAmountPerItem'
     */
    @Test
    public void riskdataBasketItemItemNrAmountPerItemTest() {
        // TODO: test riskdataBasketItemItemNrAmountPerItem
    }

    /**
     * Test the property 'riskdataBasketItemItemNrBrand'
     */
    @Test
    public void riskdataBasketItemItemNrBrandTest() {
        // TODO: test riskdataBasketItemItemNrBrand
    }

    /**
     * Test the property 'riskdataBasketItemItemNrCategory'
     */
    @Test
    public void riskdataBasketItemItemNrCategoryTest() {
        // TODO: test riskdataBasketItemItemNrCategory
    }

    /**
     * Test the property 'riskdataBasketItemItemNrColor'
     */
    @Test
    public void riskdataBasketItemItemNrColorTest() {
        // TODO: test riskdataBasketItemItemNrColor
    }

    /**
     * Test the property 'riskdataBasketItemItemNrCurrency'
     */
    @Test
    public void riskdataBasketItemItemNrCurrencyTest() {
        // TODO: test riskdataBasketItemItemNrCurrency
    }

    /**
     * Test the property 'riskdataBasketItemItemNrItemID'
     */
    @Test
    public void riskdataBasketItemItemNrItemIDTest() {
        // TODO: test riskdataBasketItemItemNrItemID
    }

    /**
     * Test the property 'riskdataBasketItemItemNrManufacturer'
     */
    @Test
    public void riskdataBasketItemItemNrManufacturerTest() {
        // TODO: test riskdataBasketItemItemNrManufacturer
    }

    /**
     * Test the property 'riskdataBasketItemItemNrProductTitle'
     */
    @Test
    public void riskdataBasketItemItemNrProductTitleTest() {
        // TODO: test riskdataBasketItemItemNrProductTitle
    }

    /**
     * Test the property 'riskdataBasketItemItemNrQuantity'
     */
    @Test
    public void riskdataBasketItemItemNrQuantityTest() {
        // TODO: test riskdataBasketItemItemNrQuantity
    }

    /**
     * Test the property 'riskdataBasketItemItemNrReceiverEmail'
     */
    @Test
    public void riskdataBasketItemItemNrReceiverEmailTest() {
        // TODO: test riskdataBasketItemItemNrReceiverEmail
    }

    /**
     * Test the property 'riskdataBasketItemItemNrSize'
     */
    @Test
    public void riskdataBasketItemItemNrSizeTest() {
        // TODO: test riskdataBasketItemItemNrSize
    }

    /**
     * Test the property 'riskdataBasketItemItemNrSku'
     */
    @Test
    public void riskdataBasketItemItemNrSkuTest() {
        // TODO: test riskdataBasketItemItemNrSku
    }

    /**
     * Test the property 'riskdataBasketItemItemNrUpc'
     */
    @Test
    public void riskdataBasketItemItemNrUpcTest() {
        // TODO: test riskdataBasketItemItemNrUpc
    }

    /**
     * Test the property 'riskdataPromotionsPromotionItemNrPromotionCode'
     */
    @Test
    public void riskdataPromotionsPromotionItemNrPromotionCodeTest() {
        // TODO: test riskdataPromotionsPromotionItemNrPromotionCode
    }

    /**
     * Test the property 'riskdataPromotionsPromotionItemNrPromotionDiscountAmount'
     */
    @Test
    public void riskdataPromotionsPromotionItemNrPromotionDiscountAmountTest() {
        // TODO: test riskdataPromotionsPromotionItemNrPromotionDiscountAmount
    }

    /**
     * Test the property 'riskdataPromotionsPromotionItemNrPromotionDiscountCurrency'
     */
    @Test
    public void riskdataPromotionsPromotionItemNrPromotionDiscountCurrencyTest() {
        // TODO: test riskdataPromotionsPromotionItemNrPromotionDiscountCurrency
    }

    /**
     * Test the property 'riskdataPromotionsPromotionItemNrPromotionDiscountPercentage'
     */
    @Test
    public void riskdataPromotionsPromotionItemNrPromotionDiscountPercentageTest() {
        // TODO: test riskdataPromotionsPromotionItemNrPromotionDiscountPercentage
    }

    /**
     * Test the property 'riskdataPromotionsPromotionItemNrPromotionName'
     */
    @Test
    public void riskdataPromotionsPromotionItemNrPromotionNameTest() {
        // TODO: test riskdataPromotionsPromotionItemNrPromotionName
    }

    /**
     * Test the property 'riskdataRiskProfileReference'
     */
    @Test
    public void riskdataRiskProfileReferenceTest() {
        // TODO: test riskdataRiskProfileReference
    }

    /**
     * Test the property 'riskdataSkipRisk'
     */
    @Test
    public void riskdataSkipRiskTest() {
        // TODO: test riskdataSkipRisk
    }

}
