# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AdditionalDataRiskStandalone(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, pay_pal_country_code: str=None, pay_pal_email_id: str=None, pay_pal_first_name: str=None, pay_pal_last_name: str=None, pay_pal_payer_id: str=None, pay_pal_phone: str=None, pay_pal_protection_eligibility: str=None, pay_pal_transaction_id: str=None, avs_result_raw: str=None, bin: str=None, cvc_result_raw: str=None, risk_token: str=None, three_d_authenticated: str=None, three_d_offered: str=None, token_data_type: str=None):
        """AdditionalDataRiskStandalone - a model defined in OpenAPI

        :param pay_pal_country_code: The pay_pal_country_code of this AdditionalDataRiskStandalone.
        :param pay_pal_email_id: The pay_pal_email_id of this AdditionalDataRiskStandalone.
        :param pay_pal_first_name: The pay_pal_first_name of this AdditionalDataRiskStandalone.
        :param pay_pal_last_name: The pay_pal_last_name of this AdditionalDataRiskStandalone.
        :param pay_pal_payer_id: The pay_pal_payer_id of this AdditionalDataRiskStandalone.
        :param pay_pal_phone: The pay_pal_phone of this AdditionalDataRiskStandalone.
        :param pay_pal_protection_eligibility: The pay_pal_protection_eligibility of this AdditionalDataRiskStandalone.
        :param pay_pal_transaction_id: The pay_pal_transaction_id of this AdditionalDataRiskStandalone.
        :param avs_result_raw: The avs_result_raw of this AdditionalDataRiskStandalone.
        :param bin: The bin of this AdditionalDataRiskStandalone.
        :param cvc_result_raw: The cvc_result_raw of this AdditionalDataRiskStandalone.
        :param risk_token: The risk_token of this AdditionalDataRiskStandalone.
        :param three_d_authenticated: The three_d_authenticated of this AdditionalDataRiskStandalone.
        :param three_d_offered: The three_d_offered of this AdditionalDataRiskStandalone.
        :param token_data_type: The token_data_type of this AdditionalDataRiskStandalone.
        """
        self.openapi_types = {
            'pay_pal_country_code': str,
            'pay_pal_email_id': str,
            'pay_pal_first_name': str,
            'pay_pal_last_name': str,
            'pay_pal_payer_id': str,
            'pay_pal_phone': str,
            'pay_pal_protection_eligibility': str,
            'pay_pal_transaction_id': str,
            'avs_result_raw': str,
            'bin': str,
            'cvc_result_raw': str,
            'risk_token': str,
            'three_d_authenticated': str,
            'three_d_offered': str,
            'token_data_type': str
        }

        self.attribute_map = {
            'pay_pal_country_code': 'PayPal.CountryCode',
            'pay_pal_email_id': 'PayPal.EmailId',
            'pay_pal_first_name': 'PayPal.FirstName',
            'pay_pal_last_name': 'PayPal.LastName',
            'pay_pal_payer_id': 'PayPal.PayerId',
            'pay_pal_phone': 'PayPal.Phone',
            'pay_pal_protection_eligibility': 'PayPal.ProtectionEligibility',
            'pay_pal_transaction_id': 'PayPal.TransactionId',
            'avs_result_raw': 'avsResultRaw',
            'bin': 'bin',
            'cvc_result_raw': 'cvcResultRaw',
            'risk_token': 'riskToken',
            'three_d_authenticated': 'threeDAuthenticated',
            'three_d_offered': 'threeDOffered',
            'token_data_type': 'tokenDataType'
        }

        self._pay_pal_country_code = pay_pal_country_code
        self._pay_pal_email_id = pay_pal_email_id
        self._pay_pal_first_name = pay_pal_first_name
        self._pay_pal_last_name = pay_pal_last_name
        self._pay_pal_payer_id = pay_pal_payer_id
        self._pay_pal_phone = pay_pal_phone
        self._pay_pal_protection_eligibility = pay_pal_protection_eligibility
        self._pay_pal_transaction_id = pay_pal_transaction_id
        self._avs_result_raw = avs_result_raw
        self._bin = bin
        self._cvc_result_raw = cvc_result_raw
        self._risk_token = risk_token
        self._three_d_authenticated = three_d_authenticated
        self._three_d_offered = three_d_offered
        self._token_data_type = token_data_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AdditionalDataRiskStandalone':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AdditionalDataRiskStandalone of this AdditionalDataRiskStandalone.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def pay_pal_country_code(self):
        """Gets the pay_pal_country_code of this AdditionalDataRiskStandalone.

        Shopper's country of residence in the form of ISO standard 3166 2-character country codes.

        :return: The pay_pal_country_code of this AdditionalDataRiskStandalone.
        :rtype: str
        """
        return self._pay_pal_country_code

    @pay_pal_country_code.setter
    def pay_pal_country_code(self, pay_pal_country_code):
        """Sets the pay_pal_country_code of this AdditionalDataRiskStandalone.

        Shopper's country of residence in the form of ISO standard 3166 2-character country codes.

        :param pay_pal_country_code: The pay_pal_country_code of this AdditionalDataRiskStandalone.
        :type pay_pal_country_code: str
        """

        self._pay_pal_country_code = pay_pal_country_code

    @property
    def pay_pal_email_id(self):
        """Gets the pay_pal_email_id of this AdditionalDataRiskStandalone.

        Shopper's email.

        :return: The pay_pal_email_id of this AdditionalDataRiskStandalone.
        :rtype: str
        """
        return self._pay_pal_email_id

    @pay_pal_email_id.setter
    def pay_pal_email_id(self, pay_pal_email_id):
        """Sets the pay_pal_email_id of this AdditionalDataRiskStandalone.

        Shopper's email.

        :param pay_pal_email_id: The pay_pal_email_id of this AdditionalDataRiskStandalone.
        :type pay_pal_email_id: str
        """

        self._pay_pal_email_id = pay_pal_email_id

    @property
    def pay_pal_first_name(self):
        """Gets the pay_pal_first_name of this AdditionalDataRiskStandalone.

        Shopper's first name.

        :return: The pay_pal_first_name of this AdditionalDataRiskStandalone.
        :rtype: str
        """
        return self._pay_pal_first_name

    @pay_pal_first_name.setter
    def pay_pal_first_name(self, pay_pal_first_name):
        """Sets the pay_pal_first_name of this AdditionalDataRiskStandalone.

        Shopper's first name.

        :param pay_pal_first_name: The pay_pal_first_name of this AdditionalDataRiskStandalone.
        :type pay_pal_first_name: str
        """

        self._pay_pal_first_name = pay_pal_first_name

    @property
    def pay_pal_last_name(self):
        """Gets the pay_pal_last_name of this AdditionalDataRiskStandalone.

        Shopper's last name.

        :return: The pay_pal_last_name of this AdditionalDataRiskStandalone.
        :rtype: str
        """
        return self._pay_pal_last_name

    @pay_pal_last_name.setter
    def pay_pal_last_name(self, pay_pal_last_name):
        """Sets the pay_pal_last_name of this AdditionalDataRiskStandalone.

        Shopper's last name.

        :param pay_pal_last_name: The pay_pal_last_name of this AdditionalDataRiskStandalone.
        :type pay_pal_last_name: str
        """

        self._pay_pal_last_name = pay_pal_last_name

    @property
    def pay_pal_payer_id(self):
        """Gets the pay_pal_payer_id of this AdditionalDataRiskStandalone.

        Unique PayPal Customer Account identification number. Character length and limitations: 13 single-byte alphanumeric characters.

        :return: The pay_pal_payer_id of this AdditionalDataRiskStandalone.
        :rtype: str
        """
        return self._pay_pal_payer_id

    @pay_pal_payer_id.setter
    def pay_pal_payer_id(self, pay_pal_payer_id):
        """Sets the pay_pal_payer_id of this AdditionalDataRiskStandalone.

        Unique PayPal Customer Account identification number. Character length and limitations: 13 single-byte alphanumeric characters.

        :param pay_pal_payer_id: The pay_pal_payer_id of this AdditionalDataRiskStandalone.
        :type pay_pal_payer_id: str
        """

        self._pay_pal_payer_id = pay_pal_payer_id

    @property
    def pay_pal_phone(self):
        """Gets the pay_pal_phone of this AdditionalDataRiskStandalone.

        Shopper's phone number.

        :return: The pay_pal_phone of this AdditionalDataRiskStandalone.
        :rtype: str
        """
        return self._pay_pal_phone

    @pay_pal_phone.setter
    def pay_pal_phone(self, pay_pal_phone):
        """Sets the pay_pal_phone of this AdditionalDataRiskStandalone.

        Shopper's phone number.

        :param pay_pal_phone: The pay_pal_phone of this AdditionalDataRiskStandalone.
        :type pay_pal_phone: str
        """

        self._pay_pal_phone = pay_pal_phone

    @property
    def pay_pal_protection_eligibility(self):
        """Gets the pay_pal_protection_eligibility of this AdditionalDataRiskStandalone.

        Allowed values: * **Eligible** — Merchant is protected by PayPal's Seller Protection Policy for Unauthorized Payments and Item Not Received.  * **PartiallyEligible** — Merchant is protected by PayPal's Seller Protection Policy for Item Not Received.  * **Ineligible** — Merchant is not protected under the Seller Protection Policy.

        :return: The pay_pal_protection_eligibility of this AdditionalDataRiskStandalone.
        :rtype: str
        """
        return self._pay_pal_protection_eligibility

    @pay_pal_protection_eligibility.setter
    def pay_pal_protection_eligibility(self, pay_pal_protection_eligibility):
        """Sets the pay_pal_protection_eligibility of this AdditionalDataRiskStandalone.

        Allowed values: * **Eligible** — Merchant is protected by PayPal's Seller Protection Policy for Unauthorized Payments and Item Not Received.  * **PartiallyEligible** — Merchant is protected by PayPal's Seller Protection Policy for Item Not Received.  * **Ineligible** — Merchant is not protected under the Seller Protection Policy.

        :param pay_pal_protection_eligibility: The pay_pal_protection_eligibility of this AdditionalDataRiskStandalone.
        :type pay_pal_protection_eligibility: str
        """

        self._pay_pal_protection_eligibility = pay_pal_protection_eligibility

    @property
    def pay_pal_transaction_id(self):
        """Gets the pay_pal_transaction_id of this AdditionalDataRiskStandalone.

        Unique transaction ID of the payment.

        :return: The pay_pal_transaction_id of this AdditionalDataRiskStandalone.
        :rtype: str
        """
        return self._pay_pal_transaction_id

    @pay_pal_transaction_id.setter
    def pay_pal_transaction_id(self, pay_pal_transaction_id):
        """Sets the pay_pal_transaction_id of this AdditionalDataRiskStandalone.

        Unique transaction ID of the payment.

        :param pay_pal_transaction_id: The pay_pal_transaction_id of this AdditionalDataRiskStandalone.
        :type pay_pal_transaction_id: str
        """

        self._pay_pal_transaction_id = pay_pal_transaction_id

    @property
    def avs_result_raw(self):
        """Gets the avs_result_raw of this AdditionalDataRiskStandalone.

        Raw AVS result received from the acquirer, where available. Example: D

        :return: The avs_result_raw of this AdditionalDataRiskStandalone.
        :rtype: str
        """
        return self._avs_result_raw

    @avs_result_raw.setter
    def avs_result_raw(self, avs_result_raw):
        """Sets the avs_result_raw of this AdditionalDataRiskStandalone.

        Raw AVS result received from the acquirer, where available. Example: D

        :param avs_result_raw: The avs_result_raw of this AdditionalDataRiskStandalone.
        :type avs_result_raw: str
        """

        self._avs_result_raw = avs_result_raw

    @property
    def bin(self):
        """Gets the bin of this AdditionalDataRiskStandalone.

        The Bank Identification Number of a credit card, which is the first six digits of a card number. Required for [tokenized card request](https://docs.adyen.com/risk-management/standalone-risk#tokenised-pan-request).

        :return: The bin of this AdditionalDataRiskStandalone.
        :rtype: str
        """
        return self._bin

    @bin.setter
    def bin(self, bin):
        """Sets the bin of this AdditionalDataRiskStandalone.

        The Bank Identification Number of a credit card, which is the first six digits of a card number. Required for [tokenized card request](https://docs.adyen.com/risk-management/standalone-risk#tokenised-pan-request).

        :param bin: The bin of this AdditionalDataRiskStandalone.
        :type bin: str
        """

        self._bin = bin

    @property
    def cvc_result_raw(self):
        """Gets the cvc_result_raw of this AdditionalDataRiskStandalone.

        Raw CVC result received from the acquirer, where available. Example: 1

        :return: The cvc_result_raw of this AdditionalDataRiskStandalone.
        :rtype: str
        """
        return self._cvc_result_raw

    @cvc_result_raw.setter
    def cvc_result_raw(self, cvc_result_raw):
        """Sets the cvc_result_raw of this AdditionalDataRiskStandalone.

        Raw CVC result received from the acquirer, where available. Example: 1

        :param cvc_result_raw: The cvc_result_raw of this AdditionalDataRiskStandalone.
        :type cvc_result_raw: str
        """

        self._cvc_result_raw = cvc_result_raw

    @property
    def risk_token(self):
        """Gets the risk_token of this AdditionalDataRiskStandalone.

        Unique identifier or token for the shopper's card details.

        :return: The risk_token of this AdditionalDataRiskStandalone.
        :rtype: str
        """
        return self._risk_token

    @risk_token.setter
    def risk_token(self, risk_token):
        """Sets the risk_token of this AdditionalDataRiskStandalone.

        Unique identifier or token for the shopper's card details.

        :param risk_token: The risk_token of this AdditionalDataRiskStandalone.
        :type risk_token: str
        """

        self._risk_token = risk_token

    @property
    def three_d_authenticated(self):
        """Gets the three_d_authenticated of this AdditionalDataRiskStandalone.

        A Boolean value indicating whether 3DS authentication was completed on this payment. Example: true

        :return: The three_d_authenticated of this AdditionalDataRiskStandalone.
        :rtype: str
        """
        return self._three_d_authenticated

    @three_d_authenticated.setter
    def three_d_authenticated(self, three_d_authenticated):
        """Sets the three_d_authenticated of this AdditionalDataRiskStandalone.

        A Boolean value indicating whether 3DS authentication was completed on this payment. Example: true

        :param three_d_authenticated: The three_d_authenticated of this AdditionalDataRiskStandalone.
        :type three_d_authenticated: str
        """

        self._three_d_authenticated = three_d_authenticated

    @property
    def three_d_offered(self):
        """Gets the three_d_offered of this AdditionalDataRiskStandalone.

        A Boolean value indicating whether 3DS was offered for this payment. Example: true

        :return: The three_d_offered of this AdditionalDataRiskStandalone.
        :rtype: str
        """
        return self._three_d_offered

    @three_d_offered.setter
    def three_d_offered(self, three_d_offered):
        """Sets the three_d_offered of this AdditionalDataRiskStandalone.

        A Boolean value indicating whether 3DS was offered for this payment. Example: true

        :param three_d_offered: The three_d_offered of this AdditionalDataRiskStandalone.
        :type three_d_offered: str
        """

        self._three_d_offered = three_d_offered

    @property
    def token_data_type(self):
        """Gets the token_data_type of this AdditionalDataRiskStandalone.

        Required for PayPal payments only. The only supported value is: **paypal**.

        :return: The token_data_type of this AdditionalDataRiskStandalone.
        :rtype: str
        """
        return self._token_data_type

    @token_data_type.setter
    def token_data_type(self, token_data_type):
        """Sets the token_data_type of this AdditionalDataRiskStandalone.

        Required for PayPal payments only. The only supported value is: **paypal**.

        :param token_data_type: The token_data_type of this AdditionalDataRiskStandalone.
        :type token_data_type: str
        """

        self._token_data_type = token_data_type
