/**
 * Adyen Payment API
 * A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.  To learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).  ## Authentication You need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.  If using an API key, add an `X-API-Key` header with the API key as the value, for example:   ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ```  Alternatively, you can use the username and password to connect to the API using basic authentication, for example:  ``` curl -U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\ -H \"Content-Type: application/json\" \\ ... ```  ## Versioning Payments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://pal-test.adyen.com/pal/servlet/Payment/v51/authorise ```  ## Going live  To authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.  The live endpoint URLs contain a prefix which is unique to your company account: ```  https://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payment/v51/authorise ```  Get your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.
 *
 * The version of the OpenAPI document: 51
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AccountInfo model module.
 * @module model/AccountInfo
 * @version 51
 */
class AccountInfo {
    /**
     * Constructs a new <code>AccountInfo</code>.
     * @alias module:model/AccountInfo
     */
    constructor() { 
        
        AccountInfo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AccountInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AccountInfo} obj Optional instance to populate.
     * @return {module:model/AccountInfo} The populated <code>AccountInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AccountInfo();

            if (data.hasOwnProperty('accountAgeIndicator')) {
                obj['accountAgeIndicator'] = ApiClient.convertToType(data['accountAgeIndicator'], 'String');
            }
            if (data.hasOwnProperty('accountChangeDate')) {
                obj['accountChangeDate'] = ApiClient.convertToType(data['accountChangeDate'], 'Date');
            }
            if (data.hasOwnProperty('accountChangeIndicator')) {
                obj['accountChangeIndicator'] = ApiClient.convertToType(data['accountChangeIndicator'], 'String');
            }
            if (data.hasOwnProperty('accountCreationDate')) {
                obj['accountCreationDate'] = ApiClient.convertToType(data['accountCreationDate'], 'Date');
            }
            if (data.hasOwnProperty('accountType')) {
                obj['accountType'] = ApiClient.convertToType(data['accountType'], 'String');
            }
            if (data.hasOwnProperty('addCardAttemptsDay')) {
                obj['addCardAttemptsDay'] = ApiClient.convertToType(data['addCardAttemptsDay'], 'Number');
            }
            if (data.hasOwnProperty('deliveryAddressUsageDate')) {
                obj['deliveryAddressUsageDate'] = ApiClient.convertToType(data['deliveryAddressUsageDate'], 'Date');
            }
            if (data.hasOwnProperty('deliveryAddressUsageIndicator')) {
                obj['deliveryAddressUsageIndicator'] = ApiClient.convertToType(data['deliveryAddressUsageIndicator'], 'String');
            }
            if (data.hasOwnProperty('homePhone')) {
                obj['homePhone'] = ApiClient.convertToType(data['homePhone'], 'String');
            }
            if (data.hasOwnProperty('mobilePhone')) {
                obj['mobilePhone'] = ApiClient.convertToType(data['mobilePhone'], 'String');
            }
            if (data.hasOwnProperty('passwordChangeDate')) {
                obj['passwordChangeDate'] = ApiClient.convertToType(data['passwordChangeDate'], 'Date');
            }
            if (data.hasOwnProperty('passwordChangeIndicator')) {
                obj['passwordChangeIndicator'] = ApiClient.convertToType(data['passwordChangeIndicator'], 'String');
            }
            if (data.hasOwnProperty('pastTransactionsDay')) {
                obj['pastTransactionsDay'] = ApiClient.convertToType(data['pastTransactionsDay'], 'Number');
            }
            if (data.hasOwnProperty('pastTransactionsYear')) {
                obj['pastTransactionsYear'] = ApiClient.convertToType(data['pastTransactionsYear'], 'Number');
            }
            if (data.hasOwnProperty('paymentAccountAge')) {
                obj['paymentAccountAge'] = ApiClient.convertToType(data['paymentAccountAge'], 'Date');
            }
            if (data.hasOwnProperty('paymentAccountIndicator')) {
                obj['paymentAccountIndicator'] = ApiClient.convertToType(data['paymentAccountIndicator'], 'String');
            }
            if (data.hasOwnProperty('purchasesLast6Months')) {
                obj['purchasesLast6Months'] = ApiClient.convertToType(data['purchasesLast6Months'], 'Number');
            }
            if (data.hasOwnProperty('suspiciousActivity')) {
                obj['suspiciousActivity'] = ApiClient.convertToType(data['suspiciousActivity'], 'Boolean');
            }
            if (data.hasOwnProperty('workPhone')) {
                obj['workPhone'] = ApiClient.convertToType(data['workPhone'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AccountInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AccountInfo</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['accountAgeIndicator'] && !(typeof data['accountAgeIndicator'] === 'string' || data['accountAgeIndicator'] instanceof String)) {
            throw new Error("Expected the field `accountAgeIndicator` to be a primitive type in the JSON string but got " + data['accountAgeIndicator']);
        }
        // ensure the json data is a string
        if (data['accountChangeIndicator'] && !(typeof data['accountChangeIndicator'] === 'string' || data['accountChangeIndicator'] instanceof String)) {
            throw new Error("Expected the field `accountChangeIndicator` to be a primitive type in the JSON string but got " + data['accountChangeIndicator']);
        }
        // ensure the json data is a string
        if (data['accountType'] && !(typeof data['accountType'] === 'string' || data['accountType'] instanceof String)) {
            throw new Error("Expected the field `accountType` to be a primitive type in the JSON string but got " + data['accountType']);
        }
        // ensure the json data is a string
        if (data['deliveryAddressUsageIndicator'] && !(typeof data['deliveryAddressUsageIndicator'] === 'string' || data['deliveryAddressUsageIndicator'] instanceof String)) {
            throw new Error("Expected the field `deliveryAddressUsageIndicator` to be a primitive type in the JSON string but got " + data['deliveryAddressUsageIndicator']);
        }
        // ensure the json data is a string
        if (data['homePhone'] && !(typeof data['homePhone'] === 'string' || data['homePhone'] instanceof String)) {
            throw new Error("Expected the field `homePhone` to be a primitive type in the JSON string but got " + data['homePhone']);
        }
        // ensure the json data is a string
        if (data['mobilePhone'] && !(typeof data['mobilePhone'] === 'string' || data['mobilePhone'] instanceof String)) {
            throw new Error("Expected the field `mobilePhone` to be a primitive type in the JSON string but got " + data['mobilePhone']);
        }
        // ensure the json data is a string
        if (data['passwordChangeIndicator'] && !(typeof data['passwordChangeIndicator'] === 'string' || data['passwordChangeIndicator'] instanceof String)) {
            throw new Error("Expected the field `passwordChangeIndicator` to be a primitive type in the JSON string but got " + data['passwordChangeIndicator']);
        }
        // ensure the json data is a string
        if (data['paymentAccountIndicator'] && !(typeof data['paymentAccountIndicator'] === 'string' || data['paymentAccountIndicator'] instanceof String)) {
            throw new Error("Expected the field `paymentAccountIndicator` to be a primitive type in the JSON string but got " + data['paymentAccountIndicator']);
        }
        // ensure the json data is a string
        if (data['workPhone'] && !(typeof data['workPhone'] === 'string' || data['workPhone'] instanceof String)) {
            throw new Error("Expected the field `workPhone` to be a primitive type in the JSON string but got " + data['workPhone']);
        }

        return true;
    }


}



/**
 * Indicator for the length of time since this shopper account was created in the merchant's environment. Allowed values: * notApplicable * thisTransaction * lessThan30Days * from30To60Days * moreThan60Days
 * @member {module:model/AccountInfo.AccountAgeIndicatorEnum} accountAgeIndicator
 */
AccountInfo.prototype['accountAgeIndicator'] = undefined;

/**
 * Date when the shopper's account was last changed.
 * @member {Date} accountChangeDate
 */
AccountInfo.prototype['accountChangeDate'] = undefined;

/**
 * Indicator for the length of time since the shopper's account was last updated. Allowed values: * thisTransaction * lessThan30Days * from30To60Days * moreThan60Days
 * @member {module:model/AccountInfo.AccountChangeIndicatorEnum} accountChangeIndicator
 */
AccountInfo.prototype['accountChangeIndicator'] = undefined;

/**
 * Date when the shopper's account was created.
 * @member {Date} accountCreationDate
 */
AccountInfo.prototype['accountCreationDate'] = undefined;

/**
 * Indicates the type of account. For example, for a multi-account card product. Allowed values: * notApplicable * credit * debit
 * @member {module:model/AccountInfo.AccountTypeEnum} accountType
 */
AccountInfo.prototype['accountType'] = undefined;

/**
 * Number of attempts the shopper tried to add a card to their account in the last day.
 * @member {Number} addCardAttemptsDay
 */
AccountInfo.prototype['addCardAttemptsDay'] = undefined;

/**
 * Date the selected delivery address was first used.
 * @member {Date} deliveryAddressUsageDate
 */
AccountInfo.prototype['deliveryAddressUsageDate'] = undefined;

/**
 * Indicator for the length of time since this delivery address was first used. Allowed values: * thisTransaction * lessThan30Days * from30To60Days * moreThan60Days
 * @member {module:model/AccountInfo.DeliveryAddressUsageIndicatorEnum} deliveryAddressUsageIndicator
 */
AccountInfo.prototype['deliveryAddressUsageIndicator'] = undefined;

/**
 * Shopper's home phone number (including the country code).
 * @member {String} homePhone
 */
AccountInfo.prototype['homePhone'] = undefined;

/**
 * Shopper's mobile phone number (including the country code).
 * @member {String} mobilePhone
 */
AccountInfo.prototype['mobilePhone'] = undefined;

/**
 * Date when the shopper last changed their password.
 * @member {Date} passwordChangeDate
 */
AccountInfo.prototype['passwordChangeDate'] = undefined;

/**
 * Indicator when the shopper has changed their password. Allowed values: * notApplicable * thisTransaction * lessThan30Days * from30To60Days * moreThan60Days
 * @member {module:model/AccountInfo.PasswordChangeIndicatorEnum} passwordChangeIndicator
 */
AccountInfo.prototype['passwordChangeIndicator'] = undefined;

/**
 * Number of all transactions (successful and abandoned) from this shopper in the past 24 hours.
 * @member {Number} pastTransactionsDay
 */
AccountInfo.prototype['pastTransactionsDay'] = undefined;

/**
 * Number of all transactions (successful and abandoned) from this shopper in the past year.
 * @member {Number} pastTransactionsYear
 */
AccountInfo.prototype['pastTransactionsYear'] = undefined;

/**
 * Date this payment method was added to the shopper's account.
 * @member {Date} paymentAccountAge
 */
AccountInfo.prototype['paymentAccountAge'] = undefined;

/**
 * Indicator for the length of time since this payment method was added to this shopper's account. Allowed values: * notApplicable * thisTransaction * lessThan30Days * from30To60Days * moreThan60Days
 * @member {module:model/AccountInfo.PaymentAccountIndicatorEnum} paymentAccountIndicator
 */
AccountInfo.prototype['paymentAccountIndicator'] = undefined;

/**
 * Number of successful purchases in the last six months.
 * @member {Number} purchasesLast6Months
 */
AccountInfo.prototype['purchasesLast6Months'] = undefined;

/**
 * Whether suspicious activity was recorded on this account.
 * @member {Boolean} suspiciousActivity
 */
AccountInfo.prototype['suspiciousActivity'] = undefined;

/**
 * Shopper's work phone number (including the country code).
 * @member {String} workPhone
 */
AccountInfo.prototype['workPhone'] = undefined;





/**
 * Allowed values for the <code>accountAgeIndicator</code> property.
 * @enum {String}
 * @readonly
 */
AccountInfo['AccountAgeIndicatorEnum'] = {

    /**
     * value: "notApplicable"
     * @const
     */
    "notApplicable": "notApplicable",

    /**
     * value: "thisTransaction"
     * @const
     */
    "thisTransaction": "thisTransaction",

    /**
     * value: "lessThan30Days"
     * @const
     */
    "lessThan30Days": "lessThan30Days",

    /**
     * value: "from30To60Days"
     * @const
     */
    "from30To60Days": "from30To60Days",

    /**
     * value: "moreThan60Days"
     * @const
     */
    "moreThan60Days": "moreThan60Days"
};


/**
 * Allowed values for the <code>accountChangeIndicator</code> property.
 * @enum {String}
 * @readonly
 */
AccountInfo['AccountChangeIndicatorEnum'] = {

    /**
     * value: "thisTransaction"
     * @const
     */
    "thisTransaction": "thisTransaction",

    /**
     * value: "lessThan30Days"
     * @const
     */
    "lessThan30Days": "lessThan30Days",

    /**
     * value: "from30To60Days"
     * @const
     */
    "from30To60Days": "from30To60Days",

    /**
     * value: "moreThan60Days"
     * @const
     */
    "moreThan60Days": "moreThan60Days"
};


/**
 * Allowed values for the <code>accountType</code> property.
 * @enum {String}
 * @readonly
 */
AccountInfo['AccountTypeEnum'] = {

    /**
     * value: "notApplicable"
     * @const
     */
    "notApplicable": "notApplicable",

    /**
     * value: "credit"
     * @const
     */
    "credit": "credit",

    /**
     * value: "debit"
     * @const
     */
    "debit": "debit"
};


/**
 * Allowed values for the <code>deliveryAddressUsageIndicator</code> property.
 * @enum {String}
 * @readonly
 */
AccountInfo['DeliveryAddressUsageIndicatorEnum'] = {

    /**
     * value: "thisTransaction"
     * @const
     */
    "thisTransaction": "thisTransaction",

    /**
     * value: "lessThan30Days"
     * @const
     */
    "lessThan30Days": "lessThan30Days",

    /**
     * value: "from30To60Days"
     * @const
     */
    "from30To60Days": "from30To60Days",

    /**
     * value: "moreThan60Days"
     * @const
     */
    "moreThan60Days": "moreThan60Days"
};


/**
 * Allowed values for the <code>passwordChangeIndicator</code> property.
 * @enum {String}
 * @readonly
 */
AccountInfo['PasswordChangeIndicatorEnum'] = {

    /**
     * value: "notApplicable"
     * @const
     */
    "notApplicable": "notApplicable",

    /**
     * value: "thisTransaction"
     * @const
     */
    "thisTransaction": "thisTransaction",

    /**
     * value: "lessThan30Days"
     * @const
     */
    "lessThan30Days": "lessThan30Days",

    /**
     * value: "from30To60Days"
     * @const
     */
    "from30To60Days": "from30To60Days",

    /**
     * value: "moreThan60Days"
     * @const
     */
    "moreThan60Days": "moreThan60Days"
};


/**
 * Allowed values for the <code>paymentAccountIndicator</code> property.
 * @enum {String}
 * @readonly
 */
AccountInfo['PaymentAccountIndicatorEnum'] = {

    /**
     * value: "notApplicable"
     * @const
     */
    "notApplicable": "notApplicable",

    /**
     * value: "thisTransaction"
     * @const
     */
    "thisTransaction": "thisTransaction",

    /**
     * value: "lessThan30Days"
     * @const
     */
    "lessThan30Days": "lessThan30Days",

    /**
     * value: "from30To60Days"
     * @const
     */
    "from30To60Days": "from30To60Days",

    /**
     * value: "moreThan60Days"
     * @const
     */
    "moreThan60Days": "moreThan60Days"
};



export default AccountInfo;

