/*
 * Adyen Payment API
 * A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.  To learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).  ## Authentication You need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.  If using an API key, add an `X-API-Key` header with the API key as the value, for example:   ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ```  Alternatively, you can use the username and password to connect to the API using basic authentication, for example:  ``` curl -U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\ -H \"Content-Type: application/json\" \\ ... ```  ## Versioning Payments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://pal-test.adyen.com/pal/servlet/Payment/v30/authorise ```  ## Going live  To authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.  The live endpoint URLs contain a prefix which is unique to your company account: ```  https://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payment/v30/authorise ```  Get your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.
 *
 * The version of the OpenAPI document: 30
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for AdditionalDataAirline
 */
public class AdditionalDataAirlineTest {
    private final AdditionalDataAirline model = new AdditionalDataAirline();

    /**
     * Model tests for AdditionalDataAirline
     */
    @Test
    public void testAdditionalDataAirline() {
        // TODO: test AdditionalDataAirline
    }

    /**
     * Test the property 'airlineAgencyInvoiceNumber'
     */
    @Test
    public void airlineAgencyInvoiceNumberTest() {
        // TODO: test airlineAgencyInvoiceNumber
    }

    /**
     * Test the property 'airlineAgencyPlanName'
     */
    @Test
    public void airlineAgencyPlanNameTest() {
        // TODO: test airlineAgencyPlanName
    }

    /**
     * Test the property 'airlineAirlineCode'
     */
    @Test
    public void airlineAirlineCodeTest() {
        // TODO: test airlineAirlineCode
    }

    /**
     * Test the property 'airlineAirlineDesignatorCode'
     */
    @Test
    public void airlineAirlineDesignatorCodeTest() {
        // TODO: test airlineAirlineDesignatorCode
    }

    /**
     * Test the property 'airlineBoardingFee'
     */
    @Test
    public void airlineBoardingFeeTest() {
        // TODO: test airlineBoardingFee
    }

    /**
     * Test the property 'airlineComputerizedReservationSystem'
     */
    @Test
    public void airlineComputerizedReservationSystemTest() {
        // TODO: test airlineComputerizedReservationSystem
    }

    /**
     * Test the property 'airlineCustomerReferenceNumber'
     */
    @Test
    public void airlineCustomerReferenceNumberTest() {
        // TODO: test airlineCustomerReferenceNumber
    }

    /**
     * Test the property 'airlineDocumentType'
     */
    @Test
    public void airlineDocumentTypeTest() {
        // TODO: test airlineDocumentType
    }

    /**
     * Test the property 'airlineFlightDate'
     */
    @Test
    public void airlineFlightDateTest() {
        // TODO: test airlineFlightDate
    }

    /**
     * Test the property 'airlineLegCarrierCode'
     */
    @Test
    public void airlineLegCarrierCodeTest() {
        // TODO: test airlineLegCarrierCode
    }

    /**
     * Test the property 'airlineLegClassOfTravel'
     */
    @Test
    public void airlineLegClassOfTravelTest() {
        // TODO: test airlineLegClassOfTravel
    }

    /**
     * Test the property 'airlineLegDateOfTravel'
     */
    @Test
    public void airlineLegDateOfTravelTest() {
        // TODO: test airlineLegDateOfTravel
    }

    /**
     * Test the property 'airlineLegDepartAirport'
     */
    @Test
    public void airlineLegDepartAirportTest() {
        // TODO: test airlineLegDepartAirport
    }

    /**
     * Test the property 'airlineLegDepartTax'
     */
    @Test
    public void airlineLegDepartTaxTest() {
        // TODO: test airlineLegDepartTax
    }

    /**
     * Test the property 'airlineLegDestinationCode'
     */
    @Test
    public void airlineLegDestinationCodeTest() {
        // TODO: test airlineLegDestinationCode
    }

    /**
     * Test the property 'airlineLegFareBaseCode'
     */
    @Test
    public void airlineLegFareBaseCodeTest() {
        // TODO: test airlineLegFareBaseCode
    }

    /**
     * Test the property 'airlineLegFlightNumber'
     */
    @Test
    public void airlineLegFlightNumberTest() {
        // TODO: test airlineLegFlightNumber
    }

    /**
     * Test the property 'airlineLegStopOverCode'
     */
    @Test
    public void airlineLegStopOverCodeTest() {
        // TODO: test airlineLegStopOverCode
    }

    /**
     * Test the property 'airlinePassengerDateOfBirth'
     */
    @Test
    public void airlinePassengerDateOfBirthTest() {
        // TODO: test airlinePassengerDateOfBirth
    }

    /**
     * Test the property 'airlinePassengerFirstName'
     */
    @Test
    public void airlinePassengerFirstNameTest() {
        // TODO: test airlinePassengerFirstName
    }

    /**
     * Test the property 'airlinePassengerLastName'
     */
    @Test
    public void airlinePassengerLastNameTest() {
        // TODO: test airlinePassengerLastName
    }

    /**
     * Test the property 'airlinePassengerTelephoneNumber'
     */
    @Test
    public void airlinePassengerTelephoneNumberTest() {
        // TODO: test airlinePassengerTelephoneNumber
    }

    /**
     * Test the property 'airlinePassengerTravellerType'
     */
    @Test
    public void airlinePassengerTravellerTypeTest() {
        // TODO: test airlinePassengerTravellerType
    }

    /**
     * Test the property 'airlinePassengerName'
     */
    @Test
    public void airlinePassengerNameTest() {
        // TODO: test airlinePassengerName
    }

    /**
     * Test the property 'airlineTicketIssueAddress'
     */
    @Test
    public void airlineTicketIssueAddressTest() {
        // TODO: test airlineTicketIssueAddress
    }

    /**
     * Test the property 'airlineTicketNumber'
     */
    @Test
    public void airlineTicketNumberTest() {
        // TODO: test airlineTicketNumber
    }

    /**
     * Test the property 'airlineTravelAgencyCode'
     */
    @Test
    public void airlineTravelAgencyCodeTest() {
        // TODO: test airlineTravelAgencyCode
    }

    /**
     * Test the property 'airlineTravelAgencyName'
     */
    @Test
    public void airlineTravelAgencyNameTest() {
        // TODO: test airlineTravelAgencyName
    }

}
