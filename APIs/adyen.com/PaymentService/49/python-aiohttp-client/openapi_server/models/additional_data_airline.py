# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AdditionalDataAirline(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, airline_agency_invoice_number: str=None, airline_agency_plan_name: str=None, airline_airline_code: str=None, airline_airline_designator_code: str=None, airline_boarding_fee: str=None, airline_computerized_reservation_system: str=None, airline_customer_reference_number: str=None, airline_document_type: str=None, airline_flight_date: str=None, airline_leg_carrier_code: str=None, airline_leg_class_of_travel: str=None, airline_leg_date_of_travel: str=None, airline_leg_depart_airport: str=None, airline_leg_depart_tax: str=None, airline_leg_destination_code: str=None, airline_leg_fare_base_code: str=None, airline_leg_flight_number: str=None, airline_leg_stop_over_code: str=None, airline_passenger_date_of_birth: str=None, airline_passenger_first_name: str=None, airline_passenger_last_name: str=None, airline_passenger_telephone_number: str=None, airline_passenger_traveller_type: str=None, airline_passenger_name: str=None, airline_ticket_issue_address: str=None, airline_ticket_number: str=None, airline_travel_agency_code: str=None, airline_travel_agency_name: str=None):
        """AdditionalDataAirline - a model defined in OpenAPI

        :param airline_agency_invoice_number: The airline_agency_invoice_number of this AdditionalDataAirline.
        :param airline_agency_plan_name: The airline_agency_plan_name of this AdditionalDataAirline.
        :param airline_airline_code: The airline_airline_code of this AdditionalDataAirline.
        :param airline_airline_designator_code: The airline_airline_designator_code of this AdditionalDataAirline.
        :param airline_boarding_fee: The airline_boarding_fee of this AdditionalDataAirline.
        :param airline_computerized_reservation_system: The airline_computerized_reservation_system of this AdditionalDataAirline.
        :param airline_customer_reference_number: The airline_customer_reference_number of this AdditionalDataAirline.
        :param airline_document_type: The airline_document_type of this AdditionalDataAirline.
        :param airline_flight_date: The airline_flight_date of this AdditionalDataAirline.
        :param airline_leg_carrier_code: The airline_leg_carrier_code of this AdditionalDataAirline.
        :param airline_leg_class_of_travel: The airline_leg_class_of_travel of this AdditionalDataAirline.
        :param airline_leg_date_of_travel: The airline_leg_date_of_travel of this AdditionalDataAirline.
        :param airline_leg_depart_airport: The airline_leg_depart_airport of this AdditionalDataAirline.
        :param airline_leg_depart_tax: The airline_leg_depart_tax of this AdditionalDataAirline.
        :param airline_leg_destination_code: The airline_leg_destination_code of this AdditionalDataAirline.
        :param airline_leg_fare_base_code: The airline_leg_fare_base_code of this AdditionalDataAirline.
        :param airline_leg_flight_number: The airline_leg_flight_number of this AdditionalDataAirline.
        :param airline_leg_stop_over_code: The airline_leg_stop_over_code of this AdditionalDataAirline.
        :param airline_passenger_date_of_birth: The airline_passenger_date_of_birth of this AdditionalDataAirline.
        :param airline_passenger_first_name: The airline_passenger_first_name of this AdditionalDataAirline.
        :param airline_passenger_last_name: The airline_passenger_last_name of this AdditionalDataAirline.
        :param airline_passenger_telephone_number: The airline_passenger_telephone_number of this AdditionalDataAirline.
        :param airline_passenger_traveller_type: The airline_passenger_traveller_type of this AdditionalDataAirline.
        :param airline_passenger_name: The airline_passenger_name of this AdditionalDataAirline.
        :param airline_ticket_issue_address: The airline_ticket_issue_address of this AdditionalDataAirline.
        :param airline_ticket_number: The airline_ticket_number of this AdditionalDataAirline.
        :param airline_travel_agency_code: The airline_travel_agency_code of this AdditionalDataAirline.
        :param airline_travel_agency_name: The airline_travel_agency_name of this AdditionalDataAirline.
        """
        self.openapi_types = {
            'airline_agency_invoice_number': str,
            'airline_agency_plan_name': str,
            'airline_airline_code': str,
            'airline_airline_designator_code': str,
            'airline_boarding_fee': str,
            'airline_computerized_reservation_system': str,
            'airline_customer_reference_number': str,
            'airline_document_type': str,
            'airline_flight_date': str,
            'airline_leg_carrier_code': str,
            'airline_leg_class_of_travel': str,
            'airline_leg_date_of_travel': str,
            'airline_leg_depart_airport': str,
            'airline_leg_depart_tax': str,
            'airline_leg_destination_code': str,
            'airline_leg_fare_base_code': str,
            'airline_leg_flight_number': str,
            'airline_leg_stop_over_code': str,
            'airline_passenger_date_of_birth': str,
            'airline_passenger_first_name': str,
            'airline_passenger_last_name': str,
            'airline_passenger_telephone_number': str,
            'airline_passenger_traveller_type': str,
            'airline_passenger_name': str,
            'airline_ticket_issue_address': str,
            'airline_ticket_number': str,
            'airline_travel_agency_code': str,
            'airline_travel_agency_name': str
        }

        self.attribute_map = {
            'airline_agency_invoice_number': 'airline.agency_invoice_number',
            'airline_agency_plan_name': 'airline.agency_plan_name',
            'airline_airline_code': 'airline.airline_code',
            'airline_airline_designator_code': 'airline.airline_designator_code',
            'airline_boarding_fee': 'airline.boarding_fee',
            'airline_computerized_reservation_system': 'airline.computerized_reservation_system',
            'airline_customer_reference_number': 'airline.customer_reference_number',
            'airline_document_type': 'airline.document_type',
            'airline_flight_date': 'airline.flight_date',
            'airline_leg_carrier_code': 'airline.leg.carrier_code',
            'airline_leg_class_of_travel': 'airline.leg.class_of_travel',
            'airline_leg_date_of_travel': 'airline.leg.date_of_travel',
            'airline_leg_depart_airport': 'airline.leg.depart_airport',
            'airline_leg_depart_tax': 'airline.leg.depart_tax',
            'airline_leg_destination_code': 'airline.leg.destination_code',
            'airline_leg_fare_base_code': 'airline.leg.fare_base_code',
            'airline_leg_flight_number': 'airline.leg.flight_number',
            'airline_leg_stop_over_code': 'airline.leg.stop_over_code',
            'airline_passenger_date_of_birth': 'airline.passenger.date_of_birth',
            'airline_passenger_first_name': 'airline.passenger.first_name',
            'airline_passenger_last_name': 'airline.passenger.last_name',
            'airline_passenger_telephone_number': 'airline.passenger.telephone_number',
            'airline_passenger_traveller_type': 'airline.passenger.traveller_type',
            'airline_passenger_name': 'airline.passenger_name',
            'airline_ticket_issue_address': 'airline.ticket_issue_address',
            'airline_ticket_number': 'airline.ticket_number',
            'airline_travel_agency_code': 'airline.travel_agency_code',
            'airline_travel_agency_name': 'airline.travel_agency_name'
        }

        self._airline_agency_invoice_number = airline_agency_invoice_number
        self._airline_agency_plan_name = airline_agency_plan_name
        self._airline_airline_code = airline_airline_code
        self._airline_airline_designator_code = airline_airline_designator_code
        self._airline_boarding_fee = airline_boarding_fee
        self._airline_computerized_reservation_system = airline_computerized_reservation_system
        self._airline_customer_reference_number = airline_customer_reference_number
        self._airline_document_type = airline_document_type
        self._airline_flight_date = airline_flight_date
        self._airline_leg_carrier_code = airline_leg_carrier_code
        self._airline_leg_class_of_travel = airline_leg_class_of_travel
        self._airline_leg_date_of_travel = airline_leg_date_of_travel
        self._airline_leg_depart_airport = airline_leg_depart_airport
        self._airline_leg_depart_tax = airline_leg_depart_tax
        self._airline_leg_destination_code = airline_leg_destination_code
        self._airline_leg_fare_base_code = airline_leg_fare_base_code
        self._airline_leg_flight_number = airline_leg_flight_number
        self._airline_leg_stop_over_code = airline_leg_stop_over_code
        self._airline_passenger_date_of_birth = airline_passenger_date_of_birth
        self._airline_passenger_first_name = airline_passenger_first_name
        self._airline_passenger_last_name = airline_passenger_last_name
        self._airline_passenger_telephone_number = airline_passenger_telephone_number
        self._airline_passenger_traveller_type = airline_passenger_traveller_type
        self._airline_passenger_name = airline_passenger_name
        self._airline_ticket_issue_address = airline_ticket_issue_address
        self._airline_ticket_number = airline_ticket_number
        self._airline_travel_agency_code = airline_travel_agency_code
        self._airline_travel_agency_name = airline_travel_agency_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AdditionalDataAirline':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AdditionalDataAirline of this AdditionalDataAirline.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def airline_agency_invoice_number(self):
        """Gets the airline_agency_invoice_number of this AdditionalDataAirline.

        The reference number for the invoice, issued by the agency. * Encoding: ASCII * minLength: 1 character * maxLength: 6 characters

        :return: The airline_agency_invoice_number of this AdditionalDataAirline.
        :rtype: str
        """
        return self._airline_agency_invoice_number

    @airline_agency_invoice_number.setter
    def airline_agency_invoice_number(self, airline_agency_invoice_number):
        """Sets the airline_agency_invoice_number of this AdditionalDataAirline.

        The reference number for the invoice, issued by the agency. * Encoding: ASCII * minLength: 1 character * maxLength: 6 characters

        :param airline_agency_invoice_number: The airline_agency_invoice_number of this AdditionalDataAirline.
        :type airline_agency_invoice_number: str
        """

        self._airline_agency_invoice_number = airline_agency_invoice_number

    @property
    def airline_agency_plan_name(self):
        """Gets the airline_agency_plan_name of this AdditionalDataAirline.

        The two-letter agency plan identifier. * Encoding: ASCII * minLength: 2 characters * maxLength: 2 characters

        :return: The airline_agency_plan_name of this AdditionalDataAirline.
        :rtype: str
        """
        return self._airline_agency_plan_name

    @airline_agency_plan_name.setter
    def airline_agency_plan_name(self, airline_agency_plan_name):
        """Sets the airline_agency_plan_name of this AdditionalDataAirline.

        The two-letter agency plan identifier. * Encoding: ASCII * minLength: 2 characters * maxLength: 2 characters

        :param airline_agency_plan_name: The airline_agency_plan_name of this AdditionalDataAirline.
        :type airline_agency_plan_name: str
        """

        self._airline_agency_plan_name = airline_agency_plan_name

    @property
    def airline_airline_code(self):
        """Gets the airline_airline_code of this AdditionalDataAirline.

        The [IATA](https://www.iata.org/services/pages/codes.aspx) 3-digit accounting code (PAX) that identifies the carrier. * Format: IATA 3-digit accounting code (PAX) * Example: KLM = 074 * minLength: 3 characters * maxLength: 3 characters * Must not be all spaces *Must not be all zeros.

        :return: The airline_airline_code of this AdditionalDataAirline.
        :rtype: str
        """
        return self._airline_airline_code

    @airline_airline_code.setter
    def airline_airline_code(self, airline_airline_code):
        """Sets the airline_airline_code of this AdditionalDataAirline.

        The [IATA](https://www.iata.org/services/pages/codes.aspx) 3-digit accounting code (PAX) that identifies the carrier. * Format: IATA 3-digit accounting code (PAX) * Example: KLM = 074 * minLength: 3 characters * maxLength: 3 characters * Must not be all spaces *Must not be all zeros.

        :param airline_airline_code: The airline_airline_code of this AdditionalDataAirline.
        :type airline_airline_code: str
        """

        self._airline_airline_code = airline_airline_code

    @property
    def airline_airline_designator_code(self):
        """Gets the airline_airline_designator_code of this AdditionalDataAirline.

        The [IATA](https://www.iata.org/services/pages/codes.aspx) 2-letter accounting code (PAX) that identifies the carrier. * Encoding: ASCII * Example: KLM = KL * minLength: 2 characters * maxLength: 2 characters * Must not be all spaces *Must not be all zeros.

        :return: The airline_airline_designator_code of this AdditionalDataAirline.
        :rtype: str
        """
        return self._airline_airline_designator_code

    @airline_airline_designator_code.setter
    def airline_airline_designator_code(self, airline_airline_designator_code):
        """Sets the airline_airline_designator_code of this AdditionalDataAirline.

        The [IATA](https://www.iata.org/services/pages/codes.aspx) 2-letter accounting code (PAX) that identifies the carrier. * Encoding: ASCII * Example: KLM = KL * minLength: 2 characters * maxLength: 2 characters * Must not be all spaces *Must not be all zeros.

        :param airline_airline_designator_code: The airline_airline_designator_code of this AdditionalDataAirline.
        :type airline_airline_designator_code: str
        """

        self._airline_airline_designator_code = airline_airline_designator_code

    @property
    def airline_boarding_fee(self):
        """Gets the airline_boarding_fee of this AdditionalDataAirline.

        The amount charged for boarding the plane, in [minor units](https://docs.adyen.com/development-resources/currency-codes). * Encoding: Numeric * minLength: 1 character * maxLength: 18 characters

        :return: The airline_boarding_fee of this AdditionalDataAirline.
        :rtype: str
        """
        return self._airline_boarding_fee

    @airline_boarding_fee.setter
    def airline_boarding_fee(self, airline_boarding_fee):
        """Sets the airline_boarding_fee of this AdditionalDataAirline.

        The amount charged for boarding the plane, in [minor units](https://docs.adyen.com/development-resources/currency-codes). * Encoding: Numeric * minLength: 1 character * maxLength: 18 characters

        :param airline_boarding_fee: The airline_boarding_fee of this AdditionalDataAirline.
        :type airline_boarding_fee: str
        """

        self._airline_boarding_fee = airline_boarding_fee

    @property
    def airline_computerized_reservation_system(self):
        """Gets the airline_computerized_reservation_system of this AdditionalDataAirline.

        The [CRS](https://en.wikipedia.org/wiki/Computer_reservation_system) used to make the reservation and purchase the ticket. * Encoding: ASCII * minLength: 4 characters * maxLength: 4 characters

        :return: The airline_computerized_reservation_system of this AdditionalDataAirline.
        :rtype: str
        """
        return self._airline_computerized_reservation_system

    @airline_computerized_reservation_system.setter
    def airline_computerized_reservation_system(self, airline_computerized_reservation_system):
        """Sets the airline_computerized_reservation_system of this AdditionalDataAirline.

        The [CRS](https://en.wikipedia.org/wiki/Computer_reservation_system) used to make the reservation and purchase the ticket. * Encoding: ASCII * minLength: 4 characters * maxLength: 4 characters

        :param airline_computerized_reservation_system: The airline_computerized_reservation_system of this AdditionalDataAirline.
        :type airline_computerized_reservation_system: str
        """

        self._airline_computerized_reservation_system = airline_computerized_reservation_system

    @property
    def airline_customer_reference_number(self):
        """Gets the airline_customer_reference_number of this AdditionalDataAirline.

        The alphanumeric customer reference number. * Encoding: ASCII * maxLength: 20 characters * If you send more than 20 characters, the customer reference number is truncated * Must not be all spaces

        :return: The airline_customer_reference_number of this AdditionalDataAirline.
        :rtype: str
        """
        return self._airline_customer_reference_number

    @airline_customer_reference_number.setter
    def airline_customer_reference_number(self, airline_customer_reference_number):
        """Sets the airline_customer_reference_number of this AdditionalDataAirline.

        The alphanumeric customer reference number. * Encoding: ASCII * maxLength: 20 characters * If you send more than 20 characters, the customer reference number is truncated * Must not be all spaces

        :param airline_customer_reference_number: The airline_customer_reference_number of this AdditionalDataAirline.
        :type airline_customer_reference_number: str
        """

        self._airline_customer_reference_number = airline_customer_reference_number

    @property
    def airline_document_type(self):
        """Gets the airline_document_type of this AdditionalDataAirline.

        A code that identifies the type of item bought. The description of the code can appear on credit card statements. * Encoding: ASCII * Example: Passenger ticket = 01 * minLength: 2 characters * maxLength: 2 characters

        :return: The airline_document_type of this AdditionalDataAirline.
        :rtype: str
        """
        return self._airline_document_type

    @airline_document_type.setter
    def airline_document_type(self, airline_document_type):
        """Sets the airline_document_type of this AdditionalDataAirline.

        A code that identifies the type of item bought. The description of the code can appear on credit card statements. * Encoding: ASCII * Example: Passenger ticket = 01 * minLength: 2 characters * maxLength: 2 characters

        :param airline_document_type: The airline_document_type of this AdditionalDataAirline.
        :type airline_document_type: str
        """

        self._airline_document_type = airline_document_type

    @property
    def airline_flight_date(self):
        """Gets the airline_flight_date of this AdditionalDataAirline.

        The flight departure date. Local time `(HH:mm)` is optional. * Date format: `yyyy-MM-dd` * Date and time format: `yyyy-MM-dd HH:mm` * minLength: 10 characters * maxLength: 16 characters

        :return: The airline_flight_date of this AdditionalDataAirline.
        :rtype: str
        """
        return self._airline_flight_date

    @airline_flight_date.setter
    def airline_flight_date(self, airline_flight_date):
        """Sets the airline_flight_date of this AdditionalDataAirline.

        The flight departure date. Local time `(HH:mm)` is optional. * Date format: `yyyy-MM-dd` * Date and time format: `yyyy-MM-dd HH:mm` * minLength: 10 characters * maxLength: 16 characters

        :param airline_flight_date: The airline_flight_date of this AdditionalDataAirline.
        :type airline_flight_date: str
        """

        self._airline_flight_date = airline_flight_date

    @property
    def airline_leg_carrier_code(self):
        """Gets the airline_leg_carrier_code of this AdditionalDataAirline.

        The [IATA](https://www.iata.org/services/pages/codes.aspx) 2-letter accounting code (PAX) that identifies the carrier. This field is required if the airline data includes leg details. * Example: KLM = KL * minLength: 2 characters * maxLength: 2 characters * Must not be all spaces *Must not be all zeros.

        :return: The airline_leg_carrier_code of this AdditionalDataAirline.
        :rtype: str
        """
        return self._airline_leg_carrier_code

    @airline_leg_carrier_code.setter
    def airline_leg_carrier_code(self, airline_leg_carrier_code):
        """Sets the airline_leg_carrier_code of this AdditionalDataAirline.

        The [IATA](https://www.iata.org/services/pages/codes.aspx) 2-letter accounting code (PAX) that identifies the carrier. This field is required if the airline data includes leg details. * Example: KLM = KL * minLength: 2 characters * maxLength: 2 characters * Must not be all spaces *Must not be all zeros.

        :param airline_leg_carrier_code: The airline_leg_carrier_code of this AdditionalDataAirline.
        :type airline_leg_carrier_code: str
        """

        self._airline_leg_carrier_code = airline_leg_carrier_code

    @property
    def airline_leg_class_of_travel(self):
        """Gets the airline_leg_class_of_travel of this AdditionalDataAirline.

        A one-letter travel class identifier.  The following are common:  * F: first class * J: business class * Y: economy class * W: premium economy  * Encoding: ASCII * minLength: 1 character * maxLength: 1 character * Must not be all spaces *Must not be all zeros.

        :return: The airline_leg_class_of_travel of this AdditionalDataAirline.
        :rtype: str
        """
        return self._airline_leg_class_of_travel

    @airline_leg_class_of_travel.setter
    def airline_leg_class_of_travel(self, airline_leg_class_of_travel):
        """Sets the airline_leg_class_of_travel of this AdditionalDataAirline.

        A one-letter travel class identifier.  The following are common:  * F: first class * J: business class * Y: economy class * W: premium economy  * Encoding: ASCII * minLength: 1 character * maxLength: 1 character * Must not be all spaces *Must not be all zeros.

        :param airline_leg_class_of_travel: The airline_leg_class_of_travel of this AdditionalDataAirline.
        :type airline_leg_class_of_travel: str
        """

        self._airline_leg_class_of_travel = airline_leg_class_of_travel

    @property
    def airline_leg_date_of_travel(self):
        """Gets the airline_leg_date_of_travel of this AdditionalDataAirline.

          Date and time of travel in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format `yyyy-MM-dd HH:mm`. * Encoding: ASCII * minLength: 16 characters * maxLength: 16 characters

        :return: The airline_leg_date_of_travel of this AdditionalDataAirline.
        :rtype: str
        """
        return self._airline_leg_date_of_travel

    @airline_leg_date_of_travel.setter
    def airline_leg_date_of_travel(self, airline_leg_date_of_travel):
        """Sets the airline_leg_date_of_travel of this AdditionalDataAirline.

          Date and time of travel in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format `yyyy-MM-dd HH:mm`. * Encoding: ASCII * minLength: 16 characters * maxLength: 16 characters

        :param airline_leg_date_of_travel: The airline_leg_date_of_travel of this AdditionalDataAirline.
        :type airline_leg_date_of_travel: str
        """

        self._airline_leg_date_of_travel = airline_leg_date_of_travel

    @property
    def airline_leg_depart_airport(self):
        """Gets the airline_leg_depart_airport of this AdditionalDataAirline.

        The [IATA](https://www.iata.org/services/pages/codes.aspx) three-letter airport code of the departure airport. This field is required if the airline data includes leg details.  * Encoding: ASCII * Example: Amsterdam = AMS * minLength: 3 characters * maxLength: 3 characters * Must not be all spaces *Must not be all zeros.

        :return: The airline_leg_depart_airport of this AdditionalDataAirline.
        :rtype: str
        """
        return self._airline_leg_depart_airport

    @airline_leg_depart_airport.setter
    def airline_leg_depart_airport(self, airline_leg_depart_airport):
        """Sets the airline_leg_depart_airport of this AdditionalDataAirline.

        The [IATA](https://www.iata.org/services/pages/codes.aspx) three-letter airport code of the departure airport. This field is required if the airline data includes leg details.  * Encoding: ASCII * Example: Amsterdam = AMS * minLength: 3 characters * maxLength: 3 characters * Must not be all spaces *Must not be all zeros.

        :param airline_leg_depart_airport: The airline_leg_depart_airport of this AdditionalDataAirline.
        :type airline_leg_depart_airport: str
        """

        self._airline_leg_depart_airport = airline_leg_depart_airport

    @property
    def airline_leg_depart_tax(self):
        """Gets the airline_leg_depart_tax of this AdditionalDataAirline.

        The amount of [departure tax](https://en.wikipedia.org/wiki/Departure_tax) charged, in [minor units](https://docs.adyen.com/development-resources/currency-codes). * Encoding: Numeric * minLength: 1 * maxLength: 12 *Must not be all zeros.

        :return: The airline_leg_depart_tax of this AdditionalDataAirline.
        :rtype: str
        """
        return self._airline_leg_depart_tax

    @airline_leg_depart_tax.setter
    def airline_leg_depart_tax(self, airline_leg_depart_tax):
        """Sets the airline_leg_depart_tax of this AdditionalDataAirline.

        The amount of [departure tax](https://en.wikipedia.org/wiki/Departure_tax) charged, in [minor units](https://docs.adyen.com/development-resources/currency-codes). * Encoding: Numeric * minLength: 1 * maxLength: 12 *Must not be all zeros.

        :param airline_leg_depart_tax: The airline_leg_depart_tax of this AdditionalDataAirline.
        :type airline_leg_depart_tax: str
        """

        self._airline_leg_depart_tax = airline_leg_depart_tax

    @property
    def airline_leg_destination_code(self):
        """Gets the airline_leg_destination_code of this AdditionalDataAirline.

        The [IATA](https://www.iata.org/services/pages/codes.aspx) 3-letter airport code of the destination airport. This field is required if the airline data includes leg details. * Example: Amsterdam = AMS * Encoding: ASCII * minLength: 3 characters * maxLength: 3 characters * Must not be all spaces *Must not be all zeros.

        :return: The airline_leg_destination_code of this AdditionalDataAirline.
        :rtype: str
        """
        return self._airline_leg_destination_code

    @airline_leg_destination_code.setter
    def airline_leg_destination_code(self, airline_leg_destination_code):
        """Sets the airline_leg_destination_code of this AdditionalDataAirline.

        The [IATA](https://www.iata.org/services/pages/codes.aspx) 3-letter airport code of the destination airport. This field is required if the airline data includes leg details. * Example: Amsterdam = AMS * Encoding: ASCII * minLength: 3 characters * maxLength: 3 characters * Must not be all spaces *Must not be all zeros.

        :param airline_leg_destination_code: The airline_leg_destination_code of this AdditionalDataAirline.
        :type airline_leg_destination_code: str
        """

        self._airline_leg_destination_code = airline_leg_destination_code

    @property
    def airline_leg_fare_base_code(self):
        """Gets the airline_leg_fare_base_code of this AdditionalDataAirline.

        The [fare basis code](https://en.wikipedia.org/wiki/Fare_basis_code), alphanumeric. * minLength: 1 character * maxLength: 6 characters * Must not be all spaces *Must not be all zeros.

        :return: The airline_leg_fare_base_code of this AdditionalDataAirline.
        :rtype: str
        """
        return self._airline_leg_fare_base_code

    @airline_leg_fare_base_code.setter
    def airline_leg_fare_base_code(self, airline_leg_fare_base_code):
        """Sets the airline_leg_fare_base_code of this AdditionalDataAirline.

        The [fare basis code](https://en.wikipedia.org/wiki/Fare_basis_code), alphanumeric. * minLength: 1 character * maxLength: 6 characters * Must not be all spaces *Must not be all zeros.

        :param airline_leg_fare_base_code: The airline_leg_fare_base_code of this AdditionalDataAirline.
        :type airline_leg_fare_base_code: str
        """

        self._airline_leg_fare_base_code = airline_leg_fare_base_code

    @property
    def airline_leg_flight_number(self):
        """Gets the airline_leg_flight_number of this AdditionalDataAirline.

        The flight identifier. * minLength: 1 character * maxLength: 5 characters * Must not be all spaces *Must not be all zeros.

        :return: The airline_leg_flight_number of this AdditionalDataAirline.
        :rtype: str
        """
        return self._airline_leg_flight_number

    @airline_leg_flight_number.setter
    def airline_leg_flight_number(self, airline_leg_flight_number):
        """Sets the airline_leg_flight_number of this AdditionalDataAirline.

        The flight identifier. * minLength: 1 character * maxLength: 5 characters * Must not be all spaces *Must not be all zeros.

        :param airline_leg_flight_number: The airline_leg_flight_number of this AdditionalDataAirline.
        :type airline_leg_flight_number: str
        """

        self._airline_leg_flight_number = airline_leg_flight_number

    @property
    def airline_leg_stop_over_code(self):
        """Gets the airline_leg_stop_over_code of this AdditionalDataAirline.

        A one-letter code that indicates whether the passenger is entitled to make a stopover. Can be a space, O if the passenger is entitled to make a stopover, or X if they are not. * Encoding: ASCII * minLength: 1 character * maxLength: 1 character

        :return: The airline_leg_stop_over_code of this AdditionalDataAirline.
        :rtype: str
        """
        return self._airline_leg_stop_over_code

    @airline_leg_stop_over_code.setter
    def airline_leg_stop_over_code(self, airline_leg_stop_over_code):
        """Sets the airline_leg_stop_over_code of this AdditionalDataAirline.

        A one-letter code that indicates whether the passenger is entitled to make a stopover. Can be a space, O if the passenger is entitled to make a stopover, or X if they are not. * Encoding: ASCII * minLength: 1 character * maxLength: 1 character

        :param airline_leg_stop_over_code: The airline_leg_stop_over_code of this AdditionalDataAirline.
        :type airline_leg_stop_over_code: str
        """

        self._airline_leg_stop_over_code = airline_leg_stop_over_code

    @property
    def airline_passenger_date_of_birth(self):
        """Gets the airline_passenger_date_of_birth of this AdditionalDataAirline.

        The passenger's date of birth.  Date format: `yyyy-MM-dd` * minLength: 10 * maxLength: 10

        :return: The airline_passenger_date_of_birth of this AdditionalDataAirline.
        :rtype: str
        """
        return self._airline_passenger_date_of_birth

    @airline_passenger_date_of_birth.setter
    def airline_passenger_date_of_birth(self, airline_passenger_date_of_birth):
        """Sets the airline_passenger_date_of_birth of this AdditionalDataAirline.

        The passenger's date of birth.  Date format: `yyyy-MM-dd` * minLength: 10 * maxLength: 10

        :param airline_passenger_date_of_birth: The airline_passenger_date_of_birth of this AdditionalDataAirline.
        :type airline_passenger_date_of_birth: str
        """

        self._airline_passenger_date_of_birth = airline_passenger_date_of_birth

    @property
    def airline_passenger_first_name(self):
        """Gets the airline_passenger_first_name of this AdditionalDataAirline.

        The passenger's first name. > This field is required if the airline data includes passenger details or leg details. * Encoding: ASCII

        :return: The airline_passenger_first_name of this AdditionalDataAirline.
        :rtype: str
        """
        return self._airline_passenger_first_name

    @airline_passenger_first_name.setter
    def airline_passenger_first_name(self, airline_passenger_first_name):
        """Sets the airline_passenger_first_name of this AdditionalDataAirline.

        The passenger's first name. > This field is required if the airline data includes passenger details or leg details. * Encoding: ASCII

        :param airline_passenger_first_name: The airline_passenger_first_name of this AdditionalDataAirline.
        :type airline_passenger_first_name: str
        """

        self._airline_passenger_first_name = airline_passenger_first_name

    @property
    def airline_passenger_last_name(self):
        """Gets the airline_passenger_last_name of this AdditionalDataAirline.

        The passenger's last name. > This field is required if the airline data includes passenger details or leg details. * Encoding: ASCII

        :return: The airline_passenger_last_name of this AdditionalDataAirline.
        :rtype: str
        """
        return self._airline_passenger_last_name

    @airline_passenger_last_name.setter
    def airline_passenger_last_name(self, airline_passenger_last_name):
        """Sets the airline_passenger_last_name of this AdditionalDataAirline.

        The passenger's last name. > This field is required if the airline data includes passenger details or leg details. * Encoding: ASCII

        :param airline_passenger_last_name: The airline_passenger_last_name of this AdditionalDataAirline.
        :type airline_passenger_last_name: str
        """

        self._airline_passenger_last_name = airline_passenger_last_name

    @property
    def airline_passenger_telephone_number(self):
        """Gets the airline_passenger_telephone_number of this AdditionalDataAirline.

        The passenger's telephone number, including country code. This is an alphanumeric field that can include the '+' and '-' signs. * Encoding: ASCII * minLength: 3 characters * maxLength: 30 characters

        :return: The airline_passenger_telephone_number of this AdditionalDataAirline.
        :rtype: str
        """
        return self._airline_passenger_telephone_number

    @airline_passenger_telephone_number.setter
    def airline_passenger_telephone_number(self, airline_passenger_telephone_number):
        """Sets the airline_passenger_telephone_number of this AdditionalDataAirline.

        The passenger's telephone number, including country code. This is an alphanumeric field that can include the '+' and '-' signs. * Encoding: ASCII * minLength: 3 characters * maxLength: 30 characters

        :param airline_passenger_telephone_number: The airline_passenger_telephone_number of this AdditionalDataAirline.
        :type airline_passenger_telephone_number: str
        """

        self._airline_passenger_telephone_number = airline_passenger_telephone_number

    @property
    def airline_passenger_traveller_type(self):
        """Gets the airline_passenger_traveller_type of this AdditionalDataAirline.

        The IATA passenger type code (PTC). * Encoding: ASCII * minLength: 3 characters * maxLength: 6 characters

        :return: The airline_passenger_traveller_type of this AdditionalDataAirline.
        :rtype: str
        """
        return self._airline_passenger_traveller_type

    @airline_passenger_traveller_type.setter
    def airline_passenger_traveller_type(self, airline_passenger_traveller_type):
        """Sets the airline_passenger_traveller_type of this AdditionalDataAirline.

        The IATA passenger type code (PTC). * Encoding: ASCII * minLength: 3 characters * maxLength: 6 characters

        :param airline_passenger_traveller_type: The airline_passenger_traveller_type of this AdditionalDataAirline.
        :type airline_passenger_traveller_type: str
        """

        self._airline_passenger_traveller_type = airline_passenger_traveller_type

    @property
    def airline_passenger_name(self):
        """Gets the airline_passenger_name of this AdditionalDataAirline.

        The passenger's name, initials, and title. * Format: last name + first name or initials + title * Example: *FLYER / MARY MS* * minLength: 1 character * maxLength: 20 characters * If you send more than 20 characters, the name is truncated * Must not be all spaces  *Must not be all zeros.

        :return: The airline_passenger_name of this AdditionalDataAirline.
        :rtype: str
        """
        return self._airline_passenger_name

    @airline_passenger_name.setter
    def airline_passenger_name(self, airline_passenger_name):
        """Sets the airline_passenger_name of this AdditionalDataAirline.

        The passenger's name, initials, and title. * Format: last name + first name or initials + title * Example: *FLYER / MARY MS* * minLength: 1 character * maxLength: 20 characters * If you send more than 20 characters, the name is truncated * Must not be all spaces  *Must not be all zeros.

        :param airline_passenger_name: The airline_passenger_name of this AdditionalDataAirline.
        :type airline_passenger_name: str
        """
        if airline_passenger_name is None:
            raise ValueError("Invalid value for `airline_passenger_name`, must not be `None`")

        self._airline_passenger_name = airline_passenger_name

    @property
    def airline_ticket_issue_address(self):
        """Gets the airline_ticket_issue_address of this AdditionalDataAirline.

        The address of the organization that issued the ticket. * minLength: 0 characters * maxLength: 16 characters

        :return: The airline_ticket_issue_address of this AdditionalDataAirline.
        :rtype: str
        """
        return self._airline_ticket_issue_address

    @airline_ticket_issue_address.setter
    def airline_ticket_issue_address(self, airline_ticket_issue_address):
        """Sets the airline_ticket_issue_address of this AdditionalDataAirline.

        The address of the organization that issued the ticket. * minLength: 0 characters * maxLength: 16 characters

        :param airline_ticket_issue_address: The airline_ticket_issue_address of this AdditionalDataAirline.
        :type airline_ticket_issue_address: str
        """

        self._airline_ticket_issue_address = airline_ticket_issue_address

    @property
    def airline_ticket_number(self):
        """Gets the airline_ticket_number of this AdditionalDataAirline.

        The ticket's unique identifier. * minLength: 1 character * maxLength: 15 characters * Must not be all spaces *Must not be all zeros.

        :return: The airline_ticket_number of this AdditionalDataAirline.
        :rtype: str
        """
        return self._airline_ticket_number

    @airline_ticket_number.setter
    def airline_ticket_number(self, airline_ticket_number):
        """Sets the airline_ticket_number of this AdditionalDataAirline.

        The ticket's unique identifier. * minLength: 1 character * maxLength: 15 characters * Must not be all spaces *Must not be all zeros.

        :param airline_ticket_number: The airline_ticket_number of this AdditionalDataAirline.
        :type airline_ticket_number: str
        """

        self._airline_ticket_number = airline_ticket_number

    @property
    def airline_travel_agency_code(self):
        """Gets the airline_travel_agency_code of this AdditionalDataAirline.

        The unique identifier from IATA or ARC for the travel agency that issues the ticket. * Encoding: ASCII * minLength: 1 character * maxLength: 8 characters * Must not be all spaces *Must not be all zeros.

        :return: The airline_travel_agency_code of this AdditionalDataAirline.
        :rtype: str
        """
        return self._airline_travel_agency_code

    @airline_travel_agency_code.setter
    def airline_travel_agency_code(self, airline_travel_agency_code):
        """Sets the airline_travel_agency_code of this AdditionalDataAirline.

        The unique identifier from IATA or ARC for the travel agency that issues the ticket. * Encoding: ASCII * minLength: 1 character * maxLength: 8 characters * Must not be all spaces *Must not be all zeros.

        :param airline_travel_agency_code: The airline_travel_agency_code of this AdditionalDataAirline.
        :type airline_travel_agency_code: str
        """

        self._airline_travel_agency_code = airline_travel_agency_code

    @property
    def airline_travel_agency_name(self):
        """Gets the airline_travel_agency_name of this AdditionalDataAirline.

        The name of the travel agency.  * Encoding: ASCII * minLength: 1 character * maxLength: 25 characters * Must not be all spaces *Must not be all zeros.

        :return: The airline_travel_agency_name of this AdditionalDataAirline.
        :rtype: str
        """
        return self._airline_travel_agency_name

    @airline_travel_agency_name.setter
    def airline_travel_agency_name(self, airline_travel_agency_name):
        """Sets the airline_travel_agency_name of this AdditionalDataAirline.

        The name of the travel agency.  * Encoding: ASCII * minLength: 1 character * maxLength: 25 characters * Must not be all spaces *Must not be all zeros.

        :param airline_travel_agency_name: The airline_travel_agency_name of this AdditionalDataAirline.
        :type airline_travel_agency_name: str
        """

        self._airline_travel_agency_name = airline_travel_agency_name
