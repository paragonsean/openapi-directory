/**
 * Adyen Payment API
 * A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.  To learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).  ## Authentication You need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.  If using an API key, add an `X-API-Key` header with the API key as the value, for example:   ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ```  Alternatively, you can use the username and password to connect to the API using basic authentication, for example:  ``` curl -U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\ -H \"Content-Type: application/json\" \\ ... ```  ## Versioning Payments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://pal-test.adyen.com/pal/servlet/Payment/v49/authorise ```  ## Going live  To authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.  The live endpoint URLs contain a prefix which is unique to your company account: ```  https://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payment/v49/authorise ```  Get your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.
 *
 * The version of the OpenAPI document: 49
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIResponseAdditionalDataInstallments.h
 *
 * 
 */

#ifndef OAIResponseAdditionalDataInstallments_H
#define OAIResponseAdditionalDataInstallments_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIResponseAdditionalDataInstallments : public OAIObject {
public:
    OAIResponseAdditionalDataInstallments();
    OAIResponseAdditionalDataInstallments(QString json);
    ~OAIResponseAdditionalDataInstallments() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getInstallmentPaymentDataInstallmentType() const;
    void setInstallmentPaymentDataInstallmentType(const QString &installment_payment_data_installment_type);
    bool is_installment_payment_data_installment_type_Set() const;
    bool is_installment_payment_data_installment_type_Valid() const;

    QString getInstallmentPaymentDataOptionItemNrAnnualPercentageRate() const;
    void setInstallmentPaymentDataOptionItemNrAnnualPercentageRate(const QString &installment_payment_data_option_item_nr_annual_percentage_rate);
    bool is_installment_payment_data_option_item_nr_annual_percentage_rate_Set() const;
    bool is_installment_payment_data_option_item_nr_annual_percentage_rate_Valid() const;

    QString getInstallmentPaymentDataOptionItemNrFirstInstallmentAmount() const;
    void setInstallmentPaymentDataOptionItemNrFirstInstallmentAmount(const QString &installment_payment_data_option_item_nr_first_installment_amount);
    bool is_installment_payment_data_option_item_nr_first_installment_amount_Set() const;
    bool is_installment_payment_data_option_item_nr_first_installment_amount_Valid() const;

    QString getInstallmentPaymentDataOptionItemNrInstallmentFee() const;
    void setInstallmentPaymentDataOptionItemNrInstallmentFee(const QString &installment_payment_data_option_item_nr_installment_fee);
    bool is_installment_payment_data_option_item_nr_installment_fee_Set() const;
    bool is_installment_payment_data_option_item_nr_installment_fee_Valid() const;

    QString getInstallmentPaymentDataOptionItemNrInterestRate() const;
    void setInstallmentPaymentDataOptionItemNrInterestRate(const QString &installment_payment_data_option_item_nr_interest_rate);
    bool is_installment_payment_data_option_item_nr_interest_rate_Set() const;
    bool is_installment_payment_data_option_item_nr_interest_rate_Valid() const;

    QString getInstallmentPaymentDataOptionItemNrMaximumNumberOfInstallments() const;
    void setInstallmentPaymentDataOptionItemNrMaximumNumberOfInstallments(const QString &installment_payment_data_option_item_nr_maximum_number_of_installments);
    bool is_installment_payment_data_option_item_nr_maximum_number_of_installments_Set() const;
    bool is_installment_payment_data_option_item_nr_maximum_number_of_installments_Valid() const;

    QString getInstallmentPaymentDataOptionItemNrMinimumNumberOfInstallments() const;
    void setInstallmentPaymentDataOptionItemNrMinimumNumberOfInstallments(const QString &installment_payment_data_option_item_nr_minimum_number_of_installments);
    bool is_installment_payment_data_option_item_nr_minimum_number_of_installments_Set() const;
    bool is_installment_payment_data_option_item_nr_minimum_number_of_installments_Valid() const;

    QString getInstallmentPaymentDataOptionItemNrNumberOfInstallments() const;
    void setInstallmentPaymentDataOptionItemNrNumberOfInstallments(const QString &installment_payment_data_option_item_nr_number_of_installments);
    bool is_installment_payment_data_option_item_nr_number_of_installments_Set() const;
    bool is_installment_payment_data_option_item_nr_number_of_installments_Valid() const;

    QString getInstallmentPaymentDataOptionItemNrSubsequentInstallmentAmount() const;
    void setInstallmentPaymentDataOptionItemNrSubsequentInstallmentAmount(const QString &installment_payment_data_option_item_nr_subsequent_installment_amount);
    bool is_installment_payment_data_option_item_nr_subsequent_installment_amount_Set() const;
    bool is_installment_payment_data_option_item_nr_subsequent_installment_amount_Valid() const;

    QString getInstallmentPaymentDataOptionItemNrTotalAmountDue() const;
    void setInstallmentPaymentDataOptionItemNrTotalAmountDue(const QString &installment_payment_data_option_item_nr_total_amount_due);
    bool is_installment_payment_data_option_item_nr_total_amount_due_Set() const;
    bool is_installment_payment_data_option_item_nr_total_amount_due_Valid() const;

    QString getInstallmentPaymentDataPaymentOptions() const;
    void setInstallmentPaymentDataPaymentOptions(const QString &installment_payment_data_payment_options);
    bool is_installment_payment_data_payment_options_Set() const;
    bool is_installment_payment_data_payment_options_Valid() const;

    QString getInstallmentsValue() const;
    void setInstallmentsValue(const QString &installments_value);
    bool is_installments_value_Set() const;
    bool is_installments_value_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_installment_payment_data_installment_type;
    bool m_installment_payment_data_installment_type_isSet;
    bool m_installment_payment_data_installment_type_isValid;

    QString m_installment_payment_data_option_item_nr_annual_percentage_rate;
    bool m_installment_payment_data_option_item_nr_annual_percentage_rate_isSet;
    bool m_installment_payment_data_option_item_nr_annual_percentage_rate_isValid;

    QString m_installment_payment_data_option_item_nr_first_installment_amount;
    bool m_installment_payment_data_option_item_nr_first_installment_amount_isSet;
    bool m_installment_payment_data_option_item_nr_first_installment_amount_isValid;

    QString m_installment_payment_data_option_item_nr_installment_fee;
    bool m_installment_payment_data_option_item_nr_installment_fee_isSet;
    bool m_installment_payment_data_option_item_nr_installment_fee_isValid;

    QString m_installment_payment_data_option_item_nr_interest_rate;
    bool m_installment_payment_data_option_item_nr_interest_rate_isSet;
    bool m_installment_payment_data_option_item_nr_interest_rate_isValid;

    QString m_installment_payment_data_option_item_nr_maximum_number_of_installments;
    bool m_installment_payment_data_option_item_nr_maximum_number_of_installments_isSet;
    bool m_installment_payment_data_option_item_nr_maximum_number_of_installments_isValid;

    QString m_installment_payment_data_option_item_nr_minimum_number_of_installments;
    bool m_installment_payment_data_option_item_nr_minimum_number_of_installments_isSet;
    bool m_installment_payment_data_option_item_nr_minimum_number_of_installments_isValid;

    QString m_installment_payment_data_option_item_nr_number_of_installments;
    bool m_installment_payment_data_option_item_nr_number_of_installments_isSet;
    bool m_installment_payment_data_option_item_nr_number_of_installments_isValid;

    QString m_installment_payment_data_option_item_nr_subsequent_installment_amount;
    bool m_installment_payment_data_option_item_nr_subsequent_installment_amount_isSet;
    bool m_installment_payment_data_option_item_nr_subsequent_installment_amount_isValid;

    QString m_installment_payment_data_option_item_nr_total_amount_due;
    bool m_installment_payment_data_option_item_nr_total_amount_due_isSet;
    bool m_installment_payment_data_option_item_nr_total_amount_due_isValid;

    QString m_installment_payment_data_payment_options;
    bool m_installment_payment_data_payment_options_isSet;
    bool m_installment_payment_data_payment_options_isValid;

    QString m_installments_value;
    bool m_installments_value_isSet;
    bool m_installments_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIResponseAdditionalDataInstallments)

#endif // OAIResponseAdditionalDataInstallments_H
