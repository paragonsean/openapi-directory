/**
 * Adyen Payment API
 * A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.  To learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).  ## Authentication You need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.  If using an API key, add an `X-API-Key` header with the API key as the value, for example:   ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ```  Alternatively, you can use the username and password to connect to the API using basic authentication, for example:  ``` curl -U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\ -H \"Content-Type: application/json\" \\ ... ```  ## Versioning Payments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://pal-test.adyen.com/pal/servlet/Payment/v49/authorise ```  ## Going live  To authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.  The live endpoint URLs contain a prefix which is unique to your company account: ```  https://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payment/v49/authorise ```  Get your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.
 *
 * The version of the OpenAPI document: 49
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAdditionalDataTemporaryServices.h
 *
 * 
 */

#ifndef OAIAdditionalDataTemporaryServices_H
#define OAIAdditionalDataTemporaryServices_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAdditionalDataTemporaryServices : public OAIObject {
public:
    OAIAdditionalDataTemporaryServices();
    OAIAdditionalDataTemporaryServices(QString json);
    ~OAIAdditionalDataTemporaryServices() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getEnhancedSchemeDataCustomerReference() const;
    void setEnhancedSchemeDataCustomerReference(const QString &enhanced_scheme_data_customer_reference);
    bool is_enhanced_scheme_data_customer_reference_Set() const;
    bool is_enhanced_scheme_data_customer_reference_Valid() const;

    QString getEnhancedSchemeDataEmployeeName() const;
    void setEnhancedSchemeDataEmployeeName(const QString &enhanced_scheme_data_employee_name);
    bool is_enhanced_scheme_data_employee_name_Set() const;
    bool is_enhanced_scheme_data_employee_name_Valid() const;

    QString getEnhancedSchemeDataJobDescription() const;
    void setEnhancedSchemeDataJobDescription(const QString &enhanced_scheme_data_job_description);
    bool is_enhanced_scheme_data_job_description_Set() const;
    bool is_enhanced_scheme_data_job_description_Valid() const;

    QString getEnhancedSchemeDataRegularHoursRate() const;
    void setEnhancedSchemeDataRegularHoursRate(const QString &enhanced_scheme_data_regular_hours_rate);
    bool is_enhanced_scheme_data_regular_hours_rate_Set() const;
    bool is_enhanced_scheme_data_regular_hours_rate_Valid() const;

    QString getEnhancedSchemeDataRegularHoursWorked() const;
    void setEnhancedSchemeDataRegularHoursWorked(const QString &enhanced_scheme_data_regular_hours_worked);
    bool is_enhanced_scheme_data_regular_hours_worked_Set() const;
    bool is_enhanced_scheme_data_regular_hours_worked_Valid() const;

    QString getEnhancedSchemeDataRequestName() const;
    void setEnhancedSchemeDataRequestName(const QString &enhanced_scheme_data_request_name);
    bool is_enhanced_scheme_data_request_name_Set() const;
    bool is_enhanced_scheme_data_request_name_Valid() const;

    QString getEnhancedSchemeDataTempStartDate() const;
    void setEnhancedSchemeDataTempStartDate(const QString &enhanced_scheme_data_temp_start_date);
    bool is_enhanced_scheme_data_temp_start_date_Set() const;
    bool is_enhanced_scheme_data_temp_start_date_Valid() const;

    QString getEnhancedSchemeDataTempWeekEnding() const;
    void setEnhancedSchemeDataTempWeekEnding(const QString &enhanced_scheme_data_temp_week_ending);
    bool is_enhanced_scheme_data_temp_week_ending_Set() const;
    bool is_enhanced_scheme_data_temp_week_ending_Valid() const;

    QString getEnhancedSchemeDataTotalTaxAmount() const;
    void setEnhancedSchemeDataTotalTaxAmount(const QString &enhanced_scheme_data_total_tax_amount);
    bool is_enhanced_scheme_data_total_tax_amount_Set() const;
    bool is_enhanced_scheme_data_total_tax_amount_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_enhanced_scheme_data_customer_reference;
    bool m_enhanced_scheme_data_customer_reference_isSet;
    bool m_enhanced_scheme_data_customer_reference_isValid;

    QString m_enhanced_scheme_data_employee_name;
    bool m_enhanced_scheme_data_employee_name_isSet;
    bool m_enhanced_scheme_data_employee_name_isValid;

    QString m_enhanced_scheme_data_job_description;
    bool m_enhanced_scheme_data_job_description_isSet;
    bool m_enhanced_scheme_data_job_description_isValid;

    QString m_enhanced_scheme_data_regular_hours_rate;
    bool m_enhanced_scheme_data_regular_hours_rate_isSet;
    bool m_enhanced_scheme_data_regular_hours_rate_isValid;

    QString m_enhanced_scheme_data_regular_hours_worked;
    bool m_enhanced_scheme_data_regular_hours_worked_isSet;
    bool m_enhanced_scheme_data_regular_hours_worked_isValid;

    QString m_enhanced_scheme_data_request_name;
    bool m_enhanced_scheme_data_request_name_isSet;
    bool m_enhanced_scheme_data_request_name_isValid;

    QString m_enhanced_scheme_data_temp_start_date;
    bool m_enhanced_scheme_data_temp_start_date_isSet;
    bool m_enhanced_scheme_data_temp_start_date_isValid;

    QString m_enhanced_scheme_data_temp_week_ending;
    bool m_enhanced_scheme_data_temp_week_ending_isSet;
    bool m_enhanced_scheme_data_temp_week_ending_isValid;

    QString m_enhanced_scheme_data_total_tax_amount;
    bool m_enhanced_scheme_data_total_tax_amount_isSet;
    bool m_enhanced_scheme_data_total_tax_amount_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAdditionalDataTemporaryServices)

#endif // OAIAdditionalDataTemporaryServices_H
