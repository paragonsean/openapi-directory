/**
 * Adyen Payment API
 * A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.  To learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).  ## Authentication You need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.  If using an API key, add an `X-API-Key` header with the API key as the value, for example:   ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ```  Alternatively, you can use the username and password to connect to the API using basic authentication, for example:  ``` curl -U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\ -H \"Content-Type: application/json\" \\ ... ```  ## Versioning Payments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://pal-test.adyen.com/pal/servlet/Payment/v49/authorise ```  ## Going live  To authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.  The live endpoint URLs contain a prefix which is unique to your company account: ```  https://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payment/v49/authorise ```  Get your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.
 *
 * The version of the OpenAPI document: 49
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPaymentResult.h
 *
 * 
 */

#ifndef OAIPaymentResult_H
#define OAIPaymentResult_H

#include <QJsonObject>

#include "OAIAmount.h"
#include "OAIFraudResult.h"
#include "OAIPaymentResult_additionalData.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPaymentResult_additionalData;
class OAIAmount;
class OAIFraudResult;

class OAIPaymentResult : public OAIObject {
public:
    OAIPaymentResult();
    OAIPaymentResult(QString json);
    ~OAIPaymentResult() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIPaymentResult_additionalData getAdditionalData() const;
    void setAdditionalData(const OAIPaymentResult_additionalData &additional_data);
    bool is_additional_data_Set() const;
    bool is_additional_data_Valid() const;

    QString getAuthCode() const;
    void setAuthCode(const QString &auth_code);
    bool is_auth_code_Set() const;
    bool is_auth_code_Valid() const;

    OAIAmount getDccAmount() const;
    void setDccAmount(const OAIAmount &dcc_amount);
    bool is_dcc_amount_Set() const;
    bool is_dcc_amount_Valid() const;

    QString getDccSignature() const;
    void setDccSignature(const QString &dcc_signature);
    bool is_dcc_signature_Set() const;
    bool is_dcc_signature_Valid() const;

    OAIFraudResult getFraudResult() const;
    void setFraudResult(const OAIFraudResult &fraud_result);
    bool is_fraud_result_Set() const;
    bool is_fraud_result_Valid() const;

    QString getIssuerUrl() const;
    void setIssuerUrl(const QString &issuer_url);
    bool is_issuer_url_Set() const;
    bool is_issuer_url_Valid() const;

    QString getMd() const;
    void setMd(const QString &md);
    bool is_md_Set() const;
    bool is_md_Valid() const;

    QString getPaRequest() const;
    void setPaRequest(const QString &pa_request);
    bool is_pa_request_Set() const;
    bool is_pa_request_Valid() const;

    QString getPspReference() const;
    void setPspReference(const QString &psp_reference);
    bool is_psp_reference_Set() const;
    bool is_psp_reference_Valid() const;

    QString getRefusalReason() const;
    void setRefusalReason(const QString &refusal_reason);
    bool is_refusal_reason_Set() const;
    bool is_refusal_reason_Valid() const;

    QString getResultCode() const;
    void setResultCode(const QString &result_code);
    bool is_result_code_Set() const;
    bool is_result_code_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIPaymentResult_additionalData m_additional_data;
    bool m_additional_data_isSet;
    bool m_additional_data_isValid;

    QString m_auth_code;
    bool m_auth_code_isSet;
    bool m_auth_code_isValid;

    OAIAmount m_dcc_amount;
    bool m_dcc_amount_isSet;
    bool m_dcc_amount_isValid;

    QString m_dcc_signature;
    bool m_dcc_signature_isSet;
    bool m_dcc_signature_isValid;

    OAIFraudResult m_fraud_result;
    bool m_fraud_result_isSet;
    bool m_fraud_result_isValid;

    QString m_issuer_url;
    bool m_issuer_url_isSet;
    bool m_issuer_url_isValid;

    QString m_md;
    bool m_md_isSet;
    bool m_md_isValid;

    QString m_pa_request;
    bool m_pa_request_isSet;
    bool m_pa_request_isValid;

    QString m_psp_reference;
    bool m_psp_reference_isSet;
    bool m_psp_reference_isValid;

    QString m_refusal_reason;
    bool m_refusal_reason_isSet;
    bool m_refusal_reason_isValid;

    QString m_result_code;
    bool m_result_code_isSet;
    bool m_result_code_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPaymentResult)

#endif // OAIPaymentResult_H
