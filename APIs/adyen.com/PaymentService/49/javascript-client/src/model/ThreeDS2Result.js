/**
 * Adyen Payment API
 * A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.  To learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).  ## Authentication You need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.  If using an API key, add an `X-API-Key` header with the API key as the value, for example:   ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ```  Alternatively, you can use the username and password to connect to the API using basic authentication, for example:  ``` curl -U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\ -H \"Content-Type: application/json\" \\ ... ```  ## Versioning Payments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://pal-test.adyen.com/pal/servlet/Payment/v49/authorise ```  ## Going live  To authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.  The live endpoint URLs contain a prefix which is unique to your company account: ```  https://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payment/v49/authorise ```  Get your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.
 *
 * The version of the OpenAPI document: 49
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ThreeDS2Result model module.
 * @module model/ThreeDS2Result
 * @version 49
 */
class ThreeDS2Result {
    /**
     * Constructs a new <code>ThreeDS2Result</code>.
     * @alias module:model/ThreeDS2Result
     */
    constructor() { 
        
        ThreeDS2Result.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ThreeDS2Result</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ThreeDS2Result} obj Optional instance to populate.
     * @return {module:model/ThreeDS2Result} The populated <code>ThreeDS2Result</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ThreeDS2Result();

            if (data.hasOwnProperty('authenticationValue')) {
                obj['authenticationValue'] = ApiClient.convertToType(data['authenticationValue'], 'String');
            }
            if (data.hasOwnProperty('dsTransID')) {
                obj['dsTransID'] = ApiClient.convertToType(data['dsTransID'], 'String');
            }
            if (data.hasOwnProperty('eci')) {
                obj['eci'] = ApiClient.convertToType(data['eci'], 'String');
            }
            if (data.hasOwnProperty('messageVersion')) {
                obj['messageVersion'] = ApiClient.convertToType(data['messageVersion'], 'String');
            }
            if (data.hasOwnProperty('threeDSServerTransID')) {
                obj['threeDSServerTransID'] = ApiClient.convertToType(data['threeDSServerTransID'], 'String');
            }
            if (data.hasOwnProperty('timestamp')) {
                obj['timestamp'] = ApiClient.convertToType(data['timestamp'], 'String');
            }
            if (data.hasOwnProperty('transStatus')) {
                obj['transStatus'] = ApiClient.convertToType(data['transStatus'], 'String');
            }
            if (data.hasOwnProperty('transStatusReason')) {
                obj['transStatusReason'] = ApiClient.convertToType(data['transStatusReason'], 'String');
            }
            if (data.hasOwnProperty('whiteListStatus')) {
                obj['whiteListStatus'] = ApiClient.convertToType(data['whiteListStatus'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ThreeDS2Result</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ThreeDS2Result</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['authenticationValue'] && !(typeof data['authenticationValue'] === 'string' || data['authenticationValue'] instanceof String)) {
            throw new Error("Expected the field `authenticationValue` to be a primitive type in the JSON string but got " + data['authenticationValue']);
        }
        // ensure the json data is a string
        if (data['dsTransID'] && !(typeof data['dsTransID'] === 'string' || data['dsTransID'] instanceof String)) {
            throw new Error("Expected the field `dsTransID` to be a primitive type in the JSON string but got " + data['dsTransID']);
        }
        // ensure the json data is a string
        if (data['eci'] && !(typeof data['eci'] === 'string' || data['eci'] instanceof String)) {
            throw new Error("Expected the field `eci` to be a primitive type in the JSON string but got " + data['eci']);
        }
        // ensure the json data is a string
        if (data['messageVersion'] && !(typeof data['messageVersion'] === 'string' || data['messageVersion'] instanceof String)) {
            throw new Error("Expected the field `messageVersion` to be a primitive type in the JSON string but got " + data['messageVersion']);
        }
        // ensure the json data is a string
        if (data['threeDSServerTransID'] && !(typeof data['threeDSServerTransID'] === 'string' || data['threeDSServerTransID'] instanceof String)) {
            throw new Error("Expected the field `threeDSServerTransID` to be a primitive type in the JSON string but got " + data['threeDSServerTransID']);
        }
        // ensure the json data is a string
        if (data['timestamp'] && !(typeof data['timestamp'] === 'string' || data['timestamp'] instanceof String)) {
            throw new Error("Expected the field `timestamp` to be a primitive type in the JSON string but got " + data['timestamp']);
        }
        // ensure the json data is a string
        if (data['transStatus'] && !(typeof data['transStatus'] === 'string' || data['transStatus'] instanceof String)) {
            throw new Error("Expected the field `transStatus` to be a primitive type in the JSON string but got " + data['transStatus']);
        }
        // ensure the json data is a string
        if (data['transStatusReason'] && !(typeof data['transStatusReason'] === 'string' || data['transStatusReason'] instanceof String)) {
            throw new Error("Expected the field `transStatusReason` to be a primitive type in the JSON string but got " + data['transStatusReason']);
        }
        // ensure the json data is a string
        if (data['whiteListStatus'] && !(typeof data['whiteListStatus'] === 'string' || data['whiteListStatus'] instanceof String)) {
            throw new Error("Expected the field `whiteListStatus` to be a primitive type in the JSON string but got " + data['whiteListStatus']);
        }

        return true;
    }


}



/**
 * The `authenticationValue` value as defined in the 3D Secure 2 specification.
 * @member {String} authenticationValue
 */
ThreeDS2Result.prototype['authenticationValue'] = undefined;

/**
 * The `dsTransID` value as defined in the 3D Secure 2 specification.
 * @member {String} dsTransID
 */
ThreeDS2Result.prototype['dsTransID'] = undefined;

/**
 * The `eci` value as defined in the 3D Secure 2 specification.
 * @member {String} eci
 */
ThreeDS2Result.prototype['eci'] = undefined;

/**
 * The `messageVersion` value as defined in the 3D Secure 2 specification.
 * @member {String} messageVersion
 */
ThreeDS2Result.prototype['messageVersion'] = undefined;

/**
 * The `threeDSServerTransID` value as defined in the 3D Secure 2 specification.
 * @member {String} threeDSServerTransID
 */
ThreeDS2Result.prototype['threeDSServerTransID'] = undefined;

/**
 * The `timestamp` value of the 3D Secure 2 authentication.
 * @member {String} timestamp
 */
ThreeDS2Result.prototype['timestamp'] = undefined;

/**
 * The `transStatus` value as defined in the 3D Secure 2 specification.
 * @member {String} transStatus
 */
ThreeDS2Result.prototype['transStatus'] = undefined;

/**
 * Provides information on why the `transStatus` field has the specified value. For possible values, refer to [our docs](https://docs.adyen.com/online-payments/3d-secure/api-reference#possible-transstatusreason-values).
 * @member {String} transStatusReason
 */
ThreeDS2Result.prototype['transStatusReason'] = undefined;

/**
 * The `whiteListStatus` value as defined in the 3D Secure 2 specification.
 * @member {String} whiteListStatus
 */
ThreeDS2Result.prototype['whiteListStatus'] = undefined;






export default ThreeDS2Result;

