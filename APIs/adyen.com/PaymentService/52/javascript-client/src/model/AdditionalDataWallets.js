/**
 * Adyen Payment API
 * A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.  To learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).  ## Authentication You need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.  If using an API key, add an `X-API-Key` header with the API key as the value, for example:   ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ```  Alternatively, you can use the username and password to connect to the API using basic authentication, for example:  ``` curl -U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\ -H \"Content-Type: application/json\" \\ ... ```  ## Versioning Payments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://pal-test.adyen.com/pal/servlet/Payment/v52/authorise ```  ## Going live  To authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.  The live endpoint URLs contain a prefix which is unique to your company account: ```  https://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payment/v52/authorise ```  Get your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.
 *
 * The version of the OpenAPI document: 52
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AdditionalDataWallets model module.
 * @module model/AdditionalDataWallets
 * @version 52
 */
class AdditionalDataWallets {
    /**
     * Constructs a new <code>AdditionalDataWallets</code>.
     * @alias module:model/AdditionalDataWallets
     */
    constructor() { 
        
        AdditionalDataWallets.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AdditionalDataWallets</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AdditionalDataWallets} obj Optional instance to populate.
     * @return {module:model/AdditionalDataWallets} The populated <code>AdditionalDataWallets</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AdditionalDataWallets();

            if (data.hasOwnProperty('androidpay.token')) {
                obj['androidpay.token'] = ApiClient.convertToType(data['androidpay.token'], 'String');
            }
            if (data.hasOwnProperty('masterpass.transactionId')) {
                obj['masterpass.transactionId'] = ApiClient.convertToType(data['masterpass.transactionId'], 'String');
            }
            if (data.hasOwnProperty('payment.token')) {
                obj['payment.token'] = ApiClient.convertToType(data['payment.token'], 'String');
            }
            if (data.hasOwnProperty('paywithgoogle.token')) {
                obj['paywithgoogle.token'] = ApiClient.convertToType(data['paywithgoogle.token'], 'String');
            }
            if (data.hasOwnProperty('samsungpay.token')) {
                obj['samsungpay.token'] = ApiClient.convertToType(data['samsungpay.token'], 'String');
            }
            if (data.hasOwnProperty('visacheckout.callId')) {
                obj['visacheckout.callId'] = ApiClient.convertToType(data['visacheckout.callId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AdditionalDataWallets</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AdditionalDataWallets</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['androidpay.token'] && !(typeof data['androidpay.token'] === 'string' || data['androidpay.token'] instanceof String)) {
            throw new Error("Expected the field `androidpay.token` to be a primitive type in the JSON string but got " + data['androidpay.token']);
        }
        // ensure the json data is a string
        if (data['masterpass.transactionId'] && !(typeof data['masterpass.transactionId'] === 'string' || data['masterpass.transactionId'] instanceof String)) {
            throw new Error("Expected the field `masterpass.transactionId` to be a primitive type in the JSON string but got " + data['masterpass.transactionId']);
        }
        // ensure the json data is a string
        if (data['payment.token'] && !(typeof data['payment.token'] === 'string' || data['payment.token'] instanceof String)) {
            throw new Error("Expected the field `payment.token` to be a primitive type in the JSON string but got " + data['payment.token']);
        }
        // ensure the json data is a string
        if (data['paywithgoogle.token'] && !(typeof data['paywithgoogle.token'] === 'string' || data['paywithgoogle.token'] instanceof String)) {
            throw new Error("Expected the field `paywithgoogle.token` to be a primitive type in the JSON string but got " + data['paywithgoogle.token']);
        }
        // ensure the json data is a string
        if (data['samsungpay.token'] && !(typeof data['samsungpay.token'] === 'string' || data['samsungpay.token'] instanceof String)) {
            throw new Error("Expected the field `samsungpay.token` to be a primitive type in the JSON string but got " + data['samsungpay.token']);
        }
        // ensure the json data is a string
        if (data['visacheckout.callId'] && !(typeof data['visacheckout.callId'] === 'string' || data['visacheckout.callId'] instanceof String)) {
            throw new Error("Expected the field `visacheckout.callId` to be a primitive type in the JSON string but got " + data['visacheckout.callId']);
        }

        return true;
    }


}



/**
 * The Android Pay token retrieved from the SDK.
 * @member {String} androidpay.token
 */
AdditionalDataWallets.prototype['androidpay.token'] = undefined;

/**
 * The Mastercard Masterpass Transaction ID retrieved from the SDK.
 * @member {String} masterpass.transactionId
 */
AdditionalDataWallets.prototype['masterpass.transactionId'] = undefined;

/**
 * The Apple Pay token retrieved from the SDK.
 * @member {String} payment.token
 */
AdditionalDataWallets.prototype['payment.token'] = undefined;

/**
 * The Google Pay token retrieved from the SDK.
 * @member {String} paywithgoogle.token
 */
AdditionalDataWallets.prototype['paywithgoogle.token'] = undefined;

/**
 * The Samsung Pay token retrieved from the SDK.
 * @member {String} samsungpay.token
 */
AdditionalDataWallets.prototype['samsungpay.token'] = undefined;

/**
 * The Visa Checkout Call ID retrieved from the SDK.
 * @member {String} visacheckout.callId
 */
AdditionalDataWallets.prototype['visacheckout.callId'] = undefined;






export default AdditionalDataWallets;

