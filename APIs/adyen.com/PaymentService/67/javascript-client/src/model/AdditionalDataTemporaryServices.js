/**
 * Adyen Payment API
 * A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.  To learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).  ## Authentication You need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.  If using an API key, add an `X-API-Key` header with the API key as the value, for example:   ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ```  Alternatively, you can use the username and password to connect to the API using basic authentication, for example:  ``` curl -U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\ -H \"Content-Type: application/json\" \\ ... ```  ## Versioning Payments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://pal-test.adyen.com/pal/servlet/Payment/v67/authorise ```  ## Going live  To authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.  The live endpoint URLs contain a prefix which is unique to your company account: ```  https://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payment/v67/authorise ```  Get your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.
 *
 * The version of the OpenAPI document: 67
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AdditionalDataTemporaryServices model module.
 * @module model/AdditionalDataTemporaryServices
 * @version 67
 */
class AdditionalDataTemporaryServices {
    /**
     * Constructs a new <code>AdditionalDataTemporaryServices</code>.
     * @alias module:model/AdditionalDataTemporaryServices
     */
    constructor() { 
        
        AdditionalDataTemporaryServices.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AdditionalDataTemporaryServices</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AdditionalDataTemporaryServices} obj Optional instance to populate.
     * @return {module:model/AdditionalDataTemporaryServices} The populated <code>AdditionalDataTemporaryServices</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AdditionalDataTemporaryServices();

            if (data.hasOwnProperty('enhancedSchemeData.customerReference')) {
                obj['enhancedSchemeData.customerReference'] = ApiClient.convertToType(data['enhancedSchemeData.customerReference'], 'String');
            }
            if (data.hasOwnProperty('enhancedSchemeData.employeeName')) {
                obj['enhancedSchemeData.employeeName'] = ApiClient.convertToType(data['enhancedSchemeData.employeeName'], 'String');
            }
            if (data.hasOwnProperty('enhancedSchemeData.jobDescription')) {
                obj['enhancedSchemeData.jobDescription'] = ApiClient.convertToType(data['enhancedSchemeData.jobDescription'], 'String');
            }
            if (data.hasOwnProperty('enhancedSchemeData.regularHoursRate')) {
                obj['enhancedSchemeData.regularHoursRate'] = ApiClient.convertToType(data['enhancedSchemeData.regularHoursRate'], 'String');
            }
            if (data.hasOwnProperty('enhancedSchemeData.regularHoursWorked')) {
                obj['enhancedSchemeData.regularHoursWorked'] = ApiClient.convertToType(data['enhancedSchemeData.regularHoursWorked'], 'String');
            }
            if (data.hasOwnProperty('enhancedSchemeData.requestName')) {
                obj['enhancedSchemeData.requestName'] = ApiClient.convertToType(data['enhancedSchemeData.requestName'], 'String');
            }
            if (data.hasOwnProperty('enhancedSchemeData.tempStartDate')) {
                obj['enhancedSchemeData.tempStartDate'] = ApiClient.convertToType(data['enhancedSchemeData.tempStartDate'], 'String');
            }
            if (data.hasOwnProperty('enhancedSchemeData.tempWeekEnding')) {
                obj['enhancedSchemeData.tempWeekEnding'] = ApiClient.convertToType(data['enhancedSchemeData.tempWeekEnding'], 'String');
            }
            if (data.hasOwnProperty('enhancedSchemeData.totalTaxAmount')) {
                obj['enhancedSchemeData.totalTaxAmount'] = ApiClient.convertToType(data['enhancedSchemeData.totalTaxAmount'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AdditionalDataTemporaryServices</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AdditionalDataTemporaryServices</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['enhancedSchemeData.customerReference'] && !(typeof data['enhancedSchemeData.customerReference'] === 'string' || data['enhancedSchemeData.customerReference'] instanceof String)) {
            throw new Error("Expected the field `enhancedSchemeData.customerReference` to be a primitive type in the JSON string but got " + data['enhancedSchemeData.customerReference']);
        }
        // ensure the json data is a string
        if (data['enhancedSchemeData.employeeName'] && !(typeof data['enhancedSchemeData.employeeName'] === 'string' || data['enhancedSchemeData.employeeName'] instanceof String)) {
            throw new Error("Expected the field `enhancedSchemeData.employeeName` to be a primitive type in the JSON string but got " + data['enhancedSchemeData.employeeName']);
        }
        // ensure the json data is a string
        if (data['enhancedSchemeData.jobDescription'] && !(typeof data['enhancedSchemeData.jobDescription'] === 'string' || data['enhancedSchemeData.jobDescription'] instanceof String)) {
            throw new Error("Expected the field `enhancedSchemeData.jobDescription` to be a primitive type in the JSON string but got " + data['enhancedSchemeData.jobDescription']);
        }
        // ensure the json data is a string
        if (data['enhancedSchemeData.regularHoursRate'] && !(typeof data['enhancedSchemeData.regularHoursRate'] === 'string' || data['enhancedSchemeData.regularHoursRate'] instanceof String)) {
            throw new Error("Expected the field `enhancedSchemeData.regularHoursRate` to be a primitive type in the JSON string but got " + data['enhancedSchemeData.regularHoursRate']);
        }
        // ensure the json data is a string
        if (data['enhancedSchemeData.regularHoursWorked'] && !(typeof data['enhancedSchemeData.regularHoursWorked'] === 'string' || data['enhancedSchemeData.regularHoursWorked'] instanceof String)) {
            throw new Error("Expected the field `enhancedSchemeData.regularHoursWorked` to be a primitive type in the JSON string but got " + data['enhancedSchemeData.regularHoursWorked']);
        }
        // ensure the json data is a string
        if (data['enhancedSchemeData.requestName'] && !(typeof data['enhancedSchemeData.requestName'] === 'string' || data['enhancedSchemeData.requestName'] instanceof String)) {
            throw new Error("Expected the field `enhancedSchemeData.requestName` to be a primitive type in the JSON string but got " + data['enhancedSchemeData.requestName']);
        }
        // ensure the json data is a string
        if (data['enhancedSchemeData.tempStartDate'] && !(typeof data['enhancedSchemeData.tempStartDate'] === 'string' || data['enhancedSchemeData.tempStartDate'] instanceof String)) {
            throw new Error("Expected the field `enhancedSchemeData.tempStartDate` to be a primitive type in the JSON string but got " + data['enhancedSchemeData.tempStartDate']);
        }
        // ensure the json data is a string
        if (data['enhancedSchemeData.tempWeekEnding'] && !(typeof data['enhancedSchemeData.tempWeekEnding'] === 'string' || data['enhancedSchemeData.tempWeekEnding'] instanceof String)) {
            throw new Error("Expected the field `enhancedSchemeData.tempWeekEnding` to be a primitive type in the JSON string but got " + data['enhancedSchemeData.tempWeekEnding']);
        }
        // ensure the json data is a string
        if (data['enhancedSchemeData.totalTaxAmount'] && !(typeof data['enhancedSchemeData.totalTaxAmount'] === 'string' || data['enhancedSchemeData.totalTaxAmount'] instanceof String)) {
            throw new Error("Expected the field `enhancedSchemeData.totalTaxAmount` to be a primitive type in the JSON string but got " + data['enhancedSchemeData.totalTaxAmount']);
        }

        return true;
    }


}



/**
 * The customer code, if supplied by a customer. * Encoding: ASCII * maxLength: 25
 * @member {String} enhancedSchemeData.customerReference
 */
AdditionalDataTemporaryServices.prototype['enhancedSchemeData.customerReference'] = undefined;

/**
 * The name or ID of the person working in a temporary capacity. * maxLength: 40.   * Must not be all spaces.  *Must not be all zeros.
 * @member {String} enhancedSchemeData.employeeName
 */
AdditionalDataTemporaryServices.prototype['enhancedSchemeData.employeeName'] = undefined;

/**
 * The job description of the person working in a temporary capacity. * maxLength: 40  * Must not be all spaces.  *Must not be all zeros.
 * @member {String} enhancedSchemeData.jobDescription
 */
AdditionalDataTemporaryServices.prototype['enhancedSchemeData.jobDescription'] = undefined;

/**
 * The amount paid for regular hours worked, [minor units](https://docs.adyen.com/development-resources/currency-codes). * maxLength: 7 * Must not be empty * Can be all zeros
 * @member {String} enhancedSchemeData.regularHoursRate
 */
AdditionalDataTemporaryServices.prototype['enhancedSchemeData.regularHoursRate'] = undefined;

/**
 * The hours worked. * maxLength: 7 * Must not be empty * Can be all zeros
 * @member {String} enhancedSchemeData.regularHoursWorked
 */
AdditionalDataTemporaryServices.prototype['enhancedSchemeData.regularHoursWorked'] = undefined;

/**
 * The name of the person requesting temporary services. * maxLength: 40 * Must not be all zeros * Must not be all spaces
 * @member {String} enhancedSchemeData.requestName
 */
AdditionalDataTemporaryServices.prototype['enhancedSchemeData.requestName'] = undefined;

/**
 * The billing period start date. * Format: ddMMyy * maxLength: 6
 * @member {String} enhancedSchemeData.tempStartDate
 */
AdditionalDataTemporaryServices.prototype['enhancedSchemeData.tempStartDate'] = undefined;

/**
 * The billing period end date. * Format: ddMMyy * maxLength: 6
 * @member {String} enhancedSchemeData.tempWeekEnding
 */
AdditionalDataTemporaryServices.prototype['enhancedSchemeData.tempWeekEnding'] = undefined;

/**
 * The total tax amount, in [minor units](https://docs.adyen.com/development-resources/currency-codes). For example, 2000 means USD 20.00 * maxLength: 12
 * @member {String} enhancedSchemeData.totalTaxAmount
 */
AdditionalDataTemporaryServices.prototype['enhancedSchemeData.totalTaxAmount'] = undefined;






export default AdditionalDataTemporaryServices;

