/**
 * Adyen Payment API
 * A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.  To learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).  ## Authentication You need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.  If using an API key, add an `X-API-Key` header with the API key as the value, for example:   ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ```  Alternatively, you can use the username and password to connect to the API using basic authentication, for example:  ``` curl -U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\ -H \"Content-Type: application/json\" \\ ... ```  ## Versioning Payments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://pal-test.adyen.com/pal/servlet/Payment/v67/authorise ```  ## Going live  To authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.  The live endpoint URLs contain a prefix which is unique to your company account: ```  https://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payment/v67/authorise ```  Get your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.
 *
 * The version of the OpenAPI document: 67
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAuthenticationResultResponse.h
 *
 * 
 */

#ifndef OAIAuthenticationResultResponse_H
#define OAIAuthenticationResultResponse_H

#include <QJsonObject>

#include "OAIThreeDS1Result.h"
#include "OAIThreeDS2Result.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIThreeDS1Result;
class OAIThreeDS2Result;

class OAIAuthenticationResultResponse : public OAIObject {
public:
    OAIAuthenticationResultResponse();
    OAIAuthenticationResultResponse(QString json);
    ~OAIAuthenticationResultResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIThreeDS1Result getThreeDs1Result() const;
    void setThreeDs1Result(const OAIThreeDS1Result &three_ds1_result);
    bool is_three_ds1_result_Set() const;
    bool is_three_ds1_result_Valid() const;

    OAIThreeDS2Result getThreeDs2Result() const;
    void setThreeDs2Result(const OAIThreeDS2Result &three_ds2_result);
    bool is_three_ds2_result_Set() const;
    bool is_three_ds2_result_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIThreeDS1Result m_three_ds1_result;
    bool m_three_ds1_result_isSet;
    bool m_three_ds1_result_isValid;

    OAIThreeDS2Result m_three_ds2_result;
    bool m_three_ds2_result_isSet;
    bool m_three_ds2_result_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAuthenticationResultResponse)

#endif // OAIAuthenticationResultResponse_H
