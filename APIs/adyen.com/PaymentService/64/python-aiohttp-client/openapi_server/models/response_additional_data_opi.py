# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ResponseAdditionalDataOpi(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, opi_trans_token: str=None):
        """ResponseAdditionalDataOpi - a model defined in OpenAPI

        :param opi_trans_token: The opi_trans_token of this ResponseAdditionalDataOpi.
        """
        self.openapi_types = {
            'opi_trans_token': str
        }

        self.attribute_map = {
            'opi_trans_token': 'opi.transToken'
        }

        self._opi_trans_token = opi_trans_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ResponseAdditionalDataOpi':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ResponseAdditionalDataOpi of this ResponseAdditionalDataOpi.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def opi_trans_token(self):
        """Gets the opi_trans_token of this ResponseAdditionalDataOpi.

        Returned in the response if you included `opi.includeTransToken: true` in an ecommerce payment request. This contains an Oracle Payment Interface token that you can store in your Oracle Opera database to identify tokenized ecommerce transactions. For more information and required settings, see [Oracle Opera](https://docs.adyen.com/plugins/oracle-opera#opi-token-ecommerce).

        :return: The opi_trans_token of this ResponseAdditionalDataOpi.
        :rtype: str
        """
        return self._opi_trans_token

    @opi_trans_token.setter
    def opi_trans_token(self, opi_trans_token):
        """Sets the opi_trans_token of this ResponseAdditionalDataOpi.

        Returned in the response if you included `opi.includeTransToken: true` in an ecommerce payment request. This contains an Oracle Payment Interface token that you can store in your Oracle Opera database to identify tokenized ecommerce transactions. For more information and required settings, see [Oracle Opera](https://docs.adyen.com/plugins/oracle-opera#opi-token-ecommerce).

        :param opi_trans_token: The opi_trans_token of this ResponseAdditionalDataOpi.
        :type opi_trans_token: str
        """

        self._opi_trans_token = opi_trans_token
