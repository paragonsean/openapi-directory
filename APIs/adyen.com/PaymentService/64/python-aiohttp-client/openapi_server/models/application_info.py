# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.common_field import CommonField
from openapi_server.models.external_platform import ExternalPlatform
from openapi_server.models.merchant_device import MerchantDevice
from openapi_server.models.shopper_interaction_device import ShopperInteractionDevice
from openapi_server import util


class ApplicationInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, adyen_library: CommonField=None, adyen_payment_source: CommonField=None, external_platform: ExternalPlatform=None, merchant_application: CommonField=None, merchant_device: MerchantDevice=None, shopper_interaction_device: ShopperInteractionDevice=None):
        """ApplicationInfo - a model defined in OpenAPI

        :param adyen_library: The adyen_library of this ApplicationInfo.
        :param adyen_payment_source: The adyen_payment_source of this ApplicationInfo.
        :param external_platform: The external_platform of this ApplicationInfo.
        :param merchant_application: The merchant_application of this ApplicationInfo.
        :param merchant_device: The merchant_device of this ApplicationInfo.
        :param shopper_interaction_device: The shopper_interaction_device of this ApplicationInfo.
        """
        self.openapi_types = {
            'adyen_library': CommonField,
            'adyen_payment_source': CommonField,
            'external_platform': ExternalPlatform,
            'merchant_application': CommonField,
            'merchant_device': MerchantDevice,
            'shopper_interaction_device': ShopperInteractionDevice
        }

        self.attribute_map = {
            'adyen_library': 'adyenLibrary',
            'adyen_payment_source': 'adyenPaymentSource',
            'external_platform': 'externalPlatform',
            'merchant_application': 'merchantApplication',
            'merchant_device': 'merchantDevice',
            'shopper_interaction_device': 'shopperInteractionDevice'
        }

        self._adyen_library = adyen_library
        self._adyen_payment_source = adyen_payment_source
        self._external_platform = external_platform
        self._merchant_application = merchant_application
        self._merchant_device = merchant_device
        self._shopper_interaction_device = shopper_interaction_device

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApplicationInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ApplicationInfo of this ApplicationInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def adyen_library(self):
        """Gets the adyen_library of this ApplicationInfo.

        Adyen-developed software, such as libraries and plugins, used to interact with the Adyen API. For example, Magento plugin, Java API library, etc.

        :return: The adyen_library of this ApplicationInfo.
        :rtype: CommonField
        """
        return self._adyen_library

    @adyen_library.setter
    def adyen_library(self, adyen_library):
        """Sets the adyen_library of this ApplicationInfo.

        Adyen-developed software, such as libraries and plugins, used to interact with the Adyen API. For example, Magento plugin, Java API library, etc.

        :param adyen_library: The adyen_library of this ApplicationInfo.
        :type adyen_library: CommonField
        """

        self._adyen_library = adyen_library

    @property
    def adyen_payment_source(self):
        """Gets the adyen_payment_source of this ApplicationInfo.

        Adyen-developed software to get payment details. For example, Checkout SDK, Secured Fields SDK, etc.

        :return: The adyen_payment_source of this ApplicationInfo.
        :rtype: CommonField
        """
        return self._adyen_payment_source

    @adyen_payment_source.setter
    def adyen_payment_source(self, adyen_payment_source):
        """Sets the adyen_payment_source of this ApplicationInfo.

        Adyen-developed software to get payment details. For example, Checkout SDK, Secured Fields SDK, etc.

        :param adyen_payment_source: The adyen_payment_source of this ApplicationInfo.
        :type adyen_payment_source: CommonField
        """

        self._adyen_payment_source = adyen_payment_source

    @property
    def external_platform(self):
        """Gets the external_platform of this ApplicationInfo.

        Third-party developed platform used to initiate payment requests. For example, Magento, Zuora, etc.

        :return: The external_platform of this ApplicationInfo.
        :rtype: ExternalPlatform
        """
        return self._external_platform

    @external_platform.setter
    def external_platform(self, external_platform):
        """Sets the external_platform of this ApplicationInfo.

        Third-party developed platform used to initiate payment requests. For example, Magento, Zuora, etc.

        :param external_platform: The external_platform of this ApplicationInfo.
        :type external_platform: ExternalPlatform
        """

        self._external_platform = external_platform

    @property
    def merchant_application(self):
        """Gets the merchant_application of this ApplicationInfo.

        Merchant developed software, such as cashier application, used to interact with the Adyen API.

        :return: The merchant_application of this ApplicationInfo.
        :rtype: CommonField
        """
        return self._merchant_application

    @merchant_application.setter
    def merchant_application(self, merchant_application):
        """Sets the merchant_application of this ApplicationInfo.

        Merchant developed software, such as cashier application, used to interact with the Adyen API.

        :param merchant_application: The merchant_application of this ApplicationInfo.
        :type merchant_application: CommonField
        """

        self._merchant_application = merchant_application

    @property
    def merchant_device(self):
        """Gets the merchant_device of this ApplicationInfo.

        Merchant device information.

        :return: The merchant_device of this ApplicationInfo.
        :rtype: MerchantDevice
        """
        return self._merchant_device

    @merchant_device.setter
    def merchant_device(self, merchant_device):
        """Sets the merchant_device of this ApplicationInfo.

        Merchant device information.

        :param merchant_device: The merchant_device of this ApplicationInfo.
        :type merchant_device: MerchantDevice
        """

        self._merchant_device = merchant_device

    @property
    def shopper_interaction_device(self):
        """Gets the shopper_interaction_device of this ApplicationInfo.

        Shopper interaction device, such as terminal, mobile device or web browser, to initiate payment requests.

        :return: The shopper_interaction_device of this ApplicationInfo.
        :rtype: ShopperInteractionDevice
        """
        return self._shopper_interaction_device

    @shopper_interaction_device.setter
    def shopper_interaction_device(self, shopper_interaction_device):
        """Sets the shopper_interaction_device of this ApplicationInfo.

        Shopper interaction device, such as terminal, mobile device or web browser, to initiate payment requests.

        :param shopper_interaction_device: The shopper_interaction_device of this ApplicationInfo.
        :type shopper_interaction_device: ShopperInteractionDevice
        """

        self._shopper_interaction_device = shopper_interaction_device
