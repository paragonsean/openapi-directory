/*
 * Adyen Payment API
 * A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.  To learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).  ## Authentication You need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.  If using an API key, add an `X-API-Key` header with the API key as the value, for example:   ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ```  Alternatively, you can use the username and password to connect to the API using basic authentication, for example:  ``` curl -U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\ -H \"Content-Type: application/json\" \\ ... ```  ## Versioning Payments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://pal-test.adyen.com/pal/servlet/Payment/v64/authorise ```  ## Going live  To authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.  The live endpoint URLs contain a prefix which is unique to your company account: ```  https://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payment/v64/authorise ```  Get your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.
 *
 * The version of the OpenAPI document: 64
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for AdditionalDataLevel23
 */
public class AdditionalDataLevel23Test {
    private final AdditionalDataLevel23 model = new AdditionalDataLevel23();

    /**
     * Model tests for AdditionalDataLevel23
     */
    @Test
    public void testAdditionalDataLevel23() {
        // TODO: test AdditionalDataLevel23
    }

    /**
     * Test the property 'enhancedSchemeDataCustomerReference'
     */
    @Test
    public void enhancedSchemeDataCustomerReferenceTest() {
        // TODO: test enhancedSchemeDataCustomerReference
    }

    /**
     * Test the property 'enhancedSchemeDataDestinationCountryCode'
     */
    @Test
    public void enhancedSchemeDataDestinationCountryCodeTest() {
        // TODO: test enhancedSchemeDataDestinationCountryCode
    }

    /**
     * Test the property 'enhancedSchemeDataDestinationPostalCode'
     */
    @Test
    public void enhancedSchemeDataDestinationPostalCodeTest() {
        // TODO: test enhancedSchemeDataDestinationPostalCode
    }

    /**
     * Test the property 'enhancedSchemeDataDestinationStateProvinceCode'
     */
    @Test
    public void enhancedSchemeDataDestinationStateProvinceCodeTest() {
        // TODO: test enhancedSchemeDataDestinationStateProvinceCode
    }

    /**
     * Test the property 'enhancedSchemeDataDutyAmount'
     */
    @Test
    public void enhancedSchemeDataDutyAmountTest() {
        // TODO: test enhancedSchemeDataDutyAmount
    }

    /**
     * Test the property 'enhancedSchemeDataFreightAmount'
     */
    @Test
    public void enhancedSchemeDataFreightAmountTest() {
        // TODO: test enhancedSchemeDataFreightAmount
    }

    /**
     * Test the property 'enhancedSchemeDataItemDetailLineItemNrCommodityCode'
     */
    @Test
    public void enhancedSchemeDataItemDetailLineItemNrCommodityCodeTest() {
        // TODO: test enhancedSchemeDataItemDetailLineItemNrCommodityCode
    }

    /**
     * Test the property 'enhancedSchemeDataItemDetailLineItemNrDescription'
     */
    @Test
    public void enhancedSchemeDataItemDetailLineItemNrDescriptionTest() {
        // TODO: test enhancedSchemeDataItemDetailLineItemNrDescription
    }

    /**
     * Test the property 'enhancedSchemeDataItemDetailLineItemNrDiscountAmount'
     */
    @Test
    public void enhancedSchemeDataItemDetailLineItemNrDiscountAmountTest() {
        // TODO: test enhancedSchemeDataItemDetailLineItemNrDiscountAmount
    }

    /**
     * Test the property 'enhancedSchemeDataItemDetailLineItemNrProductCode'
     */
    @Test
    public void enhancedSchemeDataItemDetailLineItemNrProductCodeTest() {
        // TODO: test enhancedSchemeDataItemDetailLineItemNrProductCode
    }

    /**
     * Test the property 'enhancedSchemeDataItemDetailLineItemNrQuantity'
     */
    @Test
    public void enhancedSchemeDataItemDetailLineItemNrQuantityTest() {
        // TODO: test enhancedSchemeDataItemDetailLineItemNrQuantity
    }

    /**
     * Test the property 'enhancedSchemeDataItemDetailLineItemNrTotalAmount'
     */
    @Test
    public void enhancedSchemeDataItemDetailLineItemNrTotalAmountTest() {
        // TODO: test enhancedSchemeDataItemDetailLineItemNrTotalAmount
    }

    /**
     * Test the property 'enhancedSchemeDataItemDetailLineItemNrUnitOfMeasure'
     */
    @Test
    public void enhancedSchemeDataItemDetailLineItemNrUnitOfMeasureTest() {
        // TODO: test enhancedSchemeDataItemDetailLineItemNrUnitOfMeasure
    }

    /**
     * Test the property 'enhancedSchemeDataItemDetailLineItemNrUnitPrice'
     */
    @Test
    public void enhancedSchemeDataItemDetailLineItemNrUnitPriceTest() {
        // TODO: test enhancedSchemeDataItemDetailLineItemNrUnitPrice
    }

    /**
     * Test the property 'enhancedSchemeDataOrderDate'
     */
    @Test
    public void enhancedSchemeDataOrderDateTest() {
        // TODO: test enhancedSchemeDataOrderDate
    }

    /**
     * Test the property 'enhancedSchemeDataShipFromPostalCode'
     */
    @Test
    public void enhancedSchemeDataShipFromPostalCodeTest() {
        // TODO: test enhancedSchemeDataShipFromPostalCode
    }

    /**
     * Test the property 'enhancedSchemeDataTotalTaxAmount'
     */
    @Test
    public void enhancedSchemeDataTotalTaxAmountTest() {
        // TODO: test enhancedSchemeDataTotalTaxAmount
    }

}
