/*
 * Adyen Payment API
 * A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.  To learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).  ## Authentication You need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.  If using an API key, add an `X-API-Key` header with the API key as the value, for example:   ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ```  Alternatively, you can use the username and password to connect to the API using basic authentication, for example:  ``` curl -U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\ -H \"Content-Type: application/json\" \\ ... ```  ## Versioning Payments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://pal-test.adyen.com/pal/servlet/Payment/v64/authorise ```  ## Going live  To authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.  The live endpoint URLs contain a prefix which is unique to your company account: ```  https://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payment/v64/authorise ```  Get your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.
 *
 * The version of the OpenAPI document: 64
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.Amount;
import org.openapitools.client.model.FraudResult;
import org.openapitools.client.model.PaymentResultAdditionalData;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for PaymentResult
 */
public class PaymentResultTest {
    private final PaymentResult model = new PaymentResult();

    /**
     * Model tests for PaymentResult
     */
    @Test
    public void testPaymentResult() {
        // TODO: test PaymentResult
    }

    /**
     * Test the property 'additionalData'
     */
    @Test
    public void additionalDataTest() {
        // TODO: test additionalData
    }

    /**
     * Test the property 'authCode'
     */
    @Test
    public void authCodeTest() {
        // TODO: test authCode
    }

    /**
     * Test the property 'dccAmount'
     */
    @Test
    public void dccAmountTest() {
        // TODO: test dccAmount
    }

    /**
     * Test the property 'dccSignature'
     */
    @Test
    public void dccSignatureTest() {
        // TODO: test dccSignature
    }

    /**
     * Test the property 'fraudResult'
     */
    @Test
    public void fraudResultTest() {
        // TODO: test fraudResult
    }

    /**
     * Test the property 'issuerUrl'
     */
    @Test
    public void issuerUrlTest() {
        // TODO: test issuerUrl
    }

    /**
     * Test the property 'md'
     */
    @Test
    public void mdTest() {
        // TODO: test md
    }

    /**
     * Test the property 'paRequest'
     */
    @Test
    public void paRequestTest() {
        // TODO: test paRequest
    }

    /**
     * Test the property 'pspReference'
     */
    @Test
    public void pspReferenceTest() {
        // TODO: test pspReference
    }

    /**
     * Test the property 'refusalReason'
     */
    @Test
    public void refusalReasonTest() {
        // TODO: test refusalReason
    }

    /**
     * Test the property 'resultCode'
     */
    @Test
    public void resultCodeTest() {
        // TODO: test resultCode
    }

}
