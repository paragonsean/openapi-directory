/**
 * Adyen Payment API
 * A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.  To learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).  ## Authentication You need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.  If using an API key, add an `X-API-Key` header with the API key as the value, for example:   ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ```  Alternatively, you can use the username and password to connect to the API using basic authentication, for example:  ``` curl -U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\ -H \"Content-Type: application/json\" \\ ... ```  ## Versioning Payments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://pal-test.adyen.com/pal/servlet/Payment/v64/authorise ```  ## Going live  To authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.  The live endpoint URLs contain a prefix which is unique to your company account: ```  https://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payment/v64/authorise ```  Get your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.
 *
 * The version of the OpenAPI document: 64
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Amount from './Amount';

/**
 * The DonationRequest model module.
 * @module model/DonationRequest
 * @version 64
 */
class DonationRequest {
    /**
     * Constructs a new <code>DonationRequest</code>.
     * @alias module:model/DonationRequest
     * @param donationAccount {String} The Adyen account name of the charity.
     * @param merchantAccount {String} The merchant account that is used to process the payment.
     * @param modificationAmount {module:model/Amount} The amount to be donated.The `currency` must match the currency used in authorisation, the `value` must be smaller than or equal to the authorised amount.
     */
    constructor(donationAccount, merchantAccount, modificationAmount) { 
        
        DonationRequest.initialize(this, donationAccount, merchantAccount, modificationAmount);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, donationAccount, merchantAccount, modificationAmount) { 
        obj['donationAccount'] = donationAccount;
        obj['merchantAccount'] = merchantAccount;
        obj['modificationAmount'] = modificationAmount;
    }

    /**
     * Constructs a <code>DonationRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DonationRequest} obj Optional instance to populate.
     * @return {module:model/DonationRequest} The populated <code>DonationRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DonationRequest();

            if (data.hasOwnProperty('donationAccount')) {
                obj['donationAccount'] = ApiClient.convertToType(data['donationAccount'], 'String');
            }
            if (data.hasOwnProperty('merchantAccount')) {
                obj['merchantAccount'] = ApiClient.convertToType(data['merchantAccount'], 'String');
            }
            if (data.hasOwnProperty('modificationAmount')) {
                obj['modificationAmount'] = Amount.constructFromObject(data['modificationAmount']);
            }
            if (data.hasOwnProperty('originalReference')) {
                obj['originalReference'] = ApiClient.convertToType(data['originalReference'], 'String');
            }
            if (data.hasOwnProperty('reference')) {
                obj['reference'] = ApiClient.convertToType(data['reference'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DonationRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DonationRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DonationRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['donationAccount'] && !(typeof data['donationAccount'] === 'string' || data['donationAccount'] instanceof String)) {
            throw new Error("Expected the field `donationAccount` to be a primitive type in the JSON string but got " + data['donationAccount']);
        }
        // ensure the json data is a string
        if (data['merchantAccount'] && !(typeof data['merchantAccount'] === 'string' || data['merchantAccount'] instanceof String)) {
            throw new Error("Expected the field `merchantAccount` to be a primitive type in the JSON string but got " + data['merchantAccount']);
        }
        // validate the optional field `modificationAmount`
        if (data['modificationAmount']) { // data not null
          Amount.validateJSON(data['modificationAmount']);
        }
        // ensure the json data is a string
        if (data['originalReference'] && !(typeof data['originalReference'] === 'string' || data['originalReference'] instanceof String)) {
            throw new Error("Expected the field `originalReference` to be a primitive type in the JSON string but got " + data['originalReference']);
        }
        // ensure the json data is a string
        if (data['reference'] && !(typeof data['reference'] === 'string' || data['reference'] instanceof String)) {
            throw new Error("Expected the field `reference` to be a primitive type in the JSON string but got " + data['reference']);
        }

        return true;
    }


}

DonationRequest.RequiredProperties = ["donationAccount", "merchantAccount", "modificationAmount"];

/**
 * The Adyen account name of the charity.
 * @member {String} donationAccount
 */
DonationRequest.prototype['donationAccount'] = undefined;

/**
 * The merchant account that is used to process the payment.
 * @member {String} merchantAccount
 */
DonationRequest.prototype['merchantAccount'] = undefined;

/**
 * The amount to be donated.The `currency` must match the currency used in authorisation, the `value` must be smaller than or equal to the authorised amount.
 * @member {module:model/Amount} modificationAmount
 */
DonationRequest.prototype['modificationAmount'] = undefined;

/**
 * The original pspReference of the payment to modify. This reference is returned in: * authorisation response * authorisation notification  
 * @member {String} originalReference
 */
DonationRequest.prototype['originalReference'] = undefined;

/**
 * Your reference for the payment modification. This reference is visible in Customer Area and in reports. Maximum length: 80 characters.
 * @member {String} reference
 */
DonationRequest.prototype['reference'] = undefined;






export default DonationRequest;

