/**
 * Adyen Payment API
 * A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.  To learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).  ## Authentication You need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.  If using an API key, add an `X-API-Key` header with the API key as the value, for example:   ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ```  Alternatively, you can use the username and password to connect to the API using basic authentication, for example:  ``` curl -U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\ -H \"Content-Type: application/json\" \\ ... ```  ## Versioning Payments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://pal-test.adyen.com/pal/servlet/Payment/v68/authorise ```  ## Going live  To authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.  The live endpoint URLs contain a prefix which is unique to your company account: ```  https://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payment/v68/authorise ```  Get your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.
 *
 * The version of the OpenAPI document: 68
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPlatformChargebackLogic.h
 *
 * 
 */

#ifndef OAIPlatformChargebackLogic_H
#define OAIPlatformChargebackLogic_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPlatformChargebackLogic : public OAIObject {
public:
    OAIPlatformChargebackLogic();
    OAIPlatformChargebackLogic(QString json);
    ~OAIPlatformChargebackLogic() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBehavior() const;
    void setBehavior(const QString &behavior);
    bool is_behavior_Set() const;
    bool is_behavior_Valid() const;

    QString getCostAllocationAccount() const;
    void setCostAllocationAccount(const QString &cost_allocation_account);
    bool is_cost_allocation_account_Set() const;
    bool is_cost_allocation_account_Valid() const;

    QString getTargetAccount() const;
    void setTargetAccount(const QString &target_account);
    bool is_target_account_Set() const;
    bool is_target_account_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_behavior;
    bool m_behavior_isSet;
    bool m_behavior_isValid;

    QString m_cost_allocation_account;
    bool m_cost_allocation_account_isSet;
    bool m_cost_allocation_account_isValid;

    QString m_target_account;
    bool m_target_account_isSet;
    bool m_target_account_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPlatformChargebackLogic)

#endif // OAIPlatformChargebackLogic_H
