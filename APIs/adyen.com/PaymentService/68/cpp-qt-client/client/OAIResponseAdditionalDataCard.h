/**
 * Adyen Payment API
 * A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.  To learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).  ## Authentication You need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.  If using an API key, add an `X-API-Key` header with the API key as the value, for example:   ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ```  Alternatively, you can use the username and password to connect to the API using basic authentication, for example:  ``` curl -U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\ -H \"Content-Type: application/json\" \\ ... ```  ## Versioning Payments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://pal-test.adyen.com/pal/servlet/Payment/v68/authorise ```  ## Going live  To authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.  The live endpoint URLs contain a prefix which is unique to your company account: ```  https://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payment/v68/authorise ```  Get your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.
 *
 * The version of the OpenAPI document: 68
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIResponseAdditionalDataCard.h
 *
 * 
 */

#ifndef OAIResponseAdditionalDataCard_H
#define OAIResponseAdditionalDataCard_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIResponseAdditionalDataCard : public OAIObject {
public:
    OAIResponseAdditionalDataCard();
    OAIResponseAdditionalDataCard(QString json);
    ~OAIResponseAdditionalDataCard() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCardBin() const;
    void setCardBin(const QString &card_bin);
    bool is_card_bin_Set() const;
    bool is_card_bin_Valid() const;

    QString getCardHolderName() const;
    void setCardHolderName(const QString &card_holder_name);
    bool is_card_holder_name_Set() const;
    bool is_card_holder_name_Valid() const;

    QString getCardIssuingBank() const;
    void setCardIssuingBank(const QString &card_issuing_bank);
    bool is_card_issuing_bank_Set() const;
    bool is_card_issuing_bank_Valid() const;

    QString getCardIssuingCountry() const;
    void setCardIssuingCountry(const QString &card_issuing_country);
    bool is_card_issuing_country_Set() const;
    bool is_card_issuing_country_Valid() const;

    QString getCardIssuingCurrency() const;
    void setCardIssuingCurrency(const QString &card_issuing_currency);
    bool is_card_issuing_currency_Set() const;
    bool is_card_issuing_currency_Valid() const;

    QString getCardPaymentMethod() const;
    void setCardPaymentMethod(const QString &card_payment_method);
    bool is_card_payment_method_Set() const;
    bool is_card_payment_method_Valid() const;

    QString getCardSummary() const;
    void setCardSummary(const QString &card_summary);
    bool is_card_summary_Set() const;
    bool is_card_summary_Valid() const;

    QString getIssuerBin() const;
    void setIssuerBin(const QString &issuer_bin);
    bool is_issuer_bin_Set() const;
    bool is_issuer_bin_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_card_bin;
    bool m_card_bin_isSet;
    bool m_card_bin_isValid;

    QString m_card_holder_name;
    bool m_card_holder_name_isSet;
    bool m_card_holder_name_isValid;

    QString m_card_issuing_bank;
    bool m_card_issuing_bank_isSet;
    bool m_card_issuing_bank_isValid;

    QString m_card_issuing_country;
    bool m_card_issuing_country_isSet;
    bool m_card_issuing_country_isValid;

    QString m_card_issuing_currency;
    bool m_card_issuing_currency_isSet;
    bool m_card_issuing_currency_isValid;

    QString m_card_payment_method;
    bool m_card_payment_method_isSet;
    bool m_card_payment_method_isValid;

    QString m_card_summary;
    bool m_card_summary_isSet;
    bool m_card_summary_isValid;

    QString m_issuer_bin;
    bool m_issuer_bin_isSet;
    bool m_issuer_bin_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIResponseAdditionalDataCard)

#endif // OAIResponseAdditionalDataCard_H
