/**
 * Adyen Payment API
 * A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.  To learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).  ## Authentication You need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.  If using an API key, add an `X-API-Key` header with the API key as the value, for example:   ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ```  Alternatively, you can use the username and password to connect to the API using basic authentication, for example:  ``` curl -U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\ -H \"Content-Type: application/json\" \\ ... ```  ## Versioning Payments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://pal-test.adyen.com/pal/servlet/Payment/v68/authorise ```  ## Going live  To authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.  The live endpoint URLs contain a prefix which is unique to your company account: ```  https://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payment/v68/authorise ```  Get your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.
 *
 * The version of the OpenAPI document: 68
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAcctInfo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAcctInfo::OAIAcctInfo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAcctInfo::OAIAcctInfo() {
    this->initializeModel();
}

OAIAcctInfo::~OAIAcctInfo() {}

void OAIAcctInfo::initializeModel() {

    m_ch_acc_age_ind_isSet = false;
    m_ch_acc_age_ind_isValid = false;

    m_ch_acc_change_isSet = false;
    m_ch_acc_change_isValid = false;

    m_ch_acc_change_ind_isSet = false;
    m_ch_acc_change_ind_isValid = false;

    m_ch_acc_pw_change_isSet = false;
    m_ch_acc_pw_change_isValid = false;

    m_ch_acc_pw_change_ind_isSet = false;
    m_ch_acc_pw_change_ind_isValid = false;

    m_ch_acc_string_isSet = false;
    m_ch_acc_string_isValid = false;

    m_nb_purchase_account_isSet = false;
    m_nb_purchase_account_isValid = false;

    m_payment_acc_age_isSet = false;
    m_payment_acc_age_isValid = false;

    m_payment_acc_ind_isSet = false;
    m_payment_acc_ind_isValid = false;

    m_provision_attempts_day_isSet = false;
    m_provision_attempts_day_isValid = false;

    m_ship_address_usage_isSet = false;
    m_ship_address_usage_isValid = false;

    m_ship_address_usage_ind_isSet = false;
    m_ship_address_usage_ind_isValid = false;

    m_ship_name_indicator_isSet = false;
    m_ship_name_indicator_isValid = false;

    m_suspicious_acc_activity_isSet = false;
    m_suspicious_acc_activity_isValid = false;

    m_txn_activity_day_isSet = false;
    m_txn_activity_day_isValid = false;

    m_txn_activity_year_isSet = false;
    m_txn_activity_year_isValid = false;
}

void OAIAcctInfo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAcctInfo::fromJsonObject(QJsonObject json) {

    m_ch_acc_age_ind_isValid = ::OpenAPI::fromJsonValue(m_ch_acc_age_ind, json[QString("chAccAgeInd")]);
    m_ch_acc_age_ind_isSet = !json[QString("chAccAgeInd")].isNull() && m_ch_acc_age_ind_isValid;

    m_ch_acc_change_isValid = ::OpenAPI::fromJsonValue(m_ch_acc_change, json[QString("chAccChange")]);
    m_ch_acc_change_isSet = !json[QString("chAccChange")].isNull() && m_ch_acc_change_isValid;

    m_ch_acc_change_ind_isValid = ::OpenAPI::fromJsonValue(m_ch_acc_change_ind, json[QString("chAccChangeInd")]);
    m_ch_acc_change_ind_isSet = !json[QString("chAccChangeInd")].isNull() && m_ch_acc_change_ind_isValid;

    m_ch_acc_pw_change_isValid = ::OpenAPI::fromJsonValue(m_ch_acc_pw_change, json[QString("chAccPwChange")]);
    m_ch_acc_pw_change_isSet = !json[QString("chAccPwChange")].isNull() && m_ch_acc_pw_change_isValid;

    m_ch_acc_pw_change_ind_isValid = ::OpenAPI::fromJsonValue(m_ch_acc_pw_change_ind, json[QString("chAccPwChangeInd")]);
    m_ch_acc_pw_change_ind_isSet = !json[QString("chAccPwChangeInd")].isNull() && m_ch_acc_pw_change_ind_isValid;

    m_ch_acc_string_isValid = ::OpenAPI::fromJsonValue(m_ch_acc_string, json[QString("chAccString")]);
    m_ch_acc_string_isSet = !json[QString("chAccString")].isNull() && m_ch_acc_string_isValid;

    m_nb_purchase_account_isValid = ::OpenAPI::fromJsonValue(m_nb_purchase_account, json[QString("nbPurchaseAccount")]);
    m_nb_purchase_account_isSet = !json[QString("nbPurchaseAccount")].isNull() && m_nb_purchase_account_isValid;

    m_payment_acc_age_isValid = ::OpenAPI::fromJsonValue(m_payment_acc_age, json[QString("paymentAccAge")]);
    m_payment_acc_age_isSet = !json[QString("paymentAccAge")].isNull() && m_payment_acc_age_isValid;

    m_payment_acc_ind_isValid = ::OpenAPI::fromJsonValue(m_payment_acc_ind, json[QString("paymentAccInd")]);
    m_payment_acc_ind_isSet = !json[QString("paymentAccInd")].isNull() && m_payment_acc_ind_isValid;

    m_provision_attempts_day_isValid = ::OpenAPI::fromJsonValue(m_provision_attempts_day, json[QString("provisionAttemptsDay")]);
    m_provision_attempts_day_isSet = !json[QString("provisionAttemptsDay")].isNull() && m_provision_attempts_day_isValid;

    m_ship_address_usage_isValid = ::OpenAPI::fromJsonValue(m_ship_address_usage, json[QString("shipAddressUsage")]);
    m_ship_address_usage_isSet = !json[QString("shipAddressUsage")].isNull() && m_ship_address_usage_isValid;

    m_ship_address_usage_ind_isValid = ::OpenAPI::fromJsonValue(m_ship_address_usage_ind, json[QString("shipAddressUsageInd")]);
    m_ship_address_usage_ind_isSet = !json[QString("shipAddressUsageInd")].isNull() && m_ship_address_usage_ind_isValid;

    m_ship_name_indicator_isValid = ::OpenAPI::fromJsonValue(m_ship_name_indicator, json[QString("shipNameIndicator")]);
    m_ship_name_indicator_isSet = !json[QString("shipNameIndicator")].isNull() && m_ship_name_indicator_isValid;

    m_suspicious_acc_activity_isValid = ::OpenAPI::fromJsonValue(m_suspicious_acc_activity, json[QString("suspiciousAccActivity")]);
    m_suspicious_acc_activity_isSet = !json[QString("suspiciousAccActivity")].isNull() && m_suspicious_acc_activity_isValid;

    m_txn_activity_day_isValid = ::OpenAPI::fromJsonValue(m_txn_activity_day, json[QString("txnActivityDay")]);
    m_txn_activity_day_isSet = !json[QString("txnActivityDay")].isNull() && m_txn_activity_day_isValid;

    m_txn_activity_year_isValid = ::OpenAPI::fromJsonValue(m_txn_activity_year, json[QString("txnActivityYear")]);
    m_txn_activity_year_isSet = !json[QString("txnActivityYear")].isNull() && m_txn_activity_year_isValid;
}

QString OAIAcctInfo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAcctInfo::asJsonObject() const {
    QJsonObject obj;
    if (m_ch_acc_age_ind_isSet) {
        obj.insert(QString("chAccAgeInd"), ::OpenAPI::toJsonValue(m_ch_acc_age_ind));
    }
    if (m_ch_acc_change_isSet) {
        obj.insert(QString("chAccChange"), ::OpenAPI::toJsonValue(m_ch_acc_change));
    }
    if (m_ch_acc_change_ind_isSet) {
        obj.insert(QString("chAccChangeInd"), ::OpenAPI::toJsonValue(m_ch_acc_change_ind));
    }
    if (m_ch_acc_pw_change_isSet) {
        obj.insert(QString("chAccPwChange"), ::OpenAPI::toJsonValue(m_ch_acc_pw_change));
    }
    if (m_ch_acc_pw_change_ind_isSet) {
        obj.insert(QString("chAccPwChangeInd"), ::OpenAPI::toJsonValue(m_ch_acc_pw_change_ind));
    }
    if (m_ch_acc_string_isSet) {
        obj.insert(QString("chAccString"), ::OpenAPI::toJsonValue(m_ch_acc_string));
    }
    if (m_nb_purchase_account_isSet) {
        obj.insert(QString("nbPurchaseAccount"), ::OpenAPI::toJsonValue(m_nb_purchase_account));
    }
    if (m_payment_acc_age_isSet) {
        obj.insert(QString("paymentAccAge"), ::OpenAPI::toJsonValue(m_payment_acc_age));
    }
    if (m_payment_acc_ind_isSet) {
        obj.insert(QString("paymentAccInd"), ::OpenAPI::toJsonValue(m_payment_acc_ind));
    }
    if (m_provision_attempts_day_isSet) {
        obj.insert(QString("provisionAttemptsDay"), ::OpenAPI::toJsonValue(m_provision_attempts_day));
    }
    if (m_ship_address_usage_isSet) {
        obj.insert(QString("shipAddressUsage"), ::OpenAPI::toJsonValue(m_ship_address_usage));
    }
    if (m_ship_address_usage_ind_isSet) {
        obj.insert(QString("shipAddressUsageInd"), ::OpenAPI::toJsonValue(m_ship_address_usage_ind));
    }
    if (m_ship_name_indicator_isSet) {
        obj.insert(QString("shipNameIndicator"), ::OpenAPI::toJsonValue(m_ship_name_indicator));
    }
    if (m_suspicious_acc_activity_isSet) {
        obj.insert(QString("suspiciousAccActivity"), ::OpenAPI::toJsonValue(m_suspicious_acc_activity));
    }
    if (m_txn_activity_day_isSet) {
        obj.insert(QString("txnActivityDay"), ::OpenAPI::toJsonValue(m_txn_activity_day));
    }
    if (m_txn_activity_year_isSet) {
        obj.insert(QString("txnActivityYear"), ::OpenAPI::toJsonValue(m_txn_activity_year));
    }
    return obj;
}

QString OAIAcctInfo::getChAccAgeInd() const {
    return m_ch_acc_age_ind;
}
void OAIAcctInfo::setChAccAgeInd(const QString &ch_acc_age_ind) {
    m_ch_acc_age_ind = ch_acc_age_ind;
    m_ch_acc_age_ind_isSet = true;
}

bool OAIAcctInfo::is_ch_acc_age_ind_Set() const{
    return m_ch_acc_age_ind_isSet;
}

bool OAIAcctInfo::is_ch_acc_age_ind_Valid() const{
    return m_ch_acc_age_ind_isValid;
}

QString OAIAcctInfo::getChAccChange() const {
    return m_ch_acc_change;
}
void OAIAcctInfo::setChAccChange(const QString &ch_acc_change) {
    m_ch_acc_change = ch_acc_change;
    m_ch_acc_change_isSet = true;
}

bool OAIAcctInfo::is_ch_acc_change_Set() const{
    return m_ch_acc_change_isSet;
}

bool OAIAcctInfo::is_ch_acc_change_Valid() const{
    return m_ch_acc_change_isValid;
}

QString OAIAcctInfo::getChAccChangeInd() const {
    return m_ch_acc_change_ind;
}
void OAIAcctInfo::setChAccChangeInd(const QString &ch_acc_change_ind) {
    m_ch_acc_change_ind = ch_acc_change_ind;
    m_ch_acc_change_ind_isSet = true;
}

bool OAIAcctInfo::is_ch_acc_change_ind_Set() const{
    return m_ch_acc_change_ind_isSet;
}

bool OAIAcctInfo::is_ch_acc_change_ind_Valid() const{
    return m_ch_acc_change_ind_isValid;
}

QString OAIAcctInfo::getChAccPwChange() const {
    return m_ch_acc_pw_change;
}
void OAIAcctInfo::setChAccPwChange(const QString &ch_acc_pw_change) {
    m_ch_acc_pw_change = ch_acc_pw_change;
    m_ch_acc_pw_change_isSet = true;
}

bool OAIAcctInfo::is_ch_acc_pw_change_Set() const{
    return m_ch_acc_pw_change_isSet;
}

bool OAIAcctInfo::is_ch_acc_pw_change_Valid() const{
    return m_ch_acc_pw_change_isValid;
}

QString OAIAcctInfo::getChAccPwChangeInd() const {
    return m_ch_acc_pw_change_ind;
}
void OAIAcctInfo::setChAccPwChangeInd(const QString &ch_acc_pw_change_ind) {
    m_ch_acc_pw_change_ind = ch_acc_pw_change_ind;
    m_ch_acc_pw_change_ind_isSet = true;
}

bool OAIAcctInfo::is_ch_acc_pw_change_ind_Set() const{
    return m_ch_acc_pw_change_ind_isSet;
}

bool OAIAcctInfo::is_ch_acc_pw_change_ind_Valid() const{
    return m_ch_acc_pw_change_ind_isValid;
}

QString OAIAcctInfo::getChAccString() const {
    return m_ch_acc_string;
}
void OAIAcctInfo::setChAccString(const QString &ch_acc_string) {
    m_ch_acc_string = ch_acc_string;
    m_ch_acc_string_isSet = true;
}

bool OAIAcctInfo::is_ch_acc_string_Set() const{
    return m_ch_acc_string_isSet;
}

bool OAIAcctInfo::is_ch_acc_string_Valid() const{
    return m_ch_acc_string_isValid;
}

QString OAIAcctInfo::getNbPurchaseAccount() const {
    return m_nb_purchase_account;
}
void OAIAcctInfo::setNbPurchaseAccount(const QString &nb_purchase_account) {
    m_nb_purchase_account = nb_purchase_account;
    m_nb_purchase_account_isSet = true;
}

bool OAIAcctInfo::is_nb_purchase_account_Set() const{
    return m_nb_purchase_account_isSet;
}

bool OAIAcctInfo::is_nb_purchase_account_Valid() const{
    return m_nb_purchase_account_isValid;
}

QString OAIAcctInfo::getPaymentAccAge() const {
    return m_payment_acc_age;
}
void OAIAcctInfo::setPaymentAccAge(const QString &payment_acc_age) {
    m_payment_acc_age = payment_acc_age;
    m_payment_acc_age_isSet = true;
}

bool OAIAcctInfo::is_payment_acc_age_Set() const{
    return m_payment_acc_age_isSet;
}

bool OAIAcctInfo::is_payment_acc_age_Valid() const{
    return m_payment_acc_age_isValid;
}

QString OAIAcctInfo::getPaymentAccInd() const {
    return m_payment_acc_ind;
}
void OAIAcctInfo::setPaymentAccInd(const QString &payment_acc_ind) {
    m_payment_acc_ind = payment_acc_ind;
    m_payment_acc_ind_isSet = true;
}

bool OAIAcctInfo::is_payment_acc_ind_Set() const{
    return m_payment_acc_ind_isSet;
}

bool OAIAcctInfo::is_payment_acc_ind_Valid() const{
    return m_payment_acc_ind_isValid;
}

QString OAIAcctInfo::getProvisionAttemptsDay() const {
    return m_provision_attempts_day;
}
void OAIAcctInfo::setProvisionAttemptsDay(const QString &provision_attempts_day) {
    m_provision_attempts_day = provision_attempts_day;
    m_provision_attempts_day_isSet = true;
}

bool OAIAcctInfo::is_provision_attempts_day_Set() const{
    return m_provision_attempts_day_isSet;
}

bool OAIAcctInfo::is_provision_attempts_day_Valid() const{
    return m_provision_attempts_day_isValid;
}

QString OAIAcctInfo::getShipAddressUsage() const {
    return m_ship_address_usage;
}
void OAIAcctInfo::setShipAddressUsage(const QString &ship_address_usage) {
    m_ship_address_usage = ship_address_usage;
    m_ship_address_usage_isSet = true;
}

bool OAIAcctInfo::is_ship_address_usage_Set() const{
    return m_ship_address_usage_isSet;
}

bool OAIAcctInfo::is_ship_address_usage_Valid() const{
    return m_ship_address_usage_isValid;
}

QString OAIAcctInfo::getShipAddressUsageInd() const {
    return m_ship_address_usage_ind;
}
void OAIAcctInfo::setShipAddressUsageInd(const QString &ship_address_usage_ind) {
    m_ship_address_usage_ind = ship_address_usage_ind;
    m_ship_address_usage_ind_isSet = true;
}

bool OAIAcctInfo::is_ship_address_usage_ind_Set() const{
    return m_ship_address_usage_ind_isSet;
}

bool OAIAcctInfo::is_ship_address_usage_ind_Valid() const{
    return m_ship_address_usage_ind_isValid;
}

QString OAIAcctInfo::getShipNameIndicator() const {
    return m_ship_name_indicator;
}
void OAIAcctInfo::setShipNameIndicator(const QString &ship_name_indicator) {
    m_ship_name_indicator = ship_name_indicator;
    m_ship_name_indicator_isSet = true;
}

bool OAIAcctInfo::is_ship_name_indicator_Set() const{
    return m_ship_name_indicator_isSet;
}

bool OAIAcctInfo::is_ship_name_indicator_Valid() const{
    return m_ship_name_indicator_isValid;
}

QString OAIAcctInfo::getSuspiciousAccActivity() const {
    return m_suspicious_acc_activity;
}
void OAIAcctInfo::setSuspiciousAccActivity(const QString &suspicious_acc_activity) {
    m_suspicious_acc_activity = suspicious_acc_activity;
    m_suspicious_acc_activity_isSet = true;
}

bool OAIAcctInfo::is_suspicious_acc_activity_Set() const{
    return m_suspicious_acc_activity_isSet;
}

bool OAIAcctInfo::is_suspicious_acc_activity_Valid() const{
    return m_suspicious_acc_activity_isValid;
}

QString OAIAcctInfo::getTxnActivityDay() const {
    return m_txn_activity_day;
}
void OAIAcctInfo::setTxnActivityDay(const QString &txn_activity_day) {
    m_txn_activity_day = txn_activity_day;
    m_txn_activity_day_isSet = true;
}

bool OAIAcctInfo::is_txn_activity_day_Set() const{
    return m_txn_activity_day_isSet;
}

bool OAIAcctInfo::is_txn_activity_day_Valid() const{
    return m_txn_activity_day_isValid;
}

QString OAIAcctInfo::getTxnActivityYear() const {
    return m_txn_activity_year;
}
void OAIAcctInfo::setTxnActivityYear(const QString &txn_activity_year) {
    m_txn_activity_year = txn_activity_year;
    m_txn_activity_year_isSet = true;
}

bool OAIAcctInfo::is_txn_activity_year_Set() const{
    return m_txn_activity_year_isSet;
}

bool OAIAcctInfo::is_txn_activity_year_Valid() const{
    return m_txn_activity_year_isValid;
}

bool OAIAcctInfo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_ch_acc_age_ind_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ch_acc_change_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ch_acc_change_ind_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ch_acc_pw_change_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ch_acc_pw_change_ind_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ch_acc_string_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_nb_purchase_account_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_payment_acc_age_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_payment_acc_ind_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_provision_attempts_day_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ship_address_usage_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ship_address_usage_ind_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ship_name_indicator_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_suspicious_acc_activity_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_txn_activity_day_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_txn_activity_year_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAcctInfo::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
