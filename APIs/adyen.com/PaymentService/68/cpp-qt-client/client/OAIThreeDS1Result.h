/**
 * Adyen Payment API
 * A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.  To learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).  ## Authentication You need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.  If using an API key, add an `X-API-Key` header with the API key as the value, for example:   ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ```  Alternatively, you can use the username and password to connect to the API using basic authentication, for example:  ``` curl -U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\ -H \"Content-Type: application/json\" \\ ... ```  ## Versioning Payments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://pal-test.adyen.com/pal/servlet/Payment/v68/authorise ```  ## Going live  To authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.  The live endpoint URLs contain a prefix which is unique to your company account: ```  https://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payment/v68/authorise ```  Get your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.
 *
 * The version of the OpenAPI document: 68
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIThreeDS1Result.h
 *
 * 
 */

#ifndef OAIThreeDS1Result_H
#define OAIThreeDS1Result_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIThreeDS1Result : public OAIObject {
public:
    OAIThreeDS1Result();
    OAIThreeDS1Result(QString json);
    ~OAIThreeDS1Result() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCavv() const;
    void setCavv(const QString &cavv);
    bool is_cavv_Set() const;
    bool is_cavv_Valid() const;

    QString getCavvAlgorithm() const;
    void setCavvAlgorithm(const QString &cavv_algorithm);
    bool is_cavv_algorithm_Set() const;
    bool is_cavv_algorithm_Valid() const;

    QString getEci() const;
    void setEci(const QString &eci);
    bool is_eci_Set() const;
    bool is_eci_Valid() const;

    QString getThreeDAuthenticatedResponse() const;
    void setThreeDAuthenticatedResponse(const QString &three_d_authenticated_response);
    bool is_three_d_authenticated_response_Set() const;
    bool is_three_d_authenticated_response_Valid() const;

    QString getThreeDOfferedResponse() const;
    void setThreeDOfferedResponse(const QString &three_d_offered_response);
    bool is_three_d_offered_response_Set() const;
    bool is_three_d_offered_response_Valid() const;

    QString getXid() const;
    void setXid(const QString &xid);
    bool is_xid_Set() const;
    bool is_xid_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_cavv;
    bool m_cavv_isSet;
    bool m_cavv_isValid;

    QString m_cavv_algorithm;
    bool m_cavv_algorithm_isSet;
    bool m_cavv_algorithm_isValid;

    QString m_eci;
    bool m_eci_isSet;
    bool m_eci_isValid;

    QString m_three_d_authenticated_response;
    bool m_three_d_authenticated_response_isSet;
    bool m_three_d_authenticated_response_isValid;

    QString m_three_d_offered_response;
    bool m_three_d_offered_response_isSet;
    bool m_three_d_offered_response_isValid;

    QString m_xid;
    bool m_xid_isSet;
    bool m_xid_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIThreeDS1Result)

#endif // OAIThreeDS1Result_H
