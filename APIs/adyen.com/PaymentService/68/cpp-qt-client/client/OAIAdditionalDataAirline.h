/**
 * Adyen Payment API
 * A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.  To learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).  ## Authentication You need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.  If using an API key, add an `X-API-Key` header with the API key as the value, for example:   ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ```  Alternatively, you can use the username and password to connect to the API using basic authentication, for example:  ``` curl -U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\ -H \"Content-Type: application/json\" \\ ... ```  ## Versioning Payments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://pal-test.adyen.com/pal/servlet/Payment/v68/authorise ```  ## Going live  To authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.  The live endpoint URLs contain a prefix which is unique to your company account: ```  https://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payment/v68/authorise ```  Get your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.
 *
 * The version of the OpenAPI document: 68
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAdditionalDataAirline.h
 *
 * 
 */

#ifndef OAIAdditionalDataAirline_H
#define OAIAdditionalDataAirline_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAdditionalDataAirline : public OAIObject {
public:
    OAIAdditionalDataAirline();
    OAIAdditionalDataAirline(QString json);
    ~OAIAdditionalDataAirline() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAirlineAgencyInvoiceNumber() const;
    void setAirlineAgencyInvoiceNumber(const QString &airline_agency_invoice_number);
    bool is_airline_agency_invoice_number_Set() const;
    bool is_airline_agency_invoice_number_Valid() const;

    QString getAirlineAgencyPlanName() const;
    void setAirlineAgencyPlanName(const QString &airline_agency_plan_name);
    bool is_airline_agency_plan_name_Set() const;
    bool is_airline_agency_plan_name_Valid() const;

    QString getAirlineAirlineCode() const;
    void setAirlineAirlineCode(const QString &airline_airline_code);
    bool is_airline_airline_code_Set() const;
    bool is_airline_airline_code_Valid() const;

    QString getAirlineAirlineDesignatorCode() const;
    void setAirlineAirlineDesignatorCode(const QString &airline_airline_designator_code);
    bool is_airline_airline_designator_code_Set() const;
    bool is_airline_airline_designator_code_Valid() const;

    QString getAirlineBoardingFee() const;
    void setAirlineBoardingFee(const QString &airline_boarding_fee);
    bool is_airline_boarding_fee_Set() const;
    bool is_airline_boarding_fee_Valid() const;

    QString getAirlineComputerizedReservationSystem() const;
    void setAirlineComputerizedReservationSystem(const QString &airline_computerized_reservation_system);
    bool is_airline_computerized_reservation_system_Set() const;
    bool is_airline_computerized_reservation_system_Valid() const;

    QString getAirlineCustomerReferenceNumber() const;
    void setAirlineCustomerReferenceNumber(const QString &airline_customer_reference_number);
    bool is_airline_customer_reference_number_Set() const;
    bool is_airline_customer_reference_number_Valid() const;

    QString getAirlineDocumentType() const;
    void setAirlineDocumentType(const QString &airline_document_type);
    bool is_airline_document_type_Set() const;
    bool is_airline_document_type_Valid() const;

    QString getAirlineFlightDate() const;
    void setAirlineFlightDate(const QString &airline_flight_date);
    bool is_airline_flight_date_Set() const;
    bool is_airline_flight_date_Valid() const;

    QString getAirlineLegCarrierCode() const;
    void setAirlineLegCarrierCode(const QString &airline_leg_carrier_code);
    bool is_airline_leg_carrier_code_Set() const;
    bool is_airline_leg_carrier_code_Valid() const;

    QString getAirlineLegClassOfTravel() const;
    void setAirlineLegClassOfTravel(const QString &airline_leg_class_of_travel);
    bool is_airline_leg_class_of_travel_Set() const;
    bool is_airline_leg_class_of_travel_Valid() const;

    QString getAirlineLegDateOfTravel() const;
    void setAirlineLegDateOfTravel(const QString &airline_leg_date_of_travel);
    bool is_airline_leg_date_of_travel_Set() const;
    bool is_airline_leg_date_of_travel_Valid() const;

    QString getAirlineLegDepartAirport() const;
    void setAirlineLegDepartAirport(const QString &airline_leg_depart_airport);
    bool is_airline_leg_depart_airport_Set() const;
    bool is_airline_leg_depart_airport_Valid() const;

    QString getAirlineLegDepartTax() const;
    void setAirlineLegDepartTax(const QString &airline_leg_depart_tax);
    bool is_airline_leg_depart_tax_Set() const;
    bool is_airline_leg_depart_tax_Valid() const;

    QString getAirlineLegDestinationCode() const;
    void setAirlineLegDestinationCode(const QString &airline_leg_destination_code);
    bool is_airline_leg_destination_code_Set() const;
    bool is_airline_leg_destination_code_Valid() const;

    QString getAirlineLegFareBaseCode() const;
    void setAirlineLegFareBaseCode(const QString &airline_leg_fare_base_code);
    bool is_airline_leg_fare_base_code_Set() const;
    bool is_airline_leg_fare_base_code_Valid() const;

    QString getAirlineLegFlightNumber() const;
    void setAirlineLegFlightNumber(const QString &airline_leg_flight_number);
    bool is_airline_leg_flight_number_Set() const;
    bool is_airline_leg_flight_number_Valid() const;

    QString getAirlineLegStopOverCode() const;
    void setAirlineLegStopOverCode(const QString &airline_leg_stop_over_code);
    bool is_airline_leg_stop_over_code_Set() const;
    bool is_airline_leg_stop_over_code_Valid() const;

    QString getAirlinePassengerDateOfBirth() const;
    void setAirlinePassengerDateOfBirth(const QString &airline_passenger_date_of_birth);
    bool is_airline_passenger_date_of_birth_Set() const;
    bool is_airline_passenger_date_of_birth_Valid() const;

    QString getAirlinePassengerFirstName() const;
    void setAirlinePassengerFirstName(const QString &airline_passenger_first_name);
    bool is_airline_passenger_first_name_Set() const;
    bool is_airline_passenger_first_name_Valid() const;

    QString getAirlinePassengerLastName() const;
    void setAirlinePassengerLastName(const QString &airline_passenger_last_name);
    bool is_airline_passenger_last_name_Set() const;
    bool is_airline_passenger_last_name_Valid() const;

    QString getAirlinePassengerTelephoneNumber() const;
    void setAirlinePassengerTelephoneNumber(const QString &airline_passenger_telephone_number);
    bool is_airline_passenger_telephone_number_Set() const;
    bool is_airline_passenger_telephone_number_Valid() const;

    QString getAirlinePassengerTravellerType() const;
    void setAirlinePassengerTravellerType(const QString &airline_passenger_traveller_type);
    bool is_airline_passenger_traveller_type_Set() const;
    bool is_airline_passenger_traveller_type_Valid() const;

    QString getAirlinePassengerName() const;
    void setAirlinePassengerName(const QString &airline_passenger_name);
    bool is_airline_passenger_name_Set() const;
    bool is_airline_passenger_name_Valid() const;

    QString getAirlineTicketIssueAddress() const;
    void setAirlineTicketIssueAddress(const QString &airline_ticket_issue_address);
    bool is_airline_ticket_issue_address_Set() const;
    bool is_airline_ticket_issue_address_Valid() const;

    QString getAirlineTicketNumber() const;
    void setAirlineTicketNumber(const QString &airline_ticket_number);
    bool is_airline_ticket_number_Set() const;
    bool is_airline_ticket_number_Valid() const;

    QString getAirlineTravelAgencyCode() const;
    void setAirlineTravelAgencyCode(const QString &airline_travel_agency_code);
    bool is_airline_travel_agency_code_Set() const;
    bool is_airline_travel_agency_code_Valid() const;

    QString getAirlineTravelAgencyName() const;
    void setAirlineTravelAgencyName(const QString &airline_travel_agency_name);
    bool is_airline_travel_agency_name_Set() const;
    bool is_airline_travel_agency_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_airline_agency_invoice_number;
    bool m_airline_agency_invoice_number_isSet;
    bool m_airline_agency_invoice_number_isValid;

    QString m_airline_agency_plan_name;
    bool m_airline_agency_plan_name_isSet;
    bool m_airline_agency_plan_name_isValid;

    QString m_airline_airline_code;
    bool m_airline_airline_code_isSet;
    bool m_airline_airline_code_isValid;

    QString m_airline_airline_designator_code;
    bool m_airline_airline_designator_code_isSet;
    bool m_airline_airline_designator_code_isValid;

    QString m_airline_boarding_fee;
    bool m_airline_boarding_fee_isSet;
    bool m_airline_boarding_fee_isValid;

    QString m_airline_computerized_reservation_system;
    bool m_airline_computerized_reservation_system_isSet;
    bool m_airline_computerized_reservation_system_isValid;

    QString m_airline_customer_reference_number;
    bool m_airline_customer_reference_number_isSet;
    bool m_airline_customer_reference_number_isValid;

    QString m_airline_document_type;
    bool m_airline_document_type_isSet;
    bool m_airline_document_type_isValid;

    QString m_airline_flight_date;
    bool m_airline_flight_date_isSet;
    bool m_airline_flight_date_isValid;

    QString m_airline_leg_carrier_code;
    bool m_airline_leg_carrier_code_isSet;
    bool m_airline_leg_carrier_code_isValid;

    QString m_airline_leg_class_of_travel;
    bool m_airline_leg_class_of_travel_isSet;
    bool m_airline_leg_class_of_travel_isValid;

    QString m_airline_leg_date_of_travel;
    bool m_airline_leg_date_of_travel_isSet;
    bool m_airline_leg_date_of_travel_isValid;

    QString m_airline_leg_depart_airport;
    bool m_airline_leg_depart_airport_isSet;
    bool m_airline_leg_depart_airport_isValid;

    QString m_airline_leg_depart_tax;
    bool m_airline_leg_depart_tax_isSet;
    bool m_airline_leg_depart_tax_isValid;

    QString m_airline_leg_destination_code;
    bool m_airline_leg_destination_code_isSet;
    bool m_airline_leg_destination_code_isValid;

    QString m_airline_leg_fare_base_code;
    bool m_airline_leg_fare_base_code_isSet;
    bool m_airline_leg_fare_base_code_isValid;

    QString m_airline_leg_flight_number;
    bool m_airline_leg_flight_number_isSet;
    bool m_airline_leg_flight_number_isValid;

    QString m_airline_leg_stop_over_code;
    bool m_airline_leg_stop_over_code_isSet;
    bool m_airline_leg_stop_over_code_isValid;

    QString m_airline_passenger_date_of_birth;
    bool m_airline_passenger_date_of_birth_isSet;
    bool m_airline_passenger_date_of_birth_isValid;

    QString m_airline_passenger_first_name;
    bool m_airline_passenger_first_name_isSet;
    bool m_airline_passenger_first_name_isValid;

    QString m_airline_passenger_last_name;
    bool m_airline_passenger_last_name_isSet;
    bool m_airline_passenger_last_name_isValid;

    QString m_airline_passenger_telephone_number;
    bool m_airline_passenger_telephone_number_isSet;
    bool m_airline_passenger_telephone_number_isValid;

    QString m_airline_passenger_traveller_type;
    bool m_airline_passenger_traveller_type_isSet;
    bool m_airline_passenger_traveller_type_isValid;

    QString m_airline_passenger_name;
    bool m_airline_passenger_name_isSet;
    bool m_airline_passenger_name_isValid;

    QString m_airline_ticket_issue_address;
    bool m_airline_ticket_issue_address_isSet;
    bool m_airline_ticket_issue_address_isValid;

    QString m_airline_ticket_number;
    bool m_airline_ticket_number_isSet;
    bool m_airline_ticket_number_isValid;

    QString m_airline_travel_agency_code;
    bool m_airline_travel_agency_code_isSet;
    bool m_airline_travel_agency_code_isValid;

    QString m_airline_travel_agency_name;
    bool m_airline_travel_agency_name_isSet;
    bool m_airline_travel_agency_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAdditionalDataAirline)

#endif // OAIAdditionalDataAirline_H
