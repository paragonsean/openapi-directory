/**
 * Adyen Payment API
 * A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.  To learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).  ## Authentication You need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.  If using an API key, add an `X-API-Key` header with the API key as the value, for example:   ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ```  Alternatively, you can use the username and password to connect to the API using basic authentication, for example:  ``` curl -U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\ -H \"Content-Type: application/json\" \\ ... ```  ## Versioning Payments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://pal-test.adyen.com/pal/servlet/Payment/v68/authorise ```  ## Going live  To authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.  The live endpoint URLs contain a prefix which is unique to your company account: ```  https://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payment/v68/authorise ```  Get your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.
 *
 * The version of the OpenAPI document: 68
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ModificationResult model module.
 * @module model/ModificationResult
 * @version 68
 */
class ModificationResult {
    /**
     * Constructs a new <code>ModificationResult</code>.
     * @alias module:model/ModificationResult
     * @param pspReference {String} Adyen's 16-character string reference associated with the transaction/request. This value is globally unique; quote it when communicating with us about this request.
     * @param response {module:model/ModificationResult.ResponseEnum} Indicates if the modification request has been received for processing.
     */
    constructor(pspReference, response) { 
        
        ModificationResult.initialize(this, pspReference, response);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, pspReference, response) { 
        obj['pspReference'] = pspReference;
        obj['response'] = response;
    }

    /**
     * Constructs a <code>ModificationResult</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ModificationResult} obj Optional instance to populate.
     * @return {module:model/ModificationResult} The populated <code>ModificationResult</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ModificationResult();

            if (data.hasOwnProperty('additionalData')) {
                obj['additionalData'] = ApiClient.convertToType(data['additionalData'], {'String': 'String'});
            }
            if (data.hasOwnProperty('pspReference')) {
                obj['pspReference'] = ApiClient.convertToType(data['pspReference'], 'String');
            }
            if (data.hasOwnProperty('response')) {
                obj['response'] = ApiClient.convertToType(data['response'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ModificationResult</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ModificationResult</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ModificationResult.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['pspReference'] && !(typeof data['pspReference'] === 'string' || data['pspReference'] instanceof String)) {
            throw new Error("Expected the field `pspReference` to be a primitive type in the JSON string but got " + data['pspReference']);
        }
        // ensure the json data is a string
        if (data['response'] && !(typeof data['response'] === 'string' || data['response'] instanceof String)) {
            throw new Error("Expected the field `response` to be a primitive type in the JSON string but got " + data['response']);
        }

        return true;
    }


}

ModificationResult.RequiredProperties = ["pspReference", "response"];

/**
 * This field contains additional data, which may be returned in a particular modification response.
 * @member {Object.<String, String>} additionalData
 */
ModificationResult.prototype['additionalData'] = undefined;

/**
 * Adyen's 16-character string reference associated with the transaction/request. This value is globally unique; quote it when communicating with us about this request.
 * @member {String} pspReference
 */
ModificationResult.prototype['pspReference'] = undefined;

/**
 * Indicates if the modification request has been received for processing.
 * @member {module:model/ModificationResult.ResponseEnum} response
 */
ModificationResult.prototype['response'] = undefined;





/**
 * Allowed values for the <code>response</code> property.
 * @enum {String}
 * @readonly
 */
ModificationResult['ResponseEnum'] = {

    /**
     * value: "[capture-received]"
     * @const
     */
    "capture-received]": "[capture-received]",

    /**
     * value: "[cancel-received]"
     * @const
     */
    "cancel-received]": "[cancel-received]",

    /**
     * value: "[refund-received]"
     * @const
     */
    "refund-received]": "[refund-received]",

    /**
     * value: "[cancelOrRefund-received]"
     * @const
     */
    "cancelOrRefund-received]": "[cancelOrRefund-received]",

    /**
     * value: "[adjustAuthorisation-received]"
     * @const
     */
    "adjustAuthorisation-received]": "[adjustAuthorisation-received]",

    /**
     * value: "[donation-received]"
     * @const
     */
    "donation-received]": "[donation-received]",

    /**
     * value: "[technical-cancel-received]"
     * @const
     */
    "technical-cancel-received]": "[technical-cancel-received]",

    /**
     * value: "[voidPendingRefund-received]"
     * @const
     */
    "voidPendingRefund-received]": "[voidPendingRefund-received]"
};



export default ModificationResult;

