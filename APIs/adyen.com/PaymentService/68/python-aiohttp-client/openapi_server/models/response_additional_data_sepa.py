# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ResponseAdditionalDataSepa(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, sepadirectdebit_date_of_signature: str=None, sepadirectdebit_mandate_id: str=None, sepadirectdebit_sequence_type: str=None):
        """ResponseAdditionalDataSepa - a model defined in OpenAPI

        :param sepadirectdebit_date_of_signature: The sepadirectdebit_date_of_signature of this ResponseAdditionalDataSepa.
        :param sepadirectdebit_mandate_id: The sepadirectdebit_mandate_id of this ResponseAdditionalDataSepa.
        :param sepadirectdebit_sequence_type: The sepadirectdebit_sequence_type of this ResponseAdditionalDataSepa.
        """
        self.openapi_types = {
            'sepadirectdebit_date_of_signature': str,
            'sepadirectdebit_mandate_id': str,
            'sepadirectdebit_sequence_type': str
        }

        self.attribute_map = {
            'sepadirectdebit_date_of_signature': 'sepadirectdebit.dateOfSignature',
            'sepadirectdebit_mandate_id': 'sepadirectdebit.mandateId',
            'sepadirectdebit_sequence_type': 'sepadirectdebit.sequenceType'
        }

        self._sepadirectdebit_date_of_signature = sepadirectdebit_date_of_signature
        self._sepadirectdebit_mandate_id = sepadirectdebit_mandate_id
        self._sepadirectdebit_sequence_type = sepadirectdebit_sequence_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ResponseAdditionalDataSepa':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ResponseAdditionalDataSepa of this ResponseAdditionalDataSepa.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def sepadirectdebit_date_of_signature(self):
        """Gets the sepadirectdebit_date_of_signature of this ResponseAdditionalDataSepa.

        The transaction signature date.  Format: yyyy-MM-dd

        :return: The sepadirectdebit_date_of_signature of this ResponseAdditionalDataSepa.
        :rtype: str
        """
        return self._sepadirectdebit_date_of_signature

    @sepadirectdebit_date_of_signature.setter
    def sepadirectdebit_date_of_signature(self, sepadirectdebit_date_of_signature):
        """Sets the sepadirectdebit_date_of_signature of this ResponseAdditionalDataSepa.

        The transaction signature date.  Format: yyyy-MM-dd

        :param sepadirectdebit_date_of_signature: The sepadirectdebit_date_of_signature of this ResponseAdditionalDataSepa.
        :type sepadirectdebit_date_of_signature: str
        """

        self._sepadirectdebit_date_of_signature = sepadirectdebit_date_of_signature

    @property
    def sepadirectdebit_mandate_id(self):
        """Gets the sepadirectdebit_mandate_id of this ResponseAdditionalDataSepa.

        Its value corresponds to the pspReference value of the transaction.

        :return: The sepadirectdebit_mandate_id of this ResponseAdditionalDataSepa.
        :rtype: str
        """
        return self._sepadirectdebit_mandate_id

    @sepadirectdebit_mandate_id.setter
    def sepadirectdebit_mandate_id(self, sepadirectdebit_mandate_id):
        """Sets the sepadirectdebit_mandate_id of this ResponseAdditionalDataSepa.

        Its value corresponds to the pspReference value of the transaction.

        :param sepadirectdebit_mandate_id: The sepadirectdebit_mandate_id of this ResponseAdditionalDataSepa.
        :type sepadirectdebit_mandate_id: str
        """

        self._sepadirectdebit_mandate_id = sepadirectdebit_mandate_id

    @property
    def sepadirectdebit_sequence_type(self):
        """Gets the sepadirectdebit_sequence_type of this ResponseAdditionalDataSepa.

        This field can take one of the following values: * OneOff: (OOFF) Direct debit instruction to initiate exactly one direct debit transaction.  * First: (FRST) Initial/first collection in a series of direct debit instructions. * Recurring: (RCUR) Direct debit instruction to carry out regular direct debit transactions initiated by the creditor. * Final: (FNAL) Last/final collection in a series of direct debit instructions.  Example: OOFF

        :return: The sepadirectdebit_sequence_type of this ResponseAdditionalDataSepa.
        :rtype: str
        """
        return self._sepadirectdebit_sequence_type

    @sepadirectdebit_sequence_type.setter
    def sepadirectdebit_sequence_type(self, sepadirectdebit_sequence_type):
        """Sets the sepadirectdebit_sequence_type of this ResponseAdditionalDataSepa.

        This field can take one of the following values: * OneOff: (OOFF) Direct debit instruction to initiate exactly one direct debit transaction.  * First: (FRST) Initial/first collection in a series of direct debit instructions. * Recurring: (RCUR) Direct debit instruction to carry out regular direct debit transactions initiated by the creditor. * Final: (FNAL) Last/final collection in a series of direct debit instructions.  Example: OOFF

        :param sepadirectdebit_sequence_type: The sepadirectdebit_sequence_type of this ResponseAdditionalDataSepa.
        :type sepadirectdebit_sequence_type: str
        """

        self._sepadirectdebit_sequence_type = sepadirectdebit_sequence_type
