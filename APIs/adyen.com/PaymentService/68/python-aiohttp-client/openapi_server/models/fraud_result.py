# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.fraud_check_result_wrapper import FraudCheckResultWrapper
from openapi_server import util


class FraudResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_score: int=None, results: List[FraudCheckResultWrapper]=None):
        """FraudResult - a model defined in OpenAPI

        :param account_score: The account_score of this FraudResult.
        :param results: The results of this FraudResult.
        """
        self.openapi_types = {
            'account_score': int,
            'results': List[FraudCheckResultWrapper]
        }

        self.attribute_map = {
            'account_score': 'accountScore',
            'results': 'results'
        }

        self._account_score = account_score
        self._results = results

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FraudResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FraudResult of this FraudResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_score(self):
        """Gets the account_score of this FraudResult.

        The total fraud score generated by the risk checks.

        :return: The account_score of this FraudResult.
        :rtype: int
        """
        return self._account_score

    @account_score.setter
    def account_score(self, account_score):
        """Sets the account_score of this FraudResult.

        The total fraud score generated by the risk checks.

        :param account_score: The account_score of this FraudResult.
        :type account_score: int
        """
        if account_score is None:
            raise ValueError("Invalid value for `account_score`, must not be `None`")

        self._account_score = account_score

    @property
    def results(self):
        """Gets the results of this FraudResult.

        The result of the individual risk checks.

        :return: The results of this FraudResult.
        :rtype: List[FraudCheckResultWrapper]
        """
        return self._results

    @results.setter
    def results(self, results):
        """Sets the results of this FraudResult.

        The result of the individual risk checks.

        :param results: The results of this FraudResult.
        :type results: List[FraudCheckResultWrapper]
        """

        self._results = results
