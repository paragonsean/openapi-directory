/**
 * Configuration webhooks
 * Adyen sends webhooks to inform your system about events that occur in your platform. These events include, for example, when an account holder's capabilities are updated, or when a sweep configuration is created or updated.  When an event occurs, Adyen makes an HTTP POST request to a URL on your server and includes the details of the event in the request body.  You can use these webhooks to build your implementation. For example, you can use this information to update internal statuses when the status of a capability is changed.
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPlatformPaymentConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPlatformPaymentConfiguration::OAIPlatformPaymentConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPlatformPaymentConfiguration::OAIPlatformPaymentConfiguration() {
    this->initializeModel();
}

OAIPlatformPaymentConfiguration::~OAIPlatformPaymentConfiguration() {}

void OAIPlatformPaymentConfiguration::initializeModel() {

    m_sales_day_closing_time_isSet = false;
    m_sales_day_closing_time_isValid = false;

    m_settlement_delay_days_isSet = false;
    m_settlement_delay_days_isValid = false;
}

void OAIPlatformPaymentConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPlatformPaymentConfiguration::fromJsonObject(QJsonObject json) {

    m_sales_day_closing_time_isValid = ::OpenAPI::fromJsonValue(m_sales_day_closing_time, json[QString("salesDayClosingTime")]);
    m_sales_day_closing_time_isSet = !json[QString("salesDayClosingTime")].isNull() && m_sales_day_closing_time_isValid;

    m_settlement_delay_days_isValid = ::OpenAPI::fromJsonValue(m_settlement_delay_days, json[QString("settlementDelayDays")]);
    m_settlement_delay_days_isSet = !json[QString("settlementDelayDays")].isNull() && m_settlement_delay_days_isValid;
}

QString OAIPlatformPaymentConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPlatformPaymentConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_sales_day_closing_time_isSet) {
        obj.insert(QString("salesDayClosingTime"), ::OpenAPI::toJsonValue(m_sales_day_closing_time));
    }
    if (m_settlement_delay_days_isSet) {
        obj.insert(QString("settlementDelayDays"), ::OpenAPI::toJsonValue(m_settlement_delay_days));
    }
    return obj;
}

QString OAIPlatformPaymentConfiguration::getSalesDayClosingTime() const {
    return m_sales_day_closing_time;
}
void OAIPlatformPaymentConfiguration::setSalesDayClosingTime(const QString &sales_day_closing_time) {
    m_sales_day_closing_time = sales_day_closing_time;
    m_sales_day_closing_time_isSet = true;
}

bool OAIPlatformPaymentConfiguration::is_sales_day_closing_time_Set() const{
    return m_sales_day_closing_time_isSet;
}

bool OAIPlatformPaymentConfiguration::is_sales_day_closing_time_Valid() const{
    return m_sales_day_closing_time_isValid;
}

qint32 OAIPlatformPaymentConfiguration::getSettlementDelayDays() const {
    return m_settlement_delay_days;
}
void OAIPlatformPaymentConfiguration::setSettlementDelayDays(const qint32 &settlement_delay_days) {
    m_settlement_delay_days = settlement_delay_days;
    m_settlement_delay_days_isSet = true;
}

bool OAIPlatformPaymentConfiguration::is_settlement_delay_days_Set() const{
    return m_settlement_delay_days_isSet;
}

bool OAIPlatformPaymentConfiguration::is_settlement_delay_days_Valid() const{
    return m_settlement_delay_days_isValid;
}

bool OAIPlatformPaymentConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_sales_day_closing_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_settlement_delay_days_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPlatformPaymentConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
