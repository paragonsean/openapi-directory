/**
 * Configuration webhooks
 * Adyen sends webhooks to inform your system about events that occur in your platform. These events include, for example, when an account holder's capabilities are updated, or when a sweep configuration is created or updated.  When an event occurs, Adyen makes an HTTP POST request to a URL on your server and includes the details of the event in the request body.  You can use these webhooks to build your implementation. For example, you can use this information to update internal statuses when the status of a capability is changed.
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICapabilityProblem.h
 *
 * 
 */

#ifndef OAICapabilityProblem_H
#define OAICapabilityProblem_H

#include <QJsonObject>

#include "OAICapabilityProblemEntity.h"
#include "OAIVerificationError.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICapabilityProblemEntity;
class OAIVerificationError;

class OAICapabilityProblem : public OAIObject {
public:
    OAICapabilityProblem();
    OAICapabilityProblem(QString json);
    ~OAICapabilityProblem() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAICapabilityProblemEntity getEntity() const;
    void setEntity(const OAICapabilityProblemEntity &entity);
    bool is_entity_Set() const;
    bool is_entity_Valid() const;

    QList<OAIVerificationError> getVerificationErrors() const;
    void setVerificationErrors(const QList<OAIVerificationError> &verification_errors);
    bool is_verification_errors_Set() const;
    bool is_verification_errors_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAICapabilityProblemEntity m_entity;
    bool m_entity_isSet;
    bool m_entity_isValid;

    QList<OAIVerificationError> m_verification_errors;
    bool m_verification_errors_isSet;
    bool m_verification_errors_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICapabilityProblem)

#endif // OAICapabilityProblem_H
