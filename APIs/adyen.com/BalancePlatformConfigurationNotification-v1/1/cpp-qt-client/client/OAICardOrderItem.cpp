/**
 * Configuration webhooks
 * Adyen sends webhooks to inform your system about events that occur in your platform. These events include, for example, when an account holder's capabilities are updated, or when a sweep configuration is created or updated.  When an event occurs, Adyen makes an HTTP POST request to a URL on your server and includes the details of the event in the request body.  You can use these webhooks to build your implementation. For example, you can use this information to update internal statuses when the status of a capability is changed.
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICardOrderItem.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICardOrderItem::OAICardOrderItem(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICardOrderItem::OAICardOrderItem() {
    this->initializeModel();
}

OAICardOrderItem::~OAICardOrderItem() {}

void OAICardOrderItem::initializeModel() {

    m_balance_platform_isSet = false;
    m_balance_platform_isValid = false;

    m_card_isSet = false;
    m_card_isValid = false;

    m_card_order_item_id_isSet = false;
    m_card_order_item_id_isValid = false;

    m_creation_date_isSet = false;
    m_creation_date_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_payment_instrument_id_isSet = false;
    m_payment_instrument_id_isValid = false;

    m_pin_isSet = false;
    m_pin_isValid = false;

    m_shipping_method_isSet = false;
    m_shipping_method_isValid = false;
}

void OAICardOrderItem::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICardOrderItem::fromJsonObject(QJsonObject json) {

    m_balance_platform_isValid = ::OpenAPI::fromJsonValue(m_balance_platform, json[QString("balancePlatform")]);
    m_balance_platform_isSet = !json[QString("balancePlatform")].isNull() && m_balance_platform_isValid;

    m_card_isValid = ::OpenAPI::fromJsonValue(m_card, json[QString("card")]);
    m_card_isSet = !json[QString("card")].isNull() && m_card_isValid;

    m_card_order_item_id_isValid = ::OpenAPI::fromJsonValue(m_card_order_item_id, json[QString("cardOrderItemId")]);
    m_card_order_item_id_isSet = !json[QString("cardOrderItemId")].isNull() && m_card_order_item_id_isValid;

    m_creation_date_isValid = ::OpenAPI::fromJsonValue(m_creation_date, json[QString("creationDate")]);
    m_creation_date_isSet = !json[QString("creationDate")].isNull() && m_creation_date_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_payment_instrument_id_isValid = ::OpenAPI::fromJsonValue(m_payment_instrument_id, json[QString("paymentInstrumentId")]);
    m_payment_instrument_id_isSet = !json[QString("paymentInstrumentId")].isNull() && m_payment_instrument_id_isValid;

    m_pin_isValid = ::OpenAPI::fromJsonValue(m_pin, json[QString("pin")]);
    m_pin_isSet = !json[QString("pin")].isNull() && m_pin_isValid;

    m_shipping_method_isValid = ::OpenAPI::fromJsonValue(m_shipping_method, json[QString("shippingMethod")]);
    m_shipping_method_isSet = !json[QString("shippingMethod")].isNull() && m_shipping_method_isValid;
}

QString OAICardOrderItem::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICardOrderItem::asJsonObject() const {
    QJsonObject obj;
    if (m_balance_platform_isSet) {
        obj.insert(QString("balancePlatform"), ::OpenAPI::toJsonValue(m_balance_platform));
    }
    if (m_card.isSet()) {
        obj.insert(QString("card"), ::OpenAPI::toJsonValue(m_card));
    }
    if (m_card_order_item_id_isSet) {
        obj.insert(QString("cardOrderItemId"), ::OpenAPI::toJsonValue(m_card_order_item_id));
    }
    if (m_creation_date_isSet) {
        obj.insert(QString("creationDate"), ::OpenAPI::toJsonValue(m_creation_date));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_payment_instrument_id_isSet) {
        obj.insert(QString("paymentInstrumentId"), ::OpenAPI::toJsonValue(m_payment_instrument_id));
    }
    if (m_pin.isSet()) {
        obj.insert(QString("pin"), ::OpenAPI::toJsonValue(m_pin));
    }
    if (m_shipping_method_isSet) {
        obj.insert(QString("shippingMethod"), ::OpenAPI::toJsonValue(m_shipping_method));
    }
    return obj;
}

QString OAICardOrderItem::getBalancePlatform() const {
    return m_balance_platform;
}
void OAICardOrderItem::setBalancePlatform(const QString &balance_platform) {
    m_balance_platform = balance_platform;
    m_balance_platform_isSet = true;
}

bool OAICardOrderItem::is_balance_platform_Set() const{
    return m_balance_platform_isSet;
}

bool OAICardOrderItem::is_balance_platform_Valid() const{
    return m_balance_platform_isValid;
}

OAICardOrderItemDeliveryStatus OAICardOrderItem::getCard() const {
    return m_card;
}
void OAICardOrderItem::setCard(const OAICardOrderItemDeliveryStatus &card) {
    m_card = card;
    m_card_isSet = true;
}

bool OAICardOrderItem::is_card_Set() const{
    return m_card_isSet;
}

bool OAICardOrderItem::is_card_Valid() const{
    return m_card_isValid;
}

QString OAICardOrderItem::getCardOrderItemId() const {
    return m_card_order_item_id;
}
void OAICardOrderItem::setCardOrderItemId(const QString &card_order_item_id) {
    m_card_order_item_id = card_order_item_id;
    m_card_order_item_id_isSet = true;
}

bool OAICardOrderItem::is_card_order_item_id_Set() const{
    return m_card_order_item_id_isSet;
}

bool OAICardOrderItem::is_card_order_item_id_Valid() const{
    return m_card_order_item_id_isValid;
}

QDateTime OAICardOrderItem::getCreationDate() const {
    return m_creation_date;
}
void OAICardOrderItem::setCreationDate(const QDateTime &creation_date) {
    m_creation_date = creation_date;
    m_creation_date_isSet = true;
}

bool OAICardOrderItem::is_creation_date_Set() const{
    return m_creation_date_isSet;
}

bool OAICardOrderItem::is_creation_date_Valid() const{
    return m_creation_date_isValid;
}

QString OAICardOrderItem::getId() const {
    return m_id;
}
void OAICardOrderItem::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAICardOrderItem::is_id_Set() const{
    return m_id_isSet;
}

bool OAICardOrderItem::is_id_Valid() const{
    return m_id_isValid;
}

QString OAICardOrderItem::getPaymentInstrumentId() const {
    return m_payment_instrument_id;
}
void OAICardOrderItem::setPaymentInstrumentId(const QString &payment_instrument_id) {
    m_payment_instrument_id = payment_instrument_id;
    m_payment_instrument_id_isSet = true;
}

bool OAICardOrderItem::is_payment_instrument_id_Set() const{
    return m_payment_instrument_id_isSet;
}

bool OAICardOrderItem::is_payment_instrument_id_Valid() const{
    return m_payment_instrument_id_isValid;
}

OAICardOrderItemDeliveryStatus OAICardOrderItem::getPin() const {
    return m_pin;
}
void OAICardOrderItem::setPin(const OAICardOrderItemDeliveryStatus &pin) {
    m_pin = pin;
    m_pin_isSet = true;
}

bool OAICardOrderItem::is_pin_Set() const{
    return m_pin_isSet;
}

bool OAICardOrderItem::is_pin_Valid() const{
    return m_pin_isValid;
}

QString OAICardOrderItem::getShippingMethod() const {
    return m_shipping_method;
}
void OAICardOrderItem::setShippingMethod(const QString &shipping_method) {
    m_shipping_method = shipping_method;
    m_shipping_method_isSet = true;
}

bool OAICardOrderItem::is_shipping_method_Set() const{
    return m_shipping_method_isSet;
}

bool OAICardOrderItem::is_shipping_method_Valid() const{
    return m_shipping_method_isValid;
}

bool OAICardOrderItem::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_balance_platform_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_card.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_card_order_item_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_creation_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_payment_instrument_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pin.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipping_method_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICardOrderItem::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
