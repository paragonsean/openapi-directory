/**
 * Configuration webhooks
 * Adyen sends webhooks to inform your system about events that occur in your platform. These events include, for example, when an account holder's capabilities are updated, or when a sweep configuration is created or updated.  When an event occurs, Adyen makes an HTTP POST request to a URL on your server and includes the details of the event in the request body.  You can use these webhooks to build your implementation. For example, you can use this information to update internal statuses when the status of a capability is changed.
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAccountSupportingEntityCapability.h
 *
 * 
 */

#ifndef OAIAccountSupportingEntityCapability_H
#define OAIAccountSupportingEntityCapability_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAccountSupportingEntityCapability : public OAIObject {
public:
    OAIAccountSupportingEntityCapability();
    OAIAccountSupportingEntityCapability(QString json);
    ~OAIAccountSupportingEntityCapability() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAllowed() const;
    void setAllowed(const bool &allowed);
    bool is_allowed_Set() const;
    bool is_allowed_Valid() const;

    QString getAllowedLevel() const;
    void setAllowedLevel(const QString &allowed_level);
    bool is_allowed_level_Set() const;
    bool is_allowed_level_Valid() const;

    bool isEnabled() const;
    void setEnabled(const bool &enabled);
    bool is_enabled_Set() const;
    bool is_enabled_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    bool isRequested() const;
    void setRequested(const bool &requested);
    bool is_requested_Set() const;
    bool is_requested_Valid() const;

    QString getRequestedLevel() const;
    void setRequestedLevel(const QString &requested_level);
    bool is_requested_level_Set() const;
    bool is_requested_level_Valid() const;

    QString getVerificationStatus() const;
    void setVerificationStatus(const QString &verification_status);
    bool is_verification_status_Set() const;
    bool is_verification_status_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_allowed;
    bool m_allowed_isSet;
    bool m_allowed_isValid;

    QString m_allowed_level;
    bool m_allowed_level_isSet;
    bool m_allowed_level_isValid;

    bool m_enabled;
    bool m_enabled_isSet;
    bool m_enabled_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    bool m_requested;
    bool m_requested_isSet;
    bool m_requested_isValid;

    QString m_requested_level;
    bool m_requested_level_isSet;
    bool m_requested_level_isValid;

    QString m_verification_status;
    bool m_verification_status_isSet;
    bool m_verification_status_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAccountSupportingEntityCapability)

#endif // OAIAccountSupportingEntityCapability_H
