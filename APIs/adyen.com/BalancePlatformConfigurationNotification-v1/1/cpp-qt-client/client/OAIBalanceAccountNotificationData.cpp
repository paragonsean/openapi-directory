/**
 * Configuration webhooks
 * Adyen sends webhooks to inform your system about events that occur in your platform. These events include, for example, when an account holder's capabilities are updated, or when a sweep configuration is created or updated.  When an event occurs, Adyen makes an HTTP POST request to a URL on your server and includes the details of the event in the request body.  You can use these webhooks to build your implementation. For example, you can use this information to update internal statuses when the status of a capability is changed.
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBalanceAccountNotificationData.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBalanceAccountNotificationData::OAIBalanceAccountNotificationData(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBalanceAccountNotificationData::OAIBalanceAccountNotificationData() {
    this->initializeModel();
}

OAIBalanceAccountNotificationData::~OAIBalanceAccountNotificationData() {}

void OAIBalanceAccountNotificationData::initializeModel() {

    m_balance_account_isSet = false;
    m_balance_account_isValid = false;

    m_balance_platform_isSet = false;
    m_balance_platform_isValid = false;
}

void OAIBalanceAccountNotificationData::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBalanceAccountNotificationData::fromJsonObject(QJsonObject json) {

    m_balance_account_isValid = ::OpenAPI::fromJsonValue(m_balance_account, json[QString("balanceAccount")]);
    m_balance_account_isSet = !json[QString("balanceAccount")].isNull() && m_balance_account_isValid;

    m_balance_platform_isValid = ::OpenAPI::fromJsonValue(m_balance_platform, json[QString("balancePlatform")]);
    m_balance_platform_isSet = !json[QString("balancePlatform")].isNull() && m_balance_platform_isValid;
}

QString OAIBalanceAccountNotificationData::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBalanceAccountNotificationData::asJsonObject() const {
    QJsonObject obj;
    if (m_balance_account.isSet()) {
        obj.insert(QString("balanceAccount"), ::OpenAPI::toJsonValue(m_balance_account));
    }
    if (m_balance_platform_isSet) {
        obj.insert(QString("balancePlatform"), ::OpenAPI::toJsonValue(m_balance_platform));
    }
    return obj;
}

OAIBalanceAccount OAIBalanceAccountNotificationData::getBalanceAccount() const {
    return m_balance_account;
}
void OAIBalanceAccountNotificationData::setBalanceAccount(const OAIBalanceAccount &balance_account) {
    m_balance_account = balance_account;
    m_balance_account_isSet = true;
}

bool OAIBalanceAccountNotificationData::is_balance_account_Set() const{
    return m_balance_account_isSet;
}

bool OAIBalanceAccountNotificationData::is_balance_account_Valid() const{
    return m_balance_account_isValid;
}

QString OAIBalanceAccountNotificationData::getBalancePlatform() const {
    return m_balance_platform;
}
void OAIBalanceAccountNotificationData::setBalancePlatform(const QString &balance_platform) {
    m_balance_platform = balance_platform;
    m_balance_platform_isSet = true;
}

bool OAIBalanceAccountNotificationData::is_balance_platform_Set() const{
    return m_balance_platform_isSet;
}

bool OAIBalanceAccountNotificationData::is_balance_platform_Valid() const{
    return m_balance_platform_isValid;
}

bool OAIBalanceAccountNotificationData::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_balance_account.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_balance_platform_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBalanceAccountNotificationData::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
