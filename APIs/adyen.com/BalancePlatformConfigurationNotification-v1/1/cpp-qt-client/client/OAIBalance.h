/**
 * Configuration webhooks
 * Adyen sends webhooks to inform your system about events that occur in your platform. These events include, for example, when an account holder's capabilities are updated, or when a sweep configuration is created or updated.  When an event occurs, Adyen makes an HTTP POST request to a URL on your server and includes the details of the event in the request body.  You can use these webhooks to build your implementation. For example, you can use this information to update internal statuses when the status of a capability is changed.
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBalance.h
 *
 * 
 */

#ifndef OAIBalance_H
#define OAIBalance_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIBalance : public OAIObject {
public:
    OAIBalance();
    OAIBalance(QString json);
    ~OAIBalance() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint64 getAvailable() const;
    void setAvailable(const qint64 &available);
    bool is_available_Set() const;
    bool is_available_Valid() const;

    qint64 getBalance() const;
    void setBalance(const qint64 &balance);
    bool is_balance_Set() const;
    bool is_balance_Valid() const;

    QString getCurrency() const;
    void setCurrency(const QString &currency);
    bool is_currency_Set() const;
    bool is_currency_Valid() const;

    qint64 getPending() const;
    void setPending(const qint64 &pending);
    bool is_pending_Set() const;
    bool is_pending_Valid() const;

    qint64 getReserved() const;
    void setReserved(const qint64 &reserved);
    bool is_reserved_Set() const;
    bool is_reserved_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint64 m_available;
    bool m_available_isSet;
    bool m_available_isValid;

    qint64 m_balance;
    bool m_balance_isSet;
    bool m_balance_isValid;

    QString m_currency;
    bool m_currency_isSet;
    bool m_currency_isValid;

    qint64 m_pending;
    bool m_pending_isSet;
    bool m_pending_isValid;

    qint64 m_reserved;
    bool m_reserved_isSet;
    bool m_reserved_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBalance)

#endif // OAIBalance_H
