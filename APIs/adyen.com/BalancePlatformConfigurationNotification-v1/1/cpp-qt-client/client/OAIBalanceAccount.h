/**
 * Configuration webhooks
 * Adyen sends webhooks to inform your system about events that occur in your platform. These events include, for example, when an account holder's capabilities are updated, or when a sweep configuration is created or updated.  When an event occurs, Adyen makes an HTTP POST request to a URL on your server and includes the details of the event in the request body.  You can use these webhooks to build your implementation. For example, you can use this information to update internal statuses when the status of a capability is changed.
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBalanceAccount.h
 *
 * 
 */

#ifndef OAIBalanceAccount_H
#define OAIBalanceAccount_H

#include <QJsonObject>

#include "OAIBalance.h"
#include "OAIPaymentInstrumentReference.h"
#include "OAIPlatformPaymentConfiguration.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIBalance;
class OAIPaymentInstrumentReference;
class OAIPlatformPaymentConfiguration;

class OAIBalanceAccount : public OAIObject {
public:
    OAIBalanceAccount();
    OAIBalanceAccount(QString json);
    ~OAIBalanceAccount() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccountHolderId() const;
    void setAccountHolderId(const QString &account_holder_id);
    bool is_account_holder_id_Set() const;
    bool is_account_holder_id_Valid() const;

    QList<OAIBalance> getBalances() const;
    void setBalances(const QList<OAIBalance> &balances);
    bool is_balances_Set() const;
    bool is_balances_Valid() const;

    QString getDefaultCurrencyCode() const;
    void setDefaultCurrencyCode(const QString &default_currency_code);
    bool is_default_currency_code_Set() const;
    bool is_default_currency_code_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QMap<QString, QString> getMetadata() const;
    void setMetadata(const QMap<QString, QString> &metadata);
    bool is_metadata_Set() const;
    bool is_metadata_Valid() const;

    QString getMigratedAccountCode() const;
    void setMigratedAccountCode(const QString &migrated_account_code);
    bool is_migrated_account_code_Set() const;
    bool is_migrated_account_code_Valid() const;

    QList<OAIPaymentInstrumentReference> getPaymentInstruments() const;
    void setPaymentInstruments(const QList<OAIPaymentInstrumentReference> &payment_instruments);
    bool is_payment_instruments_Set() const;
    bool is_payment_instruments_Valid() const;

    OAIPlatformPaymentConfiguration getPlatformPaymentConfiguration() const;
    void setPlatformPaymentConfiguration(const OAIPlatformPaymentConfiguration &platform_payment_configuration);
    bool is_platform_payment_configuration_Set() const;
    bool is_platform_payment_configuration_Valid() const;

    QString getReference() const;
    void setReference(const QString &reference);
    bool is_reference_Set() const;
    bool is_reference_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getTimeZone() const;
    void setTimeZone(const QString &time_zone);
    bool is_time_zone_Set() const;
    bool is_time_zone_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_account_holder_id;
    bool m_account_holder_id_isSet;
    bool m_account_holder_id_isValid;

    QList<OAIBalance> m_balances;
    bool m_balances_isSet;
    bool m_balances_isValid;

    QString m_default_currency_code;
    bool m_default_currency_code_isSet;
    bool m_default_currency_code_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QMap<QString, QString> m_metadata;
    bool m_metadata_isSet;
    bool m_metadata_isValid;

    QString m_migrated_account_code;
    bool m_migrated_account_code_isSet;
    bool m_migrated_account_code_isValid;

    QList<OAIPaymentInstrumentReference> m_payment_instruments;
    bool m_payment_instruments_isSet;
    bool m_payment_instruments_isValid;

    OAIPlatformPaymentConfiguration m_platform_payment_configuration;
    bool m_platform_payment_configuration_isSet;
    bool m_platform_payment_configuration_isValid;

    QString m_reference;
    bool m_reference_isSet;
    bool m_reference_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_time_zone;
    bool m_time_zone_isSet;
    bool m_time_zone_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBalanceAccount)

#endif // OAIBalanceAccount_H
