/**
 * Configuration webhooks
 * Adyen sends webhooks to inform your system about events that occur in your platform. These events include, for example, when an account holder's capabilities are updated, or when a sweep configuration is created or updated.  When an event occurs, Adyen makes an HTTP POST request to a URL on your server and includes the details of the event in the request body.  You can use these webhooks to build your implementation. For example, you can use this information to update internal statuses when the status of a capability is changed.
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISweepCounterparty.h
 *
 * 
 */

#ifndef OAISweepCounterparty_H
#define OAISweepCounterparty_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISweepCounterparty : public OAIObject {
public:
    OAISweepCounterparty();
    OAISweepCounterparty(QString json);
    ~OAISweepCounterparty() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBalanceAccountId() const;
    void setBalanceAccountId(const QString &balance_account_id);
    bool is_balance_account_id_Set() const;
    bool is_balance_account_id_Valid() const;

    QString getMerchantAccount() const;
    void setMerchantAccount(const QString &merchant_account);
    bool is_merchant_account_Set() const;
    bool is_merchant_account_Valid() const;

    QString getTransferInstrumentId() const;
    void setTransferInstrumentId(const QString &transfer_instrument_id);
    bool is_transfer_instrument_id_Set() const;
    bool is_transfer_instrument_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_balance_account_id;
    bool m_balance_account_id_isSet;
    bool m_balance_account_id_isValid;

    QString m_merchant_account;
    bool m_merchant_account_isSet;
    bool m_merchant_account_isValid;

    QString m_transfer_instrument_id;
    bool m_transfer_instrument_id_isSet;
    bool m_transfer_instrument_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISweepCounterparty)

#endif // OAISweepCounterparty_H
