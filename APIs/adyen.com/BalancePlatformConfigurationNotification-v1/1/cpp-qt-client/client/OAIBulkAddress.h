/**
 * Configuration webhooks
 * Adyen sends webhooks to inform your system about events that occur in your platform. These events include, for example, when an account holder's capabilities are updated, or when a sweep configuration is created or updated.  When an event occurs, Adyen makes an HTTP POST request to a URL on your server and includes the details of the event in the request body.  You can use these webhooks to build your implementation. For example, you can use this information to update internal statuses when the status of a capability is changed.
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBulkAddress.h
 *
 * 
 */

#ifndef OAIBulkAddress_H
#define OAIBulkAddress_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIBulkAddress : public OAIObject {
public:
    OAIBulkAddress();
    OAIBulkAddress(QString json);
    ~OAIBulkAddress() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCity() const;
    void setCity(const QString &city);
    bool is_city_Set() const;
    bool is_city_Valid() const;

    QString getCompany() const;
    void setCompany(const QString &company);
    bool is_company_Set() const;
    bool is_company_Valid() const;

    QString getCountry() const;
    void setCountry(const QString &country);
    bool is_country_Set() const;
    bool is_country_Valid() const;

    QString getEmail() const;
    void setEmail(const QString &email);
    bool is_email_Set() const;
    bool is_email_Valid() const;

    QString getHouseNumberOrName() const;
    void setHouseNumberOrName(const QString &house_number_or_name);
    bool is_house_number_or_name_Set() const;
    bool is_house_number_or_name_Valid() const;

    QString getMobile() const;
    void setMobile(const QString &mobile);
    bool is_mobile_Set() const;
    bool is_mobile_Valid() const;

    QString getPostalCode() const;
    void setPostalCode(const QString &postal_code);
    bool is_postal_code_Set() const;
    bool is_postal_code_Valid() const;

    QString getStateOrProvince() const;
    void setStateOrProvince(const QString &state_or_province);
    bool is_state_or_province_Set() const;
    bool is_state_or_province_Valid() const;

    QString getStreet() const;
    void setStreet(const QString &street);
    bool is_street_Set() const;
    bool is_street_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_city;
    bool m_city_isSet;
    bool m_city_isValid;

    QString m_company;
    bool m_company_isSet;
    bool m_company_isValid;

    QString m_country;
    bool m_country_isSet;
    bool m_country_isValid;

    QString m_email;
    bool m_email_isSet;
    bool m_email_isValid;

    QString m_house_number_or_name;
    bool m_house_number_or_name_isSet;
    bool m_house_number_or_name_isValid;

    QString m_mobile;
    bool m_mobile_isSet;
    bool m_mobile_isValid;

    QString m_postal_code;
    bool m_postal_code_isSet;
    bool m_postal_code_isValid;

    QString m_state_or_province;
    bool m_state_or_province_isSet;
    bool m_state_or_province_isValid;

    QString m_street;
    bool m_street_isSet;
    bool m_street_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBulkAddress)

#endif // OAIBulkAddress_H
