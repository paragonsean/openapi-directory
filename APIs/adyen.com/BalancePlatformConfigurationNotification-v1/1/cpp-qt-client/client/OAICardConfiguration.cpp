/**
 * Configuration webhooks
 * Adyen sends webhooks to inform your system about events that occur in your platform. These events include, for example, when an account holder's capabilities are updated, or when a sweep configuration is created or updated.  When an event occurs, Adyen makes an HTTP POST request to a URL on your server and includes the details of the event in the request body.  You can use these webhooks to build your implementation. For example, you can use this information to update internal statuses when the status of a capability is changed.
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICardConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICardConfiguration::OAICardConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICardConfiguration::OAICardConfiguration() {
    this->initializeModel();
}

OAICardConfiguration::~OAICardConfiguration() {}

void OAICardConfiguration::initializeModel() {

    m_activation_isSet = false;
    m_activation_isValid = false;

    m_activation_url_isSet = false;
    m_activation_url_isValid = false;

    m_bulk_address_isSet = false;
    m_bulk_address_isValid = false;

    m_card_image_id_isSet = false;
    m_card_image_id_isValid = false;

    m_carrier_isSet = false;
    m_carrier_isValid = false;

    m_carrier_image_id_isSet = false;
    m_carrier_image_id_isValid = false;

    m_configuration_profile_id_isSet = false;
    m_configuration_profile_id_isValid = false;

    m_currency_isSet = false;
    m_currency_isValid = false;

    m_envelope_isSet = false;
    m_envelope_isValid = false;

    m_insert_isSet = false;
    m_insert_isValid = false;

    m_language_isSet = false;
    m_language_isValid = false;

    m_logo_image_id_isSet = false;
    m_logo_image_id_isValid = false;

    m_pin_mailer_isSet = false;
    m_pin_mailer_isValid = false;

    m_shipment_method_isSet = false;
    m_shipment_method_isValid = false;
}

void OAICardConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICardConfiguration::fromJsonObject(QJsonObject json) {

    m_activation_isValid = ::OpenAPI::fromJsonValue(m_activation, json[QString("activation")]);
    m_activation_isSet = !json[QString("activation")].isNull() && m_activation_isValid;

    m_activation_url_isValid = ::OpenAPI::fromJsonValue(m_activation_url, json[QString("activationUrl")]);
    m_activation_url_isSet = !json[QString("activationUrl")].isNull() && m_activation_url_isValid;

    m_bulk_address_isValid = ::OpenAPI::fromJsonValue(m_bulk_address, json[QString("bulkAddress")]);
    m_bulk_address_isSet = !json[QString("bulkAddress")].isNull() && m_bulk_address_isValid;

    m_card_image_id_isValid = ::OpenAPI::fromJsonValue(m_card_image_id, json[QString("cardImageId")]);
    m_card_image_id_isSet = !json[QString("cardImageId")].isNull() && m_card_image_id_isValid;

    m_carrier_isValid = ::OpenAPI::fromJsonValue(m_carrier, json[QString("carrier")]);
    m_carrier_isSet = !json[QString("carrier")].isNull() && m_carrier_isValid;

    m_carrier_image_id_isValid = ::OpenAPI::fromJsonValue(m_carrier_image_id, json[QString("carrierImageId")]);
    m_carrier_image_id_isSet = !json[QString("carrierImageId")].isNull() && m_carrier_image_id_isValid;

    m_configuration_profile_id_isValid = ::OpenAPI::fromJsonValue(m_configuration_profile_id, json[QString("configurationProfileId")]);
    m_configuration_profile_id_isSet = !json[QString("configurationProfileId")].isNull() && m_configuration_profile_id_isValid;

    m_currency_isValid = ::OpenAPI::fromJsonValue(m_currency, json[QString("currency")]);
    m_currency_isSet = !json[QString("currency")].isNull() && m_currency_isValid;

    m_envelope_isValid = ::OpenAPI::fromJsonValue(m_envelope, json[QString("envelope")]);
    m_envelope_isSet = !json[QString("envelope")].isNull() && m_envelope_isValid;

    m_insert_isValid = ::OpenAPI::fromJsonValue(m_insert, json[QString("insert")]);
    m_insert_isSet = !json[QString("insert")].isNull() && m_insert_isValid;

    m_language_isValid = ::OpenAPI::fromJsonValue(m_language, json[QString("language")]);
    m_language_isSet = !json[QString("language")].isNull() && m_language_isValid;

    m_logo_image_id_isValid = ::OpenAPI::fromJsonValue(m_logo_image_id, json[QString("logoImageId")]);
    m_logo_image_id_isSet = !json[QString("logoImageId")].isNull() && m_logo_image_id_isValid;

    m_pin_mailer_isValid = ::OpenAPI::fromJsonValue(m_pin_mailer, json[QString("pinMailer")]);
    m_pin_mailer_isSet = !json[QString("pinMailer")].isNull() && m_pin_mailer_isValid;

    m_shipment_method_isValid = ::OpenAPI::fromJsonValue(m_shipment_method, json[QString("shipmentMethod")]);
    m_shipment_method_isSet = !json[QString("shipmentMethod")].isNull() && m_shipment_method_isValid;
}

QString OAICardConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICardConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_activation_isSet) {
        obj.insert(QString("activation"), ::OpenAPI::toJsonValue(m_activation));
    }
    if (m_activation_url_isSet) {
        obj.insert(QString("activationUrl"), ::OpenAPI::toJsonValue(m_activation_url));
    }
    if (m_bulk_address.isSet()) {
        obj.insert(QString("bulkAddress"), ::OpenAPI::toJsonValue(m_bulk_address));
    }
    if (m_card_image_id_isSet) {
        obj.insert(QString("cardImageId"), ::OpenAPI::toJsonValue(m_card_image_id));
    }
    if (m_carrier_isSet) {
        obj.insert(QString("carrier"), ::OpenAPI::toJsonValue(m_carrier));
    }
    if (m_carrier_image_id_isSet) {
        obj.insert(QString("carrierImageId"), ::OpenAPI::toJsonValue(m_carrier_image_id));
    }
    if (m_configuration_profile_id_isSet) {
        obj.insert(QString("configurationProfileId"), ::OpenAPI::toJsonValue(m_configuration_profile_id));
    }
    if (m_currency_isSet) {
        obj.insert(QString("currency"), ::OpenAPI::toJsonValue(m_currency));
    }
    if (m_envelope_isSet) {
        obj.insert(QString("envelope"), ::OpenAPI::toJsonValue(m_envelope));
    }
    if (m_insert_isSet) {
        obj.insert(QString("insert"), ::OpenAPI::toJsonValue(m_insert));
    }
    if (m_language_isSet) {
        obj.insert(QString("language"), ::OpenAPI::toJsonValue(m_language));
    }
    if (m_logo_image_id_isSet) {
        obj.insert(QString("logoImageId"), ::OpenAPI::toJsonValue(m_logo_image_id));
    }
    if (m_pin_mailer_isSet) {
        obj.insert(QString("pinMailer"), ::OpenAPI::toJsonValue(m_pin_mailer));
    }
    if (m_shipment_method_isSet) {
        obj.insert(QString("shipmentMethod"), ::OpenAPI::toJsonValue(m_shipment_method));
    }
    return obj;
}

QString OAICardConfiguration::getActivation() const {
    return m_activation;
}
void OAICardConfiguration::setActivation(const QString &activation) {
    m_activation = activation;
    m_activation_isSet = true;
}

bool OAICardConfiguration::is_activation_Set() const{
    return m_activation_isSet;
}

bool OAICardConfiguration::is_activation_Valid() const{
    return m_activation_isValid;
}

QString OAICardConfiguration::getActivationUrl() const {
    return m_activation_url;
}
void OAICardConfiguration::setActivationUrl(const QString &activation_url) {
    m_activation_url = activation_url;
    m_activation_url_isSet = true;
}

bool OAICardConfiguration::is_activation_url_Set() const{
    return m_activation_url_isSet;
}

bool OAICardConfiguration::is_activation_url_Valid() const{
    return m_activation_url_isValid;
}

OAIBulkAddress OAICardConfiguration::getBulkAddress() const {
    return m_bulk_address;
}
void OAICardConfiguration::setBulkAddress(const OAIBulkAddress &bulk_address) {
    m_bulk_address = bulk_address;
    m_bulk_address_isSet = true;
}

bool OAICardConfiguration::is_bulk_address_Set() const{
    return m_bulk_address_isSet;
}

bool OAICardConfiguration::is_bulk_address_Valid() const{
    return m_bulk_address_isValid;
}

QString OAICardConfiguration::getCardImageId() const {
    return m_card_image_id;
}
void OAICardConfiguration::setCardImageId(const QString &card_image_id) {
    m_card_image_id = card_image_id;
    m_card_image_id_isSet = true;
}

bool OAICardConfiguration::is_card_image_id_Set() const{
    return m_card_image_id_isSet;
}

bool OAICardConfiguration::is_card_image_id_Valid() const{
    return m_card_image_id_isValid;
}

QString OAICardConfiguration::getCarrier() const {
    return m_carrier;
}
void OAICardConfiguration::setCarrier(const QString &carrier) {
    m_carrier = carrier;
    m_carrier_isSet = true;
}

bool OAICardConfiguration::is_carrier_Set() const{
    return m_carrier_isSet;
}

bool OAICardConfiguration::is_carrier_Valid() const{
    return m_carrier_isValid;
}

QString OAICardConfiguration::getCarrierImageId() const {
    return m_carrier_image_id;
}
void OAICardConfiguration::setCarrierImageId(const QString &carrier_image_id) {
    m_carrier_image_id = carrier_image_id;
    m_carrier_image_id_isSet = true;
}

bool OAICardConfiguration::is_carrier_image_id_Set() const{
    return m_carrier_image_id_isSet;
}

bool OAICardConfiguration::is_carrier_image_id_Valid() const{
    return m_carrier_image_id_isValid;
}

QString OAICardConfiguration::getConfigurationProfileId() const {
    return m_configuration_profile_id;
}
void OAICardConfiguration::setConfigurationProfileId(const QString &configuration_profile_id) {
    m_configuration_profile_id = configuration_profile_id;
    m_configuration_profile_id_isSet = true;
}

bool OAICardConfiguration::is_configuration_profile_id_Set() const{
    return m_configuration_profile_id_isSet;
}

bool OAICardConfiguration::is_configuration_profile_id_Valid() const{
    return m_configuration_profile_id_isValid;
}

QString OAICardConfiguration::getCurrency() const {
    return m_currency;
}
void OAICardConfiguration::setCurrency(const QString &currency) {
    m_currency = currency;
    m_currency_isSet = true;
}

bool OAICardConfiguration::is_currency_Set() const{
    return m_currency_isSet;
}

bool OAICardConfiguration::is_currency_Valid() const{
    return m_currency_isValid;
}

QString OAICardConfiguration::getEnvelope() const {
    return m_envelope;
}
void OAICardConfiguration::setEnvelope(const QString &envelope) {
    m_envelope = envelope;
    m_envelope_isSet = true;
}

bool OAICardConfiguration::is_envelope_Set() const{
    return m_envelope_isSet;
}

bool OAICardConfiguration::is_envelope_Valid() const{
    return m_envelope_isValid;
}

QString OAICardConfiguration::getInsert() const {
    return m_insert;
}
void OAICardConfiguration::setInsert(const QString &insert) {
    m_insert = insert;
    m_insert_isSet = true;
}

bool OAICardConfiguration::is_insert_Set() const{
    return m_insert_isSet;
}

bool OAICardConfiguration::is_insert_Valid() const{
    return m_insert_isValid;
}

QString OAICardConfiguration::getLanguage() const {
    return m_language;
}
void OAICardConfiguration::setLanguage(const QString &language) {
    m_language = language;
    m_language_isSet = true;
}

bool OAICardConfiguration::is_language_Set() const{
    return m_language_isSet;
}

bool OAICardConfiguration::is_language_Valid() const{
    return m_language_isValid;
}

QString OAICardConfiguration::getLogoImageId() const {
    return m_logo_image_id;
}
void OAICardConfiguration::setLogoImageId(const QString &logo_image_id) {
    m_logo_image_id = logo_image_id;
    m_logo_image_id_isSet = true;
}

bool OAICardConfiguration::is_logo_image_id_Set() const{
    return m_logo_image_id_isSet;
}

bool OAICardConfiguration::is_logo_image_id_Valid() const{
    return m_logo_image_id_isValid;
}

QString OAICardConfiguration::getPinMailer() const {
    return m_pin_mailer;
}
void OAICardConfiguration::setPinMailer(const QString &pin_mailer) {
    m_pin_mailer = pin_mailer;
    m_pin_mailer_isSet = true;
}

bool OAICardConfiguration::is_pin_mailer_Set() const{
    return m_pin_mailer_isSet;
}

bool OAICardConfiguration::is_pin_mailer_Valid() const{
    return m_pin_mailer_isValid;
}

QString OAICardConfiguration::getShipmentMethod() const {
    return m_shipment_method;
}
void OAICardConfiguration::setShipmentMethod(const QString &shipment_method) {
    m_shipment_method = shipment_method;
    m_shipment_method_isSet = true;
}

bool OAICardConfiguration::is_shipment_method_Set() const{
    return m_shipment_method_isSet;
}

bool OAICardConfiguration::is_shipment_method_Valid() const{
    return m_shipment_method_isValid;
}

bool OAICardConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_activation_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_activation_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_bulk_address.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_card_image_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_carrier_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_carrier_image_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_configuration_profile_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_currency_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_envelope_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_insert_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_language_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_logo_image_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pin_mailer_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipment_method_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICardConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_configuration_profile_id_isValid && true;
}

} // namespace OpenAPI
