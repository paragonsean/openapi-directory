/*
 * Configuration webhooks
 * Adyen sends webhooks to inform your system about events that occur in your platform. These events include, for example, when an account holder's capabilities are updated, or when a sweep configuration is created or updated.  When an event occurs, Adyen makes an HTTP POST request to a URL on your server and includes the details of the event in the request body.  You can use these webhooks to build your implementation. For example, you can use this information to update internal statuses when the status of a capability is changed.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.BalanceAccountNotificationRequest;
import org.openapitools.client.model.BalancePlatformNotificationResponse;
import org.openapitools.client.model.SweepConfigurationNotificationRequest;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class BalanceAccountApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public BalanceAccountApi() {
        this(Configuration.getDefaultApiClient());
    }

    public BalanceAccountApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for postBalancePlatformBalanceAccountCreated
     * @param balanceAccountNotificationRequest  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK - the request has succeeded. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call postBalancePlatformBalanceAccountCreatedCall(BalanceAccountNotificationRequest balanceAccountNotificationRequest, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = balanceAccountNotificationRequest;

        // create path and map variables
        String localVarPath = "/balancePlatform.balanceAccount.created";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "BasicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call postBalancePlatformBalanceAccountCreatedValidateBeforeCall(BalanceAccountNotificationRequest balanceAccountNotificationRequest, final ApiCallback _callback) throws ApiException {
        return postBalancePlatformBalanceAccountCreatedCall(balanceAccountNotificationRequest, _callback);

    }

    /**
     * Balance account created
     * Adyen sends this webhook when you successfully [create a balance account](https://docs.adyen.com/api-explorer/balanceplatform/latest/post/balanceAccounts).
     * @param balanceAccountNotificationRequest  (optional)
     * @return BalancePlatformNotificationResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK - the request has succeeded. </td><td>  -  </td></tr>
     </table>
     */
    public BalancePlatformNotificationResponse postBalancePlatformBalanceAccountCreated(BalanceAccountNotificationRequest balanceAccountNotificationRequest) throws ApiException {
        ApiResponse<BalancePlatformNotificationResponse> localVarResp = postBalancePlatformBalanceAccountCreatedWithHttpInfo(balanceAccountNotificationRequest);
        return localVarResp.getData();
    }

    /**
     * Balance account created
     * Adyen sends this webhook when you successfully [create a balance account](https://docs.adyen.com/api-explorer/balanceplatform/latest/post/balanceAccounts).
     * @param balanceAccountNotificationRequest  (optional)
     * @return ApiResponse&lt;BalancePlatformNotificationResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK - the request has succeeded. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<BalancePlatformNotificationResponse> postBalancePlatformBalanceAccountCreatedWithHttpInfo(BalanceAccountNotificationRequest balanceAccountNotificationRequest) throws ApiException {
        okhttp3.Call localVarCall = postBalancePlatformBalanceAccountCreatedValidateBeforeCall(balanceAccountNotificationRequest, null);
        Type localVarReturnType = new TypeToken<BalancePlatformNotificationResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Balance account created (asynchronously)
     * Adyen sends this webhook when you successfully [create a balance account](https://docs.adyen.com/api-explorer/balanceplatform/latest/post/balanceAccounts).
     * @param balanceAccountNotificationRequest  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK - the request has succeeded. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call postBalancePlatformBalanceAccountCreatedAsync(BalanceAccountNotificationRequest balanceAccountNotificationRequest, final ApiCallback<BalancePlatformNotificationResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = postBalancePlatformBalanceAccountCreatedValidateBeforeCall(balanceAccountNotificationRequest, _callback);
        Type localVarReturnType = new TypeToken<BalancePlatformNotificationResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for postBalancePlatformBalanceAccountSweepCreated
     * @param sweepConfigurationNotificationRequest  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK - the request has succeeded. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call postBalancePlatformBalanceAccountSweepCreatedCall(SweepConfigurationNotificationRequest sweepConfigurationNotificationRequest, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = sweepConfigurationNotificationRequest;

        // create path and map variables
        String localVarPath = "/balancePlatform.balanceAccountSweep.created";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "BasicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call postBalancePlatformBalanceAccountSweepCreatedValidateBeforeCall(SweepConfigurationNotificationRequest sweepConfigurationNotificationRequest, final ApiCallback _callback) throws ApiException {
        return postBalancePlatformBalanceAccountSweepCreatedCall(sweepConfigurationNotificationRequest, _callback);

    }

    /**
     * Sweep created
     * Adyen sends this webhook when you successfully [create a sweep](https://docs.adyen.com/api-explorer/balanceplatform/latest/post/balanceAccounts/_balanceAccountId_/sweeps).
     * @param sweepConfigurationNotificationRequest  (optional)
     * @return BalancePlatformNotificationResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK - the request has succeeded. </td><td>  -  </td></tr>
     </table>
     */
    public BalancePlatformNotificationResponse postBalancePlatformBalanceAccountSweepCreated(SweepConfigurationNotificationRequest sweepConfigurationNotificationRequest) throws ApiException {
        ApiResponse<BalancePlatformNotificationResponse> localVarResp = postBalancePlatformBalanceAccountSweepCreatedWithHttpInfo(sweepConfigurationNotificationRequest);
        return localVarResp.getData();
    }

    /**
     * Sweep created
     * Adyen sends this webhook when you successfully [create a sweep](https://docs.adyen.com/api-explorer/balanceplatform/latest/post/balanceAccounts/_balanceAccountId_/sweeps).
     * @param sweepConfigurationNotificationRequest  (optional)
     * @return ApiResponse&lt;BalancePlatformNotificationResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK - the request has succeeded. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<BalancePlatformNotificationResponse> postBalancePlatformBalanceAccountSweepCreatedWithHttpInfo(SweepConfigurationNotificationRequest sweepConfigurationNotificationRequest) throws ApiException {
        okhttp3.Call localVarCall = postBalancePlatformBalanceAccountSweepCreatedValidateBeforeCall(sweepConfigurationNotificationRequest, null);
        Type localVarReturnType = new TypeToken<BalancePlatformNotificationResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Sweep created (asynchronously)
     * Adyen sends this webhook when you successfully [create a sweep](https://docs.adyen.com/api-explorer/balanceplatform/latest/post/balanceAccounts/_balanceAccountId_/sweeps).
     * @param sweepConfigurationNotificationRequest  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK - the request has succeeded. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call postBalancePlatformBalanceAccountSweepCreatedAsync(SweepConfigurationNotificationRequest sweepConfigurationNotificationRequest, final ApiCallback<BalancePlatformNotificationResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = postBalancePlatformBalanceAccountSweepCreatedValidateBeforeCall(sweepConfigurationNotificationRequest, _callback);
        Type localVarReturnType = new TypeToken<BalancePlatformNotificationResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for postBalancePlatformBalanceAccountSweepDeleted
     * @param sweepConfigurationNotificationRequest  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK - the request has succeeded. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call postBalancePlatformBalanceAccountSweepDeletedCall(SweepConfigurationNotificationRequest sweepConfigurationNotificationRequest, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = sweepConfigurationNotificationRequest;

        // create path and map variables
        String localVarPath = "/balancePlatform.balanceAccountSweep.deleted";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "BasicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call postBalancePlatformBalanceAccountSweepDeletedValidateBeforeCall(SweepConfigurationNotificationRequest sweepConfigurationNotificationRequest, final ApiCallback _callback) throws ApiException {
        return postBalancePlatformBalanceAccountSweepDeletedCall(sweepConfigurationNotificationRequest, _callback);

    }

    /**
     * Sweep deleted
     * Adyen sends this webhook when you successfully [delete a sweep](https://docs.adyen.com/api-explorer/balanceplatform/latest/delete/balanceAccounts/_balanceAccountId_/sweeps/_sweepId_).
     * @param sweepConfigurationNotificationRequest  (optional)
     * @return BalancePlatformNotificationResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK - the request has succeeded. </td><td>  -  </td></tr>
     </table>
     */
    public BalancePlatformNotificationResponse postBalancePlatformBalanceAccountSweepDeleted(SweepConfigurationNotificationRequest sweepConfigurationNotificationRequest) throws ApiException {
        ApiResponse<BalancePlatformNotificationResponse> localVarResp = postBalancePlatformBalanceAccountSweepDeletedWithHttpInfo(sweepConfigurationNotificationRequest);
        return localVarResp.getData();
    }

    /**
     * Sweep deleted
     * Adyen sends this webhook when you successfully [delete a sweep](https://docs.adyen.com/api-explorer/balanceplatform/latest/delete/balanceAccounts/_balanceAccountId_/sweeps/_sweepId_).
     * @param sweepConfigurationNotificationRequest  (optional)
     * @return ApiResponse&lt;BalancePlatformNotificationResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK - the request has succeeded. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<BalancePlatformNotificationResponse> postBalancePlatformBalanceAccountSweepDeletedWithHttpInfo(SweepConfigurationNotificationRequest sweepConfigurationNotificationRequest) throws ApiException {
        okhttp3.Call localVarCall = postBalancePlatformBalanceAccountSweepDeletedValidateBeforeCall(sweepConfigurationNotificationRequest, null);
        Type localVarReturnType = new TypeToken<BalancePlatformNotificationResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Sweep deleted (asynchronously)
     * Adyen sends this webhook when you successfully [delete a sweep](https://docs.adyen.com/api-explorer/balanceplatform/latest/delete/balanceAccounts/_balanceAccountId_/sweeps/_sweepId_).
     * @param sweepConfigurationNotificationRequest  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK - the request has succeeded. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call postBalancePlatformBalanceAccountSweepDeletedAsync(SweepConfigurationNotificationRequest sweepConfigurationNotificationRequest, final ApiCallback<BalancePlatformNotificationResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = postBalancePlatformBalanceAccountSweepDeletedValidateBeforeCall(sweepConfigurationNotificationRequest, _callback);
        Type localVarReturnType = new TypeToken<BalancePlatformNotificationResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for postBalancePlatformBalanceAccountSweepUpdated
     * @param sweepConfigurationNotificationRequest  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK - the request has succeeded. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call postBalancePlatformBalanceAccountSweepUpdatedCall(SweepConfigurationNotificationRequest sweepConfigurationNotificationRequest, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = sweepConfigurationNotificationRequest;

        // create path and map variables
        String localVarPath = "/balancePlatform.balanceAccountSweep.updated";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "BasicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call postBalancePlatformBalanceAccountSweepUpdatedValidateBeforeCall(SweepConfigurationNotificationRequest sweepConfigurationNotificationRequest, final ApiCallback _callback) throws ApiException {
        return postBalancePlatformBalanceAccountSweepUpdatedCall(sweepConfigurationNotificationRequest, _callback);

    }

    /**
     * Sweep updated
     * Adyen sends this webhook when you successfully [update a sweep](https://docs.adyen.com/api-explorer/balanceplatform/latest/patch/balanceAccounts/_balanceAccountId_/sweeps/_sweepId_).
     * @param sweepConfigurationNotificationRequest  (optional)
     * @return BalancePlatformNotificationResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK - the request has succeeded. </td><td>  -  </td></tr>
     </table>
     */
    public BalancePlatformNotificationResponse postBalancePlatformBalanceAccountSweepUpdated(SweepConfigurationNotificationRequest sweepConfigurationNotificationRequest) throws ApiException {
        ApiResponse<BalancePlatformNotificationResponse> localVarResp = postBalancePlatformBalanceAccountSweepUpdatedWithHttpInfo(sweepConfigurationNotificationRequest);
        return localVarResp.getData();
    }

    /**
     * Sweep updated
     * Adyen sends this webhook when you successfully [update a sweep](https://docs.adyen.com/api-explorer/balanceplatform/latest/patch/balanceAccounts/_balanceAccountId_/sweeps/_sweepId_).
     * @param sweepConfigurationNotificationRequest  (optional)
     * @return ApiResponse&lt;BalancePlatformNotificationResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK - the request has succeeded. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<BalancePlatformNotificationResponse> postBalancePlatformBalanceAccountSweepUpdatedWithHttpInfo(SweepConfigurationNotificationRequest sweepConfigurationNotificationRequest) throws ApiException {
        okhttp3.Call localVarCall = postBalancePlatformBalanceAccountSweepUpdatedValidateBeforeCall(sweepConfigurationNotificationRequest, null);
        Type localVarReturnType = new TypeToken<BalancePlatformNotificationResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Sweep updated (asynchronously)
     * Adyen sends this webhook when you successfully [update a sweep](https://docs.adyen.com/api-explorer/balanceplatform/latest/patch/balanceAccounts/_balanceAccountId_/sweeps/_sweepId_).
     * @param sweepConfigurationNotificationRequest  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK - the request has succeeded. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call postBalancePlatformBalanceAccountSweepUpdatedAsync(SweepConfigurationNotificationRequest sweepConfigurationNotificationRequest, final ApiCallback<BalancePlatformNotificationResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = postBalancePlatformBalanceAccountSweepUpdatedValidateBeforeCall(sweepConfigurationNotificationRequest, _callback);
        Type localVarReturnType = new TypeToken<BalancePlatformNotificationResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for postBalancePlatformBalanceAccountUpdated
     * @param balanceAccountNotificationRequest  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK - the request has succeeded. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call postBalancePlatformBalanceAccountUpdatedCall(BalanceAccountNotificationRequest balanceAccountNotificationRequest, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = balanceAccountNotificationRequest;

        // create path and map variables
        String localVarPath = "/balancePlatform.balanceAccount.updated";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "BasicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call postBalancePlatformBalanceAccountUpdatedValidateBeforeCall(BalanceAccountNotificationRequest balanceAccountNotificationRequest, final ApiCallback _callback) throws ApiException {
        return postBalancePlatformBalanceAccountUpdatedCall(balanceAccountNotificationRequest, _callback);

    }

    /**
     * Balance account updated
     * Adyen sends this webhook when you successfully [update a balance account](https://docs.adyen.com/api-explorer/balanceplatform/latest/patch/balanceAccounts/_id_).
     * @param balanceAccountNotificationRequest  (optional)
     * @return BalancePlatformNotificationResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK - the request has succeeded. </td><td>  -  </td></tr>
     </table>
     */
    public BalancePlatformNotificationResponse postBalancePlatformBalanceAccountUpdated(BalanceAccountNotificationRequest balanceAccountNotificationRequest) throws ApiException {
        ApiResponse<BalancePlatformNotificationResponse> localVarResp = postBalancePlatformBalanceAccountUpdatedWithHttpInfo(balanceAccountNotificationRequest);
        return localVarResp.getData();
    }

    /**
     * Balance account updated
     * Adyen sends this webhook when you successfully [update a balance account](https://docs.adyen.com/api-explorer/balanceplatform/latest/patch/balanceAccounts/_id_).
     * @param balanceAccountNotificationRequest  (optional)
     * @return ApiResponse&lt;BalancePlatformNotificationResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK - the request has succeeded. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<BalancePlatformNotificationResponse> postBalancePlatformBalanceAccountUpdatedWithHttpInfo(BalanceAccountNotificationRequest balanceAccountNotificationRequest) throws ApiException {
        okhttp3.Call localVarCall = postBalancePlatformBalanceAccountUpdatedValidateBeforeCall(balanceAccountNotificationRequest, null);
        Type localVarReturnType = new TypeToken<BalancePlatformNotificationResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Balance account updated (asynchronously)
     * Adyen sends this webhook when you successfully [update a balance account](https://docs.adyen.com/api-explorer/balanceplatform/latest/patch/balanceAccounts/_id_).
     * @param balanceAccountNotificationRequest  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK - the request has succeeded. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call postBalancePlatformBalanceAccountUpdatedAsync(BalanceAccountNotificationRequest balanceAccountNotificationRequest, final ApiCallback<BalancePlatformNotificationResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = postBalancePlatformBalanceAccountUpdatedValidateBeforeCall(balanceAccountNotificationRequest, _callback);
        Type localVarReturnType = new TypeToken<BalancePlatformNotificationResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
