/*
 * Configuration webhooks
 * Adyen sends webhooks to inform your system about events that occur in your platform. These events include, for example, when an account holder's capabilities are updated, or when a sweep configuration is created or updated.  When an event occurs, Adyen makes an HTTP POST request to a URL on your server and includes the details of the event in the request body.  You can use these webhooks to build your implementation. For example, you can use this information to update internal statuses when the status of a capability is changed.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.AccountHolderNotificationRequest;
import org.openapitools.client.model.BalancePlatformNotificationResponse;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class AccountHolderApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public AccountHolderApi() {
        this(Configuration.getDefaultApiClient());
    }

    public AccountHolderApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for postBalancePlatformAccountHolderCreated
     * @param accountHolderNotificationRequest  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK - the request has succeeded. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call postBalancePlatformAccountHolderCreatedCall(AccountHolderNotificationRequest accountHolderNotificationRequest, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = accountHolderNotificationRequest;

        // create path and map variables
        String localVarPath = "/balancePlatform.accountHolder.created";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "BasicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call postBalancePlatformAccountHolderCreatedValidateBeforeCall(AccountHolderNotificationRequest accountHolderNotificationRequest, final ApiCallback _callback) throws ApiException {
        return postBalancePlatformAccountHolderCreatedCall(accountHolderNotificationRequest, _callback);

    }

    /**
     * Account holder created
     * Adyen sends this webhook when you successfully [create an account holder](https://docs.adyen.com/api-explorer/balanceplatform/latest/post/accountHolders).
     * @param accountHolderNotificationRequest  (optional)
     * @return BalancePlatformNotificationResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK - the request has succeeded. </td><td>  -  </td></tr>
     </table>
     */
    public BalancePlatformNotificationResponse postBalancePlatformAccountHolderCreated(AccountHolderNotificationRequest accountHolderNotificationRequest) throws ApiException {
        ApiResponse<BalancePlatformNotificationResponse> localVarResp = postBalancePlatformAccountHolderCreatedWithHttpInfo(accountHolderNotificationRequest);
        return localVarResp.getData();
    }

    /**
     * Account holder created
     * Adyen sends this webhook when you successfully [create an account holder](https://docs.adyen.com/api-explorer/balanceplatform/latest/post/accountHolders).
     * @param accountHolderNotificationRequest  (optional)
     * @return ApiResponse&lt;BalancePlatformNotificationResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK - the request has succeeded. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<BalancePlatformNotificationResponse> postBalancePlatformAccountHolderCreatedWithHttpInfo(AccountHolderNotificationRequest accountHolderNotificationRequest) throws ApiException {
        okhttp3.Call localVarCall = postBalancePlatformAccountHolderCreatedValidateBeforeCall(accountHolderNotificationRequest, null);
        Type localVarReturnType = new TypeToken<BalancePlatformNotificationResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Account holder created (asynchronously)
     * Adyen sends this webhook when you successfully [create an account holder](https://docs.adyen.com/api-explorer/balanceplatform/latest/post/accountHolders).
     * @param accountHolderNotificationRequest  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK - the request has succeeded. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call postBalancePlatformAccountHolderCreatedAsync(AccountHolderNotificationRequest accountHolderNotificationRequest, final ApiCallback<BalancePlatformNotificationResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = postBalancePlatformAccountHolderCreatedValidateBeforeCall(accountHolderNotificationRequest, _callback);
        Type localVarReturnType = new TypeToken<BalancePlatformNotificationResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for postBalancePlatformAccountHolderUpdated
     * @param accountHolderNotificationRequest  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK - the request has succeeded. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call postBalancePlatformAccountHolderUpdatedCall(AccountHolderNotificationRequest accountHolderNotificationRequest, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = accountHolderNotificationRequest;

        // create path and map variables
        String localVarPath = "/balancePlatform.accountHolder.updated";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "BasicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call postBalancePlatformAccountHolderUpdatedValidateBeforeCall(AccountHolderNotificationRequest accountHolderNotificationRequest, final ApiCallback _callback) throws ApiException {
        return postBalancePlatformAccountHolderUpdatedCall(accountHolderNotificationRequest, _callback);

    }

    /**
     * Account holder updated
     * Adyen sends this webhook when you successfully [update an account holder](https://docs.adyen.com/api-explorer/balanceplatform/latest/patch/accountHolders/_id_).
     * @param accountHolderNotificationRequest  (optional)
     * @return BalancePlatformNotificationResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK - the request has succeeded. </td><td>  -  </td></tr>
     </table>
     */
    public BalancePlatformNotificationResponse postBalancePlatformAccountHolderUpdated(AccountHolderNotificationRequest accountHolderNotificationRequest) throws ApiException {
        ApiResponse<BalancePlatformNotificationResponse> localVarResp = postBalancePlatformAccountHolderUpdatedWithHttpInfo(accountHolderNotificationRequest);
        return localVarResp.getData();
    }

    /**
     * Account holder updated
     * Adyen sends this webhook when you successfully [update an account holder](https://docs.adyen.com/api-explorer/balanceplatform/latest/patch/accountHolders/_id_).
     * @param accountHolderNotificationRequest  (optional)
     * @return ApiResponse&lt;BalancePlatformNotificationResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK - the request has succeeded. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<BalancePlatformNotificationResponse> postBalancePlatformAccountHolderUpdatedWithHttpInfo(AccountHolderNotificationRequest accountHolderNotificationRequest) throws ApiException {
        okhttp3.Call localVarCall = postBalancePlatformAccountHolderUpdatedValidateBeforeCall(accountHolderNotificationRequest, null);
        Type localVarReturnType = new TypeToken<BalancePlatformNotificationResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Account holder updated (asynchronously)
     * Adyen sends this webhook when you successfully [update an account holder](https://docs.adyen.com/api-explorer/balanceplatform/latest/patch/accountHolders/_id_).
     * @param accountHolderNotificationRequest  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK - the request has succeeded. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call postBalancePlatformAccountHolderUpdatedAsync(AccountHolderNotificationRequest accountHolderNotificationRequest, final ApiCallback<BalancePlatformNotificationResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = postBalancePlatformAccountHolderUpdatedValidateBeforeCall(accountHolderNotificationRequest, _callback);
        Type localVarReturnType = new TypeToken<BalancePlatformNotificationResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
