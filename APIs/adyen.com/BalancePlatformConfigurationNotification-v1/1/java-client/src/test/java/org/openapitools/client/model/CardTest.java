/*
 * Configuration webhooks
 * Adyen sends webhooks to inform your system about events that occur in your platform. These events include, for example, when an account holder's capabilities are updated, or when a sweep configuration is created or updated.  When an event occurs, Adyen makes an HTTP POST request to a URL on your server and includes the details of the event in the request body.  You can use these webhooks to build your implementation. For example, you can use this information to update internal statuses when the status of a capability is changed.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.Authentication;
import org.openapitools.client.model.CardConfiguration;
import org.openapitools.client.model.Contact;
import org.openapitools.client.model.Expiry;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Card
 */
public class CardTest {
    private final Card model = new Card();

    /**
     * Model tests for Card
     */
    @Test
    public void testCard() {
        // TODO: test Card
    }

    /**
     * Test the property 'authentication'
     */
    @Test
    public void authenticationTest() {
        // TODO: test authentication
    }

    /**
     * Test the property 'bin'
     */
    @Test
    public void binTest() {
        // TODO: test bin
    }

    /**
     * Test the property 'brand'
     */
    @Test
    public void brandTest() {
        // TODO: test brand
    }

    /**
     * Test the property 'brandVariant'
     */
    @Test
    public void brandVariantTest() {
        // TODO: test brandVariant
    }

    /**
     * Test the property 'cardholderName'
     */
    @Test
    public void cardholderNameTest() {
        // TODO: test cardholderName
    }

    /**
     * Test the property '_configuration'
     */
    @Test
    public void _configurationTest() {
        // TODO: test _configuration
    }

    /**
     * Test the property 'cvc'
     */
    @Test
    public void cvcTest() {
        // TODO: test cvc
    }

    /**
     * Test the property 'deliveryContact'
     */
    @Test
    public void deliveryContactTest() {
        // TODO: test deliveryContact
    }

    /**
     * Test the property 'expiration'
     */
    @Test
    public void expirationTest() {
        // TODO: test expiration
    }

    /**
     * Test the property 'formFactor'
     */
    @Test
    public void formFactorTest() {
        // TODO: test formFactor
    }

    /**
     * Test the property 'lastFour'
     */
    @Test
    public void lastFourTest() {
        // TODO: test lastFour
    }

    /**
     * Test the property 'number'
     */
    @Test
    public void numberTest() {
        // TODO: test number
    }

    /**
     * Test the property 'threeDSecure'
     */
    @Test
    public void threeDSecureTest() {
        // TODO: test threeDSecure
    }

}
