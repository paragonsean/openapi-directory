/*
 * Configuration webhooks
 * Adyen sends webhooks to inform your system about events that occur in your platform. These events include, for example, when an account holder's capabilities are updated, or when a sweep configuration is created or updated.  When an event occurs, Adyen makes an HTTP POST request to a URL on your server and includes the details of the event in the request body.  You can use these webhooks to build your implementation. For example, you can use this information to update internal statuses when the status of a capability is changed.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AccountSupportingEntityCapability;
import org.openapitools.client.model.CapabilityProblem;
import org.openapitools.client.model.CapabilitySettings;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for AccountHolderCapability
 */
public class AccountHolderCapabilityTest {
    private final AccountHolderCapability model = new AccountHolderCapability();

    /**
     * Model tests for AccountHolderCapability
     */
    @Test
    public void testAccountHolderCapability() {
        // TODO: test AccountHolderCapability
    }

    /**
     * Test the property 'allowed'
     */
    @Test
    public void allowedTest() {
        // TODO: test allowed
    }

    /**
     * Test the property 'allowedLevel'
     */
    @Test
    public void allowedLevelTest() {
        // TODO: test allowedLevel
    }

    /**
     * Test the property 'allowedSettings'
     */
    @Test
    public void allowedSettingsTest() {
        // TODO: test allowedSettings
    }

    /**
     * Test the property 'enabled'
     */
    @Test
    public void enabledTest() {
        // TODO: test enabled
    }

    /**
     * Test the property 'problems'
     */
    @Test
    public void problemsTest() {
        // TODO: test problems
    }

    /**
     * Test the property 'requested'
     */
    @Test
    public void requestedTest() {
        // TODO: test requested
    }

    /**
     * Test the property 'requestedLevel'
     */
    @Test
    public void requestedLevelTest() {
        // TODO: test requestedLevel
    }

    /**
     * Test the property 'requestedSettings'
     */
    @Test
    public void requestedSettingsTest() {
        // TODO: test requestedSettings
    }

    /**
     * Test the property 'transferInstruments'
     */
    @Test
    public void transferInstrumentsTest() {
        // TODO: test transferInstruments
    }

    /**
     * Test the property 'verificationStatus'
     */
    @Test
    public void verificationStatusTest() {
        // TODO: test verificationStatus
    }

}
