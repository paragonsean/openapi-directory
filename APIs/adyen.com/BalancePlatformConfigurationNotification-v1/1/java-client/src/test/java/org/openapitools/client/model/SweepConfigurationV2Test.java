/*
 * Configuration webhooks
 * Adyen sends webhooks to inform your system about events that occur in your platform. These events include, for example, when an account holder's capabilities are updated, or when a sweep configuration is created or updated.  When an event occurs, Adyen makes an HTTP POST request to a URL on your server and includes the details of the event in the request body.  You can use these webhooks to build your implementation. For example, you can use this information to update internal statuses when the status of a capability is changed.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.Amount;
import org.openapitools.client.model.SweepCounterparty;
import org.openapitools.client.model.SweepSchedule;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for SweepConfigurationV2
 */
public class SweepConfigurationV2Test {
    private final SweepConfigurationV2 model = new SweepConfigurationV2();

    /**
     * Model tests for SweepConfigurationV2
     */
    @Test
    public void testSweepConfigurationV2() {
        // TODO: test SweepConfigurationV2
    }

    /**
     * Test the property 'counterparty'
     */
    @Test
    public void counterpartyTest() {
        // TODO: test counterparty
    }

    /**
     * Test the property 'currency'
     */
    @Test
    public void currencyTest() {
        // TODO: test currency
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'reason'
     */
    @Test
    public void reasonTest() {
        // TODO: test reason
    }

    /**
     * Test the property 'schedule'
     */
    @Test
    public void scheduleTest() {
        // TODO: test schedule
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'sweepAmount'
     */
    @Test
    public void sweepAmountTest() {
        // TODO: test sweepAmount
    }

    /**
     * Test the property 'targetAmount'
     */
    @Test
    public void targetAmountTest() {
        // TODO: test targetAmount
    }

    /**
     * Test the property 'triggerAmount'
     */
    @Test
    public void triggerAmountTest() {
        // TODO: test triggerAmount
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

}
