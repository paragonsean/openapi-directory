/*
 * Configuration webhooks
 * Adyen sends webhooks to inform your system about events that occur in your platform. These events include, for example, when an account holder's capabilities are updated, or when a sweep configuration is created or updated.  When an event occurs, Adyen makes an HTTP POST request to a URL on your server and includes the details of the event in the request body.  You can use these webhooks to build your implementation. For example, you can use this information to update internal statuses when the status of a capability is changed.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.BulkAddress;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for CardConfiguration
 */
public class CardConfigurationTest {
    private final CardConfiguration model = new CardConfiguration();

    /**
     * Model tests for CardConfiguration
     */
    @Test
    public void testCardConfiguration() {
        // TODO: test CardConfiguration
    }

    /**
     * Test the property 'activation'
     */
    @Test
    public void activationTest() {
        // TODO: test activation
    }

    /**
     * Test the property 'activationUrl'
     */
    @Test
    public void activationUrlTest() {
        // TODO: test activationUrl
    }

    /**
     * Test the property 'bulkAddress'
     */
    @Test
    public void bulkAddressTest() {
        // TODO: test bulkAddress
    }

    /**
     * Test the property 'cardImageId'
     */
    @Test
    public void cardImageIdTest() {
        // TODO: test cardImageId
    }

    /**
     * Test the property 'carrier'
     */
    @Test
    public void carrierTest() {
        // TODO: test carrier
    }

    /**
     * Test the property 'carrierImageId'
     */
    @Test
    public void carrierImageIdTest() {
        // TODO: test carrierImageId
    }

    /**
     * Test the property 'configurationProfileId'
     */
    @Test
    public void configurationProfileIdTest() {
        // TODO: test configurationProfileId
    }

    /**
     * Test the property 'currency'
     */
    @Test
    public void currencyTest() {
        // TODO: test currency
    }

    /**
     * Test the property 'envelope'
     */
    @Test
    public void envelopeTest() {
        // TODO: test envelope
    }

    /**
     * Test the property 'insert'
     */
    @Test
    public void insertTest() {
        // TODO: test insert
    }

    /**
     * Test the property 'language'
     */
    @Test
    public void languageTest() {
        // TODO: test language
    }

    /**
     * Test the property 'logoImageId'
     */
    @Test
    public void logoImageIdTest() {
        // TODO: test logoImageId
    }

    /**
     * Test the property 'pinMailer'
     */
    @Test
    public void pinMailerTest() {
        // TODO: test pinMailer
    }

    /**
     * Test the property 'shipmentMethod'
     */
    @Test
    public void shipmentMethodTest() {
        // TODO: test shipmentMethod
    }

}
