/**
 * Configuration webhooks
 * Adyen sends webhooks to inform your system about events that occur in your platform. These events include, for example, when an account holder's capabilities are updated, or when a sweep configuration is created or updated.  When an event occurs, Adyen makes an HTTP POST request to a URL on your server and includes the details of the event in the request body.  You can use these webhooks to build your implementation. For example, you can use this information to update internal statuses when the status of a capability is changed.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Amount from './Amount';

/**
 * The CapabilitySettings model module.
 * @module model/CapabilitySettings
 * @version 1
 */
class CapabilitySettings {
    /**
     * Constructs a new <code>CapabilitySettings</code>.
     * @alias module:model/CapabilitySettings
     */
    constructor() { 
        
        CapabilitySettings.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CapabilitySettings</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CapabilitySettings} obj Optional instance to populate.
     * @return {module:model/CapabilitySettings} The populated <code>CapabilitySettings</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CapabilitySettings();

            if (data.hasOwnProperty('amountPerIndustry')) {
                obj['amountPerIndustry'] = ApiClient.convertToType(data['amountPerIndustry'], {'String': Amount});
            }
            if (data.hasOwnProperty('authorizedCardUsers')) {
                obj['authorizedCardUsers'] = ApiClient.convertToType(data['authorizedCardUsers'], 'Boolean');
            }
            if (data.hasOwnProperty('fundingSource')) {
                obj['fundingSource'] = ApiClient.convertToType(data['fundingSource'], ['String']);
            }
            if (data.hasOwnProperty('interval')) {
                obj['interval'] = ApiClient.convertToType(data['interval'], 'String');
            }
            if (data.hasOwnProperty('maxAmount')) {
                obj['maxAmount'] = Amount.constructFromObject(data['maxAmount']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CapabilitySettings</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CapabilitySettings</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['fundingSource'])) {
            throw new Error("Expected the field `fundingSource` to be an array in the JSON data but got " + data['fundingSource']);
        }
        // ensure the json data is a string
        if (data['interval'] && !(typeof data['interval'] === 'string' || data['interval'] instanceof String)) {
            throw new Error("Expected the field `interval` to be a primitive type in the JSON string but got " + data['interval']);
        }
        // validate the optional field `maxAmount`
        if (data['maxAmount']) { // data not null
          Amount.validateJSON(data['maxAmount']);
        }

        return true;
    }


}



/**
 * 
 * @member {Object.<String, module:model/Amount>} amountPerIndustry
 */
CapabilitySettings.prototype['amountPerIndustry'] = undefined;

/**
 * 
 * @member {Boolean} authorizedCardUsers
 */
CapabilitySettings.prototype['authorizedCardUsers'] = undefined;

/**
 * 
 * @member {Array.<module:model/CapabilitySettings.FundingSourceEnum>} fundingSource
 */
CapabilitySettings.prototype['fundingSource'] = undefined;

/**
 * 
 * @member {module:model/CapabilitySettings.IntervalEnum} interval
 */
CapabilitySettings.prototype['interval'] = undefined;

/**
 * 
 * @member {module:model/Amount} maxAmount
 */
CapabilitySettings.prototype['maxAmount'] = undefined;





/**
 * Allowed values for the <code>fundingSource</code> property.
 * @enum {String}
 * @readonly
 */
CapabilitySettings['FundingSourceEnum'] = {

    /**
     * value: "credit"
     * @const
     */
    "credit": "credit",

    /**
     * value: "debit"
     * @const
     */
    "debit": "debit",

    /**
     * value: "prepaid"
     * @const
     */
    "prepaid": "prepaid"
};


/**
 * Allowed values for the <code>interval</code> property.
 * @enum {String}
 * @readonly
 */
CapabilitySettings['IntervalEnum'] = {

    /**
     * value: "daily"
     * @const
     */
    "daily": "daily",

    /**
     * value: "monthly"
     * @const
     */
    "monthly": "monthly",

    /**
     * value: "weekly"
     * @const
     */
    "weekly": "weekly"
};



export default CapabilitySettings;

