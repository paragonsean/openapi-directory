/**
 * Configuration webhooks
 * Adyen sends webhooks to inform your system about events that occur in your platform. These events include, for example, when an account holder's capabilities are updated, or when a sweep configuration is created or updated.  When an event occurs, Adyen makes an HTTP POST request to a URL on your server and includes the details of the event in the request body.  You can use these webhooks to build your implementation. For example, you can use this information to update internal statuses when the status of a capability is changed.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ConfigurationWebhooks);
  }
}(this, function(expect, ConfigurationWebhooks) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ConfigurationWebhooks.PersonalData();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('PersonalData', function() {
    it('should create an instance of PersonalData', function() {
      // uncomment below and update the code to test PersonalData
      //var instance = new ConfigurationWebhooks.PersonalData();
      //expect(instance).to.be.a(ConfigurationWebhooks.PersonalData);
    });

    it('should have the property dateOfBirth (base name: "dateOfBirth")', function() {
      // uncomment below and update the code to test the property dateOfBirth
      //var instance = new ConfigurationWebhooks.PersonalData();
      //expect(instance).to.be();
    });

    it('should have the property idNumber (base name: "idNumber")', function() {
      // uncomment below and update the code to test the property idNumber
      //var instance = new ConfigurationWebhooks.PersonalData();
      //expect(instance).to.be();
    });

    it('should have the property nationality (base name: "nationality")', function() {
      // uncomment below and update the code to test the property nationality
      //var instance = new ConfigurationWebhooks.PersonalData();
      //expect(instance).to.be();
    });

  });

}));
