/**
 * Configuration webhooks
 * Adyen sends webhooks to inform your system about events that occur in your platform. These events include, for example, when an account holder's capabilities are updated, or when a sweep configuration is created or updated.  When an event occurs, Adyen makes an HTTP POST request to a URL on your server and includes the details of the event in the request body.  You can use these webhooks to build your implementation. For example, you can use this information to update internal statuses when the status of a capability is changed.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ConfigurationWebhooks);
  }
}(this, function(expect, ConfigurationWebhooks) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ConfigurationWebhooks.PaymentInstrument();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('PaymentInstrument', function() {
    it('should create an instance of PaymentInstrument', function() {
      // uncomment below and update the code to test PaymentInstrument
      //var instance = new ConfigurationWebhooks.PaymentInstrument();
      //expect(instance).to.be.a(ConfigurationWebhooks.PaymentInstrument);
    });

    it('should have the property balanceAccountId (base name: "balanceAccountId")', function() {
      // uncomment below and update the code to test the property balanceAccountId
      //var instance = new ConfigurationWebhooks.PaymentInstrument();
      //expect(instance).to.be();
    });

    it('should have the property bankAccount (base name: "bankAccount")', function() {
      // uncomment below and update the code to test the property bankAccount
      //var instance = new ConfigurationWebhooks.PaymentInstrument();
      //expect(instance).to.be();
    });

    it('should have the property card (base name: "card")', function() {
      // uncomment below and update the code to test the property card
      //var instance = new ConfigurationWebhooks.PaymentInstrument();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new ConfigurationWebhooks.PaymentInstrument();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new ConfigurationWebhooks.PaymentInstrument();
      //expect(instance).to.be();
    });

    it('should have the property issuingCountryCode (base name: "issuingCountryCode")', function() {
      // uncomment below and update the code to test the property issuingCountryCode
      //var instance = new ConfigurationWebhooks.PaymentInstrument();
      //expect(instance).to.be();
    });

    it('should have the property paymentInstrumentGroupId (base name: "paymentInstrumentGroupId")', function() {
      // uncomment below and update the code to test the property paymentInstrumentGroupId
      //var instance = new ConfigurationWebhooks.PaymentInstrument();
      //expect(instance).to.be();
    });

    it('should have the property reference (base name: "reference")', function() {
      // uncomment below and update the code to test the property reference
      //var instance = new ConfigurationWebhooks.PaymentInstrument();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new ConfigurationWebhooks.PaymentInstrument();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "type")', function() {
      // uncomment below and update the code to test the property type
      //var instance = new ConfigurationWebhooks.PaymentInstrument();
      //expect(instance).to.be();
    });

  });

}));
