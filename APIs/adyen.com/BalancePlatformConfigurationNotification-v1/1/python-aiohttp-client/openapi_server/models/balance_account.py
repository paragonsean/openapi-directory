# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.balance import Balance
from openapi_server.models.payment_instrument_reference import PaymentInstrumentReference
from openapi_server.models.platform_payment_configuration import PlatformPaymentConfiguration
from openapi_server import util


class BalanceAccount(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_holder_id: str=None, balances: List[Balance]=None, default_currency_code: str=None, description: str=None, id: str=None, metadata: Dict[str, str]=None, migrated_account_code: str=None, payment_instruments: List[PaymentInstrumentReference]=None, platform_payment_configuration: PlatformPaymentConfiguration=None, reference: str=None, status: str=None, time_zone: str=None):
        """BalanceAccount - a model defined in OpenAPI

        :param account_holder_id: The account_holder_id of this BalanceAccount.
        :param balances: The balances of this BalanceAccount.
        :param default_currency_code: The default_currency_code of this BalanceAccount.
        :param description: The description of this BalanceAccount.
        :param id: The id of this BalanceAccount.
        :param metadata: The metadata of this BalanceAccount.
        :param migrated_account_code: The migrated_account_code of this BalanceAccount.
        :param payment_instruments: The payment_instruments of this BalanceAccount.
        :param platform_payment_configuration: The platform_payment_configuration of this BalanceAccount.
        :param reference: The reference of this BalanceAccount.
        :param status: The status of this BalanceAccount.
        :param time_zone: The time_zone of this BalanceAccount.
        """
        self.openapi_types = {
            'account_holder_id': str,
            'balances': List[Balance],
            'default_currency_code': str,
            'description': str,
            'id': str,
            'metadata': Dict[str, str],
            'migrated_account_code': str,
            'payment_instruments': List[PaymentInstrumentReference],
            'platform_payment_configuration': PlatformPaymentConfiguration,
            'reference': str,
            'status': str,
            'time_zone': str
        }

        self.attribute_map = {
            'account_holder_id': 'accountHolderId',
            'balances': 'balances',
            'default_currency_code': 'defaultCurrencyCode',
            'description': 'description',
            'id': 'id',
            'metadata': 'metadata',
            'migrated_account_code': 'migratedAccountCode',
            'payment_instruments': 'paymentInstruments',
            'platform_payment_configuration': 'platformPaymentConfiguration',
            'reference': 'reference',
            'status': 'status',
            'time_zone': 'timeZone'
        }

        self._account_holder_id = account_holder_id
        self._balances = balances
        self._default_currency_code = default_currency_code
        self._description = description
        self._id = id
        self._metadata = metadata
        self._migrated_account_code = migrated_account_code
        self._payment_instruments = payment_instruments
        self._platform_payment_configuration = platform_payment_configuration
        self._reference = reference
        self._status = status
        self._time_zone = time_zone

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BalanceAccount':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BalanceAccount of this BalanceAccount.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_holder_id(self):
        """Gets the account_holder_id of this BalanceAccount.

        The unique identifier of the [account holder](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/post/accountHolders__resParam_id) associated with the balance account.

        :return: The account_holder_id of this BalanceAccount.
        :rtype: str
        """
        return self._account_holder_id

    @account_holder_id.setter
    def account_holder_id(self, account_holder_id):
        """Sets the account_holder_id of this BalanceAccount.

        The unique identifier of the [account holder](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/post/accountHolders__resParam_id) associated with the balance account.

        :param account_holder_id: The account_holder_id of this BalanceAccount.
        :type account_holder_id: str
        """
        if account_holder_id is None:
            raise ValueError("Invalid value for `account_holder_id`, must not be `None`")

        self._account_holder_id = account_holder_id

    @property
    def balances(self):
        """Gets the balances of this BalanceAccount.

        List of balances with the amount and currency.

        :return: The balances of this BalanceAccount.
        :rtype: List[Balance]
        """
        return self._balances

    @balances.setter
    def balances(self, balances):
        """Sets the balances of this BalanceAccount.

        List of balances with the amount and currency.

        :param balances: The balances of this BalanceAccount.
        :type balances: List[Balance]
        """

        self._balances = balances

    @property
    def default_currency_code(self):
        """Gets the default_currency_code of this BalanceAccount.

        The default three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes) of the balance account. The default value is **EUR**. > After a balance account is created, you cannot change its default currency.

        :return: The default_currency_code of this BalanceAccount.
        :rtype: str
        """
        return self._default_currency_code

    @default_currency_code.setter
    def default_currency_code(self, default_currency_code):
        """Sets the default_currency_code of this BalanceAccount.

        The default three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes) of the balance account. The default value is **EUR**. > After a balance account is created, you cannot change its default currency.

        :param default_currency_code: The default_currency_code of this BalanceAccount.
        :type default_currency_code: str
        """

        self._default_currency_code = default_currency_code

    @property
    def description(self):
        """Gets the description of this BalanceAccount.

        A human-readable description of the balance account, maximum 300 characters. You can use this parameter to distinguish between multiple balance accounts under an account holder.

        :return: The description of this BalanceAccount.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this BalanceAccount.

        A human-readable description of the balance account, maximum 300 characters. You can use this parameter to distinguish between multiple balance accounts under an account holder.

        :param description: The description of this BalanceAccount.
        :type description: str
        """
        if description is not None and len(description) > 300:
            raise ValueError("Invalid value for `description`, length must be less than or equal to `300`")

        self._description = description

    @property
    def id(self):
        """Gets the id of this BalanceAccount.

        The unique identifier of the balance account.

        :return: The id of this BalanceAccount.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this BalanceAccount.

        The unique identifier of the balance account.

        :param id: The id of this BalanceAccount.
        :type id: str
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")

        self._id = id

    @property
    def metadata(self):
        """Gets the metadata of this BalanceAccount.

        A set of key and value pairs for general use. The keys do not have specific names and may be used for storing miscellaneous data as desired. > Note that during an update of metadata, the omission of existing key-value pairs will result in the deletion of those key-value pairs.

        :return: The metadata of this BalanceAccount.
        :rtype: Dict[str, str]
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata):
        """Sets the metadata of this BalanceAccount.

        A set of key and value pairs for general use. The keys do not have specific names and may be used for storing miscellaneous data as desired. > Note that during an update of metadata, the omission of existing key-value pairs will result in the deletion of those key-value pairs.

        :param metadata: The metadata of this BalanceAccount.
        :type metadata: Dict[str, str]
        """

        self._metadata = metadata

    @property
    def migrated_account_code(self):
        """Gets the migrated_account_code of this BalanceAccount.

        The unique identifier of the account of the migrated account holder in the classic integration.

        :return: The migrated_account_code of this BalanceAccount.
        :rtype: str
        """
        return self._migrated_account_code

    @migrated_account_code.setter
    def migrated_account_code(self, migrated_account_code):
        """Sets the migrated_account_code of this BalanceAccount.

        The unique identifier of the account of the migrated account holder in the classic integration.

        :param migrated_account_code: The migrated_account_code of this BalanceAccount.
        :type migrated_account_code: str
        """

        self._migrated_account_code = migrated_account_code

    @property
    def payment_instruments(self):
        """Gets the payment_instruments of this BalanceAccount.

        List of [payment instruments](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/post/paymentInstruments) associated with the balance account.

        :return: The payment_instruments of this BalanceAccount.
        :rtype: List[PaymentInstrumentReference]
        """
        return self._payment_instruments

    @payment_instruments.setter
    def payment_instruments(self, payment_instruments):
        """Sets the payment_instruments of this BalanceAccount.

        List of [payment instruments](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/post/paymentInstruments) associated with the balance account.

        :param payment_instruments: The payment_instruments of this BalanceAccount.
        :type payment_instruments: List[PaymentInstrumentReference]
        """

        self._payment_instruments = payment_instruments

    @property
    def platform_payment_configuration(self):
        """Gets the platform_payment_configuration of this BalanceAccount.

        Contains key-value pairs to the configure the settlement model in a balance account.

        :return: The platform_payment_configuration of this BalanceAccount.
        :rtype: PlatformPaymentConfiguration
        """
        return self._platform_payment_configuration

    @platform_payment_configuration.setter
    def platform_payment_configuration(self, platform_payment_configuration):
        """Sets the platform_payment_configuration of this BalanceAccount.

        Contains key-value pairs to the configure the settlement model in a balance account.

        :param platform_payment_configuration: The platform_payment_configuration of this BalanceAccount.
        :type platform_payment_configuration: PlatformPaymentConfiguration
        """

        self._platform_payment_configuration = platform_payment_configuration

    @property
    def reference(self):
        """Gets the reference of this BalanceAccount.

        Your reference for the balance account, maximum 150 characters.

        :return: The reference of this BalanceAccount.
        :rtype: str
        """
        return self._reference

    @reference.setter
    def reference(self, reference):
        """Sets the reference of this BalanceAccount.

        Your reference for the balance account, maximum 150 characters.

        :param reference: The reference of this BalanceAccount.
        :type reference: str
        """
        if reference is not None and len(reference) > 150:
            raise ValueError("Invalid value for `reference`, length must be less than or equal to `150`")

        self._reference = reference

    @property
    def status(self):
        """Gets the status of this BalanceAccount.

        The status of the balance account, set to **Active** by default.  

        :return: The status of this BalanceAccount.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this BalanceAccount.

        The status of the balance account, set to **Active** by default.  

        :param status: The status of this BalanceAccount.
        :type status: str
        """
        allowed_values = ["Active", "Closed", "Inactive", "Suspended"]  # noqa: E501
        if status not in allowed_values:
            raise ValueError(
                "Invalid value for `status` ({0}), must be one of {1}"
                .format(status, allowed_values)
            )

        self._status = status

    @property
    def time_zone(self):
        """Gets the time_zone of this BalanceAccount.

        The time zone of the balance account. For example, **Europe/Amsterdam**. Defaults to the time zone of the account holder if no time zone is set. For possible values, see the [list of time zone codes](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones).

        :return: The time_zone of this BalanceAccount.
        :rtype: str
        """
        return self._time_zone

    @time_zone.setter
    def time_zone(self, time_zone):
        """Sets the time_zone of this BalanceAccount.

        The time zone of the balance account. For example, **Europe/Amsterdam**. Defaults to the time zone of the account holder if no time zone is set. For possible values, see the [list of time zone codes](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones).

        :param time_zone: The time_zone of this BalanceAccount.
        :type time_zone: str
        """

        self._time_zone = time_zone
