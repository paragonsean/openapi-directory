# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.card_order_item_delivery_status import CardOrderItemDeliveryStatus
from openapi_server import util


class CardOrderItem(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, balance_platform: str=None, card: CardOrderItemDeliveryStatus=None, card_order_item_id: str=None, creation_date: datetime=None, id: str=None, payment_instrument_id: str=None, pin: CardOrderItemDeliveryStatus=None, shipping_method: str=None):
        """CardOrderItem - a model defined in OpenAPI

        :param balance_platform: The balance_platform of this CardOrderItem.
        :param card: The card of this CardOrderItem.
        :param card_order_item_id: The card_order_item_id of this CardOrderItem.
        :param creation_date: The creation_date of this CardOrderItem.
        :param id: The id of this CardOrderItem.
        :param payment_instrument_id: The payment_instrument_id of this CardOrderItem.
        :param pin: The pin of this CardOrderItem.
        :param shipping_method: The shipping_method of this CardOrderItem.
        """
        self.openapi_types = {
            'balance_platform': str,
            'card': CardOrderItemDeliveryStatus,
            'card_order_item_id': str,
            'creation_date': datetime,
            'id': str,
            'payment_instrument_id': str,
            'pin': CardOrderItemDeliveryStatus,
            'shipping_method': str
        }

        self.attribute_map = {
            'balance_platform': 'balancePlatform',
            'card': 'card',
            'card_order_item_id': 'cardOrderItemId',
            'creation_date': 'creationDate',
            'id': 'id',
            'payment_instrument_id': 'paymentInstrumentId',
            'pin': 'pin',
            'shipping_method': 'shippingMethod'
        }

        self._balance_platform = balance_platform
        self._card = card
        self._card_order_item_id = card_order_item_id
        self._creation_date = creation_date
        self._id = id
        self._payment_instrument_id = payment_instrument_id
        self._pin = pin
        self._shipping_method = shipping_method

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CardOrderItem':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CardOrderItem of this CardOrderItem.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def balance_platform(self):
        """Gets the balance_platform of this CardOrderItem.

        The unique identifier of the balance platform.

        :return: The balance_platform of this CardOrderItem.
        :rtype: str
        """
        return self._balance_platform

    @balance_platform.setter
    def balance_platform(self, balance_platform):
        """Sets the balance_platform of this CardOrderItem.

        The unique identifier of the balance platform.

        :param balance_platform: The balance_platform of this CardOrderItem.
        :type balance_platform: str
        """

        self._balance_platform = balance_platform

    @property
    def card(self):
        """Gets the card of this CardOrderItem.

        The status of the card delivery.  Possible values: **created**, **rejected**, **processing**, **produced**, **shipped**, **delivered**, **notApplicable**, **unknown**. 

        :return: The card of this CardOrderItem.
        :rtype: CardOrderItemDeliveryStatus
        """
        return self._card

    @card.setter
    def card(self, card):
        """Sets the card of this CardOrderItem.

        The status of the card delivery.  Possible values: **created**, **rejected**, **processing**, **produced**, **shipped**, **delivered**, **notApplicable**, **unknown**. 

        :param card: The card of this CardOrderItem.
        :type card: CardOrderItemDeliveryStatus
        """

        self._card = card

    @property
    def card_order_item_id(self):
        """Gets the card_order_item_id of this CardOrderItem.

        The unique identifier of the card order item.

        :return: The card_order_item_id of this CardOrderItem.
        :rtype: str
        """
        return self._card_order_item_id

    @card_order_item_id.setter
    def card_order_item_id(self, card_order_item_id):
        """Sets the card_order_item_id of this CardOrderItem.

        The unique identifier of the card order item.

        :param card_order_item_id: The card_order_item_id of this CardOrderItem.
        :type card_order_item_id: str
        """

        self._card_order_item_id = card_order_item_id

    @property
    def creation_date(self):
        """Gets the creation_date of this CardOrderItem.

        The date and time when the event was triggered, in ISO 8601 extended format. For example, **2020-12-18T10:15:30+01:00**.

        :return: The creation_date of this CardOrderItem.
        :rtype: datetime
        """
        return self._creation_date

    @creation_date.setter
    def creation_date(self, creation_date):
        """Sets the creation_date of this CardOrderItem.

        The date and time when the event was triggered, in ISO 8601 extended format. For example, **2020-12-18T10:15:30+01:00**.

        :param creation_date: The creation_date of this CardOrderItem.
        :type creation_date: datetime
        """

        self._creation_date = creation_date

    @property
    def id(self):
        """Gets the id of this CardOrderItem.

        The ID of the resource.

        :return: The id of this CardOrderItem.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this CardOrderItem.

        The ID of the resource.

        :param id: The id of this CardOrderItem.
        :type id: str
        """

        self._id = id

    @property
    def payment_instrument_id(self):
        """Gets the payment_instrument_id of this CardOrderItem.

        The unique identifier of the payment instrument related to the card order item.

        :return: The payment_instrument_id of this CardOrderItem.
        :rtype: str
        """
        return self._payment_instrument_id

    @payment_instrument_id.setter
    def payment_instrument_id(self, payment_instrument_id):
        """Sets the payment_instrument_id of this CardOrderItem.

        The unique identifier of the payment instrument related to the card order item.

        :param payment_instrument_id: The payment_instrument_id of this CardOrderItem.
        :type payment_instrument_id: str
        """

        self._payment_instrument_id = payment_instrument_id

    @property
    def pin(self):
        """Gets the pin of this CardOrderItem.

        Contains information about the status of the PIN delivery.

        :return: The pin of this CardOrderItem.
        :rtype: CardOrderItemDeliveryStatus
        """
        return self._pin

    @pin.setter
    def pin(self, pin):
        """Sets the pin of this CardOrderItem.

        Contains information about the status of the PIN delivery.

        :param pin: The pin of this CardOrderItem.
        :type pin: CardOrderItemDeliveryStatus
        """

        self._pin = pin

    @property
    def shipping_method(self):
        """Gets the shipping_method of this CardOrderItem.

        The shipping method used to deliver the card or the PIN.

        :return: The shipping_method of this CardOrderItem.
        :rtype: str
        """
        return self._shipping_method

    @shipping_method.setter
    def shipping_method(self, shipping_method):
        """Sets the shipping_method of this CardOrderItem.

        The shipping method used to deliver the card or the PIN.

        :param shipping_method: The shipping_method of this CardOrderItem.
        :type shipping_method: str
        """

        self._shipping_method = shipping_method
