# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.balance_account import BalanceAccount
from openapi_server import util


class BalanceAccountNotificationData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, balance_account: BalanceAccount=None, balance_platform: str=None):
        """BalanceAccountNotificationData - a model defined in OpenAPI

        :param balance_account: The balance_account of this BalanceAccountNotificationData.
        :param balance_platform: The balance_platform of this BalanceAccountNotificationData.
        """
        self.openapi_types = {
            'balance_account': BalanceAccount,
            'balance_platform': str
        }

        self.attribute_map = {
            'balance_account': 'balanceAccount',
            'balance_platform': 'balancePlatform'
        }

        self._balance_account = balance_account
        self._balance_platform = balance_platform

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BalanceAccountNotificationData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BalanceAccountNotificationData of this BalanceAccountNotificationData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def balance_account(self):
        """Gets the balance_account of this BalanceAccountNotificationData.


        :return: The balance_account of this BalanceAccountNotificationData.
        :rtype: BalanceAccount
        """
        return self._balance_account

    @balance_account.setter
    def balance_account(self, balance_account):
        """Sets the balance_account of this BalanceAccountNotificationData.


        :param balance_account: The balance_account of this BalanceAccountNotificationData.
        :type balance_account: BalanceAccount
        """

        self._balance_account = balance_account

    @property
    def balance_platform(self):
        """Gets the balance_platform of this BalanceAccountNotificationData.

        The unique identifier of the balance platform.

        :return: The balance_platform of this BalanceAccountNotificationData.
        :rtype: str
        """
        return self._balance_platform

    @balance_platform.setter
    def balance_platform(self, balance_platform):
        """Sets the balance_platform of this BalanceAccountNotificationData.

        The unique identifier of the balance platform.

        :param balance_platform: The balance_platform of this BalanceAccountNotificationData.
        :type balance_platform: str
        """

        self._balance_platform = balance_platform
