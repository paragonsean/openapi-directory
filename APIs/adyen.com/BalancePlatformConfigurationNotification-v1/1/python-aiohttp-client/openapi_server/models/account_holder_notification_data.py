# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.account_holder import AccountHolder
from openapi_server import util


class AccountHolderNotificationData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_holder: AccountHolder=None, balance_platform: str=None):
        """AccountHolderNotificationData - a model defined in OpenAPI

        :param account_holder: The account_holder of this AccountHolderNotificationData.
        :param balance_platform: The balance_platform of this AccountHolderNotificationData.
        """
        self.openapi_types = {
            'account_holder': AccountHolder,
            'balance_platform': str
        }

        self.attribute_map = {
            'account_holder': 'accountHolder',
            'balance_platform': 'balancePlatform'
        }

        self._account_holder = account_holder
        self._balance_platform = balance_platform

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AccountHolderNotificationData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AccountHolderNotificationData of this AccountHolderNotificationData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_holder(self):
        """Gets the account_holder of this AccountHolderNotificationData.

        Contains information about the account holder resource that triggered the event.

        :return: The account_holder of this AccountHolderNotificationData.
        :rtype: AccountHolder
        """
        return self._account_holder

    @account_holder.setter
    def account_holder(self, account_holder):
        """Sets the account_holder of this AccountHolderNotificationData.

        Contains information about the account holder resource that triggered the event.

        :param account_holder: The account_holder of this AccountHolderNotificationData.
        :type account_holder: AccountHolder
        """

        self._account_holder = account_holder

    @property
    def balance_platform(self):
        """Gets the balance_platform of this AccountHolderNotificationData.

        The unique identifier of the balance platform.

        :return: The balance_platform of this AccountHolderNotificationData.
        :rtype: str
        """
        return self._balance_platform

    @balance_platform.setter
    def balance_platform(self, balance_platform):
        """Sets the balance_platform of this AccountHolderNotificationData.

        The unique identifier of the balance platform.

        :param balance_platform: The balance_platform of this AccountHolderNotificationData.
        :type balance_platform: str
        """

        self._balance_platform = balance_platform
