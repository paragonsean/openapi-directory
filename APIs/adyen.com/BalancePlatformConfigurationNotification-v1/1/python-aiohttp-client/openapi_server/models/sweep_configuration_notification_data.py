# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.sweep_configuration_v2 import SweepConfigurationV2
from openapi_server import util


class SweepConfigurationNotificationData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_id: str=None, balance_platform: str=None, sweep: SweepConfigurationV2=None):
        """SweepConfigurationNotificationData - a model defined in OpenAPI

        :param account_id: The account_id of this SweepConfigurationNotificationData.
        :param balance_platform: The balance_platform of this SweepConfigurationNotificationData.
        :param sweep: The sweep of this SweepConfigurationNotificationData.
        """
        self.openapi_types = {
            'account_id': str,
            'balance_platform': str,
            'sweep': SweepConfigurationV2
        }

        self.attribute_map = {
            'account_id': 'accountId',
            'balance_platform': 'balancePlatform',
            'sweep': 'sweep'
        }

        self._account_id = account_id
        self._balance_platform = balance_platform
        self._sweep = sweep

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SweepConfigurationNotificationData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SweepConfigurationNotificationData of this SweepConfigurationNotificationData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_id(self):
        """Gets the account_id of this SweepConfigurationNotificationData.

        The unique identifier of the balance account for which the sweep was configured.

        :return: The account_id of this SweepConfigurationNotificationData.
        :rtype: str
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id):
        """Sets the account_id of this SweepConfigurationNotificationData.

        The unique identifier of the balance account for which the sweep was configured.

        :param account_id: The account_id of this SweepConfigurationNotificationData.
        :type account_id: str
        """

        self._account_id = account_id

    @property
    def balance_platform(self):
        """Gets the balance_platform of this SweepConfigurationNotificationData.

        The unique identifier of the balance platform.

        :return: The balance_platform of this SweepConfigurationNotificationData.
        :rtype: str
        """
        return self._balance_platform

    @balance_platform.setter
    def balance_platform(self, balance_platform):
        """Sets the balance_platform of this SweepConfigurationNotificationData.

        The unique identifier of the balance platform.

        :param balance_platform: The balance_platform of this SweepConfigurationNotificationData.
        :type balance_platform: str
        """

        self._balance_platform = balance_platform

    @property
    def sweep(self):
        """Gets the sweep of this SweepConfigurationNotificationData.

        Contains information about the sweep resource that triggered the event.

        :return: The sweep of this SweepConfigurationNotificationData.
        :rtype: SweepConfigurationV2
        """
        return self._sweep

    @sweep.setter
    def sweep(self, sweep):
        """Sets the sweep of this SweepConfigurationNotificationData.

        Contains information about the sweep resource that triggered the event.

        :param sweep: The sweep of this SweepConfigurationNotificationData.
        :type sweep: SweepConfigurationV2
        """

        self._sweep = sweep
