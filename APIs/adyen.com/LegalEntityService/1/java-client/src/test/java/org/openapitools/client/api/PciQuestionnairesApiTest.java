/*
 * Legal Entity Management API
 * The Legal Entity Management API enables you to manage legal entities that contain information required for verification.  ## Authentication Your Adyen contact will provide your API credential and an API key. To connect to the API, add an `X-API-Key` header with the API key as the value. For example:  ``` curl -H \"X-API-Key: YOUR_API_KEY\" \\ -H \"Content-Type: application/json\" \\ ... ``` Alternatively, you can use the username and password of your API credential to connect to the API using basic authentication. For example:  ``` curl -U \"ws_123456@Scope.Company_YOUR_COMPANY_ACCOUNT\":\"YourWsPassword\" \\ -H \"Content-Type: application/json\" \\ ... ``` ## Versioning The Legal Entity Management API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://kyc-test.adyen.com/lem/v1/legalEntities ``` >If you are using hosted onboarding and just beginning your integration, use v3 for your API requests. Otherwise, use v2.  ## Going live When going live, your Adyen contact will provide your API credential for the live environment. You can then use the API key or the username and password to send requests to `https://kyc-live.adyen.com/lem/v1`.  
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.GeneratePciDescriptionRequest;
import org.openapitools.client.model.GeneratePciDescriptionResponse;
import org.openapitools.client.model.GetPciQuestionnaireInfosResponse;
import org.openapitools.client.model.GetPciQuestionnaireResponse;
import org.openapitools.client.model.PciSigningRequest;
import org.openapitools.client.model.PciSigningResponse;
import org.openapitools.client.model.ServiceError;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PciQuestionnairesApi
 */
@Disabled
public class PciQuestionnairesApiTest {

    private final PciQuestionnairesApi api = new PciQuestionnairesApi();

    /**
     * Get PCI questionnaire details
     *
     * Get a list of signed PCI questionnaires.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getLegalEntitiesIdPciQuestionnairesTest() throws ApiException {
        String id = null;
        GetPciQuestionnaireInfosResponse response = api.getLegalEntitiesIdPciQuestionnaires(id);
        // TODO: test validations
    }

    /**
     * Get PCI questionnaire
     *
     * Returns the signed PCI questionnaire.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getLegalEntitiesIdPciQuestionnairesPciidTest() throws ApiException {
        String id = null;
        String pciid = null;
        GetPciQuestionnaireResponse response = api.getLegalEntitiesIdPciQuestionnairesPciid(id, pciid);
        // TODO: test validations
    }

    /**
     * Generate PCI questionnaire
     *
     * Generates the required PCI questionnaires based on the user&#39;s [salesChannel](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/businessLines__reqParam_salesChannels).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postLegalEntitiesIdPciQuestionnairesGeneratePciTemplatesTest() throws ApiException {
        String id = null;
        GeneratePciDescriptionRequest generatePciDescriptionRequest = null;
        GeneratePciDescriptionResponse response = api.postLegalEntitiesIdPciQuestionnairesGeneratePciTemplates(id, generatePciDescriptionRequest);
        // TODO: test validations
    }

    /**
     * Sign PCI questionnaire
     *
     * Signs the required PCI questionnaire.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postLegalEntitiesIdPciQuestionnairesSignPciTemplatesTest() throws ApiException {
        String id = null;
        PciSigningRequest pciSigningRequest = null;
        PciSigningResponse response = api.postLegalEntitiesIdPciQuestionnairesSignPciTemplates(id, pciSigningRequest);
        // TODO: test validations
    }

}
