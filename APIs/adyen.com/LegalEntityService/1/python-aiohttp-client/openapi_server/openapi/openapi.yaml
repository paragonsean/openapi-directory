openapi: 3.1.0
info:
  contact:
    name: Adyen Developer Experience team
    url: https://github.com/Adyen/adyen-openapi
    x-twitter: Adyen
  description: "The Legal Entity Management API enables you to manage legal entities\
    \ that contain information required for verification. \n## Authentication\nYour\
    \ Adyen contact will provide your API credential and an API key. To connect to\
    \ the API, add an `X-API-Key` header with the API key as the value. For example:\n\
    \n```\ncurl\n-H \"X-API-Key: YOUR_API_KEY\" \\\n-H \"Content-Type: application/json\"\
    \ \\\n...\n```\nAlternatively, you can use the username and password of your API\
    \ credential to connect to the API using basic authentication. For example:\n\n\
    ```\ncurl\n-U \"ws_123456@Scope.Company_YOUR_COMPANY_ACCOUNT\":\"YourWsPassword\"\
    \ \\\n-H \"Content-Type: application/json\" \\\n...\n```\n## Versioning\nThe Legal\
    \ Entity Management API supports [versioning](https://docs.adyen.com/development-resources/versioning)\
    \ using a version suffix in the endpoint URL. This suffix has the following format:\
    \ \"vXX\", where XX is the version number.\n\nFor example:\n```\nhttps://kyc-test.adyen.com/lem/v1/legalEntities\n\
    ```\n>If you are using hosted onboarding and just beginning your integration,\
    \ use v3 for your API requests. Otherwise, use v2.\n\n## Going live\nWhen going\
    \ live, your Adyen contact will provide your API credential for the live environment.\
    \ You can then use the API key or the username and password to send requests to\
    \ `https://kyc-live.adyen.com/lem/v1`.\n\n"
  termsOfService: https://www.adyen.com/legal/terms-and-conditions
  title: Legal Entity Management API
  version: "1"
  x-apisguru-categories:
  - payment
  x-logo:
    url: https://twitter.com/Adyen/profile_image?size=original
  x-origin:
  - format: openapi
    url: https://raw.githubusercontent.com/Adyen/adyen-openapi/main/json/LegalEntityService-v1.json
    version: "3.1"
  x-preferred: false
  x-providerName: adyen.com
  x-publicVersion: true
  x-serviceName: LegalEntityService
servers:
- url: https://kyc-test.adyen.com/lem/v1
tags:
- name: Legal entities
- name: Transfer instruments
- name: Business lines
- name: Documents
- name: Terms of Service
- name: Hosted Onboarding
- name: PCI questionnaires
paths:
  /businessLines:
    post:
      description: "Creates a business line. \n\nThis resource contains information\
        \ about your user's line of business, including their industry and their source\
        \ of funds. Adyen uses this information to verify your users as required by\
        \ payment industry regulations. Adyen informs you of the verification results\
        \ through webhooks or API responses.\n\n>If you are using hosted onboarding\
        \ and just beginning your integration, use v3 for your API requests. Otherwise,\
        \ use v2.\n\n"
      operationId: post_business_lines
      requestBody:
        content:
          application/json:
            examples:
              createBusinessLines-businessAccounts:
                $ref: '#/components/examples/post-businessLines-createBusinessLines-businessAccounts'
              createBusinessLines-receive:
                $ref: '#/components/examples/post-businessLines-createBusinessLines-receive'
            schema:
              $ref: '#/components/schemas/BusinessLineInfo'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              examples:
                createBusinessLines-businessAccounts:
                  $ref: '#/components/examples/post-businessLines-createBusinessLines-businessAccounts-200'
                createBusinessLines-receive:
                  $ref: '#/components/examples/post-businessLines-createBusinessLines-receive-200'
              schema:
                $ref: '#/components/schemas/BusinessLine'
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      summary: Create a business line
      tags:
      - Business lines
      x-addedInVersion: "1"
      x-methodName: createBusinessLine
      x-sortIndex: 12
      x-openapi-router-controller: openapi_server.controllers.business_lines_controller
      x-codegen-request-body-name: body
  /businessLines/{id}:
    delete:
      description: |-
        Deletes a business line.

         >If you delete a business line linked to a [payment method](https://docs.adyen.com/development-resources/paymentmethodvariant#management-api), it can affect your merchant account's ability to use the [payment method](https://docs.adyen.com/api-explorer/Management/latest/post/merchants/_merchantId_/paymentMethodSettings). The business line is removed from all linked merchant accounts.
      operationId: delete_business_lines_id
      parameters:
      - description: The unique identifier of the business line to be deleted.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: 'No Content - look at the actual response code for the status
            of the request. '
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      summary: Delete a business line
      tags:
      - Business lines
      x-addedInVersion: "1"
      x-methodName: deleteBusinessLine
      x-sortIndex: 14
      x-openapi-router-controller: openapi_server.controllers.business_lines_controller
    get:
      description: Returns the detail of a business line.
      operationId: get_business_lines_id
      parameters:
      - description: The unique identifier of the business line.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  $ref: '#/components/examples/get-businessLines-id-success-200'
              schema:
                $ref: '#/components/schemas/BusinessLine'
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      summary: Get a business line
      tags:
      - Business lines
      x-addedInVersion: "1"
      x-methodName: getBusinessLine
      x-sortIndex: 13
      x-openapi-router-controller: openapi_server.controllers.business_lines_controller
  /documents:
    post:
      description: |-
        Uploads a document for verification checks.

         Adyen uses the information from the [legal entity](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/legalEntities) to run automated verification checks. If these checks fail, you will be notified to provide additional documents.

         You should only upload documents when Adyen requests additional information for the legal entity.

         >You can upload a maximum of 15 pages for photo IDs.
      operationId: post_documents
      parameters:
      - description: Use a suberror code as your requested verification code. You
          can include one code at a time in your request header. Requested verification
          codes can only be used in your test environment.
        example: 13008
        explode: false
        in: header
        name: x-requested-verification-code
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              uploadDocument:
                $ref: '#/components/examples/post-documents-uploadDocument'
            schema:
              $ref: '#/components/schemas/Document'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              examples:
                uploadDocument:
                  $ref: '#/components/examples/post-documents-uploadDocument-200'
              schema:
                $ref: '#/components/schemas/Document'
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      summary: Upload a document for verification checks
      tags:
      - Documents
      x-addedInVersion: "1"
      x-methodName: uploadDocumentForVerificationChecks
      x-sortIndex: 4
      x-openapi-router-controller: openapi_server.controllers.documents_controller
      x-codegen-request-body-name: body
  /documents/{id}:
    delete:
      description: Deletes a document.
      operationId: delete_documents_id
      parameters:
      - description: The unique identifier of the document to be deleted.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: 'No Content - look at the actual response code for the status
            of the request. '
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      summary: Delete a document
      tags:
      - Documents
      x-addedInVersion: "1"
      x-methodName: deleteDocument
      x-sortIndex: 7
      x-openapi-router-controller: openapi_server.controllers.documents_controller
    get:
      description: Returns a document.
      operationId: get_documents_id
      parameters:
      - description: The unique identifier of the document.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Do not load document content while fetching the document.
        explode: true
        in: query
        name: skipContent
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  $ref: '#/components/examples/get-documents-id-success-200'
              schema:
                $ref: '#/components/schemas/Document'
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      summary: Get a document
      tags:
      - Documents
      x-addedInVersion: "1"
      x-methodName: getDocument
      x-sortIndex: 5
      x-openapi-router-controller: openapi_server.controllers.documents_controller
    patch:
      description: |-
        Updates a document.

         >You can upload a maximum of 15 pages for photo IDs.
      operationId: patch_documents_id
      parameters:
      - description: The unique identifier of the document to be updated.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Use the requested verification code 0_0001 to resolve any suberrors
          associated with the document. Requested verification codes can only be used
          in your test environment.
        example: 1
        explode: false
        in: header
        name: x-requested-verification-code
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              updateDocument:
                $ref: '#/components/examples/patch-documents-id-updateDocument'
            schema:
              $ref: '#/components/schemas/Document'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              examples:
                updateDocument:
                  $ref: '#/components/examples/patch-documents-id-updateDocument-200'
              schema:
                $ref: '#/components/schemas/Document'
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      summary: Update a document
      tags:
      - Documents
      x-addedInVersion: "1"
      x-methodName: updateDocument
      x-sortIndex: 6
      x-openapi-router-controller: openapi_server.controllers.documents_controller
      x-codegen-request-body-name: body
  /legalEntities:
    post:
      description: "Creates a legal entity. \n\nThis resource contains information\
        \ about the user that will be onboarded in your platform. Adyen uses this\
        \ information to perform verification checks as required by payment industry\
        \ regulations. Adyen informs you of the verification results through webhooks\
        \ or API responses. \n\n>If you are using hosted onboarding and just beginning\
        \ your integration, use v3 for your API requests. Otherwise, use v2.\n\n"
      operationId: post_legal_entities
      parameters:
      - description: Use a suberror code as your requested verification code. You
          can include one code at a time in your request header. Requested verification
          codes can only be used in your test environment.
        example: 13004
        explode: false
        in: header
        name: x-requested-verification-code
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              createLegalEntityIndividualNL:
                $ref: '#/components/examples/post-legalEntities-createLegalEntityIndividualNL'
              createLegalEntityIndividualUS:
                $ref: '#/components/examples/post-legalEntities-createLegalEntityIndividualUS'
              createLegalEntityOrganizationNL:
                $ref: '#/components/examples/post-legalEntities-createLegalEntityOrganizationNL'
              createLegalEntityOrganizationUS:
                $ref: '#/components/examples/post-legalEntities-createLegalEntityOrganizationUS'
            schema:
              $ref: '#/components/schemas/LegalEntityInfoRequiredType'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              examples:
                createLegalEntityIndividualNL:
                  $ref: '#/components/examples/post-legalEntities-createLegalEntityIndividualNL-200'
                createLegalEntityIndividualUS:
                  $ref: '#/components/examples/post-legalEntities-createLegalEntityIndividualUS-200'
                createLegalEntityOrganizationNL:
                  $ref: '#/components/examples/post-legalEntities-createLegalEntityOrganizationNL-200'
                createLegalEntityOrganizationUS:
                  $ref: '#/components/examples/post-legalEntities-createLegalEntityOrganizationUS-200'
              schema:
                $ref: '#/components/schemas/LegalEntity'
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      summary: Create a legal entity
      tags:
      - Legal entities
      x-addedInVersion: "1"
      x-methodName: createLegalEntity
      x-sortIndex: 1
      x-openapi-router-controller: openapi_server.controllers.legal_entities_controller
      x-codegen-request-body-name: body
  /legalEntities/{id}:
    get:
      description: Returns a legal entity.
      operationId: get_legal_entities_id
      parameters:
      - description: The unique identifier of the legal entity.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  $ref: '#/components/examples/get-legalEntities-id-success-200'
              schema:
                $ref: '#/components/schemas/LegalEntity'
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      summary: Get a legal entity
      tags:
      - Legal entities
      x-addedInVersion: "1"
      x-methodName: getLegalEntity
      x-sortIndex: 2
      x-openapi-router-controller: openapi_server.controllers.legal_entities_controller
    patch:
      description: |-
        Updates a legal entity.

         >To change the legal entity type, include only the new `type` in your request. To update the `entityAssociations` array, you need to replace the entire array. For example, if the array has 3 entries and you want to remove 1 entry, you need to PATCH the resource with the remaining 2 entries.
      operationId: patch_legal_entities_id
      parameters:
      - description: The unique identifier of the legal entity.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Use the requested verification code 0_0001 to resolve any suberrors
          associated with the legal entity. Requested verification codes can only
          be used in your test environment.
        example: 1
        explode: false
        in: header
        name: x-requested-verification-code
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              changeLegalEntityType:
                $ref: '#/components/examples/patch-legalEntities-id-changeLegalEntityType'
              updateLegalEntityOrganization:
                $ref: '#/components/examples/patch-legalEntities-id-updateLegalEntityOrganization'
            schema:
              $ref: '#/components/schemas/LegalEntityInfo'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              examples:
                changeLegalEntityType:
                  $ref: '#/components/examples/patch-legalEntities-id-changeLegalEntityType-200'
                updateLegalEntityOrganization:
                  $ref: '#/components/examples/patch-legalEntities-id-updateLegalEntityOrganization-200'
              schema:
                $ref: '#/components/schemas/LegalEntity'
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      summary: Update a legal entity
      tags:
      - Legal entities
      x-addedInVersion: "1"
      x-methodName: updateLegalEntity
      x-sortIndex: 3
      x-openapi-router-controller: openapi_server.controllers.legal_entities_controller
      x-codegen-request-body-name: body
  /legalEntities/{id}/businessLines:
    get:
      description: Returns the business lines owned by a legal entity.
      operationId: get_legal_entities_id_business_lines
      parameters:
      - description: The unique identifier of the legal entity.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  $ref: '#/components/examples/get-legalEntities-id-businessLines-success-200'
              schema:
                $ref: '#/components/schemas/BusinessLines'
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      summary: Get all business lines under a legal entity
      tags:
      - Legal entities
      x-addedInVersion: "1"
      x-methodName: getAllBusinessLinesUnderLegalEntity
      x-sortIndex: 4
      x-openapi-router-controller: openapi_server.controllers.legal_entities_controller
  /legalEntities/{id}/onboardingLinks:
    post:
      description: |+
        Returns a link to an Adyen-hosted onboarding page where you need to redirect your user.

        >If you are using hosted onboarding and just beginning your integration, use v3 for your API requests. Otherwise, use v2.

      operationId: post_legal_entities_id_onboarding_links
      parameters:
      - description: The unique identifier of the legal entity
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              createOnboardingLink:
                $ref: '#/components/examples/post-legalEntities-id-onboardingLinks-createOnboardingLink'
            schema:
              $ref: '#/components/schemas/OnboardingLinkInfo'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              examples:
                createOnboardingLink:
                  $ref: '#/components/examples/post-legalEntities-id-onboardingLinks-createOnboardingLink-200'
              schema:
                $ref: '#/components/schemas/OnboardingLink'
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      summary: Get a link to an Adyen-hosted onboarding page
      tags:
      - Hosted Onboarding
      x-addedInVersion: "1"
      x-methodName: getLinkToAdyenhostedOnboardingPage
      x-sortIndex: 1
      x-openapi-router-controller: openapi_server.controllers.hosted_onboarding_controller
      x-codegen-request-body-name: body
  /legalEntities/{id}/pciQuestionnaires:
    get:
      description: Get a list of signed PCI questionnaires.
      operationId: get_legal_entities_id_pci_questionnaires
      parameters:
      - description: The unique identifier of the legal entity to get PCI questionnaire
          information.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  $ref: '#/components/examples/get-legalEntities-id-pciQuestionnaires-success-200'
              schema:
                $ref: '#/components/schemas/GetPciQuestionnaireInfosResponse'
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      summary: Get PCI questionnaire details
      tags:
      - PCI questionnaires
      x-addedInVersion: "1"
      x-methodName: getPciQuestionnaireDetails
      x-sortIndex: 3
      x-openapi-router-controller: openapi_server.controllers.pci_questionnaires_controller
  /legalEntities/{id}/pciQuestionnaires/generatePciTemplates:
    post:
      description: "Generates the required PCI questionnaires based on the user's\
        \ [salesChannel](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/businessLines__reqParam_salesChannels)."
      operationId: post_legal_entities_id_pci_questionnaires_generate_pci_templates
      parameters:
      - description: The unique identifier of the legal entity to get PCI questionnaire
          information.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              createPciQuestionnaire:
                $ref: '#/components/examples/post-legalEntities-id-pciQuestionnaires-generatePciTemplates-createPciQuestionnaire'
            schema:
              $ref: '#/components/schemas/GeneratePciDescriptionRequest'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              examples:
                createPciQuestionnaire:
                  $ref: '#/components/examples/post-legalEntities-id-pciQuestionnaires-generatePciTemplates-createPciQuestionnaire-200'
              schema:
                $ref: '#/components/schemas/GeneratePciDescriptionResponse'
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      summary: Generate PCI questionnaire
      tags:
      - PCI questionnaires
      x-addedInVersion: "1"
      x-methodName: generatePciQuestionnaire
      x-sortIndex: 1
      x-openapi-router-controller: openapi_server.controllers.pci_questionnaires_controller
      x-codegen-request-body-name: body
  /legalEntities/{id}/pciQuestionnaires/signPciTemplates:
    post:
      description: Signs the required PCI questionnaire.
      operationId: post_legal_entities_id_pci_questionnaires_sign_pci_templates
      parameters:
      - description: The legal entity ID of the user that has a contractual relationship
          with your platform.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              signPciQuestionnaire:
                $ref: '#/components/examples/post-legalEntities-id-pciQuestionnaires-signPciTemplates-signPciQuestionnaire'
            schema:
              $ref: '#/components/schemas/PciSigningRequest'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              examples:
                signPciQuestionnaire:
                  $ref: '#/components/examples/post-legalEntities-id-pciQuestionnaires-signPciTemplates-signPciQuestionnaire-200'
              schema:
                $ref: '#/components/schemas/PciSigningResponse'
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      summary: Sign PCI questionnaire
      tags:
      - PCI questionnaires
      x-addedInVersion: "1"
      x-methodName: signPciQuestionnaire
      x-sortIndex: 2
      x-openapi-router-controller: openapi_server.controllers.pci_questionnaires_controller
      x-codegen-request-body-name: body
  /legalEntities/{id}/pciQuestionnaires/{pciid}:
    get:
      description: Returns the signed PCI questionnaire.
      operationId: get_legal_entities_id_pci_questionnaires_pciid
      parameters:
      - description: The legal entity ID of the individual who signed the PCI questionnaire.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The unique identifier of the signed PCI questionnaire.
        explode: false
        in: path
        name: pciid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  $ref: '#/components/examples/get-legalEntities-id-pciQuestionnaires-pciid-success-200'
              schema:
                $ref: '#/components/schemas/GetPciQuestionnaireResponse'
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      summary: Get PCI questionnaire
      tags:
      - PCI questionnaires
      x-addedInVersion: "1"
      x-methodName: getPciQuestionnaire
      x-sortIndex: 4
      x-openapi-router-controller: openapi_server.controllers.pci_questionnaires_controller
  /legalEntities/{id}/termsOfService:
    post:
      description: Returns the Terms of Service document for a legal entity.
      operationId: post_legal_entities_id_terms_of_service
      parameters:
      - description: "The unique identifier of the legal entity. For sole proprietorships,\
          \ this is the individual legal entity ID of the owner."
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              createTermsofService:
                $ref: '#/components/examples/post-legalEntities-id-termsOfService-createTermsofService'
            schema:
              $ref: '#/components/schemas/GetTermsOfServiceDocumentRequest'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              examples:
                createTermsofService:
                  $ref: '#/components/examples/post-legalEntities-id-termsOfService-createTermsofService-200'
              schema:
                $ref: '#/components/schemas/GetTermsOfServiceDocumentResponse'
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      summary: Get Terms of Service document
      tags:
      - Terms of Service
      x-addedInVersion: "1"
      x-methodName: getTermsOfServiceDocument
      x-sortIndex: 1
      x-openapi-router-controller: openapi_server.controllers.terms_of_service_controller
      x-codegen-request-body-name: body
  /legalEntities/{id}/termsOfService/{termsofservicedocumentid}:
    patch:
      description: Accepts Terms of Service.
      operationId: patch_legal_entities_id_terms_of_service_termsofservicedocumentid
      parameters:
      - description: "The unique identifier of the legal entity. For sole proprietorships,\
          \ this is the individual legal entity ID of the owner."
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The unique identifier of the Terms of Service document.
        explode: false
        in: path
        name: termsofservicedocumentid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              updateTermsofService:
                $ref: '#/components/examples/patch-legalEntities-id-termsOfService-termsofservicedocumentid-updateTermsofService'
            schema:
              $ref: '#/components/schemas/AcceptTermsOfServiceRequest'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              examples:
                updateTermsofService:
                  $ref: '#/components/examples/patch-legalEntities-id-termsOfService-termsofservicedocumentid-updateTermsofService-200'
              schema:
                $ref: '#/components/schemas/AcceptTermsOfServiceResponse'
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      summary: Accept Terms of Service
      tags:
      - Terms of Service
      x-addedInVersion: "1"
      x-methodName: acceptTermsOfService
      x-sortIndex: 2
      x-openapi-router-controller: openapi_server.controllers.terms_of_service_controller
      x-codegen-request-body-name: body
  /legalEntities/{id}/termsOfServiceAcceptanceInfos:
    get:
      description: Returns Terms of Service information for a legal entity.
      operationId: get_legal_entities_id_terms_of_service_acceptance_infos
      parameters:
      - description: "The unique identifier of the legal entity. For sole proprietorships,\
          \ this is the individual legal entity ID of the owner."
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  $ref: '#/components/examples/get-legalEntities-id-termsOfServiceAcceptanceInfos-success-200'
              schema:
                $ref: '#/components/schemas/GetTermsOfServiceAcceptanceInfosResponse'
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      summary: Get Terms of Service information for a legal entity
      tags:
      - Terms of Service
      x-addedInVersion: "1"
      x-methodName: getTermsOfServiceInformationForLegalEntity
      x-sortIndex: 3
      x-openapi-router-controller: openapi_server.controllers.terms_of_service_controller
  /legalEntities/{id}/termsOfServiceStatus:
    get:
      description: Returns the required types of Terms of Service that need to be
        accepted by a legal entity.
      operationId: get_legal_entities_id_terms_of_service_status
      parameters:
      - description: "The unique identifier of the legal entity. For sole proprietorships,\
          \ this is the individual legal entity ID of the owner."
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  $ref: '#/components/examples/get-legalEntities-id-termsOfServiceStatus-success-200'
              schema:
                $ref: '#/components/schemas/CalculateTermsOfServiceStatusResponse'
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      summary: Get Terms of Service status
      tags:
      - Terms of Service
      x-addedInVersion: "1"
      x-methodName: getTermsOfServiceStatus
      x-sortIndex: 4
      x-openapi-router-controller: openapi_server.controllers.terms_of_service_controller
  /themes:
    get:
      description: |+
        Returns a list of hosted onboarding page themes.

        >If you are using hosted onboarding and just beginning your integration, use v3 for your API requests. Otherwise, use v2.

      operationId: get_themes
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  $ref: '#/components/examples/get-themes-success-200'
              schema:
                $ref: '#/components/schemas/OnboardingThemes'
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      summary: Get a list of hosted onboarding page themes
      tags:
      - Hosted Onboarding
      x-addedInVersion: "1"
      x-methodName: listHostedOnboardingPageThemes
      x-sortIndex: 2
      x-openapi-router-controller: openapi_server.controllers.hosted_onboarding_controller
  /themes/{id}:
    get:
      description: |+
        Returns the details of the theme identified in the path.>If you are using hosted onboarding and just beginning your integration, use v3 for your API requests. Otherwise, use v2.

      operationId: get_themes_id
      parameters:
      - description: The unique identifier of the theme
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  $ref: '#/components/examples/get-themes-id-success-200'
              schema:
                $ref: '#/components/schemas/OnboardingTheme'
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      summary: Get an onboarding link theme
      tags:
      - Hosted Onboarding
      x-addedInVersion: "1"
      x-methodName: getOnboardingLinkTheme
      x-sortIndex: 4
      x-openapi-router-controller: openapi_server.controllers.hosted_onboarding_controller
  /transferInstruments:
    post:
      description: "Creates a transfer instrument. \n\nA transfer instrument is a\
        \ bank account that a legal entity owns. Adyen performs verification checks\
        \ on the transfer instrument as required by payment industry regulations.\
        \ We inform you of the verification results through webhooks or API responses.\n\
        \nWhen the transfer instrument passes the verification checks, you can start\
        \ sending funds from the balance platform to the transfer instrument (such\
        \ as payouts)."
      operationId: post_transfer_instruments
      parameters:
      - description: Use a suberror code as your requested verification code. You
          can include one code at a time in your request header. Requested verification
          codes can only be used in your test environment.
        example: 17002
        explode: false
        in: header
        name: x-requested-verification-code
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              createTransferInstrumentEUR:
                $ref: '#/components/examples/post-transferInstruments-createTransferInstrumentEUR'
              createTransferInstrumentUSD:
                $ref: '#/components/examples/post-transferInstruments-createTransferInstrumentUSD'
            schema:
              $ref: '#/components/schemas/TransferInstrumentInfo'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              examples:
                createTransferInstrumentEUR:
                  $ref: '#/components/examples/post-transferInstruments-createTransferInstrumentEUR-200'
                createTransferInstrumentUSD:
                  $ref: '#/components/examples/post-transferInstruments-createTransferInstrumentUSD-200'
              schema:
                $ref: '#/components/schemas/TransferInstrument'
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      summary: Create a transfer instrument
      tags:
      - Transfer instruments
      x-addedInVersion: "1"
      x-methodName: createTransferInstrument
      x-sortIndex: 8
      x-openapi-router-controller: openapi_server.controllers.transfer_instruments_controller
      x-codegen-request-body-name: body
  /transferInstruments/{id}:
    delete:
      description: Deletes a transfer instrument.
      operationId: delete_transfer_instruments_id
      parameters:
      - description: The unique identifier of the transfer instrument to be deleted.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: 'No Content - look at the actual response code for the status
            of the request. '
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      summary: Delete a transfer instrument
      tags:
      - Transfer instruments
      x-addedInVersion: "1"
      x-methodName: deleteTransferInstrument
      x-sortIndex: 11
      x-openapi-router-controller: openapi_server.controllers.transfer_instruments_controller
    get:
      description: Returns the details of a transfer instrument.
      operationId: get_transfer_instruments_id
      parameters:
      - description: The unique identifier of the transfer instrument.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  $ref: '#/components/examples/get-transferInstruments-id-success-200'
              schema:
                $ref: '#/components/schemas/TransferInstrument'
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      summary: Get a transfer instrument
      tags:
      - Transfer instruments
      x-addedInVersion: "1"
      x-methodName: getTransferInstrument
      x-sortIndex: 9
      x-openapi-router-controller: openapi_server.controllers.transfer_instruments_controller
    patch:
      description: Updates a transfer instrument.
      operationId: patch_transfer_instruments_id
      parameters:
      - description: The unique identifier of the transfer instrument.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Use the requested verification code 0_0001 to resolve any suberrors
          associated with the transfer instrument. Requested verification codes can
          only be used in your test environment.
        example: 1
        explode: false
        in: header
        name: x-requested-verification-code
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              updateTransferInstrument:
                $ref: '#/components/examples/patch-transferInstruments-id-updateTransferInstrument'
            schema:
              $ref: '#/components/schemas/TransferInstrumentInfo'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              examples:
                updateTransferInstrument:
                  $ref: '#/components/examples/patch-transferInstruments-id-updateTransferInstrument-200'
              schema:
                $ref: '#/components/schemas/TransferInstrument'
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      summary: Update a transfer instrument
      tags:
      - Transfer instruments
      x-addedInVersion: "1"
      x-methodName: updateTransferInstrument
      x-sortIndex: 10
      x-openapi-router-controller: openapi_server.controllers.transfer_instruments_controller
      x-codegen-request-body-name: body
components:
  examples:
    get-businessLines-id-success-200:
      description: Example response when getting the business line details
      summary: Details of a business line
      value:
        capability: issueBankAccount
        id: SE322KH223222F5GV2SQ924F6
        industryCode: "4531"
        legalEntityId: LE00000000000000000000001
        sourceOfFunds:
          adyenProcessedFunds: false
          description: Funds from my flower shop business
          type: business
        webData:
        - webAddress: https://www.adyen.com
    get-documents-id-success-200:
      description: Example response when getting document details
      summary: Details of a document
      value:
        attachments:
        - content: JVBERi0xLjQKJcOkw7zDtsOfCjIgMCBv+f/ub0j6JPRX+E3EmC==
        description: Registration doc for Example Company
        fileName: Registration doc for Example Company
        id: SE322JV223222F5GV2N9L8GDK
        owner:
          id: LE00000000000000000000001
          type: legalEntity
        type: registrationDocument
    get-legalEntities-id-businessLines-success-200:
      description: Example response when getting the list of business lines for a
        legal entity
      summary: List of business lines for a legal entity
      value:
        businessLines:
        - capability: issueBankAccount
          id: SE322JV223222F5GVGMLNB83F
          industryCode: "4531"
          legalEntityId: LE00000000000000000000001
          sourceOfFunds:
            adyenProcessedFunds: false
            description: Funds from my flower shop business
            type: business
          webData:
          - webAddress: https://www.adyen.com
        - capability: receivePayments
          id: SE322JV223222F5GVGPNRB9GJ
          industryCode: 339E
          legalEntityId: LE00000000000000000000001
          salesChannels:
          - eCommerce
          - ecomMoto
          webData:
          - webAddress: https://yoururl.com
    get-legalEntities-id-pciQuestionnaires-pciid-success-200:
      description: Example response when getting the details of a PCI questionnaire
      summary: Details of a PCI questionnaire
      value:
        content: JVBERi0xLjQKJcOkw7zDtsOfCjIgMCBv+f/ub0j6JPRX+E3EmC==
        createdAt: 2023-03-02T17:54:19.538365Z
        id: PCID422GZ22322565HHMH48CW63CPH
        validUntil: 2024-03-01T17:54:19.538365Z
    get-legalEntities-id-pciQuestionnaires-success-200:
      description: Example response when getting the list of PCI questionnaires
      summary: Details of PCI questionnaires signed by a user
      value:
        data:
        - createdAt: 2023-03-02T17:54:19.538365Z
          id: PCID422GZ22322565HHMH48CW63CPH
          validUntil: 2024-03-01T17:54:19.538365Z
        - createdAt: 2023-03-02T17:54:19.538365Z
          id: PCID422GZ22322565HHMH49CW75Z9H
          validUntil: 2024-03-01T17:54:19.538365Z
    get-legalEntities-id-success-200:
      description: Example response when getting the details of a legal entity
      summary: Details of a legal entity
      value:
        capabilities:
          receiveFromBalanceAccount:
            allowed: false
            requested: true
            verificationStatus: pending
          receiveFromPlatformPayments:
            allowed: false
            requested: true
            verificationStatus: pending
          receivePayments:
            allowed: false
            requested: true
            verificationStatus: pending
          sendToBalanceAccount:
            allowed: false
            requested: true
            verificationStatus: pending
          sendToTransferInstrument:
            allowed: false
            requested: true
            verificationStatus: pending
        id: LE00000000000000000000001
        individual:
          birthData:
            dateOfBirth: 1990-06-21
          email: s.hopper@example.com
          name:
            firstName: Simone
            lastName: Hopper
          residentialAddress:
            city: Amsterdam
            country: NL
            postalCode: 1011DJ
            street: Simon Carmiggeltstraat 6 - 50
            street2: "274"
        type: individual
    get-legalEntities-id-termsOfServiceAcceptanceInfos-success-200:
      description: Example response when getting Terms of Service information for
        a legal entity
      summary: Terms of Service information for a legal entity
      value:
        data:
        - acceptedBy: LE00000000000000000000002
          acceptedFor: LE00000000000000000000001
          createdAt: 2022-12-05T13:36:58.212253Z
          id: TOSA000AB00000000B2AAAB2BA0AA0
          type: adyenIssuing
    get-legalEntities-id-termsOfServiceStatus-success-200:
      description: Example response when getting the type of Terms of Service
      summary: Terms of Service status for a legal entity
      value:
        termsOfServiceTypes:
        - adyenIssuing
    get-themes-id-success-200:
      description: Example response when getting the details of a page theme
      summary: Details of a page theme
      value:
        createdAt: 2022-06-22T00:00:00+02:00
        description: Light colors theme
        id: ONBT422KH223222D5G82M968PB46HR
        properties:
          backgroundColor: '#FFFFFF'
          backgroundImage: ONBA422JV223222D5G82M96F6P2VTV
          faqPage: https://docs.adyen.com/hosted-onboarding-faqs
          logo: ONBA422JV223222D5FWC4TK25S3DQW
          pageLayout: withBackground
          pageTitle: Example onboarding light colors
          privacyStatementPage: https://www.adyen.com/legal/terms-and-conditions
          supportPage: https://www.adyen.com/contact
        updatedAt: 2022-08-25T00:00:00+02:00
    get-themes-success-200:
      description: Example response when getting the list of hosted onboarding themes
      summary: List of hosted onboarding themes for your balance platform
      value:
        themes:
        - createdAt: 2022-01-20T00:00:00+01:00
          description: Dark colors theme
          id: ONBT422JV223222D5FGJ77B9C52WNN
          properties:
            backgroundColor: '#000000'
            backgroundImage: ONBA422KH223222D5G8VG2TG9S5ZBH
            faqPage: https://docs.adyen.com/hosted-onboarding-faqs
            logo: ONBA422JV223222D5G8VG2T8JV39GV
            pageLayout: withBackground
            pageTitle: Example onboarding dark colors
            supportPage: https://www.adyen.com/contact
          updatedAt: 2022-08-25T00:00:00+02:00
        - createdAt: 2022-06-22T00:00:00+02:00
          description: Light colors theme
          id: ONBT422KH223222D5G82M968PB46HR
          properties:
            backgroundColor: '#FFFFFF'
            backgroundImage: ONBA422JV223222D5G82M96F6P2VTV
            faqPage: https://docs.adyen.com/hosted-onboarding-faqs
            logo: ONBA422JV223222D5FWC4TK25S3DQW
            pageLayout: withBackground
            pageTitle: Example onboarding light colors
            privacyStatementPage: https://www.adyen.com/legal/terms-and-conditions
            supportPage: https://www.adyen.com/contact
          updatedAt: 2022-08-25T00:00:00+02:00
    get-transferInstruments-id-success-200:
      description: Example response when getting the details of a transfer instrument
      summary: Details of a transfer instrument
      value:
        bankAccount:
          countryCode: NL
          currencyCode: EUR
          iban: NL62ABNA0000000123
        id: SE322JV223222F5GNXSR89TMW
        legalEntityId: LE00000000000000000000001
        type: bankAccount
    patch-documents-id-updateDocument:
      description: Example request for updating a document
      summary: Update a document
      value:
        description: Proof of industry doc for Example Company
        type: proofOfIndustry
    patch-documents-id-updateDocument-200:
      description: Example response when a document is updated
      summary: Document updated
      value:
        attachments:
        - content: JVBERi0xLjQKJcOkw7zDtsOfCjIgMCBv+f/ub0j6JPRX+E3EmC==
        description: Proof of industry for Example Company
        fileName: Proof of industry for Example Company
        id: SE322JV223222F5GV2N9L8GDK
        owner:
          id: LE00000000000000000000001
          type: legalEntity
        type: proofOfIndustry
    patch-legalEntities-id-changeLegalEntityType:
      description: Example request when changing the legal entity type
      summary: Change a legal entity from an organization to an individual
      value:
        type: individual
    patch-legalEntities-id-changeLegalEntityType-200:
      description: Example response when changing the legal entity type
      summary: Legal entity type changed
      value:
        id: LE00000000000000000000001
        individual:
          name:
            firstName: Explorer
            lastName: Company based in US
          residentialAddress:
            country: US
        type: individual
    patch-legalEntities-id-termsOfService-termsofservicedocumentid-updateTermsofService:
      description: Example request for accepting the Terms of Service document
      summary: Accept the Terms of Service document
      value:
        acceptedBy: LE00000000000000000000002
    patch-legalEntities-id-termsOfService-termsofservicedocumentid-updateTermsofService-200:
      description: Example response when accepting a Terms of Service document
      summary: Terms of Service document accepted
      value:
        acceptedBy: LE00000000000000000000002
        id: TOSA000AB00000000B2AAAB2BA0AA0
        language: en
        termsOfServiceDocumentId: abc123
        type: adyenIssuing
    patch-legalEntities-id-updateLegalEntityOrganization:
      description: Example request adding entity associations to a legal entity
      summary: Add entity associations to an organization
      value:
        entityAssociations:
        - jobTitle: CEO
          legalEntityId: LE00000000000000000000001
          type: uboThroughControl
    patch-legalEntities-id-updateLegalEntityOrganization-200:
      description: Example response for adding an entity association to an organization
      summary: Entity associations added
      value:
        entityAssociations:
        - associatorId: LE00000000000000000000002
          entityType: individual
          jobTitle: CEO
          legalEntityId: LE00000000000000000000001
          name: Simone Hopper
          type: uboThroughControl
        id: LE00000000000000000000002
        organization:
          description: FinTech
          doingBusinessAs: Adyen BV
          email: john.doe@adyen.com
          legalName: Adyen BV
          phone:
            countryCode: NL
            number: "646467363"
            type: mobile
          registeredAddress:
            city: AMS
            country: NL
            postalCode: 1234EE
            stateOrProvince: NH
            street: Simon Carmiggeltstraat 6 - 50
          registrationNumber: ""
          stockData:
            marketIdentifier: ADYN
            stockNumber: NL012345ABC4
            tickerSymbol: ADYN.M
          taxExempt: false
          type: listedPublicCompany
        type: organization
    patch-transferInstruments-id-updateTransferInstrument:
      description: Example request for updating a transfer instrument
      summary: Update a transfer instrument
      value:
        bankAccount:
          currencyCode: EUR
          iban: NL02ABNA0123456789
        legalEntityId: LE00000000000000000000001
        type: bankAccount
    patch-transferInstruments-id-updateTransferInstrument-200:
      description: Example response for updating a transfer instrument
      summary: Transfer instrument updated
      value:
        bankAccount:
          countryCode: NL
          currencyCode: EUR
          iban: NL02ABNA0123456789
        id: SE576BH223222F5GJVKHH6BDT
        legalEntityId: LE00000000000000000000001
        type: bankAccount
    post-businessLines-createBusinessLines-businessAccounts:
      description: Example request for creating a business line for a business account
      summary: Create a business line for a business account
      value:
        capability: issueBankAccount
        industryCode: "4531"
        legalEntityId: LE00000000000000000000001
        sourceOfFunds:
          adyenProcessedFunds: false
          description: Funds from my flower shop business
          type: business
        webData:
        - webAddress: https://www.adyen.com
    post-businessLines-createBusinessLines-businessAccounts-200:
      summary: Example response for creating a business line
      value:
        capability: issueBankAccount
        id: SE322KT223222D5FJ7TJN2986
        industryCode: "4531"
        legalEntityId: LE00000000000000000000001
        sourceOfFunds:
          adyenProcessedFunds: false
          description: Funds from my flower shop business
          type: business
        webData:
        - webAddress: https://www.adyen.com
    post-businessLines-createBusinessLines-receive:
      description: Example request for receiving payments
      summary: Create a business line for receiving payments
      value:
        capability: receivePayments
        industryCode: 339E
        legalEntityId: LE00000000000000000000001
        salesChannels:
        - eCommerce
        - ecomMoto
        webData:
        - webAddress: https://yoururl.com
    post-businessLines-createBusinessLines-receive-200:
      summary: Example response for creating a business line
      value:
        capability: receivePayments
        id: SE322KT223222D5FJ7TJN2986
        industryCode: 339E
        legalEntityId: LE00000000000000000000001
        salesChannels:
        - eCommerce
        - ecomMoto
        webData:
        - webAddress: https://yoururl.com
    post-documents-uploadDocument:
      description: Example request for uploading a document
      summary: Upload a document
      value:
        attachments:
        - content: JVBERi0xLjQKJcOkw7zDtsOfCjIgMCBv+f/ub0j6JPRX+E3EmC==
        description: Registration doc for Example Company
        owner:
          id: LE00000000000000000000001
          type: legalEntity
        type: registrationDocument
    post-documents-uploadDocument-200:
      description: Example response when a document is uploaded
      summary: Document uploaded
      value:
        attachments:
        - content: JVBERi0xLjQKJcOkw7zDtsOfCjIgMCBv+f/ub0j6JPRX+E3EmC==
        description: Registration doc for Example Company
        fileName: Registration doc for Example Company
        id: SE322JV223222F5GV2N9L8GDK
        owner:
          id: LE00000000000000000000001
          type: legalEntity
        type: registrationDocument
    post-legalEntities-createLegalEntityIndividualNL:
      description: Example request for creating a legal entity for an individual residing
        in the Netherlands
      summary: Create a legal entity for an individual residing in the Netherlands
      value:
        individual:
          birthData:
            dateOfBirth: 1990-06-21
          email: s.eller@example.com
          name:
            firstName: Shelly
            lastName: Eller
          residentialAddress:
            city: Amsterdam
            country: NL
            postalCode: 1011DJ
            street: Simon Carmiggeltstraat 6 - 50
        type: individual
    post-legalEntities-createLegalEntityIndividualNL-200:
      description: Example response for creating a legal entity for an individual
        residing in the Netherlands
      summary: Individual legal entity created
      value:
        id: LE00000000000000000000001
        individual:
          birthData:
            dateOfBirth: 1990-06-21
          email: s.eller@example.com
          name:
            firstName: Shelly
            lastName: Eller
          residentialAddress:
            city: Amsterdam
            country: NL
            postalCode: 1011DJ
            street: Simon Carmiggeltstraat 6 - 50
        type: individual
    post-legalEntities-createLegalEntityIndividualUS:
      description: Example request for creating a legal entity for an individual residing
        in the US
      summary: Create a legal entity for an individual residing in the US
      value:
        individual:
          birthData:
            dateOfBirth: 1990-06-21
          email: s.eller@example.com
          name:
            firstName: Shelly
            lastName: Eller
          phone:
            number: "+14153671502"
            type: mobile
          residentialAddress:
            city: New York
            country: US
            postalCode: "10003"
            stateOrProvince: NY
            street: 71 5th Avenue
            street2: 11th floor
        type: individual
    post-legalEntities-createLegalEntityIndividualUS-200:
      description: Example response for creating a legal entity for an individual
        residing in the US
      summary: Individual legal entity created
      value:
        id: LE00000000000000000000001
        individual:
          birthData:
            dateOfBirth: 1990-06-21
          email: s.eller@example.com
          name:
            firstName: Shelly
            lastName: Eller
          phone:
            number: "+14153671502"
            type: mobile
          residentialAddress:
            city: New York
            country: US
            postalCode: "10003"
            stateOrProvince: NY
            street: 71 5th Avenue
            street2: 11th floor
        type: individual
    post-legalEntities-createLegalEntityOrganizationNL:
      description: Example request for creating a legal entity for an organization
        operating in the Netherlands
      summary: Create a legal entity for a Dutch organization
      value:
        entityAssociations:
        - jobTitle: CEO
          legalEntityId: LE00000000000000000000001
          type: signatory
        organization:
          doingBusinessAs: API Company Trading
          email: organization@example.com
          legalName: Explorer Company based in NL
          registeredAddress:
            city: Amsterdam
            country: NL
            postalCode: 1011DJ
            street: Simon Carmiggeltstraat 6 - 50
          registrationNumber: "34179503"
          type: privateCompany
        type: organization
    post-legalEntities-createLegalEntityOrganizationNL-200:
      description: Example response for creating a legal entity for an organization
        operating in the Netherlands
      summary: Organization legal entity created
      value:
        entityAssociations:
        - associatorId: LE00000000000000000000002
          entityType: individual
          jobTitle: CEO
          legalEntityId: LE00000000000000000000001
          name: Simone Hopper
          type: signatory
        id: LE00000000000000000000002
        organization:
          doingBusinessAs: API Company Trading
          email: organization@example.com
          legalName: Explorer Company based in NL
          registeredAddress:
            city: Amsterdam
            country: NL
            postalCode: 1011DJ
            street: Simon Carmiggeltstraat 6 - 50
          registrationNumber: "34179503"
          type: privateCompany
        type: organization
    post-legalEntities-createLegalEntityOrganizationUS:
      description: Example request for creating a legal entity for an organization
        operating in the US
      summary: Create a legal entity for an organization in the US
      value:
        organization:
          legalName: Explorer Company based in US
          registeredAddress:
            city: New York
            country: US
            postalCode: "10003"
            stateOrProvince: NY
            street: 71 5th Avenue
            street2: 11th floor
          registrationNumber: "101002749"
          type: privateCompany
        type: organization
    post-legalEntities-createLegalEntityOrganizationUS-200:
      description: Example response for creating a legal entity for an organization
        operating in the US
      summary: Organization legal entity created
      value:
        id: LE00000000000000000000001
        organization:
          legalName: Explorer Company based in US
          registeredAddress:
            city: New York
            country: US
            postalCode: "10003"
            stateOrProvince: NY
            street: 71 5th Avenue
            street2: 11th floor
          registrationNumber: "101002749"
          taxExempt: false
          type: privateCompany
        type: organization
    post-legalEntities-id-onboardingLinks-createOnboardingLink:
      description: Example request for creating a hosted onboarding link
      summary: Create a hosted onboarding link
      value:
        locale: nl-NL
        redirectUrl: https://your.redirect-url.com/
        themeId: YOUR_THEME_ID
    post-legalEntities-id-onboardingLinks-createOnboardingLink-200:
      description: Example response for a hosted onboarding link
      summary: Hosted onboarding link created
      value:
        url: https://balanceplatform-test.adyen.com/balanceplatform/uo/form/xtl-...?signature=..&cd=..&redirectUrl=https%3A%2F%2Fyour.redirect-url.com%2F&expiry=1667226404807&locale=nl-NL
    post-legalEntities-id-pciQuestionnaires-generatePciTemplates-createPciQuestionnaire:
      description: Example request for generating PCI questionnaires in French
      summary: Generate PCI questionnaires
      value:
        language: fr
    post-legalEntities-id-pciQuestionnaires-generatePciTemplates-createPciQuestionnaire-200:
      description: Example response for getting PCI questionnaires
      summary: PCI questionnaires returned
      value:
        content: JVBERi0xLjQKJcOkw7zDtsOfCjIgMCBv+f/ub0j6JPRX+E3EmC==
        language: fr
        pciTemplateReferences:
        - PCIT-T7KC6VGL
        - PCIT-PKB6DKS4
    post-legalEntities-id-pciQuestionnaires-signPciTemplates-signPciQuestionnaire:
      description: Example request for signing PCI questionnaires
      summary: Sign PCI questionnaires
      value:
        pciTemplateReferences:
        - PCIT-T7KC6VGL
        - PCIT-PKB6DKS4
        signedBy: LE00000000000000000000002
    post-legalEntities-id-pciQuestionnaires-signPciTemplates-signPciQuestionnaire-200:
      description: Example response for signing PCI questionnaires
      summary: PCI questionnaires signed
      value:
        pciQuestionnaireIds:
        - PCID422GZ22322565HHMH48CW63CPH
        - PCID422GZ22322565HHMH49CW75Z9H
    post-legalEntities-id-termsOfService-createTermsofService:
      description: Example request for getting the Terms of Service document
      summary: Get the Terms of Service document
      value:
        language: en
        type: adyenIssuing
    post-legalEntities-id-termsOfService-createTermsofService-200:
      description: Example response for getting a Terms of Service document
      summary: Terms of Service document returned
      value:
        document: JVBERi0xLjQKJcOkw7zDtsOfCjIgMCBv+f/ub0j6JPRX+E3EmC==
        id: LE00000000000000000000001
        language: en
        termsOfServiceDocumentId: abc123
        type: adyenIssuing
    post-transferInstruments-createTransferInstrumentEUR:
      description: Example request for creating a transfer instrument for EUR
      summary: Add a EUR bank account
      value:
        bankAccount:
          countryCode: NL
          currencyCode: EUR
          iban: NL62ABNA0000000123
        legalEntityId: LE00000000000000000000001
        type: bankAccount
    post-transferInstruments-createTransferInstrumentEUR-200:
      description: Example response for adding a bank account as a transfer instrument
        of a legal entity
      summary: Bank account added
      value:
        bankAccount:
          countryCode: NL
          currencyCode: EUR
          iban: NL62ABNA0000000123
          trustedSource: false
        id: SE576BH223222F5GJVKHH6BDT
        legalEntityId: LE00000000000000000000001
        type: bankAccount
    post-transferInstruments-createTransferInstrumentUSD:
      description: Example request for creating a transfer instrument for USD
      summary: Add a USD bank account
      value:
        bankAccount:
          accountNumber: "0000000123"
          accountType: checking
          branchCode: "121202211"
          countryCode: US
          currencyCode: USD
        legalEntityId: LE00000000000000000000001
        type: bankAccount
    post-transferInstruments-createTransferInstrumentUSD-200:
      description: Example response for adding a bank account as a transfer instrument
        of a legal entity
      summary: Bank account added
      value:
        bankAccount:
          accountNumber: "0000000123"
          accountType: checking
          branchCode: "121202211"
          countryCode: US
          currencyCode: USD
          trustedSource: false
        id: SE322JV223222F5GJVKHH8DTC
        legalEntityId: LE00000000000000000000001
        type: bankAccount
  schemas:
    AcceptTermsOfServiceRequest:
      example:
        ipAddress: ipAddress
        acceptedBy: acceptedBy
      properties:
        acceptedBy:
          description: |-
            The legal entity ID of the user accepting the Terms of Service.

            For organizations, this must be the individual legal entity ID of an authorized signatory for the organization.

            For sole proprietorships, this must be the individual legal entity ID of the owner.
          title: acceptedBy
          type: string
        ipAddress:
          description: The IP address of the user accepting the Terms of Service.
          title: ipAddress
          type: string
      required:
      - acceptedBy
      title: AcceptTermsOfServiceRequest
    AcceptTermsOfServiceResponse:
      example:
        ipAddress: ipAddress
        termsOfServiceDocumentId: termsOfServiceDocumentId
        language: language
        acceptedBy: acceptedBy
        id: id
        type: adyenAccount
      properties:
        acceptedBy:
          description: The unique identifier of the user that accepted the Terms of
            Service.
          title: acceptedBy
          type: string
        id:
          description: The unique identifier of the Terms of Service acceptance.
          title: id
          type: string
        ipAddress:
          description: The IP address of the user that accepted the Terms of Service.
          title: ipAddress
          type: string
        language:
          description: "The language used for the Terms of Service document, specified\
            \ by the two-letter [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes)\
            \ language code. Possible value: **en** for English."
          title: language
          type: string
        termsOfServiceDocumentId:
          description: The unique identifier of the Terms of Service document.
          title: termsOfServiceDocumentId
          type: string
        type:
          description: |+
            The type of Terms of Service.

            Possible values:
            *  **adyenForPlatformsManage**
            *  **adyenIssuing**
            *  **adyenForPlatformsAdvanced**
            *  **adyenCapital**
            *  **adyenAccount**
            *  **adyenCard**
            *  **adyenFranchisee**
            *  **adyenPccr**

          enum:
          - adyenAccount
          - adyenCapital
          - adyenCard
          - adyenForPlatformsAdvanced
          - adyenForPlatformsManage
          - adyenFranchisee
          - adyenIssuing
          - adyenPccr
          title: type
          type: string
      title: AcceptTermsOfServiceResponse
    Address:
      example:
        country: country
        stateOrProvince: stateOrProvince
        city: city
        street: street
        postalCode: postalCode
        street2: street2
      properties:
        city:
          description: |-
            The name of the city. Required if `stateOrProvince` is provided.

            If you specify the city, you must also send `postalCode` and `street`.
          title: city
          type: string
        country:
          description: "The two-letter [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)\
            \ country code."
          title: country
          type: string
        postalCode:
          description: Postal code. Required if `stateOrProvince` and/or `city` is
            provided.
          title: postalCode
          type: string
        stateOrProvince:
          description: |-
            The two-letter ISO 3166-2 state or province code. For example, **CA** in the US.

            If you specify the state or province, you must also send `city`, `postalCode`, and `street`.
          title: stateOrProvince
          type: string
        street:
          description: "The name of the street, and the house or building number.\
            \ Required if `stateOrProvince` and/or `city` is provided."
          title: street
          type: string
        street2:
          description: "The apartment, unit, or suite number."
          title: street2
          type: string
      required:
      - country
      title: Address
    Amount:
      example:
        currency: currency
        value: 0
      properties:
        currency:
          description: The type of currency. Must be EUR (or EUR equivalent)
          title: currency
          type: string
        value:
          description: Total value of amount. Must be >= 0
          format: int64
          title: value
          type: integer
      title: Amount
    Attachment:
      example:
        filename: filename
        pageType: pageType
        contentType: contentType
        content: content
      properties:
        content:
          description: The document in Base64-encoded string format.
          title: content
          type: string
        contentType:
          deprecated: true
          description: "The file format.\n\n Possible values: **application/pdf**,\
            \ **image/jpg**, **image/jpeg**, **image/png**. "
          title: contentType
          type: string
          x-deprecatedInVersion: "1"
        filename:
          deprecated: true
          description: The name of the file including the file extension.
          title: filename
          type: string
          x-deprecatedInVersion: "1"
        pageType:
          description: |-
            Specifies which side of the ID card is uploaded.

            * When `type` is **driversLicense** or **identityCard**, set this to **front** or **back**.

            * When omitted, we infer the page number based on the order of attachments.
          title: pageType
          type: string
      required:
      - content
      title: Attachment
    BankAccountInfo:
      example:
        branchCode: branchCode
        bankCode: bankCode
        bankBicSwift: bankBicSwift
        countryCode: countryCode
        accountType: accountType
        iban: iban
        trustedSource: true
        bankName: bankName
        accountNumber: accountNumber
        currencyCode: currencyCode
        bankCity: bankCity
        checkCode: checkCode
      properties:
        accountNumber:
          description: |-
            The bank account number (without separators).

             When this is provided, the `branchCode` is also required.
          title: accountNumber
          type: string
        accountType:
          description: The type of bank account.
          title: accountType
          type: string
        bankBicSwift:
          description: The bank's BIC or SWIFT code.
          title: bankBicSwift
          type: string
        bankCity:
          description: The city where the bank is located.
          title: bankCity
          type: string
        bankCode:
          description: The bank code of the banking institution with which the bank
            account is registered.
          title: bankCode
          type: string
        bankName:
          description: The name of the banking institution where the bank account
            is held.
          title: bankName
          type: string
        branchCode:
          description: |-
            The branch code of the branch under which the bank account is registered.

            Required when you provide an `accountNumber`.

             In the following countries, this value corresponds to:


            * United States: routing number
            * United Kingdom: sort code
            * Germany: Bankleitzahl
          title: branchCode
          type: string
        checkCode:
          description: The check code of the bank account.
          title: checkCode
          type: string
        countryCode:
          description: "The two-character [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)\
            \ country code where the bank account is registered. For example, **NL**."
          title: countryCode
          type: string
        currencyCode:
          description: "The account's three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes).\
            \ For example, **EUR**."
          title: currencyCode
          type: string
        iban:
          description: "The international bank account number as defined in the [ISO-13616](https://www.iso.org/standard/81090.html)\
            \ standard."
          title: iban
          type: string
        trustedSource:
          description: "Identifies if the bank account was created through [instant\
            \ bank verification](https://docs.adyen.com/release-notes/platforms-and-financial-products#releaseNote=2023-05-08-hosted-onboarding)."
          readOnly: true
          title: trustedSource
          type: boolean
      required:
      - currencyCode
      title: BankAccountInfo
    BirthData:
      example:
        dateOfBirth: dateOfBirth
      properties:
        dateOfBirth:
          description: "The individual's date of birth, in YYYY-MM-DD format."
          title: dateOfBirth
          type: string
      title: BirthData
    BusinessLine:
      example:
        salesChannels:
        - salesChannels
        - salesChannels
        capability: receivePayments
        legalEntityId: legalEntityId
        webDataExemption:
          reason: noOnlinePresence
        sourceOfFunds:
          description: description
          adyenProcessedFunds: true
          type: business
          acquiringBusinessLineId: acquiringBusinessLineId
        webData:
        - webAddressId: webAddressId
          webAddress: webAddress
        - webAddressId: webAddressId
          webAddress: webAddress
        id: id
        industryCode: industryCode
      properties:
        capability:
          description: |-
            The capability for which you are creating the business line.

            Possible values: **receivePayments**, **receiveFromPlatformPayments**, **issueBankAccount**
          enum:
          - receivePayments
          - receiveFromPlatformPayments
          - issueBankAccount
          title: capability
          type: string
        id:
          description: The unique identifier of the business line.
          readOnly: true
          title: id
          type: string
        industryCode:
          description: "A code that represents the [industry of the legal entity](https://docs.adyen.com/marketplaces-and-platforms/verification-requirements/reference-additional-products/#list-industry-codes).\
            \ For example, **4431A** for computer software stores."
          title: industryCode
          type: string
        legalEntityId:
          description: "Unique identifier of the [legal entity](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/legalEntities__resParam_id)\
            \ that owns the business line."
          title: legalEntityId
          type: string
        salesChannels:
          description: |-
            A list of channels where goods or services are sold.

            Possible values: **pos**, **posMoto**, **eCommerce**, **ecomMoto**, **payByLink**.

            Required only in combination with the `capability` to **receivePayments** or **receiveFromPlatformPayments**.
          items:
            type: string
          title: salesChannels
          type: array
        sourceOfFunds:
          $ref: '#/components/schemas/SourceOfFunds'
        webData:
          description: "List of website URLs where your user's goods or services are\
            \ sold. When this is required for a capability but your user does not\
            \ have an online presence, provide the reason in the `webDataExemption`\
            \ object."
          items:
            $ref: '#/components/schemas/WebData'
          title: webData
          type: array
        webDataExemption:
          $ref: '#/components/schemas/WebDataExemption'
      required:
      - capability
      - id
      - industryCode
      - legalEntityId
      title: BusinessLine
    BusinessLineInfo:
      example:
        salesChannels:
        - salesChannels
        - salesChannels
        capability: receivePayments
        legalEntityId: legalEntityId
        webDataExemption:
          reason: noOnlinePresence
        sourceOfFunds:
          description: description
          adyenProcessedFunds: true
          type: business
          acquiringBusinessLineId: acquiringBusinessLineId
        webData:
        - webAddressId: webAddressId
          webAddress: webAddress
        - webAddressId: webAddressId
          webAddress: webAddress
        industryCode: industryCode
      properties:
        capability:
          description: |-
            The capability for which you are creating the business line.

            Possible values: **receivePayments**, **receiveFromPlatformPayments**, **issueBankAccount**
          enum:
          - receivePayments
          - receiveFromPlatformPayments
          - issueBankAccount
          title: capability
          type: string
        industryCode:
          description: "A code that represents the [industry of the legal entity](https://docs.adyen.com/marketplaces-and-platforms/verification-requirements/reference-additional-products/#list-industry-codes).\
            \ For example, **4431A** for computer software stores."
          title: industryCode
          type: string
        legalEntityId:
          description: "Unique identifier of the [legal entity](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/legalEntities__resParam_id)\
            \ that owns the business line."
          title: legalEntityId
          type: string
        salesChannels:
          description: |-
            A list of channels where goods or services are sold.

            Possible values: **pos**, **posMoto**, **eCommerce**, **ecomMoto**, **payByLink**.

            Required only in combination with the `capability` to **receivePayments** or **receiveFromPlatformPayments**.
          items:
            type: string
          title: salesChannels
          type: array
        sourceOfFunds:
          $ref: '#/components/schemas/SourceOfFunds'
        webData:
          description: "List of website URLs where your user's goods or services are\
            \ sold. When this is required for a capability but your user does not\
            \ have an online presence, provide the reason in the `webDataExemption`\
            \ object."
          items:
            $ref: '#/components/schemas/WebData'
          title: webData
          type: array
        webDataExemption:
          $ref: '#/components/schemas/WebDataExemption'
      required:
      - capability
      - industryCode
      - legalEntityId
      title: BusinessLineInfo
    BusinessLines:
      example:
        businessLines:
        - salesChannels:
          - salesChannels
          - salesChannels
          capability: receivePayments
          legalEntityId: legalEntityId
          webDataExemption:
            reason: noOnlinePresence
          sourceOfFunds:
            description: description
            adyenProcessedFunds: true
            type: business
            acquiringBusinessLineId: acquiringBusinessLineId
          webData:
          - webAddressId: webAddressId
            webAddress: webAddress
          - webAddressId: webAddressId
            webAddress: webAddress
          id: id
          industryCode: industryCode
        - salesChannels:
          - salesChannels
          - salesChannels
          capability: receivePayments
          legalEntityId: legalEntityId
          webDataExemption:
            reason: noOnlinePresence
          sourceOfFunds:
            description: description
            adyenProcessedFunds: true
            type: business
            acquiringBusinessLineId: acquiringBusinessLineId
          webData:
          - webAddressId: webAddressId
            webAddress: webAddress
          - webAddressId: webAddressId
            webAddress: webAddress
          id: id
          industryCode: industryCode
      properties:
        businessLines:
          description: List of business lines.
          items:
            $ref: '#/components/schemas/BusinessLine'
          title: businessLines
          type: array
      required:
      - businessLines
      title: BusinessLines
    CalculateTermsOfServiceStatusResponse:
      example:
        termsOfServiceTypes:
        - adyenAccount
        - adyenAccount
      properties:
        termsOfServiceTypes:
          description: "The type of Terms of Service that the legal entity needs to\
            \ accept. If empty, no Terms of Service needs to be accepted."
          items:
            enum:
            - adyenAccount
            - adyenCapital
            - adyenCard
            - adyenForPlatformsAdvanced
            - adyenForPlatformsManage
            - adyenFranchisee
            - adyenIssuing
            - adyenPccr
            type: string
          title: termsOfServiceTypes
          type: array
      title: CalculateTermsOfServiceStatusResponse
    CapabilityProblem:
      example:
        verificationErrors:
        - capabilities:
          - acceptExternalFunding
          - acceptExternalFunding
          code: code
          message: message
          type: dataMissing
          remediatingActions:
          - code: code
            message: message
          - code: code
            message: message
          subErrors:
          - capabilities:
            - acceptExternalFunding
            - acceptExternalFunding
            code: code
            message: message
            type: dataMissing
            remediatingActions:
            - code: code
              message: message
            - code: code
              message: message
          - capabilities:
            - acceptExternalFunding
            - acceptExternalFunding
            code: code
            message: message
            type: dataMissing
            remediatingActions:
            - code: code
              message: message
            - code: code
              message: message
        - capabilities:
          - acceptExternalFunding
          - acceptExternalFunding
          code: code
          message: message
          type: dataMissing
          remediatingActions:
          - code: code
            message: message
          - code: code
            message: message
          subErrors:
          - capabilities:
            - acceptExternalFunding
            - acceptExternalFunding
            code: code
            message: message
            type: dataMissing
            remediatingActions:
            - code: code
              message: message
            - code: code
              message: message
          - capabilities:
            - acceptExternalFunding
            - acceptExternalFunding
            code: code
            message: message
            type: dataMissing
            remediatingActions:
            - code: code
              message: message
            - code: code
              message: message
        entity:
          owner:
            documents:
            - documents
            - documents
            id: id
            type: BankAccount
          documents:
          - documents
          - documents
          id: id
          type: BankAccount
      properties:
        entity:
          $ref: '#/components/schemas/CapabilityProblemEntity'
        verificationErrors:
          items:
            $ref: '#/components/schemas/VerificationError'
          title: verificationErrors
          type: array
      title: CapabilityProblem
    CapabilityProblemEntity:
      example:
        owner:
          documents:
          - documents
          - documents
          id: id
          type: BankAccount
        documents:
        - documents
        - documents
        id: id
        type: BankAccount
      properties:
        documents:
          description: List of document IDs corresponding to the verification errors
            from capabilities.
          items:
            type: string
          title: documents
          type: array
        id:
          title: id
          type: string
        owner:
          $ref: '#/components/schemas/CapabilityProblemEntity-recursive'
        type:
          enum:
          - BankAccount
          - Document
          - LegalEntity
          - product
          title: type
          type: string
      title: CapabilityProblemEntity
    CapabilityProblemEntity-recursive:
      example:
        documents:
        - documents
        - documents
        id: id
        type: BankAccount
      properties:
        documents:
          description: List of document IDs corresponding to the verification errors
            from capabilities.
          items:
            type: string
          title: documents
          type: array
        id:
          title: id
          type: string
        type:
          enum:
          - BankAccount
          - Document
          - LegalEntity
          - product
          title: type
          type: string
      title: CapabilityProblemEntity-recursive
    CapabilitySettings:
      example:
        authorizedCardUsers: true
        interval: daily
        fundingSource:
        - credit
        - credit
        maxAmount:
          currency: currency
          value: 0
        amountPerIndustry:
          key:
            currency: currency
            value: 0
      properties:
        amountPerIndustry:
          additionalProperties:
            $ref: '#/components/schemas/Amount'
          description: The maximum amount a card holder can spend per industry.
          title: amountPerIndustry
        authorizedCardUsers:
          description: The number of card holders who can use the card.
          title: authorizedCardUsers
          type: boolean
        fundingSource:
          description: "The funding source of the card, for example **debit**."
          items:
            enum:
            - credit
            - debit
            - prepaid
            type: string
          title: fundingSource
          type: array
        interval:
          description: The period when the rule conditions apply.
          enum:
          - daily
          - monthly
          - weekly
          title: interval
          type: string
        maxAmount:
          $ref: '#/components/schemas/Amount'
      title: CapabilitySettings
    Document:
      example:
        issuerState: issuerState
        owner:
          id: id
          type: type
        fileName: fileName
        attachments:
        - filename: filename
          pageType: pageType
          contentType: contentType
          content: content
        - filename: filename
          pageType: pageType
          contentType: contentType
          content: content
        description: description
        creationDate: 2000-01-23T04:56:07.000+00:00
        type: bankStatement
        expiryDate: expiryDate
        issuerCountry: issuerCountry
        number: number
        modificationDate: 2000-01-23T04:56:07.000+00:00
        attachment:
          filename: filename
          pageType: pageType
          contentType: contentType
          content: content
        id: id
      properties:
        attachment:
          $ref: '#/components/schemas/Attachment'
        attachments:
          description: Array that contains the document. The array supports multiple
            attachments for uploading different sides or pages of a document.
          items:
            $ref: '#/components/schemas/Attachment'
          title: attachments
          type: array
        creationDate:
          description: The creation date of the document.
          format: date-time
          readOnly: true
          title: creationDate
          type: string
        description:
          description: Your description for the document.
          title: description
          type: string
        expiryDate:
          deprecated: true
          description: "The expiry date of the document, in YYYY-MM-DD format."
          title: expiryDate
          type: string
          x-deprecatedInVersion: "1"
        fileName:
          description: The filename of the document.
          title: fileName
          type: string
        id:
          description: The unique identifier of the document.
          readOnly: true
          title: id
          type: string
        issuerCountry:
          deprecated: true
          description: "The two-character [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)\
            \ country code where the document was issued. For example, **US**."
          title: issuerCountry
          type: string
          x-deprecatedInVersion: "1"
        issuerState:
          deprecated: true
          description: The state or province where the document was issued (AU only).
          title: issuerState
          type: string
          x-deprecatedInVersion: "1"
        modificationDate:
          description: The modification date of the document.
          format: date-time
          readOnly: true
          title: modificationDate
          type: string
        number:
          description: The number in the document.
          title: number
          type: string
        owner:
          $ref: '#/components/schemas/OwnerEntity'
        type:
          description: |-
            Type of document, used when providing an ID number or uploading a document. The possible values depend on the legal entity type.

            * For **organization**, the `type` values can be **proofOfAddress**, **registrationDocument**, **taxDocument**, **proofOfOwnership**, or **proofOfIndustry**.

            * For **individual**, the `type` values can be **identityCard**, **driversLicense**, **proofOfNationalIdNumber**, **proofOfResidency**, or **proofOfIndustry**.

            * Use **bankStatement** to upload documents for a [transfer instrument](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/transferInstruments__resParam_id).
          enum:
          - bankStatement
          - driversLicense
          - identityCard
          - nationalIdNumber
          - passport
          - proofOfAddress
          - proofOfNationalIdNumber
          - proofOfResidency
          - registrationDocument
          - taxDocument
          - proofOfIndustry
          title: type
          type: string
      required:
      - description
      - type
      title: Document
    EntityReference:
      example:
        id: id
      properties:
        id:
          description: The unique identifier of the resource.
          title: id
          type: string
      title: EntityReference
    GeneratePciDescriptionRequest:
      example:
        additionalSalesChannels:
        - eCommerce
        - eCommerce
        language: language
      properties:
        additionalSalesChannels:
          description: |+
            An array of additional sales channels to generate PCI questionnaires. Include the relevant sales channels if you need your user to sign PCI questionnaires. Not required if you [create stores](https://docs.adyen.com/marketplaces-and-platforms/additional-for-platform-setup/create-stores/) and [add payment methods](https://docs.adyen.com/marketplaces-and-platforms/payment-methods/) before you generate the questionnaires.

            Possible values:
            *  **eCommerce**
            *  **pos**
            *  **ecomMoto**
            *  **posMoto**

          items:
            enum:
            - eCommerce
            - ecomMoto
            - pos
            - posMoto
            type: string
          title: additionalSalesChannels
          type: array
        language:
          description: "Sets the language of the PCI questionnaire. Its value is a\
            \ two-character [ISO 639-1](https://en.wikipedia.org/wiki/ISO_639-1) language\
            \ code, for example, **en**."
          title: language
          type: string
      title: GeneratePciDescriptionRequest
    GeneratePciDescriptionResponse:
      example:
        pciTemplateReferences:
        - pciTemplateReferences
        - pciTemplateReferences
        language: language
        content: content
      properties:
        content:
          description: The generated questionnaires in a base64 encoded format.
          title: content
          type: string
        language:
          description: "The two-letter [ISO-639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes)\
            \ language code for the questionnaire. For example, **en**."
          title: language
          type: string
        pciTemplateReferences:
          description: The array of Adyen-generated unique identifiers for the questionnaires.
          items:
            type: string
          title: pciTemplateReferences
          type: array
      title: GeneratePciDescriptionResponse
    GetPciQuestionnaireInfosResponse:
      example:
        data:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          validUntil: 2000-01-23T04:56:07.000+00:00
          id: id
        - createdAt: 2000-01-23T04:56:07.000+00:00
          validUntil: 2000-01-23T04:56:07.000+00:00
          id: id
      properties:
        data:
          description: Information about the signed PCI questionnaires.
          items:
            $ref: '#/components/schemas/PciDocumentInfo'
          title: data
          type: array
      title: GetPciQuestionnaireInfosResponse
    GetPciQuestionnaireResponse:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        validUntil: 2000-01-23T04:56:07.000+00:00
        id: id
        content: content
      properties:
        content:
          description: The generated questionnaire in a base64 encoded format.
          title: content
          type: string
        createdAt:
          description: "The date the questionnaire was created, in ISO 8601 extended\
            \ format. For example, 2022-12-18T10:15:30+01:00"
          format: date-time
          title: createdAt
          type: string
        id:
          description: The unique identifier of the signed questionnaire.
          title: id
          type: string
        validUntil:
          description: "The expiration date of the questionnaire, in ISO 8601 extended\
            \ format. For example, 2022-12-18T10:15:30+01:00"
          format: date-time
          title: validUntil
          type: string
      title: GetPciQuestionnaireResponse
    GetTermsOfServiceAcceptanceInfosResponse:
      example:
        data:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          acceptedFor: acceptedFor
          acceptedBy: acceptedBy
          id: id
          type: adyenAccount
        - createdAt: 2000-01-23T04:56:07.000+00:00
          acceptedFor: acceptedFor
          acceptedBy: acceptedBy
          id: id
          type: adyenAccount
      properties:
        data:
          description: The Terms of Service acceptance information.
          items:
            $ref: '#/components/schemas/TermsOfServiceAcceptanceInfo'
          title: data
          type: array
      title: GetTermsOfServiceAcceptanceInfosResponse
    GetTermsOfServiceDocumentRequest:
      example:
        language: language
        type: adyenAccount
      properties:
        language:
          description: "The language to be used for the Terms of Service document,\
            \ specified by the two-letter [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes)\
            \ language code. Possible value: **en** for English."
          title: language
          type: string
        type:
          description: |+
            The type of Terms of Service.

            Possible values:
            *  **adyenForPlatformsManage**
            *  **adyenIssuing**
            *  **adyenForPlatformsAdvanced**
            *  **adyenCapital**
            *  **adyenAccount**
            *  **adyenCard**
            *  **adyenFranchisee**
            *  **adyenPccr**

          enum:
          - adyenAccount
          - adyenCapital
          - adyenCard
          - adyenForPlatformsAdvanced
          - adyenForPlatformsManage
          - adyenFranchisee
          - adyenIssuing
          - adyenPccr
          title: type
          type: string
      required:
      - language
      - type
      title: GetTermsOfServiceDocumentRequest
    GetTermsOfServiceDocumentResponse:
      example:
        document: document
        termsOfServiceDocumentId: termsOfServiceDocumentId
        language: language
        id: id
        type: adyenAccount
      properties:
        document:
          description: The Terms of Service document in Base64-encoded format.
          title: document
          type: string
        id:
          description: The unique identifier of the legal entity.
          title: id
          type: string
        language:
          description: "The language used for the Terms of Service document, specified\
            \ by the two-letter [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes)\
            \ language code. Possible value: **en** for English."
          title: language
          type: string
        termsOfServiceDocumentId:
          description: The unique identifier of the Terms of Service document.
          title: termsOfServiceDocumentId
          type: string
        type:
          description: |+
            The type of Terms of Service.

            Possible values:
            *  **adyenForPlatformsManage**
            *  **adyenIssuing**
            *  **adyenForPlatformsAdvanced**
            *  **adyenCapital**
            *  **adyenAccount**
            *  **adyenCard**
            *  **adyenFranchisee**
            *  **adyenPccr**

          enum:
          - adyenAccount
          - adyenCapital
          - adyenCard
          - adyenForPlatformsAdvanced
          - adyenForPlatformsManage
          - adyenFranchisee
          - adyenIssuing
          - adyenPccr
          title: type
          type: string
      title: GetTermsOfServiceDocumentResponse
    IdentificationData:
      example:
        expiryDate: expiryDate
        issuerCountry: issuerCountry
        issuerState: issuerState
        number: number
        nationalIdExempt: true
        type: nationalIdNumber
        cardNumber: cardNumber
      properties:
        cardNumber:
          description: The card number of the document that was issued (AU only).
          title: cardNumber
          type: string
        expiryDate:
          description: "The expiry date of the document, in YYYY-MM-DD format."
          title: expiryDate
          type: string
        issuerCountry:
          deprecated: true
          description: "The two-character [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)\
            \ country code where the document was issued. For example, **US**."
          title: issuerCountry
          type: string
          x-deprecatedInVersion: "1"
        issuerState:
          description: The state or province where the document was issued (AU only).
          title: issuerState
          type: string
        nationalIdExempt:
          description: "Applies only to individuals in the US. Set to **true** if\
            \ the individual does not have an SSN. To verify their identity, Adyen\
            \ will require them to upload an ID document."
          title: nationalIdExempt
          type: boolean
        number:
          description: The number in the document.
          title: number
          type: string
        type:
          description: "Type of identity data. For **individual**, the `type` value\
            \ is **nationalIdNumber**."
          enum:
          - nationalIdNumber
          title: type
          type: string
      required:
      - type
      title: IdentificationData
    Individual:
      example:
        identificationData:
          expiryDate: expiryDate
          issuerCountry: issuerCountry
          issuerState: issuerState
          number: number
          nationalIdExempt: true
          type: nationalIdNumber
          cardNumber: cardNumber
        nationality: nationality
        phone:
          number: number
          countryCode: countryCode
          type: type
        residentialAddress:
          country: country
          stateOrProvince: stateOrProvince
          city: city
          street: street
          postalCode: postalCode
          street2: street2
        name:
          firstName: firstName
          lastName: lastName
          infix: infix
        birthData:
          dateOfBirth: dateOfBirth
        webData:
          webAddressId: webAddressId
          webAddress: webAddress
        email: email
      properties:
        birthData:
          $ref: '#/components/schemas/BirthData'
        email:
          description: The email address of the legal entity.
          title: email
          type: string
        identificationData:
          $ref: '#/components/schemas/IdentificationData'
        name:
          $ref: '#/components/schemas/Name'
        nationality:
          description: The individual's nationality.
          title: nationality
          type: string
        phone:
          $ref: '#/components/schemas/PhoneNumber'
        residentialAddress:
          $ref: '#/components/schemas/Address'
        webData:
          $ref: '#/components/schemas/WebData'
      required:
      - name
      - residentialAddress
      title: Individual
    LegalEntity:
      example:
        reference: reference
        trust:
          registeredAddress:
            country: country
            stateOrProvince: stateOrProvince
            city: city
            street: street
            postalCode: postalCode
            street2: street2
          doingBusinessAs: doingBusinessAs
          registrationNumber: registrationNumber
          name: name
          principalPlaceOfBusiness:
            country: country
            stateOrProvince: stateOrProvince
            city: city
            street: street
            postalCode: postalCode
            street2: street2
          type: cashManagementTrust
          vatAbsenceReason: industryExemption
          countryOfGoverningLaw: countryOfGoverningLaw
          vatNumber: vatNumber
        unincorporatedPartnership:
          registeredAddress:
            country: country
            stateOrProvince: stateOrProvince
            city: city
            street: street
            postalCode: postalCode
            street2: street2
          doingBusinessAs: doingBusinessAs
          registrationNumber: registrationNumber
          name: name
          principalPlaceOfBusiness:
            country: country
            stateOrProvince: stateOrProvince
            city: city
            street: street
            postalCode: postalCode
            street2: street2
          type: limitedPartnership
          vatAbsenceReason: industryExemption
          countryOfGoverningLaw: countryOfGoverningLaw
          vatNumber: vatNumber
        capabilities:
          key:
            requested: true
            verificationStatus: verificationStatus
            allowed: true
            allowedSettings:
              authorizedCardUsers: true
              interval: daily
              fundingSource:
              - credit
              - credit
              maxAmount:
                currency: currency
                value: 0
              amountPerIndustry:
                key:
                  currency: currency
                  value: 0
            allowedLevel: high
            requestedLevel: high
            requestedSettings:
              authorizedCardUsers: true
              interval: daily
              fundingSource:
              - credit
              - credit
              maxAmount:
                currency: currency
                value: 0
              amountPerIndustry:
                key:
                  currency: currency
                  value: 0
            problems:
            - verificationErrors:
              - capabilities:
                - acceptExternalFunding
                - acceptExternalFunding
                code: code
                message: message
                type: dataMissing
                remediatingActions:
                - code: code
                  message: message
                - code: code
                  message: message
                subErrors:
                - capabilities:
                  - acceptExternalFunding
                  - acceptExternalFunding
                  code: code
                  message: message
                  type: dataMissing
                  remediatingActions:
                  - code: code
                    message: message
                  - code: code
                    message: message
                - capabilities:
                  - acceptExternalFunding
                  - acceptExternalFunding
                  code: code
                  message: message
                  type: dataMissing
                  remediatingActions:
                  - code: code
                    message: message
                  - code: code
                    message: message
              - capabilities:
                - acceptExternalFunding
                - acceptExternalFunding
                code: code
                message: message
                type: dataMissing
                remediatingActions:
                - code: code
                  message: message
                - code: code
                  message: message
                subErrors:
                - capabilities:
                  - acceptExternalFunding
                  - acceptExternalFunding
                  code: code
                  message: message
                  type: dataMissing
                  remediatingActions:
                  - code: code
                    message: message
                  - code: code
                    message: message
                - capabilities:
                  - acceptExternalFunding
                  - acceptExternalFunding
                  code: code
                  message: message
                  type: dataMissing
                  remediatingActions:
                  - code: code
                    message: message
                  - code: code
                    message: message
              entity:
                owner:
                  documents:
                  - documents
                  - documents
                  id: id
                  type: BankAccount
                documents:
                - documents
                - documents
                id: id
                type: BankAccount
            - verificationErrors:
              - capabilities:
                - acceptExternalFunding
                - acceptExternalFunding
                code: code
                message: message
                type: dataMissing
                remediatingActions:
                - code: code
                  message: message
                - code: code
                  message: message
                subErrors:
                - capabilities:
                  - acceptExternalFunding
                  - acceptExternalFunding
                  code: code
                  message: message
                  type: dataMissing
                  remediatingActions:
                  - code: code
                    message: message
                  - code: code
                    message: message
                - capabilities:
                  - acceptExternalFunding
                  - acceptExternalFunding
                  code: code
                  message: message
                  type: dataMissing
                  remediatingActions:
                  - code: code
                    message: message
                  - code: code
                    message: message
              - capabilities:
                - acceptExternalFunding
                - acceptExternalFunding
                code: code
                message: message
                type: dataMissing
                remediatingActions:
                - code: code
                  message: message
                - code: code
                  message: message
                subErrors:
                - capabilities:
                  - acceptExternalFunding
                  - acceptExternalFunding
                  code: code
                  message: message
                  type: dataMissing
                  remediatingActions:
                  - code: code
                    message: message
                  - code: code
                    message: message
                - capabilities:
                  - acceptExternalFunding
                  - acceptExternalFunding
                  code: code
                  message: message
                  type: dataMissing
                  remediatingActions:
                  - code: code
                    message: message
                  - code: code
                    message: message
              entity:
                owner:
                  documents:
                  - documents
                  - documents
                  id: id
                  type: BankAccount
                documents:
                - documents
                - documents
                id: id
                type: BankAccount
        individual:
          identificationData:
            expiryDate: expiryDate
            issuerCountry: issuerCountry
            issuerState: issuerState
            number: number
            nationalIdExempt: true
            type: nationalIdNumber
            cardNumber: cardNumber
          nationality: nationality
          phone:
            number: number
            countryCode: countryCode
            type: type
          residentialAddress:
            country: country
            stateOrProvince: stateOrProvince
            city: city
            street: street
            postalCode: postalCode
            street2: street2
          name:
            firstName: firstName
            lastName: lastName
            infix: infix
          birthData:
            dateOfBirth: dateOfBirth
          webData:
            webAddressId: webAddressId
            webAddress: webAddress
          email: email
        documents:
        - id: id
        - id: id
        organization:
          taxExempt: true
          description: description
          type: associationIncorporated
          stockData:
            stockNumber: stockNumber
            tickerSymbol: tickerSymbol
            marketIdentifier: marketIdentifier
          legalName: legalName
          registeredAddress:
            country: country
            stateOrProvince: stateOrProvince
            city: city
            street: street
            postalCode: postalCode
            street2: street2
          doingBusinessAs: doingBusinessAs
          phone:
            number: number
            countryCode: countryCode
            type: type
          registrationNumber: registrationNumber
          taxId: taxId
          taxIdAbsenceReason: industryExemption
          webData:
            webAddressId: webAddressId
            webAddress: webAddress
          principalPlaceOfBusiness:
            country: country
            stateOrProvince: stateOrProvince
            city: city
            street: street
            postalCode: postalCode
            street2: street2
          email: email
        verificationPlan: verificationPlan
        entityAssociations:
        - associatorId: associatorId
          legalEntityId: legalEntityId
          entityType: entityType
          jobTitle: jobTitle
          name: name
          type: definedBeneficiary
          settlorExemptionReason:
          - settlorExemptionReason
          - settlorExemptionReason
        - associatorId: associatorId
          legalEntityId: legalEntityId
          entityType: entityType
          jobTitle: jobTitle
          name: name
          type: definedBeneficiary
          settlorExemptionReason:
          - settlorExemptionReason
          - settlorExemptionReason
        id: id
        transferInstruments:
        - trustedSource: true
          accountIdentifier: accountIdentifier
          realLastFour: realLastFour
          id: id
        - trustedSource: true
          accountIdentifier: accountIdentifier
          realLastFour: realLastFour
          id: id
        type: individual
      properties:
        capabilities:
          additionalProperties:
            $ref: '#/components/schemas/LegalEntityCapability'
          description: "Contains key-value pairs that specify the actions that the\
            \ legal entity can do in your platform.The key is a capability required\
            \ for your integration. For example, **issueCard** for Issuing.The value\
            \ is an object containing the settings for the capability."
          readOnly: true
          title: capabilities
        documents:
          description: List of documents uploaded for the legal entity.
          items:
            $ref: '#/components/schemas/EntityReference'
          title: documents
          type: array
          x-deprecatedInVersion: "1"
          x-deprecatedMessage: Use the `documentDetails` array instead.
        entityAssociations:
          description: |-
            List of legal entities associated with the current legal entity.
            For example, ultimate beneficial owners associated with an organization through ownership or control, or as signatories.
          items:
            $ref: '#/components/schemas/LegalEntityAssociation'
          title: entityAssociations
          type: array
        id:
          description: The unique identifier of the legal entity.
          readOnly: true
          title: id
          type: string
        individual:
          $ref: '#/components/schemas/Individual'
        organization:
          $ref: '#/components/schemas/Organization'
        reference:
          description: "Your reference for the legal entity, maximum 150 characters."
          maxLength: 150
          title: reference
          type: string
        transferInstruments:
          description: List of transfer instruments that the legal entity owns.
          items:
            $ref: '#/components/schemas/TransferInstrumentReference'
          title: transferInstruments
          type: array
        trust:
          $ref: '#/components/schemas/Trust'
        type:
          description: |-
            The type of legal entity.

             Possible values: **individual** or **organization**
          enum:
          - individual
          - organization
          title: type
          type: string
        unincorporatedPartnership:
          $ref: '#/components/schemas/UnincorporatedPartnership'
        verificationPlan:
          description: "A key-value pair that specifies the [verification process](https://docs.adyen.com/marketplaces-and-platforms/collect-verification-details/)\
            \ for a legal entity. Set to **upfront** for [upfront verification](https://docs.adyen.com/marketplaces-and-platforms/collect-verification-details#upfront)."
          title: verificationPlan
          type: string
      required:
      - id
      title: LegalEntity
    LegalEntityAssociation:
      example:
        associatorId: associatorId
        legalEntityId: legalEntityId
        entityType: entityType
        jobTitle: jobTitle
        name: name
        type: definedBeneficiary
        settlorExemptionReason:
        - settlorExemptionReason
        - settlorExemptionReason
      properties:
        associatorId:
          description: "The unique identifier of another legal entity with which the\
            \ `legalEntityId` is associated. When the `legalEntityId` is associated\
            \ to legal entities other than the current one, the response returns all\
            \ the associations."
          readOnly: true
          title: associatorId
          type: string
        entityType:
          description: |-
            The legal entity type of associated legal entity.

            For example, **organization**, **soleProprietorship** or **individual**.
          readOnly: true
          title: entityType
          type: string
        jobTitle:
          description: The individual's job title if the `type` is **uboThroughControl**
            or **signatory**.
          title: jobTitle
          type: string
        legalEntityId:
          description: "The unique identifier of the associated [legal entity](https://docs.adyen.com/api-explorer/legalentity/latest/post/legalEntities#responses-200-id)."
          title: legalEntityId
          type: string
        name:
          description: |-
            The name of the associated [legal entity](https://docs.adyen.com/api-explorer/legalentity/latest/post/legalEntities#responses-200-id).

            - For **individual**, `name.firstName` and `name.lastName`.
            - For **organization**, `legalName`.
            - For **soleProprietorship**, `name`.
          readOnly: true
          title: name
          type: string
        settlorExemptionReason:
          description: |-
            Defines the Kyc Exemption Reason for a Settlor associated with a trust.

            For example, **professionalServiceProvider**, **deceased**, or **contributionBelowThreshold**.
          items:
            type: string
          title: settlorExemptionReason
          type: array
        type:
          description: |-
            Defines the relationship of the legal entity to the current legal entity.

            Possible values for organizations: **uboThroughOwnership**, **uboThroughControl**, **director**, **signatory**, or **ultimateParentCompany**.

            Possible values for sole proprietorships: **soleProprietorship**.

            Possible value for trusts: **trust**

            Possible values for trust members: **definedBeneficiary**, **protector**, **secondaryTrustee**, **settlor**, **uboThroughControl**, or **uboThroughOwnership**.
          enum:
          - definedBeneficiary
          - director
          - protector
          - secondaryTrustee
          - settlor
          - signatory
          - trust
          - uboThroughControl
          - uboThroughOwnership
          - undefinedBeneficiary
          title: type
          type: string
      required:
      - legalEntityId
      - type
      title: LegalEntityAssociation
    LegalEntityCapability:
      example:
        requested: true
        verificationStatus: verificationStatus
        allowed: true
        allowedSettings:
          authorizedCardUsers: true
          interval: daily
          fundingSource:
          - credit
          - credit
          maxAmount:
            currency: currency
            value: 0
          amountPerIndustry:
            key:
              currency: currency
              value: 0
        allowedLevel: high
        requestedLevel: high
        requestedSettings:
          authorizedCardUsers: true
          interval: daily
          fundingSource:
          - credit
          - credit
          maxAmount:
            currency: currency
            value: 0
          amountPerIndustry:
            key:
              currency: currency
              value: 0
        problems:
        - verificationErrors:
          - capabilities:
            - acceptExternalFunding
            - acceptExternalFunding
            code: code
            message: message
            type: dataMissing
            remediatingActions:
            - code: code
              message: message
            - code: code
              message: message
            subErrors:
            - capabilities:
              - acceptExternalFunding
              - acceptExternalFunding
              code: code
              message: message
              type: dataMissing
              remediatingActions:
              - code: code
                message: message
              - code: code
                message: message
            - capabilities:
              - acceptExternalFunding
              - acceptExternalFunding
              code: code
              message: message
              type: dataMissing
              remediatingActions:
              - code: code
                message: message
              - code: code
                message: message
          - capabilities:
            - acceptExternalFunding
            - acceptExternalFunding
            code: code
            message: message
            type: dataMissing
            remediatingActions:
            - code: code
              message: message
            - code: code
              message: message
            subErrors:
            - capabilities:
              - acceptExternalFunding
              - acceptExternalFunding
              code: code
              message: message
              type: dataMissing
              remediatingActions:
              - code: code
                message: message
              - code: code
                message: message
            - capabilities:
              - acceptExternalFunding
              - acceptExternalFunding
              code: code
              message: message
              type: dataMissing
              remediatingActions:
              - code: code
                message: message
              - code: code
                message: message
          entity:
            owner:
              documents:
              - documents
              - documents
              id: id
              type: BankAccount
            documents:
            - documents
            - documents
            id: id
            type: BankAccount
        - verificationErrors:
          - capabilities:
            - acceptExternalFunding
            - acceptExternalFunding
            code: code
            message: message
            type: dataMissing
            remediatingActions:
            - code: code
              message: message
            - code: code
              message: message
            subErrors:
            - capabilities:
              - acceptExternalFunding
              - acceptExternalFunding
              code: code
              message: message
              type: dataMissing
              remediatingActions:
              - code: code
                message: message
              - code: code
                message: message
            - capabilities:
              - acceptExternalFunding
              - acceptExternalFunding
              code: code
              message: message
              type: dataMissing
              remediatingActions:
              - code: code
                message: message
              - code: code
                message: message
          - capabilities:
            - acceptExternalFunding
            - acceptExternalFunding
            code: code
            message: message
            type: dataMissing
            remediatingActions:
            - code: code
              message: message
            - code: code
              message: message
            subErrors:
            - capabilities:
              - acceptExternalFunding
              - acceptExternalFunding
              code: code
              message: message
              type: dataMissing
              remediatingActions:
              - code: code
                message: message
              - code: code
                message: message
            - capabilities:
              - acceptExternalFunding
              - acceptExternalFunding
              code: code
              message: message
              type: dataMissing
              remediatingActions:
              - code: code
                message: message
              - code: code
                message: message
          entity:
            owner:
              documents:
              - documents
              - documents
              id: id
              type: BankAccount
            documents:
            - documents
            - documents
            id: id
            type: BankAccount
      properties:
        allowed:
          description: Indicates whether the capability is allowed. Adyen sets this
            to **true** if the verification is successful.
          readOnly: true
          title: allowed
          type: boolean
        allowedLevel:
          description: |-
            The capability level that is allowed for the legal entity.

            Possible values: **notApplicable**, **low**, **medium**, **high**.
          enum:
          - high
          - low
          - medium
          - notApplicable
          readOnly: true
          title: allowedLevel
          type: string
        allowedSettings:
          $ref: '#/components/schemas/CapabilitySettings'
        problems:
          description: Contains verification errors and the actions that you can take
            to resolve them.
          items:
            $ref: '#/components/schemas/CapabilityProblem'
          title: problems
          type: array
        requested:
          description: "Indicates whether the capability is requested. To check whether\
            \ the legal entity is permitted to use the capability, refer to the `allowed`\
            \ field."
          readOnly: true
          title: requested
          type: boolean
        requestedLevel:
          description: |-
            The requested level of the capability. Some capabilities, such as those used in [card issuing](https://docs.adyen.com/issuing/add-capabilities#capability-levels), have different levels. Levels increase the capability, but also require additional checks and increased monitoring.

            Possible values: **notApplicable**, **low**, **medium**, **high**.
          enum:
          - high
          - low
          - medium
          - notApplicable
          readOnly: true
          title: requestedLevel
          type: string
        requestedSettings:
          $ref: '#/components/schemas/CapabilitySettings'
        verificationStatus:
          description: |
            The status of the verification checks for the capability.

            Possible values:

            * **pending**: Adyen is running the verification.

            * **invalid**: The verification failed. Check if the `errors` array contains more information.

            * **valid**: The verification has been successfully completed.

            * **rejected**: Adyen has verified the information, but found reasons to not allow the capability.
          readOnly: true
          title: verificationStatus
          type: string
      title: LegalEntityCapability
    LegalEntityInfo:
      example:
        reference: reference
        trust:
          registeredAddress:
            country: country
            stateOrProvince: stateOrProvince
            city: city
            street: street
            postalCode: postalCode
            street2: street2
          doingBusinessAs: doingBusinessAs
          registrationNumber: registrationNumber
          name: name
          principalPlaceOfBusiness:
            country: country
            stateOrProvince: stateOrProvince
            city: city
            street: street
            postalCode: postalCode
            street2: street2
          type: cashManagementTrust
          vatAbsenceReason: industryExemption
          countryOfGoverningLaw: countryOfGoverningLaw
          vatNumber: vatNumber
        unincorporatedPartnership:
          registeredAddress:
            country: country
            stateOrProvince: stateOrProvince
            city: city
            street: street
            postalCode: postalCode
            street2: street2
          doingBusinessAs: doingBusinessAs
          registrationNumber: registrationNumber
          name: name
          principalPlaceOfBusiness:
            country: country
            stateOrProvince: stateOrProvince
            city: city
            street: street
            postalCode: postalCode
            street2: street2
          type: limitedPartnership
          vatAbsenceReason: industryExemption
          countryOfGoverningLaw: countryOfGoverningLaw
          vatNumber: vatNumber
        capabilities:
          key:
            requested: true
            verificationStatus: verificationStatus
            allowed: true
            allowedSettings:
              authorizedCardUsers: true
              interval: daily
              fundingSource:
              - credit
              - credit
              maxAmount:
                currency: currency
                value: 0
              amountPerIndustry:
                key:
                  currency: currency
                  value: 0
            allowedLevel: high
            requestedLevel: high
            requestedSettings:
              authorizedCardUsers: true
              interval: daily
              fundingSource:
              - credit
              - credit
              maxAmount:
                currency: currency
                value: 0
              amountPerIndustry:
                key:
                  currency: currency
                  value: 0
            problems:
            - verificationErrors:
              - capabilities:
                - acceptExternalFunding
                - acceptExternalFunding
                code: code
                message: message
                type: dataMissing
                remediatingActions:
                - code: code
                  message: message
                - code: code
                  message: message
                subErrors:
                - capabilities:
                  - acceptExternalFunding
                  - acceptExternalFunding
                  code: code
                  message: message
                  type: dataMissing
                  remediatingActions:
                  - code: code
                    message: message
                  - code: code
                    message: message
                - capabilities:
                  - acceptExternalFunding
                  - acceptExternalFunding
                  code: code
                  message: message
                  type: dataMissing
                  remediatingActions:
                  - code: code
                    message: message
                  - code: code
                    message: message
              - capabilities:
                - acceptExternalFunding
                - acceptExternalFunding
                code: code
                message: message
                type: dataMissing
                remediatingActions:
                - code: code
                  message: message
                - code: code
                  message: message
                subErrors:
                - capabilities:
                  - acceptExternalFunding
                  - acceptExternalFunding
                  code: code
                  message: message
                  type: dataMissing
                  remediatingActions:
                  - code: code
                    message: message
                  - code: code
                    message: message
                - capabilities:
                  - acceptExternalFunding
                  - acceptExternalFunding
                  code: code
                  message: message
                  type: dataMissing
                  remediatingActions:
                  - code: code
                    message: message
                  - code: code
                    message: message
              entity:
                owner:
                  documents:
                  - documents
                  - documents
                  id: id
                  type: BankAccount
                documents:
                - documents
                - documents
                id: id
                type: BankAccount
            - verificationErrors:
              - capabilities:
                - acceptExternalFunding
                - acceptExternalFunding
                code: code
                message: message
                type: dataMissing
                remediatingActions:
                - code: code
                  message: message
                - code: code
                  message: message
                subErrors:
                - capabilities:
                  - acceptExternalFunding
                  - acceptExternalFunding
                  code: code
                  message: message
                  type: dataMissing
                  remediatingActions:
                  - code: code
                    message: message
                  - code: code
                    message: message
                - capabilities:
                  - acceptExternalFunding
                  - acceptExternalFunding
                  code: code
                  message: message
                  type: dataMissing
                  remediatingActions:
                  - code: code
                    message: message
                  - code: code
                    message: message
              - capabilities:
                - acceptExternalFunding
                - acceptExternalFunding
                code: code
                message: message
                type: dataMissing
                remediatingActions:
                - code: code
                  message: message
                - code: code
                  message: message
                subErrors:
                - capabilities:
                  - acceptExternalFunding
                  - acceptExternalFunding
                  code: code
                  message: message
                  type: dataMissing
                  remediatingActions:
                  - code: code
                    message: message
                  - code: code
                    message: message
                - capabilities:
                  - acceptExternalFunding
                  - acceptExternalFunding
                  code: code
                  message: message
                  type: dataMissing
                  remediatingActions:
                  - code: code
                    message: message
                  - code: code
                    message: message
              entity:
                owner:
                  documents:
                  - documents
                  - documents
                  id: id
                  type: BankAccount
                documents:
                - documents
                - documents
                id: id
                type: BankAccount
        individual:
          identificationData:
            expiryDate: expiryDate
            issuerCountry: issuerCountry
            issuerState: issuerState
            number: number
            nationalIdExempt: true
            type: nationalIdNumber
            cardNumber: cardNumber
          nationality: nationality
          phone:
            number: number
            countryCode: countryCode
            type: type
          residentialAddress:
            country: country
            stateOrProvince: stateOrProvince
            city: city
            street: street
            postalCode: postalCode
            street2: street2
          name:
            firstName: firstName
            lastName: lastName
            infix: infix
          birthData:
            dateOfBirth: dateOfBirth
          webData:
            webAddressId: webAddressId
            webAddress: webAddress
          email: email
        organization:
          taxExempt: true
          description: description
          type: associationIncorporated
          stockData:
            stockNumber: stockNumber
            tickerSymbol: tickerSymbol
            marketIdentifier: marketIdentifier
          legalName: legalName
          registeredAddress:
            country: country
            stateOrProvince: stateOrProvince
            city: city
            street: street
            postalCode: postalCode
            street2: street2
          doingBusinessAs: doingBusinessAs
          phone:
            number: number
            countryCode: countryCode
            type: type
          registrationNumber: registrationNumber
          taxId: taxId
          taxIdAbsenceReason: industryExemption
          webData:
            webAddressId: webAddressId
            webAddress: webAddress
          principalPlaceOfBusiness:
            country: country
            stateOrProvince: stateOrProvince
            city: city
            street: street
            postalCode: postalCode
            street2: street2
          email: email
        verificationPlan: verificationPlan
        entityAssociations:
        - associatorId: associatorId
          legalEntityId: legalEntityId
          entityType: entityType
          jobTitle: jobTitle
          name: name
          type: definedBeneficiary
          settlorExemptionReason:
          - settlorExemptionReason
          - settlorExemptionReason
        - associatorId: associatorId
          legalEntityId: legalEntityId
          entityType: entityType
          jobTitle: jobTitle
          name: name
          type: definedBeneficiary
          settlorExemptionReason:
          - settlorExemptionReason
          - settlorExemptionReason
        type: individual
      properties:
        capabilities:
          additionalProperties:
            $ref: '#/components/schemas/LegalEntityCapability'
          description: "Contains key-value pairs that specify the actions that the\
            \ legal entity can do in your platform.The key is a capability required\
            \ for your integration. For example, **issueCard** for Issuing.The value\
            \ is an object containing the settings for the capability."
          readOnly: true
          title: capabilities
        entityAssociations:
          description: |-
            List of legal entities associated with the current legal entity.
            For example, ultimate beneficial owners associated with an organization through ownership or control, or as signatories.
          items:
            $ref: '#/components/schemas/LegalEntityAssociation'
          title: entityAssociations
          type: array
        individual:
          $ref: '#/components/schemas/Individual'
        organization:
          $ref: '#/components/schemas/Organization'
        reference:
          description: "Your reference for the legal entity, maximum 150 characters."
          maxLength: 150
          title: reference
          type: string
        trust:
          $ref: '#/components/schemas/Trust'
        type:
          description: |-
            The type of legal entity.

             Possible values: **individual** or **organization**
          enum:
          - individual
          - organization
          title: type
          type: string
        unincorporatedPartnership:
          $ref: '#/components/schemas/UnincorporatedPartnership'
        verificationPlan:
          description: "A key-value pair that specifies the [verification process](https://docs.adyen.com/marketplaces-and-platforms/collect-verification-details/)\
            \ for a legal entity. Set to **upfront** for [upfront verification](https://docs.adyen.com/marketplaces-and-platforms/collect-verification-details#upfront)."
          title: verificationPlan
          type: string
      title: LegalEntityInfo
    LegalEntityInfoRequiredType:
      example:
        reference: reference
        trust:
          registeredAddress:
            country: country
            stateOrProvince: stateOrProvince
            city: city
            street: street
            postalCode: postalCode
            street2: street2
          doingBusinessAs: doingBusinessAs
          registrationNumber: registrationNumber
          name: name
          principalPlaceOfBusiness:
            country: country
            stateOrProvince: stateOrProvince
            city: city
            street: street
            postalCode: postalCode
            street2: street2
          type: cashManagementTrust
          vatAbsenceReason: industryExemption
          countryOfGoverningLaw: countryOfGoverningLaw
          vatNumber: vatNumber
        unincorporatedPartnership:
          registeredAddress:
            country: country
            stateOrProvince: stateOrProvince
            city: city
            street: street
            postalCode: postalCode
            street2: street2
          doingBusinessAs: doingBusinessAs
          registrationNumber: registrationNumber
          name: name
          principalPlaceOfBusiness:
            country: country
            stateOrProvince: stateOrProvince
            city: city
            street: street
            postalCode: postalCode
            street2: street2
          type: limitedPartnership
          vatAbsenceReason: industryExemption
          countryOfGoverningLaw: countryOfGoverningLaw
          vatNumber: vatNumber
        capabilities:
          key:
            requested: true
            verificationStatus: verificationStatus
            allowed: true
            allowedSettings:
              authorizedCardUsers: true
              interval: daily
              fundingSource:
              - credit
              - credit
              maxAmount:
                currency: currency
                value: 0
              amountPerIndustry:
                key:
                  currency: currency
                  value: 0
            allowedLevel: high
            requestedLevel: high
            requestedSettings:
              authorizedCardUsers: true
              interval: daily
              fundingSource:
              - credit
              - credit
              maxAmount:
                currency: currency
                value: 0
              amountPerIndustry:
                key:
                  currency: currency
                  value: 0
            problems:
            - verificationErrors:
              - capabilities:
                - acceptExternalFunding
                - acceptExternalFunding
                code: code
                message: message
                type: dataMissing
                remediatingActions:
                - code: code
                  message: message
                - code: code
                  message: message
                subErrors:
                - capabilities:
                  - acceptExternalFunding
                  - acceptExternalFunding
                  code: code
                  message: message
                  type: dataMissing
                  remediatingActions:
                  - code: code
                    message: message
                  - code: code
                    message: message
                - capabilities:
                  - acceptExternalFunding
                  - acceptExternalFunding
                  code: code
                  message: message
                  type: dataMissing
                  remediatingActions:
                  - code: code
                    message: message
                  - code: code
                    message: message
              - capabilities:
                - acceptExternalFunding
                - acceptExternalFunding
                code: code
                message: message
                type: dataMissing
                remediatingActions:
                - code: code
                  message: message
                - code: code
                  message: message
                subErrors:
                - capabilities:
                  - acceptExternalFunding
                  - acceptExternalFunding
                  code: code
                  message: message
                  type: dataMissing
                  remediatingActions:
                  - code: code
                    message: message
                  - code: code
                    message: message
                - capabilities:
                  - acceptExternalFunding
                  - acceptExternalFunding
                  code: code
                  message: message
                  type: dataMissing
                  remediatingActions:
                  - code: code
                    message: message
                  - code: code
                    message: message
              entity:
                owner:
                  documents:
                  - documents
                  - documents
                  id: id
                  type: BankAccount
                documents:
                - documents
                - documents
                id: id
                type: BankAccount
            - verificationErrors:
              - capabilities:
                - acceptExternalFunding
                - acceptExternalFunding
                code: code
                message: message
                type: dataMissing
                remediatingActions:
                - code: code
                  message: message
                - code: code
                  message: message
                subErrors:
                - capabilities:
                  - acceptExternalFunding
                  - acceptExternalFunding
                  code: code
                  message: message
                  type: dataMissing
                  remediatingActions:
                  - code: code
                    message: message
                  - code: code
                    message: message
                - capabilities:
                  - acceptExternalFunding
                  - acceptExternalFunding
                  code: code
                  message: message
                  type: dataMissing
                  remediatingActions:
                  - code: code
                    message: message
                  - code: code
                    message: message
              - capabilities:
                - acceptExternalFunding
                - acceptExternalFunding
                code: code
                message: message
                type: dataMissing
                remediatingActions:
                - code: code
                  message: message
                - code: code
                  message: message
                subErrors:
                - capabilities:
                  - acceptExternalFunding
                  - acceptExternalFunding
                  code: code
                  message: message
                  type: dataMissing
                  remediatingActions:
                  - code: code
                    message: message
                  - code: code
                    message: message
                - capabilities:
                  - acceptExternalFunding
                  - acceptExternalFunding
                  code: code
                  message: message
                  type: dataMissing
                  remediatingActions:
                  - code: code
                    message: message
                  - code: code
                    message: message
              entity:
                owner:
                  documents:
                  - documents
                  - documents
                  id: id
                  type: BankAccount
                documents:
                - documents
                - documents
                id: id
                type: BankAccount
        individual:
          identificationData:
            expiryDate: expiryDate
            issuerCountry: issuerCountry
            issuerState: issuerState
            number: number
            nationalIdExempt: true
            type: nationalIdNumber
            cardNumber: cardNumber
          nationality: nationality
          phone:
            number: number
            countryCode: countryCode
            type: type
          residentialAddress:
            country: country
            stateOrProvince: stateOrProvince
            city: city
            street: street
            postalCode: postalCode
            street2: street2
          name:
            firstName: firstName
            lastName: lastName
            infix: infix
          birthData:
            dateOfBirth: dateOfBirth
          webData:
            webAddressId: webAddressId
            webAddress: webAddress
          email: email
        organization:
          taxExempt: true
          description: description
          type: associationIncorporated
          stockData:
            stockNumber: stockNumber
            tickerSymbol: tickerSymbol
            marketIdentifier: marketIdentifier
          legalName: legalName
          registeredAddress:
            country: country
            stateOrProvince: stateOrProvince
            city: city
            street: street
            postalCode: postalCode
            street2: street2
          doingBusinessAs: doingBusinessAs
          phone:
            number: number
            countryCode: countryCode
            type: type
          registrationNumber: registrationNumber
          taxId: taxId
          taxIdAbsenceReason: industryExemption
          webData:
            webAddressId: webAddressId
            webAddress: webAddress
          principalPlaceOfBusiness:
            country: country
            stateOrProvince: stateOrProvince
            city: city
            street: street
            postalCode: postalCode
            street2: street2
          email: email
        verificationPlan: verificationPlan
        entityAssociations:
        - associatorId: associatorId
          legalEntityId: legalEntityId
          entityType: entityType
          jobTitle: jobTitle
          name: name
          type: definedBeneficiary
          settlorExemptionReason:
          - settlorExemptionReason
          - settlorExemptionReason
        - associatorId: associatorId
          legalEntityId: legalEntityId
          entityType: entityType
          jobTitle: jobTitle
          name: name
          type: definedBeneficiary
          settlorExemptionReason:
          - settlorExemptionReason
          - settlorExemptionReason
        type: individual
      properties:
        capabilities:
          additionalProperties:
            $ref: '#/components/schemas/LegalEntityCapability'
          description: "Contains key-value pairs that specify the actions that the\
            \ legal entity can do in your platform.The key is a capability required\
            \ for your integration. For example, **issueCard** for Issuing.The value\
            \ is an object containing the settings for the capability."
          readOnly: true
          title: capabilities
        entityAssociations:
          description: |-
            List of legal entities associated with the current legal entity.
            For example, ultimate beneficial owners associated with an organization through ownership or control, or as signatories.
          items:
            $ref: '#/components/schemas/LegalEntityAssociation'
          title: entityAssociations
          type: array
        individual:
          $ref: '#/components/schemas/Individual'
        organization:
          $ref: '#/components/schemas/Organization'
        reference:
          description: "Your reference for the legal entity, maximum 150 characters."
          maxLength: 150
          title: reference
          type: string
        trust:
          $ref: '#/components/schemas/Trust'
        type:
          description: |-
            The type of legal entity.

             Possible values: **individual** or **organization**
          enum:
          - individual
          - organization
          title: type
          type: string
        unincorporatedPartnership:
          $ref: '#/components/schemas/UnincorporatedPartnership'
        verificationPlan:
          description: "A key-value pair that specifies the [verification process](https://docs.adyen.com/marketplaces-and-platforms/collect-verification-details/)\
            \ for a legal entity. Set to **upfront** for [upfront verification](https://docs.adyen.com/marketplaces-and-platforms/collect-verification-details#upfront)."
          title: verificationPlan
          type: string
      required:
      - type
      title: LegalEntityInfoRequiredType
    Name:
      example:
        firstName: firstName
        lastName: lastName
        infix: infix
      properties:
        firstName:
          description: The individual's first name.
          title: firstName
          type: string
        infix:
          description: "The infix in the individual's name, if any."
          title: infix
          type: string
        lastName:
          description: The individual's last name.
          title: lastName
          type: string
      required:
      - firstName
      - lastName
      title: Name
    OnboardingLink:
      example:
        url: url
      properties:
        url:
          description: |-
            The URL of the hosted onboarding page where you need to redirect your user. This URL expires after 4 minutes and can only be used once.

            If the link expires, you need to create a new link.
          title: url
          type: string
      title: OnboardingLink
    OnboardingLinkInfo:
      example:
        settings:
          key: true
        redirectUrl: redirectUrl
        themeId: themeId
        locale: locale
      properties:
        locale:
          description: "The language that will be used for the page, specified by\
            \ a combination of two letter [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes)\
            \ language and [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)\
            \ country codes. See [possible values](https://docs.adyen.com/marketplaces-and-platforms/collect-verification-details/hosted#supported-languages).\
            \ \n\nIf not specified in the request or if the language is not supported,\
            \ the page uses the browser language. If the browser language is not supported,\
            \ the page uses **en-US** by default."
          title: locale
          type: string
        redirectUrl:
          description: The URL where the user is redirected after they complete hosted
            onboarding.
          title: redirectUrl
          type: string
        settings:
          additionalProperties:
            type: boolean
          description: |+
            Boolean key-value pairs indicating the settings for the hosted onboarding page. The keys are the settings.

            Possible keys:

            By default, these values are set to **true**. Set to **false** to not allow the action.

            - **changeLegalEntityType**: The user can change their legal entity type.

            - **editPrefilledCountry**: The user can change the country of their legal entity's address, for example the registered address of an organization.

            By default, these values are set to **false**. Set to **true** to allow the action.

            - **allowBankAccountFormatSelection**: The user can select the format for their payout account if applicable.

            - **allowIntraRegionCrossBorderPayout**: The user can select a payout account in a different EU/EEA country than the country of their legal entity.

            By default, these value are set to **false**. Set the following values to **true** to require the user to sign PCI questionnaires based on their sales channels. The user must sign PCI questionnaires for all relevant sales channels.

            - **requirePciSignEcommerce**

            - **requirePciSignPos**

            - **requirePciSignEcomMoto**

            - **requirePciSignPosMoto**

          title: settings
        themeId:
          description: The unique identifier of the hosted onboarding theme.
          title: themeId
          type: string
      title: OnboardingLinkInfo
    OnboardingTheme:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        description: description
        id: id
        properties:
          key: properties
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        createdAt:
          description: The creation date of the theme.
          format: date-time
          title: createdAt
          type: string
        description:
          description: The description of the theme.
          title: description
          type: string
        id:
          description: The unique identifier of the theme.
          title: id
          type: string
        properties:
          additionalProperties:
            type: string
          description: The properties of the theme.
          title: properties
        updatedAt:
          description: The date when the theme was last updated.
          format: date-time
          title: updatedAt
          type: string
      required:
      - createdAt
      - id
      - properties
      title: OnboardingTheme
    OnboardingThemes:
      example:
        next: next
        themes:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          description: description
          id: id
          properties:
            key: properties
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - createdAt: 2000-01-23T04:56:07.000+00:00
          description: description
          id: id
          properties:
            key: properties
          updatedAt: 2000-01-23T04:56:07.000+00:00
        previous: previous
      properties:
        next:
          description: The next page. Only present if there is a next page.
          title: next
          type: string
        previous:
          description: The previous page. Only present if there is a previous page.
          title: previous
          type: string
        themes:
          description: List of onboarding themes.
          items:
            $ref: '#/components/schemas/OnboardingTheme'
          title: themes
          type: array
      required:
      - themes
      title: OnboardingThemes
    Organization:
      example:
        taxExempt: true
        description: description
        type: associationIncorporated
        stockData:
          stockNumber: stockNumber
          tickerSymbol: tickerSymbol
          marketIdentifier: marketIdentifier
        legalName: legalName
        registeredAddress:
          country: country
          stateOrProvince: stateOrProvince
          city: city
          street: street
          postalCode: postalCode
          street2: street2
        doingBusinessAs: doingBusinessAs
        phone:
          number: number
          countryCode: countryCode
          type: type
        registrationNumber: registrationNumber
        taxId: taxId
        taxIdAbsenceReason: industryExemption
        webData:
          webAddressId: webAddressId
          webAddress: webAddress
        principalPlaceOfBusiness:
          country: country
          stateOrProvince: stateOrProvince
          city: city
          street: street
          postalCode: postalCode
          street2: street2
        email: email
      properties:
        description:
          description: Your description for the organization.
          title: description
          type: string
        doingBusinessAs:
          description: "The organization's trading name, if different from the registered\
            \ legal name."
          title: doingBusinessAs
          type: string
        email:
          description: The email address of the legal entity.
          title: email
          type: string
        legalName:
          description: The organization's legal name.
          title: legalName
          type: string
        phone:
          $ref: '#/components/schemas/PhoneNumber'
        principalPlaceOfBusiness:
          $ref: '#/components/schemas/Address'
        registeredAddress:
          $ref: '#/components/schemas/Address'
        registrationNumber:
          description: The organization's registration number.
          title: registrationNumber
          type: string
        stockData:
          $ref: '#/components/schemas/StockData'
        taxExempt:
          description: |+
            Indicates whether the legal entity is exempt from tax. When **true**, the `taxIdAbsenceReason` must be provided.

          title: taxExempt
          type: boolean
        taxId:
          description: The organization's tax identifier.
          title: taxId
          type: string
        taxIdAbsenceReason:
          description: |-
            The reason the organization has not provided a tax identifier.

            Possible values: **industryExemption**, **belowTaxThreshold**.
          enum:
          - industryExemption
          - belowTaxThreshold
          title: taxIdAbsenceReason
          type: string
        type:
          description: |-
            Type of organization.

            Possible values: **associationIncorporated**, **governmentalOrganization**, **listedPublicCompany**, **nonProfit**, **partnershipIncorporated**, **privateCompany**.
          enum:
          - associationIncorporated
          - governmentalOrganization
          - listedPublicCompany
          - nonProfit
          - partnershipIncorporated
          - privateCompany
          title: type
          type: string
        webData:
          $ref: '#/components/schemas/WebData'
      required:
      - legalName
      - registeredAddress
      title: Organization
    OwnerEntity:
      example:
        id: id
        type: type
      properties:
        id:
          description: "Unique identifier of the resource that owns the document.\
            \ For `type` **legalEntity**, this value is the unique identifier of the\
            \ [legal entity](https://docs.adyen.com/api-explorer/legalentity/latest/post/legalEntities#responses-200-id).\
            \ For `type` **bankAccount**, this value is the unique identifier of the\
            \ [transfer instrument](https://docs.adyen.com/api-explorer/legalentity/latest/post/transferInstruments#responses-200-id)."
          title: id
          type: string
        type:
          description: |-
            Type of resource that owns the document.

            Possible values: **legalEntity**, **bankAccount**.
          title: type
          type: string
      required:
      - id
      - type
      title: OwnerEntity
    PciDocumentInfo:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        validUntil: 2000-01-23T04:56:07.000+00:00
        id: id
      properties:
        createdAt:
          description: "The date the questionnaire was created, in ISO 8601 extended\
            \ format. For example, 2022-12-18T10:15:30+01:00"
          format: date-time
          title: createdAt
          type: string
        id:
          description: The unique identifier of the signed questionnaire.
          title: id
          type: string
        validUntil:
          description: "The expiration date of the questionnaire, in ISO 8601 extended\
            \ format. For example, 2022-12-18T10:15:30+01:00"
          format: date-time
          title: validUntil
          type: string
      title: PciDocumentInfo
    PciSigningRequest:
      example:
        signedBy: signedBy
        pciTemplateReferences:
        - pciTemplateReferences
        - pciTemplateReferences
      properties:
        pciTemplateReferences:
          description: The array of Adyen-generated unique identifiers for the questionnaires.
          items:
            type: string
          title: pciTemplateReferences
          type: array
        signedBy:
          description: "The [legal entity ID](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/legalEntities__resParam_id)\
            \ of the individual who signs the PCI questionnaire."
          title: signedBy
          type: string
      required:
      - pciTemplateReferences
      - signedBy
      title: PciSigningRequest
    PciSigningResponse:
      example:
        pciQuestionnaireIds:
        - pciQuestionnaireIds
        - pciQuestionnaireIds
        signedBy: signedBy
      properties:
        pciQuestionnaireIds:
          description: The unique identifiers of the signed PCI documents.
          items:
            type: string
          title: pciQuestionnaireIds
          type: array
        signedBy:
          description: "The [legal entity ID](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/legalEntities__resParam_id)\
            \ of the individual who signed the PCI questionnaire."
          title: signedBy
          type: string
      title: PciSigningResponse
    PhoneNumber:
      example:
        number: number
        countryCode: countryCode
        type: type
      properties:
        countryCode:
          description: "The two-letter [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)\
            \ country code. For example, **US** or **NL**."
          title: countryCode
          type: string
        number:
          description: The phone number.
          title: number
          type: string
        type:
          description: "The type of phone number.\n Possible values: **mobile**, **landline**,\
            \ **sip**, **fax.** "
          title: type
          type: string
      required:
      - number
      - type
      title: PhoneNumber
    RemediatingAction:
      example:
        code: code
        message: message
      properties:
        code:
          title: code
          type: string
        message:
          title: message
          type: string
      title: RemediatingAction
    ServiceError:
      example:
        errorType: errorType
        errorCode: errorCode
        message: message
        pspReference: pspReference
        status: 0
      properties:
        errorCode:
          description: The error code mapped to the error message.
          title: errorCode
          type: string
        errorType:
          description: The category of the error.
          title: errorType
          type: string
        message:
          description: A short explanation of the issue.
          title: message
          type: string
        pspReference:
          description: The PSP reference of the payment.
          title: pspReference
          type: string
        status:
          description: The HTTP response status.
          format: int32
          title: status
          type: integer
      title: ServiceError
    SourceOfFunds:
      example:
        description: description
        adyenProcessedFunds: true
        type: business
        acquiringBusinessLineId: acquiringBusinessLineId
      properties:
        acquiringBusinessLineId:
          description: The unique identifier of the business line that will be the
            source of funds.This must be a business line for a **receivePayments**
            or **receiveFromPlatformPayments** capability.
          title: acquiringBusinessLineId
          type: string
        adyenProcessedFunds:
          description: "Indicates whether the funds are coming from transactions processed\
            \ by Adyen. If **false**, a `description` is required."
          title: adyenProcessedFunds
          type: boolean
        description:
          description: "Text describing the source of funds. For example, for `type`\
            \ **business**, provide a description of where the business transactions\
            \ come from, such as payments through bank transfer. Required when `adyenProcessedFunds`\
            \ is **false**."
          title: description
          type: string
        type:
          description: "The type of the source of funds. Possible value: **business**."
          enum:
          - business
          title: type
          type: string
      title: SourceOfFunds
    StockData:
      example:
        stockNumber: stockNumber
        tickerSymbol: tickerSymbol
        marketIdentifier: marketIdentifier
      properties:
        marketIdentifier:
          description: "The four-digit [Market Identifier Code](https://en.wikipedia.org/wiki/Market_Identifier_Code)\
            \ of the stock market where the organization's stocks are traded."
          title: marketIdentifier
          type: string
        stockNumber:
          description: "The 12-digit International Securities Identification Number\
            \ (ISIN) of the company, without dashes (-)."
          title: stockNumber
          type: string
        tickerSymbol:
          description: The stock ticker symbol.
          title: tickerSymbol
          type: string
      title: StockData
    TermsOfServiceAcceptanceInfo:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        acceptedFor: acceptedFor
        acceptedBy: acceptedBy
        id: id
        type: adyenAccount
      properties:
        acceptedBy:
          description: The unique identifier of the user that accepted the Terms of
            Service.
          title: acceptedBy
          type: string
        acceptedFor:
          description: The unique identifier of the legal entity for which the Terms
            of Service are accepted.
          title: acceptedFor
          type: string
        createdAt:
          description: The date when the Terms of Service were accepted.
          format: date-time
          title: createdAt
          type: string
        id:
          description: An Adyen-generated reference for the accepted Terms of Service.
          title: id
          type: string
        type:
          description: |+
            The type of Terms of Service.

            Possible values:
            *  **adyenForPlatformsManage**
            *  **adyenIssuing**
            *  **adyenForPlatformsAdvanced**
            *  **adyenCapital**
            *  **adyenAccount**
            *  **adyenCard**
            *  **adyenFranchisee**
            *  **adyenPccr**

          enum:
          - adyenAccount
          - adyenCapital
          - adyenCard
          - adyenForPlatformsAdvanced
          - adyenForPlatformsManage
          - adyenFranchisee
          - adyenIssuing
          - adyenPccr
          title: type
          type: string
      title: TermsOfServiceAcceptanceInfo
    TransferInstrument:
      example:
        bankAccount:
          branchCode: branchCode
          bankCode: bankCode
          bankBicSwift: bankBicSwift
          countryCode: countryCode
          accountType: accountType
          iban: iban
          trustedSource: true
          bankName: bankName
          accountNumber: accountNumber
          currencyCode: currencyCode
          bankCity: bankCity
          checkCode: checkCode
        documents:
        - id: id
        - id: id
        legalEntityId: legalEntityId
        id: id
        type: bankAccount
      properties:
        bankAccount:
          $ref: '#/components/schemas/BankAccountInfo'
        documents:
          description: List of documents uploaded for the transfer instrument.
          items:
            $ref: '#/components/schemas/EntityReference'
          title: documents
          type: array
          x-deprecatedInVersion: "1"
        id:
          description: The unique identifier of the transfer instrument.
          readOnly: true
          title: id
          type: string
        legalEntityId:
          description: "The unique identifier of the [legal entity](https://docs.adyen.com/api-explorer/legalentity/latest/post/legalEntities#responses-200-id)\
            \ that owns the transfer instrument."
          title: legalEntityId
          type: string
        type:
          description: |-
            The type of transfer instrument.

            Possible value: **bankAccount**.
          enum:
          - bankAccount
          - recurringDetail
          title: type
          type: string
      required:
      - bankAccount
      - id
      - legalEntityId
      - type
      title: TransferInstrument
    TransferInstrumentInfo:
      example:
        bankAccount:
          branchCode: branchCode
          bankCode: bankCode
          bankBicSwift: bankBicSwift
          countryCode: countryCode
          accountType: accountType
          iban: iban
          trustedSource: true
          bankName: bankName
          accountNumber: accountNumber
          currencyCode: currencyCode
          bankCity: bankCity
          checkCode: checkCode
        legalEntityId: legalEntityId
        type: bankAccount
      properties:
        bankAccount:
          $ref: '#/components/schemas/BankAccountInfo'
        legalEntityId:
          description: "The unique identifier of the [legal entity](https://docs.adyen.com/api-explorer/legalentity/latest/post/legalEntities#responses-200-id)\
            \ that owns the transfer instrument."
          title: legalEntityId
          type: string
        type:
          description: |-
            The type of transfer instrument.

            Possible value: **bankAccount**.
          enum:
          - bankAccount
          - recurringDetail
          title: type
          type: string
      required:
      - bankAccount
      - legalEntityId
      - type
      title: TransferInstrumentInfo
    TransferInstrumentReference:
      example:
        trustedSource: true
        accountIdentifier: accountIdentifier
        realLastFour: realLastFour
        id: id
      properties:
        accountIdentifier:
          description: The masked IBAN or bank account number.
          title: accountIdentifier
          type: string
        id:
          description: The unique identifier of the resource.
          title: id
          type: string
        realLastFour:
          description: "Four last digits of the bank account number. If the transfer\
            \ instrument is created using [instant bank account verification](https://docs.adyen.com/release-notes/platforms-and-financial-products#releaseNote=2023-05-08-hosted-onboarding),\
            \ and it is a virtual bank account, these digits may be different from\
            \ the last four digits of the masked account number."
          title: realLastFour
          type: string
        trustedSource:
          description: "Identifies if the bank account was created through [instant\
            \ bank verification](https://docs.adyen.com/release-notes/platforms-and-financial-products#releaseNote=2023-05-08-hosted-onboarding)."
          readOnly: true
          title: trustedSource
          type: boolean
      required:
      - accountIdentifier
      - id
      title: TransferInstrumentReference
    Trust:
      example:
        registeredAddress:
          country: country
          stateOrProvince: stateOrProvince
          city: city
          street: street
          postalCode: postalCode
          street2: street2
        doingBusinessAs: doingBusinessAs
        registrationNumber: registrationNumber
        name: name
        principalPlaceOfBusiness:
          country: country
          stateOrProvince: stateOrProvince
          city: city
          street: street
          postalCode: postalCode
          street2: street2
        type: cashManagementTrust
        vatAbsenceReason: industryExemption
        countryOfGoverningLaw: countryOfGoverningLaw
        vatNumber: vatNumber
      properties:
        countryOfGoverningLaw:
          description: "The two-character [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)\
            \ country code of the governing country."
          title: countryOfGoverningLaw
          type: string
        doingBusinessAs:
          description: "The registered name, if different from the `name`."
          title: doingBusinessAs
          type: string
        name:
          description: The legal name.
          title: name
          type: string
        principalPlaceOfBusiness:
          $ref: '#/components/schemas/Address'
        registeredAddress:
          $ref: '#/components/schemas/Address'
        registrationNumber:
          description: The registration number.
          title: registrationNumber
          type: string
        type:
          description: |-
            Type of trust.

            Possible values for Australian trusts: **cashManagementTrust**, **corporateUnitTrust**, **deceasedEstate**, **discretionaryInvestmentTrust**, **discretionaryServicesManagementTrust**, **discretionaryTradingTrust**, **firstHomeSaverAccountsTrust**, **fixedTrust**, **fixedUnitTrust**, **hybridTrust**, **listedPublicUnitTrust**, **otherTrust**, **pooledSuperannuationTrust**, **publicTradingTrust**, **unlistedPublicUnitTrust**.
          enum:
          - cashManagementTrust
          - corporateUnitTrust
          - deceasedEstate
          - discretionaryInvestmentTrust
          - discretionaryServicesManagementTrust
          - discretionaryTradingTrust
          - firstHomeSaverAccountsTrust
          - fixedTrust
          - fixedUnitTrust
          - hybridTrust
          - listedPublicUnitTrust
          - otherTrust
          - pooledSuperannuationTrust
          - publicTradingTrust
          - unlistedPublicUnitTrust
          title: type
          type: string
        vatAbsenceReason:
          description: |-
            The reason for not providing a VAT number.

            Possible values: **industryExemption**, **belowTaxThreshold**.
          enum:
          - industryExemption
          - belowTaxThreshold
          title: vatAbsenceReason
          type: string
        vatNumber:
          description: The VAT number.
          title: vatNumber
          type: string
      required:
      - countryOfGoverningLaw
      - name
      - registeredAddress
      - type
      title: Trust
    UnincorporatedPartnership:
      example:
        registeredAddress:
          country: country
          stateOrProvince: stateOrProvince
          city: city
          street: street
          postalCode: postalCode
          street2: street2
        doingBusinessAs: doingBusinessAs
        registrationNumber: registrationNumber
        name: name
        principalPlaceOfBusiness:
          country: country
          stateOrProvince: stateOrProvince
          city: city
          street: street
          postalCode: postalCode
          street2: street2
        type: limitedPartnership
        vatAbsenceReason: industryExemption
        countryOfGoverningLaw: countryOfGoverningLaw
        vatNumber: vatNumber
      properties:
        countryOfGoverningLaw:
          description: "The two-character [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)\
            \ country code of the governing country."
          title: countryOfGoverningLaw
          type: string
        doingBusinessAs:
          description: "The registered name, if different from the `name`."
          title: doingBusinessAs
          type: string
        name:
          description: The legal name.
          title: name
          type: string
        principalPlaceOfBusiness:
          $ref: '#/components/schemas/Address'
        registeredAddress:
          $ref: '#/components/schemas/Address'
        registrationNumber:
          description: The registration number.
          title: registrationNumber
          type: string
        type:
          description: |+
            Type of Partnership.

            Possible values:
            *  **limitedPartnership**
            *  **generalPartnership**
            *  **familyPartnership**
            *  **commercialPartnership**
            *  **publicPartnership**
            *  **otherPartnership**
            *  **gbr**
            *  **gmbh**
            *  **kgaa**
            *  **cv**
            *  **vof**
            *  **maatschap**
            *  **privateFundLimitedPartnership**
            *  **businessTrustEntity**
            *  **businessPartnership**
            *  **limitedLiabilityPartnership**
            *  **eg**
            *  **cooperative**
            *  **vos**
            *  **comunidadDeBienes**
            *  **herenciaYacente**
            *  **comunidadDePropietarios**
            *  **sep**
            *  **sca**
            *  **bt**
            *  **kkt**
            *  **scs**
            *  **snc**

          enum:
          - limitedPartnership
          - generalPartnership
          - familyPartnership
          - commercialPartnership
          - publicPartnership
          - otherPartnership
          - gbr
          - gmbh
          - kgaa
          - cv
          - vof
          - maatschap
          - privateFundLimitedPartnership
          - businessTrustEntity
          - businessPartnership
          - limitedLiabilityPartnership
          - eg
          - cooperative
          - vos
          - comunidadDeBienes
          - herenciaYacente
          - comunidadDePropietarios
          - sep
          - sca
          - bt
          - kkt
          - scs
          - snc
          title: type
          type: string
        vatAbsenceReason:
          description: |-
            The reason for not providing a VAT number.

            Possible values: **industryExemption**, **belowTaxThreshold**.
          enum:
          - industryExemption
          - belowTaxThreshold
          title: vatAbsenceReason
          type: string
        vatNumber:
          description: The VAT number.
          title: vatNumber
          type: string
      required:
      - countryOfGoverningLaw
      - name
      - registeredAddress
      - type
      title: UnincorporatedPartnership
    VerificationError:
      example:
        capabilities:
        - acceptExternalFunding
        - acceptExternalFunding
        code: code
        message: message
        type: dataMissing
        remediatingActions:
        - code: code
          message: message
        - code: code
          message: message
        subErrors:
        - capabilities:
          - acceptExternalFunding
          - acceptExternalFunding
          code: code
          message: message
          type: dataMissing
          remediatingActions:
          - code: code
            message: message
          - code: code
            message: message
        - capabilities:
          - acceptExternalFunding
          - acceptExternalFunding
          code: code
          message: message
          type: dataMissing
          remediatingActions:
          - code: code
            message: message
          - code: code
            message: message
      properties:
        capabilities:
          description: "Contains key-value pairs that specify the actions that the\
            \ legal entity can do in your platform. The key is a capability required\
            \ for your integration. For example, **issueCard** for Issuing.The value\
            \ is an object containing the settings for the capability."
          items:
            enum:
            - acceptExternalFunding
            - acceptPspFunding
            - acceptTransactionInRestrictedCountries
            - acceptTransactionInRestrictedCountriesCommercial
            - acceptTransactionInRestrictedCountriesConsumer
            - acceptTransactionInRestrictedIndustries
            - acceptTransactionInRestrictedIndustriesCommercial
            - acceptTransactionInRestrictedIndustriesConsumer
            - acquiring
            - atmWithdrawal
            - atmWithdrawalCommercial
            - atmWithdrawalConsumer
            - atmWithdrawalInRestrictedCountries
            - atmWithdrawalInRestrictedCountriesCommercial
            - atmWithdrawalInRestrictedCountriesConsumer
            - authorisedPaymentInstrumentUser
            - getGrantOffers
            - issueBankAccount
            - issueCard
            - issueCardCommercial
            - issueCardConsumer
            - localAcceptance
            - payout
            - payoutToTransferInstrument
            - processing
            - receiveFromBalanceAccount
            - receiveFromPlatformPayments
            - receiveFromThirdParty
            - receiveFromTransferInstrument
            - receiveGrants
            - receivePayments
            - sendToBalanceAccount
            - sendToThirdParty
            - sendToTransferInstrument
            - thirdPartyFunding
            - useCard
            - useCardCommercial
            - useCardConsumer
            - useCardInRestrictedCountries
            - useCardInRestrictedCountriesCommercial
            - useCardInRestrictedCountriesConsumer
            - useCardInRestrictedIndustries
            - useCardInRestrictedIndustriesCommercial
            - useCardInRestrictedIndustriesConsumer
            - withdrawFromAtm
            - withdrawFromAtmCommercial
            - withdrawFromAtmConsumer
            - withdrawFromAtmInRestrictedCountries
            - withdrawFromAtmInRestrictedCountriesCommercial
            - withdrawFromAtmInRestrictedCountriesConsumer
            type: string
          title: capabilities
          type: array
        code:
          description: The general error code.
          title: code
          type: string
        message:
          description: The general error message.
          title: message
          type: string
        remediatingActions:
          description: An object containing possible solutions to fix a verification
            error.
          items:
            $ref: '#/components/schemas/RemediatingAction'
          title: remediatingActions
          type: array
        subErrors:
          description: An array containing more granular information about the cause
            of the verification error.
          items:
            $ref: '#/components/schemas/VerificationError-recursive'
          title: subErrors
          type: array
        type:
          description: The type of error.
          enum:
          - dataMissing
          - dataReview
          - invalidInput
          - pendingStatus
          - rejected
          title: type
          type: string
      title: VerificationError
    VerificationError-recursive:
      example:
        capabilities:
        - acceptExternalFunding
        - acceptExternalFunding
        code: code
        message: message
        type: dataMissing
        remediatingActions:
        - code: code
          message: message
        - code: code
          message: message
      properties:
        capabilities:
          description: "Contains key-value pairs that specify the actions that the\
            \ legal entity can do in your platform. The key is a capability required\
            \ for your integration. For example, **issueCard** for Issuing.The value\
            \ is an object containing the settings for the capability."
          items:
            enum:
            - acceptExternalFunding
            - acceptPspFunding
            - acceptTransactionInRestrictedCountries
            - acceptTransactionInRestrictedCountriesCommercial
            - acceptTransactionInRestrictedCountriesConsumer
            - acceptTransactionInRestrictedIndustries
            - acceptTransactionInRestrictedIndustriesCommercial
            - acceptTransactionInRestrictedIndustriesConsumer
            - acquiring
            - atmWithdrawal
            - atmWithdrawalCommercial
            - atmWithdrawalConsumer
            - atmWithdrawalInRestrictedCountries
            - atmWithdrawalInRestrictedCountriesCommercial
            - atmWithdrawalInRestrictedCountriesConsumer
            - authorisedPaymentInstrumentUser
            - getGrantOffers
            - issueBankAccount
            - issueCard
            - issueCardCommercial
            - issueCardConsumer
            - localAcceptance
            - payout
            - payoutToTransferInstrument
            - processing
            - receiveFromBalanceAccount
            - receiveFromPlatformPayments
            - receiveFromThirdParty
            - receiveFromTransferInstrument
            - receiveGrants
            - receivePayments
            - sendToBalanceAccount
            - sendToThirdParty
            - sendToTransferInstrument
            - thirdPartyFunding
            - useCard
            - useCardCommercial
            - useCardConsumer
            - useCardInRestrictedCountries
            - useCardInRestrictedCountriesCommercial
            - useCardInRestrictedCountriesConsumer
            - useCardInRestrictedIndustries
            - useCardInRestrictedIndustriesCommercial
            - useCardInRestrictedIndustriesConsumer
            - withdrawFromAtm
            - withdrawFromAtmCommercial
            - withdrawFromAtmConsumer
            - withdrawFromAtmInRestrictedCountries
            - withdrawFromAtmInRestrictedCountriesCommercial
            - withdrawFromAtmInRestrictedCountriesConsumer
            type: string
          title: capabilities
          type: array
        code:
          description: The general error code.
          title: code
          type: string
        message:
          description: The general error message.
          title: message
          type: string
        remediatingActions:
          description: An object containing possible solutions to fix a verification
            error.
          items:
            $ref: '#/components/schemas/RemediatingAction'
          title: remediatingActions
          type: array
        type:
          description: The type of error.
          enum:
          - dataMissing
          - dataReview
          - invalidInput
          - pendingStatus
          - rejected
          title: type
          type: string
      title: VerificationError-recursive
    WebData:
      example:
        webAddressId: webAddressId
        webAddress: webAddress
      properties:
        webAddress:
          description: The URL of the website or the app store URL.
          title: webAddress
          type: string
        webAddressId:
          description: The unique identifier of the web address.
          readOnly: true
          title: webAddressId
          type: string
      title: WebData
    WebDataExemption:
      example:
        reason: noOnlinePresence
      properties:
        reason:
          description: "The reason why the web data was not provided. Possible value:\
            \ **noOnlinePresence**."
          enum:
          - noOnlinePresence
          - notCollectedDuringOnboarding
          title: reason
          type: string
      title: WebDataExemption
  securitySchemes:
    ApiKeyAuth:
      in: header
      name: X-API-Key
      type: apiKey
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_ApiKeyAuth
    BasicAuth:
      scheme: basic
      type: http
      x-basicInfoFunc: openapi_server.controllers.security_controller.info_from_BasicAuth
