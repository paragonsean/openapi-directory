# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SourceOfFunds(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, acquiring_business_line_id: str=None, adyen_processed_funds: bool=None, description: str=None, type: str=None):
        """SourceOfFunds - a model defined in OpenAPI

        :param acquiring_business_line_id: The acquiring_business_line_id of this SourceOfFunds.
        :param adyen_processed_funds: The adyen_processed_funds of this SourceOfFunds.
        :param description: The description of this SourceOfFunds.
        :param type: The type of this SourceOfFunds.
        """
        self.openapi_types = {
            'acquiring_business_line_id': str,
            'adyen_processed_funds': bool,
            'description': str,
            'type': str
        }

        self.attribute_map = {
            'acquiring_business_line_id': 'acquiringBusinessLineId',
            'adyen_processed_funds': 'adyenProcessedFunds',
            'description': 'description',
            'type': 'type'
        }

        self._acquiring_business_line_id = acquiring_business_line_id
        self._adyen_processed_funds = adyen_processed_funds
        self._description = description
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SourceOfFunds':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SourceOfFunds of this SourceOfFunds.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def acquiring_business_line_id(self):
        """Gets the acquiring_business_line_id of this SourceOfFunds.

        The unique identifier of the business line that will be the source of funds.This must be a business line for a **receivePayments** or **receiveFromPlatformPayments** capability.

        :return: The acquiring_business_line_id of this SourceOfFunds.
        :rtype: str
        """
        return self._acquiring_business_line_id

    @acquiring_business_line_id.setter
    def acquiring_business_line_id(self, acquiring_business_line_id):
        """Sets the acquiring_business_line_id of this SourceOfFunds.

        The unique identifier of the business line that will be the source of funds.This must be a business line for a **receivePayments** or **receiveFromPlatformPayments** capability.

        :param acquiring_business_line_id: The acquiring_business_line_id of this SourceOfFunds.
        :type acquiring_business_line_id: str
        """

        self._acquiring_business_line_id = acquiring_business_line_id

    @property
    def adyen_processed_funds(self):
        """Gets the adyen_processed_funds of this SourceOfFunds.

        Indicates whether the funds are coming from transactions processed by Adyen. If **false**, a `description` is required.

        :return: The adyen_processed_funds of this SourceOfFunds.
        :rtype: bool
        """
        return self._adyen_processed_funds

    @adyen_processed_funds.setter
    def adyen_processed_funds(self, adyen_processed_funds):
        """Sets the adyen_processed_funds of this SourceOfFunds.

        Indicates whether the funds are coming from transactions processed by Adyen. If **false**, a `description` is required.

        :param adyen_processed_funds: The adyen_processed_funds of this SourceOfFunds.
        :type adyen_processed_funds: bool
        """

        self._adyen_processed_funds = adyen_processed_funds

    @property
    def description(self):
        """Gets the description of this SourceOfFunds.

        Text describing the source of funds. For example, for `type` **business**, provide a description of where the business transactions come from, such as payments through bank transfer. Required when `adyenProcessedFunds` is **false**.

        :return: The description of this SourceOfFunds.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this SourceOfFunds.

        Text describing the source of funds. For example, for `type` **business**, provide a description of where the business transactions come from, such as payments through bank transfer. Required when `adyenProcessedFunds` is **false**.

        :param description: The description of this SourceOfFunds.
        :type description: str
        """

        self._description = description

    @property
    def type(self):
        """Gets the type of this SourceOfFunds.

        The type of the source of funds. Possible value: **business**.

        :return: The type of this SourceOfFunds.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this SourceOfFunds.

        The type of the source of funds. Possible value: **business**.

        :param type: The type of this SourceOfFunds.
        :type type: str
        """
        allowed_values = ["business"]  # noqa: E501
        if type not in allowed_values:
            raise ValueError(
                "Invalid value for `type` ({0}), must be one of {1}"
                .format(type, allowed_values)
            )

        self._type = type
