# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.capability_problem_entity import CapabilityProblemEntity
from openapi_server.models.verification_error import VerificationError
from openapi_server import util


class CapabilityProblem(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, entity: CapabilityProblemEntity=None, verification_errors: List[VerificationError]=None):
        """CapabilityProblem - a model defined in OpenAPI

        :param entity: The entity of this CapabilityProblem.
        :param verification_errors: The verification_errors of this CapabilityProblem.
        """
        self.openapi_types = {
            'entity': CapabilityProblemEntity,
            'verification_errors': List[VerificationError]
        }

        self.attribute_map = {
            'entity': 'entity',
            'verification_errors': 'verificationErrors'
        }

        self._entity = entity
        self._verification_errors = verification_errors

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CapabilityProblem':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CapabilityProblem of this CapabilityProblem.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def entity(self):
        """Gets the entity of this CapabilityProblem.


        :return: The entity of this CapabilityProblem.
        :rtype: CapabilityProblemEntity
        """
        return self._entity

    @entity.setter
    def entity(self, entity):
        """Sets the entity of this CapabilityProblem.


        :param entity: The entity of this CapabilityProblem.
        :type entity: CapabilityProblemEntity
        """

        self._entity = entity

    @property
    def verification_errors(self):
        """Gets the verification_errors of this CapabilityProblem.


        :return: The verification_errors of this CapabilityProblem.
        :rtype: List[VerificationError]
        """
        return self._verification_errors

    @verification_errors.setter
    def verification_errors(self, verification_errors):
        """Sets the verification_errors of this CapabilityProblem.


        :param verification_errors: The verification_errors of this CapabilityProblem.
        :type verification_errors: List[VerificationError]
        """

        self._verification_errors = verification_errors
