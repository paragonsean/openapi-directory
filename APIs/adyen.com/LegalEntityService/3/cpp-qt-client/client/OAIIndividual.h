/**
 * Legal Entity Management API
 * The Legal Entity Management API enables you to manage legal entities that contain information required for verification.  ## Authentication Your Adyen contact will provide your API credential and an API key. To connect to the API, add an `X-API-Key` header with the API key as the value. For example:  ``` curl -H \"X-API-Key: YOUR_API_KEY\" \\ -H \"Content-Type: application/json\" \\ ... ``` Alternatively, you can use the username and password of your API credential to connect to the API using basic authentication. For example:  ``` curl -U \"ws_123456@Scope.Company_YOUR_COMPANY_ACCOUNT\":\"YourWsPassword\" \\ -H \"Content-Type: application/json\" \\ ... ``` ## Versioning The Legal Entity Management API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://kyc-test.adyen.com/lem/v3/legalEntities ``` >If you are using hosted onboarding and just beginning your integration, use v3 for your API requests. Otherwise, use v2.  ## Going live When going live, your Adyen contact will provide your API credential for the live environment. You can then use the API key or the username and password to send requests to `https://kyc-live.adyen.com/lem/v3`.  
 *
 * The version of the OpenAPI document: 3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIIndividual.h
 *
 * 
 */

#ifndef OAIIndividual_H
#define OAIIndividual_H

#include <QJsonObject>

#include "OAIAddress.h"
#include "OAIBirthData.h"
#include "OAIIdentificationData.h"
#include "OAIName.h"
#include "OAIPhoneNumber.h"
#include "OAITaxInformation.h"
#include "OAIWebData.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIBirthData;
class OAIIdentificationData;
class OAIName;
class OAIPhoneNumber;
class OAIAddress;
class OAITaxInformation;
class OAIWebData;

class OAIIndividual : public OAIObject {
public:
    OAIIndividual();
    OAIIndividual(QString json);
    ~OAIIndividual() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIBirthData getBirthData() const;
    void setBirthData(const OAIBirthData &birth_data);
    bool is_birth_data_Set() const;
    bool is_birth_data_Valid() const;

    QString getEmail() const;
    void setEmail(const QString &email);
    bool is_email_Set() const;
    bool is_email_Valid() const;

    OAIIdentificationData getIdentificationData() const;
    void setIdentificationData(const OAIIdentificationData &identification_data);
    bool is_identification_data_Set() const;
    bool is_identification_data_Valid() const;

    OAIName getName() const;
    void setName(const OAIName &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getNationality() const;
    void setNationality(const QString &nationality);
    bool is_nationality_Set() const;
    bool is_nationality_Valid() const;

    OAIPhoneNumber getPhone() const;
    void setPhone(const OAIPhoneNumber &phone);
    bool is_phone_Set() const;
    bool is_phone_Valid() const;

    OAIAddress getResidentialAddress() const;
    void setResidentialAddress(const OAIAddress &residential_address);
    bool is_residential_address_Set() const;
    bool is_residential_address_Valid() const;

    QList<OAITaxInformation> getTaxInformation() const;
    void setTaxInformation(const QList<OAITaxInformation> &tax_information);
    bool is_tax_information_Set() const;
    bool is_tax_information_Valid() const;

    Q_DECL_DEPRECATED OAIWebData getWebData() const;
    Q_DECL_DEPRECATED void setWebData(const OAIWebData &web_data);
    Q_DECL_DEPRECATED bool is_web_data_Set() const;
    Q_DECL_DEPRECATED bool is_web_data_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIBirthData m_birth_data;
    bool m_birth_data_isSet;
    bool m_birth_data_isValid;

    QString m_email;
    bool m_email_isSet;
    bool m_email_isValid;

    OAIIdentificationData m_identification_data;
    bool m_identification_data_isSet;
    bool m_identification_data_isValid;

    OAIName m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_nationality;
    bool m_nationality_isSet;
    bool m_nationality_isValid;

    OAIPhoneNumber m_phone;
    bool m_phone_isSet;
    bool m_phone_isValid;

    OAIAddress m_residential_address;
    bool m_residential_address_isSet;
    bool m_residential_address_isValid;

    QList<OAITaxInformation> m_tax_information;
    bool m_tax_information_isSet;
    bool m_tax_information_isValid;

    OAIWebData m_web_data;
    bool m_web_data_isSet;
    bool m_web_data_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIIndividual)

#endif // OAIIndividual_H
