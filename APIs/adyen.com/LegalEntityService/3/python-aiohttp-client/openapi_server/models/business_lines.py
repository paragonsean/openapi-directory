# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.business_line import BusinessLine
from openapi_server import util


class BusinessLines(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, business_lines: List[BusinessLine]=None):
        """BusinessLines - a model defined in OpenAPI

        :param business_lines: The business_lines of this BusinessLines.
        """
        self.openapi_types = {
            'business_lines': List[BusinessLine]
        }

        self.attribute_map = {
            'business_lines': 'businessLines'
        }

        self._business_lines = business_lines

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BusinessLines':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BusinessLines of this BusinessLines.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def business_lines(self):
        """Gets the business_lines of this BusinessLines.

        List of business lines.

        :return: The business_lines of this BusinessLines.
        :rtype: List[BusinessLine]
        """
        return self._business_lines

    @business_lines.setter
    def business_lines(self, business_lines):
        """Sets the business_lines of this BusinessLines.

        List of business lines.

        :param business_lines: The business_lines of this BusinessLines.
        :type business_lines: List[BusinessLine]
        """
        if business_lines is None:
            raise ValueError("Invalid value for `business_lines`, must not be `None`")

        self._business_lines = business_lines
