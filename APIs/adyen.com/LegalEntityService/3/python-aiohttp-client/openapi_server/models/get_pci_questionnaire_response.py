# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetPciQuestionnaireResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, content: str=None, created_at: datetime=None, id: str=None, valid_until: datetime=None):
        """GetPciQuestionnaireResponse - a model defined in OpenAPI

        :param content: The content of this GetPciQuestionnaireResponse.
        :param created_at: The created_at of this GetPciQuestionnaireResponse.
        :param id: The id of this GetPciQuestionnaireResponse.
        :param valid_until: The valid_until of this GetPciQuestionnaireResponse.
        """
        self.openapi_types = {
            'content': str,
            'created_at': datetime,
            'id': str,
            'valid_until': datetime
        }

        self.attribute_map = {
            'content': 'content',
            'created_at': 'createdAt',
            'id': 'id',
            'valid_until': 'validUntil'
        }

        self._content = content
        self._created_at = created_at
        self._id = id
        self._valid_until = valid_until

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetPciQuestionnaireResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetPciQuestionnaireResponse of this GetPciQuestionnaireResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def content(self):
        """Gets the content of this GetPciQuestionnaireResponse.

        The generated questionnaire in a base64 encoded format.

        :return: The content of this GetPciQuestionnaireResponse.
        :rtype: str
        """
        return self._content

    @content.setter
    def content(self, content):
        """Sets the content of this GetPciQuestionnaireResponse.

        The generated questionnaire in a base64 encoded format.

        :param content: The content of this GetPciQuestionnaireResponse.
        :type content: str
        """

        self._content = content

    @property
    def created_at(self):
        """Gets the created_at of this GetPciQuestionnaireResponse.

        The date the questionnaire was created, in ISO 8601 extended format. For example, 2022-12-18T10:15:30+01:00

        :return: The created_at of this GetPciQuestionnaireResponse.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this GetPciQuestionnaireResponse.

        The date the questionnaire was created, in ISO 8601 extended format. For example, 2022-12-18T10:15:30+01:00

        :param created_at: The created_at of this GetPciQuestionnaireResponse.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def id(self):
        """Gets the id of this GetPciQuestionnaireResponse.

        The unique identifier of the signed questionnaire.

        :return: The id of this GetPciQuestionnaireResponse.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this GetPciQuestionnaireResponse.

        The unique identifier of the signed questionnaire.

        :param id: The id of this GetPciQuestionnaireResponse.
        :type id: str
        """

        self._id = id

    @property
    def valid_until(self):
        """Gets the valid_until of this GetPciQuestionnaireResponse.

        The expiration date of the questionnaire, in ISO 8601 extended format. For example, 2022-12-18T10:15:30+01:00

        :return: The valid_until of this GetPciQuestionnaireResponse.
        :rtype: datetime
        """
        return self._valid_until

    @valid_until.setter
    def valid_until(self, valid_until):
        """Sets the valid_until of this GetPciQuestionnaireResponse.

        The expiration date of the questionnaire, in ISO 8601 extended format. For example, 2022-12-18T10:15:30+01:00

        :param valid_until: The valid_until of this GetPciQuestionnaireResponse.
        :type valid_until: datetime
        """

        self._valid_until = valid_until
