# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.capability_problem import CapabilityProblem
from openapi_server import util


class VerificationErrors(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, problems: List[CapabilityProblem]=None):
        """VerificationErrors - a model defined in OpenAPI

        :param problems: The problems of this VerificationErrors.
        """
        self.openapi_types = {
            'problems': List[CapabilityProblem]
        }

        self.attribute_map = {
            'problems': 'problems'
        }

        self._problems = problems

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VerificationErrors':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VerificationErrors of this VerificationErrors.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def problems(self):
        """Gets the problems of this VerificationErrors.

        List of the verification errors.

        :return: The problems of this VerificationErrors.
        :rtype: List[CapabilityProblem]
        """
        return self._problems

    @problems.setter
    def problems(self, problems):
        """Sets the problems of this VerificationErrors.

        List of the verification errors.

        :param problems: The problems of this VerificationErrors.
        :type problems: List[CapabilityProblem]
        """

        self._problems = problems
