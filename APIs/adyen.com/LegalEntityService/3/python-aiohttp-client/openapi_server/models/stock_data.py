# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class StockData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, market_identifier: str=None, stock_number: str=None, ticker_symbol: str=None):
        """StockData - a model defined in OpenAPI

        :param market_identifier: The market_identifier of this StockData.
        :param stock_number: The stock_number of this StockData.
        :param ticker_symbol: The ticker_symbol of this StockData.
        """
        self.openapi_types = {
            'market_identifier': str,
            'stock_number': str,
            'ticker_symbol': str
        }

        self.attribute_map = {
            'market_identifier': 'marketIdentifier',
            'stock_number': 'stockNumber',
            'ticker_symbol': 'tickerSymbol'
        }

        self._market_identifier = market_identifier
        self._stock_number = stock_number
        self._ticker_symbol = ticker_symbol

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StockData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StockData of this StockData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def market_identifier(self):
        """Gets the market_identifier of this StockData.

        The four-digit [Market Identifier Code](https://en.wikipedia.org/wiki/Market_Identifier_Code) of the stock market where the organization's stocks are traded.

        :return: The market_identifier of this StockData.
        :rtype: str
        """
        return self._market_identifier

    @market_identifier.setter
    def market_identifier(self, market_identifier):
        """Sets the market_identifier of this StockData.

        The four-digit [Market Identifier Code](https://en.wikipedia.org/wiki/Market_Identifier_Code) of the stock market where the organization's stocks are traded.

        :param market_identifier: The market_identifier of this StockData.
        :type market_identifier: str
        """

        self._market_identifier = market_identifier

    @property
    def stock_number(self):
        """Gets the stock_number of this StockData.

        The 12-digit International Securities Identification Number (ISIN) of the company, without dashes (-).

        :return: The stock_number of this StockData.
        :rtype: str
        """
        return self._stock_number

    @stock_number.setter
    def stock_number(self, stock_number):
        """Sets the stock_number of this StockData.

        The 12-digit International Securities Identification Number (ISIN) of the company, without dashes (-).

        :param stock_number: The stock_number of this StockData.
        :type stock_number: str
        """

        self._stock_number = stock_number

    @property
    def ticker_symbol(self):
        """Gets the ticker_symbol of this StockData.

        The stock ticker symbol.

        :return: The ticker_symbol of this StockData.
        :rtype: str
        """
        return self._ticker_symbol

    @ticker_symbol.setter
    def ticker_symbol(self, ticker_symbol):
        """Sets the ticker_symbol of this StockData.

        The stock ticker symbol.

        :param ticker_symbol: The ticker_symbol of this StockData.
        :type ticker_symbol: str
        """

        self._ticker_symbol = ticker_symbol
