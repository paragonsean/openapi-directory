/**
 * Legal Entity Management API
 * The Legal Entity Management API enables you to manage legal entities that contain information required for verification.  ## Authentication Your Adyen contact will provide your API credential and an API key. To connect to the API, add an `X-API-Key` header with the API key as the value. For example:  ``` curl -H \"X-API-Key: YOUR_API_KEY\" \\ -H \"Content-Type: application/json\" \\ ... ``` Alternatively, you can use the username and password of your API credential to connect to the API using basic authentication. For example:  ``` curl -U \"ws_123456@Scope.Company_YOUR_COMPANY_ACCOUNT\":\"YourWsPassword\" \\ -H \"Content-Type: application/json\" \\ ... ``` ## Versioning The Legal Entity Management API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://kyc-test.adyen.com/lem/v3/legalEntities ``` >If you are using hosted onboarding and just beginning your integration, use v3 for your API requests. Otherwise, use v2.  ## Going live When going live, your Adyen contact will provide your API credential for the live environment. You can then use the API key or the username and password to send requests to `https://kyc-live.adyen.com/lem/v3`.  
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AULocalAccountIdentification from './AULocalAccountIdentification';
import AdditionalBankIdentification from './AdditionalBankIdentification';
import CALocalAccountIdentification from './CALocalAccountIdentification';
import CZLocalAccountIdentification from './CZLocalAccountIdentification';
import DKLocalAccountIdentification from './DKLocalAccountIdentification';
import HKLocalAccountIdentification from './HKLocalAccountIdentification';
import HULocalAccountIdentification from './HULocalAccountIdentification';
import IbanAccountIdentification from './IbanAccountIdentification';
import NOLocalAccountIdentification from './NOLocalAccountIdentification';
import NZLocalAccountIdentification from './NZLocalAccountIdentification';
import NumberAndBicAccountIdentification from './NumberAndBicAccountIdentification';
import PLLocalAccountIdentification from './PLLocalAccountIdentification';
import SELocalAccountIdentification from './SELocalAccountIdentification';
import SGLocalAccountIdentification from './SGLocalAccountIdentification';
import UKLocalAccountIdentification from './UKLocalAccountIdentification';
import USLocalAccountIdentification from './USLocalAccountIdentification';

/**
 * The BankAccountInfoAccountIdentification model module.
 * @module model/BankAccountInfoAccountIdentification
 * @version 3
 */
class BankAccountInfoAccountIdentification {
    /**
     * Constructs a new <code>BankAccountInfoAccountIdentification</code>.
     * Identification of the bank account.
     * @alias module:model/BankAccountInfoAccountIdentification
     * @param {(module:model/AULocalAccountIdentification|module:model/CALocalAccountIdentification|module:model/CZLocalAccountIdentification|module:model/DKLocalAccountIdentification|module:model/HKLocalAccountIdentification|module:model/HULocalAccountIdentification|module:model/IbanAccountIdentification|module:model/NOLocalAccountIdentification|module:model/NZLocalAccountIdentification|module:model/NumberAndBicAccountIdentification|module:model/PLLocalAccountIdentification|module:model/SELocalAccountIdentification|module:model/SGLocalAccountIdentification|module:model/UKLocalAccountIdentification|module:model/USLocalAccountIdentification)} instance The actual instance to initialize BankAccountInfoAccountIdentification.
     */
    constructor(instance = null) {
        if (instance === null) {
            this.actualInstance = null;
            return;
        }
        var match = 0;
        var errorMessages = [];
        try {
            if (typeof instance === "AULocalAccountIdentification") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                AULocalAccountIdentification.validateJSON(instance); // throw an exception if no match
                // create AULocalAccountIdentification from JS object
                this.actualInstance = AULocalAccountIdentification.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into AULocalAccountIdentification
            errorMessages.push("Failed to construct AULocalAccountIdentification: " + err)
        }

        try {
            if (typeof instance === "CALocalAccountIdentification") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                CALocalAccountIdentification.validateJSON(instance); // throw an exception if no match
                // create CALocalAccountIdentification from JS object
                this.actualInstance = CALocalAccountIdentification.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into CALocalAccountIdentification
            errorMessages.push("Failed to construct CALocalAccountIdentification: " + err)
        }

        try {
            if (typeof instance === "CZLocalAccountIdentification") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                CZLocalAccountIdentification.validateJSON(instance); // throw an exception if no match
                // create CZLocalAccountIdentification from JS object
                this.actualInstance = CZLocalAccountIdentification.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into CZLocalAccountIdentification
            errorMessages.push("Failed to construct CZLocalAccountIdentification: " + err)
        }

        try {
            if (typeof instance === "DKLocalAccountIdentification") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                DKLocalAccountIdentification.validateJSON(instance); // throw an exception if no match
                // create DKLocalAccountIdentification from JS object
                this.actualInstance = DKLocalAccountIdentification.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into DKLocalAccountIdentification
            errorMessages.push("Failed to construct DKLocalAccountIdentification: " + err)
        }

        try {
            if (typeof instance === "HKLocalAccountIdentification") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                HKLocalAccountIdentification.validateJSON(instance); // throw an exception if no match
                // create HKLocalAccountIdentification from JS object
                this.actualInstance = HKLocalAccountIdentification.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into HKLocalAccountIdentification
            errorMessages.push("Failed to construct HKLocalAccountIdentification: " + err)
        }

        try {
            if (typeof instance === "HULocalAccountIdentification") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                HULocalAccountIdentification.validateJSON(instance); // throw an exception if no match
                // create HULocalAccountIdentification from JS object
                this.actualInstance = HULocalAccountIdentification.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into HULocalAccountIdentification
            errorMessages.push("Failed to construct HULocalAccountIdentification: " + err)
        }

        try {
            if (typeof instance === "IbanAccountIdentification") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                IbanAccountIdentification.validateJSON(instance); // throw an exception if no match
                // create IbanAccountIdentification from JS object
                this.actualInstance = IbanAccountIdentification.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into IbanAccountIdentification
            errorMessages.push("Failed to construct IbanAccountIdentification: " + err)
        }

        try {
            if (typeof instance === "NOLocalAccountIdentification") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                NOLocalAccountIdentification.validateJSON(instance); // throw an exception if no match
                // create NOLocalAccountIdentification from JS object
                this.actualInstance = NOLocalAccountIdentification.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into NOLocalAccountIdentification
            errorMessages.push("Failed to construct NOLocalAccountIdentification: " + err)
        }

        try {
            if (typeof instance === "NZLocalAccountIdentification") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                NZLocalAccountIdentification.validateJSON(instance); // throw an exception if no match
                // create NZLocalAccountIdentification from JS object
                this.actualInstance = NZLocalAccountIdentification.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into NZLocalAccountIdentification
            errorMessages.push("Failed to construct NZLocalAccountIdentification: " + err)
        }

        try {
            if (typeof instance === "NumberAndBicAccountIdentification") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                NumberAndBicAccountIdentification.validateJSON(instance); // throw an exception if no match
                // create NumberAndBicAccountIdentification from JS object
                this.actualInstance = NumberAndBicAccountIdentification.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into NumberAndBicAccountIdentification
            errorMessages.push("Failed to construct NumberAndBicAccountIdentification: " + err)
        }

        try {
            if (typeof instance === "PLLocalAccountIdentification") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                PLLocalAccountIdentification.validateJSON(instance); // throw an exception if no match
                // create PLLocalAccountIdentification from JS object
                this.actualInstance = PLLocalAccountIdentification.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into PLLocalAccountIdentification
            errorMessages.push("Failed to construct PLLocalAccountIdentification: " + err)
        }

        try {
            if (typeof instance === "SELocalAccountIdentification") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                SELocalAccountIdentification.validateJSON(instance); // throw an exception if no match
                // create SELocalAccountIdentification from JS object
                this.actualInstance = SELocalAccountIdentification.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into SELocalAccountIdentification
            errorMessages.push("Failed to construct SELocalAccountIdentification: " + err)
        }

        try {
            if (typeof instance === "SGLocalAccountIdentification") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                SGLocalAccountIdentification.validateJSON(instance); // throw an exception if no match
                // create SGLocalAccountIdentification from JS object
                this.actualInstance = SGLocalAccountIdentification.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into SGLocalAccountIdentification
            errorMessages.push("Failed to construct SGLocalAccountIdentification: " + err)
        }

        try {
            if (typeof instance === "UKLocalAccountIdentification") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                UKLocalAccountIdentification.validateJSON(instance); // throw an exception if no match
                // create UKLocalAccountIdentification from JS object
                this.actualInstance = UKLocalAccountIdentification.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into UKLocalAccountIdentification
            errorMessages.push("Failed to construct UKLocalAccountIdentification: " + err)
        }

        try {
            if (typeof instance === "USLocalAccountIdentification") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                USLocalAccountIdentification.validateJSON(instance); // throw an exception if no match
                // create USLocalAccountIdentification from JS object
                this.actualInstance = USLocalAccountIdentification.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into USLocalAccountIdentification
            errorMessages.push("Failed to construct USLocalAccountIdentification: " + err)
        }

        if (match > 1) {
            throw new Error("Multiple matches found constructing `BankAccountInfoAccountIdentification` with oneOf schemas AULocalAccountIdentification, CALocalAccountIdentification, CZLocalAccountIdentification, DKLocalAccountIdentification, HKLocalAccountIdentification, HULocalAccountIdentification, IbanAccountIdentification, NOLocalAccountIdentification, NZLocalAccountIdentification, NumberAndBicAccountIdentification, PLLocalAccountIdentification, SELocalAccountIdentification, SGLocalAccountIdentification, UKLocalAccountIdentification, USLocalAccountIdentification. Input: " + JSON.stringify(instance));
        } else if (match === 0) {
            this.actualInstance = null; // clear the actual instance in case there are multiple matches
            throw new Error("No match found constructing `BankAccountInfoAccountIdentification` with oneOf schemas AULocalAccountIdentification, CALocalAccountIdentification, CZLocalAccountIdentification, DKLocalAccountIdentification, HKLocalAccountIdentification, HULocalAccountIdentification, IbanAccountIdentification, NOLocalAccountIdentification, NZLocalAccountIdentification, NumberAndBicAccountIdentification, PLLocalAccountIdentification, SELocalAccountIdentification, SGLocalAccountIdentification, UKLocalAccountIdentification, USLocalAccountIdentification. Details: " +
                            errorMessages.join(", "));
        } else { // only 1 match
            // the input is valid
        }
    }

    /**
     * Constructs a <code>BankAccountInfoAccountIdentification</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BankAccountInfoAccountIdentification} obj Optional instance to populate.
     * @return {module:model/BankAccountInfoAccountIdentification} The populated <code>BankAccountInfoAccountIdentification</code> instance.
     */
    static constructFromObject(data, obj) {
        return new BankAccountInfoAccountIdentification(data);
    }

    /**
     * Gets the actual instance, which can be <code>AULocalAccountIdentification</code>, <code>CALocalAccountIdentification</code>, <code>CZLocalAccountIdentification</code>, <code>DKLocalAccountIdentification</code>, <code>HKLocalAccountIdentification</code>, <code>HULocalAccountIdentification</code>, <code>IbanAccountIdentification</code>, <code>NOLocalAccountIdentification</code>, <code>NZLocalAccountIdentification</code>, <code>NumberAndBicAccountIdentification</code>, <code>PLLocalAccountIdentification</code>, <code>SELocalAccountIdentification</code>, <code>SGLocalAccountIdentification</code>, <code>UKLocalAccountIdentification</code>, <code>USLocalAccountIdentification</code>.
     * @return {(module:model/AULocalAccountIdentification|module:model/CALocalAccountIdentification|module:model/CZLocalAccountIdentification|module:model/DKLocalAccountIdentification|module:model/HKLocalAccountIdentification|module:model/HULocalAccountIdentification|module:model/IbanAccountIdentification|module:model/NOLocalAccountIdentification|module:model/NZLocalAccountIdentification|module:model/NumberAndBicAccountIdentification|module:model/PLLocalAccountIdentification|module:model/SELocalAccountIdentification|module:model/SGLocalAccountIdentification|module:model/UKLocalAccountIdentification|module:model/USLocalAccountIdentification)} The actual instance.
     */
    getActualInstance() {
        return this.actualInstance;
    }

    /**
     * Sets the actual instance, which can be <code>AULocalAccountIdentification</code>, <code>CALocalAccountIdentification</code>, <code>CZLocalAccountIdentification</code>, <code>DKLocalAccountIdentification</code>, <code>HKLocalAccountIdentification</code>, <code>HULocalAccountIdentification</code>, <code>IbanAccountIdentification</code>, <code>NOLocalAccountIdentification</code>, <code>NZLocalAccountIdentification</code>, <code>NumberAndBicAccountIdentification</code>, <code>PLLocalAccountIdentification</code>, <code>SELocalAccountIdentification</code>, <code>SGLocalAccountIdentification</code>, <code>UKLocalAccountIdentification</code>, <code>USLocalAccountIdentification</code>.
     * @param {(module:model/AULocalAccountIdentification|module:model/CALocalAccountIdentification|module:model/CZLocalAccountIdentification|module:model/DKLocalAccountIdentification|module:model/HKLocalAccountIdentification|module:model/HULocalAccountIdentification|module:model/IbanAccountIdentification|module:model/NOLocalAccountIdentification|module:model/NZLocalAccountIdentification|module:model/NumberAndBicAccountIdentification|module:model/PLLocalAccountIdentification|module:model/SELocalAccountIdentification|module:model/SGLocalAccountIdentification|module:model/UKLocalAccountIdentification|module:model/USLocalAccountIdentification)} obj The actual instance.
     */
    setActualInstance(obj) {
       this.actualInstance = BankAccountInfoAccountIdentification.constructFromObject(obj).getActualInstance();
    }

    /**
     * Returns the JSON representation of the actual instance.
     * @return {string}
     */
    toJSON = function(){
        return this.getActualInstance();
    }

    /**
     * Create an instance of BankAccountInfoAccountIdentification from a JSON string.
     * @param {string} json_string JSON string.
     * @return {module:model/BankAccountInfoAccountIdentification} An instance of BankAccountInfoAccountIdentification.
     */
    static fromJSON = function(json_string){
        return BankAccountInfoAccountIdentification.constructFromObject(JSON.parse(json_string));
    }
}

/**
 * The bank account number, without separators or whitespace.
 * @member {String} accountNumber
 */
BankAccountInfoAccountIdentification.prototype['accountNumber'] = undefined;

/**
 * The 6-digit [Bank State Branch (BSB) code](https://en.wikipedia.org/wiki/Bank_state_branch), without separators or whitespace.
 * @member {String} bsbCode
 */
BankAccountInfoAccountIdentification.prototype['bsbCode'] = undefined;

/**
 * The form factor of the account.  Possible values: **physical**, **virtual**. Default value: **physical**.
 * @member {String} formFactor
 * @default 'physical'
 */
BankAccountInfoAccountIdentification.prototype['formFactor'] = 'physical';

/**
 * **auLocal**
 * @member {module:model/BankAccountInfoAccountIdentification.TypeEnum} type
 * @default 'auLocal'
 */
BankAccountInfoAccountIdentification.prototype['type'] = 'auLocal';

/**
 * The bank account type.  Possible values: **checking** or **savings**. Defaults to **checking**.
 * @member {module:model/BankAccountInfoAccountIdentification.AccountTypeEnum} accountType
 * @default 'checking'
 */
BankAccountInfoAccountIdentification.prototype['accountType'] = 'checking';

/**
 * The 3-digit institution number, without separators or whitespace.
 * @member {String} institutionNumber
 */
BankAccountInfoAccountIdentification.prototype['institutionNumber'] = undefined;

/**
 * The 5-digit transit number, without separators or whitespace.
 * @member {String} transitNumber
 */
BankAccountInfoAccountIdentification.prototype['transitNumber'] = undefined;

/**
 * The 4-digit bank code (Registreringsnummer) (without separators or whitespace).
 * @member {String} bankCode
 */
BankAccountInfoAccountIdentification.prototype['bankCode'] = undefined;

/**
 * The 3-digit clearing code, without separators or whitespace.
 * @member {String} clearingCode
 */
BankAccountInfoAccountIdentification.prototype['clearingCode'] = undefined;

/**
 * The international bank account number as defined in the [ISO-13616](https://www.iso.org/standard/81090.html) standard.
 * @member {String} iban
 */
BankAccountInfoAccountIdentification.prototype['iban'] = undefined;

/**
 * Additional identification codes of the bank. Some banks may require these identifiers for cross-border transfers.
 * @member {module:model/AdditionalBankIdentification} additionalBankIdentification
 */
BankAccountInfoAccountIdentification.prototype['additionalBankIdentification'] = undefined;

/**
 * The bank's 8- or 11-character BIC or SWIFT code.
 * @member {String} bic
 */
BankAccountInfoAccountIdentification.prototype['bic'] = undefined;

/**
 * The 4- to 5-digit clearing number ([Clearingnummer](https://sv.wikipedia.org/wiki/Clearingnummer)), without separators or whitespace.
 * @member {String} clearingNumber
 */
BankAccountInfoAccountIdentification.prototype['clearingNumber'] = undefined;

/**
 * The 6-digit [sort code](https://en.wikipedia.org/wiki/Sort_code), without separators or whitespace.
 * @member {String} sortCode
 */
BankAccountInfoAccountIdentification.prototype['sortCode'] = undefined;

/**
 * The 9-digit [routing number](https://en.wikipedia.org/wiki/ABA_routing_transit_number), without separators or whitespace.
 * @member {String} routingNumber
 */
BankAccountInfoAccountIdentification.prototype['routingNumber'] = undefined;


BankAccountInfoAccountIdentification.OneOf = ["AULocalAccountIdentification", "CALocalAccountIdentification", "CZLocalAccountIdentification", "DKLocalAccountIdentification", "HKLocalAccountIdentification", "HULocalAccountIdentification", "IbanAccountIdentification", "NOLocalAccountIdentification", "NZLocalAccountIdentification", "NumberAndBicAccountIdentification", "PLLocalAccountIdentification", "SELocalAccountIdentification", "SGLocalAccountIdentification", "UKLocalAccountIdentification", "USLocalAccountIdentification"];

export default BankAccountInfoAccountIdentification;

