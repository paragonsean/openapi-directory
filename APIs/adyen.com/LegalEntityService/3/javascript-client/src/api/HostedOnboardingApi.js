/**
 * Legal Entity Management API
 * The Legal Entity Management API enables you to manage legal entities that contain information required for verification.  ## Authentication Your Adyen contact will provide your API credential and an API key. To connect to the API, add an `X-API-Key` header with the API key as the value. For example:  ``` curl -H \"X-API-Key: YOUR_API_KEY\" \\ -H \"Content-Type: application/json\" \\ ... ``` Alternatively, you can use the username and password of your API credential to connect to the API using basic authentication. For example:  ``` curl -U \"ws_123456@Scope.Company_YOUR_COMPANY_ACCOUNT\":\"YourWsPassword\" \\ -H \"Content-Type: application/json\" \\ ... ``` ## Versioning The Legal Entity Management API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://kyc-test.adyen.com/lem/v3/legalEntities ``` >If you are using hosted onboarding and just beginning your integration, use v3 for your API requests. Otherwise, use v2.  ## Going live When going live, your Adyen contact will provide your API credential for the live environment. You can then use the API key or the username and password to send requests to `https://kyc-live.adyen.com/lem/v3`.  
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import OnboardingLink from '../model/OnboardingLink';
import OnboardingLinkInfo from '../model/OnboardingLinkInfo';
import OnboardingTheme from '../model/OnboardingTheme';
import OnboardingThemes from '../model/OnboardingThemes';
import ServiceError from '../model/ServiceError';

/**
* HostedOnboarding service.
* @module api/HostedOnboardingApi
* @version 3
*/
export default class HostedOnboardingApi {

    /**
    * Constructs a new HostedOnboardingApi. 
    * @alias module:api/HostedOnboardingApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getThemes operation.
     * @callback module:api/HostedOnboardingApi~getThemesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/OnboardingThemes} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a list of hosted onboarding page themes
     * Returns a list of hosted onboarding page themes.  >If you are using hosted onboarding and just beginning your integration, use v3 for your API requests. Otherwise, use v2.  
     * @param {module:api/HostedOnboardingApi~getThemesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/OnboardingThemes}
     */
    getThemes(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BasicAuth', 'ApiKeyAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = OnboardingThemes;
      return this.apiClient.callApi(
        '/themes', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getThemesId operation.
     * @callback module:api/HostedOnboardingApi~getThemesIdCallback
     * @param {String} error Error message, if any.
     * @param {module:model/OnboardingTheme} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get an onboarding link theme
     * Returns the details of the theme identified in the path.>If you are using hosted onboarding and just beginning your integration, use v3 for your API requests. Otherwise, use v2.  
     * @param {String} id The unique identifier of the theme
     * @param {module:api/HostedOnboardingApi~getThemesIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/OnboardingTheme}
     */
    getThemesId(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling getThemesId");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BasicAuth', 'ApiKeyAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = OnboardingTheme;
      return this.apiClient.callApi(
        '/themes/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the postLegalEntitiesIdOnboardingLinks operation.
     * @callback module:api/HostedOnboardingApi~postLegalEntitiesIdOnboardingLinksCallback
     * @param {String} error Error message, if any.
     * @param {module:model/OnboardingLink} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a link to an Adyen-hosted onboarding page
     * Returns a link to an Adyen-hosted onboarding page where you need to redirect your user.  >If you are using hosted onboarding and just beginning your integration, use v3 for your API requests. Otherwise, use v2.  
     * @param {String} id The unique identifier of the legal entity
     * @param {Object} opts Optional parameters
     * @param {module:model/OnboardingLinkInfo} [onboardingLinkInfo] 
     * @param {module:api/HostedOnboardingApi~postLegalEntitiesIdOnboardingLinksCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/OnboardingLink}
     */
    postLegalEntitiesIdOnboardingLinks(id, opts, callback) {
      opts = opts || {};
      let postBody = opts['onboardingLinkInfo'];
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling postLegalEntitiesIdOnboardingLinks");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BasicAuth', 'ApiKeyAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = OnboardingLink;
      return this.apiClient.callApi(
        '/legalEntities/{id}/onboardingLinks', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
