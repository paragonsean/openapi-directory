/*
 * Legal Entity Management API
 * The Legal Entity Management API enables you to manage legal entities that contain information required for verification.  ## Authentication Your Adyen contact will provide your API credential and an API key. To connect to the API, add an `X-API-Key` header with the API key as the value. For example:  ``` curl -H \"X-API-Key: YOUR_API_KEY\" \\ -H \"Content-Type: application/json\" \\ ... ``` Alternatively, you can use the username and password of your API credential to connect to the API using basic authentication. For example:  ``` curl -U \"ws_123456@Scope.Company_YOUR_COMPANY_ACCOUNT\":\"YourWsPassword\" \\ -H \"Content-Type: application/json\" \\ ... ``` ## Versioning The Legal Entity Management API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://kyc-test.adyen.com/lem/v2/legalEntities ``` >If you are using hosted onboarding and just beginning your integration, use v3 for your API requests. Otherwise, use v2.  ## Going live When going live, your Adyen contact will provide your API credential for the live environment. You can then use the API key or the username and password to send requests to `https://kyc-live.adyen.com/lem/v2`.  
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Document;
import org.openapitools.client.model.ServiceError;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DocumentsApi
 */
@Disabled
public class DocumentsApiTest {

    private final DocumentsApi api = new DocumentsApi();

    /**
     * Delete a document
     *
     * Deletes a document.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteDocumentsIdTest() throws ApiException {
        String id = null;
        api.deleteDocumentsId(id);
        // TODO: test validations
    }

    /**
     * Get a document
     *
     * Returns a document.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getDocumentsIdTest() throws ApiException {
        String id = null;
        Boolean skipContent = null;
        Document response = api.getDocumentsId(id, skipContent);
        // TODO: test validations
    }

    /**
     * Update a document
     *
     * Updates a document.   &gt;You can upload a maximum of 15 pages for photo IDs.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void patchDocumentsIdTest() throws ApiException {
        String id = null;
        String xRequestedVerificationCode = null;
        Document document = null;
        Document response = api.patchDocumentsId(id, xRequestedVerificationCode, document);
        // TODO: test validations
    }

    /**
     * Upload a document for verification checks
     *
     * Uploads a document for verification checks.   Adyen uses the information from the [legal entity](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/legalEntities) to run automated verification checks. If these checks fail, you will be notified to provide additional documents.   You should only upload documents when Adyen requests additional information for the legal entity.   &gt;You can upload a maximum of 15 pages for photo IDs.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postDocumentsTest() throws ApiException {
        String xRequestedVerificationCode = null;
        Document document = null;
        Document response = api.postDocuments(xRequestedVerificationCode, document);
        // TODO: test validations
    }

}
