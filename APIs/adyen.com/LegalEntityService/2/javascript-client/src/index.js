/**
 * Legal Entity Management API
 * The Legal Entity Management API enables you to manage legal entities that contain information required for verification.  ## Authentication Your Adyen contact will provide your API credential and an API key. To connect to the API, add an `X-API-Key` header with the API key as the value. For example:  ``` curl -H \"X-API-Key: YOUR_API_KEY\" \\ -H \"Content-Type: application/json\" \\ ... ``` Alternatively, you can use the username and password of your API credential to connect to the API using basic authentication. For example:  ``` curl -U \"ws_123456@Scope.Company_YOUR_COMPANY_ACCOUNT\":\"YourWsPassword\" \\ -H \"Content-Type: application/json\" \\ ... ``` ## Versioning The Legal Entity Management API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://kyc-test.adyen.com/lem/v2/legalEntities ``` >If you are using hosted onboarding and just beginning your integration, use v3 for your API requests. Otherwise, use v2.  ## Going live When going live, your Adyen contact will provide your API credential for the live environment. You can then use the API key or the username and password to send requests to `https://kyc-live.adyen.com/lem/v2`.  
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AcceptTermsOfServiceRequest from './model/AcceptTermsOfServiceRequest';
import AcceptTermsOfServiceResponse from './model/AcceptTermsOfServiceResponse';
import Address from './model/Address';
import Amount from './model/Amount';
import Attachment from './model/Attachment';
import BankAccountInfo from './model/BankAccountInfo';
import BirthData from './model/BirthData';
import BusinessLine from './model/BusinessLine';
import BusinessLineInfo from './model/BusinessLineInfo';
import BusinessLineInfoUpdate from './model/BusinessLineInfoUpdate';
import BusinessLines from './model/BusinessLines';
import CalculateTermsOfServiceStatusResponse from './model/CalculateTermsOfServiceStatusResponse';
import CapabilityProblem from './model/CapabilityProblem';
import CapabilityProblemEntity from './model/CapabilityProblemEntity';
import CapabilityProblemEntityRecursive from './model/CapabilityProblemEntityRecursive';
import CapabilitySettings from './model/CapabilitySettings';
import Document from './model/Document';
import DocumentPage from './model/DocumentPage';
import DocumentReference from './model/DocumentReference';
import EntityReference from './model/EntityReference';
import GeneratePciDescriptionRequest from './model/GeneratePciDescriptionRequest';
import GeneratePciDescriptionResponse from './model/GeneratePciDescriptionResponse';
import GetPciQuestionnaireInfosResponse from './model/GetPciQuestionnaireInfosResponse';
import GetPciQuestionnaireResponse from './model/GetPciQuestionnaireResponse';
import GetTermsOfServiceAcceptanceInfosResponse from './model/GetTermsOfServiceAcceptanceInfosResponse';
import GetTermsOfServiceDocumentRequest from './model/GetTermsOfServiceDocumentRequest';
import GetTermsOfServiceDocumentResponse from './model/GetTermsOfServiceDocumentResponse';
import IdentificationData from './model/IdentificationData';
import Individual from './model/Individual';
import LegalEntity from './model/LegalEntity';
import LegalEntityAssociation from './model/LegalEntityAssociation';
import LegalEntityCapability from './model/LegalEntityCapability';
import LegalEntityInfo from './model/LegalEntityInfo';
import LegalEntityInfoRequiredType from './model/LegalEntityInfoRequiredType';
import Name from './model/Name';
import OnboardingLink from './model/OnboardingLink';
import OnboardingLinkInfo from './model/OnboardingLinkInfo';
import OnboardingTheme from './model/OnboardingTheme';
import OnboardingThemes from './model/OnboardingThemes';
import Organization from './model/Organization';
import OwnerEntity from './model/OwnerEntity';
import PciDocumentInfo from './model/PciDocumentInfo';
import PciSigningRequest from './model/PciSigningRequest';
import PciSigningResponse from './model/PciSigningResponse';
import PhoneNumber from './model/PhoneNumber';
import RemediatingAction from './model/RemediatingAction';
import ServiceError from './model/ServiceError';
import SoleProprietorship from './model/SoleProprietorship';
import SourceOfFunds from './model/SourceOfFunds';
import StockData from './model/StockData';
import SupportingEntityCapability from './model/SupportingEntityCapability';
import TaxInformation from './model/TaxInformation';
import TaxReportingClassification from './model/TaxReportingClassification';
import TermsOfServiceAcceptanceInfo from './model/TermsOfServiceAcceptanceInfo';
import TransferInstrument from './model/TransferInstrument';
import TransferInstrumentInfo from './model/TransferInstrumentInfo';
import TransferInstrumentReference from './model/TransferInstrumentReference';
import Trust from './model/Trust';
import UndefinedBeneficiary from './model/UndefinedBeneficiary';
import UnincorporatedPartnership from './model/UnincorporatedPartnership';
import VerificationError from './model/VerificationError';
import VerificationErrorRecursive from './model/VerificationErrorRecursive';
import WebData from './model/WebData';
import WebDataExemption from './model/WebDataExemption';
import BusinessLinesApi from './api/BusinessLinesApi';
import DocumentsApi from './api/DocumentsApi';
import HostedOnboardingApi from './api/HostedOnboardingApi';
import LegalEntitiesApi from './api/LegalEntitiesApi';
import PCIQuestionnairesApi from './api/PCIQuestionnairesApi';
import TermsOfServiceApi from './api/TermsOfServiceApi';
import TransferInstrumentsApi from './api/TransferInstrumentsApi';


/**
* The Legal Entity Management API enables you to manage legal entities that contain information required for verification.  ## Authentication Your Adyen contact will provide your API credential and an API key. To connect to the API, add an &#x60;X-API-Key&#x60; header with the API key as the value. For example:  &#x60;&#x60;&#x60; curl -H \&quot;X-API-Key: YOUR_API_KEY\&quot; \\ -H \&quot;Content-Type: application/json\&quot; \\ ... &#x60;&#x60;&#x60; Alternatively, you can use the username and password of your API credential to connect to the API using basic authentication. For example:  &#x60;&#x60;&#x60; curl -U \&quot;ws_123456@Scope.Company_YOUR_COMPANY_ACCOUNT\&quot;:\&quot;YourWsPassword\&quot; \\ -H \&quot;Content-Type: application/json\&quot; \\ ... &#x60;&#x60;&#x60; ## Versioning The Legal Entity Management API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \&quot;vXX\&quot;, where XX is the version number.  For example: &#x60;&#x60;&#x60; https://kyc-test.adyen.com/lem/v2/legalEntities &#x60;&#x60;&#x60; &gt;If you are using hosted onboarding and just beginning your integration, use v3 for your API requests. Otherwise, use v2.  ## Going live When going live, your Adyen contact will provide your API credential for the live environment. You can then use the API key or the username and password to send requests to &#x60;https://kyc-live.adyen.com/lem/v2&#x60;.  .<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var LegalEntityManagementApi = require('index'); // See note below*.
* var xxxSvc = new LegalEntityManagementApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new LegalEntityManagementApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new LegalEntityManagementApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new LegalEntityManagementApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AcceptTermsOfServiceRequest model constructor.
     * @property {module:model/AcceptTermsOfServiceRequest}
     */
    AcceptTermsOfServiceRequest,

    /**
     * The AcceptTermsOfServiceResponse model constructor.
     * @property {module:model/AcceptTermsOfServiceResponse}
     */
    AcceptTermsOfServiceResponse,

    /**
     * The Address model constructor.
     * @property {module:model/Address}
     */
    Address,

    /**
     * The Amount model constructor.
     * @property {module:model/Amount}
     */
    Amount,

    /**
     * The Attachment model constructor.
     * @property {module:model/Attachment}
     */
    Attachment,

    /**
     * The BankAccountInfo model constructor.
     * @property {module:model/BankAccountInfo}
     */
    BankAccountInfo,

    /**
     * The BirthData model constructor.
     * @property {module:model/BirthData}
     */
    BirthData,

    /**
     * The BusinessLine model constructor.
     * @property {module:model/BusinessLine}
     */
    BusinessLine,

    /**
     * The BusinessLineInfo model constructor.
     * @property {module:model/BusinessLineInfo}
     */
    BusinessLineInfo,

    /**
     * The BusinessLineInfoUpdate model constructor.
     * @property {module:model/BusinessLineInfoUpdate}
     */
    BusinessLineInfoUpdate,

    /**
     * The BusinessLines model constructor.
     * @property {module:model/BusinessLines}
     */
    BusinessLines,

    /**
     * The CalculateTermsOfServiceStatusResponse model constructor.
     * @property {module:model/CalculateTermsOfServiceStatusResponse}
     */
    CalculateTermsOfServiceStatusResponse,

    /**
     * The CapabilityProblem model constructor.
     * @property {module:model/CapabilityProblem}
     */
    CapabilityProblem,

    /**
     * The CapabilityProblemEntity model constructor.
     * @property {module:model/CapabilityProblemEntity}
     */
    CapabilityProblemEntity,

    /**
     * The CapabilityProblemEntityRecursive model constructor.
     * @property {module:model/CapabilityProblemEntityRecursive}
     */
    CapabilityProblemEntityRecursive,

    /**
     * The CapabilitySettings model constructor.
     * @property {module:model/CapabilitySettings}
     */
    CapabilitySettings,

    /**
     * The Document model constructor.
     * @property {module:model/Document}
     */
    Document,

    /**
     * The DocumentPage model constructor.
     * @property {module:model/DocumentPage}
     */
    DocumentPage,

    /**
     * The DocumentReference model constructor.
     * @property {module:model/DocumentReference}
     */
    DocumentReference,

    /**
     * The EntityReference model constructor.
     * @property {module:model/EntityReference}
     */
    EntityReference,

    /**
     * The GeneratePciDescriptionRequest model constructor.
     * @property {module:model/GeneratePciDescriptionRequest}
     */
    GeneratePciDescriptionRequest,

    /**
     * The GeneratePciDescriptionResponse model constructor.
     * @property {module:model/GeneratePciDescriptionResponse}
     */
    GeneratePciDescriptionResponse,

    /**
     * The GetPciQuestionnaireInfosResponse model constructor.
     * @property {module:model/GetPciQuestionnaireInfosResponse}
     */
    GetPciQuestionnaireInfosResponse,

    /**
     * The GetPciQuestionnaireResponse model constructor.
     * @property {module:model/GetPciQuestionnaireResponse}
     */
    GetPciQuestionnaireResponse,

    /**
     * The GetTermsOfServiceAcceptanceInfosResponse model constructor.
     * @property {module:model/GetTermsOfServiceAcceptanceInfosResponse}
     */
    GetTermsOfServiceAcceptanceInfosResponse,

    /**
     * The GetTermsOfServiceDocumentRequest model constructor.
     * @property {module:model/GetTermsOfServiceDocumentRequest}
     */
    GetTermsOfServiceDocumentRequest,

    /**
     * The GetTermsOfServiceDocumentResponse model constructor.
     * @property {module:model/GetTermsOfServiceDocumentResponse}
     */
    GetTermsOfServiceDocumentResponse,

    /**
     * The IdentificationData model constructor.
     * @property {module:model/IdentificationData}
     */
    IdentificationData,

    /**
     * The Individual model constructor.
     * @property {module:model/Individual}
     */
    Individual,

    /**
     * The LegalEntity model constructor.
     * @property {module:model/LegalEntity}
     */
    LegalEntity,

    /**
     * The LegalEntityAssociation model constructor.
     * @property {module:model/LegalEntityAssociation}
     */
    LegalEntityAssociation,

    /**
     * The LegalEntityCapability model constructor.
     * @property {module:model/LegalEntityCapability}
     */
    LegalEntityCapability,

    /**
     * The LegalEntityInfo model constructor.
     * @property {module:model/LegalEntityInfo}
     */
    LegalEntityInfo,

    /**
     * The LegalEntityInfoRequiredType model constructor.
     * @property {module:model/LegalEntityInfoRequiredType}
     */
    LegalEntityInfoRequiredType,

    /**
     * The Name model constructor.
     * @property {module:model/Name}
     */
    Name,

    /**
     * The OnboardingLink model constructor.
     * @property {module:model/OnboardingLink}
     */
    OnboardingLink,

    /**
     * The OnboardingLinkInfo model constructor.
     * @property {module:model/OnboardingLinkInfo}
     */
    OnboardingLinkInfo,

    /**
     * The OnboardingTheme model constructor.
     * @property {module:model/OnboardingTheme}
     */
    OnboardingTheme,

    /**
     * The OnboardingThemes model constructor.
     * @property {module:model/OnboardingThemes}
     */
    OnboardingThemes,

    /**
     * The Organization model constructor.
     * @property {module:model/Organization}
     */
    Organization,

    /**
     * The OwnerEntity model constructor.
     * @property {module:model/OwnerEntity}
     */
    OwnerEntity,

    /**
     * The PciDocumentInfo model constructor.
     * @property {module:model/PciDocumentInfo}
     */
    PciDocumentInfo,

    /**
     * The PciSigningRequest model constructor.
     * @property {module:model/PciSigningRequest}
     */
    PciSigningRequest,

    /**
     * The PciSigningResponse model constructor.
     * @property {module:model/PciSigningResponse}
     */
    PciSigningResponse,

    /**
     * The PhoneNumber model constructor.
     * @property {module:model/PhoneNumber}
     */
    PhoneNumber,

    /**
     * The RemediatingAction model constructor.
     * @property {module:model/RemediatingAction}
     */
    RemediatingAction,

    /**
     * The ServiceError model constructor.
     * @property {module:model/ServiceError}
     */
    ServiceError,

    /**
     * The SoleProprietorship model constructor.
     * @property {module:model/SoleProprietorship}
     */
    SoleProprietorship,

    /**
     * The SourceOfFunds model constructor.
     * @property {module:model/SourceOfFunds}
     */
    SourceOfFunds,

    /**
     * The StockData model constructor.
     * @property {module:model/StockData}
     */
    StockData,

    /**
     * The SupportingEntityCapability model constructor.
     * @property {module:model/SupportingEntityCapability}
     */
    SupportingEntityCapability,

    /**
     * The TaxInformation model constructor.
     * @property {module:model/TaxInformation}
     */
    TaxInformation,

    /**
     * The TaxReportingClassification model constructor.
     * @property {module:model/TaxReportingClassification}
     */
    TaxReportingClassification,

    /**
     * The TermsOfServiceAcceptanceInfo model constructor.
     * @property {module:model/TermsOfServiceAcceptanceInfo}
     */
    TermsOfServiceAcceptanceInfo,

    /**
     * The TransferInstrument model constructor.
     * @property {module:model/TransferInstrument}
     */
    TransferInstrument,

    /**
     * The TransferInstrumentInfo model constructor.
     * @property {module:model/TransferInstrumentInfo}
     */
    TransferInstrumentInfo,

    /**
     * The TransferInstrumentReference model constructor.
     * @property {module:model/TransferInstrumentReference}
     */
    TransferInstrumentReference,

    /**
     * The Trust model constructor.
     * @property {module:model/Trust}
     */
    Trust,

    /**
     * The UndefinedBeneficiary model constructor.
     * @property {module:model/UndefinedBeneficiary}
     */
    UndefinedBeneficiary,

    /**
     * The UnincorporatedPartnership model constructor.
     * @property {module:model/UnincorporatedPartnership}
     */
    UnincorporatedPartnership,

    /**
     * The VerificationError model constructor.
     * @property {module:model/VerificationError}
     */
    VerificationError,

    /**
     * The VerificationErrorRecursive model constructor.
     * @property {module:model/VerificationErrorRecursive}
     */
    VerificationErrorRecursive,

    /**
     * The WebData model constructor.
     * @property {module:model/WebData}
     */
    WebData,

    /**
     * The WebDataExemption model constructor.
     * @property {module:model/WebDataExemption}
     */
    WebDataExemption,

    /**
    * The BusinessLinesApi service constructor.
    * @property {module:api/BusinessLinesApi}
    */
    BusinessLinesApi,

    /**
    * The DocumentsApi service constructor.
    * @property {module:api/DocumentsApi}
    */
    DocumentsApi,

    /**
    * The HostedOnboardingApi service constructor.
    * @property {module:api/HostedOnboardingApi}
    */
    HostedOnboardingApi,

    /**
    * The LegalEntitiesApi service constructor.
    * @property {module:api/LegalEntitiesApi}
    */
    LegalEntitiesApi,

    /**
    * The PCIQuestionnairesApi service constructor.
    * @property {module:api/PCIQuestionnairesApi}
    */
    PCIQuestionnairesApi,

    /**
    * The TermsOfServiceApi service constructor.
    * @property {module:api/TermsOfServiceApi}
    */
    TermsOfServiceApi,

    /**
    * The TransferInstrumentsApi service constructor.
    * @property {module:api/TransferInstrumentsApi}
    */
    TransferInstrumentsApi
};
