# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.document_page import DocumentPage
from openapi_server import util


class DocumentReference(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, active: bool=None, description: str=None, file_name: str=None, id: str=None, modification_date: datetime=None, pages: List[DocumentPage]=None, type: str=None):
        """DocumentReference - a model defined in OpenAPI

        :param active: The active of this DocumentReference.
        :param description: The description of this DocumentReference.
        :param file_name: The file_name of this DocumentReference.
        :param id: The id of this DocumentReference.
        :param modification_date: The modification_date of this DocumentReference.
        :param pages: The pages of this DocumentReference.
        :param type: The type of this DocumentReference.
        """
        self.openapi_types = {
            'active': bool,
            'description': str,
            'file_name': str,
            'id': str,
            'modification_date': datetime,
            'pages': List[DocumentPage],
            'type': str
        }

        self.attribute_map = {
            'active': 'active',
            'description': 'description',
            'file_name': 'fileName',
            'id': 'id',
            'modification_date': 'modificationDate',
            'pages': 'pages',
            'type': 'type'
        }

        self._active = active
        self._description = description
        self._file_name = file_name
        self._id = id
        self._modification_date = modification_date
        self._pages = pages
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DocumentReference':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DocumentReference of this DocumentReference.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def active(self):
        """Gets the active of this DocumentReference.

        Identifies whether the document is active and used for checks.

        :return: The active of this DocumentReference.
        :rtype: bool
        """
        return self._active

    @active.setter
    def active(self, active):
        """Sets the active of this DocumentReference.

        Identifies whether the document is active and used for checks.

        :param active: The active of this DocumentReference.
        :type active: bool
        """

        self._active = active

    @property
    def description(self):
        """Gets the description of this DocumentReference.

        Your description for the document.

        :return: The description of this DocumentReference.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this DocumentReference.

        Your description for the document.

        :param description: The description of this DocumentReference.
        :type description: str
        """

        self._description = description

    @property
    def file_name(self):
        """Gets the file_name of this DocumentReference.

        Document name.

        :return: The file_name of this DocumentReference.
        :rtype: str
        """
        return self._file_name

    @file_name.setter
    def file_name(self, file_name):
        """Sets the file_name of this DocumentReference.

        Document name.

        :param file_name: The file_name of this DocumentReference.
        :type file_name: str
        """

        self._file_name = file_name

    @property
    def id(self):
        """Gets the id of this DocumentReference.

        The unique identifier of the resource.

        :return: The id of this DocumentReference.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this DocumentReference.

        The unique identifier of the resource.

        :param id: The id of this DocumentReference.
        :type id: str
        """

        self._id = id

    @property
    def modification_date(self):
        """Gets the modification_date of this DocumentReference.

        The modification date of the document.

        :return: The modification_date of this DocumentReference.
        :rtype: datetime
        """
        return self._modification_date

    @modification_date.setter
    def modification_date(self, modification_date):
        """Sets the modification_date of this DocumentReference.

        The modification date of the document.

        :param modification_date: The modification_date of this DocumentReference.
        :type modification_date: datetime
        """

        self._modification_date = modification_date

    @property
    def pages(self):
        """Gets the pages of this DocumentReference.

        List of document pages

        :return: The pages of this DocumentReference.
        :rtype: List[DocumentPage]
        """
        return self._pages

    @pages.setter
    def pages(self, pages):
        """Sets the pages of this DocumentReference.

        List of document pages

        :param pages: The pages of this DocumentReference.
        :type pages: List[DocumentPage]
        """

        self._pages = pages

    @property
    def type(self):
        """Gets the type of this DocumentReference.

        Type of document, used when providing an ID number or uploading a document.

        :return: The type of this DocumentReference.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this DocumentReference.

        Type of document, used when providing an ID number or uploading a document.

        :param type: The type of this DocumentReference.
        :type type: str
        """

        self._type = type
