# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PciSigningRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, pci_template_references: List[str]=None, signed_by: str=None):
        """PciSigningRequest - a model defined in OpenAPI

        :param pci_template_references: The pci_template_references of this PciSigningRequest.
        :param signed_by: The signed_by of this PciSigningRequest.
        """
        self.openapi_types = {
            'pci_template_references': List[str],
            'signed_by': str
        }

        self.attribute_map = {
            'pci_template_references': 'pciTemplateReferences',
            'signed_by': 'signedBy'
        }

        self._pci_template_references = pci_template_references
        self._signed_by = signed_by

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PciSigningRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PciSigningRequest of this PciSigningRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def pci_template_references(self):
        """Gets the pci_template_references of this PciSigningRequest.

        The array of Adyen-generated unique identifiers for the questionnaires.

        :return: The pci_template_references of this PciSigningRequest.
        :rtype: List[str]
        """
        return self._pci_template_references

    @pci_template_references.setter
    def pci_template_references(self, pci_template_references):
        """Sets the pci_template_references of this PciSigningRequest.

        The array of Adyen-generated unique identifiers for the questionnaires.

        :param pci_template_references: The pci_template_references of this PciSigningRequest.
        :type pci_template_references: List[str]
        """
        if pci_template_references is None:
            raise ValueError("Invalid value for `pci_template_references`, must not be `None`")

        self._pci_template_references = pci_template_references

    @property
    def signed_by(self):
        """Gets the signed_by of this PciSigningRequest.

        The [legal entity ID](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/legalEntities__resParam_id) of the individual who signs the PCI questionnaire.

        :return: The signed_by of this PciSigningRequest.
        :rtype: str
        """
        return self._signed_by

    @signed_by.setter
    def signed_by(self, signed_by):
        """Sets the signed_by of this PciSigningRequest.

        The [legal entity ID](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/legalEntities__resParam_id) of the individual who signs the PCI questionnaire.

        :param signed_by: The signed_by of this PciSigningRequest.
        :type signed_by: str
        """
        if signed_by is None:
            raise ValueError("Invalid value for `signed_by`, must not be `None`")

        self._signed_by = signed_by
