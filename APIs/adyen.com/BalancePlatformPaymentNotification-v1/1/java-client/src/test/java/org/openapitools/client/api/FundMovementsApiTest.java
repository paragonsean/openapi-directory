/*
 * Payment webhooks (deprecated)
 * The payment webhooks are deprecated. Use the [accounting webhooks](https://docs.adyen.com/api-explorer/transfer-webhooks/latest/overview) instead.  Adyen sends webhooks to inform your system about the creation of payment resources and money movements in your platform.  You can use these webhooks to build your implementation. For example, you can use this information to update balances in your own dashboards or to keep track of incoming funds.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.BalancePlatformNotificationResponse;
import org.openapitools.client.model.IncomingTransferNotificationRequest;
import org.openapitools.client.model.OutgoingTransferNotificationRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for FundMovementsApi
 */
@Disabled
public class FundMovementsApiTest {

    private final FundMovementsApi api = new FundMovementsApi();

    /**
     * Incoming transfer created
     *
     * Adyen sends this webhook when there are incoming funds due to a refund or a fund transfer. Use the &#x60;paymentId&#x60; to link to the original refund request or funds transfer request. Check the content of the webhook to differentiate the events.  * For refunds, the webhook includes the payment instrument to which funds will be refunded.  * For incoming fund transfers, the webhook only includes information about the balance account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postBalancePlatformIncomingTransferCreatedTest() throws ApiException {
        IncomingTransferNotificationRequest incomingTransferNotificationRequest = null;
        BalancePlatformNotificationResponse response = api.postBalancePlatformIncomingTransferCreated(incomingTransferNotificationRequest);
        // TODO: test validations
    }

    /**
     * Incoming transfer updated
     *
     * Adyen sends this webhook when funds were added to the balance account. This could be due to a refund or a funds transfer. Use the &#x60;data.id&#x60; to track the original incoming transfer resource in the &#x60;balancePlatform.incomingTransfer.created&#x60; webhook.  The &#x60;status&#x60; field indicates the event that triggered the webhook.   * For refunds, the &#x60;status&#x60; is **Refunded**.   * For incoming fund transfers, the &#x60;status&#x60; is **IncomingTransfer**.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postBalancePlatformIncomingTransferUpdatedTest() throws ApiException {
        IncomingTransferNotificationRequest incomingTransferNotificationRequest = null;
        BalancePlatformNotificationResponse response = api.postBalancePlatformIncomingTransferUpdated(incomingTransferNotificationRequest);
        // TODO: test validations
    }

    /**
     * Outgoing transfer created
     *
     * Adyen sends this webhook when funds were deducted from a balance account due to a capture or a funds transfer. Use the &#x60;paymentId&#x60; to link to the original payment authorisation or funds transfer request.  The &#x60;status&#x60; field indicates the event that triggered the webhook.   * For captures, the &#x60;status&#x60; will be **Captured**.   * For outgoing fund transfers, the &#x60;status&#x60; will be **OutgoingTransfer**.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postBalancePlatformOutgoingTransferCreatedTest() throws ApiException {
        OutgoingTransferNotificationRequest outgoingTransferNotificationRequest = null;
        BalancePlatformNotificationResponse response = api.postBalancePlatformOutgoingTransferCreated(outgoingTransferNotificationRequest);
        // TODO: test validations
    }

    /**
     * Outgoing transfer updated
     *
     * Adyen sends this webhook when there is updated information after funds have been deducted from a balance account. For example, if the fund transfer failed.  Use the &#x60;data.id&#x60; to track the original outgoing transfer resource from the &#x60;balancePlatform.outgoingTransfer.created&#x60; webhook.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postBalancePlatformOutgoingTransferUpdatedTest() throws ApiException {
        OutgoingTransferNotificationRequest outgoingTransferNotificationRequest = null;
        BalancePlatformNotificationResponse response = api.postBalancePlatformOutgoingTransferUpdated(outgoingTransferNotificationRequest);
        // TODO: test validations
    }

}
