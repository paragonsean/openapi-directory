/**
 * Payment webhooks (deprecated)
 * The payment webhooks are deprecated. Use the [accounting webhooks](https://docs.adyen.com/api-explorer/transfer-webhooks/latest/overview) instead.  Adyen sends webhooks to inform your system about the creation of payment resources and money movements in your platform.  You can use these webhooks to build your implementation. For example, you can use this information to update balances in your own dashboards or to keep track of incoming funds.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.PaymentWebhooksDeprecated);
  }
}(this, function(expect, PaymentWebhooksDeprecated) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new PaymentWebhooksDeprecated.PaymentNotificationData();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('PaymentNotificationData', function() {
    it('should create an instance of PaymentNotificationData', function() {
      // uncomment below and update the code to test PaymentNotificationData
      //var instance = new PaymentWebhooksDeprecated.PaymentNotificationData();
      //expect(instance).to.be.a(PaymentWebhooksDeprecated.PaymentNotificationData);
    });

    it('should have the property accountHolder (base name: "accountHolder")', function() {
      // uncomment below and update the code to test the property accountHolder
      //var instance = new PaymentWebhooksDeprecated.PaymentNotificationData();
      //expect(instance).to.be();
    });

    it('should have the property amount (base name: "amount")', function() {
      // uncomment below and update the code to test the property amount
      //var instance = new PaymentWebhooksDeprecated.PaymentNotificationData();
      //expect(instance).to.be();
    });

    it('should have the property authCode (base name: "authCode")', function() {
      // uncomment below and update the code to test the property authCode
      //var instance = new PaymentWebhooksDeprecated.PaymentNotificationData();
      //expect(instance).to.be();
    });

    it('should have the property balanceAccount (base name: "balanceAccount")', function() {
      // uncomment below and update the code to test the property balanceAccount
      //var instance = new PaymentWebhooksDeprecated.PaymentNotificationData();
      //expect(instance).to.be();
    });

    it('should have the property balancePlatform (base name: "balancePlatform")', function() {
      // uncomment below and update the code to test the property balancePlatform
      //var instance = new PaymentWebhooksDeprecated.PaymentNotificationData();
      //expect(instance).to.be();
    });

    it('should have the property creationDate (base name: "creationDate")', function() {
      // uncomment below and update the code to test the property creationDate
      //var instance = new PaymentWebhooksDeprecated.PaymentNotificationData();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new PaymentWebhooksDeprecated.PaymentNotificationData();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new PaymentWebhooksDeprecated.PaymentNotificationData();
      //expect(instance).to.be();
    });

    it('should have the property merchantData (base name: "merchantData")', function() {
      // uncomment below and update the code to test the property merchantData
      //var instance = new PaymentWebhooksDeprecated.PaymentNotificationData();
      //expect(instance).to.be();
    });

    it('should have the property modification (base name: "modification")', function() {
      // uncomment below and update the code to test the property modification
      //var instance = new PaymentWebhooksDeprecated.PaymentNotificationData();
      //expect(instance).to.be();
    });

    it('should have the property originalAmount (base name: "originalAmount")', function() {
      // uncomment below and update the code to test the property originalAmount
      //var instance = new PaymentWebhooksDeprecated.PaymentNotificationData();
      //expect(instance).to.be();
    });

    it('should have the property paymentInstrument (base name: "paymentInstrument")', function() {
      // uncomment below and update the code to test the property paymentInstrument
      //var instance = new PaymentWebhooksDeprecated.PaymentNotificationData();
      //expect(instance).to.be();
    });

    it('should have the property platformPayment (base name: "platformPayment")', function() {
      // uncomment below and update the code to test the property platformPayment
      //var instance = new PaymentWebhooksDeprecated.PaymentNotificationData();
      //expect(instance).to.be();
    });

    it('should have the property processingType (base name: "processingType")', function() {
      // uncomment below and update the code to test the property processingType
      //var instance = new PaymentWebhooksDeprecated.PaymentNotificationData();
      //expect(instance).to.be();
    });

    it('should have the property reference (base name: "reference")', function() {
      // uncomment below and update the code to test the property reference
      //var instance = new PaymentWebhooksDeprecated.PaymentNotificationData();
      //expect(instance).to.be();
    });

    it('should have the property referenceForBeneficiary (base name: "referenceForBeneficiary")', function() {
      // uncomment below and update the code to test the property referenceForBeneficiary
      //var instance = new PaymentWebhooksDeprecated.PaymentNotificationData();
      //expect(instance).to.be();
    });

    it('should have the property relayedAuthorisationData (base name: "relayedAuthorisationData")', function() {
      // uncomment below and update the code to test the property relayedAuthorisationData
      //var instance = new PaymentWebhooksDeprecated.PaymentNotificationData();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new PaymentWebhooksDeprecated.PaymentNotificationData();
      //expect(instance).to.be();
    });

    it('should have the property transactionRulesResult (base name: "transactionRulesResult")', function() {
      // uncomment below and update the code to test the property transactionRulesResult
      //var instance = new PaymentWebhooksDeprecated.PaymentNotificationData();
      //expect(instance).to.be();
    });

    it('should have the property validationResult (base name: "validationResult")', function() {
      // uncomment below and update the code to test the property validationResult
      //var instance = new PaymentWebhooksDeprecated.PaymentNotificationData();
      //expect(instance).to.be();
    });

  });

}));
