/**
 * Payment webhooks (deprecated)
 * The payment webhooks are deprecated. Use the [accounting webhooks](https://docs.adyen.com/api-explorer/transfer-webhooks/latest/overview) instead.  Adyen sends webhooks to inform your system about the creation of payment resources and money movements in your platform.  You can use these webhooks to build your implementation. For example, you can use this information to update balances in your own dashboards or to keep track of incoming funds.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import OutgoingTransferNotificationData from './OutgoingTransferNotificationData';

/**
 * The OutgoingTransferNotificationRequest model module.
 * @module model/OutgoingTransferNotificationRequest
 * @version 1
 */
class OutgoingTransferNotificationRequest {
    /**
     * Constructs a new <code>OutgoingTransferNotificationRequest</code>.
     * @alias module:model/OutgoingTransferNotificationRequest
     * @param data {module:model/OutgoingTransferNotificationData} Contains details about the event.
     * @param environment {String} The environment from which the webhook originated.  Possible values: **test**, **live**.
     * @param type {module:model/OutgoingTransferNotificationRequest.TypeEnum} Type of webhook.
     */
    constructor(data, environment, type) { 
        
        OutgoingTransferNotificationRequest.initialize(this, data, environment, type);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, data, environment, type) { 
        obj['data'] = data;
        obj['environment'] = environment;
        obj['type'] = type;
    }

    /**
     * Constructs a <code>OutgoingTransferNotificationRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OutgoingTransferNotificationRequest} obj Optional instance to populate.
     * @return {module:model/OutgoingTransferNotificationRequest} The populated <code>OutgoingTransferNotificationRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OutgoingTransferNotificationRequest();

            if (data.hasOwnProperty('data')) {
                obj['data'] = OutgoingTransferNotificationData.constructFromObject(data['data']);
            }
            if (data.hasOwnProperty('environment')) {
                obj['environment'] = ApiClient.convertToType(data['environment'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OutgoingTransferNotificationRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OutgoingTransferNotificationRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of OutgoingTransferNotificationRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `data`
        if (data['data']) { // data not null
          OutgoingTransferNotificationData.validateJSON(data['data']);
        }
        // ensure the json data is a string
        if (data['environment'] && !(typeof data['environment'] === 'string' || data['environment'] instanceof String)) {
            throw new Error("Expected the field `environment` to be a primitive type in the JSON string but got " + data['environment']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}

OutgoingTransferNotificationRequest.RequiredProperties = ["data", "environment", "type"];

/**
 * Contains details about the event.
 * @member {module:model/OutgoingTransferNotificationData} data
 */
OutgoingTransferNotificationRequest.prototype['data'] = undefined;

/**
 * The environment from which the webhook originated.  Possible values: **test**, **live**.
 * @member {String} environment
 */
OutgoingTransferNotificationRequest.prototype['environment'] = undefined;

/**
 * Type of webhook.
 * @member {module:model/OutgoingTransferNotificationRequest.TypeEnum} type
 */
OutgoingTransferNotificationRequest.prototype['type'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
OutgoingTransferNotificationRequest['TypeEnum'] = {

    /**
     * value: "balancePlatform.outgoingTransfer.created"
     * @const
     */
    "created": "balancePlatform.outgoingTransfer.created",

    /**
     * value: "balancePlatform.outgoingTransfer.updated"
     * @const
     */
    "updated": "balancePlatform.outgoingTransfer.updated"
};



export default OutgoingTransferNotificationRequest;

