/**
 * Payment webhooks (deprecated)
 * The payment webhooks are deprecated. Use the [accounting webhooks](https://docs.adyen.com/api-explorer/transfer-webhooks/latest/overview) instead.  Adyen sends webhooks to inform your system about the creation of payment resources and money movements in your platform.  You can use these webhooks to build your implementation. For example, you can use this information to update balances in your own dashboards or to keep track of incoming funds.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Address from './model/Address';
import Amount from './model/Amount';
import BalancePlatformNotificationResponse from './model/BalancePlatformNotificationResponse';
import BankAccountInfo from './model/BankAccountInfo';
import Counterparty from './model/Counterparty';
import IncomingTransferNotificationData from './model/IncomingTransferNotificationData';
import IncomingTransferNotificationRequest from './model/IncomingTransferNotificationRequest';
import MerchantData from './model/MerchantData';
import Name from './model/Name';
import NameLocation from './model/NameLocation';
import NotificationModificationData from './model/NotificationModificationData';
import OutgoingTransferNotificationData from './model/OutgoingTransferNotificationData';
import OutgoingTransferNotificationRequest from './model/OutgoingTransferNotificationRequest';
import PaymentNotificationData from './model/PaymentNotificationData';
import PaymentNotificationRequest from './model/PaymentNotificationRequest';
import PlatformPayment from './model/PlatformPayment';
import RelayedAuthorisationData from './model/RelayedAuthorisationData';
import Resource from './model/Resource';
import ResourceReference from './model/ResourceReference';
import TransactionEventViolation from './model/TransactionEventViolation';
import TransactionNotificationData from './model/TransactionNotificationData';
import TransactionRuleReference from './model/TransactionRuleReference';
import TransactionRuleSource from './model/TransactionRuleSource';
import TransactionRulesResult from './model/TransactionRulesResult';
import ValidationResult from './model/ValidationResult';


/**
* The payment webhooks are deprecated. Use the [accounting webhooks](https://docs.adyen.com/api-explorer/transfer-webhooks/latest/overview) instead.  Adyen sends webhooks to inform your system about the creation of payment resources and money movements in your platform.  You can use these webhooks to build your implementation. For example, you can use this information to update balances in your own dashboards or to keep track of incoming funds..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var PaymentWebhooksDeprecated = require('index'); // See note below*.
* var xxxSvc = new PaymentWebhooksDeprecated.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new PaymentWebhooksDeprecated.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new PaymentWebhooksDeprecated.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new PaymentWebhooksDeprecated.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Address model constructor.
     * @property {module:model/Address}
     */
    Address,

    /**
     * The Amount model constructor.
     * @property {module:model/Amount}
     */
    Amount,

    /**
     * The BalancePlatformNotificationResponse model constructor.
     * @property {module:model/BalancePlatformNotificationResponse}
     */
    BalancePlatformNotificationResponse,

    /**
     * The BankAccountInfo model constructor.
     * @property {module:model/BankAccountInfo}
     */
    BankAccountInfo,

    /**
     * The Counterparty model constructor.
     * @property {module:model/Counterparty}
     */
    Counterparty,

    /**
     * The IncomingTransferNotificationData model constructor.
     * @property {module:model/IncomingTransferNotificationData}
     */
    IncomingTransferNotificationData,

    /**
     * The IncomingTransferNotificationRequest model constructor.
     * @property {module:model/IncomingTransferNotificationRequest}
     */
    IncomingTransferNotificationRequest,

    /**
     * The MerchantData model constructor.
     * @property {module:model/MerchantData}
     */
    MerchantData,

    /**
     * The Name model constructor.
     * @property {module:model/Name}
     */
    Name,

    /**
     * The NameLocation model constructor.
     * @property {module:model/NameLocation}
     */
    NameLocation,

    /**
     * The NotificationModificationData model constructor.
     * @property {module:model/NotificationModificationData}
     */
    NotificationModificationData,

    /**
     * The OutgoingTransferNotificationData model constructor.
     * @property {module:model/OutgoingTransferNotificationData}
     */
    OutgoingTransferNotificationData,

    /**
     * The OutgoingTransferNotificationRequest model constructor.
     * @property {module:model/OutgoingTransferNotificationRequest}
     */
    OutgoingTransferNotificationRequest,

    /**
     * The PaymentNotificationData model constructor.
     * @property {module:model/PaymentNotificationData}
     */
    PaymentNotificationData,

    /**
     * The PaymentNotificationRequest model constructor.
     * @property {module:model/PaymentNotificationRequest}
     */
    PaymentNotificationRequest,

    /**
     * The PlatformPayment model constructor.
     * @property {module:model/PlatformPayment}
     */
    PlatformPayment,

    /**
     * The RelayedAuthorisationData model constructor.
     * @property {module:model/RelayedAuthorisationData}
     */
    RelayedAuthorisationData,

    /**
     * The Resource model constructor.
     * @property {module:model/Resource}
     */
    Resource,

    /**
     * The ResourceReference model constructor.
     * @property {module:model/ResourceReference}
     */
    ResourceReference,

    /**
     * The TransactionEventViolation model constructor.
     * @property {module:model/TransactionEventViolation}
     */
    TransactionEventViolation,

    /**
     * The TransactionNotificationData model constructor.
     * @property {module:model/TransactionNotificationData}
     */
    TransactionNotificationData,

    /**
     * The TransactionRuleReference model constructor.
     * @property {module:model/TransactionRuleReference}
     */
    TransactionRuleReference,

    /**
     * The TransactionRuleSource model constructor.
     * @property {module:model/TransactionRuleSource}
     */
    TransactionRuleSource,

    /**
     * The TransactionRulesResult model constructor.
     * @property {module:model/TransactionRulesResult}
     */
    TransactionRulesResult,

    /**
     * The ValidationResult model constructor.
     * @property {module:model/ValidationResult}
     */
    ValidationResult
};
