/**
 * Payment webhooks (deprecated)
 * The payment webhooks are deprecated. Use the [accounting webhooks](https://docs.adyen.com/api-explorer/transfer-webhooks/latest/overview) instead.  Adyen sends webhooks to inform your system about the creation of payment resources and money movements in your platform.  You can use these webhooks to build your implementation. For example, you can use this information to update balances in your own dashboards or to keep track of incoming funds.
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPlatformPayment.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPlatformPayment::OAIPlatformPayment(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPlatformPayment::OAIPlatformPayment() {
    this->initializeModel();
}

OAIPlatformPayment::~OAIPlatformPayment() {}

void OAIPlatformPayment::initializeModel() {

    m_account_isSet = false;
    m_account_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_modification_merchant_reference_isSet = false;
    m_modification_merchant_reference_isValid = false;

    m_modification_psp_reference_isSet = false;
    m_modification_psp_reference_isValid = false;

    m_payment_merchant_reference_isSet = false;
    m_payment_merchant_reference_isValid = false;

    m_payment_psp_reference_isSet = false;
    m_payment_psp_reference_isValid = false;

    m_reference_isSet = false;
    m_reference_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAIPlatformPayment::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPlatformPayment::fromJsonObject(QJsonObject json) {

    m_account_isValid = ::OpenAPI::fromJsonValue(m_account, json[QString("account")]);
    m_account_isSet = !json[QString("account")].isNull() && m_account_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_modification_merchant_reference_isValid = ::OpenAPI::fromJsonValue(m_modification_merchant_reference, json[QString("modificationMerchantReference")]);
    m_modification_merchant_reference_isSet = !json[QString("modificationMerchantReference")].isNull() && m_modification_merchant_reference_isValid;

    m_modification_psp_reference_isValid = ::OpenAPI::fromJsonValue(m_modification_psp_reference, json[QString("modificationPspReference")]);
    m_modification_psp_reference_isSet = !json[QString("modificationPspReference")].isNull() && m_modification_psp_reference_isValid;

    m_payment_merchant_reference_isValid = ::OpenAPI::fromJsonValue(m_payment_merchant_reference, json[QString("paymentMerchantReference")]);
    m_payment_merchant_reference_isSet = !json[QString("paymentMerchantReference")].isNull() && m_payment_merchant_reference_isValid;

    m_payment_psp_reference_isValid = ::OpenAPI::fromJsonValue(m_payment_psp_reference, json[QString("paymentPspReference")]);
    m_payment_psp_reference_isSet = !json[QString("paymentPspReference")].isNull() && m_payment_psp_reference_isValid;

    m_reference_isValid = ::OpenAPI::fromJsonValue(m_reference, json[QString("reference")]);
    m_reference_isSet = !json[QString("reference")].isNull() && m_reference_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAIPlatformPayment::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPlatformPayment::asJsonObject() const {
    QJsonObject obj;
    if (m_account_isSet) {
        obj.insert(QString("account"), ::OpenAPI::toJsonValue(m_account));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_modification_merchant_reference_isSet) {
        obj.insert(QString("modificationMerchantReference"), ::OpenAPI::toJsonValue(m_modification_merchant_reference));
    }
    if (m_modification_psp_reference_isSet) {
        obj.insert(QString("modificationPspReference"), ::OpenAPI::toJsonValue(m_modification_psp_reference));
    }
    if (m_payment_merchant_reference_isSet) {
        obj.insert(QString("paymentMerchantReference"), ::OpenAPI::toJsonValue(m_payment_merchant_reference));
    }
    if (m_payment_psp_reference_isSet) {
        obj.insert(QString("paymentPspReference"), ::OpenAPI::toJsonValue(m_payment_psp_reference));
    }
    if (m_reference_isSet) {
        obj.insert(QString("reference"), ::OpenAPI::toJsonValue(m_reference));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

QString OAIPlatformPayment::getAccount() const {
    return m_account;
}
void OAIPlatformPayment::setAccount(const QString &account) {
    m_account = account;
    m_account_isSet = true;
}

bool OAIPlatformPayment::is_account_Set() const{
    return m_account_isSet;
}

bool OAIPlatformPayment::is_account_Valid() const{
    return m_account_isValid;
}

QString OAIPlatformPayment::getDescription() const {
    return m_description;
}
void OAIPlatformPayment::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIPlatformPayment::is_description_Set() const{
    return m_description_isSet;
}

bool OAIPlatformPayment::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIPlatformPayment::getModificationMerchantReference() const {
    return m_modification_merchant_reference;
}
void OAIPlatformPayment::setModificationMerchantReference(const QString &modification_merchant_reference) {
    m_modification_merchant_reference = modification_merchant_reference;
    m_modification_merchant_reference_isSet = true;
}

bool OAIPlatformPayment::is_modification_merchant_reference_Set() const{
    return m_modification_merchant_reference_isSet;
}

bool OAIPlatformPayment::is_modification_merchant_reference_Valid() const{
    return m_modification_merchant_reference_isValid;
}

QString OAIPlatformPayment::getModificationPspReference() const {
    return m_modification_psp_reference;
}
void OAIPlatformPayment::setModificationPspReference(const QString &modification_psp_reference) {
    m_modification_psp_reference = modification_psp_reference;
    m_modification_psp_reference_isSet = true;
}

bool OAIPlatformPayment::is_modification_psp_reference_Set() const{
    return m_modification_psp_reference_isSet;
}

bool OAIPlatformPayment::is_modification_psp_reference_Valid() const{
    return m_modification_psp_reference_isValid;
}

QString OAIPlatformPayment::getPaymentMerchantReference() const {
    return m_payment_merchant_reference;
}
void OAIPlatformPayment::setPaymentMerchantReference(const QString &payment_merchant_reference) {
    m_payment_merchant_reference = payment_merchant_reference;
    m_payment_merchant_reference_isSet = true;
}

bool OAIPlatformPayment::is_payment_merchant_reference_Set() const{
    return m_payment_merchant_reference_isSet;
}

bool OAIPlatformPayment::is_payment_merchant_reference_Valid() const{
    return m_payment_merchant_reference_isValid;
}

QString OAIPlatformPayment::getPaymentPspReference() const {
    return m_payment_psp_reference;
}
void OAIPlatformPayment::setPaymentPspReference(const QString &payment_psp_reference) {
    m_payment_psp_reference = payment_psp_reference;
    m_payment_psp_reference_isSet = true;
}

bool OAIPlatformPayment::is_payment_psp_reference_Set() const{
    return m_payment_psp_reference_isSet;
}

bool OAIPlatformPayment::is_payment_psp_reference_Valid() const{
    return m_payment_psp_reference_isValid;
}

QString OAIPlatformPayment::getReference() const {
    return m_reference;
}
void OAIPlatformPayment::setReference(const QString &reference) {
    m_reference = reference;
    m_reference_isSet = true;
}

bool OAIPlatformPayment::is_reference_Set() const{
    return m_reference_isSet;
}

bool OAIPlatformPayment::is_reference_Valid() const{
    return m_reference_isValid;
}

QString OAIPlatformPayment::getType() const {
    return m_type;
}
void OAIPlatformPayment::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIPlatformPayment::is_type_Set() const{
    return m_type_isSet;
}

bool OAIPlatformPayment::is_type_Valid() const{
    return m_type_isValid;
}

bool OAIPlatformPayment::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_modification_merchant_reference_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_modification_psp_reference_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_payment_merchant_reference_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_payment_psp_reference_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_reference_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPlatformPayment::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
