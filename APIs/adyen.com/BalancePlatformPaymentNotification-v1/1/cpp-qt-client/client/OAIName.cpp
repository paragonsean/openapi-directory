/**
 * Payment webhooks (deprecated)
 * The payment webhooks are deprecated. Use the [accounting webhooks](https://docs.adyen.com/api-explorer/transfer-webhooks/latest/overview) instead.  Adyen sends webhooks to inform your system about the creation of payment resources and money movements in your platform.  You can use these webhooks to build your implementation. For example, you can use this information to update balances in your own dashboards or to keep track of incoming funds.
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIName.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIName::OAIName(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIName::OAIName() {
    this->initializeModel();
}

OAIName::~OAIName() {}

void OAIName::initializeModel() {

    m_first_name_isSet = false;
    m_first_name_isValid = false;

    m_full_name_isSet = false;
    m_full_name_isValid = false;

    m_infix_isSet = false;
    m_infix_isValid = false;

    m_last_name_isSet = false;
    m_last_name_isValid = false;
}

void OAIName::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIName::fromJsonObject(QJsonObject json) {

    m_first_name_isValid = ::OpenAPI::fromJsonValue(m_first_name, json[QString("firstName")]);
    m_first_name_isSet = !json[QString("firstName")].isNull() && m_first_name_isValid;

    m_full_name_isValid = ::OpenAPI::fromJsonValue(m_full_name, json[QString("fullName")]);
    m_full_name_isSet = !json[QString("fullName")].isNull() && m_full_name_isValid;

    m_infix_isValid = ::OpenAPI::fromJsonValue(m_infix, json[QString("infix")]);
    m_infix_isSet = !json[QString("infix")].isNull() && m_infix_isValid;

    m_last_name_isValid = ::OpenAPI::fromJsonValue(m_last_name, json[QString("lastName")]);
    m_last_name_isSet = !json[QString("lastName")].isNull() && m_last_name_isValid;
}

QString OAIName::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIName::asJsonObject() const {
    QJsonObject obj;
    if (m_first_name_isSet) {
        obj.insert(QString("firstName"), ::OpenAPI::toJsonValue(m_first_name));
    }
    if (m_full_name_isSet) {
        obj.insert(QString("fullName"), ::OpenAPI::toJsonValue(m_full_name));
    }
    if (m_infix_isSet) {
        obj.insert(QString("infix"), ::OpenAPI::toJsonValue(m_infix));
    }
    if (m_last_name_isSet) {
        obj.insert(QString("lastName"), ::OpenAPI::toJsonValue(m_last_name));
    }
    return obj;
}

QString OAIName::getFirstName() const {
    return m_first_name;
}
void OAIName::setFirstName(const QString &first_name) {
    m_first_name = first_name;
    m_first_name_isSet = true;
}

bool OAIName::is_first_name_Set() const{
    return m_first_name_isSet;
}

bool OAIName::is_first_name_Valid() const{
    return m_first_name_isValid;
}

QString OAIName::getFullName() const {
    return m_full_name;
}
void OAIName::setFullName(const QString &full_name) {
    m_full_name = full_name;
    m_full_name_isSet = true;
}

bool OAIName::is_full_name_Set() const{
    return m_full_name_isSet;
}

bool OAIName::is_full_name_Valid() const{
    return m_full_name_isValid;
}

QString OAIName::getInfix() const {
    return m_infix;
}
void OAIName::setInfix(const QString &infix) {
    m_infix = infix;
    m_infix_isSet = true;
}

bool OAIName::is_infix_Set() const{
    return m_infix_isSet;
}

bool OAIName::is_infix_Valid() const{
    return m_infix_isValid;
}

QString OAIName::getLastName() const {
    return m_last_name;
}
void OAIName::setLastName(const QString &last_name) {
    m_last_name = last_name;
    m_last_name_isSet = true;
}

bool OAIName::is_last_name_Set() const{
    return m_last_name_isSet;
}

bool OAIName::is_last_name_Valid() const{
    return m_last_name_isValid;
}

bool OAIName::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_first_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_full_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_infix_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIName::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
