/**
 * Payment webhooks (deprecated)
 * The payment webhooks are deprecated. Use the [accounting webhooks](https://docs.adyen.com/api-explorer/transfer-webhooks/latest/overview) instead.  Adyen sends webhooks to inform your system about the creation of payment resources and money movements in your platform.  You can use these webhooks to build your implementation. For example, you can use this information to update balances in your own dashboards or to keep track of incoming funds.
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITransactionRulesResult.h
 *
 * 
 */

#ifndef OAITransactionRulesResult_H
#define OAITransactionRulesResult_H

#include <QJsonObject>

#include "OAITransactionEventViolation.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITransactionEventViolation;

class OAITransactionRulesResult : public OAIObject {
public:
    OAITransactionRulesResult();
    OAITransactionRulesResult(QString json);
    ~OAITransactionRulesResult() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAdvice() const;
    void setAdvice(const QString &advice);
    bool is_advice_Set() const;
    bool is_advice_Valid() const;

    bool isAllRulesPassed() const;
    void setAllRulesPassed(const bool &all_rules_passed);
    bool is_all_rules_passed_Set() const;
    bool is_all_rules_passed_Valid() const;

    QList<OAITransactionEventViolation> getFailedTransactionRules() const;
    void setFailedTransactionRules(const QList<OAITransactionEventViolation> &failed_transaction_rules);
    bool is_failed_transaction_rules_Set() const;
    bool is_failed_transaction_rules_Valid() const;

    qint32 getScore() const;
    void setScore(const qint32 &score);
    bool is_score_Set() const;
    bool is_score_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_advice;
    bool m_advice_isSet;
    bool m_advice_isValid;

    bool m_all_rules_passed;
    bool m_all_rules_passed_isSet;
    bool m_all_rules_passed_isValid;

    QList<OAITransactionEventViolation> m_failed_transaction_rules;
    bool m_failed_transaction_rules_isSet;
    bool m_failed_transaction_rules_isValid;

    qint32 m_score;
    bool m_score_isSet;
    bool m_score_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITransactionRulesResult)

#endif // OAITransactionRulesResult_H
