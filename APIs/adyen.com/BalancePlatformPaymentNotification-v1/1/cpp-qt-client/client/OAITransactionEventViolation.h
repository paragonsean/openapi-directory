/**
 * Payment webhooks (deprecated)
 * The payment webhooks are deprecated. Use the [accounting webhooks](https://docs.adyen.com/api-explorer/transfer-webhooks/latest/overview) instead.  Adyen sends webhooks to inform your system about the creation of payment resources and money movements in your platform.  You can use these webhooks to build your implementation. For example, you can use this information to update balances in your own dashboards or to keep track of incoming funds.
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITransactionEventViolation.h
 *
 * 
 */

#ifndef OAITransactionEventViolation_H
#define OAITransactionEventViolation_H

#include <QJsonObject>

#include "OAITransactionRuleReference.h"
#include "OAITransactionRuleSource.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITransactionRuleReference;
class OAITransactionRuleSource;

class OAITransactionEventViolation : public OAIObject {
public:
    OAITransactionEventViolation();
    OAITransactionEventViolation(QString json);
    ~OAITransactionEventViolation() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getReason() const;
    void setReason(const QString &reason);
    bool is_reason_Set() const;
    bool is_reason_Valid() const;

    OAITransactionRuleReference getTransactionRule() const;
    void setTransactionRule(const OAITransactionRuleReference &transaction_rule);
    bool is_transaction_rule_Set() const;
    bool is_transaction_rule_Valid() const;

    OAITransactionRuleSource getTransactionRuleSource() const;
    void setTransactionRuleSource(const OAITransactionRuleSource &transaction_rule_source);
    bool is_transaction_rule_source_Set() const;
    bool is_transaction_rule_source_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_reason;
    bool m_reason_isSet;
    bool m_reason_isValid;

    OAITransactionRuleReference m_transaction_rule;
    bool m_transaction_rule_isSet;
    bool m_transaction_rule_isValid;

    OAITransactionRuleSource m_transaction_rule_source;
    bool m_transaction_rule_source_isSet;
    bool m_transaction_rule_source_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITransactionEventViolation)

#endif // OAITransactionEventViolation_H
