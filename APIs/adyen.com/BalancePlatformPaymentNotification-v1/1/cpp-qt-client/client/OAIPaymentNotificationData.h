/**
 * Payment webhooks (deprecated)
 * The payment webhooks are deprecated. Use the [accounting webhooks](https://docs.adyen.com/api-explorer/transfer-webhooks/latest/overview) instead.  Adyen sends webhooks to inform your system about the creation of payment resources and money movements in your platform.  You can use these webhooks to build your implementation. For example, you can use this information to update balances in your own dashboards or to keep track of incoming funds.
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPaymentNotificationData.h
 *
 * 
 */

#ifndef OAIPaymentNotificationData_H
#define OAIPaymentNotificationData_H

#include <QJsonObject>

#include "OAIAmount.h"
#include "OAIMerchantData.h"
#include "OAINotificationModificationData.h"
#include "OAIPlatformPayment.h"
#include "OAIRelayedAuthorisationData.h"
#include "OAIResourceReference.h"
#include "OAITransactionRulesResult.h"
#include "OAIValidationResult.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIResourceReference;
class OAIAmount;
class OAIMerchantData;
class OAINotificationModificationData;
class OAIPlatformPayment;
class OAIRelayedAuthorisationData;
class OAITransactionRulesResult;
class OAIValidationResult;

class OAIPaymentNotificationData : public OAIObject {
public:
    OAIPaymentNotificationData();
    OAIPaymentNotificationData(QString json);
    ~OAIPaymentNotificationData() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIResourceReference getAccountHolder() const;
    void setAccountHolder(const OAIResourceReference &account_holder);
    bool is_account_holder_Set() const;
    bool is_account_holder_Valid() const;

    OAIAmount getAmount() const;
    void setAmount(const OAIAmount &amount);
    bool is_amount_Set() const;
    bool is_amount_Valid() const;

    QString getAuthCode() const;
    void setAuthCode(const QString &auth_code);
    bool is_auth_code_Set() const;
    bool is_auth_code_Valid() const;

    OAIResourceReference getBalanceAccount() const;
    void setBalanceAccount(const OAIResourceReference &balance_account);
    bool is_balance_account_Set() const;
    bool is_balance_account_Valid() const;

    QString getBalancePlatform() const;
    void setBalancePlatform(const QString &balance_platform);
    bool is_balance_platform_Set() const;
    bool is_balance_platform_Valid() const;

    QDateTime getCreationDate() const;
    void setCreationDate(const QDateTime &creation_date);
    bool is_creation_date_Set() const;
    bool is_creation_date_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAIMerchantData getMerchantData() const;
    void setMerchantData(const OAIMerchantData &merchant_data);
    bool is_merchant_data_Set() const;
    bool is_merchant_data_Valid() const;

    OAINotificationModificationData getModification() const;
    void setModification(const OAINotificationModificationData &modification);
    bool is_modification_Set() const;
    bool is_modification_Valid() const;

    OAIAmount getOriginalAmount() const;
    void setOriginalAmount(const OAIAmount &original_amount);
    bool is_original_amount_Set() const;
    bool is_original_amount_Valid() const;

    OAIResourceReference getPaymentInstrument() const;
    void setPaymentInstrument(const OAIResourceReference &payment_instrument);
    bool is_payment_instrument_Set() const;
    bool is_payment_instrument_Valid() const;

    OAIPlatformPayment getPlatformPayment() const;
    void setPlatformPayment(const OAIPlatformPayment &platform_payment);
    bool is_platform_payment_Set() const;
    bool is_platform_payment_Valid() const;

    QString getProcessingType() const;
    void setProcessingType(const QString &processing_type);
    bool is_processing_type_Set() const;
    bool is_processing_type_Valid() const;

    QString getReference() const;
    void setReference(const QString &reference);
    bool is_reference_Set() const;
    bool is_reference_Valid() const;

    QString getReferenceForBeneficiary() const;
    void setReferenceForBeneficiary(const QString &reference_for_beneficiary);
    bool is_reference_for_beneficiary_Set() const;
    bool is_reference_for_beneficiary_Valid() const;

    OAIRelayedAuthorisationData getRelayedAuthorisationData() const;
    void setRelayedAuthorisationData(const OAIRelayedAuthorisationData &relayed_authorisation_data);
    bool is_relayed_authorisation_data_Set() const;
    bool is_relayed_authorisation_data_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    OAITransactionRulesResult getTransactionRulesResult() const;
    void setTransactionRulesResult(const OAITransactionRulesResult &transaction_rules_result);
    bool is_transaction_rules_result_Set() const;
    bool is_transaction_rules_result_Valid() const;

    QList<OAIValidationResult> getValidationResult() const;
    void setValidationResult(const QList<OAIValidationResult> &validation_result);
    bool is_validation_result_Set() const;
    bool is_validation_result_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIResourceReference m_account_holder;
    bool m_account_holder_isSet;
    bool m_account_holder_isValid;

    OAIAmount m_amount;
    bool m_amount_isSet;
    bool m_amount_isValid;

    QString m_auth_code;
    bool m_auth_code_isSet;
    bool m_auth_code_isValid;

    OAIResourceReference m_balance_account;
    bool m_balance_account_isSet;
    bool m_balance_account_isValid;

    QString m_balance_platform;
    bool m_balance_platform_isSet;
    bool m_balance_platform_isValid;

    QDateTime m_creation_date;
    bool m_creation_date_isSet;
    bool m_creation_date_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAIMerchantData m_merchant_data;
    bool m_merchant_data_isSet;
    bool m_merchant_data_isValid;

    OAINotificationModificationData m_modification;
    bool m_modification_isSet;
    bool m_modification_isValid;

    OAIAmount m_original_amount;
    bool m_original_amount_isSet;
    bool m_original_amount_isValid;

    OAIResourceReference m_payment_instrument;
    bool m_payment_instrument_isSet;
    bool m_payment_instrument_isValid;

    OAIPlatformPayment m_platform_payment;
    bool m_platform_payment_isSet;
    bool m_platform_payment_isValid;

    QString m_processing_type;
    bool m_processing_type_isSet;
    bool m_processing_type_isValid;

    QString m_reference;
    bool m_reference_isSet;
    bool m_reference_isValid;

    QString m_reference_for_beneficiary;
    bool m_reference_for_beneficiary_isSet;
    bool m_reference_for_beneficiary_isValid;

    OAIRelayedAuthorisationData m_relayed_authorisation_data;
    bool m_relayed_authorisation_data_isSet;
    bool m_relayed_authorisation_data_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    OAITransactionRulesResult m_transaction_rules_result;
    bool m_transaction_rules_result_isSet;
    bool m_transaction_rules_result_isValid;

    QList<OAIValidationResult> m_validation_result;
    bool m_validation_result_isSet;
    bool m_validation_result_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPaymentNotificationData)

#endif // OAIPaymentNotificationData_H
