/**
 * Payment webhooks (deprecated)
 * The payment webhooks are deprecated. Use the [accounting webhooks](https://docs.adyen.com/api-explorer/transfer-webhooks/latest/overview) instead.  Adyen sends webhooks to inform your system about the creation of payment resources and money movements in your platform.  You can use these webhooks to build your implementation. For example, you can use this information to update balances in your own dashboards or to keep track of incoming funds.
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPaymentNotificationRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPaymentNotificationRequest::OAIPaymentNotificationRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPaymentNotificationRequest::OAIPaymentNotificationRequest() {
    this->initializeModel();
}

OAIPaymentNotificationRequest::~OAIPaymentNotificationRequest() {}

void OAIPaymentNotificationRequest::initializeModel() {

    m_data_isSet = false;
    m_data_isValid = false;

    m_environment_isSet = false;
    m_environment_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAIPaymentNotificationRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPaymentNotificationRequest::fromJsonObject(QJsonObject json) {

    m_data_isValid = ::OpenAPI::fromJsonValue(m_data, json[QString("data")]);
    m_data_isSet = !json[QString("data")].isNull() && m_data_isValid;

    m_environment_isValid = ::OpenAPI::fromJsonValue(m_environment, json[QString("environment")]);
    m_environment_isSet = !json[QString("environment")].isNull() && m_environment_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAIPaymentNotificationRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPaymentNotificationRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_data.isSet()) {
        obj.insert(QString("data"), ::OpenAPI::toJsonValue(m_data));
    }
    if (m_environment_isSet) {
        obj.insert(QString("environment"), ::OpenAPI::toJsonValue(m_environment));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

OAIPaymentNotificationData OAIPaymentNotificationRequest::getData() const {
    return m_data;
}
void OAIPaymentNotificationRequest::setData(const OAIPaymentNotificationData &data) {
    m_data = data;
    m_data_isSet = true;
}

bool OAIPaymentNotificationRequest::is_data_Set() const{
    return m_data_isSet;
}

bool OAIPaymentNotificationRequest::is_data_Valid() const{
    return m_data_isValid;
}

QString OAIPaymentNotificationRequest::getEnvironment() const {
    return m_environment;
}
void OAIPaymentNotificationRequest::setEnvironment(const QString &environment) {
    m_environment = environment;
    m_environment_isSet = true;
}

bool OAIPaymentNotificationRequest::is_environment_Set() const{
    return m_environment_isSet;
}

bool OAIPaymentNotificationRequest::is_environment_Valid() const{
    return m_environment_isValid;
}

QString OAIPaymentNotificationRequest::getType() const {
    return m_type;
}
void OAIPaymentNotificationRequest::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIPaymentNotificationRequest::is_type_Set() const{
    return m_type_isSet;
}

bool OAIPaymentNotificationRequest::is_type_Valid() const{
    return m_type_isValid;
}

bool OAIPaymentNotificationRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_data.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_environment_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPaymentNotificationRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_data_isValid && m_environment_isValid && m_type_isValid && true;
}

} // namespace OpenAPI
