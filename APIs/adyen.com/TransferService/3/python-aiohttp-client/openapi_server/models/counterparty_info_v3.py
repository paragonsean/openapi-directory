# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.bank_account_v3 import BankAccountV3
from openapi_server import util


class CounterpartyInfoV3(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, balance_account_id: str=None, bank_account: BankAccountV3=None, transfer_instrument_id: str=None):
        """CounterpartyInfoV3 - a model defined in OpenAPI

        :param balance_account_id: The balance_account_id of this CounterpartyInfoV3.
        :param bank_account: The bank_account of this CounterpartyInfoV3.
        :param transfer_instrument_id: The transfer_instrument_id of this CounterpartyInfoV3.
        """
        self.openapi_types = {
            'balance_account_id': str,
            'bank_account': BankAccountV3,
            'transfer_instrument_id': str
        }

        self.attribute_map = {
            'balance_account_id': 'balanceAccountId',
            'bank_account': 'bankAccount',
            'transfer_instrument_id': 'transferInstrumentId'
        }

        self._balance_account_id = balance_account_id
        self._bank_account = bank_account
        self._transfer_instrument_id = transfer_instrument_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CounterpartyInfoV3':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CounterpartyInfoV3 of this CounterpartyInfoV3.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def balance_account_id(self):
        """Gets the balance_account_id of this CounterpartyInfoV3.

        Unique identifier of the [balance account](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/post/balanceAccounts__resParam_id).

        :return: The balance_account_id of this CounterpartyInfoV3.
        :rtype: str
        """
        return self._balance_account_id

    @balance_account_id.setter
    def balance_account_id(self, balance_account_id):
        """Sets the balance_account_id of this CounterpartyInfoV3.

        Unique identifier of the [balance account](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/post/balanceAccounts__resParam_id).

        :param balance_account_id: The balance_account_id of this CounterpartyInfoV3.
        :type balance_account_id: str
        """

        self._balance_account_id = balance_account_id

    @property
    def bank_account(self):
        """Gets the bank_account of this CounterpartyInfoV3.

        Contains information about the bank account.

        :return: The bank_account of this CounterpartyInfoV3.
        :rtype: BankAccountV3
        """
        return self._bank_account

    @bank_account.setter
    def bank_account(self, bank_account):
        """Sets the bank_account of this CounterpartyInfoV3.

        Contains information about the bank account.

        :param bank_account: The bank_account of this CounterpartyInfoV3.
        :type bank_account: BankAccountV3
        """

        self._bank_account = bank_account

    @property
    def transfer_instrument_id(self):
        """Gets the transfer_instrument_id of this CounterpartyInfoV3.

        Unique identifier of the [transfer instrument](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/transferInstruments__resParam_id).

        :return: The transfer_instrument_id of this CounterpartyInfoV3.
        :rtype: str
        """
        return self._transfer_instrument_id

    @transfer_instrument_id.setter
    def transfer_instrument_id(self, transfer_instrument_id):
        """Sets the transfer_instrument_id of this CounterpartyInfoV3.

        Unique identifier of the [transfer instrument](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/transferInstruments__resParam_id).

        :param transfer_instrument_id: The transfer_instrument_id of this CounterpartyInfoV3.
        :type transfer_instrument_id: str
        """

        self._transfer_instrument_id = transfer_instrument_id
