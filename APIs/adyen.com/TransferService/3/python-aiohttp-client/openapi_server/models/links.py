# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.link import Link
from openapi_server import util


class Links(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, next: Link=None, prev: Link=None):
        """Links - a model defined in OpenAPI

        :param next: The next of this Links.
        :param prev: The prev of this Links.
        """
        self.openapi_types = {
            'next': Link,
            'prev': Link
        }

        self.attribute_map = {
            'next': 'next',
            'prev': 'prev'
        }

        self._next = next
        self._prev = prev

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Links':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Links of this Links.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def next(self):
        """Gets the next of this Links.

        Contains a link to the next page.

        :return: The next of this Links.
        :rtype: Link
        """
        return self._next

    @next.setter
    def next(self, next):
        """Sets the next of this Links.

        Contains a link to the next page.

        :param next: The next of this Links.
        :type next: Link
        """

        self._next = next

    @property
    def prev(self):
        """Gets the prev of this Links.

        Contains a link to the previous page.

        :return: The prev of this Links.
        :rtype: Link
        """
        return self._prev

    @prev.setter
    def prev(self, prev):
        """Sets the prev of this Links.

        Contains a link to the previous page.

        :param prev: The prev of this Links.
        :type prev: Link
        """

        self._prev = prev
