/**
 * Transfers API
 * >Versions 1 and 2 of the Transfers API are deprecated. If you are just starting your implementation, use the latest version.  This API provides endpoints that you can use to transfer funds, whether when [paying out to a transfer instrument](https://docs.adyen.com/marketplaces-and-platforms/payout-to-users/on-demand-payouts), [sending funds to third parties](https://docs.adyen.com/marketplaces-and-platforms/business-accounts/send-receive-funds) for users with business bank accounts, or to [request a payout for a grant offer](https://docs.adyen.com/marketplaces-and-platforms/capital). The API also supports use cases for [getting transactions for business bank accounts](https://docs.adyen.com/marketplaces-and-platforms/business-accounts/transactions-api) and getting [grants and its outstanding balances](https://docs.adyen.com/marketplaces-and-platforms/capital#get-balances). .  ## Authentication Your Adyen contact will provide your API credential and an API key. To connect to the API, add an `X-API-Key` header with the API key as the value, for example:   ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ```  Alternatively, you can use the username and password to connect to the API using basic authentication. For example:  ``` curl -H \"Content-Type: application/json\" \\ -U \"ws@BalancePlatform.YOUR_BALANCE_PLATFORM\":\"YOUR_WS_PASSWORD\" \\ ... ``` ## Roles and permissions To use the Transfers API, you need an additional role for your API credential. Transfers must also be enabled for the source balance account. Your Adyen contact will set up the roles and permissions for you. ## Versioning The Transfers API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://balanceplatform-api-test.adyen.com/btl/v3/transfers ``` ## Going live When going live, your Adyen contact will provide your API credential for the live environment. You can then use the username and password to send requests to `https://balanceplatform-api-live.adyen.com/btl/v3`.  
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AULocalAccountIdentification from './model/AULocalAccountIdentification';
import AdditionalBankIdentification from './model/AdditionalBankIdentification';
import Address from './model/Address';
import Amount from './model/Amount';
import BRLocalAccountIdentification from './model/BRLocalAccountIdentification';
import BankAccountV3 from './model/BankAccountV3';
import BankAccountV3AccountIdentification from './model/BankAccountV3AccountIdentification';
import CALocalAccountIdentification from './model/CALocalAccountIdentification';
import CZLocalAccountIdentification from './model/CZLocalAccountIdentification';
import CapitalBalance from './model/CapitalBalance';
import CapitalGrant from './model/CapitalGrant';
import CapitalGrantInfo from './model/CapitalGrantInfo';
import CapitalGrants from './model/CapitalGrants';
import Counterparty from './model/Counterparty';
import CounterpartyInfoV3 from './model/CounterpartyInfoV3';
import CounterpartyV3 from './model/CounterpartyV3';
import DKLocalAccountIdentification from './model/DKLocalAccountIdentification';
import Fee from './model/Fee';
import HKLocalAccountIdentification from './model/HKLocalAccountIdentification';
import HULocalAccountIdentification from './model/HULocalAccountIdentification';
import IbanAccountIdentification from './model/IbanAccountIdentification';
import InvalidField from './model/InvalidField';
import Link from './model/Link';
import Links from './model/Links';
import MerchantData from './model/MerchantData';
import NOLocalAccountIdentification from './model/NOLocalAccountIdentification';
import NZLocalAccountIdentification from './model/NZLocalAccountIdentification';
import NameLocation from './model/NameLocation';
import NumberAndBicAccountIdentification from './model/NumberAndBicAccountIdentification';
import PLLocalAccountIdentification from './model/PLLocalAccountIdentification';
import PartyIdentification from './model/PartyIdentification';
import PaymentInstrument from './model/PaymentInstrument';
import Repayment from './model/Repayment';
import RepaymentTerm from './model/RepaymentTerm';
import ResourceReference from './model/ResourceReference';
import RestServiceError from './model/RestServiceError';
import ReturnTransferRequest from './model/ReturnTransferRequest';
import ReturnTransferResponse from './model/ReturnTransferResponse';
import SELocalAccountIdentification from './model/SELocalAccountIdentification';
import SGLocalAccountIdentification from './model/SGLocalAccountIdentification';
import ServiceError from './model/ServiceError';
import ThresholdRepayment from './model/ThresholdRepayment';
import Transaction from './model/Transaction';
import TransactionSearchResponse from './model/TransactionSearchResponse';
import Transfer from './model/Transfer';
import TransferInfo from './model/TransferInfo';
import UKLocalAccountIdentification from './model/UKLocalAccountIdentification';
import USLocalAccountIdentification from './model/USLocalAccountIdentification';
import UltimatePartyIdentification from './model/UltimatePartyIdentification';
import CapitalApi from './api/CapitalApi';
import TransactionsApi from './api/TransactionsApi';
import TransfersApi from './api/TransfersApi';


/**
* &gt;Versions 1 and 2 of the Transfers API are deprecated. If you are just starting your implementation, use the latest version.  This API provides endpoints that you can use to transfer funds, whether when [paying out to a transfer instrument](https://docs.adyen.com/marketplaces-and-platforms/payout-to-users/on-demand-payouts), [sending funds to third parties](https://docs.adyen.com/marketplaces-and-platforms/business-accounts/send-receive-funds) for users with business bank accounts, or to [request a payout for a grant offer](https://docs.adyen.com/marketplaces-and-platforms/capital). The API also supports use cases for [getting transactions for business bank accounts](https://docs.adyen.com/marketplaces-and-platforms/business-accounts/transactions-api) and getting [grants and its outstanding balances](https://docs.adyen.com/marketplaces-and-platforms/capital#get-balances). .  ## Authentication Your Adyen contact will provide your API credential and an API key. To connect to the API, add an &#x60;X-API-Key&#x60; header with the API key as the value, for example:   &#x60;&#x60;&#x60; curl -H \&quot;Content-Type: application/json\&quot; \\ -H \&quot;X-API-Key: YOUR_API_KEY\&quot; \\ ... &#x60;&#x60;&#x60;  Alternatively, you can use the username and password to connect to the API using basic authentication. For example:  &#x60;&#x60;&#x60; curl -H \&quot;Content-Type: application/json\&quot; \\ -U \&quot;ws@BalancePlatform.YOUR_BALANCE_PLATFORM\&quot;:\&quot;YOUR_WS_PASSWORD\&quot; \\ ... &#x60;&#x60;&#x60; ## Roles and permissions To use the Transfers API, you need an additional role for your API credential. Transfers must also be enabled for the source balance account. Your Adyen contact will set up the roles and permissions for you. ## Versioning The Transfers API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \&quot;vXX\&quot;, where XX is the version number.  For example: &#x60;&#x60;&#x60; https://balanceplatform-api-test.adyen.com/btl/v3/transfers &#x60;&#x60;&#x60; ## Going live When going live, your Adyen contact will provide your API credential for the live environment. You can then use the username and password to send requests to &#x60;https://balanceplatform-api-live.adyen.com/btl/v3&#x60;.  .<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var TransfersApi = require('index'); // See note below*.
* var xxxSvc = new TransfersApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new TransfersApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new TransfersApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new TransfersApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 3
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AULocalAccountIdentification model constructor.
     * @property {module:model/AULocalAccountIdentification}
     */
    AULocalAccountIdentification,

    /**
     * The AdditionalBankIdentification model constructor.
     * @property {module:model/AdditionalBankIdentification}
     */
    AdditionalBankIdentification,

    /**
     * The Address model constructor.
     * @property {module:model/Address}
     */
    Address,

    /**
     * The Amount model constructor.
     * @property {module:model/Amount}
     */
    Amount,

    /**
     * The BRLocalAccountIdentification model constructor.
     * @property {module:model/BRLocalAccountIdentification}
     */
    BRLocalAccountIdentification,

    /**
     * The BankAccountV3 model constructor.
     * @property {module:model/BankAccountV3}
     */
    BankAccountV3,

    /**
     * The BankAccountV3AccountIdentification model constructor.
     * @property {module:model/BankAccountV3AccountIdentification}
     */
    BankAccountV3AccountIdentification,

    /**
     * The CALocalAccountIdentification model constructor.
     * @property {module:model/CALocalAccountIdentification}
     */
    CALocalAccountIdentification,

    /**
     * The CZLocalAccountIdentification model constructor.
     * @property {module:model/CZLocalAccountIdentification}
     */
    CZLocalAccountIdentification,

    /**
     * The CapitalBalance model constructor.
     * @property {module:model/CapitalBalance}
     */
    CapitalBalance,

    /**
     * The CapitalGrant model constructor.
     * @property {module:model/CapitalGrant}
     */
    CapitalGrant,

    /**
     * The CapitalGrantInfo model constructor.
     * @property {module:model/CapitalGrantInfo}
     */
    CapitalGrantInfo,

    /**
     * The CapitalGrants model constructor.
     * @property {module:model/CapitalGrants}
     */
    CapitalGrants,

    /**
     * The Counterparty model constructor.
     * @property {module:model/Counterparty}
     */
    Counterparty,

    /**
     * The CounterpartyInfoV3 model constructor.
     * @property {module:model/CounterpartyInfoV3}
     */
    CounterpartyInfoV3,

    /**
     * The CounterpartyV3 model constructor.
     * @property {module:model/CounterpartyV3}
     */
    CounterpartyV3,

    /**
     * The DKLocalAccountIdentification model constructor.
     * @property {module:model/DKLocalAccountIdentification}
     */
    DKLocalAccountIdentification,

    /**
     * The Fee model constructor.
     * @property {module:model/Fee}
     */
    Fee,

    /**
     * The HKLocalAccountIdentification model constructor.
     * @property {module:model/HKLocalAccountIdentification}
     */
    HKLocalAccountIdentification,

    /**
     * The HULocalAccountIdentification model constructor.
     * @property {module:model/HULocalAccountIdentification}
     */
    HULocalAccountIdentification,

    /**
     * The IbanAccountIdentification model constructor.
     * @property {module:model/IbanAccountIdentification}
     */
    IbanAccountIdentification,

    /**
     * The InvalidField model constructor.
     * @property {module:model/InvalidField}
     */
    InvalidField,

    /**
     * The Link model constructor.
     * @property {module:model/Link}
     */
    Link,

    /**
     * The Links model constructor.
     * @property {module:model/Links}
     */
    Links,

    /**
     * The MerchantData model constructor.
     * @property {module:model/MerchantData}
     */
    MerchantData,

    /**
     * The NOLocalAccountIdentification model constructor.
     * @property {module:model/NOLocalAccountIdentification}
     */
    NOLocalAccountIdentification,

    /**
     * The NZLocalAccountIdentification model constructor.
     * @property {module:model/NZLocalAccountIdentification}
     */
    NZLocalAccountIdentification,

    /**
     * The NameLocation model constructor.
     * @property {module:model/NameLocation}
     */
    NameLocation,

    /**
     * The NumberAndBicAccountIdentification model constructor.
     * @property {module:model/NumberAndBicAccountIdentification}
     */
    NumberAndBicAccountIdentification,

    /**
     * The PLLocalAccountIdentification model constructor.
     * @property {module:model/PLLocalAccountIdentification}
     */
    PLLocalAccountIdentification,

    /**
     * The PartyIdentification model constructor.
     * @property {module:model/PartyIdentification}
     */
    PartyIdentification,

    /**
     * The PaymentInstrument model constructor.
     * @property {module:model/PaymentInstrument}
     */
    PaymentInstrument,

    /**
     * The Repayment model constructor.
     * @property {module:model/Repayment}
     */
    Repayment,

    /**
     * The RepaymentTerm model constructor.
     * @property {module:model/RepaymentTerm}
     */
    RepaymentTerm,

    /**
     * The ResourceReference model constructor.
     * @property {module:model/ResourceReference}
     */
    ResourceReference,

    /**
     * The RestServiceError model constructor.
     * @property {module:model/RestServiceError}
     */
    RestServiceError,

    /**
     * The ReturnTransferRequest model constructor.
     * @property {module:model/ReturnTransferRequest}
     */
    ReturnTransferRequest,

    /**
     * The ReturnTransferResponse model constructor.
     * @property {module:model/ReturnTransferResponse}
     */
    ReturnTransferResponse,

    /**
     * The SELocalAccountIdentification model constructor.
     * @property {module:model/SELocalAccountIdentification}
     */
    SELocalAccountIdentification,

    /**
     * The SGLocalAccountIdentification model constructor.
     * @property {module:model/SGLocalAccountIdentification}
     */
    SGLocalAccountIdentification,

    /**
     * The ServiceError model constructor.
     * @property {module:model/ServiceError}
     */
    ServiceError,

    /**
     * The ThresholdRepayment model constructor.
     * @property {module:model/ThresholdRepayment}
     */
    ThresholdRepayment,

    /**
     * The Transaction model constructor.
     * @property {module:model/Transaction}
     */
    Transaction,

    /**
     * The TransactionSearchResponse model constructor.
     * @property {module:model/TransactionSearchResponse}
     */
    TransactionSearchResponse,

    /**
     * The Transfer model constructor.
     * @property {module:model/Transfer}
     */
    Transfer,

    /**
     * The TransferInfo model constructor.
     * @property {module:model/TransferInfo}
     */
    TransferInfo,

    /**
     * The UKLocalAccountIdentification model constructor.
     * @property {module:model/UKLocalAccountIdentification}
     */
    UKLocalAccountIdentification,

    /**
     * The USLocalAccountIdentification model constructor.
     * @property {module:model/USLocalAccountIdentification}
     */
    USLocalAccountIdentification,

    /**
     * The UltimatePartyIdentification model constructor.
     * @property {module:model/UltimatePartyIdentification}
     */
    UltimatePartyIdentification,

    /**
    * The CapitalApi service constructor.
    * @property {module:api/CapitalApi}
    */
    CapitalApi,

    /**
    * The TransactionsApi service constructor.
    * @property {module:api/TransactionsApi}
    */
    TransactionsApi,

    /**
    * The TransfersApi service constructor.
    * @property {module:api/TransfersApi}
    */
    TransfersApi
};
