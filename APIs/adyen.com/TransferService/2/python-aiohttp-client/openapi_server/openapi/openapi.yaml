openapi: 3.1.0
info:
  contact:
    name: Adyen Developer Experience team
    url: https://github.com/Adyen/adyen-openapi
    x-twitter: Adyen
  description: |+
    >Versions 1 and 2 of the Transfers API are deprecated. If you are just starting your implementation, use the latest version.

    This API provides endpoints that you can use to transfer funds, whether when [paying out to a transfer instrument](https://docs.adyen.com/marketplaces-and-platforms/payout-to-users/on-demand-payouts), [sending funds to third parties](https://docs.adyen.com/marketplaces-and-platforms/business-accounts/send-receive-funds) for users with business bank accounts, or to [request a payout for a grant offer](https://docs.adyen.com/marketplaces-and-platforms/capital). The API also supports use cases for [getting transactions for business bank accounts](https://docs.adyen.com/marketplaces-and-platforms/business-accounts/transactions-api) and getting [grants and its outstanding balances](https://docs.adyen.com/marketplaces-and-platforms/capital#get-balances). .

    ## Authentication
    Your Adyen contact will provide your API credential and an API key. To connect to the API, add an `X-API-Key` header with the API key as the value, for example:

     ```
    curl
    -H "Content-Type: application/json" \
    -H "X-API-Key: YOUR_API_KEY" \
    ...
    ```

    Alternatively, you can use the username and password to connect to the API using basic authentication. For example:

    ```
    curl
    -H "Content-Type: application/json" \
    -U "ws@BalancePlatform.YOUR_BALANCE_PLATFORM":"YOUR_WS_PASSWORD" \
    ...
    ```
    ## Roles and permissions
    To use the Transfers API, you need an additional role for your API credential. Transfers must also be enabled for the source balance account. Your Adyen contact will set up the roles and permissions for you.
    ## Versioning
    The Transfers API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: "vXX", where XX is the version number.

    For example:
    ```
    https://balanceplatform-api-test.adyen.com/btl/v2/transfers
    ```
    ## Going live
    When going live, your Adyen contact will provide your API credential for the live environment. You can then use the username and password to send requests to `https://balanceplatform-api-live.adyen.com/btl/v2`.

  termsOfService: https://www.adyen.com/legal/terms-and-conditions
  title: Transfers API
  version: "2"
  x-apisguru-categories:
  - payment
  x-logo:
    url: https://twitter.com/Adyen/profile_image?size=original
  x-origin:
  - format: openapi
    url: https://raw.githubusercontent.com/Adyen/adyen-openapi/main/json/TransferService-v2.json
    version: "3.1"
  x-preferred: false
  x-providerName: adyen.com
  x-publicVersion: true
  x-serviceName: TransferService
servers:
- url: https://balanceplatform-api-test.adyen.com/btl/v2
tags:
- name: Transfers
- name: Transactions
- name: Capital
paths:
  /transactions:
    get:
      description: |+
        >Versions 1 and 2 of the Transfers API are deprecated. If you are just starting your implementation, use the latest version.

        Returns all the transactions related to a balance account, account holder, or balance platform.

        When making this request, you must include at least one of the following:
        - `balanceAccountId`
        - `accountHolderId`
        - `balancePlatform`.

        This endpoint supports cursor-based pagination. The response returns the first page of results, and returns links to the next and previous pages when applicable. You can use the links to page through the results.

      operationId: get_transactions
      parameters:
      - description: |-
          The unique identifier of the [balance platform](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/get/balancePlatforms/{id}__queryParam_id).

          Required if you don't provide a `balanceAccountId` or `accountHolderId`.
        explode: true
        in: query
        name: balancePlatform
        required: false
        schema:
          type: string
        style: form
      - description: |-
          The unique identifier of the [payment instrument](https://docs.adyen.com/api-explorer/balanceplatform/latest/get/paymentInstruments/_id_).

          To use this parameter, you must also provide a `balanceAccountId`, `accountHolderId`, or `balancePlatform`.

          The `paymentInstrumentId` must be related to the `balanceAccountId` or `accountHolderId` that you provide.
        explode: true
        in: query
        name: paymentInstrumentId
        required: false
        schema:
          title: href
          type: string
        style: form
      - description: |-
          The unique identifier of the [account holder](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/get/accountHolders/{id}__queryParam_id).

          Required if you don't provide a `balanceAccountId` or `balancePlatform`.

          If you provide a `balanceAccountId`, the `accountHolderId` must be related to the `balanceAccountId`.
        explode: true
        in: query
        name: accountHolderId
        required: false
        schema:
          title: href
          type: string
        style: form
      - description: |-
          The unique identifier of the [balance account](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/get/balanceAccounts/{id}__queryParam_id).

          Required if you don't provide an `accountHolderId` or `balancePlatform`.

          If you provide an `accountHolderId`, the `balanceAccountId` must be related to the `accountHolderId`.
        explode: true
        in: query
        name: balanceAccountId
        required: false
        schema:
          title: href
          type: string
        style: form
      - description: The `cursor` returned in the links of the previous response.
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          title: href
          type: string
        style: form
      - description: "Only include transactions that have been created on or after\
          \ this point in time. The value must be in ISO 8601 format. For example,\
          \ **2021-05-30T15:07:40Z**."
        explode: true
        in: query
        name: createdSince
        required: true
        schema:
          format: date-time
          type: string
        style: form
      - description: "Only include transactions that have been created on or before\
          \ this point in time. The value must be in ISO 8601 format. For example,\
          \ **2021-05-30T15:07:40Z**."
        explode: true
        in: query
        name: createdUntil
        required: true
        schema:
          format: date-time
          type: string
        style: form
      - description: "The number of items returned per page, maximum of 100 items.\
          \ By default, the response returns 10 items per page."
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  $ref: '#/components/examples/get-transactions-success-200'
              schema:
                $ref: '#/components/schemas/TransactionSearchResponse'
          description: OK - the request has succeeded.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Internal Server Error - the server could not process the request.
      security:
      - clientKey: []
      - BasicAuth: []
      - ApiKeyAuth: []
      summary: Get all transactions
      tags:
      - Transactions
      x-addedInVersion: "1"
      x-methodName: getAllTransactions
      x-sortIndex: 1
      x-openapi-router-controller: openapi_server.controllers.transactions_controller
  /transactions/{id}:
    get:
      description: |-
        >Versions 1 and 2 of the Transfers API are deprecated. If you are just starting your implementation, use the latest version.

        Returns a transaction.
      operationId: get_transactions_id
      parameters:
      - description: The unique identifier of the transaction.
        explode: false
        in: path
        name: id
        required: true
        schema:
          title: href
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  $ref: '#/components/examples/get-transactions-id-success-200'
              schema:
                $ref: '#/components/schemas/Transaction'
          description: OK - the request has succeeded.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Internal Server Error - the server could not process the request.
      security:
      - clientKey: []
      - BasicAuth: []
      - ApiKeyAuth: []
      summary: Get a transaction
      tags:
      - Transactions
      x-addedInVersion: "1"
      x-methodName: getTransaction
      x-sortIndex: 2
      x-openapi-router-controller: openapi_server.controllers.transactions_controller
  /transfers:
    post:
      description: |-
        >Versions 1 and 2 of the Transfers API are deprecated. If you are just starting your implementation, use the latest version.

        Starts a request to transfer funds to [balance accounts](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/post/balanceAccounts), [transfer instruments](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/transferInstruments), or third-party bank accounts. Adyen sends the outcome of the transfer request through webhooks.

        To use this endpoint, you need an additional role for your API credential and transfers must be enabled for the source balance account. Your Adyen contact will set these up for you.
      operationId: post_transfers
      parameters:
      - description: Header for authenticating through SCA
        example: SCA realm="Transfer" auth-param1="eyJjaGFsbGVuZ2UiOiJiVlV6ZW5wek0waFNl..."
        explode: false
        in: header
        name: WWW-Authenticate
        required: false
        schema:
          title: href
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              payout-local-transfer-sepa:
                $ref: '#/components/examples/post-transfers-payout-local-transfer-sepa'
              payout-to-balance-account:
                $ref: '#/components/examples/post-transfers-payout-to-balance-account'
              payout-to-transfer-instrument:
                $ref: '#/components/examples/post-transfers-payout-to-transfer-instrument'
            schema:
              $ref: '#/components/schemas/TransferInfo'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              examples:
                payout-local-transfer-sepa:
                  $ref: '#/components/examples/post-transfers-payout-local-transfer-sepa-200'
                payout-to-balance-account:
                  $ref: '#/components/examples/post-transfers-payout-to-balance-account-200'
                payout-to-transfer-instrument:
                  $ref: '#/components/examples/post-transfers-payout-to-transfer-instrument-200'
              schema:
                $ref: '#/components/schemas/Transfer'
          description: OK - the request has succeeded.
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transfer'
          description: "Accepted - the request has been accepted for processing, but\
            \ the processing has not been completed."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
          headers:
            auth-param1:
              $ref: '#/components/headers/auth-param1'
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Internal Server Error - the server could not process the request.
      security:
      - clientKey: []
      - BasicAuth: []
      - ApiKeyAuth: []
      summary: Transfer funds
      tags:
      - Transfers
      x-addedInVersion: "2"
      x-methodName: transferFunds
      x-sortIndex: 1
      x-openapi-router-controller: openapi_server.controllers.transfers_controller
      x-codegen-request-body-name: body
components:
  examples:
    get-transactions-id-success-200:
      description: Example response for a transaction
      summary: Response code - 200 OK
      value:
        accountHolderId: AHA1B2C3D4E5F6G7H8I9J0
        amount:
          currency: EUR
          value: 9887
        balanceAccountId: BAB8B2C3D4E5F6G7H8D9J6GD4
        balancePlatform: YOUR_BALANCE_PLATFORM
        bookingDate: 2022-03-14T12:01:00+01:00
        category: bank
        counterparty:
          balanceAccountId: BA00000000000000000000001
        createdAt: 2022-03-14T12:01:00+01:00
        description: YOUR_DESCRIPTION
        id: IZK7C25U7DYVX03Y
        instructedAmount:
          currency: EUR
          value: 9887
        reference: 2L6C6B5U7DYULLXC
        referenceForBeneficiary: YOUR_REFERENCE_FOR_BENEFICIARY
        status: booked
        transferId: 2QP32A5U7IWC5WKG
        type: bankTransfer
        valueDate: 2022-03-14T12:01:00+01:00
    get-transactions-success-200:
      description: Example response for a list of transactions
      summary: Response code - 200 OK
      value:
        _links:
          next:
            href: https://balanceplatform-api-test.adyen.com/btl/v2/transactions?balancePlatform=Bastronaut&createdUntil=2022-03-21T00%3A00%3A00Z&createdSince=2022-03-11T00%3A00%3A00Z&limit=3&cursor=S2B-TSAjOkIrYlIlbjdqe0RreHRyM32lKRSxubXBHRkhHL2E32XitQQz5SfzpucD5HbHwpM1p6NDR1eXVQLFF6MmY33J32sobDxQYT90MHIud1hwLnd6JitcX32xJ
        data:
        - accountHolderId: AHA1B2C3D4E5F6G7H8I9J0
          amount:
            currency: EUR
            value: -9
          balanceAccountId: BAB8B2C3D4E5F6G7H8D9J6GD4
          balancePlatform: YOUR_BALANCE_PLATFORM
          bookingDate: 2022-03-11T11:21:24+01:00
          category: internal
          counterparty:
            balanceAccountId: BA00000000000000000000001
          createdAt: 2022-03-11T11:21:24+01:00
          id: 1VVF0D5U66PIUIVP
          instructedAmount:
            currency: EUR
            value: -9
          reference: REFERENCE_46e8c40e
          status: booked
          transferId: 1VVF0D5U66PIUIVP
          type: fee
          valueDate: 2022-03-11T11:21:24+01:00
        - accountHolderId: AHA1B2C3D4E5F6G7H8I9J0
          amount:
            currency: EUR
            value: -46
          balanceAccountId: BAB8B2C3D4E5F6G7H8D9J6GD4
          balancePlatform: YOUR_BALANCE_PLATFORM
          bookingDate: 2022-03-12T14:22:52+01:00
          category: internal
          counterparty:
            balanceAccountId: BA00000000000000000000001
          createdAt: 2022-03-12T14:22:52+01:00
          id: 1WEPGD5U6MS1CFK3
          instructedAmount:
            currency: EUR
            value: -46
          reference: YOUR_REFERENCE
          status: booked
          transferId: 1WEPGD5U6MS1CFK3
          type: fee
          valueDate: 2022-03-12T14:22:52+01:00
        - accountHolderId: AHA1B2C3D4E5F6G7H8I9J0
          amount:
            currency: EUR
            value: -8
          balanceAccountId: BAB8B2C3D4E5F6G7H8D9J6GD4
          balancePlatform: YOUR_BALANCE_PLATFORM
          bookingDate: 2022-03-14T21:00:48+01:00
          counterparty:
            balanceAccountId: BA00000000000000000000001
          createdAt: 2022-03-14T15:00:00+01:00
          description: YOUR_DESCRIPTION_2
          id: 2QP32A5U7IWC5WKG
          instructedAmount:
            currency: EUR
            value: -8
          reference: REFERENCE_46e8c40e
          status: booked
          valueDate: 2022-03-14T21:00:48+01:00
    post-transfers-payout-local-transfer-sepa:
      description: Example request to make a US local funds transfer
      summary: Make a SEPA funds transfer
      value:
        amount:
          currency: EUR
          value: 110000
        balanceAccountId: BAB8B2C3D4E5F6G7H8D9J6GD4
        bank:
          priority: regular
        counterparty:
          bankAccount:
            iban: NL13TEST0123456789
            ownerName:
              fullName: A. Klaassen
        description: Your description
        reference: Your internal reference for the transfer
        referenceForBeneficiary: Your reference sent to the beneficiary
    post-transfers-payout-local-transfer-sepa-200:
      description: Example response for a transfers request
      summary: Response code - 200 OK
      value:
        amount:
          currency: EUR
          value: 110000
        balanceAccountId: BAB8B2C3D4E5F6G7H8D9J6GD4
        bank:
          priority: regular
        counterparty:
          bankAccount:
            iban: NL13TEST0123456789
            ownerName:
              fullName: A. Klaassen
        description: Your description
        direction: outgoing
        id: 1W1UG35U8A9J5ZLG
        reason: approved
        reference: Your internal reference for the transfer
        referenceForBeneficiary: Your reference sent to the beneficiary
        status: authorised
    post-transfers-payout-to-balance-account:
      description: Example request to transfer funds to another balance account
      summary: Transfer funds to another balance account
      value:
        amount:
          currency: EUR
          value: 10000
        balanceAccountId: BAB8B2C3D4E5F6G7H8D9J6GD4
        counterparty:
          balanceAccountId: BAB1234567890ABC123456789
        description: Your description
        reference: Your internal reference for the transfer
    post-transfers-payout-to-balance-account-200:
      description: Example response for a transfers request
      summary: Response code - 200 OK
      value:
        amount:
          currency: EUR
          value: 10000
        balanceAccountId: BAB8B2C3D4E5F6G7H8D9J6GD4
        counterparty:
          balanceAccountId: BA32272223222B5LPRFDW7J9G
        description: Your description
        direction: outgoing
        id: 1W1UG35U8A9J5ZLG
        reason: approved
        reference: Your internal reference for the transfer
        referenceForBeneficiary: Your reference sent to the beneficiary
        status: authorised
    post-transfers-payout-to-transfer-instrument:
      description: Example request to pay out to a transfer instrument
      summary: Pay out to a transfer instrument
      value:
        amount:
          currency: EUR
          value: 80000
        balanceAccountId: BAB8B2C3D4E5F6G7H8D9J6GD4
        bank:
          priority: regular
        counterparty:
          transferInstrumentId: SE1234567890ABC1234567890
        description: Your description
        reference: Your internal reference for the transfer
        referenceForBeneficiary: Your reference sent to the beneficiary
    post-transfers-payout-to-transfer-instrument-200:
      description: Example response for a transfers request
      summary: Response code - 200 OK
      value:
        amount:
          currency: EUR
          value: 80000
        balanceAccountId: BAB8B2C3D4E5F6G7H8D9J6GD4
        bank:
          priority: regular
        counterparty:
          transferInstrumentId: SE1234567890ABC1234567890
        description: Your description
        direction: outgoing
        id: 1W1UG35U8A9J5ZLG
        reason: approved
        reference: Your internal reference for the transfer
        referenceForBeneficiary: Your reference sent to the beneficiary
        status: authorised
  headers:
    auth-param1:
      description: Base64-encoded blob of data. You will need auth-param1 when authenticating
        your user using the SDK.
      explode: false
      schema: {}
      style: simple
  schemas:
    Address:
      example:
        country: country
        stateOrProvince: stateOrProvince
        city: city
        houseNumberOrName: houseNumberOrName
        street: street
        postalCode: postalCode
      properties:
        city:
          description: "The name of the city. Maximum length: 3000 characters."
          maxLength: 3000
          title: city
          type: string
        country:
          description: |-
            The two-character ISO-3166-1 alpha-2 country code. For example, **US**.
            > If you don't know the country or are not collecting the country from the shopper, provide `country` as `ZZ`.
          title: country
          type: string
        houseNumberOrName:
          description: "The number or name of the house. Maximum length: 3000 characters."
          maxLength: 3000
          title: houseNumberOrName
          type: string
        postalCode:
          description: "A maximum of five digits for an address in the US, or a maximum\
            \ of ten characters for an address in all other countries."
          title: postalCode
          type: string
        stateOrProvince:
          description: |-
            The two-character ISO 3166-2 state or province code. For example, **CA** in the US or **ON** in Canada.
            > Required for the US and Canada.
          title: stateOrProvince
          type: string
        street:
          description: |-
            The name of the street. Maximum length: 3000 characters.
            > The house number should not be included in this field; it should be separately provided via `houseNumberOrName`.
          maxLength: 3000
          title: street
          type: string
      required:
      - city
      - country
      - houseNumberOrName
      - postalCode
      - street
      title: Address
    Amount:
      example:
        currency: currency
        value: 0
      properties:
        currency:
          description: "The three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes)."
          maxLength: 3
          minLength: 3
          title: currency
          type: string
        value:
          description: "The amount of the transaction, in [minor units](https://docs.adyen.com/development-resources/currency-codes)."
          format: int64
          title: value
          type: integer
      required:
      - currency
      - value
      title: Amount
    Bank:
      example:
        priority: crossBorder
      properties:
        priority:
          description: |-
            The priority for the bank transfer. This sets the speed at which the transfer is sent and the fees that you have to pay. If you don't provide this in the request, Adyen sets the optimal priority.

            Possible values:

            * **regular**: For normal, low-value transactions.

            * **fast**: Faster way to transfer funds but has higher fees. Recommended for high-priority, low-value transactions.

            * **wire**: Fastest way to transfer funds but has the highest fees. Recommended for high-priority, high-value transactions.

            * **instant**: Instant way to transfer funds in [SEPA countries](https://www.ecb.europa.eu/paym/integration/retail/sepa/html/index.en.html).

            * **crossBorder**: High-value transfer to a recipient in a different country.

            * **internal**: Transfer to an Adyen-issued business bank account (by bank account number/IBAN).
          enum:
          - crossBorder
          - fast
          - instant
          - internal
          - regular
          - wire
          title: priority
          type: string
          x-addedInVersion: "1"
      title: Bank
    BankAccountInfo:
      example:
        address:
          country: country
          stateOrProvince: stateOrProvince
          city: city
          houseNumberOrName: houseNumberOrName
          street: street
          postalCode: postalCode
        ownerName:
          firstName: firstName
          lastName: lastName
          fullName: fullName
          infix: infix
        iban: iban
      properties:
        address:
          $ref: '#/components/schemas/Address'
        iban:
          description: "The international bank account number as defined in the [ISO-13616](https://www.iso.org/standard/81090.html)\
            \ standard."
          title: iban
          type: string
        ownerName:
          $ref: '#/components/schemas/Name'
      title: BankAccountInfo
    Counterparty:
      example:
        balanceAccountId: balanceAccountId
        bankAccount:
          address:
            country: country
            stateOrProvince: stateOrProvince
            city: city
            houseNumberOrName: houseNumberOrName
            street: street
            postalCode: postalCode
          ownerName:
            firstName: firstName
            lastName: lastName
            fullName: fullName
            infix: infix
          iban: iban
        merchant:
          merchantId: merchantId
          postalCode: postalCode
          nameLocation:
            country: country
            city: city
            name: name
            countryOfOrigin: countryOfOrigin
            rawData: rawData
            state: state
          acquirerId: acquirerId
          mcc: mcc
        transferInstrumentId: transferInstrumentId
      properties:
        balanceAccountId:
          description: "Unique identifier of the [balance account](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/post/balanceAccounts__resParam_id)."
          title: balanceAccountId
          type: string
        bankAccount:
          $ref: '#/components/schemas/BankAccountInfo'
        merchant:
          $ref: '#/components/schemas/MerchantData'
        transferInstrumentId:
          description: "Unique identifier of the [transfer instrument](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/post/transferInstruments__resParam_id)."
          title: transferInstrumentId
          type: string
      title: Counterparty
    CounterpartyInfo:
      example:
        balanceAccountId: balanceAccountId
        bankAccount:
          address:
            country: country
            stateOrProvince: stateOrProvince
            city: city
            houseNumberOrName: houseNumberOrName
            street: street
            postalCode: postalCode
          ownerName:
            firstName: firstName
            lastName: lastName
            fullName: fullName
            infix: infix
          iban: iban
        transferInstrumentId: transferInstrumentId
      properties:
        balanceAccountId:
          description: "Unique identifier of the [balance account](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/post/balanceAccounts__resParam_id)."
          title: balanceAccountId
          type: string
        bankAccount:
          $ref: '#/components/schemas/BankAccountInfo'
        transferInstrumentId:
          description: "Unique identifier of the [transfer instrument](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/post/transferInstruments__resParam_id)."
          title: transferInstrumentId
          type: string
      title: CounterpartyInfo
    InvalidField:
      example:
        name: name
        message: message
        value: value
      properties:
        message:
          description: Description of the validation error.
          title: message
          type: string
        name:
          description: The field that has an invalid value.
          title: name
          type: string
        value:
          description: The invalid value.
          title: value
          type: string
      required:
      - message
      - name
      - value
      title: InvalidField
    JSONObject:
      title: response
      type: object
    Link:
      example:
        href: href
      properties:
        href:
          title: href
          type: string
      title: Link
    Links:
      example:
        next:
          href: href
        prev:
          href: href
      properties:
        next:
          $ref: '#/components/schemas/Link'
        prev:
          $ref: '#/components/schemas/Link'
      title: Links
    MerchantData:
      example:
        merchantId: merchantId
        postalCode: postalCode
        nameLocation:
          country: country
          city: city
          name: name
          countryOfOrigin: countryOfOrigin
          rawData: rawData
          state: state
        acquirerId: acquirerId
        mcc: mcc
      properties:
        acquirerId:
          description: The unique identifier of the merchant's acquirer.
          title: acquirerId
          type: string
        mcc:
          description: The merchant category code.
          title: mcc
          type: string
        merchantId:
          description: The merchant identifier.
          title: merchantId
          type: string
        nameLocation:
          $ref: '#/components/schemas/NameLocation'
        postalCode:
          description: The merchant postal code.
          title: postalCode
          type: string
      title: MerchantData
    Name:
      example:
        firstName: firstName
        lastName: lastName
        fullName: fullName
        infix: infix
      properties:
        firstName:
          description: The first name.
          title: firstName
          type: string
        fullName:
          description: The full name.
          title: fullName
          type: string
        infix:
          description: "The infix in the name, if any."
          title: infix
          type: string
        lastName:
          description: The last name.
          title: lastName
          type: string
      title: Name
    NameLocation:
      example:
        country: country
        city: city
        name: name
        countryOfOrigin: countryOfOrigin
        rawData: rawData
        state: state
      properties:
        city:
          description: The city where the merchant is located.
          title: city
          type: string
        country:
          description: "The country where the merchant is located in [three-letter\
            \ country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3) format."
          title: country
          type: string
        countryOfOrigin:
          description: "The home country in [three-digit country code](https://en.wikipedia.org/wiki/ISO_3166-1_numeric)\
            \ format, used for government-controlled merchants such as embassies."
          title: countryOfOrigin
          type: string
        name:
          description: The name of the merchant's shop or service.
          title: name
          type: string
        rawData:
          description: The raw data.
          title: rawData
          type: string
        state:
          description: The state where the merchant is located.
          title: state
          type: string
      title: NameLocation
    RestServiceError:
      example:
        instance: instance
        invalidFields:
        - name: name
          message: message
          value: value
        - name: name
          message: message
          value: value
        requestId: requestId
        response: "{}"
        errorCode: errorCode
        detail: detail
        title: title
        type: type
        status: 6
      properties:
        detail:
          description: A human-readable explanation specific to this occurrence of
            the problem.
          title: detail
          type: string
        errorCode:
          description: A code that identifies the problem type.
          title: errorCode
          type: string
        instance:
          description: A unique URI that identifies the specific occurrence of the
            problem.
          title: instance
          type: string
        invalidFields:
          description: "Detailed explanation of each validation error, when applicable."
          items:
            $ref: '#/components/schemas/InvalidField'
          title: invalidFields
          type: array
        requestId:
          description: "A unique reference for the request, essentially the same as\
            \ `pspReference`."
          title: requestId
          type: string
        response:
          title: response
          type: object
        status:
          description: The HTTP status code.
          format: int32
          title: status
          type: integer
        title:
          description: "A short, human-readable summary of the problem type."
          title: title
          type: string
        type:
          description: "A URI that identifies the problem type, pointing to human-readable\
            \ documentation on this problem type."
          title: type
          type: string
      required:
      - detail
      - errorCode
      - status
      - title
      - type
      title: RestServiceError
    ServiceError:
      example:
        errorType: errorType
        errorCode: errorCode
        message: message
        pspReference: pspReference
        status: 0
      properties:
        errorCode:
          description: The error code mapped to the error message.
          title: errorCode
          type: string
        errorType:
          description: The category of the error.
          title: errorType
          type: string
        message:
          description: A short explanation of the issue.
          title: message
          type: string
        pspReference:
          description: The PSP reference of the payment.
          title: pspReference
          type: string
        status:
          description: The HTTP response status.
          format: int32
          title: status
          type: integer
      title: ServiceError
    Transaction:
      example:
        accountHolderId: accountHolderId
        amount:
          currency: currency
          value: 0
        description: description
        paymentInstrumentId: paymentInstrumentId
        valueDate: 2000-01-23T04:56:07.000+00:00
        creationDate: 2000-01-23T04:56:07.000+00:00
        transferId: transferId
        type: atmWithdrawal
        balancePlatform: balancePlatform
        balanceAccountId: balanceAccountId
        reference: reference
        createdAt: 2000-01-23T04:56:07.000+00:00
        referenceForBeneficiary: referenceForBeneficiary
        counterparty:
          balanceAccountId: balanceAccountId
          bankAccount:
            address:
              country: country
              stateOrProvince: stateOrProvince
              city: city
              houseNumberOrName: houseNumberOrName
              street: street
              postalCode: postalCode
            ownerName:
              firstName: firstName
              lastName: lastName
              fullName: fullName
              infix: infix
            iban: iban
          merchant:
            merchantId: merchantId
            postalCode: postalCode
            nameLocation:
              country: country
              city: city
              name: name
              countryOfOrigin: countryOfOrigin
              rawData: rawData
              state: state
            acquirerId: acquirerId
            mcc: mcc
          transferInstrumentId: transferInstrumentId
        bookingDate: 2000-01-23T04:56:07.000+00:00
        instructedAmount:
          currency: currency
          value: 0
        id: id
        category: bank
        status: booked
      properties:
        accountHolderId:
          description: Unique identifier of the account holder.
          title: accountHolderId
          type: string
          x-addedInVersion: "1"
        amount:
          $ref: '#/components/schemas/Amount'
        balanceAccountId:
          description: Unique identifier of the balance account.
          title: balanceAccountId
          type: string
          x-addedInVersion: "1"
        balancePlatform:
          description: The unique identifier of the balance platform.
          title: balancePlatform
          type: string
          x-addedInVersion: "1"
        bookingDate:
          description: The date the transaction was booked into the balance account.
          format: date-time
          title: bookingDate
          type: string
          x-addedInVersion: "1"
        category:
          description: |+
            The category of the transaction indicating the type of activity.

             Possible values:

            * **platformPayment**: The transaction is a payment or payment modification made with an Adyen merchant account.

            * **internal**: The transaction resulted from an internal adjustment such as a deposit correction or invoice deduction.

            * **bank**: The transaction is a bank-related activity, such as sending a payout or receiving funds.

            * **issuedCard**: The transaction is a card-related activity, such as using an Adyen-issued card to pay online.

          enum:
          - bank
          - card
          - grants
          - internal
          - issuedCard
          - migration
          - platformPayment
          - topUp
          - upgrade
          title: category
          type: string
          x-addedInVersion: "1"
        counterparty:
          $ref: '#/components/schemas/Counterparty'
        createdAt:
          description: The date the transaction was created.
          format: date-time
          title: createdAt
          type: string
          x-addedInVersion: "1"
        creationDate:
          description: "The date and time when the event was triggered, in ISO 8601\
            \ extended format. For example, **2020-12-18T10:15:30+01:00**."
          format: date-time
          title: creationDate
          type: string
        description:
          description: The `description` from the `/transfers` request.
          title: description
          type: string
          x-addedInVersion: "1"
        id:
          description: The unique identifier of the transaction.
          title: id
          type: string
          x-addedInVersion: "1"
        instructedAmount:
          $ref: '#/components/schemas/Amount'
        paymentInstrumentId:
          description: The unique identifier of the payment instrument that was used
            for the transaction.
          title: paymentInstrumentId
          type: string
          x-addedInVersion: "1"
        reference:
          description: "The [`reference`](https://docs.adyen.com/api-explorer/#/transfers/latest/post/transfers__reqParam_reference)\
            \ from the `/transfers` request. If you haven't provided any, Adyen generates\
            \ a unique reference."
          title: reference
          type: string
          x-addedInVersion: "1"
        referenceForBeneficiary:
          description: |-
            The reference sent to or received from the counterparty.

            * For outgoing funds, this is the [`referenceForBeneficiary`](https://docs.adyen.com/api-explorer/#/transfers/latest/post/transfers__resParam_referenceForBeneficiary) from the  [`/transfers`](https://docs.adyen.com/api-explorer/#/transfers/latest/post/transfers__reqParam_referenceForBeneficiary) request.

             * For incoming funds, this is the reference from the sender.
          title: referenceForBeneficiary
          type: string
          x-addedInVersion: "1"
        status:
          description: |+
            The status of the transaction.

             Possible values:

            * **pending**: The transaction is still pending.

            * **booked**: The transaction has been booked to the balance account.

          enum:
          - booked
          - pending
          title: status
          type: string
          x-addedInVersion: "1"
        transferId:
          description: Unique identifier of the related transfer.
          title: transferId
          type: string
          x-addedInVersion: "1"
        type:
          description: |-
            The type of the transaction.

             Possible values: **payment**, **capture**, **captureReversal**, **refund** **refundReversal**, **chargeback**, **chargebackReversal**, **secondChargeback**, **atmWithdrawal**, **atmWithdrawalReversal**, **internalTransfer**, **manualCorrection**, **invoiceDeduction**, **depositCorrection**, **bankTransfer**, **miscCost**, **paymentCost**, **fee**
          enum:
          - atmWithdrawal
          - atmWithdrawalReversal
          - balanceAdjustment
          - balanceMigration
          - balanceRollover
          - bankTransfer
          - capture
          - captureReversal
          - cardTransfer
          - cashOutFee
          - cashOutFunding
          - cashOutInstruction
          - chargeback
          - chargebackCorrection
          - chargebackReversal
          - chargebackReversalCorrection
          - depositCorrection
          - fee
          - grant
          - installment
          - installmentReversal
          - internalTransfer
          - invoiceDeduction
          - leftover
          - manualCorrection
          - miscCost
          - payment
          - paymentCost
          - refund
          - refundReversal
          - repayment
          - reserveAdjustment
          - secondChargeback
          - secondChargebackCorrection
          title: type
          type: string
          x-addedInVersion: "1"
        valueDate:
          description: The date the transfer amount becomes available in the balance
            account.
          format: date-time
          title: valueDate
          type: string
          x-addedInVersion: "1"
      required:
      - accountHolderId
      - amount
      - balanceAccountId
      - balancePlatform
      - bookingDate
      - counterparty
      - createdAt
      - id
      - reference
      - status
      - valueDate
      title: Transaction
    TransactionSearchResponse:
      example:
        data:
        - accountHolderId: accountHolderId
          amount:
            currency: currency
            value: 0
          description: description
          paymentInstrumentId: paymentInstrumentId
          valueDate: 2000-01-23T04:56:07.000+00:00
          creationDate: 2000-01-23T04:56:07.000+00:00
          transferId: transferId
          type: atmWithdrawal
          balancePlatform: balancePlatform
          balanceAccountId: balanceAccountId
          reference: reference
          createdAt: 2000-01-23T04:56:07.000+00:00
          referenceForBeneficiary: referenceForBeneficiary
          counterparty:
            balanceAccountId: balanceAccountId
            bankAccount:
              address:
                country: country
                stateOrProvince: stateOrProvince
                city: city
                houseNumberOrName: houseNumberOrName
                street: street
                postalCode: postalCode
              ownerName:
                firstName: firstName
                lastName: lastName
                fullName: fullName
                infix: infix
              iban: iban
            merchant:
              merchantId: merchantId
              postalCode: postalCode
              nameLocation:
                country: country
                city: city
                name: name
                countryOfOrigin: countryOfOrigin
                rawData: rawData
                state: state
              acquirerId: acquirerId
              mcc: mcc
            transferInstrumentId: transferInstrumentId
          bookingDate: 2000-01-23T04:56:07.000+00:00
          instructedAmount:
            currency: currency
            value: 0
          id: id
          category: bank
          status: booked
        - accountHolderId: accountHolderId
          amount:
            currency: currency
            value: 0
          description: description
          paymentInstrumentId: paymentInstrumentId
          valueDate: 2000-01-23T04:56:07.000+00:00
          creationDate: 2000-01-23T04:56:07.000+00:00
          transferId: transferId
          type: atmWithdrawal
          balancePlatform: balancePlatform
          balanceAccountId: balanceAccountId
          reference: reference
          createdAt: 2000-01-23T04:56:07.000+00:00
          referenceForBeneficiary: referenceForBeneficiary
          counterparty:
            balanceAccountId: balanceAccountId
            bankAccount:
              address:
                country: country
                stateOrProvince: stateOrProvince
                city: city
                houseNumberOrName: houseNumberOrName
                street: street
                postalCode: postalCode
              ownerName:
                firstName: firstName
                lastName: lastName
                fullName: fullName
                infix: infix
              iban: iban
            merchant:
              merchantId: merchantId
              postalCode: postalCode
              nameLocation:
                country: country
                city: city
                name: name
                countryOfOrigin: countryOfOrigin
                rawData: rawData
                state: state
              acquirerId: acquirerId
              mcc: mcc
            transferInstrumentId: transferInstrumentId
          bookingDate: 2000-01-23T04:56:07.000+00:00
          instructedAmount:
            currency: currency
            value: 0
          id: id
          category: bank
          status: booked
        _links:
          next:
            href: href
          prev:
            href: href
      properties:
        _links:
          $ref: '#/components/schemas/Links'
        data:
          description: Contains the transactions that match the query parameters.
          items:
            $ref: '#/components/schemas/Transaction'
          title: data
          type: array
      title: TransactionSearchResponse
    Transfer:
      example:
        balanceAccountId: balanceAccountId
        reference: reference
        reason: amountLimitExceeded
        amount:
          currency: currency
          value: 0
        bank:
          priority: crossBorder
        referenceForBeneficiary: referenceForBeneficiary
        counterparty:
          balanceAccountId: balanceAccountId
          bankAccount:
            address:
              country: country
              stateOrProvince: stateOrProvince
              city: city
              houseNumberOrName: houseNumberOrName
              street: street
              postalCode: postalCode
            ownerName:
              firstName: firstName
              lastName: lastName
              fullName: fullName
              infix: infix
            iban: iban
          merchant:
            merchantId: merchantId
            postalCode: postalCode
            nameLocation:
              country: country
              city: city
              name: name
              countryOfOrigin: countryOfOrigin
              rawData: rawData
              state: state
            acquirerId: acquirerId
            mcc: mcc
          transferInstrumentId: transferInstrumentId
        description: description
        paymentInstrumentId: paymentInstrumentId
        id: id
        direction: incoming
        status: approvalPending
      properties:
        amount:
          $ref: '#/components/schemas/Amount'
        balanceAccountId:
          description: "The unique identifier of the source [balance account](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/post/balanceAccounts__resParam_id)."
          title: balanceAccountId
          type: string
          x-addedInVersion: "2"
        bank:
          $ref: '#/components/schemas/Bank'
        counterparty:
          $ref: '#/components/schemas/Counterparty'
        description:
          description: |-
            Your description for the transfer. It is used by most banks as the transfer description. We recommend sending a maximum of 140 characters, otherwise the description may be truncated.

            Supported characters: **[a-z] [A-Z] [0-9] / - ?** **: ( ) . , ' + Space**

            Supported characters for **regular** and **fast** transfers to a US counterparty: **[a-z] [A-Z] [0-9] & $ % # @** **~ = + - _ ' " ! ?**
          title: description
          type: string
          x-addedInVersion: "1"
        direction:
          description: |-
            The direction of the transfer.

            Possible values: **incoming**, **outgoing**.
          enum:
          - incoming
          - outgoing
          title: direction
          type: string
          x-addedInVersion: "2"
        id:
          description: The ID of the resource.
          title: id
          type: string
        paymentInstrumentId:
          description: "The unique identifier of the [payment instrument](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/post/balanceAccounts__resParam_id)\
            \ used in the transfer."
          title: paymentInstrumentId
          type: string
          x-addedInVersion: "2"
        reason:
          description: Additional information about the status of the transfer.
          enum:
          - amountLimitExceeded
          - approved
          - balanceAccountTemporarilyBlockedByTransactionRule
          - counterpartyAccountBlocked
          - counterpartyAccountClosed
          - counterpartyAccountNotFound
          - counterpartyAddressRequired
          - counterpartyBankTimedOut
          - counterpartyBankUnavailable
          - declinedByTransactionRule
          - error
          - notEnoughBalance
          - refusedByCounterpartyBank
          - routeNotFound
          - scaFailed
          - unknown
          title: reason
          type: string
          x-addedInVersion: "2"
        reference:
          description: "Your reference for the transfer, used internally within your\
            \ platform. If you don't provide this in the request, Adyen generates\
            \ a unique reference."
          maxLength: 80
          title: reference
          type: string
          x-addedInVersion: "2"
        referenceForBeneficiary:
          description: |2-
             A reference that is sent to the recipient. This reference is also sent in all webhooks related to the transfer, so you can use it to track statuses for both the source and recipient of funds.

             Supported characters: **a-z**, **A-Z**, **0-9**. Maximum length: 80 characters.
          maxLength: 80
          title: referenceForBeneficiary
          type: string
          x-addedInVersion: "2"
        status:
          description: |-
            The result of the transfer.

             For example, **authorised**, **refused**, or **error**.
          enum:
          - approvalPending
          - atmWithdrawal
          - atmWithdrawalReversalPending
          - atmWithdrawalReversed
          - authAdjustmentAuthorised
          - authAdjustmentError
          - authAdjustmentRefused
          - authorised
          - bankTransfer
          - bankTransferPending
          - booked
          - bookingPending
          - cancelled
          - capturePending
          - captureReversalPending
          - captureReversed
          - captured
          - capturedExternally
          - chargeback
          - chargebackExternally
          - chargebackPending
          - chargebackReversalPending
          - chargebackReversed
          - credited
          - depositCorrection
          - depositCorrectionPending
          - dispute
          - disputeClosed
          - disputeExpired
          - disputeNeedsReview
          - error
          - expired
          - failed
          - fee
          - feePending
          - internalTransfer
          - internalTransferPending
          - invoiceDeduction
          - invoiceDeductionPending
          - manualCorrectionPending
          - manuallyCorrected
          - matchedStatement
          - matchedStatementPending
          - merchantPayin
          - merchantPayinPending
          - merchantPayinReversed
          - merchantPayinReversedPending
          - miscCost
          - miscCostPending
          - paymentCost
          - paymentCostPending
          - received
          - refundPending
          - refundReversalPending
          - refundReversed
          - refunded
          - refundedExternally
          - refused
          - reserveAdjustment
          - reserveAdjustmentPending
          - returned
          - secondChargeback
          - secondChargebackPending
          - undefined
          title: status
          type: string
          x-addedInVersion: "2"
      required:
      - amount
      - counterparty
      - status
      title: Transfer
    TransferInfo:
      example:
        balanceAccountId: balanceAccountId
        reference: reference
        amount:
          currency: currency
          value: 0
        bank:
          priority: crossBorder
        referenceForBeneficiary: referenceForBeneficiary
        counterparty:
          balanceAccountId: balanceAccountId
          bankAccount:
            address:
              country: country
              stateOrProvince: stateOrProvince
              city: city
              houseNumberOrName: houseNumberOrName
              street: street
              postalCode: postalCode
            ownerName:
              firstName: firstName
              lastName: lastName
              fullName: fullName
              infix: infix
            iban: iban
          transferInstrumentId: transferInstrumentId
        description: description
        paymentInstrumentId: paymentInstrumentId
      properties:
        amount:
          $ref: '#/components/schemas/Amount'
        balanceAccountId:
          description: "The unique identifier of the source [balance account](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/post/balanceAccounts__resParam_id)."
          title: balanceAccountId
          type: string
        bank:
          $ref: '#/components/schemas/Bank'
        counterparty:
          $ref: '#/components/schemas/CounterpartyInfo'
        description:
          description: |-
            Your description for the transfer. It is used by most banks as the transfer description. We recommend sending a maximum of 140 characters, otherwise the description may be truncated.

            Supported characters: **[a-z] [A-Z] [0-9] / - ?** **: ( ) . , ' + Space**

            Supported characters for **regular** and **fast** transfers to a US counterparty: **[a-z] [A-Z] [0-9] & $ % # @** **~ = + - _ ' " ! ?**
          maxLength: 140
          title: description
          type: string
          x-addedInVersion: "1"
        paymentInstrumentId:
          description: "The unique identifier of the source [payment instrument](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/post/paymentInstruments__resParam_id)."
          title: paymentInstrumentId
          type: string
        reference:
          description: "Your reference for the transfer, used internally within your\
            \ platform. If you don't provide this in the request, Adyen generates\
            \ a unique reference."
          maxLength: 80
          title: reference
          type: string
          x-addedInVersion: "2"
        referenceForBeneficiary:
          description: |2-
             A reference that is sent to the recipient. This reference is also sent in all webhooks related to the transfer, so you can use it to track statuses for both the source and recipient of funds.

             Supported characters: **a-z**, **A-Z**, **0-9**. Maximum length: 80 characters.
          maxLength: 80
          title: referenceForBeneficiary
          type: string
          x-addedInVersion: "2"
      required:
      - amount
      - counterparty
      title: TransferInfo
  securitySchemes:
    ApiKeyAuth:
      in: header
      name: X-API-Key
      type: apiKey
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_ApiKeyAuth
    BasicAuth:
      scheme: basic
      type: http
      x-basicInfoFunc: openapi_server.controllers.security_controller.info_from_BasicAuth
    clientKey:
      in: query
      name: clientKey
      type: apiKey
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_clientKey
