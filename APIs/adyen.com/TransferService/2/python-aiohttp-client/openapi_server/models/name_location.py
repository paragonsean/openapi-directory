# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class NameLocation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, city: str=None, country: str=None, country_of_origin: str=None, name: str=None, raw_data: str=None, state: str=None):
        """NameLocation - a model defined in OpenAPI

        :param city: The city of this NameLocation.
        :param country: The country of this NameLocation.
        :param country_of_origin: The country_of_origin of this NameLocation.
        :param name: The name of this NameLocation.
        :param raw_data: The raw_data of this NameLocation.
        :param state: The state of this NameLocation.
        """
        self.openapi_types = {
            'city': str,
            'country': str,
            'country_of_origin': str,
            'name': str,
            'raw_data': str,
            'state': str
        }

        self.attribute_map = {
            'city': 'city',
            'country': 'country',
            'country_of_origin': 'countryOfOrigin',
            'name': 'name',
            'raw_data': 'rawData',
            'state': 'state'
        }

        self._city = city
        self._country = country
        self._country_of_origin = country_of_origin
        self._name = name
        self._raw_data = raw_data
        self._state = state

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NameLocation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The NameLocation of this NameLocation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def city(self):
        """Gets the city of this NameLocation.

        The city where the merchant is located.

        :return: The city of this NameLocation.
        :rtype: str
        """
        return self._city

    @city.setter
    def city(self, city):
        """Sets the city of this NameLocation.

        The city where the merchant is located.

        :param city: The city of this NameLocation.
        :type city: str
        """

        self._city = city

    @property
    def country(self):
        """Gets the country of this NameLocation.

        The country where the merchant is located in [three-letter country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3) format.

        :return: The country of this NameLocation.
        :rtype: str
        """
        return self._country

    @country.setter
    def country(self, country):
        """Sets the country of this NameLocation.

        The country where the merchant is located in [three-letter country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3) format.

        :param country: The country of this NameLocation.
        :type country: str
        """

        self._country = country

    @property
    def country_of_origin(self):
        """Gets the country_of_origin of this NameLocation.

        The home country in [three-digit country code](https://en.wikipedia.org/wiki/ISO_3166-1_numeric) format, used for government-controlled merchants such as embassies.

        :return: The country_of_origin of this NameLocation.
        :rtype: str
        """
        return self._country_of_origin

    @country_of_origin.setter
    def country_of_origin(self, country_of_origin):
        """Sets the country_of_origin of this NameLocation.

        The home country in [three-digit country code](https://en.wikipedia.org/wiki/ISO_3166-1_numeric) format, used for government-controlled merchants such as embassies.

        :param country_of_origin: The country_of_origin of this NameLocation.
        :type country_of_origin: str
        """

        self._country_of_origin = country_of_origin

    @property
    def name(self):
        """Gets the name of this NameLocation.

        The name of the merchant's shop or service.

        :return: The name of this NameLocation.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this NameLocation.

        The name of the merchant's shop or service.

        :param name: The name of this NameLocation.
        :type name: str
        """

        self._name = name

    @property
    def raw_data(self):
        """Gets the raw_data of this NameLocation.

        The raw data.

        :return: The raw_data of this NameLocation.
        :rtype: str
        """
        return self._raw_data

    @raw_data.setter
    def raw_data(self, raw_data):
        """Sets the raw_data of this NameLocation.

        The raw data.

        :param raw_data: The raw_data of this NameLocation.
        :type raw_data: str
        """

        self._raw_data = raw_data

    @property
    def state(self):
        """Gets the state of this NameLocation.

        The state where the merchant is located.

        :return: The state of this NameLocation.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this NameLocation.

        The state where the merchant is located.

        :param state: The state of this NameLocation.
        :type state: str
        """

        self._state = state
