# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.name_location import NameLocation
from openapi_server import util


class MerchantData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, acquirer_id: str=None, mcc: str=None, merchant_id: str=None, name_location: NameLocation=None, postal_code: str=None):
        """MerchantData - a model defined in OpenAPI

        :param acquirer_id: The acquirer_id of this MerchantData.
        :param mcc: The mcc of this MerchantData.
        :param merchant_id: The merchant_id of this MerchantData.
        :param name_location: The name_location of this MerchantData.
        :param postal_code: The postal_code of this MerchantData.
        """
        self.openapi_types = {
            'acquirer_id': str,
            'mcc': str,
            'merchant_id': str,
            'name_location': NameLocation,
            'postal_code': str
        }

        self.attribute_map = {
            'acquirer_id': 'acquirerId',
            'mcc': 'mcc',
            'merchant_id': 'merchantId',
            'name_location': 'nameLocation',
            'postal_code': 'postalCode'
        }

        self._acquirer_id = acquirer_id
        self._mcc = mcc
        self._merchant_id = merchant_id
        self._name_location = name_location
        self._postal_code = postal_code

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MerchantData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MerchantData of this MerchantData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def acquirer_id(self):
        """Gets the acquirer_id of this MerchantData.

        The unique identifier of the merchant's acquirer.

        :return: The acquirer_id of this MerchantData.
        :rtype: str
        """
        return self._acquirer_id

    @acquirer_id.setter
    def acquirer_id(self, acquirer_id):
        """Sets the acquirer_id of this MerchantData.

        The unique identifier of the merchant's acquirer.

        :param acquirer_id: The acquirer_id of this MerchantData.
        :type acquirer_id: str
        """

        self._acquirer_id = acquirer_id

    @property
    def mcc(self):
        """Gets the mcc of this MerchantData.

        The merchant category code.

        :return: The mcc of this MerchantData.
        :rtype: str
        """
        return self._mcc

    @mcc.setter
    def mcc(self, mcc):
        """Sets the mcc of this MerchantData.

        The merchant category code.

        :param mcc: The mcc of this MerchantData.
        :type mcc: str
        """

        self._mcc = mcc

    @property
    def merchant_id(self):
        """Gets the merchant_id of this MerchantData.

        The merchant identifier.

        :return: The merchant_id of this MerchantData.
        :rtype: str
        """
        return self._merchant_id

    @merchant_id.setter
    def merchant_id(self, merchant_id):
        """Sets the merchant_id of this MerchantData.

        The merchant identifier.

        :param merchant_id: The merchant_id of this MerchantData.
        :type merchant_id: str
        """

        self._merchant_id = merchant_id

    @property
    def name_location(self):
        """Gets the name_location of this MerchantData.

        Contains the merchant's name and location.

        :return: The name_location of this MerchantData.
        :rtype: NameLocation
        """
        return self._name_location

    @name_location.setter
    def name_location(self, name_location):
        """Sets the name_location of this MerchantData.

        Contains the merchant's name and location.

        :param name_location: The name_location of this MerchantData.
        :type name_location: NameLocation
        """

        self._name_location = name_location

    @property
    def postal_code(self):
        """Gets the postal_code of this MerchantData.

        The merchant postal code.

        :return: The postal_code of this MerchantData.
        :rtype: str
        """
        return self._postal_code

    @postal_code.setter
    def postal_code(self, postal_code):
        """Sets the postal_code of this MerchantData.

        The merchant postal code.

        :param postal_code: The postal_code of this MerchantData.
        :type postal_code: str
        """

        self._postal_code = postal_code
