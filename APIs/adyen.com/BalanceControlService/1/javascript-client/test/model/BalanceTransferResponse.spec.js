/**
 * Adyen Balance Control API
 * The Balance Control API lets you transfer funds between merchant accounts that belong to the same legal entity and are under the same company account.  ## Authentication To connect to the Balance Control API, you must authenticate your requests with an [API key or basic auth username and password](https://docs.adyen.com/development-resources/api-authentication). To learn how you can generate these, see [API credentials](https://docs.adyen.com/development-resources/api-credentials).Here is an example of authenticating a request with an API key:  ``` curl -H \"X-API-Key: Your_API_key\" \\ -H \"Content-Type: application/json\" \\ ... ``` Note that when going live, you need to generate API credentials to access the [live endpoints](https://docs.adyen.com/development-resources/live-endpoints).  ## Versioning The Balance Control API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example:  ``` https://pal-test.adyen.com/pal/servlet/BalanceControl/v1/balanceTransfer ``` 
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AdyenBalanceControlApi);
  }
}(this, function(expect, AdyenBalanceControlApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AdyenBalanceControlApi.BalanceTransferResponse();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('BalanceTransferResponse', function() {
    it('should create an instance of BalanceTransferResponse', function() {
      // uncomment below and update the code to test BalanceTransferResponse
      //var instance = new AdyenBalanceControlApi.BalanceTransferResponse();
      //expect(instance).to.be.a(AdyenBalanceControlApi.BalanceTransferResponse);
    });

    it('should have the property amount (base name: "amount")', function() {
      // uncomment below and update the code to test the property amount
      //var instance = new AdyenBalanceControlApi.BalanceTransferResponse();
      //expect(instance).to.be();
    });

    it('should have the property createdAt (base name: "createdAt")', function() {
      // uncomment below and update the code to test the property createdAt
      //var instance = new AdyenBalanceControlApi.BalanceTransferResponse();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new AdyenBalanceControlApi.BalanceTransferResponse();
      //expect(instance).to.be();
    });

    it('should have the property fromMerchant (base name: "fromMerchant")', function() {
      // uncomment below and update the code to test the property fromMerchant
      //var instance = new AdyenBalanceControlApi.BalanceTransferResponse();
      //expect(instance).to.be();
    });

    it('should have the property pspReference (base name: "pspReference")', function() {
      // uncomment below and update the code to test the property pspReference
      //var instance = new AdyenBalanceControlApi.BalanceTransferResponse();
      //expect(instance).to.be();
    });

    it('should have the property reference (base name: "reference")', function() {
      // uncomment below and update the code to test the property reference
      //var instance = new AdyenBalanceControlApi.BalanceTransferResponse();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new AdyenBalanceControlApi.BalanceTransferResponse();
      //expect(instance).to.be();
    });

    it('should have the property toMerchant (base name: "toMerchant")', function() {
      // uncomment below and update the code to test the property toMerchant
      //var instance = new AdyenBalanceControlApi.BalanceTransferResponse();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "type")', function() {
      // uncomment below and update the code to test the property type
      //var instance = new AdyenBalanceControlApi.BalanceTransferResponse();
      //expect(instance).to.be();
    });

  });

}));
