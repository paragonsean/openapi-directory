/*
 * Management API
 * Configure and manage your Adyen company and merchant accounts, stores, and payment terminals. ## Authentication Each request to the Management API must be signed with an API key. [Generate your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) in the Customer Area and then set this key to the `X-API-Key` header value.  To access the live endpoints, you need to generate a new API key in your live Customer Area. ## Versioning  Management API handles versioning as part of the endpoint URL. For example, to send a request to this version of the `/companies/{companyId}/webhooks` endpoint, use:  ```text https://management-test.adyen.com/v3/companies/{companyId}/webhooks ```  ## Going live  To access the live endpoints, you need an API key from your live Customer Area. Use this API key to make requests to:  ```text https://management-live.adyen.com/v3 ```  ## Release notes Have a look at the [release notes](https://docs.adyen.com/release-notes/management-api) to find out what changed in this version!
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Company;
import org.openapitools.client.model.ListCompanyResponse;
import org.openapitools.client.model.ListMerchantResponse;
import org.openapitools.client.model.RestServiceError;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AccountCompanyLevelApi
 */
@Disabled
public class AccountCompanyLevelApiTest {

    private final AccountCompanyLevelApi api = new AccountCompanyLevelApi();

    /**
     * Get a list of company accounts
     *
     * Returns the list of company accounts that your API credential has access to. The list is grouped into pages as defined by the query parameters.  To make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):  * Management API—Account read
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCompaniesTest() throws ApiException {
        Integer pageNumber = null;
        Integer pageSize = null;
        ListCompanyResponse response = api.getCompanies(pageNumber, pageSize);
        // TODO: test validations
    }

    /**
     * Get a company account
     *
     * Returns the company account specified in the path. Your API credential must have access to the company account.   To make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Account read
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCompaniesCompanyIdTest() throws ApiException {
        String companyId = null;
        Company response = api.getCompaniesCompanyId(companyId);
        // TODO: test validations
    }

    /**
     * Get a list of merchant accounts
     *
     * Returns the list of merchant accounts under the company account specified in the path. The list only includes merchant accounts that your API credential has access to. The list is grouped into pages as defined by the query parameters.   To make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Account read
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCompaniesCompanyIdMerchantsTest() throws ApiException {
        String companyId = null;
        Integer pageNumber = null;
        Integer pageSize = null;
        ListMerchantResponse response = api.getCompaniesCompanyIdMerchants(companyId, pageNumber, pageSize);
        // TODO: test validations
    }

}
