/*
 * Management API
 * Configure and manage your Adyen company and merchant accounts, stores, and payment terminals. ## Authentication Each request to the Management API must be signed with an API key. [Generate your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) in the Customer Area and then set this key to the `X-API-Key` header value.  To access the live endpoints, you need to generate a new API key in your live Customer Area. ## Versioning  Management API handles versioning as part of the endpoint URL. For example, to send a request to this version of the `/companies/{companyId}/webhooks` endpoint, use:  ```text https://management-test.adyen.com/v3/companies/{companyId}/webhooks ```  ## Going live  To access the live endpoints, you need an API key from your live Customer Area. Use this API key to make requests to:  ```text https://management-live.adyen.com/v3 ```  ## Release notes Have a look at the [release notes](https://docs.adyen.com/release-notes/management-api) to find out what changed in this version!
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AllowedOrigin;
import org.openapitools.client.model.AllowedOriginsResponse;
import org.openapitools.client.model.CreateAllowedOriginRequest;
import org.openapitools.client.model.GenerateClientKeyResponse;
import org.openapitools.client.model.MeApiCredential;
import org.openapitools.client.model.RestServiceError;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for MyApiCredentialApi
 */
@Disabled
public class MyApiCredentialApiTest {

    private final MyApiCredentialApi api = new MyApiCredentialApi();

    /**
     * Remove allowed origin
     *
     * Removes the [allowed origin](https://docs.adyen.com/development-resources/client-side-authentication#allowed-origins) specified in the path. The API key from the request is used to identify the [API credential](https://docs.adyen.com/development-resources/api-credentials).  You can make this request with any of the Management API roles.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteMeAllowedOriginsOriginIdTest() throws ApiException {
        String originId = null;
        api.deleteMeAllowedOriginsOriginId(originId);
        // TODO: test validations
    }

    /**
     * Get API credential details
     *
     * Returns your [API credential](https://docs.adyen.com/development-resources/api-credentials) details based on the API Key you used in the request.  You can make this request with any of the Management API roles.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getMeTest() throws ApiException {
        MeApiCredential response = api.getMe();
        // TODO: test validations
    }

    /**
     * Get allowed origins
     *
     * Returns the list of [allowed origins](https://docs.adyen.com/development-resources/client-side-authentication#allowed-origins) of your [API credential](https://docs.adyen.com/development-resources/api-credentials) based on the API key you used in the request.  You can make this request with any of the Management API roles.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getMeAllowedOriginsTest() throws ApiException {
        AllowedOriginsResponse response = api.getMeAllowedOrigins();
        // TODO: test validations
    }

    /**
     * Get allowed origin details
     *
     * Returns the details of the [allowed origin](https://docs.adyen.com/development-resources/client-side-authentication#allowed-origins) specified in the path. The API key from the request is used to identify the [API credential](https://docs.adyen.com/development-resources/api-credentials).  You can make this request with any of the Management API roles.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getMeAllowedOriginsOriginIdTest() throws ApiException {
        String originId = null;
        AllowedOrigin response = api.getMeAllowedOriginsOriginId(originId);
        // TODO: test validations
    }

    /**
     * Add allowed origin
     *
     * Adds an allowed origin to the list of [allowed origins](https://docs.adyen.com/development-resources/client-side-authentication#allowed-origins) of your API credential. The API key from the request is used to identify the [API credential](https://docs.adyen.com/development-resources/api-credentials).  You can make this request with any of the Management API roles.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postMeAllowedOriginsTest() throws ApiException {
        CreateAllowedOriginRequest createAllowedOriginRequest = null;
        AllowedOrigin response = api.postMeAllowedOrigins(createAllowedOriginRequest);
        // TODO: test validations
    }

    /**
     * Generate a client key
     *
     * Generates a new [client key](https://docs.adyen.com/development-resources/client-side-authentication/) used to authenticate requests from your payment environment. You can use the new client key a few minutes after generating it. The old client key stops working 24 hours after generating a new one.  To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management APIâ€”API credentials read and write
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postMeGenerateClientKeyTest() throws ApiException {
        GenerateClientKeyResponse response = api.postMeGenerateClientKey();
        // TODO: test validations
    }

}
