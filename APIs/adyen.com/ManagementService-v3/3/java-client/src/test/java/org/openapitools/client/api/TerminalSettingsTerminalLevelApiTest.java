/*
 * Management API
 * Configure and manage your Adyen company and merchant accounts, stores, and payment terminals. ## Authentication Each request to the Management API must be signed with an API key. [Generate your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) in the Customer Area and then set this key to the `X-API-Key` header value.  To access the live endpoints, you need to generate a new API key in your live Customer Area. ## Versioning  Management API handles versioning as part of the endpoint URL. For example, to send a request to this version of the `/companies/{companyId}/webhooks` endpoint, use:  ```text https://management-test.adyen.com/v3/companies/{companyId}/webhooks ```  ## Going live  To access the live endpoints, you need an API key from your live Customer Area. Use this API key to make requests to:  ```text https://management-live.adyen.com/v3 ```  ## Release notes Have a look at the [release notes](https://docs.adyen.com/release-notes/management-api) to find out what changed in this version!
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Logo;
import org.openapitools.client.model.RestServiceError;
import org.openapitools.client.model.TerminalSettings;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TerminalSettingsTerminalLevelApi
 */
@Disabled
public class TerminalSettingsTerminalLevelApiTest {

    private final TerminalSettingsTerminalLevelApi api = new TerminalSettingsTerminalLevelApi();

    /**
     * Get the terminal logo
     *
     * Returns the logo that is configured for the payment terminal identified in the path. The logo is returned as a Base64-encoded string. You need to Base64-decode the string to get the actual image file.  To make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Terminal settings read * Management API—Terminal settings read and write
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTerminalsTerminalIdTerminalLogosTest() throws ApiException {
        String terminalId = null;
        Logo response = api.getTerminalsTerminalIdTerminalLogos(terminalId);
        // TODO: test validations
    }

    /**
     * Get terminal settings
     *
     * Returns the settings that are configured for the payment terminal identified in the path.  To make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Terminal settings read * Management API—Terminal settings read and write  For [sensitive terminal settings](https://docs.adyen.com/point-of-sale/automating-terminal-management/configure-terminals-api#sensitive-terminal-settings), your API credential must have the following role: * Management API—Terminal settings Advanced read and write
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTerminalsTerminalIdTerminalSettingsTest() throws ApiException {
        String terminalId = null;
        TerminalSettings response = api.getTerminalsTerminalIdTerminalSettings(terminalId);
        // TODO: test validations
    }

    /**
     * Update the logo
     *
     * Updates the logo for the payment terminal identified in the path.  * To change the logo, specify the image file as a Base64-encoded string. * To restore the logo inherited from a higher level (store, merchant account, or company account), specify an empty logo value.  To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Terminal settings read and write
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void patchTerminalsTerminalIdTerminalLogosTest() throws ApiException {
        String terminalId = null;
        Logo logo = null;
        Logo response = api.patchTerminalsTerminalIdTerminalLogos(terminalId, logo);
        // TODO: test validations
    }

    /**
     * Update terminal settings
     *
     * Updates the settings that are configured for the payment terminal identified in the path.  * To change a parameter value, include the full object that contains the parameter, even if you don&#39;t want to change all parameters in the object. * To restore a parameter value inherited from a higher level, include the full object that contains the parameter, and specify an empty value for the parameter or omit the parameter. * Objects that are not included in the request are not updated.  To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Terminal settings read and write  For [sensitive terminal settings](https://docs.adyen.com/point-of-sale/automating-terminal-management/configure-terminals-api#sensitive-terminal-settings), your API credential must have the following role: * Management API—Terminal settings Advanced read and write
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void patchTerminalsTerminalIdTerminalSettingsTest() throws ApiException {
        String terminalId = null;
        TerminalSettings terminalSettings = null;
        TerminalSettings response = api.patchTerminalsTerminalIdTerminalSettings(terminalId, terminalSettings);
        // TODO: test validations
    }

}
