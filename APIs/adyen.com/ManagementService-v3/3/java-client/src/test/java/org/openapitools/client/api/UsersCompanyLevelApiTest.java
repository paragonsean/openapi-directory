/*
 * Management API
 * Configure and manage your Adyen company and merchant accounts, stores, and payment terminals. ## Authentication Each request to the Management API must be signed with an API key. [Generate your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) in the Customer Area and then set this key to the `X-API-Key` header value.  To access the live endpoints, you need to generate a new API key in your live Customer Area. ## Versioning  Management API handles versioning as part of the endpoint URL. For example, to send a request to this version of the `/companies/{companyId}/webhooks` endpoint, use:  ```text https://management-test.adyen.com/v3/companies/{companyId}/webhooks ```  ## Going live  To access the live endpoints, you need an API key from your live Customer Area. Use this API key to make requests to:  ```text https://management-live.adyen.com/v3 ```  ## Release notes Have a look at the [release notes](https://docs.adyen.com/release-notes/management-api) to find out what changed in this version!
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CompanyUser;
import org.openapitools.client.model.CreateCompanyUserRequest;
import org.openapitools.client.model.CreateCompanyUserResponse;
import org.openapitools.client.model.ListCompanyUsersResponse;
import org.openapitools.client.model.RestServiceError;
import org.openapitools.client.model.UpdateCompanyUserRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for UsersCompanyLevelApi
 */
@Disabled
public class UsersCompanyLevelApiTest {

    private final UsersCompanyLevelApi api = new UsersCompanyLevelApi();

    /**
     * Get a list of users
     *
     * Returns the list of users for the &#x60;companyId&#x60; identified in the path.  To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Users read and write 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCompaniesCompanyIdUsersTest() throws ApiException {
        String companyId = null;
        Integer pageNumber = null;
        Integer pageSize = null;
        String username = null;
        ListCompanyUsersResponse response = api.getCompaniesCompanyIdUsers(companyId, pageNumber, pageSize, username);
        // TODO: test validations
    }

    /**
     * Get user details
     *
     * Returns user details for the &#x60;userId&#x60; and the &#x60;companyId&#x60; identified in the path.  To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Users read and write 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCompaniesCompanyIdUsersUserIdTest() throws ApiException {
        String companyId = null;
        String userId = null;
        CompanyUser response = api.getCompaniesCompanyIdUsersUserId(companyId, userId);
        // TODO: test validations
    }

    /**
     * Update user details
     *
     * Updates user details for the &#x60;userId&#x60; and the &#x60;companyId&#x60; identified in the path.  To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Users read and write 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void patchCompaniesCompanyIdUsersUserIdTest() throws ApiException {
        String companyId = null;
        String userId = null;
        UpdateCompanyUserRequest updateCompanyUserRequest = null;
        CompanyUser response = api.patchCompaniesCompanyIdUsersUserId(companyId, userId, updateCompanyUserRequest);
        // TODO: test validations
    }

    /**
     * Create a new user
     *
     * Creates the user for the &#x60;companyId&#x60; identified in the path.  To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Users read and write 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postCompaniesCompanyIdUsersTest() throws ApiException {
        String companyId = null;
        CreateCompanyUserRequest createCompanyUserRequest = null;
        CreateCompanyUserResponse response = api.postCompaniesCompanyIdUsers(companyId, createCompanyUserRequest);
        // TODO: test validations
    }

}
