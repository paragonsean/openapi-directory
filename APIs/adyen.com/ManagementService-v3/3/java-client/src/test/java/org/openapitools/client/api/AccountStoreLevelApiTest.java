/*
 * Management API
 * Configure and manage your Adyen company and merchant accounts, stores, and payment terminals. ## Authentication Each request to the Management API must be signed with an API key. [Generate your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) in the Customer Area and then set this key to the `X-API-Key` header value.  To access the live endpoints, you need to generate a new API key in your live Customer Area. ## Versioning  Management API handles versioning as part of the endpoint URL. For example, to send a request to this version of the `/companies/{companyId}/webhooks` endpoint, use:  ```text https://management-test.adyen.com/v3/companies/{companyId}/webhooks ```  ## Going live  To access the live endpoints, you need an API key from your live Customer Area. Use this API key to make requests to:  ```text https://management-live.adyen.com/v3 ```  ## Release notes Have a look at the [release notes](https://docs.adyen.com/release-notes/management-api) to find out what changed in this version!
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ListStoresResponse;
import org.openapitools.client.model.RestServiceError;
import org.openapitools.client.model.Store;
import org.openapitools.client.model.StoreCreationRequest;
import org.openapitools.client.model.StoreCreationWithMerchantCodeRequest;
import org.openapitools.client.model.UpdateStoreRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AccountStoreLevelApi
 */
@Disabled
public class AccountStoreLevelApiTest {

    private final AccountStoreLevelApi api = new AccountStoreLevelApi();

    /**
     * Get a list of stores
     *
     * Returns a list of stores for the merchant account identified in the path. The list is grouped into pages as defined by the query parameters.  To make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Stores read * Management API—Stores read and write
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getMerchantsMerchantIdStoresTest() throws ApiException {
        String merchantId = null;
        Integer pageNumber = null;
        Integer pageSize = null;
        String reference = null;
        ListStoresResponse response = api.getMerchantsMerchantIdStores(merchantId, pageNumber, pageSize, reference);
        // TODO: test validations
    }

    /**
     * Get a store
     *
     * Returns the details of the store identified in the path.  To make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Stores read * Management API—Stores read and write
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getMerchantsMerchantIdStoresStoreIdTest() throws ApiException {
        String merchantId = null;
        String storeId = null;
        Store response = api.getMerchantsMerchantIdStoresStoreId(merchantId, storeId);
        // TODO: test validations
    }

    /**
     * Get a list of stores
     *
     * Returns a list of stores. The list is grouped into pages as defined by the query parameters.  To make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Stores read * Management API—Stores read and write
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getStoresTest() throws ApiException {
        Integer pageNumber = null;
        Integer pageSize = null;
        String reference = null;
        String merchantId = null;
        ListStoresResponse response = api.getStores(pageNumber, pageSize, reference, merchantId);
        // TODO: test validations
    }

    /**
     * Get a store
     *
     * Returns the details of the store identified in the path.  To make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Stores read * Management API—Stores read and write
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getStoresStoreIdTest() throws ApiException {
        String storeId = null;
        Store response = api.getStoresStoreId(storeId);
        // TODO: test validations
    }

    /**
     * Update a store
     *
     * Updates the store identified in the path. You can only update some store parameters.  To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Stores read and write
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void patchMerchantsMerchantIdStoresStoreIdTest() throws ApiException {
        String merchantId = null;
        String storeId = null;
        UpdateStoreRequest updateStoreRequest = null;
        Store response = api.patchMerchantsMerchantIdStoresStoreId(merchantId, storeId, updateStoreRequest);
        // TODO: test validations
    }

    /**
     * Update a store
     *
     * Updates the store identified in the path. You can only update some store parameters.  To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Stores read and write
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void patchStoresStoreIdTest() throws ApiException {
        String storeId = null;
        UpdateStoreRequest updateStoreRequest = null;
        Store response = api.patchStoresStoreId(storeId, updateStoreRequest);
        // TODO: test validations
    }

    /**
     * Create a store
     *
     * Creates a store for the merchant account identified in the path.  To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Stores read and write
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postMerchantsMerchantIdStoresTest() throws ApiException {
        String merchantId = null;
        StoreCreationRequest storeCreationRequest = null;
        Store response = api.postMerchantsMerchantIdStores(merchantId, storeCreationRequest);
        // TODO: test validations
    }

    /**
     * Create a store
     *
     * Creates a store for the merchant account specified in the request.  To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Stores read and write
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postStoresTest() throws ApiException {
        StoreCreationWithMerchantCodeRequest storeCreationWithMerchantCodeRequest = null;
        Store response = api.postStores(storeCreationWithMerchantCodeRequest);
        // TODO: test validations
    }

}
