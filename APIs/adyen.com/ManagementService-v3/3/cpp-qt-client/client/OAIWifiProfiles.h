/**
 * Management API
 * Configure and manage your Adyen company and merchant accounts, stores, and payment terminals. ## Authentication Each request to the Management API must be signed with an API key. [Generate your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) in the Customer Area and then set this key to the `X-API-Key` header value.  To access the live endpoints, you need to generate a new API key in your live Customer Area. ## Versioning  Management API handles versioning as part of the endpoint URL. For example, to send a request to this version of the `/companies/{companyId}/webhooks` endpoint, use:  ```text https://management-test.adyen.com/v3/companies/{companyId}/webhooks ```  ## Going live  To access the live endpoints, you need an API key from your live Customer Area. Use this API key to make requests to:  ```text https://management-live.adyen.com/v3 ```  ## Release notes Have a look at the [release notes](https://docs.adyen.com/release-notes/management-api) to find out what changed in this version!
 *
 * The version of the OpenAPI document: 3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIWifiProfiles.h
 *
 * 
 */

#ifndef OAIWifiProfiles_H
#define OAIWifiProfiles_H

#include <QJsonObject>

#include "OAIProfile.h"
#include "OAISettings.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIProfile;
class OAISettings;

class OAIWifiProfiles : public OAIObject {
public:
    OAIWifiProfiles();
    OAIWifiProfiles(QString json);
    ~OAIWifiProfiles() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIProfile> getProfiles() const;
    void setProfiles(const QList<OAIProfile> &profiles);
    bool is_profiles_Set() const;
    bool is_profiles_Valid() const;

    OAISettings getSettings() const;
    void setSettings(const OAISettings &settings);
    bool is_settings_Set() const;
    bool is_settings_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIProfile> m_profiles;
    bool m_profiles_isSet;
    bool m_profiles_isValid;

    OAISettings m_settings;
    bool m_settings_isSet;
    bool m_settings_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIWifiProfiles)

#endif // OAIWifiProfiles_H
