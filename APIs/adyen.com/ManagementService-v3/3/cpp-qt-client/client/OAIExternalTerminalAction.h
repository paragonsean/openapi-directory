/**
 * Management API
 * Configure and manage your Adyen company and merchant accounts, stores, and payment terminals. ## Authentication Each request to the Management API must be signed with an API key. [Generate your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) in the Customer Area and then set this key to the `X-API-Key` header value.  To access the live endpoints, you need to generate a new API key in your live Customer Area. ## Versioning  Management API handles versioning as part of the endpoint URL. For example, to send a request to this version of the `/companies/{companyId}/webhooks` endpoint, use:  ```text https://management-test.adyen.com/v3/companies/{companyId}/webhooks ```  ## Going live  To access the live endpoints, you need an API key from your live Customer Area. Use this API key to make requests to:  ```text https://management-live.adyen.com/v3 ```  ## Release notes Have a look at the [release notes](https://docs.adyen.com/release-notes/management-api) to find out what changed in this version!
 *
 * The version of the OpenAPI document: 3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIExternalTerminalAction.h
 *
 * 
 */

#ifndef OAIExternalTerminalAction_H
#define OAIExternalTerminalAction_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIExternalTerminalAction : public OAIObject {
public:
    OAIExternalTerminalAction();
    OAIExternalTerminalAction(QString json);
    ~OAIExternalTerminalAction() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getActionType() const;
    void setActionType(const QString &action_type);
    bool is_action_type_Set() const;
    bool is_action_type_Valid() const;

    QString getConfig() const;
    void setConfig(const QString &config);
    bool is_config_Set() const;
    bool is_config_Valid() const;

    QDateTime getConfirmedAt() const;
    void setConfirmedAt(const QDateTime &confirmed_at);
    bool is_confirmed_at_Set() const;
    bool is_confirmed_at_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getResult() const;
    void setResult(const QString &result);
    bool is_result_Set() const;
    bool is_result_Valid() const;

    QDateTime getScheduledAt() const;
    void setScheduledAt(const QDateTime &scheduled_at);
    bool is_scheduled_at_Set() const;
    bool is_scheduled_at_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getTerminalId() const;
    void setTerminalId(const QString &terminal_id);
    bool is_terminal_id_Set() const;
    bool is_terminal_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_action_type;
    bool m_action_type_isSet;
    bool m_action_type_isValid;

    QString m_config;
    bool m_config_isSet;
    bool m_config_isValid;

    QDateTime m_confirmed_at;
    bool m_confirmed_at_isSet;
    bool m_confirmed_at_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_result;
    bool m_result_isSet;
    bool m_result_isValid;

    QDateTime m_scheduled_at;
    bool m_scheduled_at_isSet;
    bool m_scheduled_at_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_terminal_id;
    bool m_terminal_id_isSet;
    bool m_terminal_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIExternalTerminalAction)

#endif // OAIExternalTerminalAction_H
