/**
 * Management API
 * Configure and manage your Adyen company and merchant accounts, stores, and payment terminals. ## Authentication Each request to the Management API must be signed with an API key. [Generate your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) in the Customer Area and then set this key to the `X-API-Key` header value.  To access the live endpoints, you need to generate a new API key in your live Customer Area. ## Versioning  Management API handles versioning as part of the endpoint URL. For example, to send a request to this version of the `/companies/{companyId}/webhooks` endpoint, use:  ```text https://management-test.adyen.com/v3/companies/{companyId}/webhooks ```  ## Going live  To access the live endpoints, you need an API key from your live Customer Area. Use this API key to make requests to:  ```text https://management-live.adyen.com/v3 ```  ## Release notes Have a look at the [release notes](https://docs.adyen.com/release-notes/management-api) to find out what changed in this version!
 *
 * The version of the OpenAPI document: 3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITerminalSettings.h
 *
 * 
 */

#ifndef OAITerminalSettings_H
#define OAITerminalSettings_H

#include <QJsonObject>

#include "OAICardholderReceipt.h"
#include "OAIConnectivity.h"
#include "OAIGratuity.h"
#include "OAIHardware.h"
#include "OAILocalization.h"
#include "OAINexo.h"
#include "OAIOfflineProcessing.h"
#include "OAIOpi.h"
#include "OAIPasscodes.h"
#include "OAIPayAtTable.h"
#include "OAIPayment.h"
#include "OAIReceiptOptions.h"
#include "OAIReceiptPrinting.h"
#include "OAIRefunds.h"
#include "OAISignature.h"
#include "OAIStandalone.h"
#include "OAISurcharge.h"
#include "OAITapToPay.h"
#include "OAITerminalInstructions.h"
#include "OAITimeouts.h"
#include "OAIWifiProfiles.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICardholderReceipt;
class OAIConnectivity;
class OAIGratuity;
class OAIHardware;
class OAILocalization;
class OAINexo;
class OAIOfflineProcessing;
class OAIOpi;
class OAIPasscodes;
class OAIPayAtTable;
class OAIPayment;
class OAIReceiptOptions;
class OAIReceiptPrinting;
class OAIRefunds;
class OAISignature;
class OAIStandalone;
class OAISurcharge;
class OAITapToPay;
class OAITerminalInstructions;
class OAITimeouts;
class OAIWifiProfiles;

class OAITerminalSettings : public OAIObject {
public:
    OAITerminalSettings();
    OAITerminalSettings(QString json);
    ~OAITerminalSettings() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAICardholderReceipt getCardholderReceipt() const;
    void setCardholderReceipt(const OAICardholderReceipt &cardholder_receipt);
    bool is_cardholder_receipt_Set() const;
    bool is_cardholder_receipt_Valid() const;

    OAIConnectivity getConnectivity() const;
    void setConnectivity(const OAIConnectivity &connectivity);
    bool is_connectivity_Set() const;
    bool is_connectivity_Valid() const;

    QList<OAIGratuity> getGratuities() const;
    void setGratuities(const QList<OAIGratuity> &gratuities);
    bool is_gratuities_Set() const;
    bool is_gratuities_Valid() const;

    OAIHardware getHardware() const;
    void setHardware(const OAIHardware &hardware);
    bool is_hardware_Set() const;
    bool is_hardware_Valid() const;

    OAILocalization getLocalization() const;
    void setLocalization(const OAILocalization &localization);
    bool is_localization_Set() const;
    bool is_localization_Valid() const;

    OAINexo getNexo() const;
    void setNexo(const OAINexo &nexo);
    bool is_nexo_Set() const;
    bool is_nexo_Valid() const;

    OAIOfflineProcessing getOfflineProcessing() const;
    void setOfflineProcessing(const OAIOfflineProcessing &offline_processing);
    bool is_offline_processing_Set() const;
    bool is_offline_processing_Valid() const;

    OAIOpi getOpi() const;
    void setOpi(const OAIOpi &opi);
    bool is_opi_Set() const;
    bool is_opi_Valid() const;

    OAIPasscodes getPasscodes() const;
    void setPasscodes(const OAIPasscodes &passcodes);
    bool is_passcodes_Set() const;
    bool is_passcodes_Valid() const;

    OAIPayAtTable getPayAtTable() const;
    void setPayAtTable(const OAIPayAtTable &pay_at_table);
    bool is_pay_at_table_Set() const;
    bool is_pay_at_table_Valid() const;

    OAIPayment getPayment() const;
    void setPayment(const OAIPayment &payment);
    bool is_payment_Set() const;
    bool is_payment_Valid() const;

    OAIReceiptOptions getReceiptOptions() const;
    void setReceiptOptions(const OAIReceiptOptions &receipt_options);
    bool is_receipt_options_Set() const;
    bool is_receipt_options_Valid() const;

    OAIReceiptPrinting getReceiptPrinting() const;
    void setReceiptPrinting(const OAIReceiptPrinting &receipt_printing);
    bool is_receipt_printing_Set() const;
    bool is_receipt_printing_Valid() const;

    OAIRefunds getRefunds() const;
    void setRefunds(const OAIRefunds &refunds);
    bool is_refunds_Set() const;
    bool is_refunds_Valid() const;

    OAISignature getSignature() const;
    void setSignature(const OAISignature &signature);
    bool is_signature_Set() const;
    bool is_signature_Valid() const;

    OAIStandalone getStandalone() const;
    void setStandalone(const OAIStandalone &standalone);
    bool is_standalone_Set() const;
    bool is_standalone_Valid() const;

    OAISurcharge getSurcharge() const;
    void setSurcharge(const OAISurcharge &surcharge);
    bool is_surcharge_Set() const;
    bool is_surcharge_Valid() const;

    OAITapToPay getTapToPay() const;
    void setTapToPay(const OAITapToPay &tap_to_pay);
    bool is_tap_to_pay_Set() const;
    bool is_tap_to_pay_Valid() const;

    OAITerminalInstructions getTerminalInstructions() const;
    void setTerminalInstructions(const OAITerminalInstructions &terminal_instructions);
    bool is_terminal_instructions_Set() const;
    bool is_terminal_instructions_Valid() const;

    OAITimeouts getTimeouts() const;
    void setTimeouts(const OAITimeouts &timeouts);
    bool is_timeouts_Set() const;
    bool is_timeouts_Valid() const;

    OAIWifiProfiles getWifiProfiles() const;
    void setWifiProfiles(const OAIWifiProfiles &wifi_profiles);
    bool is_wifi_profiles_Set() const;
    bool is_wifi_profiles_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAICardholderReceipt m_cardholder_receipt;
    bool m_cardholder_receipt_isSet;
    bool m_cardholder_receipt_isValid;

    OAIConnectivity m_connectivity;
    bool m_connectivity_isSet;
    bool m_connectivity_isValid;

    QList<OAIGratuity> m_gratuities;
    bool m_gratuities_isSet;
    bool m_gratuities_isValid;

    OAIHardware m_hardware;
    bool m_hardware_isSet;
    bool m_hardware_isValid;

    OAILocalization m_localization;
    bool m_localization_isSet;
    bool m_localization_isValid;

    OAINexo m_nexo;
    bool m_nexo_isSet;
    bool m_nexo_isValid;

    OAIOfflineProcessing m_offline_processing;
    bool m_offline_processing_isSet;
    bool m_offline_processing_isValid;

    OAIOpi m_opi;
    bool m_opi_isSet;
    bool m_opi_isValid;

    OAIPasscodes m_passcodes;
    bool m_passcodes_isSet;
    bool m_passcodes_isValid;

    OAIPayAtTable m_pay_at_table;
    bool m_pay_at_table_isSet;
    bool m_pay_at_table_isValid;

    OAIPayment m_payment;
    bool m_payment_isSet;
    bool m_payment_isValid;

    OAIReceiptOptions m_receipt_options;
    bool m_receipt_options_isSet;
    bool m_receipt_options_isValid;

    OAIReceiptPrinting m_receipt_printing;
    bool m_receipt_printing_isSet;
    bool m_receipt_printing_isValid;

    OAIRefunds m_refunds;
    bool m_refunds_isSet;
    bool m_refunds_isValid;

    OAISignature m_signature;
    bool m_signature_isSet;
    bool m_signature_isValid;

    OAIStandalone m_standalone;
    bool m_standalone_isSet;
    bool m_standalone_isValid;

    OAISurcharge m_surcharge;
    bool m_surcharge_isSet;
    bool m_surcharge_isValid;

    OAITapToPay m_tap_to_pay;
    bool m_tap_to_pay_isSet;
    bool m_tap_to_pay_isValid;

    OAITerminalInstructions m_terminal_instructions;
    bool m_terminal_instructions_isSet;
    bool m_terminal_instructions_isValid;

    OAITimeouts m_timeouts;
    bool m_timeouts_isSet;
    bool m_timeouts_isValid;

    OAIWifiProfiles m_wifi_profiles;
    bool m_wifi_profiles_isSet;
    bool m_wifi_profiles_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITerminalSettings)

#endif // OAITerminalSettings_H
