/**
 * Management API
 * Configure and manage your Adyen company and merchant accounts, stores, and payment terminals. ## Authentication Each request to the Management API must be signed with an API key. [Generate your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) in the Customer Area and then set this key to the `X-API-Key` header value.  To access the live endpoints, you need to generate a new API key in your live Customer Area. ## Versioning  Management API handles versioning as part of the endpoint URL. For example, to send a request to this version of the `/companies/{companyId}/webhooks` endpoint, use:  ```text https://management-test.adyen.com/v3/companies/{companyId}/webhooks ```  ## Going live  To access the live endpoints, you need an API key from your live Customer Area. Use this API key to make requests to:  ```text https://management-live.adyen.com/v3 ```  ## Release notes Have a look at the [release notes](https://docs.adyen.com/release-notes/management-api) to find out what changed in this version!
 *
 * The version of the OpenAPI document: 3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateMerchantResponse.h
 *
 * 
 */

#ifndef OAICreateMerchantResponse_H
#define OAICreateMerchantResponse_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICreateMerchantResponse : public OAIObject {
public:
    OAICreateMerchantResponse();
    OAICreateMerchantResponse(QString json);
    ~OAICreateMerchantResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBusinessLineId() const;
    void setBusinessLineId(const QString &business_line_id);
    bool is_business_line_id_Set() const;
    bool is_business_line_id_Valid() const;

    QString getCompanyId() const;
    void setCompanyId(const QString &company_id);
    bool is_company_id_Set() const;
    bool is_company_id_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getLegalEntityId() const;
    void setLegalEntityId(const QString &legal_entity_id);
    bool is_legal_entity_id_Set() const;
    bool is_legal_entity_id_Valid() const;

    QString getPricingPlan() const;
    void setPricingPlan(const QString &pricing_plan);
    bool is_pricing_plan_Set() const;
    bool is_pricing_plan_Valid() const;

    QString getReference() const;
    void setReference(const QString &reference);
    bool is_reference_Set() const;
    bool is_reference_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_business_line_id;
    bool m_business_line_id_isSet;
    bool m_business_line_id_isValid;

    QString m_company_id;
    bool m_company_id_isSet;
    bool m_company_id_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_legal_entity_id;
    bool m_legal_entity_id_isSet;
    bool m_legal_entity_id_isValid;

    QString m_pricing_plan;
    bool m_pricing_plan_isSet;
    bool m_pricing_plan_isValid;

    QString m_reference;
    bool m_reference_isSet;
    bool m_reference_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateMerchantResponse)

#endif // OAICreateMerchantResponse_H
