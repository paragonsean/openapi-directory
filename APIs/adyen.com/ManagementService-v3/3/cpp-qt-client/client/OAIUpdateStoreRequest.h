/**
 * Management API
 * Configure and manage your Adyen company and merchant accounts, stores, and payment terminals. ## Authentication Each request to the Management API must be signed with an API key. [Generate your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) in the Customer Area and then set this key to the `X-API-Key` header value.  To access the live endpoints, you need to generate a new API key in your live Customer Area. ## Versioning  Management API handles versioning as part of the endpoint URL. For example, to send a request to this version of the `/companies/{companyId}/webhooks` endpoint, use:  ```text https://management-test.adyen.com/v3/companies/{companyId}/webhooks ```  ## Going live  To access the live endpoints, you need an API key from your live Customer Area. Use this API key to make requests to:  ```text https://management-live.adyen.com/v3 ```  ## Release notes Have a look at the [release notes](https://docs.adyen.com/release-notes/management-api) to find out what changed in this version!
 *
 * The version of the OpenAPI document: 3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateStoreRequest.h
 *
 * 
 */

#ifndef OAIUpdateStoreRequest_H
#define OAIUpdateStoreRequest_H

#include <QJsonObject>

#include "OAIStoreSplitConfiguration.h"
#include "OAIUpdatableAddress.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUpdatableAddress;
class OAIStoreSplitConfiguration;

class OAIUpdateStoreRequest : public OAIObject {
public:
    OAIUpdateStoreRequest();
    OAIUpdateStoreRequest(QString json);
    ~OAIUpdateStoreRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIUpdatableAddress getAddress() const;
    void setAddress(const OAIUpdatableAddress &address);
    bool is_address_Set() const;
    bool is_address_Valid() const;

    QList<QString> getBusinessLineIds() const;
    void setBusinessLineIds(const QList<QString> &business_line_ids);
    bool is_business_line_ids_Set() const;
    bool is_business_line_ids_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getExternalReferenceId() const;
    void setExternalReferenceId(const QString &external_reference_id);
    bool is_external_reference_id_Set() const;
    bool is_external_reference_id_Valid() const;

    QString getPhoneNumber() const;
    void setPhoneNumber(const QString &phone_number);
    bool is_phone_number_Set() const;
    bool is_phone_number_Valid() const;

    OAIStoreSplitConfiguration getSplitConfiguration() const;
    void setSplitConfiguration(const OAIStoreSplitConfiguration &split_configuration);
    bool is_split_configuration_Set() const;
    bool is_split_configuration_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIUpdatableAddress m_address;
    bool m_address_isSet;
    bool m_address_isValid;

    QList<QString> m_business_line_ids;
    bool m_business_line_ids_isSet;
    bool m_business_line_ids_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_external_reference_id;
    bool m_external_reference_id_isSet;
    bool m_external_reference_id_isValid;

    QString m_phone_number;
    bool m_phone_number_isSet;
    bool m_phone_number_isValid;

    OAIStoreSplitConfiguration m_split_configuration;
    bool m_split_configuration_isSet;
    bool m_split_configuration_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateStoreRequest)

#endif // OAIUpdateStoreRequest_H
