/**
 * Management API
 * Configure and manage your Adyen company and merchant accounts, stores, and payment terminals. ## Authentication Each request to the Management API must be signed with an API key. [Generate your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) in the Customer Area and then set this key to the `X-API-Key` header value.  To access the live endpoints, you need to generate a new API key in your live Customer Area. ## Versioning  Management API handles versioning as part of the endpoint URL. For example, to send a request to this version of the `/companies/{companyId}/webhooks` endpoint, use:  ```text https://management-test.adyen.com/v3/companies/{companyId}/webhooks ```  ## Going live  To access the live endpoints, you need an API key from your live Customer Area. Use this API key to make requests to:  ```text https://management-live.adyen.com/v3 ```  ## Release notes Have a look at the [release notes](https://docs.adyen.com/release-notes/management-api) to find out what changed in this version!
 *
 * The version of the OpenAPI document: 3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPaymentMethodSetupInfo.h
 *
 * 
 */

#ifndef OAIPaymentMethodSetupInfo_H
#define OAIPaymentMethodSetupInfo_H

#include <QJsonObject>

#include "OAIAfterpayTouchInfo.h"
#include "OAIApplePayInfo.h"
#include "OAIBcmcInfo.h"
#include "OAICartesBancairesInfo.h"
#include "OAIClearpayInfo.h"
#include "OAIGenericPmWithTdiInfo.h"
#include "OAIGiroPayInfo.h"
#include "OAIGooglePayInfo.h"
#include "OAIKlarnaInfo.h"
#include "OAIMealVoucherFRInfo.h"
#include "OAIPayPalInfo.h"
#include "OAISofortInfo.h"
#include "OAISwishInfo.h"
#include "OAITwintInfo.h"
#include "OAIVippsInfo.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAfterpayTouchInfo;
class OAIApplePayInfo;
class OAIBcmcInfo;
class OAICartesBancairesInfo;
class OAIClearpayInfo;
class OAIGenericPmWithTdiInfo;
class OAIGiroPayInfo;
class OAIGooglePayInfo;
class OAIKlarnaInfo;
class OAIMealVoucherFRInfo;
class OAIPayPalInfo;
class OAISofortInfo;
class OAISwishInfo;
class OAITwintInfo;
class OAIVippsInfo;

class OAIPaymentMethodSetupInfo : public OAIObject {
public:
    OAIPaymentMethodSetupInfo();
    OAIPaymentMethodSetupInfo(QString json);
    ~OAIPaymentMethodSetupInfo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAfterpayTouchInfo getAfterpayTouch() const;
    void setAfterpayTouch(const OAIAfterpayTouchInfo &afterpay_touch);
    bool is_afterpay_touch_Set() const;
    bool is_afterpay_touch_Valid() const;

    OAIApplePayInfo getApplePay() const;
    void setApplePay(const OAIApplePayInfo &apple_pay);
    bool is_apple_pay_Set() const;
    bool is_apple_pay_Valid() const;

    OAIBcmcInfo getBcmc() const;
    void setBcmc(const OAIBcmcInfo &bcmc);
    bool is_bcmc_Set() const;
    bool is_bcmc_Valid() const;

    QString getBusinessLineId() const;
    void setBusinessLineId(const QString &business_line_id);
    bool is_business_line_id_Set() const;
    bool is_business_line_id_Valid() const;

    OAICartesBancairesInfo getCartesBancaires() const;
    void setCartesBancaires(const OAICartesBancairesInfo &cartes_bancaires);
    bool is_cartes_bancaires_Set() const;
    bool is_cartes_bancaires_Valid() const;

    OAIClearpayInfo getClearpay() const;
    void setClearpay(const OAIClearpayInfo &clearpay);
    bool is_clearpay_Set() const;
    bool is_clearpay_Valid() const;

    QList<QString> getCountries() const;
    void setCountries(const QList<QString> &countries);
    bool is_countries_Set() const;
    bool is_countries_Valid() const;

    OAIGenericPmWithTdiInfo getCup() const;
    void setCup(const OAIGenericPmWithTdiInfo &cup);
    bool is_cup_Set() const;
    bool is_cup_Valid() const;

    QList<QString> getCurrencies() const;
    void setCurrencies(const QList<QString> &currencies);
    bool is_currencies_Set() const;
    bool is_currencies_Valid() const;

    QList<QString> getCustomRoutingFlags() const;
    void setCustomRoutingFlags(const QList<QString> &custom_routing_flags);
    bool is_custom_routing_flags_Set() const;
    bool is_custom_routing_flags_Valid() const;

    OAIGenericPmWithTdiInfo getDiners() const;
    void setDiners(const OAIGenericPmWithTdiInfo &diners);
    bool is_diners_Set() const;
    bool is_diners_Valid() const;

    OAIGenericPmWithTdiInfo getDiscover() const;
    void setDiscover(const OAIGenericPmWithTdiInfo &discover);
    bool is_discover_Set() const;
    bool is_discover_Valid() const;

    OAIGenericPmWithTdiInfo getEftposAustralia() const;
    void setEftposAustralia(const OAIGenericPmWithTdiInfo &eftpos_australia);
    bool is_eftpos_australia_Set() const;
    bool is_eftpos_australia_Valid() const;

    OAIGiroPayInfo getGiroPay() const;
    void setGiroPay(const OAIGiroPayInfo &giro_pay);
    bool is_giro_pay_Set() const;
    bool is_giro_pay_Valid() const;

    OAIGenericPmWithTdiInfo getGirocard() const;
    void setGirocard(const OAIGenericPmWithTdiInfo &girocard);
    bool is_girocard_Set() const;
    bool is_girocard_Valid() const;

    OAIGooglePayInfo getGooglePay() const;
    void setGooglePay(const OAIGooglePayInfo &google_pay);
    bool is_google_pay_Set() const;
    bool is_google_pay_Valid() const;

    OAIGenericPmWithTdiInfo getIdeal() const;
    void setIdeal(const OAIGenericPmWithTdiInfo &ideal);
    bool is_ideal_Set() const;
    bool is_ideal_Valid() const;

    OAIGenericPmWithTdiInfo getInteracCard() const;
    void setInteracCard(const OAIGenericPmWithTdiInfo &interac_card);
    bool is_interac_card_Set() const;
    bool is_interac_card_Valid() const;

    OAIGenericPmWithTdiInfo getJcb() const;
    void setJcb(const OAIGenericPmWithTdiInfo &jcb);
    bool is_jcb_Set() const;
    bool is_jcb_Valid() const;

    OAIKlarnaInfo getKlarna() const;
    void setKlarna(const OAIKlarnaInfo &klarna);
    bool is_klarna_Set() const;
    bool is_klarna_Valid() const;

    OAIGenericPmWithTdiInfo getMaestro() const;
    void setMaestro(const OAIGenericPmWithTdiInfo &maestro);
    bool is_maestro_Set() const;
    bool is_maestro_Valid() const;

    OAIGenericPmWithTdiInfo getMc() const;
    void setMc(const OAIGenericPmWithTdiInfo &mc);
    bool is_mc_Set() const;
    bool is_mc_Valid() const;

    OAIMealVoucherFRInfo getMealVoucherFr() const;
    void setMealVoucherFr(const OAIMealVoucherFRInfo &meal_voucher_fr);
    bool is_meal_voucher_fr_Set() const;
    bool is_meal_voucher_fr_Valid() const;

    OAIPayPalInfo getPaypal() const;
    void setPaypal(const OAIPayPalInfo &paypal);
    bool is_paypal_Set() const;
    bool is_paypal_Valid() const;

    QString getReference() const;
    void setReference(const QString &reference);
    bool is_reference_Set() const;
    bool is_reference_Valid() const;

    QString getShopperInteraction() const;
    void setShopperInteraction(const QString &shopper_interaction);
    bool is_shopper_interaction_Set() const;
    bool is_shopper_interaction_Valid() const;

    OAISofortInfo getSofort() const;
    void setSofort(const OAISofortInfo &sofort);
    bool is_sofort_Set() const;
    bool is_sofort_Valid() const;

    QList<QString> getStoreIds() const;
    void setStoreIds(const QList<QString> &store_ids);
    bool is_store_ids_Set() const;
    bool is_store_ids_Valid() const;

    OAISwishInfo getSwish() const;
    void setSwish(const OAISwishInfo &swish);
    bool is_swish_Set() const;
    bool is_swish_Valid() const;

    OAITwintInfo getTwint() const;
    void setTwint(const OAITwintInfo &twint);
    bool is_twint_Set() const;
    bool is_twint_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    OAIVippsInfo getVipps() const;
    void setVipps(const OAIVippsInfo &vipps);
    bool is_vipps_Set() const;
    bool is_vipps_Valid() const;

    OAIGenericPmWithTdiInfo getVisa() const;
    void setVisa(const OAIGenericPmWithTdiInfo &visa);
    bool is_visa_Set() const;
    bool is_visa_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAfterpayTouchInfo m_afterpay_touch;
    bool m_afterpay_touch_isSet;
    bool m_afterpay_touch_isValid;

    OAIApplePayInfo m_apple_pay;
    bool m_apple_pay_isSet;
    bool m_apple_pay_isValid;

    OAIBcmcInfo m_bcmc;
    bool m_bcmc_isSet;
    bool m_bcmc_isValid;

    QString m_business_line_id;
    bool m_business_line_id_isSet;
    bool m_business_line_id_isValid;

    OAICartesBancairesInfo m_cartes_bancaires;
    bool m_cartes_bancaires_isSet;
    bool m_cartes_bancaires_isValid;

    OAIClearpayInfo m_clearpay;
    bool m_clearpay_isSet;
    bool m_clearpay_isValid;

    QList<QString> m_countries;
    bool m_countries_isSet;
    bool m_countries_isValid;

    OAIGenericPmWithTdiInfo m_cup;
    bool m_cup_isSet;
    bool m_cup_isValid;

    QList<QString> m_currencies;
    bool m_currencies_isSet;
    bool m_currencies_isValid;

    QList<QString> m_custom_routing_flags;
    bool m_custom_routing_flags_isSet;
    bool m_custom_routing_flags_isValid;

    OAIGenericPmWithTdiInfo m_diners;
    bool m_diners_isSet;
    bool m_diners_isValid;

    OAIGenericPmWithTdiInfo m_discover;
    bool m_discover_isSet;
    bool m_discover_isValid;

    OAIGenericPmWithTdiInfo m_eftpos_australia;
    bool m_eftpos_australia_isSet;
    bool m_eftpos_australia_isValid;

    OAIGiroPayInfo m_giro_pay;
    bool m_giro_pay_isSet;
    bool m_giro_pay_isValid;

    OAIGenericPmWithTdiInfo m_girocard;
    bool m_girocard_isSet;
    bool m_girocard_isValid;

    OAIGooglePayInfo m_google_pay;
    bool m_google_pay_isSet;
    bool m_google_pay_isValid;

    OAIGenericPmWithTdiInfo m_ideal;
    bool m_ideal_isSet;
    bool m_ideal_isValid;

    OAIGenericPmWithTdiInfo m_interac_card;
    bool m_interac_card_isSet;
    bool m_interac_card_isValid;

    OAIGenericPmWithTdiInfo m_jcb;
    bool m_jcb_isSet;
    bool m_jcb_isValid;

    OAIKlarnaInfo m_klarna;
    bool m_klarna_isSet;
    bool m_klarna_isValid;

    OAIGenericPmWithTdiInfo m_maestro;
    bool m_maestro_isSet;
    bool m_maestro_isValid;

    OAIGenericPmWithTdiInfo m_mc;
    bool m_mc_isSet;
    bool m_mc_isValid;

    OAIMealVoucherFRInfo m_meal_voucher_fr;
    bool m_meal_voucher_fr_isSet;
    bool m_meal_voucher_fr_isValid;

    OAIPayPalInfo m_paypal;
    bool m_paypal_isSet;
    bool m_paypal_isValid;

    QString m_reference;
    bool m_reference_isSet;
    bool m_reference_isValid;

    QString m_shopper_interaction;
    bool m_shopper_interaction_isSet;
    bool m_shopper_interaction_isValid;

    OAISofortInfo m_sofort;
    bool m_sofort_isSet;
    bool m_sofort_isValid;

    QList<QString> m_store_ids;
    bool m_store_ids_isSet;
    bool m_store_ids_isValid;

    OAISwishInfo m_swish;
    bool m_swish_isSet;
    bool m_swish_isValid;

    OAITwintInfo m_twint;
    bool m_twint_isSet;
    bool m_twint_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    OAIVippsInfo m_vipps;
    bool m_vipps_isSet;
    bool m_vipps_isValid;

    OAIGenericPmWithTdiInfo m_visa;
    bool m_visa_isSet;
    bool m_visa_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPaymentMethodSetupInfo)

#endif // OAIPaymentMethodSetupInfo_H
