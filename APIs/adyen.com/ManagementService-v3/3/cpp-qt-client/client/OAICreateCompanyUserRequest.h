/**
 * Management API
 * Configure and manage your Adyen company and merchant accounts, stores, and payment terminals. ## Authentication Each request to the Management API must be signed with an API key. [Generate your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) in the Customer Area and then set this key to the `X-API-Key` header value.  To access the live endpoints, you need to generate a new API key in your live Customer Area. ## Versioning  Management API handles versioning as part of the endpoint URL. For example, to send a request to this version of the `/companies/{companyId}/webhooks` endpoint, use:  ```text https://management-test.adyen.com/v3/companies/{companyId}/webhooks ```  ## Going live  To access the live endpoints, you need an API key from your live Customer Area. Use this API key to make requests to:  ```text https://management-live.adyen.com/v3 ```  ## Release notes Have a look at the [release notes](https://docs.adyen.com/release-notes/management-api) to find out what changed in this version!
 *
 * The version of the OpenAPI document: 3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateCompanyUserRequest.h
 *
 * 
 */

#ifndef OAICreateCompanyUserRequest_H
#define OAICreateCompanyUserRequest_H

#include <QJsonObject>

#include "OAIName.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIName;

class OAICreateCompanyUserRequest : public OAIObject {
public:
    OAICreateCompanyUserRequest();
    OAICreateCompanyUserRequest(QString json);
    ~OAICreateCompanyUserRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getAccountGroups() const;
    void setAccountGroups(const QList<QString> &account_groups);
    bool is_account_groups_Set() const;
    bool is_account_groups_Valid() const;

    QList<QString> getAssociatedMerchantAccounts() const;
    void setAssociatedMerchantAccounts(const QList<QString> &associated_merchant_accounts);
    bool is_associated_merchant_accounts_Set() const;
    bool is_associated_merchant_accounts_Valid() const;

    QString getEmail() const;
    void setEmail(const QString &email);
    bool is_email_Set() const;
    bool is_email_Valid() const;

    OAIName getName() const;
    void setName(const OAIName &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QList<QString> getRoles() const;
    void setRoles(const QList<QString> &roles);
    bool is_roles_Set() const;
    bool is_roles_Valid() const;

    QString getTimeZoneCode() const;
    void setTimeZoneCode(const QString &time_zone_code);
    bool is_time_zone_code_Set() const;
    bool is_time_zone_code_Valid() const;

    QString getUsername() const;
    void setUsername(const QString &username);
    bool is_username_Set() const;
    bool is_username_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_account_groups;
    bool m_account_groups_isSet;
    bool m_account_groups_isValid;

    QList<QString> m_associated_merchant_accounts;
    bool m_associated_merchant_accounts_isSet;
    bool m_associated_merchant_accounts_isValid;

    QString m_email;
    bool m_email_isSet;
    bool m_email_isValid;

    OAIName m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QList<QString> m_roles;
    bool m_roles_isSet;
    bool m_roles_isValid;

    QString m_time_zone_code;
    bool m_time_zone_code_isSet;
    bool m_time_zone_code_isValid;

    QString m_username;
    bool m_username_isSet;
    bool m_username_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateCompanyUserRequest)

#endif // OAICreateCompanyUserRequest_H
