/**
 * Management API
 * Configure and manage your Adyen company and merchant accounts, stores, and payment terminals. ## Authentication Each request to the Management API must be signed with an API key. [Generate your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) in the Customer Area and then set this key to the `X-API-Key` header value.  To access the live endpoints, you need to generate a new API key in your live Customer Area. ## Versioning  Management API handles versioning as part of the endpoint URL. For example, to send a request to this version of the `/companies/{companyId}/webhooks` endpoint, use:  ```text https://management-test.adyen.com/v3/companies/{companyId}/webhooks ```  ## Going live  To access the live endpoints, you need an API key from your live Customer Area. Use this API key to make requests to:  ```text https://management-live.adyen.com/v3 ```  ## Release notes Have a look at the [release notes](https://docs.adyen.com/release-notes/management-api) to find out what changed in this version!
 *
 * The version of the OpenAPI document: 3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIScheduleTerminalActionsRequest_actionDetails.h
 *
 * Information about the action to take.
 */

#ifndef OAIScheduleTerminalActionsRequest_actionDetails_H
#define OAIScheduleTerminalActionsRequest_actionDetails_H

#include <QJsonObject>

#include "OAIInstallAndroidAppDetails.h"
#include "OAIInstallAndroidCertificateDetails.h"
#include "OAIReleaseUpdateDetails.h"
#include "OAIUninstallAndroidAppDetails.h"
#include "OAIUninstallAndroidCertificateDetails.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIScheduleTerminalActionsRequest_actionDetails : public OAIObject {
public:
    OAIScheduleTerminalActionsRequest_actionDetails();
    OAIScheduleTerminalActionsRequest_actionDetails(QString json);
    ~OAIScheduleTerminalActionsRequest_actionDetails() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAppId() const;
    void setAppId(const QString &app_id);
    bool is_app_id_Set() const;
    bool is_app_id_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getCertificateId() const;
    void setCertificateId(const QString &certificate_id);
    bool is_certificate_id_Set() const;
    bool is_certificate_id_Valid() const;

    bool isUpdateAtFirstMaintenanceCall() const;
    void setUpdateAtFirstMaintenanceCall(const bool &update_at_first_maintenance_call);
    bool is_update_at_first_maintenance_call_Set() const;
    bool is_update_at_first_maintenance_call_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_app_id;
    bool m_app_id_isSet;
    bool m_app_id_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_certificate_id;
    bool m_certificate_id_isSet;
    bool m_certificate_id_isValid;

    bool m_update_at_first_maintenance_call;
    bool m_update_at_first_maintenance_call_isSet;
    bool m_update_at_first_maintenance_call_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIScheduleTerminalActionsRequest_actionDetails)

#endif // OAIScheduleTerminalActionsRequest_actionDetails_H
