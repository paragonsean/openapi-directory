/**
 * Management API
 * Configure and manage your Adyen company and merchant accounts, stores, and payment terminals. ## Authentication Each request to the Management API must be signed with an API key. [Generate your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) in the Customer Area and then set this key to the `X-API-Key` header value.  To access the live endpoints, you need to generate a new API key in your live Customer Area. ## Versioning  Management API handles versioning as part of the endpoint URL. For example, to send a request to this version of the `/companies/{companyId}/webhooks` endpoint, use:  ```text https://management-test.adyen.com/v3/companies/{companyId}/webhooks ```  ## Going live  To access the live endpoints, you need an API key from your live Customer Area. Use this API key to make requests to:  ```text https://management-live.adyen.com/v3 ```  ## Release notes Have a look at the [release notes](https://docs.adyen.com/release-notes/management-api) to find out what changed in this version!
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ManagementApi);
  }
}(this, function(expect, ManagementApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ManagementApi.TerminalOrdersMerchantLevelApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('TerminalOrdersMerchantLevelApi', function() {
    describe('getMerchantsMerchantIdBillingEntities', function() {
      it('should call getMerchantsMerchantIdBillingEntities successfully', function(done) {
        //uncomment below and update the code to test getMerchantsMerchantIdBillingEntities
        //instance.getMerchantsMerchantIdBillingEntities(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getMerchantsMerchantIdShippingLocations', function() {
      it('should call getMerchantsMerchantIdShippingLocations successfully', function(done) {
        //uncomment below and update the code to test getMerchantsMerchantIdShippingLocations
        //instance.getMerchantsMerchantIdShippingLocations(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getMerchantsMerchantIdTerminalModels', function() {
      it('should call getMerchantsMerchantIdTerminalModels successfully', function(done) {
        //uncomment below and update the code to test getMerchantsMerchantIdTerminalModels
        //instance.getMerchantsMerchantIdTerminalModels(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getMerchantsMerchantIdTerminalOrders', function() {
      it('should call getMerchantsMerchantIdTerminalOrders successfully', function(done) {
        //uncomment below and update the code to test getMerchantsMerchantIdTerminalOrders
        //instance.getMerchantsMerchantIdTerminalOrders(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getMerchantsMerchantIdTerminalOrdersOrderId', function() {
      it('should call getMerchantsMerchantIdTerminalOrdersOrderId successfully', function(done) {
        //uncomment below and update the code to test getMerchantsMerchantIdTerminalOrdersOrderId
        //instance.getMerchantsMerchantIdTerminalOrdersOrderId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getMerchantsMerchantIdTerminalProducts', function() {
      it('should call getMerchantsMerchantIdTerminalProducts successfully', function(done) {
        //uncomment below and update the code to test getMerchantsMerchantIdTerminalProducts
        //instance.getMerchantsMerchantIdTerminalProducts(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchMerchantsMerchantIdTerminalOrdersOrderId', function() {
      it('should call patchMerchantsMerchantIdTerminalOrdersOrderId successfully', function(done) {
        //uncomment below and update the code to test patchMerchantsMerchantIdTerminalOrdersOrderId
        //instance.patchMerchantsMerchantIdTerminalOrdersOrderId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postMerchantsMerchantIdShippingLocations', function() {
      it('should call postMerchantsMerchantIdShippingLocations successfully', function(done) {
        //uncomment below and update the code to test postMerchantsMerchantIdShippingLocations
        //instance.postMerchantsMerchantIdShippingLocations(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postMerchantsMerchantIdTerminalOrders', function() {
      it('should call postMerchantsMerchantIdTerminalOrders successfully', function(done) {
        //uncomment below and update the code to test postMerchantsMerchantIdTerminalOrders
        //instance.postMerchantsMerchantIdTerminalOrders(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postMerchantsMerchantIdTerminalOrdersOrderIdCancel', function() {
      it('should call postMerchantsMerchantIdTerminalOrdersOrderIdCancel successfully', function(done) {
        //uncomment below and update the code to test postMerchantsMerchantIdTerminalOrdersOrderIdCancel
        //instance.postMerchantsMerchantIdTerminalOrdersOrderIdCancel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
