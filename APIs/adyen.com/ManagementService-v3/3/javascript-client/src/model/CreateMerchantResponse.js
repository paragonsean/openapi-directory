/**
 * Management API
 * Configure and manage your Adyen company and merchant accounts, stores, and payment terminals. ## Authentication Each request to the Management API must be signed with an API key. [Generate your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) in the Customer Area and then set this key to the `X-API-Key` header value.  To access the live endpoints, you need to generate a new API key in your live Customer Area. ## Versioning  Management API handles versioning as part of the endpoint URL. For example, to send a request to this version of the `/companies/{companyId}/webhooks` endpoint, use:  ```text https://management-test.adyen.com/v3/companies/{companyId}/webhooks ```  ## Going live  To access the live endpoints, you need an API key from your live Customer Area. Use this API key to make requests to:  ```text https://management-live.adyen.com/v3 ```  ## Release notes Have a look at the [release notes](https://docs.adyen.com/release-notes/management-api) to find out what changed in this version!
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CreateMerchantResponse model module.
 * @module model/CreateMerchantResponse
 * @version 3
 */
class CreateMerchantResponse {
    /**
     * Constructs a new <code>CreateMerchantResponse</code>.
     * @alias module:model/CreateMerchantResponse
     */
    constructor() { 
        
        CreateMerchantResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CreateMerchantResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateMerchantResponse} obj Optional instance to populate.
     * @return {module:model/CreateMerchantResponse} The populated <code>CreateMerchantResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateMerchantResponse();

            if (data.hasOwnProperty('businessLineId')) {
                obj['businessLineId'] = ApiClient.convertToType(data['businessLineId'], 'String');
            }
            if (data.hasOwnProperty('companyId')) {
                obj['companyId'] = ApiClient.convertToType(data['companyId'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('legalEntityId')) {
                obj['legalEntityId'] = ApiClient.convertToType(data['legalEntityId'], 'String');
            }
            if (data.hasOwnProperty('pricingPlan')) {
                obj['pricingPlan'] = ApiClient.convertToType(data['pricingPlan'], 'String');
            }
            if (data.hasOwnProperty('reference')) {
                obj['reference'] = ApiClient.convertToType(data['reference'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateMerchantResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateMerchantResponse</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['businessLineId'] && !(typeof data['businessLineId'] === 'string' || data['businessLineId'] instanceof String)) {
            throw new Error("Expected the field `businessLineId` to be a primitive type in the JSON string but got " + data['businessLineId']);
        }
        // ensure the json data is a string
        if (data['companyId'] && !(typeof data['companyId'] === 'string' || data['companyId'] instanceof String)) {
            throw new Error("Expected the field `companyId` to be a primitive type in the JSON string but got " + data['companyId']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['legalEntityId'] && !(typeof data['legalEntityId'] === 'string' || data['legalEntityId'] instanceof String)) {
            throw new Error("Expected the field `legalEntityId` to be a primitive type in the JSON string but got " + data['legalEntityId']);
        }
        // ensure the json data is a string
        if (data['pricingPlan'] && !(typeof data['pricingPlan'] === 'string' || data['pricingPlan'] instanceof String)) {
            throw new Error("Expected the field `pricingPlan` to be a primitive type in the JSON string but got " + data['pricingPlan']);
        }
        // ensure the json data is a string
        if (data['reference'] && !(typeof data['reference'] === 'string' || data['reference'] instanceof String)) {
            throw new Error("Expected the field `reference` to be a primitive type in the JSON string but got " + data['reference']);
        }

        return true;
    }


}



/**
 * The unique identifier of the [business line](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/businessLines).
 * @member {String} businessLineId
 */
CreateMerchantResponse.prototype['businessLineId'] = undefined;

/**
 * The unique identifier of the company account.
 * @member {String} companyId
 */
CreateMerchantResponse.prototype['companyId'] = undefined;

/**
 * Your description for the merchant account, maximum 300 characters.
 * @member {String} description
 */
CreateMerchantResponse.prototype['description'] = undefined;

/**
 * The unique identifier of the merchant account. If Adyen set up a template for the `reference`, then the `id` will have the same value as the `reference` that you sent in the request. Otherwise, the value is generated by Adyen.
 * @member {String} id
 */
CreateMerchantResponse.prototype['id'] = undefined;

/**
 * The unique identifier of the [legal entity](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/legalEntities).
 * @member {String} legalEntityId
 */
CreateMerchantResponse.prototype['legalEntityId'] = undefined;

/**
 * Partner pricing plan for the merchant, applicable for merchants under AfP managed company accounts.
 * @member {String} pricingPlan
 */
CreateMerchantResponse.prototype['pricingPlan'] = undefined;

/**
 * Your reference for the merchant account.
 * @member {String} reference
 */
CreateMerchantResponse.prototype['reference'] = undefined;






export default CreateMerchantResponse;

