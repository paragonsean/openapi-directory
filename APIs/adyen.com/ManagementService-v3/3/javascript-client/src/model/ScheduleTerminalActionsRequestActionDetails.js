/**
 * Management API
 * Configure and manage your Adyen company and merchant accounts, stores, and payment terminals. ## Authentication Each request to the Management API must be signed with an API key. [Generate your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) in the Customer Area and then set this key to the `X-API-Key` header value.  To access the live endpoints, you need to generate a new API key in your live Customer Area. ## Versioning  Management API handles versioning as part of the endpoint URL. For example, to send a request to this version of the `/companies/{companyId}/webhooks` endpoint, use:  ```text https://management-test.adyen.com/v3/companies/{companyId}/webhooks ```  ## Going live  To access the live endpoints, you need an API key from your live Customer Area. Use this API key to make requests to:  ```text https://management-live.adyen.com/v3 ```  ## Release notes Have a look at the [release notes](https://docs.adyen.com/release-notes/management-api) to find out what changed in this version!
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import InstallAndroidAppDetails from './InstallAndroidAppDetails';
import InstallAndroidCertificateDetails from './InstallAndroidCertificateDetails';
import ReleaseUpdateDetails from './ReleaseUpdateDetails';
import UninstallAndroidAppDetails from './UninstallAndroidAppDetails';
import UninstallAndroidCertificateDetails from './UninstallAndroidCertificateDetails';

/**
 * The ScheduleTerminalActionsRequestActionDetails model module.
 * @module model/ScheduleTerminalActionsRequestActionDetails
 * @version 3
 */
class ScheduleTerminalActionsRequestActionDetails {
    /**
     * Constructs a new <code>ScheduleTerminalActionsRequestActionDetails</code>.
     * Information about the action to take.
     * @alias module:model/ScheduleTerminalActionsRequestActionDetails
     * @param {(module:model/InstallAndroidAppDetails|module:model/InstallAndroidCertificateDetails|module:model/ReleaseUpdateDetails|module:model/UninstallAndroidAppDetails|module:model/UninstallAndroidCertificateDetails)} instance The actual instance to initialize ScheduleTerminalActionsRequestActionDetails.
     */
    constructor(instance = null) {
        if (instance === null) {
            this.actualInstance = null;
            return;
        }
        var match = 0;
        var errorMessages = [];
        try {
            if (typeof instance === "InstallAndroidAppDetails") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                InstallAndroidAppDetails.validateJSON(instance); // throw an exception if no match
                // create InstallAndroidAppDetails from JS object
                this.actualInstance = InstallAndroidAppDetails.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into InstallAndroidAppDetails
            errorMessages.push("Failed to construct InstallAndroidAppDetails: " + err)
        }

        try {
            if (typeof instance === "InstallAndroidCertificateDetails") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                InstallAndroidCertificateDetails.validateJSON(instance); // throw an exception if no match
                // create InstallAndroidCertificateDetails from JS object
                this.actualInstance = InstallAndroidCertificateDetails.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into InstallAndroidCertificateDetails
            errorMessages.push("Failed to construct InstallAndroidCertificateDetails: " + err)
        }

        try {
            if (typeof instance === "ReleaseUpdateDetails") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                ReleaseUpdateDetails.validateJSON(instance); // throw an exception if no match
                // create ReleaseUpdateDetails from JS object
                this.actualInstance = ReleaseUpdateDetails.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into ReleaseUpdateDetails
            errorMessages.push("Failed to construct ReleaseUpdateDetails: " + err)
        }

        try {
            if (typeof instance === "UninstallAndroidAppDetails") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                UninstallAndroidAppDetails.validateJSON(instance); // throw an exception if no match
                // create UninstallAndroidAppDetails from JS object
                this.actualInstance = UninstallAndroidAppDetails.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into UninstallAndroidAppDetails
            errorMessages.push("Failed to construct UninstallAndroidAppDetails: " + err)
        }

        try {
            if (typeof instance === "UninstallAndroidCertificateDetails") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                UninstallAndroidCertificateDetails.validateJSON(instance); // throw an exception if no match
                // create UninstallAndroidCertificateDetails from JS object
                this.actualInstance = UninstallAndroidCertificateDetails.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into UninstallAndroidCertificateDetails
            errorMessages.push("Failed to construct UninstallAndroidCertificateDetails: " + err)
        }

        if (match > 1) {
            throw new Error("Multiple matches found constructing `ScheduleTerminalActionsRequestActionDetails` with oneOf schemas InstallAndroidAppDetails, InstallAndroidCertificateDetails, ReleaseUpdateDetails, UninstallAndroidAppDetails, UninstallAndroidCertificateDetails. Input: " + JSON.stringify(instance));
        } else if (match === 0) {
            this.actualInstance = null; // clear the actual instance in case there are multiple matches
            throw new Error("No match found constructing `ScheduleTerminalActionsRequestActionDetails` with oneOf schemas InstallAndroidAppDetails, InstallAndroidCertificateDetails, ReleaseUpdateDetails, UninstallAndroidAppDetails, UninstallAndroidCertificateDetails. Details: " +
                            errorMessages.join(", "));
        } else { // only 1 match
            // the input is valid
        }
    }

    /**
     * Constructs a <code>ScheduleTerminalActionsRequestActionDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ScheduleTerminalActionsRequestActionDetails} obj Optional instance to populate.
     * @return {module:model/ScheduleTerminalActionsRequestActionDetails} The populated <code>ScheduleTerminalActionsRequestActionDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        return new ScheduleTerminalActionsRequestActionDetails(data);
    }

    /**
     * Gets the actual instance, which can be <code>InstallAndroidAppDetails</code>, <code>InstallAndroidCertificateDetails</code>, <code>ReleaseUpdateDetails</code>, <code>UninstallAndroidAppDetails</code>, <code>UninstallAndroidCertificateDetails</code>.
     * @return {(module:model/InstallAndroidAppDetails|module:model/InstallAndroidCertificateDetails|module:model/ReleaseUpdateDetails|module:model/UninstallAndroidAppDetails|module:model/UninstallAndroidCertificateDetails)} The actual instance.
     */
    getActualInstance() {
        return this.actualInstance;
    }

    /**
     * Sets the actual instance, which can be <code>InstallAndroidAppDetails</code>, <code>InstallAndroidCertificateDetails</code>, <code>ReleaseUpdateDetails</code>, <code>UninstallAndroidAppDetails</code>, <code>UninstallAndroidCertificateDetails</code>.
     * @param {(module:model/InstallAndroidAppDetails|module:model/InstallAndroidCertificateDetails|module:model/ReleaseUpdateDetails|module:model/UninstallAndroidAppDetails|module:model/UninstallAndroidCertificateDetails)} obj The actual instance.
     */
    setActualInstance(obj) {
       this.actualInstance = ScheduleTerminalActionsRequestActionDetails.constructFromObject(obj).getActualInstance();
    }

    /**
     * Returns the JSON representation of the actual instance.
     * @return {string}
     */
    toJSON = function(){
        return this.getActualInstance();
    }

    /**
     * Create an instance of ScheduleTerminalActionsRequestActionDetails from a JSON string.
     * @param {string} json_string JSON string.
     * @return {module:model/ScheduleTerminalActionsRequestActionDetails} An instance of ScheduleTerminalActionsRequestActionDetails.
     */
    static fromJSON = function(json_string){
        return ScheduleTerminalActionsRequestActionDetails.constructFromObject(JSON.parse(json_string));
    }
}

/**
 * The unique identifier of the app to be uninstalled.
 * @member {String} appId
 */
ScheduleTerminalActionsRequestActionDetails.prototype['appId'] = undefined;

/**
 * Type of terminal action: Install an Android app.
 * @member {module:model/ScheduleTerminalActionsRequestActionDetails.TypeEnum} type
 * @default 'InstallAndroidApp'
 */
ScheduleTerminalActionsRequestActionDetails.prototype['type'] = 'InstallAndroidApp';

/**
 * The unique identifier of the certificate to be uninstalled.
 * @member {String} certificateId
 */
ScheduleTerminalActionsRequestActionDetails.prototype['certificateId'] = undefined;

/**
 * Boolean flag that tells if the terminal should update at the first next maintenance call. If false, terminal will update on its configured reboot time.
 * @member {Boolean} updateAtFirstMaintenanceCall
 */
ScheduleTerminalActionsRequestActionDetails.prototype['updateAtFirstMaintenanceCall'] = undefined;


ScheduleTerminalActionsRequestActionDetails.OneOf = ["InstallAndroidAppDetails", "InstallAndroidCertificateDetails", "ReleaseUpdateDetails", "UninstallAndroidAppDetails", "UninstallAndroidCertificateDetails"];

export default ScheduleTerminalActionsRequestActionDetails;

