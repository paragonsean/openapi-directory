/**
 * Management API
 * Configure and manage your Adyen company and merchant accounts, stores, and payment terminals. ## Authentication Each request to the Management API must be signed with an API key. [Generate your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) in the Customer Area and then set this key to the `X-API-Key` header value.  To access the live endpoints, you need to generate a new API key in your live Customer Area. ## Versioning  Management API handles versioning as part of the endpoint URL. For example, to send a request to this version of the `/companies/{companyId}/webhooks` endpoint, use:  ```text https://management-test.adyen.com/v3/companies/{companyId}/webhooks ```  ## Going live  To access the live endpoints, you need an API key from your live Customer Area. Use this API key to make requests to:  ```text https://management-live.adyen.com/v3 ```  ## Release notes Have a look at the [release notes](https://docs.adyen.com/release-notes/management-api) to find out what changed in this version!
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Links from './Links';
import Name from './Name';

/**
 * The CreateUserResponse model module.
 * @module model/CreateUserResponse
 * @version 3
 */
class CreateUserResponse {
    /**
     * Constructs a new <code>CreateUserResponse</code>.
     * @alias module:model/CreateUserResponse
     * @param email {String} The email address of the user.
     * @param id {String} The unique identifier of the user.
     * @param roles {Array.<String>} The list of [roles](https://docs.adyen.com/account/user-roles) for this user.
     * @param timeZoneCode {String} The [tz database name](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones) of the time zone of the user. For example, **Europe/Amsterdam**.
     * @param username {String} The username for this user.
     */
    constructor(email, id, roles, timeZoneCode, username) { 
        
        CreateUserResponse.initialize(this, email, id, roles, timeZoneCode, username);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, email, id, roles, timeZoneCode, username) { 
        obj['email'] = email;
        obj['id'] = id;
        obj['roles'] = roles;
        obj['timeZoneCode'] = timeZoneCode;
        obj['username'] = username;
    }

    /**
     * Constructs a <code>CreateUserResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateUserResponse} obj Optional instance to populate.
     * @return {module:model/CreateUserResponse} The populated <code>CreateUserResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateUserResponse();

            if (data.hasOwnProperty('_links')) {
                obj['_links'] = Links.constructFromObject(data['_links']);
            }
            if (data.hasOwnProperty('accountGroups')) {
                obj['accountGroups'] = ApiClient.convertToType(data['accountGroups'], ['String']);
            }
            if (data.hasOwnProperty('active')) {
                obj['active'] = ApiClient.convertToType(data['active'], 'Boolean');
            }
            if (data.hasOwnProperty('apps')) {
                obj['apps'] = ApiClient.convertToType(data['apps'], ['String']);
            }
            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = Name.constructFromObject(data['name']);
            }
            if (data.hasOwnProperty('roles')) {
                obj['roles'] = ApiClient.convertToType(data['roles'], ['String']);
            }
            if (data.hasOwnProperty('timeZoneCode')) {
                obj['timeZoneCode'] = ApiClient.convertToType(data['timeZoneCode'], 'String');
            }
            if (data.hasOwnProperty('username')) {
                obj['username'] = ApiClient.convertToType(data['username'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateUserResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateUserResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateUserResponse.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `_links`
        if (data['_links']) { // data not null
          Links.validateJSON(data['_links']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['accountGroups'])) {
            throw new Error("Expected the field `accountGroups` to be an array in the JSON data but got " + data['accountGroups']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['apps'])) {
            throw new Error("Expected the field `apps` to be an array in the JSON data but got " + data['apps']);
        }
        // ensure the json data is a string
        if (data['email'] && !(typeof data['email'] === 'string' || data['email'] instanceof String)) {
            throw new Error("Expected the field `email` to be a primitive type in the JSON string but got " + data['email']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // validate the optional field `name`
        if (data['name']) { // data not null
          Name.validateJSON(data['name']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['roles'])) {
            throw new Error("Expected the field `roles` to be an array in the JSON data but got " + data['roles']);
        }
        // ensure the json data is a string
        if (data['timeZoneCode'] && !(typeof data['timeZoneCode'] === 'string' || data['timeZoneCode'] instanceof String)) {
            throw new Error("Expected the field `timeZoneCode` to be a primitive type in the JSON string but got " + data['timeZoneCode']);
        }
        // ensure the json data is a string
        if (data['username'] && !(typeof data['username'] === 'string' || data['username'] instanceof String)) {
            throw new Error("Expected the field `username` to be a primitive type in the JSON string but got " + data['username']);
        }

        return true;
    }


}

CreateUserResponse.RequiredProperties = ["email", "id", "roles", "timeZoneCode", "username"];

/**
 * References to resources connected with this user.
 * @member {module:model/Links} _links
 */
CreateUserResponse.prototype['_links'] = undefined;

/**
 * The list of [account groups](https://docs.adyen.com/account/account-structure#account-groups) associated with this user.
 * @member {Array.<String>} accountGroups
 */
CreateUserResponse.prototype['accountGroups'] = undefined;

/**
 * Indicates whether this user is active.
 * @member {Boolean} active
 */
CreateUserResponse.prototype['active'] = undefined;

/**
 * Set of apps available to this user
 * @member {Array.<String>} apps
 */
CreateUserResponse.prototype['apps'] = undefined;

/**
 * The email address of the user.
 * @member {String} email
 */
CreateUserResponse.prototype['email'] = undefined;

/**
 * The unique identifier of the user.
 * @member {String} id
 */
CreateUserResponse.prototype['id'] = undefined;

/**
 * The user's full name.
 * @member {module:model/Name} name
 */
CreateUserResponse.prototype['name'] = undefined;

/**
 * The list of [roles](https://docs.adyen.com/account/user-roles) for this user.
 * @member {Array.<String>} roles
 */
CreateUserResponse.prototype['roles'] = undefined;

/**
 * The [tz database name](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones) of the time zone of the user. For example, **Europe/Amsterdam**.
 * @member {String} timeZoneCode
 */
CreateUserResponse.prototype['timeZoneCode'] = undefined;

/**
 * The username for this user.
 * @member {String} username
 */
CreateUserResponse.prototype['username'] = undefined;






export default CreateUserResponse;

