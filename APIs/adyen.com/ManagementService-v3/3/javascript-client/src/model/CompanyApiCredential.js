/**
 * Management API
 * Configure and manage your Adyen company and merchant accounts, stores, and payment terminals. ## Authentication Each request to the Management API must be signed with an API key. [Generate your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) in the Customer Area and then set this key to the `X-API-Key` header value.  To access the live endpoints, you need to generate a new API key in your live Customer Area. ## Versioning  Management API handles versioning as part of the endpoint URL. For example, to send a request to this version of the `/companies/{companyId}/webhooks` endpoint, use:  ```text https://management-test.adyen.com/v3/companies/{companyId}/webhooks ```  ## Going live  To access the live endpoints, you need an API key from your live Customer Area. Use this API key to make requests to:  ```text https://management-live.adyen.com/v3 ```  ## Release notes Have a look at the [release notes](https://docs.adyen.com/release-notes/management-api) to find out what changed in this version!
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AllowedOrigin from './AllowedOrigin';
import ApiCredentialLinks from './ApiCredentialLinks';

/**
 * The CompanyApiCredential model module.
 * @module model/CompanyApiCredential
 * @version 3
 */
class CompanyApiCredential {
    /**
     * Constructs a new <code>CompanyApiCredential</code>.
     * @alias module:model/CompanyApiCredential
     * @param active {Boolean} Indicates if the API credential is enabled. Must be set to **true** to use the credential in your integration.
     * @param allowedIpAddresses {Array.<String>} List of IP addresses from which your client can make requests.  If the list is empty, we allow requests from any IP. If the list is not empty and we get a request from an IP which is not on the list, you get a security error.
     * @param clientKey {String} Public key used for [client-side authentication](https://docs.adyen.com/development-resources/client-side-authentication). The client key is required for Drop-in and Components integrations.
     * @param id {String} Unique identifier of the API credential.
     * @param roles {Array.<String>} List of [roles](https://docs.adyen.com/development-resources/api-credentials#roles-1) for the API credential.
     * @param username {String} The name of the [API credential](https://docs.adyen.com/development-resources/api-credentials), for example **ws@Company.TestCompany**.
     */
    constructor(active, allowedIpAddresses, clientKey, id, roles, username) { 
        
        CompanyApiCredential.initialize(this, active, allowedIpAddresses, clientKey, id, roles, username);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, active, allowedIpAddresses, clientKey, id, roles, username) { 
        obj['active'] = active;
        obj['allowedIpAddresses'] = allowedIpAddresses;
        obj['clientKey'] = clientKey;
        obj['id'] = id;
        obj['roles'] = roles;
        obj['username'] = username;
    }

    /**
     * Constructs a <code>CompanyApiCredential</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CompanyApiCredential} obj Optional instance to populate.
     * @return {module:model/CompanyApiCredential} The populated <code>CompanyApiCredential</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CompanyApiCredential();

            if (data.hasOwnProperty('_links')) {
                obj['_links'] = ApiCredentialLinks.constructFromObject(data['_links']);
            }
            if (data.hasOwnProperty('active')) {
                obj['active'] = ApiClient.convertToType(data['active'], 'Boolean');
            }
            if (data.hasOwnProperty('allowedIpAddresses')) {
                obj['allowedIpAddresses'] = ApiClient.convertToType(data['allowedIpAddresses'], ['String']);
            }
            if (data.hasOwnProperty('allowedOrigins')) {
                obj['allowedOrigins'] = ApiClient.convertToType(data['allowedOrigins'], [AllowedOrigin]);
            }
            if (data.hasOwnProperty('associatedMerchantAccounts')) {
                obj['associatedMerchantAccounts'] = ApiClient.convertToType(data['associatedMerchantAccounts'], ['String']);
            }
            if (data.hasOwnProperty('clientKey')) {
                obj['clientKey'] = ApiClient.convertToType(data['clientKey'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('roles')) {
                obj['roles'] = ApiClient.convertToType(data['roles'], ['String']);
            }
            if (data.hasOwnProperty('username')) {
                obj['username'] = ApiClient.convertToType(data['username'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CompanyApiCredential</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CompanyApiCredential</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CompanyApiCredential.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `_links`
        if (data['_links']) { // data not null
          ApiCredentialLinks.validateJSON(data['_links']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['allowedIpAddresses'])) {
            throw new Error("Expected the field `allowedIpAddresses` to be an array in the JSON data but got " + data['allowedIpAddresses']);
        }
        if (data['allowedOrigins']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['allowedOrigins'])) {
                throw new Error("Expected the field `allowedOrigins` to be an array in the JSON data but got " + data['allowedOrigins']);
            }
            // validate the optional field `allowedOrigins` (array)
            for (const item of data['allowedOrigins']) {
                AllowedOrigin.validateJSON(item);
            };
        }
        // ensure the json data is an array
        if (!Array.isArray(data['associatedMerchantAccounts'])) {
            throw new Error("Expected the field `associatedMerchantAccounts` to be an array in the JSON data but got " + data['associatedMerchantAccounts']);
        }
        // ensure the json data is a string
        if (data['clientKey'] && !(typeof data['clientKey'] === 'string' || data['clientKey'] instanceof String)) {
            throw new Error("Expected the field `clientKey` to be a primitive type in the JSON string but got " + data['clientKey']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['roles'])) {
            throw new Error("Expected the field `roles` to be an array in the JSON data but got " + data['roles']);
        }
        // ensure the json data is a string
        if (data['username'] && !(typeof data['username'] === 'string' || data['username'] instanceof String)) {
            throw new Error("Expected the field `username` to be a primitive type in the JSON string but got " + data['username']);
        }

        return true;
    }


}

CompanyApiCredential.RequiredProperties = ["active", "allowedIpAddresses", "clientKey", "id", "roles", "username"];

/**
 * References to resources linked to the API credential.
 * @member {module:model/ApiCredentialLinks} _links
 */
CompanyApiCredential.prototype['_links'] = undefined;

/**
 * Indicates if the API credential is enabled. Must be set to **true** to use the credential in your integration.
 * @member {Boolean} active
 */
CompanyApiCredential.prototype['active'] = undefined;

/**
 * List of IP addresses from which your client can make requests.  If the list is empty, we allow requests from any IP. If the list is not empty and we get a request from an IP which is not on the list, you get a security error.
 * @member {Array.<String>} allowedIpAddresses
 */
CompanyApiCredential.prototype['allowedIpAddresses'] = undefined;

/**
 * List containing the [allowed origins](https://docs.adyen.com/development-resources/client-side-authentication#allowed-origins) linked to the API credential.
 * @member {Array.<module:model/AllowedOrigin>} allowedOrigins
 */
CompanyApiCredential.prototype['allowedOrigins'] = undefined;

/**
 * List of merchant accounts that the API credential has explicit access to.   If the credential has access to a company, this implies access to all merchant accounts and no merchants for that company will be included.
 * @member {Array.<String>} associatedMerchantAccounts
 */
CompanyApiCredential.prototype['associatedMerchantAccounts'] = undefined;

/**
 * Public key used for [client-side authentication](https://docs.adyen.com/development-resources/client-side-authentication). The client key is required for Drop-in and Components integrations.
 * @member {String} clientKey
 */
CompanyApiCredential.prototype['clientKey'] = undefined;

/**
 * Description of the API credential.
 * @member {String} description
 */
CompanyApiCredential.prototype['description'] = undefined;

/**
 * Unique identifier of the API credential.
 * @member {String} id
 */
CompanyApiCredential.prototype['id'] = undefined;

/**
 * List of [roles](https://docs.adyen.com/development-resources/api-credentials#roles-1) for the API credential.
 * @member {Array.<String>} roles
 */
CompanyApiCredential.prototype['roles'] = undefined;

/**
 * The name of the [API credential](https://docs.adyen.com/development-resources/api-credentials), for example **ws@Company.TestCompany**.
 * @member {String} username
 */
CompanyApiCredential.prototype['username'] = undefined;






export default CompanyApiCredential;

