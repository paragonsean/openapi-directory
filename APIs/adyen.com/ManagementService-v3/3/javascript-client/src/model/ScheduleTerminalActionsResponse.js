/**
 * Management API
 * Configure and manage your Adyen company and merchant accounts, stores, and payment terminals. ## Authentication Each request to the Management API must be signed with an API key. [Generate your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) in the Customer Area and then set this key to the `X-API-Key` header value.  To access the live endpoints, you need to generate a new API key in your live Customer Area. ## Versioning  Management API handles versioning as part of the endpoint URL. For example, to send a request to this version of the `/companies/{companyId}/webhooks` endpoint, use:  ```text https://management-test.adyen.com/v3/companies/{companyId}/webhooks ```  ## Going live  To access the live endpoints, you need an API key from your live Customer Area. Use this API key to make requests to:  ```text https://management-live.adyen.com/v3 ```  ## Release notes Have a look at the [release notes](https://docs.adyen.com/release-notes/management-api) to find out what changed in this version!
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ScheduleTerminalActionsRequestActionDetails from './ScheduleTerminalActionsRequestActionDetails';
import TerminalActionScheduleDetail from './TerminalActionScheduleDetail';

/**
 * The ScheduleTerminalActionsResponse model module.
 * @module model/ScheduleTerminalActionsResponse
 * @version 3
 */
class ScheduleTerminalActionsResponse {
    /**
     * Constructs a new <code>ScheduleTerminalActionsResponse</code>.
     * @alias module:model/ScheduleTerminalActionsResponse
     */
    constructor() { 
        
        ScheduleTerminalActionsResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ScheduleTerminalActionsResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ScheduleTerminalActionsResponse} obj Optional instance to populate.
     * @return {module:model/ScheduleTerminalActionsResponse} The populated <code>ScheduleTerminalActionsResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ScheduleTerminalActionsResponse();

            if (data.hasOwnProperty('actionDetails')) {
                obj['actionDetails'] = ScheduleTerminalActionsRequestActionDetails.constructFromObject(data['actionDetails']);
            }
            if (data.hasOwnProperty('items')) {
                obj['items'] = ApiClient.convertToType(data['items'], [TerminalActionScheduleDetail]);
            }
            if (data.hasOwnProperty('scheduledAt')) {
                obj['scheduledAt'] = ApiClient.convertToType(data['scheduledAt'], 'String');
            }
            if (data.hasOwnProperty('storeId')) {
                obj['storeId'] = ApiClient.convertToType(data['storeId'], 'String');
            }
            if (data.hasOwnProperty('terminalsWithErrors')) {
                obj['terminalsWithErrors'] = ApiClient.convertToType(data['terminalsWithErrors'], {'String': ['String']});
            }
            if (data.hasOwnProperty('totalErrors')) {
                obj['totalErrors'] = ApiClient.convertToType(data['totalErrors'], 'Number');
            }
            if (data.hasOwnProperty('totalScheduled')) {
                obj['totalScheduled'] = ApiClient.convertToType(data['totalScheduled'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ScheduleTerminalActionsResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ScheduleTerminalActionsResponse</code>.
     */
    static validateJSON(data) {
        // validate the optional field `actionDetails`
        if (data['actionDetails']) { // data not null
          ScheduleTerminalActionsRequestActionDetails.validateJSON(data['actionDetails']);
        }
        if (data['items']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['items'])) {
                throw new Error("Expected the field `items` to be an array in the JSON data but got " + data['items']);
            }
            // validate the optional field `items` (array)
            for (const item of data['items']) {
                TerminalActionScheduleDetail.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['scheduledAt'] && !(typeof data['scheduledAt'] === 'string' || data['scheduledAt'] instanceof String)) {
            throw new Error("Expected the field `scheduledAt` to be a primitive type in the JSON string but got " + data['scheduledAt']);
        }
        // ensure the json data is a string
        if (data['storeId'] && !(typeof data['storeId'] === 'string' || data['storeId'] instanceof String)) {
            throw new Error("Expected the field `storeId` to be a primitive type in the JSON string but got " + data['storeId']);
        }

        return true;
    }


}



/**
 * @member {module:model/ScheduleTerminalActionsRequestActionDetails} actionDetails
 */
ScheduleTerminalActionsResponse.prototype['actionDetails'] = undefined;

/**
 * A list containing a terminal ID and an action ID for each terminal that the action was scheduled for.
 * @member {Array.<module:model/TerminalActionScheduleDetail>} items
 */
ScheduleTerminalActionsResponse.prototype['items'] = undefined;

/**
 * The date and time when the action should happen.  Format: [RFC 3339](https://www.rfc-editor.org/rfc/rfc3339), but without the **Z** before the time offset. For example, **2021-11-15T12:16:21+01:00**  The action is sent with the first [maintenance call](https://docs.adyen.com/point-of-sale/automating-terminal-management/terminal-actions-api#when-actions-take-effect) after the specified date and time in the time zone of the terminal.  An empty value causes the action to be sent as soon as possible: at the next maintenance call.
 * @member {String} scheduledAt
 */
ScheduleTerminalActionsResponse.prototype['scheduledAt'] = undefined;

/**
 * The unique ID of the [store](https://docs.adyen.com/api-explorer/#/ManagementService/latest/get/stores). If present, all terminals in the `terminalIds` list must be assigned to this store.
 * @member {String} storeId
 */
ScheduleTerminalActionsResponse.prototype['storeId'] = undefined;

/**
 * The validation errors that occurred in the list of terminals, and for each error the IDs of the terminals that the error applies to.
 * @member {Object.<String, Array.<String>>} terminalsWithErrors
 */
ScheduleTerminalActionsResponse.prototype['terminalsWithErrors'] = undefined;

/**
 * The number of terminals for which scheduling the action failed.
 * @member {Number} totalErrors
 */
ScheduleTerminalActionsResponse.prototype['totalErrors'] = undefined;

/**
 * The number of terminals for which the action was successfully scheduled. This doesn't mean the action has happened yet.
 * @member {Number} totalScheduled
 */
ScheduleTerminalActionsResponse.prototype['totalScheduled'] = undefined;






export default ScheduleTerminalActionsResponse;

