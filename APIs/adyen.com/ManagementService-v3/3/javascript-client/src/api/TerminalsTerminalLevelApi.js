/**
 * Management API
 * Configure and manage your Adyen company and merchant accounts, stores, and payment terminals. ## Authentication Each request to the Management API must be signed with an API key. [Generate your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) in the Customer Area and then set this key to the `X-API-Key` header value.  To access the live endpoints, you need to generate a new API key in your live Customer Area. ## Versioning  Management API handles versioning as part of the endpoint URL. For example, to send a request to this version of the `/companies/{companyId}/webhooks` endpoint, use:  ```text https://management-test.adyen.com/v3/companies/{companyId}/webhooks ```  ## Going live  To access the live endpoints, you need an API key from your live Customer Area. Use this API key to make requests to:  ```text https://management-live.adyen.com/v3 ```  ## Release notes Have a look at the [release notes](https://docs.adyen.com/release-notes/management-api) to find out what changed in this version!
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ListTerminalsResponse from '../model/ListTerminalsResponse';
import RestServiceError from '../model/RestServiceError';
import TerminalReassignmentRequest from '../model/TerminalReassignmentRequest';

/**
* TerminalsTerminalLevel service.
* @module api/TerminalsTerminalLevelApi
* @version 3
*/
export default class TerminalsTerminalLevelApi {

    /**
    * Constructs a new TerminalsTerminalLevelApi. 
    * @alias module:api/TerminalsTerminalLevelApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getTerminals operation.
     * @callback module:api/TerminalsTerminalLevelApi~getTerminalsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListTerminalsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a list of terminals
     * Returns the payment terminals that the API credential has access to and that match the query parameters.  To make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API — Terminal actions read
     * @param {Object} opts Optional parameters
     * @param {String} [searchQuery] Returns terminals with an ID that contains the specified string. If present, other query parameters are ignored.
     * @param {String} [otpQuery] Returns one or more terminals associated with the one-time passwords specified in the request. If this query parameter is used, other query parameters are ignored.
     * @param {String} [countries] Returns terminals located in the countries specified by their [two-letter country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).
     * @param {String} [merchantIds] Returns terminals that belong to the merchant accounts specified by their unique merchant account ID.
     * @param {String} [storeIds] Returns terminals that are assigned to the [stores](https://docs.adyen.com/api-explorer/#/ManagementService/latest/get/stores) specified by their unique store ID.
     * @param {String} [brandModels] Returns terminals of the [models](https://docs.adyen.com/api-explorer/#/ManagementService/latest/get/companies/{companyId}/terminalModels) specified in the format *brand.model*.
     * @param {Number} [pageNumber] The number of the page to fetch.
     * @param {Number} [pageSize] The number of items to have on a page, maximum 100. The default is 20 items on a page.
     * @param {module:api/TerminalsTerminalLevelApi~getTerminalsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListTerminalsResponse}
     */
    getTerminals(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'searchQuery': opts['searchQuery'],
        'otpQuery': opts['otpQuery'],
        'countries': opts['countries'],
        'merchantIds': opts['merchantIds'],
        'storeIds': opts['storeIds'],
        'brandModels': opts['brandModels'],
        'pageNumber': opts['pageNumber'],
        'pageSize': opts['pageSize']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BasicAuth', 'ApiKeyAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListTerminalsResponse;
      return this.apiClient.callApi(
        '/terminals', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the postTerminalsTerminalIdReassign operation.
     * @callback module:api/TerminalsTerminalLevelApi~postTerminalsTerminalIdReassignCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Reassign a terminal
     * Reassigns a payment terminal to a company account, merchant account, merchant account inventory, or a store.  To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Assign Terminal
     * @param {String} terminalId The unique identifier of the payment terminal.
     * @param {Object} opts Optional parameters
     * @param {module:model/TerminalReassignmentRequest} [terminalReassignmentRequest] 
     * @param {module:api/TerminalsTerminalLevelApi~postTerminalsTerminalIdReassignCallback} callback The callback function, accepting three arguments: error, data, response
     */
    postTerminalsTerminalIdReassign(terminalId, opts, callback) {
      opts = opts || {};
      let postBody = opts['terminalReassignmentRequest'];
      // verify the required parameter 'terminalId' is set
      if (terminalId === undefined || terminalId === null) {
        throw new Error("Missing the required parameter 'terminalId' when calling postTerminalsTerminalIdReassign");
      }

      let pathParams = {
        'terminalId': terminalId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BasicAuth', 'ApiKeyAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/terminals/{terminalId}/reassign', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
