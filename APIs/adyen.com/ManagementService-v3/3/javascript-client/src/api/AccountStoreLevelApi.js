/**
 * Management API
 * Configure and manage your Adyen company and merchant accounts, stores, and payment terminals. ## Authentication Each request to the Management API must be signed with an API key. [Generate your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) in the Customer Area and then set this key to the `X-API-Key` header value.  To access the live endpoints, you need to generate a new API key in your live Customer Area. ## Versioning  Management API handles versioning as part of the endpoint URL. For example, to send a request to this version of the `/companies/{companyId}/webhooks` endpoint, use:  ```text https://management-test.adyen.com/v3/companies/{companyId}/webhooks ```  ## Going live  To access the live endpoints, you need an API key from your live Customer Area. Use this API key to make requests to:  ```text https://management-live.adyen.com/v3 ```  ## Release notes Have a look at the [release notes](https://docs.adyen.com/release-notes/management-api) to find out what changed in this version!
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ListStoresResponse from '../model/ListStoresResponse';
import RestServiceError from '../model/RestServiceError';
import Store from '../model/Store';
import StoreCreationRequest from '../model/StoreCreationRequest';
import StoreCreationWithMerchantCodeRequest from '../model/StoreCreationWithMerchantCodeRequest';
import UpdateStoreRequest from '../model/UpdateStoreRequest';

/**
* AccountStoreLevel service.
* @module api/AccountStoreLevelApi
* @version 3
*/
export default class AccountStoreLevelApi {

    /**
    * Constructs a new AccountStoreLevelApi. 
    * @alias module:api/AccountStoreLevelApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getMerchantsMerchantIdStores operation.
     * @callback module:api/AccountStoreLevelApi~getMerchantsMerchantIdStoresCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListStoresResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a list of stores
     * Returns a list of stores for the merchant account identified in the path. The list is grouped into pages as defined by the query parameters.  To make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Stores read * Management API—Stores read and write
     * @param {String} merchantId The unique identifier of the merchant account.
     * @param {Object} opts Optional parameters
     * @param {Number} [pageNumber] The number of the page to fetch.
     * @param {Number} [pageSize] The number of items to have on a page, maximum 100. The default is 10 items on a page.
     * @param {String} [reference] The reference of the store.
     * @param {module:api/AccountStoreLevelApi~getMerchantsMerchantIdStoresCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListStoresResponse}
     */
    getMerchantsMerchantIdStores(merchantId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'merchantId' is set
      if (merchantId === undefined || merchantId === null) {
        throw new Error("Missing the required parameter 'merchantId' when calling getMerchantsMerchantIdStores");
      }

      let pathParams = {
        'merchantId': merchantId
      };
      let queryParams = {
        'pageNumber': opts['pageNumber'],
        'pageSize': opts['pageSize'],
        'reference': opts['reference']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BasicAuth', 'ApiKeyAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListStoresResponse;
      return this.apiClient.callApi(
        '/merchants/{merchantId}/stores', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getMerchantsMerchantIdStoresStoreId operation.
     * @callback module:api/AccountStoreLevelApi~getMerchantsMerchantIdStoresStoreIdCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Store} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a store
     * Returns the details of the store identified in the path.  To make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Stores read * Management API—Stores read and write
     * @param {String} merchantId The unique identifier of the merchant account.
     * @param {String} storeId The unique identifier of the store.
     * @param {module:api/AccountStoreLevelApi~getMerchantsMerchantIdStoresStoreIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Store}
     */
    getMerchantsMerchantIdStoresStoreId(merchantId, storeId, callback) {
      let postBody = null;
      // verify the required parameter 'merchantId' is set
      if (merchantId === undefined || merchantId === null) {
        throw new Error("Missing the required parameter 'merchantId' when calling getMerchantsMerchantIdStoresStoreId");
      }
      // verify the required parameter 'storeId' is set
      if (storeId === undefined || storeId === null) {
        throw new Error("Missing the required parameter 'storeId' when calling getMerchantsMerchantIdStoresStoreId");
      }

      let pathParams = {
        'merchantId': merchantId,
        'storeId': storeId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BasicAuth', 'ApiKeyAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Store;
      return this.apiClient.callApi(
        '/merchants/{merchantId}/stores/{storeId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getStores operation.
     * @callback module:api/AccountStoreLevelApi~getStoresCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListStoresResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a list of stores
     * Returns a list of stores. The list is grouped into pages as defined by the query parameters.  To make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Stores read * Management API—Stores read and write
     * @param {Object} opts Optional parameters
     * @param {Number} [pageNumber] The number of the page to fetch.
     * @param {Number} [pageSize] The number of items to have on a page, maximum 100. The default is 10 items on a page.
     * @param {String} [reference] The reference of the store.
     * @param {String} [merchantId] The unique identifier of the merchant account.
     * @param {module:api/AccountStoreLevelApi~getStoresCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListStoresResponse}
     */
    getStores(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'pageNumber': opts['pageNumber'],
        'pageSize': opts['pageSize'],
        'reference': opts['reference'],
        'merchantId': opts['merchantId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BasicAuth', 'ApiKeyAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListStoresResponse;
      return this.apiClient.callApi(
        '/stores', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getStoresStoreId operation.
     * @callback module:api/AccountStoreLevelApi~getStoresStoreIdCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Store} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a store
     * Returns the details of the store identified in the path.  To make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Stores read * Management API—Stores read and write
     * @param {String} storeId The unique identifier of the store.
     * @param {module:api/AccountStoreLevelApi~getStoresStoreIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Store}
     */
    getStoresStoreId(storeId, callback) {
      let postBody = null;
      // verify the required parameter 'storeId' is set
      if (storeId === undefined || storeId === null) {
        throw new Error("Missing the required parameter 'storeId' when calling getStoresStoreId");
      }

      let pathParams = {
        'storeId': storeId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BasicAuth', 'ApiKeyAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Store;
      return this.apiClient.callApi(
        '/stores/{storeId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the patchMerchantsMerchantIdStoresStoreId operation.
     * @callback module:api/AccountStoreLevelApi~patchMerchantsMerchantIdStoresStoreIdCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Store} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update a store
     * Updates the store identified in the path. You can only update some store parameters.  To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Stores read and write
     * @param {String} merchantId The unique identifier of the merchant account.
     * @param {String} storeId The unique identifier of the store.
     * @param {Object} opts Optional parameters
     * @param {module:model/UpdateStoreRequest} [updateStoreRequest] 
     * @param {module:api/AccountStoreLevelApi~patchMerchantsMerchantIdStoresStoreIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Store}
     */
    patchMerchantsMerchantIdStoresStoreId(merchantId, storeId, opts, callback) {
      opts = opts || {};
      let postBody = opts['updateStoreRequest'];
      // verify the required parameter 'merchantId' is set
      if (merchantId === undefined || merchantId === null) {
        throw new Error("Missing the required parameter 'merchantId' when calling patchMerchantsMerchantIdStoresStoreId");
      }
      // verify the required parameter 'storeId' is set
      if (storeId === undefined || storeId === null) {
        throw new Error("Missing the required parameter 'storeId' when calling patchMerchantsMerchantIdStoresStoreId");
      }

      let pathParams = {
        'merchantId': merchantId,
        'storeId': storeId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BasicAuth', 'ApiKeyAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Store;
      return this.apiClient.callApi(
        '/merchants/{merchantId}/stores/{storeId}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the patchStoresStoreId operation.
     * @callback module:api/AccountStoreLevelApi~patchStoresStoreIdCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Store} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update a store
     * Updates the store identified in the path. You can only update some store parameters.  To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Stores read and write
     * @param {String} storeId The unique identifier of the store.
     * @param {Object} opts Optional parameters
     * @param {module:model/UpdateStoreRequest} [updateStoreRequest] 
     * @param {module:api/AccountStoreLevelApi~patchStoresStoreIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Store}
     */
    patchStoresStoreId(storeId, opts, callback) {
      opts = opts || {};
      let postBody = opts['updateStoreRequest'];
      // verify the required parameter 'storeId' is set
      if (storeId === undefined || storeId === null) {
        throw new Error("Missing the required parameter 'storeId' when calling patchStoresStoreId");
      }

      let pathParams = {
        'storeId': storeId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BasicAuth', 'ApiKeyAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Store;
      return this.apiClient.callApi(
        '/stores/{storeId}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the postMerchantsMerchantIdStores operation.
     * @callback module:api/AccountStoreLevelApi~postMerchantsMerchantIdStoresCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Store} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a store
     * Creates a store for the merchant account identified in the path.  To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Stores read and write
     * @param {String} merchantId The unique identifier of the merchant account.
     * @param {Object} opts Optional parameters
     * @param {module:model/StoreCreationRequest} [storeCreationRequest] 
     * @param {module:api/AccountStoreLevelApi~postMerchantsMerchantIdStoresCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Store}
     */
    postMerchantsMerchantIdStores(merchantId, opts, callback) {
      opts = opts || {};
      let postBody = opts['storeCreationRequest'];
      // verify the required parameter 'merchantId' is set
      if (merchantId === undefined || merchantId === null) {
        throw new Error("Missing the required parameter 'merchantId' when calling postMerchantsMerchantIdStores");
      }

      let pathParams = {
        'merchantId': merchantId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BasicAuth', 'ApiKeyAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Store;
      return this.apiClient.callApi(
        '/merchants/{merchantId}/stores', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the postStores operation.
     * @callback module:api/AccountStoreLevelApi~postStoresCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Store} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a store
     * Creates a store for the merchant account specified in the request.  To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Stores read and write
     * @param {Object} opts Optional parameters
     * @param {module:model/StoreCreationWithMerchantCodeRequest} [storeCreationWithMerchantCodeRequest] 
     * @param {module:api/AccountStoreLevelApi~postStoresCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Store}
     */
    postStores(opts, callback) {
      opts = opts || {};
      let postBody = opts['storeCreationWithMerchantCodeRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BasicAuth', 'ApiKeyAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Store;
      return this.apiClient.callApi(
        '/stores', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
