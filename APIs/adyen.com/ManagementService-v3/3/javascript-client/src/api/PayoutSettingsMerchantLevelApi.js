/**
 * Management API
 * Configure and manage your Adyen company and merchant accounts, stores, and payment terminals. ## Authentication Each request to the Management API must be signed with an API key. [Generate your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) in the Customer Area and then set this key to the `X-API-Key` header value.  To access the live endpoints, you need to generate a new API key in your live Customer Area. ## Versioning  Management API handles versioning as part of the endpoint URL. For example, to send a request to this version of the `/companies/{companyId}/webhooks` endpoint, use:  ```text https://management-test.adyen.com/v3/companies/{companyId}/webhooks ```  ## Going live  To access the live endpoints, you need an API key from your live Customer Area. Use this API key to make requests to:  ```text https://management-live.adyen.com/v3 ```  ## Release notes Have a look at the [release notes](https://docs.adyen.com/release-notes/management-api) to find out what changed in this version!
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import PayoutSettings from '../model/PayoutSettings';
import PayoutSettingsRequest from '../model/PayoutSettingsRequest';
import PayoutSettingsResponse from '../model/PayoutSettingsResponse';
import RestServiceError from '../model/RestServiceError';
import UpdatePayoutSettingsRequest from '../model/UpdatePayoutSettingsRequest';

/**
* PayoutSettingsMerchantLevel service.
* @module api/PayoutSettingsMerchantLevelApi
* @version 3
*/
export default class PayoutSettingsMerchantLevelApi {

    /**
    * Constructs a new PayoutSettingsMerchantLevelApi. 
    * @alias module:api/PayoutSettingsMerchantLevelApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the deleteMerchantsMerchantIdPayoutSettingsPayoutSettingsId operation.
     * @callback module:api/PayoutSettingsMerchantLevelApi~deleteMerchantsMerchantIdPayoutSettingsPayoutSettingsIdCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete a payout setting
     * Deletes the payout setting identified in the path.  Use this endpoint if your integration requires it, such as Adyen for Platforms Manage. Your Adyen contact will set up your access.  To make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):  * Management API—Payout account settings read and write
     * @param {String} merchantId The unique identifier of the merchant account.
     * @param {String} payoutSettingsId The unique identifier of the payout setting.
     * @param {module:api/PayoutSettingsMerchantLevelApi~deleteMerchantsMerchantIdPayoutSettingsPayoutSettingsIdCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteMerchantsMerchantIdPayoutSettingsPayoutSettingsId(merchantId, payoutSettingsId, callback) {
      let postBody = null;
      // verify the required parameter 'merchantId' is set
      if (merchantId === undefined || merchantId === null) {
        throw new Error("Missing the required parameter 'merchantId' when calling deleteMerchantsMerchantIdPayoutSettingsPayoutSettingsId");
      }
      // verify the required parameter 'payoutSettingsId' is set
      if (payoutSettingsId === undefined || payoutSettingsId === null) {
        throw new Error("Missing the required parameter 'payoutSettingsId' when calling deleteMerchantsMerchantIdPayoutSettingsPayoutSettingsId");
      }

      let pathParams = {
        'merchantId': merchantId,
        'payoutSettingsId': payoutSettingsId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BasicAuth', 'ApiKeyAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/merchants/{merchantId}/payoutSettings/{payoutSettingsId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getMerchantsMerchantIdPayoutSettings operation.
     * @callback module:api/PayoutSettingsMerchantLevelApi~getMerchantsMerchantIdPayoutSettingsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PayoutSettingsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a list of payout settings
     * Returns the list of payout settings for the merchant account identified in the path.  Use this endpoint if your integration requires it, such as Adyen for Platforms Manage. Your Adyen contact will set up your access.  To make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Payout account settings read
     * @param {String} merchantId The unique identifier of the merchant account.
     * @param {module:api/PayoutSettingsMerchantLevelApi~getMerchantsMerchantIdPayoutSettingsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PayoutSettingsResponse}
     */
    getMerchantsMerchantIdPayoutSettings(merchantId, callback) {
      let postBody = null;
      // verify the required parameter 'merchantId' is set
      if (merchantId === undefined || merchantId === null) {
        throw new Error("Missing the required parameter 'merchantId' when calling getMerchantsMerchantIdPayoutSettings");
      }

      let pathParams = {
        'merchantId': merchantId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BasicAuth', 'ApiKeyAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PayoutSettingsResponse;
      return this.apiClient.callApi(
        '/merchants/{merchantId}/payoutSettings', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getMerchantsMerchantIdPayoutSettingsPayoutSettingsId operation.
     * @callback module:api/PayoutSettingsMerchantLevelApi~getMerchantsMerchantIdPayoutSettingsPayoutSettingsIdCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PayoutSettings} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a payout setting
     * Returns the payout setting identified in the path.  Use this endpoint if your integration requires it, such as Adyen for Platforms Manage. Your Adyen contact will set up your access.  To make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Payout account settings read
     * @param {String} merchantId The unique identifier of the merchant account.
     * @param {String} payoutSettingsId The unique identifier of the payout setting.
     * @param {module:api/PayoutSettingsMerchantLevelApi~getMerchantsMerchantIdPayoutSettingsPayoutSettingsIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PayoutSettings}
     */
    getMerchantsMerchantIdPayoutSettingsPayoutSettingsId(merchantId, payoutSettingsId, callback) {
      let postBody = null;
      // verify the required parameter 'merchantId' is set
      if (merchantId === undefined || merchantId === null) {
        throw new Error("Missing the required parameter 'merchantId' when calling getMerchantsMerchantIdPayoutSettingsPayoutSettingsId");
      }
      // verify the required parameter 'payoutSettingsId' is set
      if (payoutSettingsId === undefined || payoutSettingsId === null) {
        throw new Error("Missing the required parameter 'payoutSettingsId' when calling getMerchantsMerchantIdPayoutSettingsPayoutSettingsId");
      }

      let pathParams = {
        'merchantId': merchantId,
        'payoutSettingsId': payoutSettingsId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BasicAuth', 'ApiKeyAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PayoutSettings;
      return this.apiClient.callApi(
        '/merchants/{merchantId}/payoutSettings/{payoutSettingsId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the patchMerchantsMerchantIdPayoutSettingsPayoutSettingsId operation.
     * @callback module:api/PayoutSettingsMerchantLevelApi~patchMerchantsMerchantIdPayoutSettingsPayoutSettingsIdCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PayoutSettings} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update a payout setting
     * Updates the payout setting identified in the path. You can enable or disable the payout setting.  Use this endpoint if your integration requires it, such as Adyen for Platforms Manage. Your Adyen contact will set up your access.  To make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):  * Management API—Payout account settings read and write
     * @param {String} merchantId The unique identifier of the merchant account.
     * @param {String} payoutSettingsId The unique identifier of the payout setting.
     * @param {Object} opts Optional parameters
     * @param {module:model/UpdatePayoutSettingsRequest} [updatePayoutSettingsRequest] 
     * @param {module:api/PayoutSettingsMerchantLevelApi~patchMerchantsMerchantIdPayoutSettingsPayoutSettingsIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PayoutSettings}
     */
    patchMerchantsMerchantIdPayoutSettingsPayoutSettingsId(merchantId, payoutSettingsId, opts, callback) {
      opts = opts || {};
      let postBody = opts['updatePayoutSettingsRequest'];
      // verify the required parameter 'merchantId' is set
      if (merchantId === undefined || merchantId === null) {
        throw new Error("Missing the required parameter 'merchantId' when calling patchMerchantsMerchantIdPayoutSettingsPayoutSettingsId");
      }
      // verify the required parameter 'payoutSettingsId' is set
      if (payoutSettingsId === undefined || payoutSettingsId === null) {
        throw new Error("Missing the required parameter 'payoutSettingsId' when calling patchMerchantsMerchantIdPayoutSettingsPayoutSettingsId");
      }

      let pathParams = {
        'merchantId': merchantId,
        'payoutSettingsId': payoutSettingsId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BasicAuth', 'ApiKeyAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = PayoutSettings;
      return this.apiClient.callApi(
        '/merchants/{merchantId}/payoutSettings/{payoutSettingsId}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the postMerchantsMerchantIdPayoutSettings operation.
     * @callback module:api/PayoutSettingsMerchantLevelApi~postMerchantsMerchantIdPayoutSettingsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PayoutSettings} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Add a payout setting
     * Sends a request to add a payout setting for the merchant account specified in the path. A payout setting links the merchant account to the [transfer instrument](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/transferInstruments) that contains the details of the payout bank account. Adyen verifies the bank account before allowing and enabling the payout setting.  If you're accepting payments in multiple currencies, you may add multiple payout settings for the merchant account.  Use this endpoint if your integration requires it, such as Adyen for Platforms Manage. Your Adyen contact will set up your access.  To make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):  * Management API—Payout account settings read and write
     * @param {String} merchantId The unique identifier of the merchant account.
     * @param {Object} opts Optional parameters
     * @param {module:model/PayoutSettingsRequest} [payoutSettingsRequest] 
     * @param {module:api/PayoutSettingsMerchantLevelApi~postMerchantsMerchantIdPayoutSettingsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PayoutSettings}
     */
    postMerchantsMerchantIdPayoutSettings(merchantId, opts, callback) {
      opts = opts || {};
      let postBody = opts['payoutSettingsRequest'];
      // verify the required parameter 'merchantId' is set
      if (merchantId === undefined || merchantId === null) {
        throw new Error("Missing the required parameter 'merchantId' when calling postMerchantsMerchantIdPayoutSettings");
      }

      let pathParams = {
        'merchantId': merchantId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BasicAuth', 'ApiKeyAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = PayoutSettings;
      return this.apiClient.callApi(
        '/merchants/{merchantId}/payoutSettings', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
