/**
 * Management API
 * Configure and manage your Adyen company and merchant accounts, stores, and payment terminals. ## Authentication Each request to the Management API must be signed with an API key. [Generate your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) in the Customer Area and then set this key to the `X-API-Key` header value.  To access the live endpoints, you need to generate a new API key in your live Customer Area. ## Versioning  Management API handles versioning as part of the endpoint URL. For example, to send a request to this version of the `/companies/{companyId}/webhooks` endpoint, use:  ```text https://management-test.adyen.com/v3/companies/{companyId}/webhooks ```  ## Going live  To access the live endpoints, you need an API key from your live Customer Area. Use this API key to make requests to:  ```text https://management-live.adyen.com/v3 ```  ## Release notes Have a look at the [release notes](https://docs.adyen.com/release-notes/management-api) to find out what changed in this version!
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ApplePayInfo from '../model/ApplePayInfo';
import PaymentMethod from '../model/PaymentMethod';
import PaymentMethodResponse from '../model/PaymentMethodResponse';
import PaymentMethodSetupInfo from '../model/PaymentMethodSetupInfo';
import RestServiceError from '../model/RestServiceError';
import UpdatePaymentMethodInfo from '../model/UpdatePaymentMethodInfo';

/**
* PaymentMethodsMerchantLevel service.
* @module api/PaymentMethodsMerchantLevelApi
* @version 3
*/
export default class PaymentMethodsMerchantLevelApi {

    /**
    * Constructs a new PaymentMethodsMerchantLevelApi. 
    * @alias module:api/PaymentMethodsMerchantLevelApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getMerchantsMerchantIdPaymentMethodSettings operation.
     * @callback module:api/PaymentMethodsMerchantLevelApi~getMerchantsMerchantIdPaymentMethodSettingsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PaymentMethodResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get all payment methods
     * Returns details for all payment methods of the merchant account identified in the path.  To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Payment methods read 
     * @param {String} merchantId The unique identifier of the merchant account.
     * @param {Object} opts Optional parameters
     * @param {String} [storeId] The unique identifier of the store for which to return the payment methods.
     * @param {String} [businessLineId] The unique identifier of the Business Line for which to return the payment methods.
     * @param {Number} [pageSize] The number of items to have on a page, maximum 100. The default is 10 items on a page.
     * @param {Number} [pageNumber] The number of the page to fetch.
     * @param {module:api/PaymentMethodsMerchantLevelApi~getMerchantsMerchantIdPaymentMethodSettingsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PaymentMethodResponse}
     */
    getMerchantsMerchantIdPaymentMethodSettings(merchantId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'merchantId' is set
      if (merchantId === undefined || merchantId === null) {
        throw new Error("Missing the required parameter 'merchantId' when calling getMerchantsMerchantIdPaymentMethodSettings");
      }

      let pathParams = {
        'merchantId': merchantId
      };
      let queryParams = {
        'storeId': opts['storeId'],
        'businessLineId': opts['businessLineId'],
        'pageSize': opts['pageSize'],
        'pageNumber': opts['pageNumber']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BasicAuth', 'ApiKeyAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PaymentMethodResponse;
      return this.apiClient.callApi(
        '/merchants/{merchantId}/paymentMethodSettings', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getMerchantsMerchantIdPaymentMethodSettingsPaymentMethodId operation.
     * @callback module:api/PaymentMethodsMerchantLevelApi~getMerchantsMerchantIdPaymentMethodSettingsPaymentMethodIdCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PaymentMethod} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get payment method details
     * Returns details for the merchant account and the payment method identified in the path.  To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Payment methods read 
     * @param {String} merchantId The unique identifier of the merchant account.
     * @param {String} paymentMethodId The unique identifier of the payment method.
     * @param {module:api/PaymentMethodsMerchantLevelApi~getMerchantsMerchantIdPaymentMethodSettingsPaymentMethodIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PaymentMethod}
     */
    getMerchantsMerchantIdPaymentMethodSettingsPaymentMethodId(merchantId, paymentMethodId, callback) {
      let postBody = null;
      // verify the required parameter 'merchantId' is set
      if (merchantId === undefined || merchantId === null) {
        throw new Error("Missing the required parameter 'merchantId' when calling getMerchantsMerchantIdPaymentMethodSettingsPaymentMethodId");
      }
      // verify the required parameter 'paymentMethodId' is set
      if (paymentMethodId === undefined || paymentMethodId === null) {
        throw new Error("Missing the required parameter 'paymentMethodId' when calling getMerchantsMerchantIdPaymentMethodSettingsPaymentMethodId");
      }

      let pathParams = {
        'merchantId': merchantId,
        'paymentMethodId': paymentMethodId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BasicAuth', 'ApiKeyAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PaymentMethod;
      return this.apiClient.callApi(
        '/merchants/{merchantId}/paymentMethodSettings/{paymentMethodId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getMerchantsMerchantIdPaymentMethodSettingsPaymentMethodIdGetApplePayDomains operation.
     * @callback module:api/PaymentMethodsMerchantLevelApi~getMerchantsMerchantIdPaymentMethodSettingsPaymentMethodIdGetApplePayDomainsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApplePayInfo} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Apple Pay domains
     * Returns all Apple Pay domains that are registered with the merchant account and the payment method identified in the path. For more information, see [Apple Pay documentation](https://docs.adyen.com/payment-methods/apple-pay/enable-apple-pay#register-merchant-domain).  To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Payment methods read 
     * @param {String} merchantId The unique identifier of the merchant account.
     * @param {String} paymentMethodId The unique identifier of the payment method.
     * @param {module:api/PaymentMethodsMerchantLevelApi~getMerchantsMerchantIdPaymentMethodSettingsPaymentMethodIdGetApplePayDomainsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApplePayInfo}
     */
    getMerchantsMerchantIdPaymentMethodSettingsPaymentMethodIdGetApplePayDomains(merchantId, paymentMethodId, callback) {
      let postBody = null;
      // verify the required parameter 'merchantId' is set
      if (merchantId === undefined || merchantId === null) {
        throw new Error("Missing the required parameter 'merchantId' when calling getMerchantsMerchantIdPaymentMethodSettingsPaymentMethodIdGetApplePayDomains");
      }
      // verify the required parameter 'paymentMethodId' is set
      if (paymentMethodId === undefined || paymentMethodId === null) {
        throw new Error("Missing the required parameter 'paymentMethodId' when calling getMerchantsMerchantIdPaymentMethodSettingsPaymentMethodIdGetApplePayDomains");
      }

      let pathParams = {
        'merchantId': merchantId,
        'paymentMethodId': paymentMethodId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BasicAuth', 'ApiKeyAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ApplePayInfo;
      return this.apiClient.callApi(
        '/merchants/{merchantId}/paymentMethodSettings/{paymentMethodId}/getApplePayDomains', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the patchMerchantsMerchantIdPaymentMethodSettingsPaymentMethodId operation.
     * @callback module:api/PaymentMethodsMerchantLevelApi~patchMerchantsMerchantIdPaymentMethodSettingsPaymentMethodIdCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PaymentMethod} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update a payment method
     * Updates payment method details for the merchant account and the payment method identified in the path.  To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Payment methods read and write 
     * @param {String} merchantId The unique identifier of the merchant account.
     * @param {String} paymentMethodId The unique identifier of the payment method.
     * @param {Object} opts Optional parameters
     * @param {module:model/UpdatePaymentMethodInfo} [updatePaymentMethodInfo] 
     * @param {module:api/PaymentMethodsMerchantLevelApi~patchMerchantsMerchantIdPaymentMethodSettingsPaymentMethodIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PaymentMethod}
     */
    patchMerchantsMerchantIdPaymentMethodSettingsPaymentMethodId(merchantId, paymentMethodId, opts, callback) {
      opts = opts || {};
      let postBody = opts['updatePaymentMethodInfo'];
      // verify the required parameter 'merchantId' is set
      if (merchantId === undefined || merchantId === null) {
        throw new Error("Missing the required parameter 'merchantId' when calling patchMerchantsMerchantIdPaymentMethodSettingsPaymentMethodId");
      }
      // verify the required parameter 'paymentMethodId' is set
      if (paymentMethodId === undefined || paymentMethodId === null) {
        throw new Error("Missing the required parameter 'paymentMethodId' when calling patchMerchantsMerchantIdPaymentMethodSettingsPaymentMethodId");
      }

      let pathParams = {
        'merchantId': merchantId,
        'paymentMethodId': paymentMethodId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BasicAuth', 'ApiKeyAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = PaymentMethod;
      return this.apiClient.callApi(
        '/merchants/{merchantId}/paymentMethodSettings/{paymentMethodId}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the postMerchantsMerchantIdPaymentMethodSettings operation.
     * @callback module:api/PaymentMethodsMerchantLevelApi~postMerchantsMerchantIdPaymentMethodSettingsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PaymentMethod} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Request a payment method
     * Sends a request to add a new payment method to the merchant account identified in the path.  To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Payment methods read and write 
     * @param {String} merchantId The unique identifier of the merchant account.
     * @param {Object} opts Optional parameters
     * @param {module:model/PaymentMethodSetupInfo} [paymentMethodSetupInfo] 
     * @param {module:api/PaymentMethodsMerchantLevelApi~postMerchantsMerchantIdPaymentMethodSettingsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PaymentMethod}
     */
    postMerchantsMerchantIdPaymentMethodSettings(merchantId, opts, callback) {
      opts = opts || {};
      let postBody = opts['paymentMethodSetupInfo'];
      // verify the required parameter 'merchantId' is set
      if (merchantId === undefined || merchantId === null) {
        throw new Error("Missing the required parameter 'merchantId' when calling postMerchantsMerchantIdPaymentMethodSettings");
      }

      let pathParams = {
        'merchantId': merchantId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BasicAuth', 'ApiKeyAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = PaymentMethod;
      return this.apiClient.callApi(
        '/merchants/{merchantId}/paymentMethodSettings', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the postMerchantsMerchantIdPaymentMethodSettingsPaymentMethodIdAddApplePayDomains operation.
     * @callback module:api/PaymentMethodsMerchantLevelApi~postMerchantsMerchantIdPaymentMethodSettingsPaymentMethodIdAddApplePayDomainsCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Add an Apple Pay domain
     * Adds the new domain to the list of Apple Pay domains that are registered with the merchant account and the payment method identified in the path. For more information, see [Apple Pay documentation](https://docs.adyen.com/payment-methods/apple-pay/enable-apple-pay#register-merchant-domain).  To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Payment methods read and write 
     * @param {String} merchantId The unique identifier of the merchant account.
     * @param {String} paymentMethodId The unique identifier of the payment method.
     * @param {Object} opts Optional parameters
     * @param {module:model/ApplePayInfo} [applePayInfo] 
     * @param {module:api/PaymentMethodsMerchantLevelApi~postMerchantsMerchantIdPaymentMethodSettingsPaymentMethodIdAddApplePayDomainsCallback} callback The callback function, accepting three arguments: error, data, response
     */
    postMerchantsMerchantIdPaymentMethodSettingsPaymentMethodIdAddApplePayDomains(merchantId, paymentMethodId, opts, callback) {
      opts = opts || {};
      let postBody = opts['applePayInfo'];
      // verify the required parameter 'merchantId' is set
      if (merchantId === undefined || merchantId === null) {
        throw new Error("Missing the required parameter 'merchantId' when calling postMerchantsMerchantIdPaymentMethodSettingsPaymentMethodIdAddApplePayDomains");
      }
      // verify the required parameter 'paymentMethodId' is set
      if (paymentMethodId === undefined || paymentMethodId === null) {
        throw new Error("Missing the required parameter 'paymentMethodId' when calling postMerchantsMerchantIdPaymentMethodSettingsPaymentMethodIdAddApplePayDomains");
      }

      let pathParams = {
        'merchantId': merchantId,
        'paymentMethodId': paymentMethodId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BasicAuth', 'ApiKeyAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/merchants/{merchantId}/paymentMethodSettings/{paymentMethodId}/addApplePayDomains', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
