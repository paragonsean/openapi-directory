/**
 * Management API
 * Configure and manage your Adyen company and merchant accounts, stores, and payment terminals. ## Authentication Each request to the Management API must be signed with an API key. [Generate your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) in the Customer Area and then set this key to the `X-API-Key` header value.  To access the live endpoints, you need to generate a new API key in your live Customer Area. ## Versioning  Management API handles versioning as part of the endpoint URL. For example, to send a request to this version of the `/companies/{companyId}/webhooks` endpoint, use:  ```text https://management-test.adyen.com/v3/companies/{companyId}/webhooks ```  ## Going live  To access the live endpoints, you need an API key from your live Customer Area. Use this API key to make requests to:  ```text https://management-live.adyen.com/v3 ```  ## Release notes Have a look at the [release notes](https://docs.adyen.com/release-notes/management-api) to find out what changed in this version!
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AllowedOrigin from '../model/AllowedOrigin';
import AllowedOriginsResponse from '../model/AllowedOriginsResponse';
import RestServiceError from '../model/RestServiceError';

/**
* AllowedOriginsCompanyLevel service.
* @module api/AllowedOriginsCompanyLevelApi
* @version 3
*/
export default class AllowedOriginsCompanyLevelApi {

    /**
    * Constructs a new AllowedOriginsCompanyLevelApi. 
    * @alias module:api/AllowedOriginsCompanyLevelApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the deleteCompaniesCompanyIdApiCredentialsApiCredentialIdAllowedOriginsOriginId operation.
     * @callback module:api/AllowedOriginsCompanyLevelApi~deleteCompaniesCompanyIdApiCredentialsApiCredentialIdAllowedOriginsOriginIdCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete an allowed origin
     * Removes the [allowed origin](https://docs.adyen.com/development-resources/client-side-authentication#allowed-origins) identified in the path. As soon as an allowed origin is removed, we no longer accept client-side requests from that domain.  To make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—API credentials read and write
     * @param {String} companyId The unique identifier of the company account.
     * @param {String} apiCredentialId Unique identifier of the API credential.
     * @param {String} originId Unique identifier of the allowed origin.
     * @param {module:api/AllowedOriginsCompanyLevelApi~deleteCompaniesCompanyIdApiCredentialsApiCredentialIdAllowedOriginsOriginIdCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteCompaniesCompanyIdApiCredentialsApiCredentialIdAllowedOriginsOriginId(companyId, apiCredentialId, originId, callback) {
      let postBody = null;
      // verify the required parameter 'companyId' is set
      if (companyId === undefined || companyId === null) {
        throw new Error("Missing the required parameter 'companyId' when calling deleteCompaniesCompanyIdApiCredentialsApiCredentialIdAllowedOriginsOriginId");
      }
      // verify the required parameter 'apiCredentialId' is set
      if (apiCredentialId === undefined || apiCredentialId === null) {
        throw new Error("Missing the required parameter 'apiCredentialId' when calling deleteCompaniesCompanyIdApiCredentialsApiCredentialIdAllowedOriginsOriginId");
      }
      // verify the required parameter 'originId' is set
      if (originId === undefined || originId === null) {
        throw new Error("Missing the required parameter 'originId' when calling deleteCompaniesCompanyIdApiCredentialsApiCredentialIdAllowedOriginsOriginId");
      }

      let pathParams = {
        'companyId': companyId,
        'apiCredentialId': apiCredentialId,
        'originId': originId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BasicAuth', 'ApiKeyAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/companies/{companyId}/apiCredentials/{apiCredentialId}/allowedOrigins/{originId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getCompaniesCompanyIdApiCredentialsApiCredentialIdAllowedOrigins operation.
     * @callback module:api/AllowedOriginsCompanyLevelApi~getCompaniesCompanyIdApiCredentialsApiCredentialIdAllowedOriginsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AllowedOriginsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a list of allowed origins
     * Returns the list of [allowed origins](https://docs.adyen.com/development-resources/client-side-authentication#allowed-origins) for the API credential identified in the path.  To make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—API credentials read and write
     * @param {String} companyId The unique identifier of the company account.
     * @param {String} apiCredentialId Unique identifier of the API credential.
     * @param {module:api/AllowedOriginsCompanyLevelApi~getCompaniesCompanyIdApiCredentialsApiCredentialIdAllowedOriginsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AllowedOriginsResponse}
     */
    getCompaniesCompanyIdApiCredentialsApiCredentialIdAllowedOrigins(companyId, apiCredentialId, callback) {
      let postBody = null;
      // verify the required parameter 'companyId' is set
      if (companyId === undefined || companyId === null) {
        throw new Error("Missing the required parameter 'companyId' when calling getCompaniesCompanyIdApiCredentialsApiCredentialIdAllowedOrigins");
      }
      // verify the required parameter 'apiCredentialId' is set
      if (apiCredentialId === undefined || apiCredentialId === null) {
        throw new Error("Missing the required parameter 'apiCredentialId' when calling getCompaniesCompanyIdApiCredentialsApiCredentialIdAllowedOrigins");
      }

      let pathParams = {
        'companyId': companyId,
        'apiCredentialId': apiCredentialId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BasicAuth', 'ApiKeyAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AllowedOriginsResponse;
      return this.apiClient.callApi(
        '/companies/{companyId}/apiCredentials/{apiCredentialId}/allowedOrigins', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getCompaniesCompanyIdApiCredentialsApiCredentialIdAllowedOriginsOriginId operation.
     * @callback module:api/AllowedOriginsCompanyLevelApi~getCompaniesCompanyIdApiCredentialsApiCredentialIdAllowedOriginsOriginIdCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AllowedOrigin} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get an allowed origin
     * Returns the [allowed origin](https://docs.adyen.com/development-resources/client-side-authentication#allowed-origins) identified in the path.  To make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—API credentials read and write
     * @param {String} companyId The unique identifier of the company account.
     * @param {String} apiCredentialId Unique identifier of the API credential.
     * @param {String} originId Unique identifier of the allowed origin.
     * @param {module:api/AllowedOriginsCompanyLevelApi~getCompaniesCompanyIdApiCredentialsApiCredentialIdAllowedOriginsOriginIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AllowedOrigin}
     */
    getCompaniesCompanyIdApiCredentialsApiCredentialIdAllowedOriginsOriginId(companyId, apiCredentialId, originId, callback) {
      let postBody = null;
      // verify the required parameter 'companyId' is set
      if (companyId === undefined || companyId === null) {
        throw new Error("Missing the required parameter 'companyId' when calling getCompaniesCompanyIdApiCredentialsApiCredentialIdAllowedOriginsOriginId");
      }
      // verify the required parameter 'apiCredentialId' is set
      if (apiCredentialId === undefined || apiCredentialId === null) {
        throw new Error("Missing the required parameter 'apiCredentialId' when calling getCompaniesCompanyIdApiCredentialsApiCredentialIdAllowedOriginsOriginId");
      }
      // verify the required parameter 'originId' is set
      if (originId === undefined || originId === null) {
        throw new Error("Missing the required parameter 'originId' when calling getCompaniesCompanyIdApiCredentialsApiCredentialIdAllowedOriginsOriginId");
      }

      let pathParams = {
        'companyId': companyId,
        'apiCredentialId': apiCredentialId,
        'originId': originId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BasicAuth', 'ApiKeyAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AllowedOrigin;
      return this.apiClient.callApi(
        '/companies/{companyId}/apiCredentials/{apiCredentialId}/allowedOrigins/{originId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the postCompaniesCompanyIdApiCredentialsApiCredentialIdAllowedOrigins operation.
     * @callback module:api/AllowedOriginsCompanyLevelApi~postCompaniesCompanyIdApiCredentialsApiCredentialIdAllowedOriginsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AllowedOriginsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create an allowed origin
     * Adds a new [allowed origin](https://docs.adyen.com/development-resources/client-side-authentication#allowed-origins) to the API credential's list of allowed origins.  To make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—API credentials read and write
     * @param {String} companyId The unique identifier of the company account.
     * @param {String} apiCredentialId Unique identifier of the API credential.
     * @param {Object} opts Optional parameters
     * @param {module:model/AllowedOrigin} [allowedOrigin] 
     * @param {module:api/AllowedOriginsCompanyLevelApi~postCompaniesCompanyIdApiCredentialsApiCredentialIdAllowedOriginsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AllowedOriginsResponse}
     */
    postCompaniesCompanyIdApiCredentialsApiCredentialIdAllowedOrigins(companyId, apiCredentialId, opts, callback) {
      opts = opts || {};
      let postBody = opts['allowedOrigin'];
      // verify the required parameter 'companyId' is set
      if (companyId === undefined || companyId === null) {
        throw new Error("Missing the required parameter 'companyId' when calling postCompaniesCompanyIdApiCredentialsApiCredentialIdAllowedOrigins");
      }
      // verify the required parameter 'apiCredentialId' is set
      if (apiCredentialId === undefined || apiCredentialId === null) {
        throw new Error("Missing the required parameter 'apiCredentialId' when calling postCompaniesCompanyIdApiCredentialsApiCredentialIdAllowedOrigins");
      }

      let pathParams = {
        'companyId': companyId,
        'apiCredentialId': apiCredentialId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BasicAuth', 'ApiKeyAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = AllowedOriginsResponse;
      return this.apiClient.callApi(
        '/companies/{companyId}/apiCredentials/{apiCredentialId}/allowedOrigins', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
