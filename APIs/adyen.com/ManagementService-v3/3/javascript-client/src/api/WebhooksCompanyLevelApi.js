/**
 * Management API
 * Configure and manage your Adyen company and merchant accounts, stores, and payment terminals. ## Authentication Each request to the Management API must be signed with an API key. [Generate your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) in the Customer Area and then set this key to the `X-API-Key` header value.  To access the live endpoints, you need to generate a new API key in your live Customer Area. ## Versioning  Management API handles versioning as part of the endpoint URL. For example, to send a request to this version of the `/companies/{companyId}/webhooks` endpoint, use:  ```text https://management-test.adyen.com/v3/companies/{companyId}/webhooks ```  ## Going live  To access the live endpoints, you need an API key from your live Customer Area. Use this API key to make requests to:  ```text https://management-live.adyen.com/v3 ```  ## Release notes Have a look at the [release notes](https://docs.adyen.com/release-notes/management-api) to find out what changed in this version!
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CreateCompanyWebhookRequest from '../model/CreateCompanyWebhookRequest';
import GenerateHmacKeyResponse from '../model/GenerateHmacKeyResponse';
import ListWebhooksResponse from '../model/ListWebhooksResponse';
import RestServiceError from '../model/RestServiceError';
import TestCompanyWebhookRequest from '../model/TestCompanyWebhookRequest';
import TestWebhookResponse from '../model/TestWebhookResponse';
import UpdateCompanyWebhookRequest from '../model/UpdateCompanyWebhookRequest';
import Webhook from '../model/Webhook';

/**
* WebhooksCompanyLevel service.
* @module api/WebhooksCompanyLevelApi
* @version 3
*/
export default class WebhooksCompanyLevelApi {

    /**
    * Constructs a new WebhooksCompanyLevelApi. 
    * @alias module:api/WebhooksCompanyLevelApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the deleteCompaniesCompanyIdWebhooksWebhookId operation.
     * @callback module:api/WebhooksCompanyLevelApi~deleteCompaniesCompanyIdWebhooksWebhookIdCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Remove a webhook
     * Remove the configuration for the webhook identified in the path.  To make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Webhooks read and write
     * @param {String} companyId The unique identifier of the company account.
     * @param {String} webhookId Unique identifier of the webhook configuration.
     * @param {module:api/WebhooksCompanyLevelApi~deleteCompaniesCompanyIdWebhooksWebhookIdCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteCompaniesCompanyIdWebhooksWebhookId(companyId, webhookId, callback) {
      let postBody = null;
      // verify the required parameter 'companyId' is set
      if (companyId === undefined || companyId === null) {
        throw new Error("Missing the required parameter 'companyId' when calling deleteCompaniesCompanyIdWebhooksWebhookId");
      }
      // verify the required parameter 'webhookId' is set
      if (webhookId === undefined || webhookId === null) {
        throw new Error("Missing the required parameter 'webhookId' when calling deleteCompaniesCompanyIdWebhooksWebhookId");
      }

      let pathParams = {
        'companyId': companyId,
        'webhookId': webhookId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BasicAuth', 'ApiKeyAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/companies/{companyId}/webhooks/{webhookId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getCompaniesCompanyIdWebhooks operation.
     * @callback module:api/WebhooksCompanyLevelApi~getCompaniesCompanyIdWebhooksCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListWebhooksResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List all webhooks
     * Lists all webhook configurations for the company account.  To make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Webhooks read * Management API—Webhooks read and write
     * @param {String} companyId Unique identifier of the [company account](https://docs.adyen.com/account/account-structure#company-account).
     * @param {Object} opts Optional parameters
     * @param {Number} [pageNumber] The number of the page to fetch.
     * @param {Number} [pageSize] The number of items to have on a page, maximum 100. The default is 10 items on a page.
     * @param {module:api/WebhooksCompanyLevelApi~getCompaniesCompanyIdWebhooksCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListWebhooksResponse}
     */
    getCompaniesCompanyIdWebhooks(companyId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'companyId' is set
      if (companyId === undefined || companyId === null) {
        throw new Error("Missing the required parameter 'companyId' when calling getCompaniesCompanyIdWebhooks");
      }

      let pathParams = {
        'companyId': companyId
      };
      let queryParams = {
        'pageNumber': opts['pageNumber'],
        'pageSize': opts['pageSize']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BasicAuth', 'ApiKeyAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListWebhooksResponse;
      return this.apiClient.callApi(
        '/companies/{companyId}/webhooks', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getCompaniesCompanyIdWebhooksWebhookId operation.
     * @callback module:api/WebhooksCompanyLevelApi~getCompaniesCompanyIdWebhooksWebhookIdCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Webhook} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a webhook
     * Returns the configuration for the webhook identified in the path.  To make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Webhooks read * Management API—Webhooks read and write
     * @param {String} companyId Unique identifier of the [company account](https://docs.adyen.com/account/account-structure#company-account).
     * @param {String} webhookId Unique identifier of the webhook configuration.
     * @param {module:api/WebhooksCompanyLevelApi~getCompaniesCompanyIdWebhooksWebhookIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Webhook}
     */
    getCompaniesCompanyIdWebhooksWebhookId(companyId, webhookId, callback) {
      let postBody = null;
      // verify the required parameter 'companyId' is set
      if (companyId === undefined || companyId === null) {
        throw new Error("Missing the required parameter 'companyId' when calling getCompaniesCompanyIdWebhooksWebhookId");
      }
      // verify the required parameter 'webhookId' is set
      if (webhookId === undefined || webhookId === null) {
        throw new Error("Missing the required parameter 'webhookId' when calling getCompaniesCompanyIdWebhooksWebhookId");
      }

      let pathParams = {
        'companyId': companyId,
        'webhookId': webhookId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BasicAuth', 'ApiKeyAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Webhook;
      return this.apiClient.callApi(
        '/companies/{companyId}/webhooks/{webhookId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the patchCompaniesCompanyIdWebhooksWebhookId operation.
     * @callback module:api/WebhooksCompanyLevelApi~patchCompaniesCompanyIdWebhooksWebhookIdCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Webhook} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update a webhook
     * Make changes to the configuration of the webhook identified in the path. The request contains the new values you want to have in the webhook configuration. The response contains the full configuration for the webhook, which includes the new values from the request.  To make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Webhooks read and write
     * @param {String} companyId The unique identifier of the company account.
     * @param {String} webhookId Unique identifier of the webhook configuration.
     * @param {Object} opts Optional parameters
     * @param {module:model/UpdateCompanyWebhookRequest} [updateCompanyWebhookRequest] 
     * @param {module:api/WebhooksCompanyLevelApi~patchCompaniesCompanyIdWebhooksWebhookIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Webhook}
     */
    patchCompaniesCompanyIdWebhooksWebhookId(companyId, webhookId, opts, callback) {
      opts = opts || {};
      let postBody = opts['updateCompanyWebhookRequest'];
      // verify the required parameter 'companyId' is set
      if (companyId === undefined || companyId === null) {
        throw new Error("Missing the required parameter 'companyId' when calling patchCompaniesCompanyIdWebhooksWebhookId");
      }
      // verify the required parameter 'webhookId' is set
      if (webhookId === undefined || webhookId === null) {
        throw new Error("Missing the required parameter 'webhookId' when calling patchCompaniesCompanyIdWebhooksWebhookId");
      }

      let pathParams = {
        'companyId': companyId,
        'webhookId': webhookId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BasicAuth', 'ApiKeyAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Webhook;
      return this.apiClient.callApi(
        '/companies/{companyId}/webhooks/{webhookId}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the postCompaniesCompanyIdWebhooks operation.
     * @callback module:api/WebhooksCompanyLevelApi~postCompaniesCompanyIdWebhooksCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Webhook} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Set up a webhook
     * Subscribe to receive webhook notifications about events related to your company account. You can add basic authentication to make sure the data is secure.  To make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Webhooks read and write
     * @param {String} companyId Unique identifier of the [company account](https://docs.adyen.com/account/account-structure#company-account).
     * @param {Object} opts Optional parameters
     * @param {module:model/CreateCompanyWebhookRequest} [createCompanyWebhookRequest] 
     * @param {module:api/WebhooksCompanyLevelApi~postCompaniesCompanyIdWebhooksCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Webhook}
     */
    postCompaniesCompanyIdWebhooks(companyId, opts, callback) {
      opts = opts || {};
      let postBody = opts['createCompanyWebhookRequest'];
      // verify the required parameter 'companyId' is set
      if (companyId === undefined || companyId === null) {
        throw new Error("Missing the required parameter 'companyId' when calling postCompaniesCompanyIdWebhooks");
      }

      let pathParams = {
        'companyId': companyId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BasicAuth', 'ApiKeyAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Webhook;
      return this.apiClient.callApi(
        '/companies/{companyId}/webhooks', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the postCompaniesCompanyIdWebhooksWebhookIdGenerateHmac operation.
     * @callback module:api/WebhooksCompanyLevelApi~postCompaniesCompanyIdWebhooksWebhookIdGenerateHmacCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GenerateHmacKeyResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Generate an HMAC key
     * Returns an [HMAC key](https://en.wikipedia.org/wiki/HMAC) for the webhook identified in the path. This key allows you to check the integrity and the origin of the notifications you receive.By creating an HMAC key, you start receiving [HMAC-signed notifications](https://docs.adyen.com/development-resources/webhooks/verify-hmac-signatures#enable-hmac-signatures) from Adyen. Find out more about how to [verify HMAC signatures](https://docs.adyen.com/development-resources/webhooks/verify-hmac-signatures).  To make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Webhooks read and write
     * @param {String} companyId The unique identifier of the company account.
     * @param {String} webhookId Unique identifier of the webhook configuration.
     * @param {module:api/WebhooksCompanyLevelApi~postCompaniesCompanyIdWebhooksWebhookIdGenerateHmacCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GenerateHmacKeyResponse}
     */
    postCompaniesCompanyIdWebhooksWebhookIdGenerateHmac(companyId, webhookId, callback) {
      let postBody = null;
      // verify the required parameter 'companyId' is set
      if (companyId === undefined || companyId === null) {
        throw new Error("Missing the required parameter 'companyId' when calling postCompaniesCompanyIdWebhooksWebhookIdGenerateHmac");
      }
      // verify the required parameter 'webhookId' is set
      if (webhookId === undefined || webhookId === null) {
        throw new Error("Missing the required parameter 'webhookId' when calling postCompaniesCompanyIdWebhooksWebhookIdGenerateHmac");
      }

      let pathParams = {
        'companyId': companyId,
        'webhookId': webhookId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BasicAuth', 'ApiKeyAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GenerateHmacKeyResponse;
      return this.apiClient.callApi(
        '/companies/{companyId}/webhooks/{webhookId}/generateHmac', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the postCompaniesCompanyIdWebhooksWebhookIdTest operation.
     * @callback module:api/WebhooksCompanyLevelApi~postCompaniesCompanyIdWebhooksWebhookIdTestCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TestWebhookResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Test a webhook
     * Sends sample notifications to test if the webhook is set up correctly.  We send sample notifications for maximum 20 of the merchant accounts that the webhook is configured for. If the webhook is configured for more than 20 merchant accounts, use the `merchantIds` array to specify a subset of the merchant accounts for which to send test notifications.  We send four test notifications for each event code you choose. They cover success and failure scenarios for the hard-coded currencies EUR and GBP, regardless of the currencies configured in the merchant accounts. For custom notifications, we only send the specified custom notification.  The response describes the result of the test. The `status` field tells you if the test was successful or not. You can use the other response fields to troubleshoot unsuccessful tests.  To make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Webhooks read and write
     * @param {String} companyId The unique identifier of the company account.
     * @param {String} webhookId Unique identifier of the webhook configuration.
     * @param {Object} opts Optional parameters
     * @param {module:model/TestCompanyWebhookRequest} [testCompanyWebhookRequest] 
     * @param {module:api/WebhooksCompanyLevelApi~postCompaniesCompanyIdWebhooksWebhookIdTestCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TestWebhookResponse}
     */
    postCompaniesCompanyIdWebhooksWebhookIdTest(companyId, webhookId, opts, callback) {
      opts = opts || {};
      let postBody = opts['testCompanyWebhookRequest'];
      // verify the required parameter 'companyId' is set
      if (companyId === undefined || companyId === null) {
        throw new Error("Missing the required parameter 'companyId' when calling postCompaniesCompanyIdWebhooksWebhookIdTest");
      }
      // verify the required parameter 'webhookId' is set
      if (webhookId === undefined || webhookId === null) {
        throw new Error("Missing the required parameter 'webhookId' when calling postCompaniesCompanyIdWebhooksWebhookIdTest");
      }

      let pathParams = {
        'companyId': companyId,
        'webhookId': webhookId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BasicAuth', 'ApiKeyAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = TestWebhookResponse;
      return this.apiClient.callApi(
        '/companies/{companyId}/webhooks/{webhookId}/test', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
