/**
 * Management API
 * Configure and manage your Adyen company and merchant accounts, stores, and payment terminals. ## Authentication Each request to the Management API must be signed with an API key. [Generate your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) in the Customer Area and then set this key to the `X-API-Key` header value.  To access the live endpoints, you need to generate a new API key in your live Customer Area. ## Versioning  Management API handles versioning as part of the endpoint URL. For example, to send a request to this version of the `/companies/{companyId}/webhooks` endpoint, use:  ```text https://management-test.adyen.com/v3/companies/{companyId}/webhooks ```  ## Going live  To access the live endpoints, you need an API key from your live Customer Area. Use this API key to make requests to:  ```text https://management-live.adyen.com/v3 ```  ## Release notes Have a look at the [release notes](https://docs.adyen.com/release-notes/management-api) to find out what changed in this version!
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import RestServiceError from '../model/RestServiceError';
import SplitConfiguration from '../model/SplitConfiguration';
import SplitConfigurationList from '../model/SplitConfigurationList';
import SplitConfigurationRule from '../model/SplitConfigurationRule';
import UpdateSplitConfigurationLogicRequest from '../model/UpdateSplitConfigurationLogicRequest';
import UpdateSplitConfigurationRequest from '../model/UpdateSplitConfigurationRequest';
import UpdateSplitConfigurationRuleRequest from '../model/UpdateSplitConfigurationRuleRequest';

/**
* SplitConfigurationMerchantLevel service.
* @module api/SplitConfigurationMerchantLevelApi
* @version 3
*/
export default class SplitConfigurationMerchantLevelApi {

    /**
    * Constructs a new SplitConfigurationMerchantLevelApi. 
    * @alias module:api/SplitConfigurationMerchantLevelApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the deleteMerchantsMerchantIdSplitConfigurationsSplitConfigurationId operation.
     * @callback module:api/SplitConfigurationMerchantLevelApi~deleteMerchantsMerchantIdSplitConfigurationsSplitConfigurationIdCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SplitConfiguration} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete a split configuration
     * Deletes the split configuration specified in the path.  To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API - SplitConfiguration read and write
     * @param {String} merchantId The unique identifier of the merchant account.
     * @param {String} splitConfigurationId The unique identifier of the split configuration.
     * @param {module:api/SplitConfigurationMerchantLevelApi~deleteMerchantsMerchantIdSplitConfigurationsSplitConfigurationIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SplitConfiguration}
     */
    deleteMerchantsMerchantIdSplitConfigurationsSplitConfigurationId(merchantId, splitConfigurationId, callback) {
      let postBody = null;
      // verify the required parameter 'merchantId' is set
      if (merchantId === undefined || merchantId === null) {
        throw new Error("Missing the required parameter 'merchantId' when calling deleteMerchantsMerchantIdSplitConfigurationsSplitConfigurationId");
      }
      // verify the required parameter 'splitConfigurationId' is set
      if (splitConfigurationId === undefined || splitConfigurationId === null) {
        throw new Error("Missing the required parameter 'splitConfigurationId' when calling deleteMerchantsMerchantIdSplitConfigurationsSplitConfigurationId");
      }

      let pathParams = {
        'merchantId': merchantId,
        'splitConfigurationId': splitConfigurationId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BasicAuth', 'ApiKeyAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = SplitConfiguration;
      return this.apiClient.callApi(
        '/merchants/{merchantId}/splitConfigurations/{splitConfigurationId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteMerchantsMerchantIdSplitConfigurationsSplitConfigurationIdRulesRuleId operation.
     * @callback module:api/SplitConfigurationMerchantLevelApi~deleteMerchantsMerchantIdSplitConfigurationsSplitConfigurationIdRulesRuleIdCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SplitConfiguration} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete a split configuration rule
     * Deletes the split configuration rule specified in the path.  To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API - SplitConfiguration read and write
     * @param {String} merchantId The unique identifier of the merchant account.
     * @param {String} splitConfigurationId The unique identifier of the split configuration.
     * @param {String} ruleId 
     * @param {module:api/SplitConfigurationMerchantLevelApi~deleteMerchantsMerchantIdSplitConfigurationsSplitConfigurationIdRulesRuleIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SplitConfiguration}
     */
    deleteMerchantsMerchantIdSplitConfigurationsSplitConfigurationIdRulesRuleId(merchantId, splitConfigurationId, ruleId, callback) {
      let postBody = null;
      // verify the required parameter 'merchantId' is set
      if (merchantId === undefined || merchantId === null) {
        throw new Error("Missing the required parameter 'merchantId' when calling deleteMerchantsMerchantIdSplitConfigurationsSplitConfigurationIdRulesRuleId");
      }
      // verify the required parameter 'splitConfigurationId' is set
      if (splitConfigurationId === undefined || splitConfigurationId === null) {
        throw new Error("Missing the required parameter 'splitConfigurationId' when calling deleteMerchantsMerchantIdSplitConfigurationsSplitConfigurationIdRulesRuleId");
      }
      // verify the required parameter 'ruleId' is set
      if (ruleId === undefined || ruleId === null) {
        throw new Error("Missing the required parameter 'ruleId' when calling deleteMerchantsMerchantIdSplitConfigurationsSplitConfigurationIdRulesRuleId");
      }

      let pathParams = {
        'merchantId': merchantId,
        'splitConfigurationId': splitConfigurationId,
        'ruleId': ruleId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BasicAuth', 'ApiKeyAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = SplitConfiguration;
      return this.apiClient.callApi(
        '/merchants/{merchantId}/splitConfigurations/{splitConfigurationId}/rules/{ruleId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getMerchantsMerchantIdSplitConfigurations operation.
     * @callback module:api/SplitConfigurationMerchantLevelApi~getMerchantsMerchantIdSplitConfigurationsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SplitConfigurationList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a list of split configurations
     * Returns the list of split configurations for the merchant account.  To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API - SplitConfiguration read and write
     * @param {String} merchantId The unique identifier of the merchant account.
     * @param {module:api/SplitConfigurationMerchantLevelApi~getMerchantsMerchantIdSplitConfigurationsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SplitConfigurationList}
     */
    getMerchantsMerchantIdSplitConfigurations(merchantId, callback) {
      let postBody = null;
      // verify the required parameter 'merchantId' is set
      if (merchantId === undefined || merchantId === null) {
        throw new Error("Missing the required parameter 'merchantId' when calling getMerchantsMerchantIdSplitConfigurations");
      }

      let pathParams = {
        'merchantId': merchantId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BasicAuth', 'ApiKeyAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = SplitConfigurationList;
      return this.apiClient.callApi(
        '/merchants/{merchantId}/splitConfigurations', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getMerchantsMerchantIdSplitConfigurationsSplitConfigurationId operation.
     * @callback module:api/SplitConfigurationMerchantLevelApi~getMerchantsMerchantIdSplitConfigurationsSplitConfigurationIdCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SplitConfiguration} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a split configuration
     * Returns the split configuration specified in the path.  To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API - SplitConfiguration read and write
     * @param {String} merchantId The unique identifier of the merchant account.
     * @param {String} splitConfigurationId The unique identifier of the split configuration.
     * @param {module:api/SplitConfigurationMerchantLevelApi~getMerchantsMerchantIdSplitConfigurationsSplitConfigurationIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SplitConfiguration}
     */
    getMerchantsMerchantIdSplitConfigurationsSplitConfigurationId(merchantId, splitConfigurationId, callback) {
      let postBody = null;
      // verify the required parameter 'merchantId' is set
      if (merchantId === undefined || merchantId === null) {
        throw new Error("Missing the required parameter 'merchantId' when calling getMerchantsMerchantIdSplitConfigurationsSplitConfigurationId");
      }
      // verify the required parameter 'splitConfigurationId' is set
      if (splitConfigurationId === undefined || splitConfigurationId === null) {
        throw new Error("Missing the required parameter 'splitConfigurationId' when calling getMerchantsMerchantIdSplitConfigurationsSplitConfigurationId");
      }

      let pathParams = {
        'merchantId': merchantId,
        'splitConfigurationId': splitConfigurationId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BasicAuth', 'ApiKeyAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = SplitConfiguration;
      return this.apiClient.callApi(
        '/merchants/{merchantId}/splitConfigurations/{splitConfigurationId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the patchMerchantsMerchantIdSplitConfigurationsSplitConfigurationId operation.
     * @callback module:api/SplitConfigurationMerchantLevelApi~patchMerchantsMerchantIdSplitConfigurationsSplitConfigurationIdCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SplitConfiguration} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update split configuration description
     * Changes the description of the split configuration specified in the path.  To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API - SplitConfiguration read and write
     * @param {String} merchantId The unique identifier of the merchant account.
     * @param {String} splitConfigurationId The unique identifier of the split configuration.
     * @param {Object} opts Optional parameters
     * @param {module:model/UpdateSplitConfigurationRequest} [updateSplitConfigurationRequest] 
     * @param {module:api/SplitConfigurationMerchantLevelApi~patchMerchantsMerchantIdSplitConfigurationsSplitConfigurationIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SplitConfiguration}
     */
    patchMerchantsMerchantIdSplitConfigurationsSplitConfigurationId(merchantId, splitConfigurationId, opts, callback) {
      opts = opts || {};
      let postBody = opts['updateSplitConfigurationRequest'];
      // verify the required parameter 'merchantId' is set
      if (merchantId === undefined || merchantId === null) {
        throw new Error("Missing the required parameter 'merchantId' when calling patchMerchantsMerchantIdSplitConfigurationsSplitConfigurationId");
      }
      // verify the required parameter 'splitConfigurationId' is set
      if (splitConfigurationId === undefined || splitConfigurationId === null) {
        throw new Error("Missing the required parameter 'splitConfigurationId' when calling patchMerchantsMerchantIdSplitConfigurationsSplitConfigurationId");
      }

      let pathParams = {
        'merchantId': merchantId,
        'splitConfigurationId': splitConfigurationId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BasicAuth', 'ApiKeyAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = SplitConfiguration;
      return this.apiClient.callApi(
        '/merchants/{merchantId}/splitConfigurations/{splitConfigurationId}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the patchMerchantsMerchantIdSplitConfigurationsSplitConfigurationIdRulesRuleId operation.
     * @callback module:api/SplitConfigurationMerchantLevelApi~patchMerchantsMerchantIdSplitConfigurationsSplitConfigurationIdRulesRuleIdCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SplitConfiguration} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update split conditions
     * Changes the conditions of the split configuration rule specified in the path.  To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API - SplitConfiguration read and write
     * @param {String} merchantId The unique identifier of the merchant account.
     * @param {String} splitConfigurationId The identifier of the split configuration.
     * @param {String} ruleId The unique identifier of the split configuration rule.
     * @param {Object} opts Optional parameters
     * @param {module:model/UpdateSplitConfigurationRuleRequest} [updateSplitConfigurationRuleRequest] 
     * @param {module:api/SplitConfigurationMerchantLevelApi~patchMerchantsMerchantIdSplitConfigurationsSplitConfigurationIdRulesRuleIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SplitConfiguration}
     */
    patchMerchantsMerchantIdSplitConfigurationsSplitConfigurationIdRulesRuleId(merchantId, splitConfigurationId, ruleId, opts, callback) {
      opts = opts || {};
      let postBody = opts['updateSplitConfigurationRuleRequest'];
      // verify the required parameter 'merchantId' is set
      if (merchantId === undefined || merchantId === null) {
        throw new Error("Missing the required parameter 'merchantId' when calling patchMerchantsMerchantIdSplitConfigurationsSplitConfigurationIdRulesRuleId");
      }
      // verify the required parameter 'splitConfigurationId' is set
      if (splitConfigurationId === undefined || splitConfigurationId === null) {
        throw new Error("Missing the required parameter 'splitConfigurationId' when calling patchMerchantsMerchantIdSplitConfigurationsSplitConfigurationIdRulesRuleId");
      }
      // verify the required parameter 'ruleId' is set
      if (ruleId === undefined || ruleId === null) {
        throw new Error("Missing the required parameter 'ruleId' when calling patchMerchantsMerchantIdSplitConfigurationsSplitConfigurationIdRulesRuleId");
      }

      let pathParams = {
        'merchantId': merchantId,
        'splitConfigurationId': splitConfigurationId,
        'ruleId': ruleId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BasicAuth', 'ApiKeyAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = SplitConfiguration;
      return this.apiClient.callApi(
        '/merchants/{merchantId}/splitConfigurations/{splitConfigurationId}/rules/{ruleId}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the patchMerchantsMerchantIdSplitConfigurationsSplitConfigurationIdRulesRuleIdSplitLogicSplitLogicId operation.
     * @callback module:api/SplitConfigurationMerchantLevelApi~patchMerchantsMerchantIdSplitConfigurationsSplitConfigurationIdRulesRuleIdSplitLogicSplitLogicIdCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SplitConfiguration} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update the split logic
     * Changes the split logic specified in the path.  To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API - SplitConfiguration read and write
     * @param {String} merchantId The unique identifier of the merchant account.
     * @param {String} splitConfigurationId The unique identifier of the split configuration.
     * @param {String} ruleId The unique identifier of the split configuration rule.
     * @param {String} splitLogicId The unique identifier of the split configuration split.
     * @param {Object} opts Optional parameters
     * @param {module:model/UpdateSplitConfigurationLogicRequest} [updateSplitConfigurationLogicRequest] 
     * @param {module:api/SplitConfigurationMerchantLevelApi~patchMerchantsMerchantIdSplitConfigurationsSplitConfigurationIdRulesRuleIdSplitLogicSplitLogicIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SplitConfiguration}
     */
    patchMerchantsMerchantIdSplitConfigurationsSplitConfigurationIdRulesRuleIdSplitLogicSplitLogicId(merchantId, splitConfigurationId, ruleId, splitLogicId, opts, callback) {
      opts = opts || {};
      let postBody = opts['updateSplitConfigurationLogicRequest'];
      // verify the required parameter 'merchantId' is set
      if (merchantId === undefined || merchantId === null) {
        throw new Error("Missing the required parameter 'merchantId' when calling patchMerchantsMerchantIdSplitConfigurationsSplitConfigurationIdRulesRuleIdSplitLogicSplitLogicId");
      }
      // verify the required parameter 'splitConfigurationId' is set
      if (splitConfigurationId === undefined || splitConfigurationId === null) {
        throw new Error("Missing the required parameter 'splitConfigurationId' when calling patchMerchantsMerchantIdSplitConfigurationsSplitConfigurationIdRulesRuleIdSplitLogicSplitLogicId");
      }
      // verify the required parameter 'ruleId' is set
      if (ruleId === undefined || ruleId === null) {
        throw new Error("Missing the required parameter 'ruleId' when calling patchMerchantsMerchantIdSplitConfigurationsSplitConfigurationIdRulesRuleIdSplitLogicSplitLogicId");
      }
      // verify the required parameter 'splitLogicId' is set
      if (splitLogicId === undefined || splitLogicId === null) {
        throw new Error("Missing the required parameter 'splitLogicId' when calling patchMerchantsMerchantIdSplitConfigurationsSplitConfigurationIdRulesRuleIdSplitLogicSplitLogicId");
      }

      let pathParams = {
        'merchantId': merchantId,
        'splitConfigurationId': splitConfigurationId,
        'ruleId': ruleId,
        'splitLogicId': splitLogicId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BasicAuth', 'ApiKeyAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = SplitConfiguration;
      return this.apiClient.callApi(
        '/merchants/{merchantId}/splitConfigurations/{splitConfigurationId}/rules/{ruleId}/splitLogic/{splitLogicId}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the postMerchantsMerchantIdSplitConfigurations operation.
     * @callback module:api/SplitConfigurationMerchantLevelApi~postMerchantsMerchantIdSplitConfigurationsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SplitConfiguration} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a split configuration
     * Creates a split configuration for the merchant account specified in the path.  To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API - SplitConfiguration read and write
     * @param {String} merchantId The unique identifier of the merchant account.
     * @param {Object} opts Optional parameters
     * @param {module:model/SplitConfiguration} [splitConfiguration] 
     * @param {module:api/SplitConfigurationMerchantLevelApi~postMerchantsMerchantIdSplitConfigurationsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SplitConfiguration}
     */
    postMerchantsMerchantIdSplitConfigurations(merchantId, opts, callback) {
      opts = opts || {};
      let postBody = opts['splitConfiguration'];
      // verify the required parameter 'merchantId' is set
      if (merchantId === undefined || merchantId === null) {
        throw new Error("Missing the required parameter 'merchantId' when calling postMerchantsMerchantIdSplitConfigurations");
      }

      let pathParams = {
        'merchantId': merchantId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BasicAuth', 'ApiKeyAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = SplitConfiguration;
      return this.apiClient.callApi(
        '/merchants/{merchantId}/splitConfigurations', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the postMerchantsMerchantIdSplitConfigurationsSplitConfigurationId operation.
     * @callback module:api/SplitConfigurationMerchantLevelApi~postMerchantsMerchantIdSplitConfigurationsSplitConfigurationIdCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SplitConfiguration} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a rule
     * Creates a rule in the split configuration specified in the path.  To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API - SplitConfiguration read and write
     * @param {String} merchantId The unique identifier of the merchant account.
     * @param {String} splitConfigurationId The unique identifier of the split configuration.
     * @param {Object} opts Optional parameters
     * @param {module:model/SplitConfigurationRule} [splitConfigurationRule] 
     * @param {module:api/SplitConfigurationMerchantLevelApi~postMerchantsMerchantIdSplitConfigurationsSplitConfigurationIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SplitConfiguration}
     */
    postMerchantsMerchantIdSplitConfigurationsSplitConfigurationId(merchantId, splitConfigurationId, opts, callback) {
      opts = opts || {};
      let postBody = opts['splitConfigurationRule'];
      // verify the required parameter 'merchantId' is set
      if (merchantId === undefined || merchantId === null) {
        throw new Error("Missing the required parameter 'merchantId' when calling postMerchantsMerchantIdSplitConfigurationsSplitConfigurationId");
      }
      // verify the required parameter 'splitConfigurationId' is set
      if (splitConfigurationId === undefined || splitConfigurationId === null) {
        throw new Error("Missing the required parameter 'splitConfigurationId' when calling postMerchantsMerchantIdSplitConfigurationsSplitConfigurationId");
      }

      let pathParams = {
        'merchantId': merchantId,
        'splitConfigurationId': splitConfigurationId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BasicAuth', 'ApiKeyAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = SplitConfiguration;
      return this.apiClient.callApi(
        '/merchants/{merchantId}/splitConfigurations/{splitConfigurationId}', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
