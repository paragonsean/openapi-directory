/**
 * Management API
 * Configure and manage your Adyen company and merchant accounts, stores, and payment terminals. ## Authentication Each request to the Management API must be signed with an API key. [Generate your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) in the Customer Area and then set this key to the `X-API-Key` header value.  To access the live endpoints, you need to generate a new API key in your live Customer Area. ## Versioning  Management API handles versioning as part of the endpoint URL. For example, to send a request to this version of the `/companies/{companyId}/webhooks` endpoint, use:  ```text https://management-test.adyen.com/v3/companies/{companyId}/webhooks ```  ## Going live  To access the live endpoints, you need an API key from your live Customer Area. Use this API key to make requests to:  ```text https://management-live.adyen.com/v3 ```  ## Release notes Have a look at the [release notes](https://docs.adyen.com/release-notes/management-api) to find out what changed in this version!
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CompanyUser from '../model/CompanyUser';
import CreateCompanyUserRequest from '../model/CreateCompanyUserRequest';
import CreateCompanyUserResponse from '../model/CreateCompanyUserResponse';
import ListCompanyUsersResponse from '../model/ListCompanyUsersResponse';
import RestServiceError from '../model/RestServiceError';
import UpdateCompanyUserRequest from '../model/UpdateCompanyUserRequest';

/**
* UsersCompanyLevel service.
* @module api/UsersCompanyLevelApi
* @version 3
*/
export default class UsersCompanyLevelApi {

    /**
    * Constructs a new UsersCompanyLevelApi. 
    * @alias module:api/UsersCompanyLevelApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getCompaniesCompanyIdUsers operation.
     * @callback module:api/UsersCompanyLevelApi~getCompaniesCompanyIdUsersCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListCompanyUsersResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a list of users
     * Returns the list of users for the `companyId` identified in the path.  To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Users read and write 
     * @param {String} companyId The unique identifier of the company account.
     * @param {Object} opts Optional parameters
     * @param {Number} [pageNumber] The number of the page to return.
     * @param {Number} [pageSize] The number of items to have on a page. Maximum value is **100**. The default is **10** items on a page.
     * @param {String} [username] The partial or complete username to select all users that match.
     * @param {module:api/UsersCompanyLevelApi~getCompaniesCompanyIdUsersCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListCompanyUsersResponse}
     */
    getCompaniesCompanyIdUsers(companyId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'companyId' is set
      if (companyId === undefined || companyId === null) {
        throw new Error("Missing the required parameter 'companyId' when calling getCompaniesCompanyIdUsers");
      }

      let pathParams = {
        'companyId': companyId
      };
      let queryParams = {
        'pageNumber': opts['pageNumber'],
        'pageSize': opts['pageSize'],
        'username': opts['username']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BasicAuth', 'ApiKeyAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListCompanyUsersResponse;
      return this.apiClient.callApi(
        '/companies/{companyId}/users', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getCompaniesCompanyIdUsersUserId operation.
     * @callback module:api/UsersCompanyLevelApi~getCompaniesCompanyIdUsersUserIdCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CompanyUser} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get user details
     * Returns user details for the `userId` and the `companyId` identified in the path.  To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Users read and write 
     * @param {String} companyId The unique identifier of the company account.
     * @param {String} userId The unique identifier of the user.
     * @param {module:api/UsersCompanyLevelApi~getCompaniesCompanyIdUsersUserIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CompanyUser}
     */
    getCompaniesCompanyIdUsersUserId(companyId, userId, callback) {
      let postBody = null;
      // verify the required parameter 'companyId' is set
      if (companyId === undefined || companyId === null) {
        throw new Error("Missing the required parameter 'companyId' when calling getCompaniesCompanyIdUsersUserId");
      }
      // verify the required parameter 'userId' is set
      if (userId === undefined || userId === null) {
        throw new Error("Missing the required parameter 'userId' when calling getCompaniesCompanyIdUsersUserId");
      }

      let pathParams = {
        'companyId': companyId,
        'userId': userId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BasicAuth', 'ApiKeyAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = CompanyUser;
      return this.apiClient.callApi(
        '/companies/{companyId}/users/{userId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the patchCompaniesCompanyIdUsersUserId operation.
     * @callback module:api/UsersCompanyLevelApi~patchCompaniesCompanyIdUsersUserIdCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CompanyUser} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update user details
     * Updates user details for the `userId` and the `companyId` identified in the path.  To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Users read and write 
     * @param {String} companyId The unique identifier of the company account.
     * @param {String} userId The unique identifier of the user.
     * @param {Object} opts Optional parameters
     * @param {module:model/UpdateCompanyUserRequest} [updateCompanyUserRequest] 
     * @param {module:api/UsersCompanyLevelApi~patchCompaniesCompanyIdUsersUserIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CompanyUser}
     */
    patchCompaniesCompanyIdUsersUserId(companyId, userId, opts, callback) {
      opts = opts || {};
      let postBody = opts['updateCompanyUserRequest'];
      // verify the required parameter 'companyId' is set
      if (companyId === undefined || companyId === null) {
        throw new Error("Missing the required parameter 'companyId' when calling patchCompaniesCompanyIdUsersUserId");
      }
      // verify the required parameter 'userId' is set
      if (userId === undefined || userId === null) {
        throw new Error("Missing the required parameter 'userId' when calling patchCompaniesCompanyIdUsersUserId");
      }

      let pathParams = {
        'companyId': companyId,
        'userId': userId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BasicAuth', 'ApiKeyAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CompanyUser;
      return this.apiClient.callApi(
        '/companies/{companyId}/users/{userId}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the postCompaniesCompanyIdUsers operation.
     * @callback module:api/UsersCompanyLevelApi~postCompaniesCompanyIdUsersCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CreateCompanyUserResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a new user
     * Creates the user for the `companyId` identified in the path.  To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Users read and write 
     * @param {String} companyId The unique identifier of the company account.
     * @param {Object} opts Optional parameters
     * @param {module:model/CreateCompanyUserRequest} [createCompanyUserRequest] 
     * @param {module:api/UsersCompanyLevelApi~postCompaniesCompanyIdUsersCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CreateCompanyUserResponse}
     */
    postCompaniesCompanyIdUsers(companyId, opts, callback) {
      opts = opts || {};
      let postBody = opts['createCompanyUserRequest'];
      // verify the required parameter 'companyId' is set
      if (companyId === undefined || companyId === null) {
        throw new Error("Missing the required parameter 'companyId' when calling postCompaniesCompanyIdUsers");
      }

      let pathParams = {
        'companyId': companyId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BasicAuth', 'ApiKeyAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CreateCompanyUserResponse;
      return this.apiClient.callApi(
        '/companies/{companyId}/users', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
