/**
 * Management API
 * Configure and manage your Adyen company and merchant accounts, stores, and payment terminals. ## Authentication Each request to the Management API must be signed with an API key. [Generate your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) in the Customer Area and then set this key to the `X-API-Key` header value.  To access the live endpoints, you need to generate a new API key in your live Customer Area. ## Versioning  Management API handles versioning as part of the endpoint URL. For example, to send a request to this version of the `/companies/{companyId}/webhooks` endpoint, use:  ```text https://management-test.adyen.com/v3/companies/{companyId}/webhooks ```  ## Going live  To access the live endpoints, you need an API key from your live Customer Area. Use this API key to make requests to:  ```text https://management-live.adyen.com/v3 ```  ## Release notes Have a look at the [release notes](https://docs.adyen.com/release-notes/management-api) to find out what changed in this version!
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Logo from '../model/Logo';
import RestServiceError from '../model/RestServiceError';
import TerminalSettings from '../model/TerminalSettings';

/**
* TerminalSettingsTerminalLevel service.
* @module api/TerminalSettingsTerminalLevelApi
* @version 3
*/
export default class TerminalSettingsTerminalLevelApi {

    /**
    * Constructs a new TerminalSettingsTerminalLevelApi. 
    * @alias module:api/TerminalSettingsTerminalLevelApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getTerminalsTerminalIdTerminalLogos operation.
     * @callback module:api/TerminalSettingsTerminalLevelApi~getTerminalsTerminalIdTerminalLogosCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Logo} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get the terminal logo
     * Returns the logo that is configured for the payment terminal identified in the path. The logo is returned as a Base64-encoded string. You need to Base64-decode the string to get the actual image file.  To make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Terminal settings read * Management API—Terminal settings read and write
     * @param {String} terminalId The unique identifier of the payment terminal.
     * @param {module:api/TerminalSettingsTerminalLevelApi~getTerminalsTerminalIdTerminalLogosCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Logo}
     */
    getTerminalsTerminalIdTerminalLogos(terminalId, callback) {
      let postBody = null;
      // verify the required parameter 'terminalId' is set
      if (terminalId === undefined || terminalId === null) {
        throw new Error("Missing the required parameter 'terminalId' when calling getTerminalsTerminalIdTerminalLogos");
      }

      let pathParams = {
        'terminalId': terminalId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BasicAuth', 'ApiKeyAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Logo;
      return this.apiClient.callApi(
        '/terminals/{terminalId}/terminalLogos', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getTerminalsTerminalIdTerminalSettings operation.
     * @callback module:api/TerminalSettingsTerminalLevelApi~getTerminalsTerminalIdTerminalSettingsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TerminalSettings} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get terminal settings
     * Returns the settings that are configured for the payment terminal identified in the path.  To make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Terminal settings read * Management API—Terminal settings read and write  For [sensitive terminal settings](https://docs.adyen.com/point-of-sale/automating-terminal-management/configure-terminals-api#sensitive-terminal-settings), your API credential must have the following role: * Management API—Terminal settings Advanced read and write
     * @param {String} terminalId The unique identifier of the payment terminal.
     * @param {module:api/TerminalSettingsTerminalLevelApi~getTerminalsTerminalIdTerminalSettingsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TerminalSettings}
     */
    getTerminalsTerminalIdTerminalSettings(terminalId, callback) {
      let postBody = null;
      // verify the required parameter 'terminalId' is set
      if (terminalId === undefined || terminalId === null) {
        throw new Error("Missing the required parameter 'terminalId' when calling getTerminalsTerminalIdTerminalSettings");
      }

      let pathParams = {
        'terminalId': terminalId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BasicAuth', 'ApiKeyAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = TerminalSettings;
      return this.apiClient.callApi(
        '/terminals/{terminalId}/terminalSettings', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the patchTerminalsTerminalIdTerminalLogos operation.
     * @callback module:api/TerminalSettingsTerminalLevelApi~patchTerminalsTerminalIdTerminalLogosCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Logo} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update the logo
     * Updates the logo for the payment terminal identified in the path.  * To change the logo, specify the image file as a Base64-encoded string. * To restore the logo inherited from a higher level (store, merchant account, or company account), specify an empty logo value.  To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Terminal settings read and write
     * @param {String} terminalId The unique identifier of the payment terminal.
     * @param {Object} opts Optional parameters
     * @param {module:model/Logo} [logo] 
     * @param {module:api/TerminalSettingsTerminalLevelApi~patchTerminalsTerminalIdTerminalLogosCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Logo}
     */
    patchTerminalsTerminalIdTerminalLogos(terminalId, opts, callback) {
      opts = opts || {};
      let postBody = opts['logo'];
      // verify the required parameter 'terminalId' is set
      if (terminalId === undefined || terminalId === null) {
        throw new Error("Missing the required parameter 'terminalId' when calling patchTerminalsTerminalIdTerminalLogos");
      }

      let pathParams = {
        'terminalId': terminalId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BasicAuth', 'ApiKeyAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Logo;
      return this.apiClient.callApi(
        '/terminals/{terminalId}/terminalLogos', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the patchTerminalsTerminalIdTerminalSettings operation.
     * @callback module:api/TerminalSettingsTerminalLevelApi~patchTerminalsTerminalIdTerminalSettingsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TerminalSettings} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update terminal settings
     * Updates the settings that are configured for the payment terminal identified in the path.  * To change a parameter value, include the full object that contains the parameter, even if you don't want to change all parameters in the object. * To restore a parameter value inherited from a higher level, include the full object that contains the parameter, and specify an empty value for the parameter or omit the parameter. * Objects that are not included in the request are not updated.  To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Terminal settings read and write  For [sensitive terminal settings](https://docs.adyen.com/point-of-sale/automating-terminal-management/configure-terminals-api#sensitive-terminal-settings), your API credential must have the following role: * Management API—Terminal settings Advanced read and write
     * @param {String} terminalId The unique identifier of the payment terminal.
     * @param {Object} opts Optional parameters
     * @param {module:model/TerminalSettings} [terminalSettings] 
     * @param {module:api/TerminalSettingsTerminalLevelApi~patchTerminalsTerminalIdTerminalSettingsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TerminalSettings}
     */
    patchTerminalsTerminalIdTerminalSettings(terminalId, opts, callback) {
      opts = opts || {};
      let postBody = opts['terminalSettings'];
      // verify the required parameter 'terminalId' is set
      if (terminalId === undefined || terminalId === null) {
        throw new Error("Missing the required parameter 'terminalId' when calling patchTerminalsTerminalIdTerminalSettings");
      }

      let pathParams = {
        'terminalId': terminalId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BasicAuth', 'ApiKeyAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = TerminalSettings;
      return this.apiClient.callApi(
        '/terminals/{terminalId}/terminalSettings', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
