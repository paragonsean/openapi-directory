/**
 * Management API
 * Configure and manage your Adyen company and merchant accounts, stores, and payment terminals. ## Authentication Each request to the Management API must be signed with an API key. [Generate your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) in the Customer Area and then set this key to the `X-API-Key` header value.  To access the live endpoints, you need to generate a new API key in your live Customer Area. ## Versioning  Management API handles versioning as part of the endpoint URL. For example, to send a request to this version of the `/companies/{companyId}/webhooks` endpoint, use:  ```text https://management-test.adyen.com/v3/companies/{companyId}/webhooks ```  ## Going live  To access the live endpoints, you need an API key from your live Customer Area. Use this API key to make requests to:  ```text https://management-live.adyen.com/v3 ```  ## Release notes Have a look at the [release notes](https://docs.adyen.com/release-notes/management-api) to find out what changed in this version!
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import BillingEntitiesResponse from '../model/BillingEntitiesResponse';
import RestServiceError from '../model/RestServiceError';
import ShippingLocation from '../model/ShippingLocation';
import ShippingLocationsResponse from '../model/ShippingLocationsResponse';
import TerminalModelsResponse from '../model/TerminalModelsResponse';
import TerminalOrder from '../model/TerminalOrder';
import TerminalOrderRequest from '../model/TerminalOrderRequest';
import TerminalOrdersResponse from '../model/TerminalOrdersResponse';
import TerminalProductsResponse from '../model/TerminalProductsResponse';

/**
* TerminalOrdersMerchantLevel service.
* @module api/TerminalOrdersMerchantLevelApi
* @version 3
*/
export default class TerminalOrdersMerchantLevelApi {

    /**
    * Constructs a new TerminalOrdersMerchantLevelApi. 
    * @alias module:api/TerminalOrdersMerchantLevelApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getMerchantsMerchantIdBillingEntities operation.
     * @callback module:api/TerminalOrdersMerchantLevelApi~getMerchantsMerchantIdBillingEntitiesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BillingEntitiesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a list of billing entities
     * Returns the billing entities of the merchant account identified in the path. A billing entity is a legal entity where we charge orders to. An order for terminal products must contain the ID of a billing entity.  To make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Terminal ordering read * Management API—Terminal ordering read and write
     * @param {String} merchantId The unique identifier of the merchant account.
     * @param {Object} opts Optional parameters
     * @param {String} [name] The name of the billing entity.
     * @param {module:api/TerminalOrdersMerchantLevelApi~getMerchantsMerchantIdBillingEntitiesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BillingEntitiesResponse}
     */
    getMerchantsMerchantIdBillingEntities(merchantId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'merchantId' is set
      if (merchantId === undefined || merchantId === null) {
        throw new Error("Missing the required parameter 'merchantId' when calling getMerchantsMerchantIdBillingEntities");
      }

      let pathParams = {
        'merchantId': merchantId
      };
      let queryParams = {
        'name': opts['name']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BasicAuth', 'ApiKeyAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = BillingEntitiesResponse;
      return this.apiClient.callApi(
        '/merchants/{merchantId}/billingEntities', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getMerchantsMerchantIdShippingLocations operation.
     * @callback module:api/TerminalOrdersMerchantLevelApi~getMerchantsMerchantIdShippingLocationsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ShippingLocationsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a list of shipping locations
     * Returns the shipping locations for the merchant account identified in the path. A shipping location includes the address where orders can be delivered, and an ID which you need to specify when ordering terminal products.  To make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Terminal ordering read * Management API—Terminal ordering read and write
     * @param {String} merchantId The unique identifier of the merchant account.
     * @param {Object} opts Optional parameters
     * @param {String} [name] The name of the shipping location.
     * @param {Number} [offset] The number of locations to skip.
     * @param {Number} [limit] The number of locations to return.
     * @param {module:api/TerminalOrdersMerchantLevelApi~getMerchantsMerchantIdShippingLocationsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ShippingLocationsResponse}
     */
    getMerchantsMerchantIdShippingLocations(merchantId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'merchantId' is set
      if (merchantId === undefined || merchantId === null) {
        throw new Error("Missing the required parameter 'merchantId' when calling getMerchantsMerchantIdShippingLocations");
      }

      let pathParams = {
        'merchantId': merchantId
      };
      let queryParams = {
        'name': opts['name'],
        'offset': opts['offset'],
        'limit': opts['limit']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BasicAuth', 'ApiKeyAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ShippingLocationsResponse;
      return this.apiClient.callApi(
        '/merchants/{merchantId}/shippingLocations', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getMerchantsMerchantIdTerminalModels operation.
     * @callback module:api/TerminalOrdersMerchantLevelApi~getMerchantsMerchantIdTerminalModelsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TerminalModelsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a list of terminal models
     * Returns the payment terminal models that merchant account identified in the path has access to. The response includes the terminal model ID, which can be used as a query parameter when getting a list of terminals or a list of products for ordering.  To make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Terminal ordering read * Management API—Terminal ordering read and write
     * @param {String} merchantId The unique identifier of the merchant account.
     * @param {module:api/TerminalOrdersMerchantLevelApi~getMerchantsMerchantIdTerminalModelsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TerminalModelsResponse}
     */
    getMerchantsMerchantIdTerminalModels(merchantId, callback) {
      let postBody = null;
      // verify the required parameter 'merchantId' is set
      if (merchantId === undefined || merchantId === null) {
        throw new Error("Missing the required parameter 'merchantId' when calling getMerchantsMerchantIdTerminalModels");
      }

      let pathParams = {
        'merchantId': merchantId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BasicAuth', 'ApiKeyAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = TerminalModelsResponse;
      return this.apiClient.callApi(
        '/merchants/{merchantId}/terminalModels', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getMerchantsMerchantIdTerminalOrders operation.
     * @callback module:api/TerminalOrdersMerchantLevelApi~getMerchantsMerchantIdTerminalOrdersCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TerminalOrdersResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a list of orders
     * Returns a list of terminal products orders for the merchant account identified in the path.  To make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Terminal ordering read * Management API—Terminal ordering read and write
     * @param {String} merchantId 
     * @param {Object} opts Optional parameters
     * @param {String} [customerOrderReference] Your purchase order number.
     * @param {String} [status] The order status. Possible values (not case-sensitive): Placed, Confirmed, Cancelled, Shipped, Delivered.
     * @param {Number} [offset] The number of orders to skip.
     * @param {Number} [limit] The number of orders to return.
     * @param {module:api/TerminalOrdersMerchantLevelApi~getMerchantsMerchantIdTerminalOrdersCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TerminalOrdersResponse}
     */
    getMerchantsMerchantIdTerminalOrders(merchantId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'merchantId' is set
      if (merchantId === undefined || merchantId === null) {
        throw new Error("Missing the required parameter 'merchantId' when calling getMerchantsMerchantIdTerminalOrders");
      }

      let pathParams = {
        'merchantId': merchantId
      };
      let queryParams = {
        'customerOrderReference': opts['customerOrderReference'],
        'status': opts['status'],
        'offset': opts['offset'],
        'limit': opts['limit']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BasicAuth', 'ApiKeyAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = TerminalOrdersResponse;
      return this.apiClient.callApi(
        '/merchants/{merchantId}/terminalOrders', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getMerchantsMerchantIdTerminalOrdersOrderId operation.
     * @callback module:api/TerminalOrdersMerchantLevelApi~getMerchantsMerchantIdTerminalOrdersOrderIdCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TerminalOrder} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get an order
     * Returns the details of the terminal products order identified in the path.  To make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Terminal ordering read * Management API—Terminal ordering read and write
     * @param {String} merchantId The unique identifier of the merchant account.
     * @param {String} orderId The unique identifier of the order.
     * @param {module:api/TerminalOrdersMerchantLevelApi~getMerchantsMerchantIdTerminalOrdersOrderIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TerminalOrder}
     */
    getMerchantsMerchantIdTerminalOrdersOrderId(merchantId, orderId, callback) {
      let postBody = null;
      // verify the required parameter 'merchantId' is set
      if (merchantId === undefined || merchantId === null) {
        throw new Error("Missing the required parameter 'merchantId' when calling getMerchantsMerchantIdTerminalOrdersOrderId");
      }
      // verify the required parameter 'orderId' is set
      if (orderId === undefined || orderId === null) {
        throw new Error("Missing the required parameter 'orderId' when calling getMerchantsMerchantIdTerminalOrdersOrderId");
      }

      let pathParams = {
        'merchantId': merchantId,
        'orderId': orderId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BasicAuth', 'ApiKeyAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = TerminalOrder;
      return this.apiClient.callApi(
        '/merchants/{merchantId}/terminalOrders/{orderId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getMerchantsMerchantIdTerminalProducts operation.
     * @callback module:api/TerminalOrdersMerchantLevelApi~getMerchantsMerchantIdTerminalProductsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TerminalProductsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a list of terminal products
     * Returns a country-specific list of payment terminal packages and parts that the merchant account identified in the path has access to.  To make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Terminal ordering read * Management API—Terminal ordering read and write
     * @param {String} merchantId The unique identifier of the merchant account.
     * @param {String} country The country to return products for, in [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) format. For example, **US**
     * @param {Object} opts Optional parameters
     * @param {String} [terminalModelId] The terminal model to return products for. Use the ID returned in the [GET `/terminalModels`](https://docs.adyen.com/api-explorer/#/ManagementService/latest/get/merchants/{merchantId}/terminalModels) response. For example, **Verifone.M400**
     * @param {Number} [offset] The number of products to skip.
     * @param {Number} [limit] The number of products to return.
     * @param {module:api/TerminalOrdersMerchantLevelApi~getMerchantsMerchantIdTerminalProductsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TerminalProductsResponse}
     */
    getMerchantsMerchantIdTerminalProducts(merchantId, country, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'merchantId' is set
      if (merchantId === undefined || merchantId === null) {
        throw new Error("Missing the required parameter 'merchantId' when calling getMerchantsMerchantIdTerminalProducts");
      }
      // verify the required parameter 'country' is set
      if (country === undefined || country === null) {
        throw new Error("Missing the required parameter 'country' when calling getMerchantsMerchantIdTerminalProducts");
      }

      let pathParams = {
        'merchantId': merchantId
      };
      let queryParams = {
        'country': country,
        'terminalModelId': opts['terminalModelId'],
        'offset': opts['offset'],
        'limit': opts['limit']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BasicAuth', 'ApiKeyAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = TerminalProductsResponse;
      return this.apiClient.callApi(
        '/merchants/{merchantId}/terminalProducts', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the patchMerchantsMerchantIdTerminalOrdersOrderId operation.
     * @callback module:api/TerminalOrdersMerchantLevelApi~patchMerchantsMerchantIdTerminalOrdersOrderIdCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TerminalOrder} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update an order
     * Updates the terminal products order identified in the path. Updating is only possible while the order has the status **Placed**.  The request body only needs to contain what you want to change.  However, to update the products in the `items` array, you must provide the entire array. For example, if the array has three items:  To remove one item, the array must include the remaining two items. Or to add one item, the array must include all four items.  To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Terminal ordering read and write
     * @param {String} merchantId The unique identifier of the merchant account.
     * @param {String} orderId The unique identifier of the order.
     * @param {Object} opts Optional parameters
     * @param {module:model/TerminalOrderRequest} [terminalOrderRequest] 
     * @param {module:api/TerminalOrdersMerchantLevelApi~patchMerchantsMerchantIdTerminalOrdersOrderIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TerminalOrder}
     */
    patchMerchantsMerchantIdTerminalOrdersOrderId(merchantId, orderId, opts, callback) {
      opts = opts || {};
      let postBody = opts['terminalOrderRequest'];
      // verify the required parameter 'merchantId' is set
      if (merchantId === undefined || merchantId === null) {
        throw new Error("Missing the required parameter 'merchantId' when calling patchMerchantsMerchantIdTerminalOrdersOrderId");
      }
      // verify the required parameter 'orderId' is set
      if (orderId === undefined || orderId === null) {
        throw new Error("Missing the required parameter 'orderId' when calling patchMerchantsMerchantIdTerminalOrdersOrderId");
      }

      let pathParams = {
        'merchantId': merchantId,
        'orderId': orderId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BasicAuth', 'ApiKeyAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = TerminalOrder;
      return this.apiClient.callApi(
        '/merchants/{merchantId}/terminalOrders/{orderId}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the postMerchantsMerchantIdShippingLocations operation.
     * @callback module:api/TerminalOrdersMerchantLevelApi~postMerchantsMerchantIdShippingLocationsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ShippingLocation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a shipping location
     * Creates a shipping location for the merchant account identified in the path. A shipping location defines an address where orders can be shipped to.   To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Terminal ordering read and write
     * @param {String} merchantId The unique identifier of the merchant account.
     * @param {Object} opts Optional parameters
     * @param {module:model/ShippingLocation} [shippingLocation] 
     * @param {module:api/TerminalOrdersMerchantLevelApi~postMerchantsMerchantIdShippingLocationsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ShippingLocation}
     */
    postMerchantsMerchantIdShippingLocations(merchantId, opts, callback) {
      opts = opts || {};
      let postBody = opts['shippingLocation'];
      // verify the required parameter 'merchantId' is set
      if (merchantId === undefined || merchantId === null) {
        throw new Error("Missing the required parameter 'merchantId' when calling postMerchantsMerchantIdShippingLocations");
      }

      let pathParams = {
        'merchantId': merchantId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BasicAuth', 'ApiKeyAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ShippingLocation;
      return this.apiClient.callApi(
        '/merchants/{merchantId}/shippingLocations', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the postMerchantsMerchantIdTerminalOrders operation.
     * @callback module:api/TerminalOrdersMerchantLevelApi~postMerchantsMerchantIdTerminalOrdersCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TerminalOrder} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create an order
     * Creates an order for payment terminal products for the merchant account identified in the path.  To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Terminal ordering read and write >Requests to the Management API test endpoint do not create actual orders for test terminals. To order test terminals, you need to [submit a sales order](https://docs.adyen.com/point-of-sale/managing-terminals/order-terminals/#sales-order-steps) in your Customer Area.
     * @param {String} merchantId The unique identifier of the merchant account.
     * @param {Object} opts Optional parameters
     * @param {module:model/TerminalOrderRequest} [terminalOrderRequest] 
     * @param {module:api/TerminalOrdersMerchantLevelApi~postMerchantsMerchantIdTerminalOrdersCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TerminalOrder}
     */
    postMerchantsMerchantIdTerminalOrders(merchantId, opts, callback) {
      opts = opts || {};
      let postBody = opts['terminalOrderRequest'];
      // verify the required parameter 'merchantId' is set
      if (merchantId === undefined || merchantId === null) {
        throw new Error("Missing the required parameter 'merchantId' when calling postMerchantsMerchantIdTerminalOrders");
      }

      let pathParams = {
        'merchantId': merchantId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BasicAuth', 'ApiKeyAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = TerminalOrder;
      return this.apiClient.callApi(
        '/merchants/{merchantId}/terminalOrders', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the postMerchantsMerchantIdTerminalOrdersOrderIdCancel operation.
     * @callback module:api/TerminalOrdersMerchantLevelApi~postMerchantsMerchantIdTerminalOrdersOrderIdCancelCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TerminalOrder} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Cancel an order
     * Cancels the terminal products order identified in the path. Cancelling is only possible while the order has the status **Placed**. To cancel an order, make a POST call without a request body. The response returns the full order details, but with the status changed to **Cancelled**.  To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Terminal ordering read and write
     * @param {String} merchantId The unique identifier of the merchant account.
     * @param {String} orderId The unique identifier of the order.
     * @param {module:api/TerminalOrdersMerchantLevelApi~postMerchantsMerchantIdTerminalOrdersOrderIdCancelCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TerminalOrder}
     */
    postMerchantsMerchantIdTerminalOrdersOrderIdCancel(merchantId, orderId, callback) {
      let postBody = null;
      // verify the required parameter 'merchantId' is set
      if (merchantId === undefined || merchantId === null) {
        throw new Error("Missing the required parameter 'merchantId' when calling postMerchantsMerchantIdTerminalOrdersOrderIdCancel");
      }
      // verify the required parameter 'orderId' is set
      if (orderId === undefined || orderId === null) {
        throw new Error("Missing the required parameter 'orderId' when calling postMerchantsMerchantIdTerminalOrdersOrderIdCancel");
      }

      let pathParams = {
        'merchantId': merchantId,
        'orderId': orderId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BasicAuth', 'ApiKeyAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = TerminalOrder;
      return this.apiClient.callApi(
        '/merchants/{merchantId}/terminalOrders/{orderId}/cancel', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
