/**
 * Management API
 * Configure and manage your Adyen company and merchant accounts, stores, and payment terminals. ## Authentication Each request to the Management API must be signed with an API key. [Generate your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) in the Customer Area and then set this key to the `X-API-Key` header value.  To access the live endpoints, you need to generate a new API key in your live Customer Area. ## Versioning  Management API handles versioning as part of the endpoint URL. For example, to send a request to this version of the `/companies/{companyId}/webhooks` endpoint, use:  ```text https://management-test.adyen.com/v3/companies/{companyId}/webhooks ```  ## Going live  To access the live endpoints, you need an API key from your live Customer Area. Use this API key to make requests to:  ```text https://management-live.adyen.com/v3 ```  ## Release notes Have a look at the [release notes](https://docs.adyen.com/release-notes/management-api) to find out what changed in this version!
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CreateMerchantUserRequest from '../model/CreateMerchantUserRequest';
import CreateUserResponse from '../model/CreateUserResponse';
import ListMerchantUsersResponse from '../model/ListMerchantUsersResponse';
import RestServiceError from '../model/RestServiceError';
import UpdateMerchantUserRequest from '../model/UpdateMerchantUserRequest';
import User from '../model/User';

/**
* UsersMerchantLevel service.
* @module api/UsersMerchantLevelApi
* @version 3
*/
export default class UsersMerchantLevelApi {

    /**
    * Constructs a new UsersMerchantLevelApi. 
    * @alias module:api/UsersMerchantLevelApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getMerchantsMerchantIdUsers operation.
     * @callback module:api/UsersMerchantLevelApi~getMerchantsMerchantIdUsersCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListMerchantUsersResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a list of users
     * Returns a list of users associated with the `merchantId` specified in the path.  To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Users read and write 
     * @param {String} merchantId Unique identifier of the merchant.
     * @param {Object} opts Optional parameters
     * @param {Number} [pageNumber] The number of the page to fetch.
     * @param {Number} [pageSize] The number of items to have on a page. Maximum value is **100**. The default is **10** items on a page.
     * @param {String} [username] The partial or complete username to select all users that match.
     * @param {module:api/UsersMerchantLevelApi~getMerchantsMerchantIdUsersCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListMerchantUsersResponse}
     */
    getMerchantsMerchantIdUsers(merchantId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'merchantId' is set
      if (merchantId === undefined || merchantId === null) {
        throw new Error("Missing the required parameter 'merchantId' when calling getMerchantsMerchantIdUsers");
      }

      let pathParams = {
        'merchantId': merchantId
      };
      let queryParams = {
        'pageNumber': opts['pageNumber'],
        'pageSize': opts['pageSize'],
        'username': opts['username']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BasicAuth', 'ApiKeyAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListMerchantUsersResponse;
      return this.apiClient.callApi(
        '/merchants/{merchantId}/users', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getMerchantsMerchantIdUsersUserId operation.
     * @callback module:api/UsersMerchantLevelApi~getMerchantsMerchantIdUsersUserIdCallback
     * @param {String} error Error message, if any.
     * @param {module:model/User} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get user details
     * Returns user details for the `userId` and the `merchantId` specified in the path.  To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Users read and write 
     * @param {String} merchantId Unique identifier of the merchant.
     * @param {String} userId Unique identifier of the user.
     * @param {module:api/UsersMerchantLevelApi~getMerchantsMerchantIdUsersUserIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/User}
     */
    getMerchantsMerchantIdUsersUserId(merchantId, userId, callback) {
      let postBody = null;
      // verify the required parameter 'merchantId' is set
      if (merchantId === undefined || merchantId === null) {
        throw new Error("Missing the required parameter 'merchantId' when calling getMerchantsMerchantIdUsersUserId");
      }
      // verify the required parameter 'userId' is set
      if (userId === undefined || userId === null) {
        throw new Error("Missing the required parameter 'userId' when calling getMerchantsMerchantIdUsersUserId");
      }

      let pathParams = {
        'merchantId': merchantId,
        'userId': userId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BasicAuth', 'ApiKeyAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = User;
      return this.apiClient.callApi(
        '/merchants/{merchantId}/users/{userId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the patchMerchantsMerchantIdUsersUserId operation.
     * @callback module:api/UsersMerchantLevelApi~patchMerchantsMerchantIdUsersUserIdCallback
     * @param {String} error Error message, if any.
     * @param {module:model/User} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update a user
     * Updates user details for the `userId` and the `merchantId` specified in the path.  To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Users read and write 
     * @param {String} merchantId Unique identifier of the merchant.
     * @param {String} userId Unique identifier of the user.
     * @param {Object} opts Optional parameters
     * @param {module:model/UpdateMerchantUserRequest} [updateMerchantUserRequest] 
     * @param {module:api/UsersMerchantLevelApi~patchMerchantsMerchantIdUsersUserIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/User}
     */
    patchMerchantsMerchantIdUsersUserId(merchantId, userId, opts, callback) {
      opts = opts || {};
      let postBody = opts['updateMerchantUserRequest'];
      // verify the required parameter 'merchantId' is set
      if (merchantId === undefined || merchantId === null) {
        throw new Error("Missing the required parameter 'merchantId' when calling patchMerchantsMerchantIdUsersUserId");
      }
      // verify the required parameter 'userId' is set
      if (userId === undefined || userId === null) {
        throw new Error("Missing the required parameter 'userId' when calling patchMerchantsMerchantIdUsersUserId");
      }

      let pathParams = {
        'merchantId': merchantId,
        'userId': userId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BasicAuth', 'ApiKeyAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = User;
      return this.apiClient.callApi(
        '/merchants/{merchantId}/users/{userId}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the postMerchantsMerchantIdUsers operation.
     * @callback module:api/UsersMerchantLevelApi~postMerchantsMerchantIdUsersCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CreateUserResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a new user
     * Creates a user for the `merchantId` specified in the path.  To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Users read and write 
     * @param {String} merchantId Unique identifier of the merchant.
     * @param {Object} opts Optional parameters
     * @param {module:model/CreateMerchantUserRequest} [createMerchantUserRequest] 
     * @param {module:api/UsersMerchantLevelApi~postMerchantsMerchantIdUsersCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CreateUserResponse}
     */
    postMerchantsMerchantIdUsers(merchantId, opts, callback) {
      opts = opts || {};
      let postBody = opts['createMerchantUserRequest'];
      // verify the required parameter 'merchantId' is set
      if (merchantId === undefined || merchantId === null) {
        throw new Error("Missing the required parameter 'merchantId' when calling postMerchantsMerchantIdUsers");
      }

      let pathParams = {
        'merchantId': merchantId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BasicAuth', 'ApiKeyAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CreateUserResponse;
      return this.apiClient.callApi(
        '/merchants/{merchantId}/users', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
