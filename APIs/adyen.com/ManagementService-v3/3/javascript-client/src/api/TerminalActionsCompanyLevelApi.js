/**
 * Management API
 * Configure and manage your Adyen company and merchant accounts, stores, and payment terminals. ## Authentication Each request to the Management API must be signed with an API key. [Generate your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) in the Customer Area and then set this key to the `X-API-Key` header value.  To access the live endpoints, you need to generate a new API key in your live Customer Area. ## Versioning  Management API handles versioning as part of the endpoint URL. For example, to send a request to this version of the `/companies/{companyId}/webhooks` endpoint, use:  ```text https://management-test.adyen.com/v3/companies/{companyId}/webhooks ```  ## Going live  To access the live endpoints, you need an API key from your live Customer Area. Use this API key to make requests to:  ```text https://management-live.adyen.com/v3 ```  ## Release notes Have a look at the [release notes](https://docs.adyen.com/release-notes/management-api) to find out what changed in this version!
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ExternalTerminalAction from '../model/ExternalTerminalAction';
import ListExternalTerminalActionsResponse from '../model/ListExternalTerminalActionsResponse';
import RestServiceError from '../model/RestServiceError';

/**
* TerminalActionsCompanyLevel service.
* @module api/TerminalActionsCompanyLevelApi
* @version 3
*/
export default class TerminalActionsCompanyLevelApi {

    /**
    * Constructs a new TerminalActionsCompanyLevelApi. 
    * @alias module:api/TerminalActionsCompanyLevelApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getCompaniesCompanyIdTerminalActions operation.
     * @callback module:api/TerminalActionsCompanyLevelApi~getCompaniesCompanyIdTerminalActionsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListExternalTerminalActionsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a list of terminal actions
     * Returns the [terminal actions](https://docs.adyen.com/point-of-sale/automating-terminal-management/terminal-actions-api) that have been scheduled for the company identified in the path.The response doesn't include actions that are scheduled by Adyen. To make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Terminal actions read * Management API—Terminal actions read and write
     * @param {String} companyId The unique identifier of the company account.
     * @param {Object} opts Optional parameters
     * @param {Number} [pageNumber] The number of the page to fetch.
     * @param {Number} [pageSize] The number of items to have on a page, maximum 100. The default is 20 items on a page.
     * @param {String} [status] Returns terminal actions with the specified status.  Allowed values: **pending**, **successful**, **failed**, **cancelled**, **tryLater**.
     * @param {String} [type] Returns terminal actions of the specified type.  Allowed values: **InstallAndroidApp**, **UninstallAndroidApp**, **InstallAndroidCertificate**, **UninstallAndroidCertificate**.
     * @param {module:api/TerminalActionsCompanyLevelApi~getCompaniesCompanyIdTerminalActionsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListExternalTerminalActionsResponse}
     */
    getCompaniesCompanyIdTerminalActions(companyId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'companyId' is set
      if (companyId === undefined || companyId === null) {
        throw new Error("Missing the required parameter 'companyId' when calling getCompaniesCompanyIdTerminalActions");
      }

      let pathParams = {
        'companyId': companyId
      };
      let queryParams = {
        'pageNumber': opts['pageNumber'],
        'pageSize': opts['pageSize'],
        'status': opts['status'],
        'type': opts['type']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BasicAuth', 'ApiKeyAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListExternalTerminalActionsResponse;
      return this.apiClient.callApi(
        '/companies/{companyId}/terminalActions', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getCompaniesCompanyIdTerminalActionsActionId operation.
     * @callback module:api/TerminalActionsCompanyLevelApi~getCompaniesCompanyIdTerminalActionsActionIdCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ExternalTerminalAction} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get terminal action
     * Returns the details of the [terminal action](https://docs.adyen.com/point-of-sale/automating-terminal-management/terminal-actions-api) identified in the path. To make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Terminal actions read * Management API—Terminal actions read and write
     * @param {String} companyId The unique identifier of the company account.
     * @param {String} actionId The unique identifier of the terminal action.
     * @param {module:api/TerminalActionsCompanyLevelApi~getCompaniesCompanyIdTerminalActionsActionIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ExternalTerminalAction}
     */
    getCompaniesCompanyIdTerminalActionsActionId(companyId, actionId, callback) {
      let postBody = null;
      // verify the required parameter 'companyId' is set
      if (companyId === undefined || companyId === null) {
        throw new Error("Missing the required parameter 'companyId' when calling getCompaniesCompanyIdTerminalActionsActionId");
      }
      // verify the required parameter 'actionId' is set
      if (actionId === undefined || actionId === null) {
        throw new Error("Missing the required parameter 'actionId' when calling getCompaniesCompanyIdTerminalActionsActionId");
      }

      let pathParams = {
        'companyId': companyId,
        'actionId': actionId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BasicAuth', 'ApiKeyAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ExternalTerminalAction;
      return this.apiClient.callApi(
        '/companies/{companyId}/terminalActions/{actionId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
