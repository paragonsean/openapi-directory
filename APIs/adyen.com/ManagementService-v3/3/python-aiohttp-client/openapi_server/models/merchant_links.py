# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.links_element import LinksElement
from openapi_server import util


class MerchantLinks(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, api_credentials: LinksElement=None, _self: LinksElement=None, users: LinksElement=None, webhooks: LinksElement=None):
        """MerchantLinks - a model defined in OpenAPI

        :param api_credentials: The api_credentials of this MerchantLinks.
        :param _self: The _self of this MerchantLinks.
        :param users: The users of this MerchantLinks.
        :param webhooks: The webhooks of this MerchantLinks.
        """
        self.openapi_types = {
            'api_credentials': LinksElement,
            '_self': LinksElement,
            'users': LinksElement,
            'webhooks': LinksElement
        }

        self.attribute_map = {
            'api_credentials': 'apiCredentials',
            '_self': 'self',
            'users': 'users',
            'webhooks': 'webhooks'
        }

        self._api_credentials = api_credentials
        self.__self = _self
        self._users = users
        self._webhooks = webhooks

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MerchantLinks':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MerchantLinks of this MerchantLinks.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def api_credentials(self):
        """Gets the api_credentials of this MerchantLinks.


        :return: The api_credentials of this MerchantLinks.
        :rtype: LinksElement
        """
        return self._api_credentials

    @api_credentials.setter
    def api_credentials(self, api_credentials):
        """Sets the api_credentials of this MerchantLinks.


        :param api_credentials: The api_credentials of this MerchantLinks.
        :type api_credentials: LinksElement
        """

        self._api_credentials = api_credentials

    @property
    def _self(self):
        """Gets the _self of this MerchantLinks.

        Link to the resource itself.

        :return: The _self of this MerchantLinks.
        :rtype: LinksElement
        """
        return self.__self

    @_self.setter
    def _self(self, _self):
        """Sets the _self of this MerchantLinks.

        Link to the resource itself.

        :param _self: The _self of this MerchantLinks.
        :type _self: LinksElement
        """
        if _self is None:
            raise ValueError("Invalid value for `_self`, must not be `None`")

        self.__self = _self

    @property
    def users(self):
        """Gets the users of this MerchantLinks.


        :return: The users of this MerchantLinks.
        :rtype: LinksElement
        """
        return self._users

    @users.setter
    def users(self, users):
        """Sets the users of this MerchantLinks.


        :param users: The users of this MerchantLinks.
        :type users: LinksElement
        """

        self._users = users

    @property
    def webhooks(self):
        """Gets the webhooks of this MerchantLinks.


        :return: The webhooks of this MerchantLinks.
        :rtype: LinksElement
        """
        return self._webhooks

    @webhooks.setter
    def webhooks(self, webhooks):
        """Sets the webhooks of this MerchantLinks.


        :param webhooks: The webhooks of this MerchantLinks.
        :type webhooks: LinksElement
        """

        self._webhooks = webhooks
