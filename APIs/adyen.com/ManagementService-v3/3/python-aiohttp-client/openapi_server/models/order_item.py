# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class OrderItem(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, installments: int=None, name: str=None, quantity: int=None):
        """OrderItem - a model defined in OpenAPI

        :param id: The id of this OrderItem.
        :param installments: The installments of this OrderItem.
        :param name: The name of this OrderItem.
        :param quantity: The quantity of this OrderItem.
        """
        self.openapi_types = {
            'id': str,
            'installments': int,
            'name': str,
            'quantity': int
        }

        self.attribute_map = {
            'id': 'id',
            'installments': 'installments',
            'name': 'name',
            'quantity': 'quantity'
        }

        self._id = id
        self._installments = installments
        self._name = name
        self._quantity = quantity

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OrderItem':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OrderItem of this OrderItem.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this OrderItem.

        The unique identifier of the product.

        :return: The id of this OrderItem.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this OrderItem.

        The unique identifier of the product.

        :param id: The id of this OrderItem.
        :type id: str
        """

        self._id = id

    @property
    def installments(self):
        """Gets the installments of this OrderItem.

        The number of installments for the specified product `id`.

        :return: The installments of this OrderItem.
        :rtype: int
        """
        return self._installments

    @installments.setter
    def installments(self, installments):
        """Sets the installments of this OrderItem.

        The number of installments for the specified product `id`.

        :param installments: The installments of this OrderItem.
        :type installments: int
        """

        self._installments = installments

    @property
    def name(self):
        """Gets the name of this OrderItem.

        The name of the product.

        :return: The name of this OrderItem.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this OrderItem.

        The name of the product.

        :param name: The name of this OrderItem.
        :type name: str
        """

        self._name = name

    @property
    def quantity(self):
        """Gets the quantity of this OrderItem.

        The number of items with the specified product `id` included in the order.

        :return: The quantity of this OrderItem.
        :rtype: int
        """
        return self._quantity

    @quantity.setter
    def quantity(self, quantity):
        """Sets the quantity of this OrderItem.

        The number of items with the specified product `id` included in the order.

        :param quantity: The quantity of this OrderItem.
        :type quantity: int
        """

        self._quantity = quantity
