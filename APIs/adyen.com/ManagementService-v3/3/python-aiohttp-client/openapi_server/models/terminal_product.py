# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.terminal_product_price import TerminalProductPrice
from openapi_server import util


class TerminalProduct(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, id: str=None, items_included: List[str]=None, name: str=None, price: TerminalProductPrice=None):
        """TerminalProduct - a model defined in OpenAPI

        :param description: The description of this TerminalProduct.
        :param id: The id of this TerminalProduct.
        :param items_included: The items_included of this TerminalProduct.
        :param name: The name of this TerminalProduct.
        :param price: The price of this TerminalProduct.
        """
        self.openapi_types = {
            'description': str,
            'id': str,
            'items_included': List[str],
            'name': str,
            'price': TerminalProductPrice
        }

        self.attribute_map = {
            'description': 'description',
            'id': 'id',
            'items_included': 'itemsIncluded',
            'name': 'name',
            'price': 'price'
        }

        self._description = description
        self._id = id
        self._items_included = items_included
        self._name = name
        self._price = price

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TerminalProduct':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TerminalProduct of this TerminalProduct.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this TerminalProduct.

        Information about items included and integration options.

        :return: The description of this TerminalProduct.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this TerminalProduct.

        Information about items included and integration options.

        :param description: The description of this TerminalProduct.
        :type description: str
        """

        self._description = description

    @property
    def id(self):
        """Gets the id of this TerminalProduct.

        The unique identifier of the product.

        :return: The id of this TerminalProduct.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this TerminalProduct.

        The unique identifier of the product.

        :param id: The id of this TerminalProduct.
        :type id: str
        """

        self._id = id

    @property
    def items_included(self):
        """Gets the items_included of this TerminalProduct.

        A list of parts included in the terminal package.

        :return: The items_included of this TerminalProduct.
        :rtype: List[str]
        """
        return self._items_included

    @items_included.setter
    def items_included(self, items_included):
        """Sets the items_included of this TerminalProduct.

        A list of parts included in the terminal package.

        :param items_included: The items_included of this TerminalProduct.
        :type items_included: List[str]
        """

        self._items_included = items_included

    @property
    def name(self):
        """Gets the name of this TerminalProduct.

        The descriptive name of the product.

        :return: The name of this TerminalProduct.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this TerminalProduct.

        The descriptive name of the product.

        :param name: The name of this TerminalProduct.
        :type name: str
        """

        self._name = name

    @property
    def price(self):
        """Gets the price of this TerminalProduct.

        The price of the product.

        :return: The price of this TerminalProduct.
        :rtype: TerminalProductPrice
        """
        return self._price

    @price.setter
    def price(self, price):
        """Sets the price of this TerminalProduct.

        The price of the product.

        :param price: The price of this TerminalProduct.
        :type price: TerminalProductPrice
        """

        self._price = price
