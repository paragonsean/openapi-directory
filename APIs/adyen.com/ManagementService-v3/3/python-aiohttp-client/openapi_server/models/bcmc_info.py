# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.transaction_description_info import TransactionDescriptionInfo
from openapi_server import util


class BcmcInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, enable_bcmc_mobile: bool=None, transaction_description: TransactionDescriptionInfo=None):
        """BcmcInfo - a model defined in OpenAPI

        :param enable_bcmc_mobile: The enable_bcmc_mobile of this BcmcInfo.
        :param transaction_description: The transaction_description of this BcmcInfo.
        """
        self.openapi_types = {
            'enable_bcmc_mobile': bool,
            'transaction_description': TransactionDescriptionInfo
        }

        self.attribute_map = {
            'enable_bcmc_mobile': 'enableBcmcMobile',
            'transaction_description': 'transactionDescription'
        }

        self._enable_bcmc_mobile = enable_bcmc_mobile
        self._transaction_description = transaction_description

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BcmcInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BcmcInfo of this BcmcInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def enable_bcmc_mobile(self):
        """Gets the enable_bcmc_mobile of this BcmcInfo.

        Indicates if [Bancontact mobile](https://docs.adyen.com/payment-methods/bancontact/bancontact-mobile) is enabled.

        :return: The enable_bcmc_mobile of this BcmcInfo.
        :rtype: bool
        """
        return self._enable_bcmc_mobile

    @enable_bcmc_mobile.setter
    def enable_bcmc_mobile(self, enable_bcmc_mobile):
        """Sets the enable_bcmc_mobile of this BcmcInfo.

        Indicates if [Bancontact mobile](https://docs.adyen.com/payment-methods/bancontact/bancontact-mobile) is enabled.

        :param enable_bcmc_mobile: The enable_bcmc_mobile of this BcmcInfo.
        :type enable_bcmc_mobile: bool
        """

        self._enable_bcmc_mobile = enable_bcmc_mobile

    @property
    def transaction_description(self):
        """Gets the transaction_description of this BcmcInfo.

        Information regarding the transaction description.

        :return: The transaction_description of this BcmcInfo.
        :rtype: TransactionDescriptionInfo
        """
        return self._transaction_description

    @transaction_description.setter
    def transaction_description(self, transaction_description):
        """Sets the transaction_description of this BcmcInfo.

        Information regarding the transaction description.

        :param transaction_description: The transaction_description of this BcmcInfo.
        :type transaction_description: TransactionDescriptionInfo
        """

        self._transaction_description = transaction_description
