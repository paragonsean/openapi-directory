# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Localization(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, language: str=None, secondary_language: str=None, timezone: str=None):
        """Localization - a model defined in OpenAPI

        :param language: The language of this Localization.
        :param secondary_language: The secondary_language of this Localization.
        :param timezone: The timezone of this Localization.
        """
        self.openapi_types = {
            'language': str,
            'secondary_language': str,
            'timezone': str
        }

        self.attribute_map = {
            'language': 'language',
            'secondary_language': 'secondaryLanguage',
            'timezone': 'timezone'
        }

        self._language = language
        self._secondary_language = secondary_language
        self._timezone = timezone

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Localization':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Localization of this Localization.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def language(self):
        """Gets the language of this Localization.

        Language of the terminal.

        :return: The language of this Localization.
        :rtype: str
        """
        return self._language

    @language.setter
    def language(self, language):
        """Sets the language of this Localization.

        Language of the terminal.

        :param language: The language of this Localization.
        :type language: str
        """

        self._language = language

    @property
    def secondary_language(self):
        """Gets the secondary_language of this Localization.

        Secondary language of the terminal.

        :return: The secondary_language of this Localization.
        :rtype: str
        """
        return self._secondary_language

    @secondary_language.setter
    def secondary_language(self, secondary_language):
        """Sets the secondary_language of this Localization.

        Secondary language of the terminal.

        :param secondary_language: The secondary_language of this Localization.
        :type secondary_language: str
        """

        self._secondary_language = secondary_language

    @property
    def timezone(self):
        """Gets the timezone of this Localization.

        The time zone of the terminal.

        :return: The timezone of this Localization.
        :rtype: str
        """
        return self._timezone

    @timezone.setter
    def timezone(self, timezone):
        """Sets the timezone of this Localization.

        The time zone of the terminal.

        :param timezone: The timezone of this Localization.
        :type timezone: str
        """

        self._timezone = timezone
