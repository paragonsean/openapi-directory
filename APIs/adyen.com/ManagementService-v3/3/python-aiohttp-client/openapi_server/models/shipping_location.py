# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.address import Address
from openapi_server.models.contact import Contact
from openapi_server import util


class ShippingLocation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, address: Address=None, contact: Contact=None, id: str=None, name: str=None):
        """ShippingLocation - a model defined in OpenAPI

        :param address: The address of this ShippingLocation.
        :param contact: The contact of this ShippingLocation.
        :param id: The id of this ShippingLocation.
        :param name: The name of this ShippingLocation.
        """
        self.openapi_types = {
            'address': Address,
            'contact': Contact,
            'id': str,
            'name': str
        }

        self.attribute_map = {
            'address': 'address',
            'contact': 'contact',
            'id': 'id',
            'name': 'name'
        }

        self._address = address
        self._contact = contact
        self._id = id
        self._name = name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ShippingLocation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ShippingLocation of this ShippingLocation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def address(self):
        """Gets the address of this ShippingLocation.

        The address details of the shipping location.

        :return: The address of this ShippingLocation.
        :rtype: Address
        """
        return self._address

    @address.setter
    def address(self, address):
        """Sets the address of this ShippingLocation.

        The address details of the shipping location.

        :param address: The address of this ShippingLocation.
        :type address: Address
        """

        self._address = address

    @property
    def contact(self):
        """Gets the contact of this ShippingLocation.

        The contact details for the shipping location.

        :return: The contact of this ShippingLocation.
        :rtype: Contact
        """
        return self._contact

    @contact.setter
    def contact(self, contact):
        """Sets the contact of this ShippingLocation.

        The contact details for the shipping location.

        :param contact: The contact of this ShippingLocation.
        :type contact: Contact
        """

        self._contact = contact

    @property
    def id(self):
        """Gets the id of this ShippingLocation.

        The unique identifier of the shipping location, for use as `shippingLocationId` when creating an order.

        :return: The id of this ShippingLocation.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ShippingLocation.

        The unique identifier of the shipping location, for use as `shippingLocationId` when creating an order.

        :param id: The id of this ShippingLocation.
        :type id: str
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this ShippingLocation.

        The unique name of the shipping location.

        :return: The name of this ShippingLocation.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ShippingLocation.

        The unique name of the shipping location.

        :param name: The name of this ShippingLocation.
        :type name: str
        """

        self._name = name
