# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.terminal_assignment import TerminalAssignment
from openapi_server.models.terminal_connectivity import TerminalConnectivity
from openapi_server import util


class Terminal(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, assignment: TerminalAssignment=None, connectivity: TerminalConnectivity=None, firmware_version: str=None, id: str=None, last_activity_at: datetime=None, last_transaction_at: datetime=None, model: str=None, serial_number: str=None):
        """Terminal - a model defined in OpenAPI

        :param assignment: The assignment of this Terminal.
        :param connectivity: The connectivity of this Terminal.
        :param firmware_version: The firmware_version of this Terminal.
        :param id: The id of this Terminal.
        :param last_activity_at: The last_activity_at of this Terminal.
        :param last_transaction_at: The last_transaction_at of this Terminal.
        :param model: The model of this Terminal.
        :param serial_number: The serial_number of this Terminal.
        """
        self.openapi_types = {
            'assignment': TerminalAssignment,
            'connectivity': TerminalConnectivity,
            'firmware_version': str,
            'id': str,
            'last_activity_at': datetime,
            'last_transaction_at': datetime,
            'model': str,
            'serial_number': str
        }

        self.attribute_map = {
            'assignment': 'assignment',
            'connectivity': 'connectivity',
            'firmware_version': 'firmwareVersion',
            'id': 'id',
            'last_activity_at': 'lastActivityAt',
            'last_transaction_at': 'lastTransactionAt',
            'model': 'model',
            'serial_number': 'serialNumber'
        }

        self._assignment = assignment
        self._connectivity = connectivity
        self._firmware_version = firmware_version
        self._id = id
        self._last_activity_at = last_activity_at
        self._last_transaction_at = last_transaction_at
        self._model = model
        self._serial_number = serial_number

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Terminal':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Terminal of this Terminal.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def assignment(self):
        """Gets the assignment of this Terminal.

        Indicates the account level to which the terminal is assigned, the [assignment status](https://docs.adyen.com/point-of-sale/automating-terminal-management/assign-terminals-api), and where the terminals is in the process of being reassigned to.

        :return: The assignment of this Terminal.
        :rtype: TerminalAssignment
        """
        return self._assignment

    @assignment.setter
    def assignment(self, assignment):
        """Sets the assignment of this Terminal.

        Indicates the account level to which the terminal is assigned, the [assignment status](https://docs.adyen.com/point-of-sale/automating-terminal-management/assign-terminals-api), and where the terminals is in the process of being reassigned to.

        :param assignment: The assignment of this Terminal.
        :type assignment: TerminalAssignment
        """

        self._assignment = assignment

    @property
    def connectivity(self):
        """Gets the connectivity of this Terminal.

        Information about bluetooth, cellular, ethernet and wifi connectivity for the terminal.

        :return: The connectivity of this Terminal.
        :rtype: TerminalConnectivity
        """
        return self._connectivity

    @connectivity.setter
    def connectivity(self, connectivity):
        """Sets the connectivity of this Terminal.

        Information about bluetooth, cellular, ethernet and wifi connectivity for the terminal.

        :param connectivity: The connectivity of this Terminal.
        :type connectivity: TerminalConnectivity
        """

        self._connectivity = connectivity

    @property
    def firmware_version(self):
        """Gets the firmware_version of this Terminal.

        The software release currently in use on the terminal.

        :return: The firmware_version of this Terminal.
        :rtype: str
        """
        return self._firmware_version

    @firmware_version.setter
    def firmware_version(self, firmware_version):
        """Sets the firmware_version of this Terminal.

        The software release currently in use on the terminal.

        :param firmware_version: The firmware_version of this Terminal.
        :type firmware_version: str
        """

        self._firmware_version = firmware_version

    @property
    def id(self):
        """Gets the id of this Terminal.

        The unique identifier of the terminal.

        :return: The id of this Terminal.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Terminal.

        The unique identifier of the terminal.

        :param id: The id of this Terminal.
        :type id: str
        """

        self._id = id

    @property
    def last_activity_at(self):
        """Gets the last_activity_at of this Terminal.

        Date and time of the last activity on the terminal. Not included when the last activity was more than 14 days ago.

        :return: The last_activity_at of this Terminal.
        :rtype: datetime
        """
        return self._last_activity_at

    @last_activity_at.setter
    def last_activity_at(self, last_activity_at):
        """Sets the last_activity_at of this Terminal.

        Date and time of the last activity on the terminal. Not included when the last activity was more than 14 days ago.

        :param last_activity_at: The last_activity_at of this Terminal.
        :type last_activity_at: datetime
        """

        self._last_activity_at = last_activity_at

    @property
    def last_transaction_at(self):
        """Gets the last_transaction_at of this Terminal.

        Date and time of the last transaction on the terminal. Not included when the last transaction was more than 14 days ago.

        :return: The last_transaction_at of this Terminal.
        :rtype: datetime
        """
        return self._last_transaction_at

    @last_transaction_at.setter
    def last_transaction_at(self, last_transaction_at):
        """Sets the last_transaction_at of this Terminal.

        Date and time of the last transaction on the terminal. Not included when the last transaction was more than 14 days ago.

        :param last_transaction_at: The last_transaction_at of this Terminal.
        :type last_transaction_at: datetime
        """

        self._last_transaction_at = last_transaction_at

    @property
    def model(self):
        """Gets the model of this Terminal.

        The model name of the terminal.

        :return: The model of this Terminal.
        :rtype: str
        """
        return self._model

    @model.setter
    def model(self, model):
        """Sets the model of this Terminal.

        The model name of the terminal.

        :param model: The model of this Terminal.
        :type model: str
        """

        self._model = model

    @property
    def serial_number(self):
        """Gets the serial_number of this Terminal.

        The serial number of the terminal.

        :return: The serial_number of this Terminal.
        :rtype: str
        """
        return self._serial_number

    @serial_number.setter
    def serial_number(self, serial_number):
        """Sets the serial_number of this Terminal.

        The serial number of the terminal.

        :param serial_number: The serial_number of this Terminal.
        :type serial_number: str
        """

        self._serial_number = serial_number
