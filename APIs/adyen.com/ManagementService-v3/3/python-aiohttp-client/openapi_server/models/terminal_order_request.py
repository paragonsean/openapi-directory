# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.order_item import OrderItem
from openapi_server import util


class TerminalOrderRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, billing_entity_id: str=None, customer_order_reference: str=None, items: List[OrderItem]=None, order_type: str=None, shipping_location_id: str=None, tax_id: str=None):
        """TerminalOrderRequest - a model defined in OpenAPI

        :param billing_entity_id: The billing_entity_id of this TerminalOrderRequest.
        :param customer_order_reference: The customer_order_reference of this TerminalOrderRequest.
        :param items: The items of this TerminalOrderRequest.
        :param order_type: The order_type of this TerminalOrderRequest.
        :param shipping_location_id: The shipping_location_id of this TerminalOrderRequest.
        :param tax_id: The tax_id of this TerminalOrderRequest.
        """
        self.openapi_types = {
            'billing_entity_id': str,
            'customer_order_reference': str,
            'items': List[OrderItem],
            'order_type': str,
            'shipping_location_id': str,
            'tax_id': str
        }

        self.attribute_map = {
            'billing_entity_id': 'billingEntityId',
            'customer_order_reference': 'customerOrderReference',
            'items': 'items',
            'order_type': 'orderType',
            'shipping_location_id': 'shippingLocationId',
            'tax_id': 'taxId'
        }

        self._billing_entity_id = billing_entity_id
        self._customer_order_reference = customer_order_reference
        self._items = items
        self._order_type = order_type
        self._shipping_location_id = shipping_location_id
        self._tax_id = tax_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TerminalOrderRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TerminalOrderRequest of this TerminalOrderRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def billing_entity_id(self):
        """Gets the billing_entity_id of this TerminalOrderRequest.

        The identification of the billing entity to use for the order.

        :return: The billing_entity_id of this TerminalOrderRequest.
        :rtype: str
        """
        return self._billing_entity_id

    @billing_entity_id.setter
    def billing_entity_id(self, billing_entity_id):
        """Sets the billing_entity_id of this TerminalOrderRequest.

        The identification of the billing entity to use for the order.

        :param billing_entity_id: The billing_entity_id of this TerminalOrderRequest.
        :type billing_entity_id: str
        """

        self._billing_entity_id = billing_entity_id

    @property
    def customer_order_reference(self):
        """Gets the customer_order_reference of this TerminalOrderRequest.

        The merchant-defined purchase order reference.

        :return: The customer_order_reference of this TerminalOrderRequest.
        :rtype: str
        """
        return self._customer_order_reference

    @customer_order_reference.setter
    def customer_order_reference(self, customer_order_reference):
        """Sets the customer_order_reference of this TerminalOrderRequest.

        The merchant-defined purchase order reference.

        :param customer_order_reference: The customer_order_reference of this TerminalOrderRequest.
        :type customer_order_reference: str
        """

        self._customer_order_reference = customer_order_reference

    @property
    def items(self):
        """Gets the items of this TerminalOrderRequest.

        The products included in the order.

        :return: The items of this TerminalOrderRequest.
        :rtype: List[OrderItem]
        """
        return self._items

    @items.setter
    def items(self, items):
        """Sets the items of this TerminalOrderRequest.

        The products included in the order.

        :param items: The items of this TerminalOrderRequest.
        :type items: List[OrderItem]
        """

        self._items = items

    @property
    def order_type(self):
        """Gets the order_type of this TerminalOrderRequest.

        Type of order

        :return: The order_type of this TerminalOrderRequest.
        :rtype: str
        """
        return self._order_type

    @order_type.setter
    def order_type(self, order_type):
        """Sets the order_type of this TerminalOrderRequest.

        Type of order

        :param order_type: The order_type of this TerminalOrderRequest.
        :type order_type: str
        """

        self._order_type = order_type

    @property
    def shipping_location_id(self):
        """Gets the shipping_location_id of this TerminalOrderRequest.

        The identification of the shipping location to use for the order.

        :return: The shipping_location_id of this TerminalOrderRequest.
        :rtype: str
        """
        return self._shipping_location_id

    @shipping_location_id.setter
    def shipping_location_id(self, shipping_location_id):
        """Sets the shipping_location_id of this TerminalOrderRequest.

        The identification of the shipping location to use for the order.

        :param shipping_location_id: The shipping_location_id of this TerminalOrderRequest.
        :type shipping_location_id: str
        """

        self._shipping_location_id = shipping_location_id

    @property
    def tax_id(self):
        """Gets the tax_id of this TerminalOrderRequest.

        The tax number of the billing entity.

        :return: The tax_id of this TerminalOrderRequest.
        :rtype: str
        """
        return self._tax_id

    @tax_id.setter
    def tax_id(self, tax_id):
        """Sets the tax_id of this TerminalOrderRequest.

        The tax number of the billing entity.

        :param tax_id: The tax_id of this TerminalOrderRequest.
        :type tax_id: str
        """

        self._tax_id = tax_id
