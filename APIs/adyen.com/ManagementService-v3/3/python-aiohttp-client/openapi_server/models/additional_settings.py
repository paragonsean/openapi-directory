# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AdditionalSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, include_event_codes: List[str]=None, properties: Dict[str, bool]=None):
        """AdditionalSettings - a model defined in OpenAPI

        :param include_event_codes: The include_event_codes of this AdditionalSettings.
        :param properties: The properties of this AdditionalSettings.
        """
        self.openapi_types = {
            'include_event_codes': List[str],
            'properties': Dict[str, bool]
        }

        self.attribute_map = {
            'include_event_codes': 'includeEventCodes',
            'properties': 'properties'
        }

        self._include_event_codes = include_event_codes
        self._properties = properties

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AdditionalSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AdditionalSettings of this AdditionalSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def include_event_codes(self):
        """Gets the include_event_codes of this AdditionalSettings.

        Object containing list of event codes for which the notifcation will be sent. 

        :return: The include_event_codes of this AdditionalSettings.
        :rtype: List[str]
        """
        return self._include_event_codes

    @include_event_codes.setter
    def include_event_codes(self, include_event_codes):
        """Sets the include_event_codes of this AdditionalSettings.

        Object containing list of event codes for which the notifcation will be sent. 

        :param include_event_codes: The include_event_codes of this AdditionalSettings.
        :type include_event_codes: List[str]
        """

        self._include_event_codes = include_event_codes

    @property
    def properties(self):
        """Gets the properties of this AdditionalSettings.

        Object containing boolean key-value pairs. The key can be any [standard webhook additional setting](https://docs.adyen.com/development-resources/webhooks/additional-settings), and the value indicates if the setting is enabled. For example, `captureDelayHours`: **true** means the standard notifications you get will contain the number of hours remaining until the payment will be captured.

        :return: The properties of this AdditionalSettings.
        :rtype: Dict[str, bool]
        """
        return self._properties

    @properties.setter
    def properties(self, properties):
        """Sets the properties of this AdditionalSettings.

        Object containing boolean key-value pairs. The key can be any [standard webhook additional setting](https://docs.adyen.com/development-resources/webhooks/additional-settings), and the value indicates if the setting is enabled. For example, `captureDelayHours`: **true** means the standard notifications you get will contain the number of hours remaining until the payment will be captured.

        :param properties: The properties of this AdditionalSettings.
        :type properties: Dict[str, bool]
        """

        self._properties = properties
