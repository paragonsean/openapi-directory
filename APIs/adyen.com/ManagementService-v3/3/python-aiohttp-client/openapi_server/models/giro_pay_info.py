# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GiroPayInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, support_email: str=None):
        """GiroPayInfo - a model defined in OpenAPI

        :param support_email: The support_email of this GiroPayInfo.
        """
        self.openapi_types = {
            'support_email': str
        }

        self.attribute_map = {
            'support_email': 'supportEmail'
        }

        self._support_email = support_email

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GiroPayInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GiroPayInfo of this GiroPayInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def support_email(self):
        """Gets the support_email of this GiroPayInfo.

        The email address of merchant support.

        :return: The support_email of this GiroPayInfo.
        :rtype: str
        """
        return self._support_email

    @support_email.setter
    def support_email(self, support_email):
        """Sets the support_email of this GiroPayInfo.

        The email address of merchant support.

        :param support_email: The support_email of this GiroPayInfo.
        :type support_email: str
        """
        if support_email is None:
            raise ValueError("Invalid value for `support_email`, must not be `None`")

        self._support_email = support_email
