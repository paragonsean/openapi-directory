# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Hardware(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, display_maximum_back_light: int=None, reset_totals_hour: int=None, restart_hour: int=None):
        """Hardware - a model defined in OpenAPI

        :param display_maximum_back_light: The display_maximum_back_light of this Hardware.
        :param reset_totals_hour: The reset_totals_hour of this Hardware.
        :param restart_hour: The restart_hour of this Hardware.
        """
        self.openapi_types = {
            'display_maximum_back_light': int,
            'reset_totals_hour': int,
            'restart_hour': int
        }

        self.attribute_map = {
            'display_maximum_back_light': 'displayMaximumBackLight',
            'reset_totals_hour': 'resetTotalsHour',
            'restart_hour': 'restartHour'
        }

        self._display_maximum_back_light = display_maximum_back_light
        self._reset_totals_hour = reset_totals_hour
        self._restart_hour = restart_hour

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Hardware':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Hardware of this Hardware.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def display_maximum_back_light(self):
        """Gets the display_maximum_back_light of this Hardware.

        The brightness of the display when the terminal is being used, expressed as a percentage.

        :return: The display_maximum_back_light of this Hardware.
        :rtype: int
        """
        return self._display_maximum_back_light

    @display_maximum_back_light.setter
    def display_maximum_back_light(self, display_maximum_back_light):
        """Sets the display_maximum_back_light of this Hardware.

        The brightness of the display when the terminal is being used, expressed as a percentage.

        :param display_maximum_back_light: The display_maximum_back_light of this Hardware.
        :type display_maximum_back_light: int
        """

        self._display_maximum_back_light = display_maximum_back_light

    @property
    def reset_totals_hour(self):
        """Gets the reset_totals_hour of this Hardware.

        The hour of the day when the terminal is set to reset the Totals report. By default, the reset hour is at 6:00 AM in the timezone of the terminal. Minimum value: 0, maximum value: 23.

        :return: The reset_totals_hour of this Hardware.
        :rtype: int
        """
        return self._reset_totals_hour

    @reset_totals_hour.setter
    def reset_totals_hour(self, reset_totals_hour):
        """Sets the reset_totals_hour of this Hardware.

        The hour of the day when the terminal is set to reset the Totals report. By default, the reset hour is at 6:00 AM in the timezone of the terminal. Minimum value: 0, maximum value: 23.

        :param reset_totals_hour: The reset_totals_hour of this Hardware.
        :type reset_totals_hour: int
        """

        self._reset_totals_hour = reset_totals_hour

    @property
    def restart_hour(self):
        """Gets the restart_hour of this Hardware.

        The hour of the day when the terminal is set to reboot to apply the configuration and software updates. By default, the restart hour is at 6:00 AM in the timezone of the terminal. Minimum value: 0, maximum value: 23.

        :return: The restart_hour of this Hardware.
        :rtype: int
        """
        return self._restart_hour

    @restart_hour.setter
    def restart_hour(self, restart_hour):
        """Sets the restart_hour of this Hardware.

        The hour of the day when the terminal is set to reboot to apply the configuration and software updates. By default, the restart hour is at 6:00 AM in the timezone of the terminal. Minimum value: 0, maximum value: 23.

        :param restart_hour: The restart_hour of this Hardware.
        :type restart_hour: int
        """

        self._restart_hour = restart_hour
