# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.profile import Profile
from openapi_server.models.settings import Settings
from openapi_server import util


class WifiProfiles(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, profiles: List[Profile]=None, settings: Settings=None):
        """WifiProfiles - a model defined in OpenAPI

        :param profiles: The profiles of this WifiProfiles.
        :param settings: The settings of this WifiProfiles.
        """
        self.openapi_types = {
            'profiles': List[Profile],
            'settings': Settings
        }

        self.attribute_map = {
            'profiles': 'profiles',
            'settings': 'settings'
        }

        self._profiles = profiles
        self._settings = settings

    @classmethod
    def from_dict(cls, dikt: dict) -> 'WifiProfiles':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The WifiProfiles of this WifiProfiles.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def profiles(self):
        """Gets the profiles of this WifiProfiles.

        List of remote Wi-Fi profiles.

        :return: The profiles of this WifiProfiles.
        :rtype: List[Profile]
        """
        return self._profiles

    @profiles.setter
    def profiles(self, profiles):
        """Sets the profiles of this WifiProfiles.

        List of remote Wi-Fi profiles.

        :param profiles: The profiles of this WifiProfiles.
        :type profiles: List[Profile]
        """

        self._profiles = profiles

    @property
    def settings(self):
        """Gets the settings of this WifiProfiles.

        General Wi-Fi settings.

        :return: The settings of this WifiProfiles.
        :rtype: Settings
        """
        return self._settings

    @settings.setter
    def settings(self, settings):
        """Sets the settings of this WifiProfiles.

        General Wi-Fi settings.

        :param settings: The settings of this WifiProfiles.
        :type settings: Settings
        """

        self._settings = settings
