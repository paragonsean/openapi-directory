# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TerminalConnectivityEthernet(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ip_address: str=None, link_negotiation: str=None, mac_address: str=None):
        """TerminalConnectivityEthernet - a model defined in OpenAPI

        :param ip_address: The ip_address of this TerminalConnectivityEthernet.
        :param link_negotiation: The link_negotiation of this TerminalConnectivityEthernet.
        :param mac_address: The mac_address of this TerminalConnectivityEthernet.
        """
        self.openapi_types = {
            'ip_address': str,
            'link_negotiation': str,
            'mac_address': str
        }

        self.attribute_map = {
            'ip_address': 'ipAddress',
            'link_negotiation': 'linkNegotiation',
            'mac_address': 'macAddress'
        }

        self._ip_address = ip_address
        self._link_negotiation = link_negotiation
        self._mac_address = mac_address

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TerminalConnectivityEthernet':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TerminalConnectivityEthernet of this TerminalConnectivityEthernet.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ip_address(self):
        """Gets the ip_address of this TerminalConnectivityEthernet.

        The terminal's ethernet IP address.

        :return: The ip_address of this TerminalConnectivityEthernet.
        :rtype: str
        """
        return self._ip_address

    @ip_address.setter
    def ip_address(self, ip_address):
        """Sets the ip_address of this TerminalConnectivityEthernet.

        The terminal's ethernet IP address.

        :param ip_address: The ip_address of this TerminalConnectivityEthernet.
        :type ip_address: str
        """

        self._ip_address = ip_address

    @property
    def link_negotiation(self):
        """Gets the link_negotiation of this TerminalConnectivityEthernet.

        The ethernet link negotiation that the terminal uses.

        :return: The link_negotiation of this TerminalConnectivityEthernet.
        :rtype: str
        """
        return self._link_negotiation

    @link_negotiation.setter
    def link_negotiation(self, link_negotiation):
        """Sets the link_negotiation of this TerminalConnectivityEthernet.

        The ethernet link negotiation that the terminal uses.

        :param link_negotiation: The link_negotiation of this TerminalConnectivityEthernet.
        :type link_negotiation: str
        """

        self._link_negotiation = link_negotiation

    @property
    def mac_address(self):
        """Gets the mac_address of this TerminalConnectivityEthernet.

        The terminal's ethernet MAC address.

        :return: The mac_address of this TerminalConnectivityEthernet.
        :rtype: str
        """
        return self._mac_address

    @mac_address.setter
    def mac_address(self, mac_address):
        """Sets the mac_address of this TerminalConnectivityEthernet.

        The terminal's ethernet MAC address.

        :param mac_address: The mac_address of this TerminalConnectivityEthernet.
        :type mac_address: str
        """

        self._mac_address = mac_address
