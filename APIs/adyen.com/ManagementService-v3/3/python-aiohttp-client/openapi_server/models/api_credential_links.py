# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.links_element import LinksElement
from openapi_server import util


class ApiCredentialLinks(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, allowed_origins: LinksElement=None, company: LinksElement=None, generate_api_key: LinksElement=None, generate_client_key: LinksElement=None, merchant: LinksElement=None, _self: LinksElement=None):
        """ApiCredentialLinks - a model defined in OpenAPI

        :param allowed_origins: The allowed_origins of this ApiCredentialLinks.
        :param company: The company of this ApiCredentialLinks.
        :param generate_api_key: The generate_api_key of this ApiCredentialLinks.
        :param generate_client_key: The generate_client_key of this ApiCredentialLinks.
        :param merchant: The merchant of this ApiCredentialLinks.
        :param _self: The _self of this ApiCredentialLinks.
        """
        self.openapi_types = {
            'allowed_origins': LinksElement,
            'company': LinksElement,
            'generate_api_key': LinksElement,
            'generate_client_key': LinksElement,
            'merchant': LinksElement,
            '_self': LinksElement
        }

        self.attribute_map = {
            'allowed_origins': 'allowedOrigins',
            'company': 'company',
            'generate_api_key': 'generateApiKey',
            'generate_client_key': 'generateClientKey',
            'merchant': 'merchant',
            '_self': 'self'
        }

        self._allowed_origins = allowed_origins
        self._company = company
        self._generate_api_key = generate_api_key
        self._generate_client_key = generate_client_key
        self._merchant = merchant
        self.__self = _self

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApiCredentialLinks':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ApiCredentialLinks of this ApiCredentialLinks.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def allowed_origins(self):
        """Gets the allowed_origins of this ApiCredentialLinks.

        List of allowed origins.

        :return: The allowed_origins of this ApiCredentialLinks.
        :rtype: LinksElement
        """
        return self._allowed_origins

    @allowed_origins.setter
    def allowed_origins(self, allowed_origins):
        """Sets the allowed_origins of this ApiCredentialLinks.

        List of allowed origins.

        :param allowed_origins: The allowed_origins of this ApiCredentialLinks.
        :type allowed_origins: LinksElement
        """

        self._allowed_origins = allowed_origins

    @property
    def company(self):
        """Gets the company of this ApiCredentialLinks.

        Company account that the API credential is linked to. Only present for company-level webhooks.

        :return: The company of this ApiCredentialLinks.
        :rtype: LinksElement
        """
        return self._company

    @company.setter
    def company(self, company):
        """Sets the company of this ApiCredentialLinks.

        Company account that the API credential is linked to. Only present for company-level webhooks.

        :param company: The company of this ApiCredentialLinks.
        :type company: LinksElement
        """

        self._company = company

    @property
    def generate_api_key(self):
        """Gets the generate_api_key of this ApiCredentialLinks.

        Generates a new API key. When you generate a new one, the existing key remains valid for 24 hours. 

        :return: The generate_api_key of this ApiCredentialLinks.
        :rtype: LinksElement
        """
        return self._generate_api_key

    @generate_api_key.setter
    def generate_api_key(self, generate_api_key):
        """Sets the generate_api_key of this ApiCredentialLinks.

        Generates a new API key. When you generate a new one, the existing key remains valid for 24 hours. 

        :param generate_api_key: The generate_api_key of this ApiCredentialLinks.
        :type generate_api_key: LinksElement
        """

        self._generate_api_key = generate_api_key

    @property
    def generate_client_key(self):
        """Gets the generate_client_key of this ApiCredentialLinks.

        Generates a new client key, used to authenticate client-side requests. When you generate a new one, the existing key remains valid for 24 hours.

        :return: The generate_client_key of this ApiCredentialLinks.
        :rtype: LinksElement
        """
        return self._generate_client_key

    @generate_client_key.setter
    def generate_client_key(self, generate_client_key):
        """Sets the generate_client_key of this ApiCredentialLinks.

        Generates a new client key, used to authenticate client-side requests. When you generate a new one, the existing key remains valid for 24 hours.

        :param generate_client_key: The generate_client_key of this ApiCredentialLinks.
        :type generate_client_key: LinksElement
        """

        self._generate_client_key = generate_client_key

    @property
    def merchant(self):
        """Gets the merchant of this ApiCredentialLinks.

        The merchant account that the API credential is linked to. Only present for merchant-level API credentials.

        :return: The merchant of this ApiCredentialLinks.
        :rtype: LinksElement
        """
        return self._merchant

    @merchant.setter
    def merchant(self, merchant):
        """Sets the merchant of this ApiCredentialLinks.

        The merchant account that the API credential is linked to. Only present for merchant-level API credentials.

        :param merchant: The merchant of this ApiCredentialLinks.
        :type merchant: LinksElement
        """

        self._merchant = merchant

    @property
    def _self(self):
        """Gets the _self of this ApiCredentialLinks.

        Link to the resource itself.

        :return: The _self of this ApiCredentialLinks.
        :rtype: LinksElement
        """
        return self.__self

    @_self.setter
    def _self(self, _self):
        """Sets the _self of this ApiCredentialLinks.

        Link to the resource itself.

        :param _self: The _self of this ApiCredentialLinks.
        :type _self: LinksElement
        """
        if _self is None:
            raise ValueError("Invalid value for `_self`, must not be `None`")

        self.__self = _self
