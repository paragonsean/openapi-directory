# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TestOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, merchant_id: str=None, output: str=None, request_sent: str=None, response_code: str=None, response_time: str=None, status: str=None):
        """TestOutput - a model defined in OpenAPI

        :param merchant_id: The merchant_id of this TestOutput.
        :param output: The output of this TestOutput.
        :param request_sent: The request_sent of this TestOutput.
        :param response_code: The response_code of this TestOutput.
        :param response_time: The response_time of this TestOutput.
        :param status: The status of this TestOutput.
        """
        self.openapi_types = {
            'merchant_id': str,
            'output': str,
            'request_sent': str,
            'response_code': str,
            'response_time': str,
            'status': str
        }

        self.attribute_map = {
            'merchant_id': 'merchantId',
            'output': 'output',
            'request_sent': 'requestSent',
            'response_code': 'responseCode',
            'response_time': 'responseTime',
            'status': 'status'
        }

        self._merchant_id = merchant_id
        self._output = output
        self._request_sent = request_sent
        self._response_code = response_code
        self._response_time = response_time
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TestOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TestOutput of this TestOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def merchant_id(self):
        """Gets the merchant_id of this TestOutput.

        Unique identifier of the merchant account that the notification is about.

        :return: The merchant_id of this TestOutput.
        :rtype: str
        """
        return self._merchant_id

    @merchant_id.setter
    def merchant_id(self, merchant_id):
        """Sets the merchant_id of this TestOutput.

        Unique identifier of the merchant account that the notification is about.

        :param merchant_id: The merchant_id of this TestOutput.
        :type merchant_id: str
        """

        self._merchant_id = merchant_id

    @property
    def output(self):
        """Gets the output of this TestOutput.

        The response your server returned for the test webhook.  Your server must respond with **[accepted]** for the test webhook to be successful (`data.status`: **success**). Find out more about [accepting notifications](https://docs.adyen.com/development-resources/webhooks#accept-notifications)  You can use the value of this field together with the [`responseCode`](https://docs.adyen.com/api-explorer/#/ManagementService/v1/post/merchants/{merchantId}/webhooks/{id}/test__resParam_data-responseCode) value to troubleshoot unsuccessful test webhooks.

        :return: The output of this TestOutput.
        :rtype: str
        """
        return self._output

    @output.setter
    def output(self, output):
        """Sets the output of this TestOutput.

        The response your server returned for the test webhook.  Your server must respond with **[accepted]** for the test webhook to be successful (`data.status`: **success**). Find out more about [accepting notifications](https://docs.adyen.com/development-resources/webhooks#accept-notifications)  You can use the value of this field together with the [`responseCode`](https://docs.adyen.com/api-explorer/#/ManagementService/v1/post/merchants/{merchantId}/webhooks/{id}/test__resParam_data-responseCode) value to troubleshoot unsuccessful test webhooks.

        :param output: The output of this TestOutput.
        :type output: str
        """

        self._output = output

    @property
    def request_sent(self):
        """Gets the request_sent of this TestOutput.

        The [body of the notification webhook](https://docs.adyen.com/development-resources/webhooks/understand-notifications#notification-structure) that was sent to your server.

        :return: The request_sent of this TestOutput.
        :rtype: str
        """
        return self._request_sent

    @request_sent.setter
    def request_sent(self, request_sent):
        """Sets the request_sent of this TestOutput.

        The [body of the notification webhook](https://docs.adyen.com/development-resources/webhooks/understand-notifications#notification-structure) that was sent to your server.

        :param request_sent: The request_sent of this TestOutput.
        :type request_sent: str
        """

        self._request_sent = request_sent

    @property
    def response_code(self):
        """Gets the response_code of this TestOutput.

        The HTTP response code for your server's response to the test webhook.  You can use the value of this field together with the the [`output`](https://docs.adyen.com/api-explorer/#/ManagementService/v1/post/merchants/{merchantId}/webhooks/{id}/test__resParam_data-output) field value to troubleshoot failed test webhooks.

        :return: The response_code of this TestOutput.
        :rtype: str
        """
        return self._response_code

    @response_code.setter
    def response_code(self, response_code):
        """Sets the response_code of this TestOutput.

        The HTTP response code for your server's response to the test webhook.  You can use the value of this field together with the the [`output`](https://docs.adyen.com/api-explorer/#/ManagementService/v1/post/merchants/{merchantId}/webhooks/{id}/test__resParam_data-output) field value to troubleshoot failed test webhooks.

        :param response_code: The response_code of this TestOutput.
        :type response_code: str
        """

        self._response_code = response_code

    @property
    def response_time(self):
        """Gets the response_time of this TestOutput.

        The time between sending the test webhook and receiving the response from your server. You can use it as an indication of how long your server takes to process a webhook notification. Measured in milliseconds, for example **304 ms**.

        :return: The response_time of this TestOutput.
        :rtype: str
        """
        return self._response_time

    @response_time.setter
    def response_time(self, response_time):
        """Sets the response_time of this TestOutput.

        The time between sending the test webhook and receiving the response from your server. You can use it as an indication of how long your server takes to process a webhook notification. Measured in milliseconds, for example **304 ms**.

        :param response_time: The response_time of this TestOutput.
        :type response_time: str
        """

        self._response_time = response_time

    @property
    def status(self):
        """Gets the status of this TestOutput.

        The status of the test request. Possible values are: * **success**, if `data.output`: **[accepted]** and `data.responseCode`: **200**. * **failed**, in all other cases.  You can use the value of the [`output`](https://docs.adyen.com/api-explorer/#/ManagementService/v1/post/merchants/{merchantId}/webhooks/{id}/test__resParam_data-output) field together with the [`responseCode`](https://docs.adyen.com/api-explorer/#/ManagementService/v1/post/merchants/{merchantId}/webhooks/{id}/test__resParam_data-responseCode) value to troubleshoot failed test webhooks.

        :return: The status of this TestOutput.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this TestOutput.

        The status of the test request. Possible values are: * **success**, if `data.output`: **[accepted]** and `data.responseCode`: **200**. * **failed**, in all other cases.  You can use the value of the [`output`](https://docs.adyen.com/api-explorer/#/ManagementService/v1/post/merchants/{merchantId}/webhooks/{id}/test__resParam_data-output) field together with the [`responseCode`](https://docs.adyen.com/api-explorer/#/ManagementService/v1/post/merchants/{merchantId}/webhooks/{id}/test__resParam_data-responseCode) value to troubleshoot failed test webhooks.

        :param status: The status of this TestOutput.
        :type status: str
        """
        if status is None:
            raise ValueError("Invalid value for `status`, must not be `None`")

        self._status = status
