# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AfterpayTouchInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, support_url: str=None):
        """AfterpayTouchInfo - a model defined in OpenAPI

        :param support_url: The support_url of this AfterpayTouchInfo.
        """
        self.openapi_types = {
            'support_url': str
        }

        self.attribute_map = {
            'support_url': 'supportUrl'
        }

        self._support_url = support_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AfterpayTouchInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AfterpayTouchInfo of this AfterpayTouchInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def support_url(self):
        """Gets the support_url of this AfterpayTouchInfo.

        Support Url

        :return: The support_url of this AfterpayTouchInfo.
        :rtype: str
        """
        return self._support_url

    @support_url.setter
    def support_url(self, support_url):
        """Sets the support_url of this AfterpayTouchInfo.

        Support Url

        :param support_url: The support_url of this AfterpayTouchInfo.
        :type support_url: str
        """
        if support_url is None:
            raise ValueError("Invalid value for `support_url`, must not be `None`")

        self._support_url = support_url
