# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreateMerchantResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, business_line_id: str=None, company_id: str=None, description: str=None, id: str=None, legal_entity_id: str=None, pricing_plan: str=None, reference: str=None):
        """CreateMerchantResponse - a model defined in OpenAPI

        :param business_line_id: The business_line_id of this CreateMerchantResponse.
        :param company_id: The company_id of this CreateMerchantResponse.
        :param description: The description of this CreateMerchantResponse.
        :param id: The id of this CreateMerchantResponse.
        :param legal_entity_id: The legal_entity_id of this CreateMerchantResponse.
        :param pricing_plan: The pricing_plan of this CreateMerchantResponse.
        :param reference: The reference of this CreateMerchantResponse.
        """
        self.openapi_types = {
            'business_line_id': str,
            'company_id': str,
            'description': str,
            'id': str,
            'legal_entity_id': str,
            'pricing_plan': str,
            'reference': str
        }

        self.attribute_map = {
            'business_line_id': 'businessLineId',
            'company_id': 'companyId',
            'description': 'description',
            'id': 'id',
            'legal_entity_id': 'legalEntityId',
            'pricing_plan': 'pricingPlan',
            'reference': 'reference'
        }

        self._business_line_id = business_line_id
        self._company_id = company_id
        self._description = description
        self._id = id
        self._legal_entity_id = legal_entity_id
        self._pricing_plan = pricing_plan
        self._reference = reference

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateMerchantResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateMerchantResponse of this CreateMerchantResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def business_line_id(self):
        """Gets the business_line_id of this CreateMerchantResponse.

        The unique identifier of the [business line](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/businessLines).

        :return: The business_line_id of this CreateMerchantResponse.
        :rtype: str
        """
        return self._business_line_id

    @business_line_id.setter
    def business_line_id(self, business_line_id):
        """Sets the business_line_id of this CreateMerchantResponse.

        The unique identifier of the [business line](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/businessLines).

        :param business_line_id: The business_line_id of this CreateMerchantResponse.
        :type business_line_id: str
        """

        self._business_line_id = business_line_id

    @property
    def company_id(self):
        """Gets the company_id of this CreateMerchantResponse.

        The unique identifier of the company account.

        :return: The company_id of this CreateMerchantResponse.
        :rtype: str
        """
        return self._company_id

    @company_id.setter
    def company_id(self, company_id):
        """Sets the company_id of this CreateMerchantResponse.

        The unique identifier of the company account.

        :param company_id: The company_id of this CreateMerchantResponse.
        :type company_id: str
        """

        self._company_id = company_id

    @property
    def description(self):
        """Gets the description of this CreateMerchantResponse.

        Your description for the merchant account, maximum 300 characters.

        :return: The description of this CreateMerchantResponse.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this CreateMerchantResponse.

        Your description for the merchant account, maximum 300 characters.

        :param description: The description of this CreateMerchantResponse.
        :type description: str
        """
        if description is not None and len(description) > 300:
            raise ValueError("Invalid value for `description`, length must be less than or equal to `300`")

        self._description = description

    @property
    def id(self):
        """Gets the id of this CreateMerchantResponse.

        The unique identifier of the merchant account. If Adyen set up a template for the `reference`, then the `id` will have the same value as the `reference` that you sent in the request. Otherwise, the value is generated by Adyen.

        :return: The id of this CreateMerchantResponse.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this CreateMerchantResponse.

        The unique identifier of the merchant account. If Adyen set up a template for the `reference`, then the `id` will have the same value as the `reference` that you sent in the request. Otherwise, the value is generated by Adyen.

        :param id: The id of this CreateMerchantResponse.
        :type id: str
        """

        self._id = id

    @property
    def legal_entity_id(self):
        """Gets the legal_entity_id of this CreateMerchantResponse.

        The unique identifier of the [legal entity](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/legalEntities).

        :return: The legal_entity_id of this CreateMerchantResponse.
        :rtype: str
        """
        return self._legal_entity_id

    @legal_entity_id.setter
    def legal_entity_id(self, legal_entity_id):
        """Sets the legal_entity_id of this CreateMerchantResponse.

        The unique identifier of the [legal entity](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/legalEntities).

        :param legal_entity_id: The legal_entity_id of this CreateMerchantResponse.
        :type legal_entity_id: str
        """

        self._legal_entity_id = legal_entity_id

    @property
    def pricing_plan(self):
        """Gets the pricing_plan of this CreateMerchantResponse.

        Partner pricing plan for the merchant, applicable for merchants under AfP managed company accounts.

        :return: The pricing_plan of this CreateMerchantResponse.
        :rtype: str
        """
        return self._pricing_plan

    @pricing_plan.setter
    def pricing_plan(self, pricing_plan):
        """Sets the pricing_plan of this CreateMerchantResponse.

        Partner pricing plan for the merchant, applicable for merchants under AfP managed company accounts.

        :param pricing_plan: The pricing_plan of this CreateMerchantResponse.
        :type pricing_plan: str
        """

        self._pricing_plan = pricing_plan

    @property
    def reference(self):
        """Gets the reference of this CreateMerchantResponse.

        Your reference for the merchant account.

        :return: The reference of this CreateMerchantResponse.
        :rtype: str
        """
        return self._reference

    @reference.setter
    def reference(self, reference):
        """Sets the reference of this CreateMerchantResponse.

        Your reference for the merchant account.

        :param reference: The reference of this CreateMerchantResponse.
        :type reference: str
        """

        self._reference = reference
