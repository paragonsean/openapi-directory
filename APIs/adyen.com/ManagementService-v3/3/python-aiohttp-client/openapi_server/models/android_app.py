# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AndroidApp(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, error_code: str=None, id: str=None, label: str=None, package_name: str=None, status: str=None, version_code: int=None, version_name: str=None):
        """AndroidApp - a model defined in OpenAPI

        :param description: The description of this AndroidApp.
        :param error_code: The error_code of this AndroidApp.
        :param id: The id of this AndroidApp.
        :param label: The label of this AndroidApp.
        :param package_name: The package_name of this AndroidApp.
        :param status: The status of this AndroidApp.
        :param version_code: The version_code of this AndroidApp.
        :param version_name: The version_name of this AndroidApp.
        """
        self.openapi_types = {
            'description': str,
            'error_code': str,
            'id': str,
            'label': str,
            'package_name': str,
            'status': str,
            'version_code': int,
            'version_name': str
        }

        self.attribute_map = {
            'description': 'description',
            'error_code': 'errorCode',
            'id': 'id',
            'label': 'label',
            'package_name': 'packageName',
            'status': 'status',
            'version_code': 'versionCode',
            'version_name': 'versionName'
        }

        self._description = description
        self._error_code = error_code
        self._id = id
        self._label = label
        self._package_name = package_name
        self._status = status
        self._version_code = version_code
        self._version_name = version_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AndroidApp':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AndroidApp of this AndroidApp.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this AndroidApp.

        The description that was provided when uploading the app. The description is not shown on the terminal.

        :return: The description of this AndroidApp.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this AndroidApp.

        The description that was provided when uploading the app. The description is not shown on the terminal.

        :param description: The description of this AndroidApp.
        :type description: str
        """

        self._description = description

    @property
    def error_code(self):
        """Gets the error_code of this AndroidApp.

        The error code of the app. It exists if the status is error or invalid.

        :return: The error_code of this AndroidApp.
        :rtype: str
        """
        return self._error_code

    @error_code.setter
    def error_code(self, error_code):
        """Sets the error_code of this AndroidApp.

        The error code of the app. It exists if the status is error or invalid.

        :param error_code: The error_code of this AndroidApp.
        :type error_code: str
        """

        self._error_code = error_code

    @property
    def id(self):
        """Gets the id of this AndroidApp.

        The unique identifier of the app.

        :return: The id of this AndroidApp.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this AndroidApp.

        The unique identifier of the app.

        :param id: The id of this AndroidApp.
        :type id: str
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")

        self._id = id

    @property
    def label(self):
        """Gets the label of this AndroidApp.

        The app name that is shown on the terminal.

        :return: The label of this AndroidApp.
        :rtype: str
        """
        return self._label

    @label.setter
    def label(self, label):
        """Sets the label of this AndroidApp.

        The app name that is shown on the terminal.

        :param label: The label of this AndroidApp.
        :type label: str
        """

        self._label = label

    @property
    def package_name(self):
        """Gets the package_name of this AndroidApp.

        The package name that uniquely identifies the Android app.

        :return: The package_name of this AndroidApp.
        :rtype: str
        """
        return self._package_name

    @package_name.setter
    def package_name(self, package_name):
        """Sets the package_name of this AndroidApp.

        The package name that uniquely identifies the Android app.

        :param package_name: The package_name of this AndroidApp.
        :type package_name: str
        """

        self._package_name = package_name

    @property
    def status(self):
        """Gets the status of this AndroidApp.

        The status of the app. Possible values:  * `processing`: the app is being signed and converted to a format that the terminal can handle. * `error`: something went wrong. Check that the app matches the [requirements](https://docs.adyen.com/point-of-sale/android-terminals/app-requirements). * `invalid`: there is something wrong with the APK file of the app. * `ready`: the app has been signed and converted. * `archived`: the app is no longer available.

        :return: The status of this AndroidApp.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this AndroidApp.

        The status of the app. Possible values:  * `processing`: the app is being signed and converted to a format that the terminal can handle. * `error`: something went wrong. Check that the app matches the [requirements](https://docs.adyen.com/point-of-sale/android-terminals/app-requirements). * `invalid`: there is something wrong with the APK file of the app. * `ready`: the app has been signed and converted. * `archived`: the app is no longer available.

        :param status: The status of this AndroidApp.
        :type status: str
        """
        if status is None:
            raise ValueError("Invalid value for `status`, must not be `None`")

        self._status = status

    @property
    def version_code(self):
        """Gets the version_code of this AndroidApp.

        The version number of the app.

        :return: The version_code of this AndroidApp.
        :rtype: int
        """
        return self._version_code

    @version_code.setter
    def version_code(self, version_code):
        """Sets the version_code of this AndroidApp.

        The version number of the app.

        :param version_code: The version_code of this AndroidApp.
        :type version_code: int
        """

        self._version_code = version_code

    @property
    def version_name(self):
        """Gets the version_name of this AndroidApp.

        The app version number that is shown on the terminal.

        :return: The version_name of this AndroidApp.
        :rtype: str
        """
        return self._version_name

    @version_name.setter
    def version_name(self, version_name):
        """Sets the version_name of this AndroidApp.

        The app version number that is shown on the terminal.

        :param version_name: The version_name of this AndroidApp.
        :type version_name: str
        """

        self._version_name = version_name
