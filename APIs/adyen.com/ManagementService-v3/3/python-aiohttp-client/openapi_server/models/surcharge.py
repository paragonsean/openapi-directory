# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.configuration import Configuration
from openapi_server import util


class Surcharge(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ask_confirmation: bool=None, configurations: List[Configuration]=None):
        """Surcharge - a model defined in OpenAPI

        :param ask_confirmation: The ask_confirmation of this Surcharge.
        :param configurations: The configurations of this Surcharge.
        """
        self.openapi_types = {
            'ask_confirmation': bool,
            'configurations': List[Configuration]
        }

        self.attribute_map = {
            'ask_confirmation': 'askConfirmation',
            'configurations': 'configurations'
        }

        self._ask_confirmation = ask_confirmation
        self._configurations = configurations

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Surcharge':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Surcharge of this Surcharge.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ask_confirmation(self):
        """Gets the ask_confirmation of this Surcharge.

        Show the surcharge details on the terminal, so the shopper can confirm.

        :return: The ask_confirmation of this Surcharge.
        :rtype: bool
        """
        return self._ask_confirmation

    @ask_confirmation.setter
    def ask_confirmation(self, ask_confirmation):
        """Sets the ask_confirmation of this Surcharge.

        Show the surcharge details on the terminal, so the shopper can confirm.

        :param ask_confirmation: The ask_confirmation of this Surcharge.
        :type ask_confirmation: bool
        """

        self._ask_confirmation = ask_confirmation

    @property
    def configurations(self):
        """Gets the configurations of this Surcharge.

        Surcharge fees or percentages for specific payment methods, funding sources (credit or debit), and currencies.

        :return: The configurations of this Surcharge.
        :rtype: List[Configuration]
        """
        return self._configurations

    @configurations.setter
    def configurations(self, configurations):
        """Sets the configurations of this Surcharge.

        Surcharge fees or percentages for specific payment methods, funding sources (credit or debit), and currencies.

        :param configurations: The configurations of this Surcharge.
        :type configurations: List[Configuration]
        """

        self._configurations = configurations
