# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.billing_entity import BillingEntity
from openapi_server.models.order_item import OrderItem
from openapi_server.models.shipping_location import ShippingLocation
from openapi_server import util


class TerminalOrder(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, billing_entity: BillingEntity=None, customer_order_reference: str=None, id: str=None, items: List[OrderItem]=None, order_date: str=None, shipping_location: ShippingLocation=None, status: str=None, tracking_url: str=None):
        """TerminalOrder - a model defined in OpenAPI

        :param billing_entity: The billing_entity of this TerminalOrder.
        :param customer_order_reference: The customer_order_reference of this TerminalOrder.
        :param id: The id of this TerminalOrder.
        :param items: The items of this TerminalOrder.
        :param order_date: The order_date of this TerminalOrder.
        :param shipping_location: The shipping_location of this TerminalOrder.
        :param status: The status of this TerminalOrder.
        :param tracking_url: The tracking_url of this TerminalOrder.
        """
        self.openapi_types = {
            'billing_entity': BillingEntity,
            'customer_order_reference': str,
            'id': str,
            'items': List[OrderItem],
            'order_date': str,
            'shipping_location': ShippingLocation,
            'status': str,
            'tracking_url': str
        }

        self.attribute_map = {
            'billing_entity': 'billingEntity',
            'customer_order_reference': 'customerOrderReference',
            'id': 'id',
            'items': 'items',
            'order_date': 'orderDate',
            'shipping_location': 'shippingLocation',
            'status': 'status',
            'tracking_url': 'trackingUrl'
        }

        self._billing_entity = billing_entity
        self._customer_order_reference = customer_order_reference
        self._id = id
        self._items = items
        self._order_date = order_date
        self._shipping_location = shipping_location
        self._status = status
        self._tracking_url = tracking_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TerminalOrder':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TerminalOrder of this TerminalOrder.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def billing_entity(self):
        """Gets the billing_entity of this TerminalOrder.

        The details of the entity that the order is billed to.

        :return: The billing_entity of this TerminalOrder.
        :rtype: BillingEntity
        """
        return self._billing_entity

    @billing_entity.setter
    def billing_entity(self, billing_entity):
        """Sets the billing_entity of this TerminalOrder.

        The details of the entity that the order is billed to.

        :param billing_entity: The billing_entity of this TerminalOrder.
        :type billing_entity: BillingEntity
        """

        self._billing_entity = billing_entity

    @property
    def customer_order_reference(self):
        """Gets the customer_order_reference of this TerminalOrder.

        The merchant-defined purchase order number. This will be printed on the packing list.

        :return: The customer_order_reference of this TerminalOrder.
        :rtype: str
        """
        return self._customer_order_reference

    @customer_order_reference.setter
    def customer_order_reference(self, customer_order_reference):
        """Sets the customer_order_reference of this TerminalOrder.

        The merchant-defined purchase order number. This will be printed on the packing list.

        :param customer_order_reference: The customer_order_reference of this TerminalOrder.
        :type customer_order_reference: str
        """

        self._customer_order_reference = customer_order_reference

    @property
    def id(self):
        """Gets the id of this TerminalOrder.

        The unique identifier of the order.

        :return: The id of this TerminalOrder.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this TerminalOrder.

        The unique identifier of the order.

        :param id: The id of this TerminalOrder.
        :type id: str
        """

        self._id = id

    @property
    def items(self):
        """Gets the items of this TerminalOrder.

        The products included in the order.

        :return: The items of this TerminalOrder.
        :rtype: List[OrderItem]
        """
        return self._items

    @items.setter
    def items(self, items):
        """Sets the items of this TerminalOrder.

        The products included in the order.

        :param items: The items of this TerminalOrder.
        :type items: List[OrderItem]
        """

        self._items = items

    @property
    def order_date(self):
        """Gets the order_date of this TerminalOrder.

        The date and time that the order was placed, in UTC ISO 8601 format. For example, \"2011-12-03T10:15:30Z\".

        :return: The order_date of this TerminalOrder.
        :rtype: str
        """
        return self._order_date

    @order_date.setter
    def order_date(self, order_date):
        """Sets the order_date of this TerminalOrder.

        The date and time that the order was placed, in UTC ISO 8601 format. For example, \"2011-12-03T10:15:30Z\".

        :param order_date: The order_date of this TerminalOrder.
        :type order_date: str
        """

        self._order_date = order_date

    @property
    def shipping_location(self):
        """Gets the shipping_location of this TerminalOrder.

        The details of the location where the order is shipped to.

        :return: The shipping_location of this TerminalOrder.
        :rtype: ShippingLocation
        """
        return self._shipping_location

    @shipping_location.setter
    def shipping_location(self, shipping_location):
        """Sets the shipping_location of this TerminalOrder.

        The details of the location where the order is shipped to.

        :param shipping_location: The shipping_location of this TerminalOrder.
        :type shipping_location: ShippingLocation
        """

        self._shipping_location = shipping_location

    @property
    def status(self):
        """Gets the status of this TerminalOrder.

        The processing status of the order.

        :return: The status of this TerminalOrder.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this TerminalOrder.

        The processing status of the order.

        :param status: The status of this TerminalOrder.
        :type status: str
        """

        self._status = status

    @property
    def tracking_url(self):
        """Gets the tracking_url of this TerminalOrder.

        The URL, provided by the carrier company, where the shipment can be tracked.

        :return: The tracking_url of this TerminalOrder.
        :rtype: str
        """
        return self._tracking_url

    @tracking_url.setter
    def tracking_url(self, tracking_url):
        """Sets the tracking_url of this TerminalOrder.

        The URL, provided by the carrier company, where the shipment can be tracked.

        :param tracking_url: The tracking_url of this TerminalOrder.
        :type tracking_url: str
        """

        self._tracking_url = tracking_url
