# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdatableAddress(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, city: str=None, line1: str=None, line2: str=None, line3: str=None, postal_code: str=None, state_or_province: str=None):
        """UpdatableAddress - a model defined in OpenAPI

        :param city: The city of this UpdatableAddress.
        :param line1: The line1 of this UpdatableAddress.
        :param line2: The line2 of this UpdatableAddress.
        :param line3: The line3 of this UpdatableAddress.
        :param postal_code: The postal_code of this UpdatableAddress.
        :param state_or_province: The state_or_province of this UpdatableAddress.
        """
        self.openapi_types = {
            'city': str,
            'line1': str,
            'line2': str,
            'line3': str,
            'postal_code': str,
            'state_or_province': str
        }

        self.attribute_map = {
            'city': 'city',
            'line1': 'line1',
            'line2': 'line2',
            'line3': 'line3',
            'postal_code': 'postalCode',
            'state_or_province': 'stateOrProvince'
        }

        self._city = city
        self._line1 = line1
        self._line2 = line2
        self._line3 = line3
        self._postal_code = postal_code
        self._state_or_province = state_or_province

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdatableAddress':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdatableAddress of this UpdatableAddress.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def city(self):
        """Gets the city of this UpdatableAddress.

        The name of the city.

        :return: The city of this UpdatableAddress.
        :rtype: str
        """
        return self._city

    @city.setter
    def city(self, city):
        """Sets the city of this UpdatableAddress.

        The name of the city.

        :param city: The city of this UpdatableAddress.
        :type city: str
        """

        self._city = city

    @property
    def line1(self):
        """Gets the line1 of this UpdatableAddress.

        The street address.

        :return: The line1 of this UpdatableAddress.
        :rtype: str
        """
        return self._line1

    @line1.setter
    def line1(self, line1):
        """Sets the line1 of this UpdatableAddress.

        The street address.

        :param line1: The line1 of this UpdatableAddress.
        :type line1: str
        """

        self._line1 = line1

    @property
    def line2(self):
        """Gets the line2 of this UpdatableAddress.

        Second address line.

        :return: The line2 of this UpdatableAddress.
        :rtype: str
        """
        return self._line2

    @line2.setter
    def line2(self, line2):
        """Sets the line2 of this UpdatableAddress.

        Second address line.

        :param line2: The line2 of this UpdatableAddress.
        :type line2: str
        """

        self._line2 = line2

    @property
    def line3(self):
        """Gets the line3 of this UpdatableAddress.

        Third address line.

        :return: The line3 of this UpdatableAddress.
        :rtype: str
        """
        return self._line3

    @line3.setter
    def line3(self, line3):
        """Sets the line3 of this UpdatableAddress.

        Third address line.

        :param line3: The line3 of this UpdatableAddress.
        :type line3: str
        """

        self._line3 = line3

    @property
    def postal_code(self):
        """Gets the postal_code of this UpdatableAddress.

        The postal code.

        :return: The postal_code of this UpdatableAddress.
        :rtype: str
        """
        return self._postal_code

    @postal_code.setter
    def postal_code(self, postal_code):
        """Sets the postal_code of this UpdatableAddress.

        The postal code.

        :param postal_code: The postal_code of this UpdatableAddress.
        :type postal_code: str
        """

        self._postal_code = postal_code

    @property
    def state_or_province(self):
        """Gets the state_or_province of this UpdatableAddress.

        The state or province code as defined in [ISO 3166-2](https://www.iso.org/standard/72483.html). For example, **ON** for Ontario, Canada.  Required for the following countries:  - Australia - Brazil - Canada - India - Mexico - New Zealand - United States

        :return: The state_or_province of this UpdatableAddress.
        :rtype: str
        """
        return self._state_or_province

    @state_or_province.setter
    def state_or_province(self, state_or_province):
        """Sets the state_or_province of this UpdatableAddress.

        The state or province code as defined in [ISO 3166-2](https://www.iso.org/standard/72483.html). For example, **ON** for Ontario, Canada.  Required for the following countries:  - Australia - Brazil - Canada - India - Mexico - New Zealand - United States

        :param state_or_province: The state_or_province of this UpdatableAddress.
        :type state_or_province: str
        """

        self._state_or_province = state_or_province
