# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GenerateHmacKeyResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, hmac_key: str=None):
        """GenerateHmacKeyResponse - a model defined in OpenAPI

        :param hmac_key: The hmac_key of this GenerateHmacKeyResponse.
        """
        self.openapi_types = {
            'hmac_key': str
        }

        self.attribute_map = {
            'hmac_key': 'hmacKey'
        }

        self._hmac_key = hmac_key

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GenerateHmacKeyResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GenerateHmacKeyResponse of this GenerateHmacKeyResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def hmac_key(self):
        """Gets the hmac_key of this GenerateHmacKeyResponse.

        The HMAC key generated for this webhook.

        :return: The hmac_key of this GenerateHmacKeyResponse.
        :rtype: str
        """
        return self._hmac_key

    @hmac_key.setter
    def hmac_key(self, hmac_key):
        """Sets the hmac_key of this GenerateHmacKeyResponse.

        The HMAC key generated for this webhook.

        :param hmac_key: The hmac_key of this GenerateHmacKeyResponse.
        :type hmac_key: str
        """
        if hmac_key is None:
            raise ValueError("Invalid value for `hmac_key`, must not be `None`")

        self._hmac_key = hmac_key
