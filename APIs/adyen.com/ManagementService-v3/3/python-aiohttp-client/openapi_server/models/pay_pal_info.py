# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PayPalInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, direct_capture: bool=None, payer_id: str=None, subject: str=None):
        """PayPalInfo - a model defined in OpenAPI

        :param direct_capture: The direct_capture of this PayPalInfo.
        :param payer_id: The payer_id of this PayPalInfo.
        :param subject: The subject of this PayPalInfo.
        """
        self.openapi_types = {
            'direct_capture': bool,
            'payer_id': str,
            'subject': str
        }

        self.attribute_map = {
            'direct_capture': 'directCapture',
            'payer_id': 'payerId',
            'subject': 'subject'
        }

        self._direct_capture = direct_capture
        self._payer_id = payer_id
        self._subject = subject

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PayPalInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PayPalInfo of this PayPalInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def direct_capture(self):
        """Gets the direct_capture of this PayPalInfo.

        Indicates if direct (immediate) capture for PayPal is enabled. If set to **true**, this setting overrides the [capture](https://docs.adyen.com/online-payments/capture) settings of your merchant account. Default value: **true**.

        :return: The direct_capture of this PayPalInfo.
        :rtype: bool
        """
        return self._direct_capture

    @direct_capture.setter
    def direct_capture(self, direct_capture):
        """Sets the direct_capture of this PayPalInfo.

        Indicates if direct (immediate) capture for PayPal is enabled. If set to **true**, this setting overrides the [capture](https://docs.adyen.com/online-payments/capture) settings of your merchant account. Default value: **true**.

        :param direct_capture: The direct_capture of this PayPalInfo.
        :type direct_capture: bool
        """

        self._direct_capture = direct_capture

    @property
    def payer_id(self):
        """Gets the payer_id of this PayPalInfo.

        PayPal Merchant ID. Character length and limitations: 13 single-byte alphanumeric characters.

        :return: The payer_id of this PayPalInfo.
        :rtype: str
        """
        return self._payer_id

    @payer_id.setter
    def payer_id(self, payer_id):
        """Sets the payer_id of this PayPalInfo.

        PayPal Merchant ID. Character length and limitations: 13 single-byte alphanumeric characters.

        :param payer_id: The payer_id of this PayPalInfo.
        :type payer_id: str
        """
        if payer_id is None:
            raise ValueError("Invalid value for `payer_id`, must not be `None`")
        if payer_id is not None and len(payer_id) > 13:
            raise ValueError("Invalid value for `payer_id`, length must be less than or equal to `13`")
        if payer_id is not None and len(payer_id) < 13:
            raise ValueError("Invalid value for `payer_id`, length must be greater than or equal to `13`")

        self._payer_id = payer_id

    @property
    def subject(self):
        """Gets the subject of this PayPalInfo.

        Your business email address.

        :return: The subject of this PayPalInfo.
        :rtype: str
        """
        return self._subject

    @subject.setter
    def subject(self, subject):
        """Sets the subject of this PayPalInfo.

        Your business email address.

        :param subject: The subject of this PayPalInfo.
        :type subject: str
        """
        if subject is None:
            raise ValueError("Invalid value for `subject`, must not be `None`")

        self._subject = subject
