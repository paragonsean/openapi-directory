# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DataCenter(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, live_prefix: str=None, name: str=None):
        """DataCenter - a model defined in OpenAPI

        :param live_prefix: The live_prefix of this DataCenter.
        :param name: The name of this DataCenter.
        """
        self.openapi_types = {
            'live_prefix': str,
            'name': str
        }

        self.attribute_map = {
            'live_prefix': 'livePrefix',
            'name': 'name'
        }

        self._live_prefix = live_prefix
        self._name = name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DataCenter':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DataCenter of this DataCenter.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def live_prefix(self):
        """Gets the live_prefix of this DataCenter.

        The unique [live URL prefix](https://docs.adyen.com/development-resources/live-endpoints#live-url-prefix) for your live endpoint. Each data center has its own live URL prefix.  This field is empty for requests made in the test environment.

        :return: The live_prefix of this DataCenter.
        :rtype: str
        """
        return self._live_prefix

    @live_prefix.setter
    def live_prefix(self, live_prefix):
        """Sets the live_prefix of this DataCenter.

        The unique [live URL prefix](https://docs.adyen.com/development-resources/live-endpoints#live-url-prefix) for your live endpoint. Each data center has its own live URL prefix.  This field is empty for requests made in the test environment.

        :param live_prefix: The live_prefix of this DataCenter.
        :type live_prefix: str
        """

        self._live_prefix = live_prefix

    @property
    def name(self):
        """Gets the name of this DataCenter.

        The name assigned to a data center, for example **EU** for the European data center. Possible values are:  * **default**: the European data center. This value is always returned in the test environment.  * **AU** * **EU** * **US**

        :return: The name of this DataCenter.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this DataCenter.

        The name assigned to a data center, for example **EU** for the European data center. Possible values are:  * **default**: the European data center. This value is always returned in the test environment.  * **AU** * **EU** * **US**

        :param name: The name of this DataCenter.
        :type name: str
        """

        self._name = name
