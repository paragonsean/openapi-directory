# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.allowed_origin import AllowedOrigin
from openapi_server.models.api_credential_links import ApiCredentialLinks
from openapi_server import util


class CreateApiCredentialResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, links: ApiCredentialLinks=None, active: bool=None, allowed_ip_addresses: List[str]=None, allowed_origins: List[AllowedOrigin]=None, api_key: str=None, client_key: str=None, description: str=None, id: str=None, password: str=None, roles: List[str]=None, username: str=None):
        """CreateApiCredentialResponse - a model defined in OpenAPI

        :param links: The links of this CreateApiCredentialResponse.
        :param active: The active of this CreateApiCredentialResponse.
        :param allowed_ip_addresses: The allowed_ip_addresses of this CreateApiCredentialResponse.
        :param allowed_origins: The allowed_origins of this CreateApiCredentialResponse.
        :param api_key: The api_key of this CreateApiCredentialResponse.
        :param client_key: The client_key of this CreateApiCredentialResponse.
        :param description: The description of this CreateApiCredentialResponse.
        :param id: The id of this CreateApiCredentialResponse.
        :param password: The password of this CreateApiCredentialResponse.
        :param roles: The roles of this CreateApiCredentialResponse.
        :param username: The username of this CreateApiCredentialResponse.
        """
        self.openapi_types = {
            'links': ApiCredentialLinks,
            'active': bool,
            'allowed_ip_addresses': List[str],
            'allowed_origins': List[AllowedOrigin],
            'api_key': str,
            'client_key': str,
            'description': str,
            'id': str,
            'password': str,
            'roles': List[str],
            'username': str
        }

        self.attribute_map = {
            'links': '_links',
            'active': 'active',
            'allowed_ip_addresses': 'allowedIpAddresses',
            'allowed_origins': 'allowedOrigins',
            'api_key': 'apiKey',
            'client_key': 'clientKey',
            'description': 'description',
            'id': 'id',
            'password': 'password',
            'roles': 'roles',
            'username': 'username'
        }

        self._links = links
        self._active = active
        self._allowed_ip_addresses = allowed_ip_addresses
        self._allowed_origins = allowed_origins
        self._api_key = api_key
        self._client_key = client_key
        self._description = description
        self._id = id
        self._password = password
        self._roles = roles
        self._username = username

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateApiCredentialResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateApiCredentialResponse of this CreateApiCredentialResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def links(self):
        """Gets the links of this CreateApiCredentialResponse.

        References to resources linked to the API credential.

        :return: The links of this CreateApiCredentialResponse.
        :rtype: ApiCredentialLinks
        """
        return self._links

    @links.setter
    def links(self, links):
        """Sets the links of this CreateApiCredentialResponse.

        References to resources linked to the API credential.

        :param links: The links of this CreateApiCredentialResponse.
        :type links: ApiCredentialLinks
        """

        self._links = links

    @property
    def active(self):
        """Gets the active of this CreateApiCredentialResponse.

        Indicates if the API credential is enabled. Must be set to **true** to use the credential in your integration.

        :return: The active of this CreateApiCredentialResponse.
        :rtype: bool
        """
        return self._active

    @active.setter
    def active(self, active):
        """Sets the active of this CreateApiCredentialResponse.

        Indicates if the API credential is enabled. Must be set to **true** to use the credential in your integration.

        :param active: The active of this CreateApiCredentialResponse.
        :type active: bool
        """
        if active is None:
            raise ValueError("Invalid value for `active`, must not be `None`")

        self._active = active

    @property
    def allowed_ip_addresses(self):
        """Gets the allowed_ip_addresses of this CreateApiCredentialResponse.

        List of IP addresses from which your client can make requests.  If the list is empty, we allow requests from any IP. If the list is not empty and we get a request from an IP which is not on the list, you get a security error.

        :return: The allowed_ip_addresses of this CreateApiCredentialResponse.
        :rtype: List[str]
        """
        return self._allowed_ip_addresses

    @allowed_ip_addresses.setter
    def allowed_ip_addresses(self, allowed_ip_addresses):
        """Sets the allowed_ip_addresses of this CreateApiCredentialResponse.

        List of IP addresses from which your client can make requests.  If the list is empty, we allow requests from any IP. If the list is not empty and we get a request from an IP which is not on the list, you get a security error.

        :param allowed_ip_addresses: The allowed_ip_addresses of this CreateApiCredentialResponse.
        :type allowed_ip_addresses: List[str]
        """
        if allowed_ip_addresses is None:
            raise ValueError("Invalid value for `allowed_ip_addresses`, must not be `None`")

        self._allowed_ip_addresses = allowed_ip_addresses

    @property
    def allowed_origins(self):
        """Gets the allowed_origins of this CreateApiCredentialResponse.

        List containing the [allowed origins](https://docs.adyen.com/development-resources/client-side-authentication#allowed-origins) linked to the API credential.

        :return: The allowed_origins of this CreateApiCredentialResponse.
        :rtype: List[AllowedOrigin]
        """
        return self._allowed_origins

    @allowed_origins.setter
    def allowed_origins(self, allowed_origins):
        """Sets the allowed_origins of this CreateApiCredentialResponse.

        List containing the [allowed origins](https://docs.adyen.com/development-resources/client-side-authentication#allowed-origins) linked to the API credential.

        :param allowed_origins: The allowed_origins of this CreateApiCredentialResponse.
        :type allowed_origins: List[AllowedOrigin]
        """

        self._allowed_origins = allowed_origins

    @property
    def api_key(self):
        """Gets the api_key of this CreateApiCredentialResponse.

        The API key for the API credential that was created.

        :return: The api_key of this CreateApiCredentialResponse.
        :rtype: str
        """
        return self._api_key

    @api_key.setter
    def api_key(self, api_key):
        """Sets the api_key of this CreateApiCredentialResponse.

        The API key for the API credential that was created.

        :param api_key: The api_key of this CreateApiCredentialResponse.
        :type api_key: str
        """
        if api_key is None:
            raise ValueError("Invalid value for `api_key`, must not be `None`")

        self._api_key = api_key

    @property
    def client_key(self):
        """Gets the client_key of this CreateApiCredentialResponse.

        Public key used for [client-side authentication](https://docs.adyen.com/development-resources/client-side-authentication). The client key is required for Drop-in and Components integrations.

        :return: The client_key of this CreateApiCredentialResponse.
        :rtype: str
        """
        return self._client_key

    @client_key.setter
    def client_key(self, client_key):
        """Sets the client_key of this CreateApiCredentialResponse.

        Public key used for [client-side authentication](https://docs.adyen.com/development-resources/client-side-authentication). The client key is required for Drop-in and Components integrations.

        :param client_key: The client_key of this CreateApiCredentialResponse.
        :type client_key: str
        """
        if client_key is None:
            raise ValueError("Invalid value for `client_key`, must not be `None`")

        self._client_key = client_key

    @property
    def description(self):
        """Gets the description of this CreateApiCredentialResponse.

        Description of the API credential.

        :return: The description of this CreateApiCredentialResponse.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this CreateApiCredentialResponse.

        Description of the API credential.

        :param description: The description of this CreateApiCredentialResponse.
        :type description: str
        """
        if description is not None and len(description) > 50:
            raise ValueError("Invalid value for `description`, length must be less than or equal to `50`")

        self._description = description

    @property
    def id(self):
        """Gets the id of this CreateApiCredentialResponse.

        Unique identifier of the API credential.

        :return: The id of this CreateApiCredentialResponse.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this CreateApiCredentialResponse.

        Unique identifier of the API credential.

        :param id: The id of this CreateApiCredentialResponse.
        :type id: str
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")

        self._id = id

    @property
    def password(self):
        """Gets the password of this CreateApiCredentialResponse.

        The password for the API credential that was created.

        :return: The password of this CreateApiCredentialResponse.
        :rtype: str
        """
        return self._password

    @password.setter
    def password(self, password):
        """Sets the password of this CreateApiCredentialResponse.

        The password for the API credential that was created.

        :param password: The password of this CreateApiCredentialResponse.
        :type password: str
        """
        if password is None:
            raise ValueError("Invalid value for `password`, must not be `None`")

        self._password = password

    @property
    def roles(self):
        """Gets the roles of this CreateApiCredentialResponse.

        List of [roles](https://docs.adyen.com/development-resources/api-credentials#roles-1) for the API credential.

        :return: The roles of this CreateApiCredentialResponse.
        :rtype: List[str]
        """
        return self._roles

    @roles.setter
    def roles(self, roles):
        """Sets the roles of this CreateApiCredentialResponse.

        List of [roles](https://docs.adyen.com/development-resources/api-credentials#roles-1) for the API credential.

        :param roles: The roles of this CreateApiCredentialResponse.
        :type roles: List[str]
        """
        if roles is None:
            raise ValueError("Invalid value for `roles`, must not be `None`")

        self._roles = roles

    @property
    def username(self):
        """Gets the username of this CreateApiCredentialResponse.

        The name of the [API credential](https://docs.adyen.com/development-resources/api-credentials), for example **ws@Company.TestCompany**.

        :return: The username of this CreateApiCredentialResponse.
        :rtype: str
        """
        return self._username

    @username.setter
    def username(self, username):
        """Sets the username of this CreateApiCredentialResponse.

        The name of the [API credential](https://docs.adyen.com/development-resources/api-credentials), for example **ws@Company.TestCompany**.

        :param username: The username of this CreateApiCredentialResponse.
        :type username: str
        """
        if username is None:
            raise ValueError("Invalid value for `username`, must not be `None`")

        self._username = username
