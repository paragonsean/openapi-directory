# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GenerateClientKeyResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, client_key: str=None):
        """GenerateClientKeyResponse - a model defined in OpenAPI

        :param client_key: The client_key of this GenerateClientKeyResponse.
        """
        self.openapi_types = {
            'client_key': str
        }

        self.attribute_map = {
            'client_key': 'clientKey'
        }

        self._client_key = client_key

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GenerateClientKeyResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GenerateClientKeyResponse of this GenerateClientKeyResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def client_key(self):
        """Gets the client_key of this GenerateClientKeyResponse.

        Generated client key

        :return: The client_key of this GenerateClientKeyResponse.
        :rtype: str
        """
        return self._client_key

    @client_key.setter
    def client_key(self, client_key):
        """Sets the client_key of this GenerateClientKeyResponse.

        Generated client key

        :param client_key: The client_key of this GenerateClientKeyResponse.
        :type client_key: str
        """
        if client_key is None:
            raise ValueError("Invalid value for `client_key`, must not be `None`")

        self._client_key = client_key
