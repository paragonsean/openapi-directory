# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TransactionDescriptionInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, doing_business_as_name: str=None, type: str='dynamic'):
        """TransactionDescriptionInfo - a model defined in OpenAPI

        :param doing_business_as_name: The doing_business_as_name of this TransactionDescriptionInfo.
        :param type: The type of this TransactionDescriptionInfo.
        """
        self.openapi_types = {
            'doing_business_as_name': str,
            'type': str
        }

        self.attribute_map = {
            'doing_business_as_name': 'doingBusinessAsName',
            'type': 'type'
        }

        self._doing_business_as_name = doing_business_as_name
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TransactionDescriptionInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TransactionDescriptionInfo of this TransactionDescriptionInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def doing_business_as_name(self):
        """Gets the doing_business_as_name of this TransactionDescriptionInfo.

        The text to be shown on the shopper's bank statement.  We recommend sending a maximum of 22 characters, otherwise banks might truncate the string.  Allowed characters: **a-z**, **A-Z**, **0-9**, spaces, and special characters **. , ' _ - ? + * /**.

        :return: The doing_business_as_name of this TransactionDescriptionInfo.
        :rtype: str
        """
        return self._doing_business_as_name

    @doing_business_as_name.setter
    def doing_business_as_name(self, doing_business_as_name):
        """Sets the doing_business_as_name of this TransactionDescriptionInfo.

        The text to be shown on the shopper's bank statement.  We recommend sending a maximum of 22 characters, otherwise banks might truncate the string.  Allowed characters: **a-z**, **A-Z**, **0-9**, spaces, and special characters **. , ' _ - ? + * /**.

        :param doing_business_as_name: The doing_business_as_name of this TransactionDescriptionInfo.
        :type doing_business_as_name: str
        """
        if doing_business_as_name is not None and len(doing_business_as_name) > 22:
            raise ValueError("Invalid value for `doing_business_as_name`, length must be less than or equal to `22`")

        self._doing_business_as_name = doing_business_as_name

    @property
    def type(self):
        """Gets the type of this TransactionDescriptionInfo.

        The type of transaction description you want to use: - **fixed**: The transaction description set in this request is used for all payments with this payment method. - **append**: The transaction description set in this request is used as a base for all payments with this payment method. The [transaction description set in the request to process the payment](https://docs.adyen.com/api-explorer/Checkout/70/post/sessions#request-shopperStatement) is appended to this base description. Note that if the combined length exceeds 22 characters, banks may truncate the string. - **dynamic**: Only the [transaction description set in the request to process the payment](https://docs.adyen.com/api-explorer/Checkout/70/post/sessions#request-shopperStatement) is used for payments with this payment method.

        :return: The type of this TransactionDescriptionInfo.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this TransactionDescriptionInfo.

        The type of transaction description you want to use: - **fixed**: The transaction description set in this request is used for all payments with this payment method. - **append**: The transaction description set in this request is used as a base for all payments with this payment method. The [transaction description set in the request to process the payment](https://docs.adyen.com/api-explorer/Checkout/70/post/sessions#request-shopperStatement) is appended to this base description. Note that if the combined length exceeds 22 characters, banks may truncate the string. - **dynamic**: Only the [transaction description set in the request to process the payment](https://docs.adyen.com/api-explorer/Checkout/70/post/sessions#request-shopperStatement) is used for payments with this payment method.

        :param type: The type of this TransactionDescriptionInfo.
        :type type: str
        """
        allowed_values = ["append", "dynamic", "fixed"]  # noqa: E501
        if type not in allowed_values:
            raise ValueError(
                "Invalid value for `type` ({0}), must be one of {1}"
                .format(type, allowed_values)
            )

        self._type = type
