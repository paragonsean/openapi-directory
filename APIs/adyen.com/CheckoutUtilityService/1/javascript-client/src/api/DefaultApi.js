/**
 * Adyen Checkout Utility Service
 * A web service containing utility functions available for merchants integrating with Checkout APIs. ## Authentication Each request to the Checkout Utility API must be signed with an API key. For this, obtain an API Key from your Customer Area, as described in [How to get the Checkout API key](https://docs.adyen.com/developers/user-management/how-to-get-the-checkout-api-key). Then set this key to the `X-API-Key` header value, for example:  ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: Your_Checkout_API_key\" \\ ... ``` Note that when going live, you need to generate a new API Key to access the [live endpoints](https://docs.adyen.com/developers/api-reference/live-endpoints).  ## Versioning Checkout API supports versioning of its endpoints through a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://checkout-test.adyen.com/v1/originKeys ```
 *
 * The version of the OpenAPI document: 1
 * Contact: support@adyen.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CheckoutUtilityRequest from '../model/CheckoutUtilityRequest';
import CheckoutUtilityResponse from '../model/CheckoutUtilityResponse';

/**
* Default service.
* @module api/DefaultApi
* @version 1
*/
export default class DefaultApi {

    /**
    * Constructs a new DefaultApi. 
    * @alias module:api/DefaultApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the originKeysPost operation.
     * @callback module:api/DefaultApi~originKeysPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CheckoutUtilityResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create originKey values for one or more merchant domains.
     * This operation takes the origin domains and returns a JSON object containing the corresponding origin keys for the domains.
     * @param {Object} opts Optional parameters
     * @param {module:model/CheckoutUtilityRequest} [checkoutUtilityRequest] 
     * @param {module:api/DefaultApi~originKeysPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CheckoutUtilityResponse}
     */
    originKeysPost(opts, callback) {
      opts = opts || {};
      let postBody = opts['checkoutUtilityRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CheckoutUtilityResponse;
      return this.apiClient.callApi(
        '/originKeys', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
