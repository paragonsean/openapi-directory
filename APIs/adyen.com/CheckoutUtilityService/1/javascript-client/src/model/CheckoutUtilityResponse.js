/**
 * Adyen Checkout Utility Service
 * A web service containing utility functions available for merchants integrating with Checkout APIs. ## Authentication Each request to the Checkout Utility API must be signed with an API key. For this, obtain an API Key from your Customer Area, as described in [How to get the Checkout API key](https://docs.adyen.com/developers/user-management/how-to-get-the-checkout-api-key). Then set this key to the `X-API-Key` header value, for example:  ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: Your_Checkout_API_key\" \\ ... ``` Note that when going live, you need to generate a new API Key to access the [live endpoints](https://docs.adyen.com/developers/api-reference/live-endpoints).  ## Versioning Checkout API supports versioning of its endpoints through a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://checkout-test.adyen.com/v1/originKeys ```
 *
 * The version of the OpenAPI document: 1
 * Contact: support@adyen.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CheckoutUtilityResponse model module.
 * @module model/CheckoutUtilityResponse
 * @version 1
 */
class CheckoutUtilityResponse {
    /**
     * Constructs a new <code>CheckoutUtilityResponse</code>.
     * @alias module:model/CheckoutUtilityResponse
     */
    constructor() { 
        
        CheckoutUtilityResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CheckoutUtilityResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CheckoutUtilityResponse} obj Optional instance to populate.
     * @return {module:model/CheckoutUtilityResponse} The populated <code>CheckoutUtilityResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CheckoutUtilityResponse();

            if (data.hasOwnProperty('originKeys')) {
                obj['originKeys'] = ApiClient.convertToType(data['originKeys'], {'String': 'String'});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CheckoutUtilityResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CheckoutUtilityResponse</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * The list of origin keys for all requested domains. For each list item, the key is the domain and the value is the origin key.
 * @member {Object.<String, String>} originKeys
 */
CheckoutUtilityResponse.prototype['originKeys'] = undefined;






export default CheckoutUtilityResponse;

