/**
 * Adyen Checkout Utility Service
 * A web service containing utility functions available for merchants integrating with Checkout APIs. ## Authentication Each request to the Checkout Utility API must be signed with an API key. For this, obtain an API Key from your Customer Area, as described in [How to get the Checkout API key](https://docs.adyen.com/developers/user-management/how-to-get-the-checkout-api-key). Then set this key to the `X-API-Key` header value, for example:  ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: Your_Checkout_API_key\" \\ ... ``` Note that when going live, you need to generate a new API Key to access the [live endpoints](https://docs.adyen.com/developers/api-reference/live-endpoints).  ## Versioning Checkout API supports versioning of its endpoints through a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://checkout-test.adyen.com/v1/originKeys ```
 *
 * The version of the OpenAPI document: 1
 * Contact: support@adyen.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CheckoutUtilityRequest model module.
 * @module model/CheckoutUtilityRequest
 * @version 1
 */
class CheckoutUtilityRequest {
    /**
     * Constructs a new <code>CheckoutUtilityRequest</code>.
     * @alias module:model/CheckoutUtilityRequest
     * @param originDomains {Array.<String>} The list of origin domains, for which origin keys are requested.
     */
    constructor(originDomains) { 
        
        CheckoutUtilityRequest.initialize(this, originDomains);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, originDomains) { 
        obj['originDomains'] = originDomains;
    }

    /**
     * Constructs a <code>CheckoutUtilityRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CheckoutUtilityRequest} obj Optional instance to populate.
     * @return {module:model/CheckoutUtilityRequest} The populated <code>CheckoutUtilityRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CheckoutUtilityRequest();

            if (data.hasOwnProperty('originDomains')) {
                obj['originDomains'] = ApiClient.convertToType(data['originDomains'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CheckoutUtilityRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CheckoutUtilityRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CheckoutUtilityRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is an array
        if (!Array.isArray(data['originDomains'])) {
            throw new Error("Expected the field `originDomains` to be an array in the JSON data but got " + data['originDomains']);
        }

        return true;
    }


}

CheckoutUtilityRequest.RequiredProperties = ["originDomains"];

/**
 * The list of origin domains, for which origin keys are requested.
 * @member {Array.<String>} originDomains
 */
CheckoutUtilityRequest.prototype['originDomains'] = undefined;






export default CheckoutUtilityRequest;

