# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.error_field_type import ErrorFieldType
from openapi_server import util


class GetPciUrlResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, invalid_fields: List[ErrorFieldType]=None, psp_reference: str=None, redirect_url: str=None, result_code: str=None):
        """GetPciUrlResponse - a model defined in OpenAPI

        :param invalid_fields: The invalid_fields of this GetPciUrlResponse.
        :param psp_reference: The psp_reference of this GetPciUrlResponse.
        :param redirect_url: The redirect_url of this GetPciUrlResponse.
        :param result_code: The result_code of this GetPciUrlResponse.
        """
        self.openapi_types = {
            'invalid_fields': List[ErrorFieldType],
            'psp_reference': str,
            'redirect_url': str,
            'result_code': str
        }

        self.attribute_map = {
            'invalid_fields': 'invalidFields',
            'psp_reference': 'pspReference',
            'redirect_url': 'redirectUrl',
            'result_code': 'resultCode'
        }

        self._invalid_fields = invalid_fields
        self._psp_reference = psp_reference
        self._redirect_url = redirect_url
        self._result_code = result_code

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetPciUrlResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetPciUrlResponse of this GetPciUrlResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def invalid_fields(self):
        """Gets the invalid_fields of this GetPciUrlResponse.

        Information about any invalid fields.

        :return: The invalid_fields of this GetPciUrlResponse.
        :rtype: List[ErrorFieldType]
        """
        return self._invalid_fields

    @invalid_fields.setter
    def invalid_fields(self, invalid_fields):
        """Sets the invalid_fields of this GetPciUrlResponse.

        Information about any invalid fields.

        :param invalid_fields: The invalid_fields of this GetPciUrlResponse.
        :type invalid_fields: List[ErrorFieldType]
        """

        self._invalid_fields = invalid_fields

    @property
    def psp_reference(self):
        """Gets the psp_reference of this GetPciUrlResponse.

        The reference of a request. Can be used to uniquely identify the request.

        :return: The psp_reference of this GetPciUrlResponse.
        :rtype: str
        """
        return self._psp_reference

    @psp_reference.setter
    def psp_reference(self, psp_reference):
        """Sets the psp_reference of this GetPciUrlResponse.

        The reference of a request. Can be used to uniquely identify the request.

        :param psp_reference: The psp_reference of this GetPciUrlResponse.
        :type psp_reference: str
        """

        self._psp_reference = psp_reference

    @property
    def redirect_url(self):
        """Gets the redirect_url of this GetPciUrlResponse.

        The URL to the PCI compliance questionnaire where you should redirect your account holder. This URL must be used within 30 seconds and can only be used once.

        :return: The redirect_url of this GetPciUrlResponse.
        :rtype: str
        """
        return self._redirect_url

    @redirect_url.setter
    def redirect_url(self, redirect_url):
        """Sets the redirect_url of this GetPciUrlResponse.

        The URL to the PCI compliance questionnaire where you should redirect your account holder. This URL must be used within 30 seconds and can only be used once.

        :param redirect_url: The redirect_url of this GetPciUrlResponse.
        :type redirect_url: str
        """

        self._redirect_url = redirect_url

    @property
    def result_code(self):
        """Gets the result_code of this GetPciUrlResponse.

        The result code.

        :return: The result_code of this GetPciUrlResponse.
        :rtype: str
        """
        return self._result_code

    @result_code.setter
    def result_code(self, result_code):
        """Sets the result_code of this GetPciUrlResponse.

        The result code.

        :param result_code: The result_code of this GetPciUrlResponse.
        :type result_code: str
        """

        self._result_code = result_code
