/*
 * Hosted onboarding API
 * This API is used for the classic integration. If you are just starting your implementation, refer to our [new integration guide](https://docs.adyen.com/marketplaces-and-platforms) instead.  The Hosted onboarding API provides endpoints that you can use to generate links to Adyen-hosted pages, such as an [onboarding page](https://docs.adyen.com/marketplaces-and-platforms/classic/hosted-onboarding-page) or a [PCI compliance questionnaire](https://docs.adyen.com/marketplaces-and-platforms/classic/platforms-for-partners). You can provide these links to your account holders so that they can complete their onboarding.  ## Authentication Your Adyen contact will provide your API credential and an API key. To connect to the API, add an `X-API-Key` header with the API key as the value, for example:   ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ```  Alternatively, you can use the username and password to connect to the API using basic authentication. For example:  ``` curl -U \"ws@MarketPlace.YOUR_PLATFORM_ACCOUNT\":\"YOUR_WS_PASSWORD\" \\ -H \"Content-Type: application/json\" \\ ... ``` When going live, you need to generate new web service user credentials to access the [live endpoints](https://docs.adyen.com/development-resources/live-endpoints).  ## Versioning The Hosted onboarding API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://cal-test.adyen.com/cal/services/Hop/v5/getOnboardingUrl ```
 *
 * The version of the OpenAPI document: 5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ShowPages
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:17:27.476458-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ShowPages {
  public static final String SERIALIZED_NAME_BANK_DETAILS_SUMMARY_PAGE = "bankDetailsSummaryPage";
  @SerializedName(SERIALIZED_NAME_BANK_DETAILS_SUMMARY_PAGE)
  private Boolean bankDetailsSummaryPage;

  public static final String SERIALIZED_NAME_BANK_VERIFICATION_PAGE = "bankVerificationPage";
  @SerializedName(SERIALIZED_NAME_BANK_VERIFICATION_PAGE)
  private Boolean bankVerificationPage;

  public static final String SERIALIZED_NAME_BUSINESS_DETAILS_SUMMARY_PAGE = "businessDetailsSummaryPage";
  @SerializedName(SERIALIZED_NAME_BUSINESS_DETAILS_SUMMARY_PAGE)
  private Boolean businessDetailsSummaryPage;

  public static final String SERIALIZED_NAME_CHECKS_OVERVIEW_PAGE = "checksOverviewPage";
  @SerializedName(SERIALIZED_NAME_CHECKS_OVERVIEW_PAGE)
  private Boolean checksOverviewPage;

  public static final String SERIALIZED_NAME_INDIVIDUAL_DETAILS_SUMMARY_PAGE = "individualDetailsSummaryPage";
  @SerializedName(SERIALIZED_NAME_INDIVIDUAL_DETAILS_SUMMARY_PAGE)
  private Boolean individualDetailsSummaryPage;

  public static final String SERIALIZED_NAME_LEGAL_ARRANGEMENTS_DETAILS_SUMMARY_PAGE = "legalArrangementsDetailsSummaryPage";
  @SerializedName(SERIALIZED_NAME_LEGAL_ARRANGEMENTS_DETAILS_SUMMARY_PAGE)
  private Boolean legalArrangementsDetailsSummaryPage;

  public static final String SERIALIZED_NAME_MANUAL_BANK_ACCOUNT_PAGE = "manualBankAccountPage";
  @SerializedName(SERIALIZED_NAME_MANUAL_BANK_ACCOUNT_PAGE)
  private Boolean manualBankAccountPage;

  public static final String SERIALIZED_NAME_SHAREHOLDER_DETAILS_SUMMARY_PAGE = "shareholderDetailsSummaryPage";
  @SerializedName(SERIALIZED_NAME_SHAREHOLDER_DETAILS_SUMMARY_PAGE)
  private Boolean shareholderDetailsSummaryPage;

  public static final String SERIALIZED_NAME_WELCOME_PAGE = "welcomePage";
  @SerializedName(SERIALIZED_NAME_WELCOME_PAGE)
  private Boolean welcomePage;

  public ShowPages() {
  }

  public ShowPages bankDetailsSummaryPage(Boolean bankDetailsSummaryPage) {
    this.bankDetailsSummaryPage = bankDetailsSummaryPage;
    return this;
  }

  /**
   * Indicates whether the page with bank account details must be shown. Defaults to **true**.
   * @return bankDetailsSummaryPage
   */
  @javax.annotation.Nullable
  public Boolean getBankDetailsSummaryPage() {
    return bankDetailsSummaryPage;
  }

  public void setBankDetailsSummaryPage(Boolean bankDetailsSummaryPage) {
    this.bankDetailsSummaryPage = bankDetailsSummaryPage;
  }


  public ShowPages bankVerificationPage(Boolean bankVerificationPage) {
    this.bankVerificationPage = bankVerificationPage;
    return this;
  }

  /**
   * Indicates whether the bank check instant verification&#39; details must be shown. Defaults to **true**.
   * @return bankVerificationPage
   */
  @javax.annotation.Nullable
  public Boolean getBankVerificationPage() {
    return bankVerificationPage;
  }

  public void setBankVerificationPage(Boolean bankVerificationPage) {
    this.bankVerificationPage = bankVerificationPage;
  }


  public ShowPages businessDetailsSummaryPage(Boolean businessDetailsSummaryPage) {
    this.businessDetailsSummaryPage = businessDetailsSummaryPage;
    return this;
  }

  /**
   * Indicates whether the page with the company&#39;s or organization&#39;s details must be shown. Defaults to **true**.
   * @return businessDetailsSummaryPage
   */
  @javax.annotation.Nullable
  public Boolean getBusinessDetailsSummaryPage() {
    return businessDetailsSummaryPage;
  }

  public void setBusinessDetailsSummaryPage(Boolean businessDetailsSummaryPage) {
    this.businessDetailsSummaryPage = businessDetailsSummaryPage;
  }


  public ShowPages checksOverviewPage(Boolean checksOverviewPage) {
    this.checksOverviewPage = checksOverviewPage;
    return this;
  }

  /**
   * Indicates whether the checks overview page must be shown. Defaults to **false**.
   * @return checksOverviewPage
   */
  @javax.annotation.Nullable
  public Boolean getChecksOverviewPage() {
    return checksOverviewPage;
  }

  public void setChecksOverviewPage(Boolean checksOverviewPage) {
    this.checksOverviewPage = checksOverviewPage;
  }


  public ShowPages individualDetailsSummaryPage(Boolean individualDetailsSummaryPage) {
    this.individualDetailsSummaryPage = individualDetailsSummaryPage;
    return this;
  }

  /**
   * Indicates whether the page with the individual&#39;s details must be shown. Defaults to **true**.
   * @return individualDetailsSummaryPage
   */
  @javax.annotation.Nullable
  public Boolean getIndividualDetailsSummaryPage() {
    return individualDetailsSummaryPage;
  }

  public void setIndividualDetailsSummaryPage(Boolean individualDetailsSummaryPage) {
    this.individualDetailsSummaryPage = individualDetailsSummaryPage;
  }


  public ShowPages legalArrangementsDetailsSummaryPage(Boolean legalArrangementsDetailsSummaryPage) {
    this.legalArrangementsDetailsSummaryPage = legalArrangementsDetailsSummaryPage;
    return this;
  }

  /**
   * Indicates whether the page with the legal arrangements&#39; details must be shown. Defaults to **true**.
   * @return legalArrangementsDetailsSummaryPage
   */
  @javax.annotation.Nullable
  public Boolean getLegalArrangementsDetailsSummaryPage() {
    return legalArrangementsDetailsSummaryPage;
  }

  public void setLegalArrangementsDetailsSummaryPage(Boolean legalArrangementsDetailsSummaryPage) {
    this.legalArrangementsDetailsSummaryPage = legalArrangementsDetailsSummaryPage;
  }


  public ShowPages manualBankAccountPage(Boolean manualBankAccountPage) {
    this.manualBankAccountPage = manualBankAccountPage;
    return this;
  }

  /**
   * Indicates whether the page to manually add bank account&#39; details must be shown. Defaults to **true**.
   * @return manualBankAccountPage
   */
  @javax.annotation.Nullable
  public Boolean getManualBankAccountPage() {
    return manualBankAccountPage;
  }

  public void setManualBankAccountPage(Boolean manualBankAccountPage) {
    this.manualBankAccountPage = manualBankAccountPage;
  }


  public ShowPages shareholderDetailsSummaryPage(Boolean shareholderDetailsSummaryPage) {
    this.shareholderDetailsSummaryPage = shareholderDetailsSummaryPage;
    return this;
  }

  /**
   * Indicates whether the page with the shareholders&#39; details must be shown. Defaults to **true**.
   * @return shareholderDetailsSummaryPage
   */
  @javax.annotation.Nullable
  public Boolean getShareholderDetailsSummaryPage() {
    return shareholderDetailsSummaryPage;
  }

  public void setShareholderDetailsSummaryPage(Boolean shareholderDetailsSummaryPage) {
    this.shareholderDetailsSummaryPage = shareholderDetailsSummaryPage;
  }


  public ShowPages welcomePage(Boolean welcomePage) {
    this.welcomePage = welcomePage;
    return this;
  }

  /**
   * Indicates whether the welcome page must be shown. Defaults to **false**.
   * @return welcomePage
   */
  @javax.annotation.Nullable
  public Boolean getWelcomePage() {
    return welcomePage;
  }

  public void setWelcomePage(Boolean welcomePage) {
    this.welcomePage = welcomePage;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ShowPages showPages = (ShowPages) o;
    return Objects.equals(this.bankDetailsSummaryPage, showPages.bankDetailsSummaryPage) &&
        Objects.equals(this.bankVerificationPage, showPages.bankVerificationPage) &&
        Objects.equals(this.businessDetailsSummaryPage, showPages.businessDetailsSummaryPage) &&
        Objects.equals(this.checksOverviewPage, showPages.checksOverviewPage) &&
        Objects.equals(this.individualDetailsSummaryPage, showPages.individualDetailsSummaryPage) &&
        Objects.equals(this.legalArrangementsDetailsSummaryPage, showPages.legalArrangementsDetailsSummaryPage) &&
        Objects.equals(this.manualBankAccountPage, showPages.manualBankAccountPage) &&
        Objects.equals(this.shareholderDetailsSummaryPage, showPages.shareholderDetailsSummaryPage) &&
        Objects.equals(this.welcomePage, showPages.welcomePage);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bankDetailsSummaryPage, bankVerificationPage, businessDetailsSummaryPage, checksOverviewPage, individualDetailsSummaryPage, legalArrangementsDetailsSummaryPage, manualBankAccountPage, shareholderDetailsSummaryPage, welcomePage);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ShowPages {\n");
    sb.append("    bankDetailsSummaryPage: ").append(toIndentedString(bankDetailsSummaryPage)).append("\n");
    sb.append("    bankVerificationPage: ").append(toIndentedString(bankVerificationPage)).append("\n");
    sb.append("    businessDetailsSummaryPage: ").append(toIndentedString(businessDetailsSummaryPage)).append("\n");
    sb.append("    checksOverviewPage: ").append(toIndentedString(checksOverviewPage)).append("\n");
    sb.append("    individualDetailsSummaryPage: ").append(toIndentedString(individualDetailsSummaryPage)).append("\n");
    sb.append("    legalArrangementsDetailsSummaryPage: ").append(toIndentedString(legalArrangementsDetailsSummaryPage)).append("\n");
    sb.append("    manualBankAccountPage: ").append(toIndentedString(manualBankAccountPage)).append("\n");
    sb.append("    shareholderDetailsSummaryPage: ").append(toIndentedString(shareholderDetailsSummaryPage)).append("\n");
    sb.append("    welcomePage: ").append(toIndentedString(welcomePage)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("bankDetailsSummaryPage");
    openapiFields.add("bankVerificationPage");
    openapiFields.add("businessDetailsSummaryPage");
    openapiFields.add("checksOverviewPage");
    openapiFields.add("individualDetailsSummaryPage");
    openapiFields.add("legalArrangementsDetailsSummaryPage");
    openapiFields.add("manualBankAccountPage");
    openapiFields.add("shareholderDetailsSummaryPage");
    openapiFields.add("welcomePage");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ShowPages
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ShowPages.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ShowPages is not found in the empty JSON string", ShowPages.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ShowPages.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ShowPages` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ShowPages.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ShowPages' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ShowPages> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ShowPages.class));

       return (TypeAdapter<T>) new TypeAdapter<ShowPages>() {
           @Override
           public void write(JsonWriter out, ShowPages value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ShowPages read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ShowPages given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ShowPages
   * @throws IOException if the JSON string is invalid with respect to ShowPages
   */
  public static ShowPages fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ShowPages.class);
  }

  /**
   * Convert an instance of ShowPages to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

