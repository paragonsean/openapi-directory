# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CollectInformation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bank_details: bool=None, business_details: bool=None, individual_details: bool=None, legal_arrangement_details: bool=None, pci_questionnaire: bool=None, shareholder_details: bool=None):
        """CollectInformation - a model defined in OpenAPI

        :param bank_details: The bank_details of this CollectInformation.
        :param business_details: The business_details of this CollectInformation.
        :param individual_details: The individual_details of this CollectInformation.
        :param legal_arrangement_details: The legal_arrangement_details of this CollectInformation.
        :param pci_questionnaire: The pci_questionnaire of this CollectInformation.
        :param shareholder_details: The shareholder_details of this CollectInformation.
        """
        self.openapi_types = {
            'bank_details': bool,
            'business_details': bool,
            'individual_details': bool,
            'legal_arrangement_details': bool,
            'pci_questionnaire': bool,
            'shareholder_details': bool
        }

        self.attribute_map = {
            'bank_details': 'bankDetails',
            'business_details': 'businessDetails',
            'individual_details': 'individualDetails',
            'legal_arrangement_details': 'legalArrangementDetails',
            'pci_questionnaire': 'pciQuestionnaire',
            'shareholder_details': 'shareholderDetails'
        }

        self._bank_details = bank_details
        self._business_details = business_details
        self._individual_details = individual_details
        self._legal_arrangement_details = legal_arrangement_details
        self._pci_questionnaire = pci_questionnaire
        self._shareholder_details = shareholder_details

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CollectInformation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CollectInformation of this CollectInformation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bank_details(self):
        """Gets the bank_details of this CollectInformation.

        Indicates whether [bank account details](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-checks/bank-account-check) must be collected. Default is **true**.

        :return: The bank_details of this CollectInformation.
        :rtype: bool
        """
        return self._bank_details

    @bank_details.setter
    def bank_details(self, bank_details):
        """Sets the bank_details of this CollectInformation.

        Indicates whether [bank account details](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-checks/bank-account-check) must be collected. Default is **true**.

        :param bank_details: The bank_details of this CollectInformation.
        :type bank_details: bool
        """

        self._bank_details = bank_details

    @property
    def business_details(self):
        """Gets the business_details of this CollectInformation.

        Indicates whether [business details](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-checks/company-check) must be collected. Default is **true**.

        :return: The business_details of this CollectInformation.
        :rtype: bool
        """
        return self._business_details

    @business_details.setter
    def business_details(self, business_details):
        """Sets the business_details of this CollectInformation.

        Indicates whether [business details](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-checks/company-check) must be collected. Default is **true**.

        :param business_details: The business_details of this CollectInformation.
        :type business_details: bool
        """

        self._business_details = business_details

    @property
    def individual_details(self):
        """Gets the individual_details of this CollectInformation.

        Indicates whether [individual details](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-checks/identity-check) must be collected. Default is **true**.

        :return: The individual_details of this CollectInformation.
        :rtype: bool
        """
        return self._individual_details

    @individual_details.setter
    def individual_details(self, individual_details):
        """Sets the individual_details of this CollectInformation.

        Indicates whether [individual details](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-checks/identity-check) must be collected. Default is **true**.

        :param individual_details: The individual_details of this CollectInformation.
        :type individual_details: bool
        """

        self._individual_details = individual_details

    @property
    def legal_arrangement_details(self):
        """Gets the legal_arrangement_details of this CollectInformation.

        Indicates whether [legal arrangement details](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-checks/legal-arrangements) must be collected. Default is **true**.

        :return: The legal_arrangement_details of this CollectInformation.
        :rtype: bool
        """
        return self._legal_arrangement_details

    @legal_arrangement_details.setter
    def legal_arrangement_details(self, legal_arrangement_details):
        """Sets the legal_arrangement_details of this CollectInformation.

        Indicates whether [legal arrangement details](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-checks/legal-arrangements) must be collected. Default is **true**.

        :param legal_arrangement_details: The legal_arrangement_details of this CollectInformation.
        :type legal_arrangement_details: bool
        """

        self._legal_arrangement_details = legal_arrangement_details

    @property
    def pci_questionnaire(self):
        """Gets the pci_questionnaire of this CollectInformation.

        Indicates whether answers to a [PCI questionnaire](https://docs.adyen.com/marketplaces-and-platforms/classic/platforms-for-partners#onboard-partner-platform) must be collected. Applies only to partner platforms. Default is **true**.

        :return: The pci_questionnaire of this CollectInformation.
        :rtype: bool
        """
        return self._pci_questionnaire

    @pci_questionnaire.setter
    def pci_questionnaire(self, pci_questionnaire):
        """Sets the pci_questionnaire of this CollectInformation.

        Indicates whether answers to a [PCI questionnaire](https://docs.adyen.com/marketplaces-and-platforms/classic/platforms-for-partners#onboard-partner-platform) must be collected. Applies only to partner platforms. Default is **true**.

        :param pci_questionnaire: The pci_questionnaire of this CollectInformation.
        :type pci_questionnaire: bool
        """

        self._pci_questionnaire = pci_questionnaire

    @property
    def shareholder_details(self):
        """Gets the shareholder_details of this CollectInformation.

        Indicates whether [shareholder details](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-checks/identity-check) must be collected. Defaults to **true**.

        :return: The shareholder_details of this CollectInformation.
        :rtype: bool
        """
        return self._shareholder_details

    @shareholder_details.setter
    def shareholder_details(self, shareholder_details):
        """Sets the shareholder_details of this CollectInformation.

        Indicates whether [shareholder details](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-checks/identity-check) must be collected. Defaults to **true**.

        :param shareholder_details: The shareholder_details of this CollectInformation.
        :type shareholder_details: bool
        """

        self._shareholder_details = shareholder_details
