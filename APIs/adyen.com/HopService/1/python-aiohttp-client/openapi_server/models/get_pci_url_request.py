# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetPciUrlRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_holder_code: str=None, return_url: str=None):
        """GetPciUrlRequest - a model defined in OpenAPI

        :param account_holder_code: The account_holder_code of this GetPciUrlRequest.
        :param return_url: The return_url of this GetPciUrlRequest.
        """
        self.openapi_types = {
            'account_holder_code': str,
            'return_url': str
        }

        self.attribute_map = {
            'account_holder_code': 'accountHolderCode',
            'return_url': 'returnUrl'
        }

        self._account_holder_code = account_holder_code
        self._return_url = return_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetPciUrlRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetPciUrlRequest of this GetPciUrlRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_holder_code(self):
        """Gets the account_holder_code of this GetPciUrlRequest.

        The account holder code you provided when you created the account holder.

        :return: The account_holder_code of this GetPciUrlRequest.
        :rtype: str
        """
        return self._account_holder_code

    @account_holder_code.setter
    def account_holder_code(self, account_holder_code):
        """Sets the account_holder_code of this GetPciUrlRequest.

        The account holder code you provided when you created the account holder.

        :param account_holder_code: The account_holder_code of this GetPciUrlRequest.
        :type account_holder_code: str
        """
        if account_holder_code is None:
            raise ValueError("Invalid value for `account_holder_code`, must not be `None`")

        self._account_holder_code = account_holder_code

    @property
    def return_url(self):
        """Gets the return_url of this GetPciUrlRequest.

        The URL where the account holder will be redirected back to after they fill out the questionnaire, or if their session times out. Maximum length of 500 characters.

        :return: The return_url of this GetPciUrlRequest.
        :rtype: str
        """
        return self._return_url

    @return_url.setter
    def return_url(self, return_url):
        """Sets the return_url of this GetPciUrlRequest.

        The URL where the account holder will be redirected back to after they fill out the questionnaire, or if their session times out. Maximum length of 500 characters.

        :param return_url: The return_url of this GetPciUrlRequest.
        :type return_url: str
        """

        self._return_url = return_url
