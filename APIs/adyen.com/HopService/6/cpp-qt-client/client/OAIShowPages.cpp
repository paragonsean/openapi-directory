/**
 * Hosted onboarding API
 * This API is used for the classic integration. If you are just starting your implementation, refer to our [new integration guide](https://docs.adyen.com/marketplaces-and-platforms) instead.  The Hosted onboarding API provides endpoints that you can use to generate links to Adyen-hosted pages, such as an [onboarding page](https://docs.adyen.com/marketplaces-and-platforms/classic/hosted-onboarding-page) or a [PCI compliance questionnaire](https://docs.adyen.com/marketplaces-and-platforms/classic/platforms-for-partners). You can provide these links to your account holders so that they can complete their onboarding.  ## Authentication Your Adyen contact will provide your API credential and an API key. To connect to the API, add an `X-API-Key` header with the API key as the value, for example:   ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ```  Alternatively, you can use the username and password to connect to the API using basic authentication. For example:  ``` curl -U \"ws@MarketPlace.YOUR_PLATFORM_ACCOUNT\":\"YOUR_WS_PASSWORD\" \\ -H \"Content-Type: application/json\" \\ ... ``` When going live, you need to generate new web service user credentials to access the [live endpoints](https://docs.adyen.com/development-resources/live-endpoints).  ## Versioning The Hosted onboarding API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://cal-test.adyen.com/cal/services/Hop/v6/getOnboardingUrl ```
 *
 * The version of the OpenAPI document: 6
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIShowPages.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIShowPages::OAIShowPages(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIShowPages::OAIShowPages() {
    this->initializeModel();
}

OAIShowPages::~OAIShowPages() {}

void OAIShowPages::initializeModel() {

    m_bank_details_summary_page_isSet = false;
    m_bank_details_summary_page_isValid = false;

    m_bank_verification_page_isSet = false;
    m_bank_verification_page_isValid = false;

    m_business_details_summary_page_isSet = false;
    m_business_details_summary_page_isValid = false;

    m_checks_overview_page_isSet = false;
    m_checks_overview_page_isValid = false;

    m_individual_details_summary_page_isSet = false;
    m_individual_details_summary_page_isValid = false;

    m_legal_arrangements_details_summary_page_isSet = false;
    m_legal_arrangements_details_summary_page_isValid = false;

    m_manual_bank_account_page_isSet = false;
    m_manual_bank_account_page_isValid = false;

    m_shareholder_details_summary_page_isSet = false;
    m_shareholder_details_summary_page_isValid = false;

    m_welcome_page_isSet = false;
    m_welcome_page_isValid = false;
}

void OAIShowPages::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIShowPages::fromJsonObject(QJsonObject json) {

    m_bank_details_summary_page_isValid = ::OpenAPI::fromJsonValue(m_bank_details_summary_page, json[QString("bankDetailsSummaryPage")]);
    m_bank_details_summary_page_isSet = !json[QString("bankDetailsSummaryPage")].isNull() && m_bank_details_summary_page_isValid;

    m_bank_verification_page_isValid = ::OpenAPI::fromJsonValue(m_bank_verification_page, json[QString("bankVerificationPage")]);
    m_bank_verification_page_isSet = !json[QString("bankVerificationPage")].isNull() && m_bank_verification_page_isValid;

    m_business_details_summary_page_isValid = ::OpenAPI::fromJsonValue(m_business_details_summary_page, json[QString("businessDetailsSummaryPage")]);
    m_business_details_summary_page_isSet = !json[QString("businessDetailsSummaryPage")].isNull() && m_business_details_summary_page_isValid;

    m_checks_overview_page_isValid = ::OpenAPI::fromJsonValue(m_checks_overview_page, json[QString("checksOverviewPage")]);
    m_checks_overview_page_isSet = !json[QString("checksOverviewPage")].isNull() && m_checks_overview_page_isValid;

    m_individual_details_summary_page_isValid = ::OpenAPI::fromJsonValue(m_individual_details_summary_page, json[QString("individualDetailsSummaryPage")]);
    m_individual_details_summary_page_isSet = !json[QString("individualDetailsSummaryPage")].isNull() && m_individual_details_summary_page_isValid;

    m_legal_arrangements_details_summary_page_isValid = ::OpenAPI::fromJsonValue(m_legal_arrangements_details_summary_page, json[QString("legalArrangementsDetailsSummaryPage")]);
    m_legal_arrangements_details_summary_page_isSet = !json[QString("legalArrangementsDetailsSummaryPage")].isNull() && m_legal_arrangements_details_summary_page_isValid;

    m_manual_bank_account_page_isValid = ::OpenAPI::fromJsonValue(m_manual_bank_account_page, json[QString("manualBankAccountPage")]);
    m_manual_bank_account_page_isSet = !json[QString("manualBankAccountPage")].isNull() && m_manual_bank_account_page_isValid;

    m_shareholder_details_summary_page_isValid = ::OpenAPI::fromJsonValue(m_shareholder_details_summary_page, json[QString("shareholderDetailsSummaryPage")]);
    m_shareholder_details_summary_page_isSet = !json[QString("shareholderDetailsSummaryPage")].isNull() && m_shareholder_details_summary_page_isValid;

    m_welcome_page_isValid = ::OpenAPI::fromJsonValue(m_welcome_page, json[QString("welcomePage")]);
    m_welcome_page_isSet = !json[QString("welcomePage")].isNull() && m_welcome_page_isValid;
}

QString OAIShowPages::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIShowPages::asJsonObject() const {
    QJsonObject obj;
    if (m_bank_details_summary_page_isSet) {
        obj.insert(QString("bankDetailsSummaryPage"), ::OpenAPI::toJsonValue(m_bank_details_summary_page));
    }
    if (m_bank_verification_page_isSet) {
        obj.insert(QString("bankVerificationPage"), ::OpenAPI::toJsonValue(m_bank_verification_page));
    }
    if (m_business_details_summary_page_isSet) {
        obj.insert(QString("businessDetailsSummaryPage"), ::OpenAPI::toJsonValue(m_business_details_summary_page));
    }
    if (m_checks_overview_page_isSet) {
        obj.insert(QString("checksOverviewPage"), ::OpenAPI::toJsonValue(m_checks_overview_page));
    }
    if (m_individual_details_summary_page_isSet) {
        obj.insert(QString("individualDetailsSummaryPage"), ::OpenAPI::toJsonValue(m_individual_details_summary_page));
    }
    if (m_legal_arrangements_details_summary_page_isSet) {
        obj.insert(QString("legalArrangementsDetailsSummaryPage"), ::OpenAPI::toJsonValue(m_legal_arrangements_details_summary_page));
    }
    if (m_manual_bank_account_page_isSet) {
        obj.insert(QString("manualBankAccountPage"), ::OpenAPI::toJsonValue(m_manual_bank_account_page));
    }
    if (m_shareholder_details_summary_page_isSet) {
        obj.insert(QString("shareholderDetailsSummaryPage"), ::OpenAPI::toJsonValue(m_shareholder_details_summary_page));
    }
    if (m_welcome_page_isSet) {
        obj.insert(QString("welcomePage"), ::OpenAPI::toJsonValue(m_welcome_page));
    }
    return obj;
}

bool OAIShowPages::isBankDetailsSummaryPage() const {
    return m_bank_details_summary_page;
}
void OAIShowPages::setBankDetailsSummaryPage(const bool &bank_details_summary_page) {
    m_bank_details_summary_page = bank_details_summary_page;
    m_bank_details_summary_page_isSet = true;
}

bool OAIShowPages::is_bank_details_summary_page_Set() const{
    return m_bank_details_summary_page_isSet;
}

bool OAIShowPages::is_bank_details_summary_page_Valid() const{
    return m_bank_details_summary_page_isValid;
}

bool OAIShowPages::isBankVerificationPage() const {
    return m_bank_verification_page;
}
void OAIShowPages::setBankVerificationPage(const bool &bank_verification_page) {
    m_bank_verification_page = bank_verification_page;
    m_bank_verification_page_isSet = true;
}

bool OAIShowPages::is_bank_verification_page_Set() const{
    return m_bank_verification_page_isSet;
}

bool OAIShowPages::is_bank_verification_page_Valid() const{
    return m_bank_verification_page_isValid;
}

bool OAIShowPages::isBusinessDetailsSummaryPage() const {
    return m_business_details_summary_page;
}
void OAIShowPages::setBusinessDetailsSummaryPage(const bool &business_details_summary_page) {
    m_business_details_summary_page = business_details_summary_page;
    m_business_details_summary_page_isSet = true;
}

bool OAIShowPages::is_business_details_summary_page_Set() const{
    return m_business_details_summary_page_isSet;
}

bool OAIShowPages::is_business_details_summary_page_Valid() const{
    return m_business_details_summary_page_isValid;
}

bool OAIShowPages::isChecksOverviewPage() const {
    return m_checks_overview_page;
}
void OAIShowPages::setChecksOverviewPage(const bool &checks_overview_page) {
    m_checks_overview_page = checks_overview_page;
    m_checks_overview_page_isSet = true;
}

bool OAIShowPages::is_checks_overview_page_Set() const{
    return m_checks_overview_page_isSet;
}

bool OAIShowPages::is_checks_overview_page_Valid() const{
    return m_checks_overview_page_isValid;
}

bool OAIShowPages::isIndividualDetailsSummaryPage() const {
    return m_individual_details_summary_page;
}
void OAIShowPages::setIndividualDetailsSummaryPage(const bool &individual_details_summary_page) {
    m_individual_details_summary_page = individual_details_summary_page;
    m_individual_details_summary_page_isSet = true;
}

bool OAIShowPages::is_individual_details_summary_page_Set() const{
    return m_individual_details_summary_page_isSet;
}

bool OAIShowPages::is_individual_details_summary_page_Valid() const{
    return m_individual_details_summary_page_isValid;
}

bool OAIShowPages::isLegalArrangementsDetailsSummaryPage() const {
    return m_legal_arrangements_details_summary_page;
}
void OAIShowPages::setLegalArrangementsDetailsSummaryPage(const bool &legal_arrangements_details_summary_page) {
    m_legal_arrangements_details_summary_page = legal_arrangements_details_summary_page;
    m_legal_arrangements_details_summary_page_isSet = true;
}

bool OAIShowPages::is_legal_arrangements_details_summary_page_Set() const{
    return m_legal_arrangements_details_summary_page_isSet;
}

bool OAIShowPages::is_legal_arrangements_details_summary_page_Valid() const{
    return m_legal_arrangements_details_summary_page_isValid;
}

bool OAIShowPages::isManualBankAccountPage() const {
    return m_manual_bank_account_page;
}
void OAIShowPages::setManualBankAccountPage(const bool &manual_bank_account_page) {
    m_manual_bank_account_page = manual_bank_account_page;
    m_manual_bank_account_page_isSet = true;
}

bool OAIShowPages::is_manual_bank_account_page_Set() const{
    return m_manual_bank_account_page_isSet;
}

bool OAIShowPages::is_manual_bank_account_page_Valid() const{
    return m_manual_bank_account_page_isValid;
}

bool OAIShowPages::isShareholderDetailsSummaryPage() const {
    return m_shareholder_details_summary_page;
}
void OAIShowPages::setShareholderDetailsSummaryPage(const bool &shareholder_details_summary_page) {
    m_shareholder_details_summary_page = shareholder_details_summary_page;
    m_shareholder_details_summary_page_isSet = true;
}

bool OAIShowPages::is_shareholder_details_summary_page_Set() const{
    return m_shareholder_details_summary_page_isSet;
}

bool OAIShowPages::is_shareholder_details_summary_page_Valid() const{
    return m_shareholder_details_summary_page_isValid;
}

bool OAIShowPages::isWelcomePage() const {
    return m_welcome_page;
}
void OAIShowPages::setWelcomePage(const bool &welcome_page) {
    m_welcome_page = welcome_page;
    m_welcome_page_isSet = true;
}

bool OAIShowPages::is_welcome_page_Set() const{
    return m_welcome_page_isSet;
}

bool OAIShowPages::is_welcome_page_Valid() const{
    return m_welcome_page_isValid;
}

bool OAIShowPages::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_bank_details_summary_page_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_bank_verification_page_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_business_details_summary_page_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_checks_overview_page_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_individual_details_summary_page_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_legal_arrangements_details_summary_page_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_manual_bank_account_page_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shareholder_details_summary_page_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_welcome_page_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIShowPages::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
