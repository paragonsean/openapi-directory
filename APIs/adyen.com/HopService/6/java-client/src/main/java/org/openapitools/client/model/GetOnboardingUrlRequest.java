/*
 * Hosted onboarding API
 * This API is used for the classic integration. If you are just starting your implementation, refer to our [new integration guide](https://docs.adyen.com/marketplaces-and-platforms) instead.  The Hosted onboarding API provides endpoints that you can use to generate links to Adyen-hosted pages, such as an [onboarding page](https://docs.adyen.com/marketplaces-and-platforms/classic/hosted-onboarding-page) or a [PCI compliance questionnaire](https://docs.adyen.com/marketplaces-and-platforms/classic/platforms-for-partners). You can provide these links to your account holders so that they can complete their onboarding.  ## Authentication Your Adyen contact will provide your API credential and an API key. To connect to the API, add an `X-API-Key` header with the API key as the value, for example:   ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ```  Alternatively, you can use the username and password to connect to the API using basic authentication. For example:  ``` curl -U \"ws@MarketPlace.YOUR_PLATFORM_ACCOUNT\":\"YOUR_WS_PASSWORD\" \\ -H \"Content-Type: application/json\" \\ ... ``` When going live, you need to generate new web service user credentials to access the [live endpoints](https://docs.adyen.com/development-resources/live-endpoints).  ## Versioning The Hosted onboarding API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://cal-test.adyen.com/cal/services/Hop/v6/getOnboardingUrl ```
 *
 * The version of the OpenAPI document: 6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.CollectInformation;
import org.openapitools.client.model.ShowPages;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GetOnboardingUrlRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:17:24.621849-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetOnboardingUrlRequest {
  public static final String SERIALIZED_NAME_ACCOUNT_HOLDER_CODE = "accountHolderCode";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_HOLDER_CODE)
  private String accountHolderCode;

  public static final String SERIALIZED_NAME_COLLECT_INFORMATION = "collectInformation";
  @SerializedName(SERIALIZED_NAME_COLLECT_INFORMATION)
  private CollectInformation collectInformation;

  public static final String SERIALIZED_NAME_EDIT_MODE = "editMode";
  @SerializedName(SERIALIZED_NAME_EDIT_MODE)
  private Boolean editMode;

  public static final String SERIALIZED_NAME_MOBILE_O_AUTH_CALLBACK_URL = "mobileOAuthCallbackUrl";
  @SerializedName(SERIALIZED_NAME_MOBILE_O_AUTH_CALLBACK_URL)
  private String mobileOAuthCallbackUrl;

  public static final String SERIALIZED_NAME_PLATFORM_NAME = "platformName";
  @SerializedName(SERIALIZED_NAME_PLATFORM_NAME)
  private String platformName;

  public static final String SERIALIZED_NAME_RETURN_URL = "returnUrl";
  @SerializedName(SERIALIZED_NAME_RETURN_URL)
  private String returnUrl;

  public static final String SERIALIZED_NAME_SHOPPER_LOCALE = "shopperLocale";
  @SerializedName(SERIALIZED_NAME_SHOPPER_LOCALE)
  private String shopperLocale;

  public static final String SERIALIZED_NAME_SHOW_PAGES = "showPages";
  @SerializedName(SERIALIZED_NAME_SHOW_PAGES)
  private ShowPages showPages;

  public GetOnboardingUrlRequest() {
  }

  public GetOnboardingUrlRequest accountHolderCode(String accountHolderCode) {
    this.accountHolderCode = accountHolderCode;
    return this;
  }

  /**
   * The account holder code you provided when you created the account holder.
   * @return accountHolderCode
   */
  @javax.annotation.Nonnull
  public String getAccountHolderCode() {
    return accountHolderCode;
  }

  public void setAccountHolderCode(String accountHolderCode) {
    this.accountHolderCode = accountHolderCode;
  }


  public GetOnboardingUrlRequest collectInformation(CollectInformation collectInformation) {
    this.collectInformation = collectInformation;
    return this;
  }

  /**
   * Contains indicators whether the page should only collect information for specific [KYC checks](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-checks). By default, the page collects information for all KYC checks that apply to the [legal entity type](https://docs.adyen.com/marketplaces-and-platforms/classic/account-holders-and-accounts#legal-entity-types).
   * @return collectInformation
   */
  @javax.annotation.Nullable
  public CollectInformation getCollectInformation() {
    return collectInformation;
  }

  public void setCollectInformation(CollectInformation collectInformation) {
    this.collectInformation = collectInformation;
  }


  public GetOnboardingUrlRequest editMode(Boolean editMode) {
    this.editMode = editMode;
    return this;
  }

  /**
   * Indicates if editing checks is allowed even if all the checks have passed.
   * @return editMode
   */
  @javax.annotation.Nullable
  public Boolean getEditMode() {
    return editMode;
  }

  public void setEditMode(Boolean editMode) {
    this.editMode = editMode;
  }


  public GetOnboardingUrlRequest mobileOAuthCallbackUrl(String mobileOAuthCallbackUrl) {
    this.mobileOAuthCallbackUrl = mobileOAuthCallbackUrl;
    return this;
  }

  /**
   * The URL to which the account holder is redirected after completing an OAuth authentication with a bank through Trustly/PayMyBank.
   * @return mobileOAuthCallbackUrl
   */
  @javax.annotation.Nullable
  public String getMobileOAuthCallbackUrl() {
    return mobileOAuthCallbackUrl;
  }

  public void setMobileOAuthCallbackUrl(String mobileOAuthCallbackUrl) {
    this.mobileOAuthCallbackUrl = mobileOAuthCallbackUrl;
  }


  public GetOnboardingUrlRequest platformName(String platformName) {
    this.platformName = platformName;
    return this;
  }

  /**
   * The platform name which will show up in the welcome page.
   * @return platformName
   */
  @javax.annotation.Nullable
  public String getPlatformName() {
    return platformName;
  }

  public void setPlatformName(String platformName) {
    this.platformName = platformName;
  }


  public GetOnboardingUrlRequest returnUrl(String returnUrl) {
    this.returnUrl = returnUrl;
    return this;
  }

  /**
   * The URL where the account holder will be redirected back to after they complete the onboarding, or if their session times out. Maximum length of 500 characters. If you don&#39;t provide this, the account holder will be redirected back to the default return URL configured in your platform account.
   * @return returnUrl
   */
  @javax.annotation.Nullable
  public String getReturnUrl() {
    return returnUrl;
  }

  public void setReturnUrl(String returnUrl) {
    this.returnUrl = returnUrl;
  }


  public GetOnboardingUrlRequest shopperLocale(String shopperLocale) {
    this.shopperLocale = shopperLocale;
    return this;
  }

  /**
   * The language to be used in the page, specified by a combination of a language and country code. For example, **pt-BR**.   If not specified in the request or if the language is not supported, the page uses the browser language. If the browser language is not supported, the page uses **en-US** by default.  For a list of supported languages, refer to [Change the page language](https://docs.adyen.com/marketplaces-and-platforms/classic/hosted-onboarding-page/customize-experience#change-page-language).
   * @return shopperLocale
   */
  @javax.annotation.Nullable
  public String getShopperLocale() {
    return shopperLocale;
  }

  public void setShopperLocale(String shopperLocale) {
    this.shopperLocale = shopperLocale;
  }


  public GetOnboardingUrlRequest showPages(ShowPages showPages) {
    this.showPages = showPages;
    return this;
  }

  /**
   * Contains indicators whether specific pages must be shown to the account holder.
   * @return showPages
   */
  @javax.annotation.Nullable
  public ShowPages getShowPages() {
    return showPages;
  }

  public void setShowPages(ShowPages showPages) {
    this.showPages = showPages;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetOnboardingUrlRequest getOnboardingUrlRequest = (GetOnboardingUrlRequest) o;
    return Objects.equals(this.accountHolderCode, getOnboardingUrlRequest.accountHolderCode) &&
        Objects.equals(this.collectInformation, getOnboardingUrlRequest.collectInformation) &&
        Objects.equals(this.editMode, getOnboardingUrlRequest.editMode) &&
        Objects.equals(this.mobileOAuthCallbackUrl, getOnboardingUrlRequest.mobileOAuthCallbackUrl) &&
        Objects.equals(this.platformName, getOnboardingUrlRequest.platformName) &&
        Objects.equals(this.returnUrl, getOnboardingUrlRequest.returnUrl) &&
        Objects.equals(this.shopperLocale, getOnboardingUrlRequest.shopperLocale) &&
        Objects.equals(this.showPages, getOnboardingUrlRequest.showPages);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountHolderCode, collectInformation, editMode, mobileOAuthCallbackUrl, platformName, returnUrl, shopperLocale, showPages);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetOnboardingUrlRequest {\n");
    sb.append("    accountHolderCode: ").append(toIndentedString(accountHolderCode)).append("\n");
    sb.append("    collectInformation: ").append(toIndentedString(collectInformation)).append("\n");
    sb.append("    editMode: ").append(toIndentedString(editMode)).append("\n");
    sb.append("    mobileOAuthCallbackUrl: ").append(toIndentedString(mobileOAuthCallbackUrl)).append("\n");
    sb.append("    platformName: ").append(toIndentedString(platformName)).append("\n");
    sb.append("    returnUrl: ").append(toIndentedString(returnUrl)).append("\n");
    sb.append("    shopperLocale: ").append(toIndentedString(shopperLocale)).append("\n");
    sb.append("    showPages: ").append(toIndentedString(showPages)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("accountHolderCode");
    openapiFields.add("collectInformation");
    openapiFields.add("editMode");
    openapiFields.add("mobileOAuthCallbackUrl");
    openapiFields.add("platformName");
    openapiFields.add("returnUrl");
    openapiFields.add("shopperLocale");
    openapiFields.add("showPages");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("accountHolderCode");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetOnboardingUrlRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetOnboardingUrlRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetOnboardingUrlRequest is not found in the empty JSON string", GetOnboardingUrlRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetOnboardingUrlRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetOnboardingUrlRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : GetOnboardingUrlRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("accountHolderCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `accountHolderCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("accountHolderCode").toString()));
      }
      // validate the optional field `collectInformation`
      if (jsonObj.get("collectInformation") != null && !jsonObj.get("collectInformation").isJsonNull()) {
        CollectInformation.validateJsonElement(jsonObj.get("collectInformation"));
      }
      if ((jsonObj.get("mobileOAuthCallbackUrl") != null && !jsonObj.get("mobileOAuthCallbackUrl").isJsonNull()) && !jsonObj.get("mobileOAuthCallbackUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mobileOAuthCallbackUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mobileOAuthCallbackUrl").toString()));
      }
      if ((jsonObj.get("platformName") != null && !jsonObj.get("platformName").isJsonNull()) && !jsonObj.get("platformName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `platformName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("platformName").toString()));
      }
      if ((jsonObj.get("returnUrl") != null && !jsonObj.get("returnUrl").isJsonNull()) && !jsonObj.get("returnUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `returnUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("returnUrl").toString()));
      }
      if ((jsonObj.get("shopperLocale") != null && !jsonObj.get("shopperLocale").isJsonNull()) && !jsonObj.get("shopperLocale").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shopperLocale` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shopperLocale").toString()));
      }
      // validate the optional field `showPages`
      if (jsonObj.get("showPages") != null && !jsonObj.get("showPages").isJsonNull()) {
        ShowPages.validateJsonElement(jsonObj.get("showPages"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetOnboardingUrlRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetOnboardingUrlRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetOnboardingUrlRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetOnboardingUrlRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<GetOnboardingUrlRequest>() {
           @Override
           public void write(JsonWriter out, GetOnboardingUrlRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetOnboardingUrlRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetOnboardingUrlRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetOnboardingUrlRequest
   * @throws IOException if the JSON string is invalid with respect to GetOnboardingUrlRequest
   */
  public static GetOnboardingUrlRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetOnboardingUrlRequest.class);
  }

  /**
   * Convert an instance of GetOnboardingUrlRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

