/**
 * Adyen Checkout API
 * Adyen Checkout API provides a simple and flexible way to initiate and authorise online payments. You can use the same integration for payments made with cards (including 3D Secure), mobile wallets, and local payment methods (for example, iDEAL and Sofort).  This API reference provides information on available endpoints and how to interact with them. To learn more about the API, visit [online payments documentation](https://docs.adyen.com/online-payments).  ## Authentication Each request to Checkout API must be signed with an API key. For this, [get your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) from your Customer Area, and set this key to the `X-API-Key` header value, for example:  ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ``` ## Versioning Checkout API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://checkout-test.adyen.com/v68/payments ```  ## Going live  To access the live endpoints, you need an API key from your live Customer Area.  The live endpoint URLs contain a prefix which is unique to your company account, for example: ``` https://{PREFIX}-checkout-live.adyenpayments.com/checkout/v68/payments ```  Get your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.  When preparing to do live transactions with Checkout API, follow the [go-live checklist](https://docs.adyen.com/online-payments/go-live-checklist) to make sure you've got all the required configuration in place.  ## Release notes Have a look at the [release notes](https://docs.adyen.com/online-payments/release-notes?integration_type=api&version=68) to find out what changed in this version!
 *
 * The version of the OpenAPI document: 68
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateCheckoutSessionRequest.h
 *
 * 
 */

#ifndef OAICreateCheckoutSessionRequest_H
#define OAICreateCheckoutSessionRequest_H

#include <QJsonObject>

#include "OAIAccountInfo.h"
#include "OAIAmount.h"
#include "OAIApplicationInfo.h"
#include "OAIBalanceCheckRequest_additionalData.h"
#include "OAIBillingAddress.h"
#include "OAICheckoutSessionInstallmentOption.h"
#include "OAICompany.h"
#include "OAIDeliveryAddress.h"
#include "OAIFundOrigin.h"
#include "OAIFundRecipient.h"
#include "OAILineItem.h"
#include "OAIMandate.h"
#include "OAIName.h"
#include "OAIRiskData.h"
#include "OAISplit.h"
#include "OAIThreeDSecureData.h"
#include <QDate>
#include <QDateTime>
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAccountInfo;
class OAIAmount;
class OAIBalanceCheckRequest_additionalData;
class OAIApplicationInfo;
class OAIBillingAddress;
class OAICompany;
class OAIDeliveryAddress;
class OAIFundOrigin;
class OAIFundRecipient;
class OAICheckoutSessionInstallmentOption;
class OAILineItem;
class OAIMandate;
class OAIThreeDSecureData;
class OAIRiskData;
class OAIName;
class OAISplit;

class OAICreateCheckoutSessionRequest : public OAIObject {
public:
    OAICreateCheckoutSessionRequest();
    OAICreateCheckoutSessionRequest(QString json);
    ~OAICreateCheckoutSessionRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAccountInfo getAccountInfo() const;
    void setAccountInfo(const OAIAccountInfo &account_info);
    bool is_account_info_Set() const;
    bool is_account_info_Valid() const;

    OAIAmount getAdditionalAmount() const;
    void setAdditionalAmount(const OAIAmount &additional_amount);
    bool is_additional_amount_Set() const;
    bool is_additional_amount_Valid() const;

    OAIBalanceCheckRequest_additionalData getAdditionalData() const;
    void setAdditionalData(const OAIBalanceCheckRequest_additionalData &additional_data);
    bool is_additional_data_Set() const;
    bool is_additional_data_Valid() const;

    QList<QString> getAllowedPaymentMethods() const;
    void setAllowedPaymentMethods(const QList<QString> &allowed_payment_methods);
    bool is_allowed_payment_methods_Set() const;
    bool is_allowed_payment_methods_Valid() const;

    OAIAmount getAmount() const;
    void setAmount(const OAIAmount &amount);
    bool is_amount_Set() const;
    bool is_amount_Valid() const;

    OAIApplicationInfo getApplicationInfo() const;
    void setApplicationInfo(const OAIApplicationInfo &application_info);
    bool is_application_info_Set() const;
    bool is_application_info_Valid() const;

    OAIBillingAddress getBillingAddress() const;
    void setBillingAddress(const OAIBillingAddress &billing_address);
    bool is_billing_address_Set() const;
    bool is_billing_address_Valid() const;

    QList<QString> getBlockedPaymentMethods() const;
    void setBlockedPaymentMethods(const QList<QString> &blocked_payment_methods);
    bool is_blocked_payment_methods_Set() const;
    bool is_blocked_payment_methods_Valid() const;

    qint32 getCaptureDelayHours() const;
    void setCaptureDelayHours(const qint32 &capture_delay_hours);
    bool is_capture_delay_hours_Set() const;
    bool is_capture_delay_hours_Valid() const;

    QString getChannel() const;
    void setChannel(const QString &channel);
    bool is_channel_Set() const;
    bool is_channel_Valid() const;

    OAICompany getCompany() const;
    void setCompany(const OAICompany &company);
    bool is_company_Set() const;
    bool is_company_Valid() const;

    QString getCountryCode() const;
    void setCountryCode(const QString &country_code);
    bool is_country_code_Set() const;
    bool is_country_code_Valid() const;

    QDate getDateOfBirth() const;
    void setDateOfBirth(const QDate &date_of_birth);
    bool is_date_of_birth_Set() const;
    bool is_date_of_birth_Valid() const;

    QDateTime getDeliverAt() const;
    void setDeliverAt(const QDateTime &deliver_at);
    bool is_deliver_at_Set() const;
    bool is_deliver_at_Valid() const;

    OAIDeliveryAddress getDeliveryAddress() const;
    void setDeliveryAddress(const OAIDeliveryAddress &delivery_address);
    bool is_delivery_address_Set() const;
    bool is_delivery_address_Valid() const;

    bool isEnableOneClick() const;
    void setEnableOneClick(const bool &enable_one_click);
    bool is_enable_one_click_Set() const;
    bool is_enable_one_click_Valid() const;

    bool isEnablePayOut() const;
    void setEnablePayOut(const bool &enable_pay_out);
    bool is_enable_pay_out_Set() const;
    bool is_enable_pay_out_Valid() const;

    bool isEnableRecurring() const;
    void setEnableRecurring(const bool &enable_recurring);
    bool is_enable_recurring_Set() const;
    bool is_enable_recurring_Valid() const;

    QDateTime getExpiresAt() const;
    void setExpiresAt(const QDateTime &expires_at);
    bool is_expires_at_Set() const;
    bool is_expires_at_Valid() const;

    OAIFundOrigin getFundOrigin() const;
    void setFundOrigin(const OAIFundOrigin &fund_origin);
    bool is_fund_origin_Set() const;
    bool is_fund_origin_Valid() const;

    OAIFundRecipient getFundRecipient() const;
    void setFundRecipient(const OAIFundRecipient &fund_recipient);
    bool is_fund_recipient_Set() const;
    bool is_fund_recipient_Valid() const;

    QMap<QString, OAICheckoutSessionInstallmentOption> getInstallmentOptions() const;
    void setInstallmentOptions(const QMap<QString, OAICheckoutSessionInstallmentOption> &installment_options);
    bool is_installment_options_Set() const;
    bool is_installment_options_Valid() const;

    QList<OAILineItem> getLineItems() const;
    void setLineItems(const QList<OAILineItem> &line_items);
    bool is_line_items_Set() const;
    bool is_line_items_Valid() const;

    OAIMandate getMandate() const;
    void setMandate(const OAIMandate &mandate);
    bool is_mandate_Set() const;
    bool is_mandate_Valid() const;

    QString getMcc() const;
    void setMcc(const QString &mcc);
    bool is_mcc_Set() const;
    bool is_mcc_Valid() const;

    QString getMerchantAccount() const;
    void setMerchantAccount(const QString &merchant_account);
    bool is_merchant_account_Set() const;
    bool is_merchant_account_Valid() const;

    QString getMerchantOrderReference() const;
    void setMerchantOrderReference(const QString &merchant_order_reference);
    bool is_merchant_order_reference_Set() const;
    bool is_merchant_order_reference_Valid() const;

    QMap<QString, QString> getMetadata() const;
    void setMetadata(const QMap<QString, QString> &metadata);
    bool is_metadata_Set() const;
    bool is_metadata_Valid() const;

    OAIThreeDSecureData getMpiData() const;
    void setMpiData(const OAIThreeDSecureData &mpi_data);
    bool is_mpi_data_Set() const;
    bool is_mpi_data_Valid() const;

    QString getRecurringExpiry() const;
    void setRecurringExpiry(const QString &recurring_expiry);
    bool is_recurring_expiry_Set() const;
    bool is_recurring_expiry_Valid() const;

    QString getRecurringFrequency() const;
    void setRecurringFrequency(const QString &recurring_frequency);
    bool is_recurring_frequency_Set() const;
    bool is_recurring_frequency_Valid() const;

    QString getRecurringProcessingModel() const;
    void setRecurringProcessingModel(const QString &recurring_processing_model);
    bool is_recurring_processing_model_Set() const;
    bool is_recurring_processing_model_Valid() const;

    QString getRedirectFromIssuerMethod() const;
    void setRedirectFromIssuerMethod(const QString &redirect_from_issuer_method);
    bool is_redirect_from_issuer_method_Set() const;
    bool is_redirect_from_issuer_method_Valid() const;

    QString getRedirectToIssuerMethod() const;
    void setRedirectToIssuerMethod(const QString &redirect_to_issuer_method);
    bool is_redirect_to_issuer_method_Set() const;
    bool is_redirect_to_issuer_method_Valid() const;

    QString getReference() const;
    void setReference(const QString &reference);
    bool is_reference_Set() const;
    bool is_reference_Valid() const;

    QString getReturnUrl() const;
    void setReturnUrl(const QString &return_url);
    bool is_return_url_Set() const;
    bool is_return_url_Valid() const;

    OAIRiskData getRiskData() const;
    void setRiskData(const OAIRiskData &risk_data);
    bool is_risk_data_Set() const;
    bool is_risk_data_Valid() const;

    QString getShopperEmail() const;
    void setShopperEmail(const QString &shopper_email);
    bool is_shopper_email_Set() const;
    bool is_shopper_email_Valid() const;

    QString getShopperIp() const;
    void setShopperIp(const QString &shopper_ip);
    bool is_shopper_ip_Set() const;
    bool is_shopper_ip_Valid() const;

    QString getShopperInteraction() const;
    void setShopperInteraction(const QString &shopper_interaction);
    bool is_shopper_interaction_Set() const;
    bool is_shopper_interaction_Valid() const;

    QString getShopperLocale() const;
    void setShopperLocale(const QString &shopper_locale);
    bool is_shopper_locale_Set() const;
    bool is_shopper_locale_Valid() const;

    OAIName getShopperName() const;
    void setShopperName(const OAIName &shopper_name);
    bool is_shopper_name_Set() const;
    bool is_shopper_name_Valid() const;

    QString getShopperReference() const;
    void setShopperReference(const QString &shopper_reference);
    bool is_shopper_reference_Set() const;
    bool is_shopper_reference_Valid() const;

    QString getShopperStatement() const;
    void setShopperStatement(const QString &shopper_statement);
    bool is_shopper_statement_Set() const;
    bool is_shopper_statement_Valid() const;

    bool isShowInstallmentAmount() const;
    void setShowInstallmentAmount(const bool &show_installment_amount);
    bool is_show_installment_amount_Set() const;
    bool is_show_installment_amount_Valid() const;

    bool isShowRemovePaymentMethodButton() const;
    void setShowRemovePaymentMethodButton(const bool &show_remove_payment_method_button);
    bool is_show_remove_payment_method_button_Set() const;
    bool is_show_remove_payment_method_button_Valid() const;

    QString getSocialSecurityNumber() const;
    void setSocialSecurityNumber(const QString &social_security_number);
    bool is_social_security_number_Set() const;
    bool is_social_security_number_Valid() const;

    bool isSplitCardFundingSources() const;
    void setSplitCardFundingSources(const bool &split_card_funding_sources);
    bool is_split_card_funding_sources_Set() const;
    bool is_split_card_funding_sources_Valid() const;

    QList<OAISplit> getSplits() const;
    void setSplits(const QList<OAISplit> &splits);
    bool is_splits_Set() const;
    bool is_splits_Valid() const;

    QString getStore() const;
    void setStore(const QString &store);
    bool is_store_Set() const;
    bool is_store_Valid() const;

    bool isStorePaymentMethod() const;
    void setStorePaymentMethod(const bool &store_payment_method);
    bool is_store_payment_method_Set() const;
    bool is_store_payment_method_Valid() const;

    QString getTelephoneNumber() const;
    void setTelephoneNumber(const QString &telephone_number);
    bool is_telephone_number_Set() const;
    bool is_telephone_number_Valid() const;

    bool isThreeDsAuthenticationOnly() const;
    void setThreeDsAuthenticationOnly(const bool &three_ds_authentication_only);
    bool is_three_ds_authentication_only_Set() const;
    bool is_three_ds_authentication_only_Valid() const;

    bool isTrustedShopper() const;
    void setTrustedShopper(const bool &trusted_shopper);
    bool is_trusted_shopper_Set() const;
    bool is_trusted_shopper_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAccountInfo m_account_info;
    bool m_account_info_isSet;
    bool m_account_info_isValid;

    OAIAmount m_additional_amount;
    bool m_additional_amount_isSet;
    bool m_additional_amount_isValid;

    OAIBalanceCheckRequest_additionalData m_additional_data;
    bool m_additional_data_isSet;
    bool m_additional_data_isValid;

    QList<QString> m_allowed_payment_methods;
    bool m_allowed_payment_methods_isSet;
    bool m_allowed_payment_methods_isValid;

    OAIAmount m_amount;
    bool m_amount_isSet;
    bool m_amount_isValid;

    OAIApplicationInfo m_application_info;
    bool m_application_info_isSet;
    bool m_application_info_isValid;

    OAIBillingAddress m_billing_address;
    bool m_billing_address_isSet;
    bool m_billing_address_isValid;

    QList<QString> m_blocked_payment_methods;
    bool m_blocked_payment_methods_isSet;
    bool m_blocked_payment_methods_isValid;

    qint32 m_capture_delay_hours;
    bool m_capture_delay_hours_isSet;
    bool m_capture_delay_hours_isValid;

    QString m_channel;
    bool m_channel_isSet;
    bool m_channel_isValid;

    OAICompany m_company;
    bool m_company_isSet;
    bool m_company_isValid;

    QString m_country_code;
    bool m_country_code_isSet;
    bool m_country_code_isValid;

    QDate m_date_of_birth;
    bool m_date_of_birth_isSet;
    bool m_date_of_birth_isValid;

    QDateTime m_deliver_at;
    bool m_deliver_at_isSet;
    bool m_deliver_at_isValid;

    OAIDeliveryAddress m_delivery_address;
    bool m_delivery_address_isSet;
    bool m_delivery_address_isValid;

    bool m_enable_one_click;
    bool m_enable_one_click_isSet;
    bool m_enable_one_click_isValid;

    bool m_enable_pay_out;
    bool m_enable_pay_out_isSet;
    bool m_enable_pay_out_isValid;

    bool m_enable_recurring;
    bool m_enable_recurring_isSet;
    bool m_enable_recurring_isValid;

    QDateTime m_expires_at;
    bool m_expires_at_isSet;
    bool m_expires_at_isValid;

    OAIFundOrigin m_fund_origin;
    bool m_fund_origin_isSet;
    bool m_fund_origin_isValid;

    OAIFundRecipient m_fund_recipient;
    bool m_fund_recipient_isSet;
    bool m_fund_recipient_isValid;

    QMap<QString, OAICheckoutSessionInstallmentOption> m_installment_options;
    bool m_installment_options_isSet;
    bool m_installment_options_isValid;

    QList<OAILineItem> m_line_items;
    bool m_line_items_isSet;
    bool m_line_items_isValid;

    OAIMandate m_mandate;
    bool m_mandate_isSet;
    bool m_mandate_isValid;

    QString m_mcc;
    bool m_mcc_isSet;
    bool m_mcc_isValid;

    QString m_merchant_account;
    bool m_merchant_account_isSet;
    bool m_merchant_account_isValid;

    QString m_merchant_order_reference;
    bool m_merchant_order_reference_isSet;
    bool m_merchant_order_reference_isValid;

    QMap<QString, QString> m_metadata;
    bool m_metadata_isSet;
    bool m_metadata_isValid;

    OAIThreeDSecureData m_mpi_data;
    bool m_mpi_data_isSet;
    bool m_mpi_data_isValid;

    QString m_recurring_expiry;
    bool m_recurring_expiry_isSet;
    bool m_recurring_expiry_isValid;

    QString m_recurring_frequency;
    bool m_recurring_frequency_isSet;
    bool m_recurring_frequency_isValid;

    QString m_recurring_processing_model;
    bool m_recurring_processing_model_isSet;
    bool m_recurring_processing_model_isValid;

    QString m_redirect_from_issuer_method;
    bool m_redirect_from_issuer_method_isSet;
    bool m_redirect_from_issuer_method_isValid;

    QString m_redirect_to_issuer_method;
    bool m_redirect_to_issuer_method_isSet;
    bool m_redirect_to_issuer_method_isValid;

    QString m_reference;
    bool m_reference_isSet;
    bool m_reference_isValid;

    QString m_return_url;
    bool m_return_url_isSet;
    bool m_return_url_isValid;

    OAIRiskData m_risk_data;
    bool m_risk_data_isSet;
    bool m_risk_data_isValid;

    QString m_shopper_email;
    bool m_shopper_email_isSet;
    bool m_shopper_email_isValid;

    QString m_shopper_ip;
    bool m_shopper_ip_isSet;
    bool m_shopper_ip_isValid;

    QString m_shopper_interaction;
    bool m_shopper_interaction_isSet;
    bool m_shopper_interaction_isValid;

    QString m_shopper_locale;
    bool m_shopper_locale_isSet;
    bool m_shopper_locale_isValid;

    OAIName m_shopper_name;
    bool m_shopper_name_isSet;
    bool m_shopper_name_isValid;

    QString m_shopper_reference;
    bool m_shopper_reference_isSet;
    bool m_shopper_reference_isValid;

    QString m_shopper_statement;
    bool m_shopper_statement_isSet;
    bool m_shopper_statement_isValid;

    bool m_show_installment_amount;
    bool m_show_installment_amount_isSet;
    bool m_show_installment_amount_isValid;

    bool m_show_remove_payment_method_button;
    bool m_show_remove_payment_method_button_isSet;
    bool m_show_remove_payment_method_button_isValid;

    QString m_social_security_number;
    bool m_social_security_number_isSet;
    bool m_social_security_number_isValid;

    bool m_split_card_funding_sources;
    bool m_split_card_funding_sources_isSet;
    bool m_split_card_funding_sources_isValid;

    QList<OAISplit> m_splits;
    bool m_splits_isSet;
    bool m_splits_isValid;

    QString m_store;
    bool m_store_isSet;
    bool m_store_isValid;

    bool m_store_payment_method;
    bool m_store_payment_method_isSet;
    bool m_store_payment_method_isValid;

    QString m_telephone_number;
    bool m_telephone_number_isSet;
    bool m_telephone_number_isValid;

    bool m_three_ds_authentication_only;
    bool m_three_ds_authentication_only_isSet;
    bool m_three_ds_authentication_only_isValid;

    bool m_trusted_shopper;
    bool m_trusted_shopper_isSet;
    bool m_trusted_shopper_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateCheckoutSessionRequest)

#endif // OAICreateCheckoutSessionRequest_H
