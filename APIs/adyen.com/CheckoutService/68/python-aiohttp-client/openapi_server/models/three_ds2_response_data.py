# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ThreeDS2ResponseData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, acs_challenge_mandated: str=None, acs_operator_id: str=None, acs_reference_number: str=None, acs_signed_content: str=None, acs_trans_id: str=None, acs_url: str=None, authentication_type: str=None, card_holder_info: str=None, cavv_algorithm: str=None, challenge_indicator: str=None, ds_reference_number: str=None, ds_trans_id: str=None, exemption_indicator: str=None, message_version: str=None, risk_score: str=None, sdk_ephem_pub_key: str=None, three_ds_server_trans_id: str=None, trans_status: str=None, trans_status_reason: str=None):
        """ThreeDS2ResponseData - a model defined in OpenAPI

        :param acs_challenge_mandated: The acs_challenge_mandated of this ThreeDS2ResponseData.
        :param acs_operator_id: The acs_operator_id of this ThreeDS2ResponseData.
        :param acs_reference_number: The acs_reference_number of this ThreeDS2ResponseData.
        :param acs_signed_content: The acs_signed_content of this ThreeDS2ResponseData.
        :param acs_trans_id: The acs_trans_id of this ThreeDS2ResponseData.
        :param acs_url: The acs_url of this ThreeDS2ResponseData.
        :param authentication_type: The authentication_type of this ThreeDS2ResponseData.
        :param card_holder_info: The card_holder_info of this ThreeDS2ResponseData.
        :param cavv_algorithm: The cavv_algorithm of this ThreeDS2ResponseData.
        :param challenge_indicator: The challenge_indicator of this ThreeDS2ResponseData.
        :param ds_reference_number: The ds_reference_number of this ThreeDS2ResponseData.
        :param ds_trans_id: The ds_trans_id of this ThreeDS2ResponseData.
        :param exemption_indicator: The exemption_indicator of this ThreeDS2ResponseData.
        :param message_version: The message_version of this ThreeDS2ResponseData.
        :param risk_score: The risk_score of this ThreeDS2ResponseData.
        :param sdk_ephem_pub_key: The sdk_ephem_pub_key of this ThreeDS2ResponseData.
        :param three_ds_server_trans_id: The three_ds_server_trans_id of this ThreeDS2ResponseData.
        :param trans_status: The trans_status of this ThreeDS2ResponseData.
        :param trans_status_reason: The trans_status_reason of this ThreeDS2ResponseData.
        """
        self.openapi_types = {
            'acs_challenge_mandated': str,
            'acs_operator_id': str,
            'acs_reference_number': str,
            'acs_signed_content': str,
            'acs_trans_id': str,
            'acs_url': str,
            'authentication_type': str,
            'card_holder_info': str,
            'cavv_algorithm': str,
            'challenge_indicator': str,
            'ds_reference_number': str,
            'ds_trans_id': str,
            'exemption_indicator': str,
            'message_version': str,
            'risk_score': str,
            'sdk_ephem_pub_key': str,
            'three_ds_server_trans_id': str,
            'trans_status': str,
            'trans_status_reason': str
        }

        self.attribute_map = {
            'acs_challenge_mandated': 'acsChallengeMandated',
            'acs_operator_id': 'acsOperatorID',
            'acs_reference_number': 'acsReferenceNumber',
            'acs_signed_content': 'acsSignedContent',
            'acs_trans_id': 'acsTransID',
            'acs_url': 'acsURL',
            'authentication_type': 'authenticationType',
            'card_holder_info': 'cardHolderInfo',
            'cavv_algorithm': 'cavvAlgorithm',
            'challenge_indicator': 'challengeIndicator',
            'ds_reference_number': 'dsReferenceNumber',
            'ds_trans_id': 'dsTransID',
            'exemption_indicator': 'exemptionIndicator',
            'message_version': 'messageVersion',
            'risk_score': 'riskScore',
            'sdk_ephem_pub_key': 'sdkEphemPubKey',
            'three_ds_server_trans_id': 'threeDSServerTransID',
            'trans_status': 'transStatus',
            'trans_status_reason': 'transStatusReason'
        }

        self._acs_challenge_mandated = acs_challenge_mandated
        self._acs_operator_id = acs_operator_id
        self._acs_reference_number = acs_reference_number
        self._acs_signed_content = acs_signed_content
        self._acs_trans_id = acs_trans_id
        self._acs_url = acs_url
        self._authentication_type = authentication_type
        self._card_holder_info = card_holder_info
        self._cavv_algorithm = cavv_algorithm
        self._challenge_indicator = challenge_indicator
        self._ds_reference_number = ds_reference_number
        self._ds_trans_id = ds_trans_id
        self._exemption_indicator = exemption_indicator
        self._message_version = message_version
        self._risk_score = risk_score
        self._sdk_ephem_pub_key = sdk_ephem_pub_key
        self._three_ds_server_trans_id = three_ds_server_trans_id
        self._trans_status = trans_status
        self._trans_status_reason = trans_status_reason

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ThreeDS2ResponseData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ThreeDS2ResponseData of this ThreeDS2ResponseData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def acs_challenge_mandated(self):
        """Gets the acs_challenge_mandated of this ThreeDS2ResponseData.


        :return: The acs_challenge_mandated of this ThreeDS2ResponseData.
        :rtype: str
        """
        return self._acs_challenge_mandated

    @acs_challenge_mandated.setter
    def acs_challenge_mandated(self, acs_challenge_mandated):
        """Sets the acs_challenge_mandated of this ThreeDS2ResponseData.


        :param acs_challenge_mandated: The acs_challenge_mandated of this ThreeDS2ResponseData.
        :type acs_challenge_mandated: str
        """

        self._acs_challenge_mandated = acs_challenge_mandated

    @property
    def acs_operator_id(self):
        """Gets the acs_operator_id of this ThreeDS2ResponseData.


        :return: The acs_operator_id of this ThreeDS2ResponseData.
        :rtype: str
        """
        return self._acs_operator_id

    @acs_operator_id.setter
    def acs_operator_id(self, acs_operator_id):
        """Sets the acs_operator_id of this ThreeDS2ResponseData.


        :param acs_operator_id: The acs_operator_id of this ThreeDS2ResponseData.
        :type acs_operator_id: str
        """

        self._acs_operator_id = acs_operator_id

    @property
    def acs_reference_number(self):
        """Gets the acs_reference_number of this ThreeDS2ResponseData.


        :return: The acs_reference_number of this ThreeDS2ResponseData.
        :rtype: str
        """
        return self._acs_reference_number

    @acs_reference_number.setter
    def acs_reference_number(self, acs_reference_number):
        """Sets the acs_reference_number of this ThreeDS2ResponseData.


        :param acs_reference_number: The acs_reference_number of this ThreeDS2ResponseData.
        :type acs_reference_number: str
        """

        self._acs_reference_number = acs_reference_number

    @property
    def acs_signed_content(self):
        """Gets the acs_signed_content of this ThreeDS2ResponseData.


        :return: The acs_signed_content of this ThreeDS2ResponseData.
        :rtype: str
        """
        return self._acs_signed_content

    @acs_signed_content.setter
    def acs_signed_content(self, acs_signed_content):
        """Sets the acs_signed_content of this ThreeDS2ResponseData.


        :param acs_signed_content: The acs_signed_content of this ThreeDS2ResponseData.
        :type acs_signed_content: str
        """

        self._acs_signed_content = acs_signed_content

    @property
    def acs_trans_id(self):
        """Gets the acs_trans_id of this ThreeDS2ResponseData.


        :return: The acs_trans_id of this ThreeDS2ResponseData.
        :rtype: str
        """
        return self._acs_trans_id

    @acs_trans_id.setter
    def acs_trans_id(self, acs_trans_id):
        """Sets the acs_trans_id of this ThreeDS2ResponseData.


        :param acs_trans_id: The acs_trans_id of this ThreeDS2ResponseData.
        :type acs_trans_id: str
        """

        self._acs_trans_id = acs_trans_id

    @property
    def acs_url(self):
        """Gets the acs_url of this ThreeDS2ResponseData.


        :return: The acs_url of this ThreeDS2ResponseData.
        :rtype: str
        """
        return self._acs_url

    @acs_url.setter
    def acs_url(self, acs_url):
        """Sets the acs_url of this ThreeDS2ResponseData.


        :param acs_url: The acs_url of this ThreeDS2ResponseData.
        :type acs_url: str
        """

        self._acs_url = acs_url

    @property
    def authentication_type(self):
        """Gets the authentication_type of this ThreeDS2ResponseData.


        :return: The authentication_type of this ThreeDS2ResponseData.
        :rtype: str
        """
        return self._authentication_type

    @authentication_type.setter
    def authentication_type(self, authentication_type):
        """Sets the authentication_type of this ThreeDS2ResponseData.


        :param authentication_type: The authentication_type of this ThreeDS2ResponseData.
        :type authentication_type: str
        """

        self._authentication_type = authentication_type

    @property
    def card_holder_info(self):
        """Gets the card_holder_info of this ThreeDS2ResponseData.


        :return: The card_holder_info of this ThreeDS2ResponseData.
        :rtype: str
        """
        return self._card_holder_info

    @card_holder_info.setter
    def card_holder_info(self, card_holder_info):
        """Sets the card_holder_info of this ThreeDS2ResponseData.


        :param card_holder_info: The card_holder_info of this ThreeDS2ResponseData.
        :type card_holder_info: str
        """

        self._card_holder_info = card_holder_info

    @property
    def cavv_algorithm(self):
        """Gets the cavv_algorithm of this ThreeDS2ResponseData.


        :return: The cavv_algorithm of this ThreeDS2ResponseData.
        :rtype: str
        """
        return self._cavv_algorithm

    @cavv_algorithm.setter
    def cavv_algorithm(self, cavv_algorithm):
        """Sets the cavv_algorithm of this ThreeDS2ResponseData.


        :param cavv_algorithm: The cavv_algorithm of this ThreeDS2ResponseData.
        :type cavv_algorithm: str
        """

        self._cavv_algorithm = cavv_algorithm

    @property
    def challenge_indicator(self):
        """Gets the challenge_indicator of this ThreeDS2ResponseData.


        :return: The challenge_indicator of this ThreeDS2ResponseData.
        :rtype: str
        """
        return self._challenge_indicator

    @challenge_indicator.setter
    def challenge_indicator(self, challenge_indicator):
        """Sets the challenge_indicator of this ThreeDS2ResponseData.


        :param challenge_indicator: The challenge_indicator of this ThreeDS2ResponseData.
        :type challenge_indicator: str
        """

        self._challenge_indicator = challenge_indicator

    @property
    def ds_reference_number(self):
        """Gets the ds_reference_number of this ThreeDS2ResponseData.


        :return: The ds_reference_number of this ThreeDS2ResponseData.
        :rtype: str
        """
        return self._ds_reference_number

    @ds_reference_number.setter
    def ds_reference_number(self, ds_reference_number):
        """Sets the ds_reference_number of this ThreeDS2ResponseData.


        :param ds_reference_number: The ds_reference_number of this ThreeDS2ResponseData.
        :type ds_reference_number: str
        """

        self._ds_reference_number = ds_reference_number

    @property
    def ds_trans_id(self):
        """Gets the ds_trans_id of this ThreeDS2ResponseData.


        :return: The ds_trans_id of this ThreeDS2ResponseData.
        :rtype: str
        """
        return self._ds_trans_id

    @ds_trans_id.setter
    def ds_trans_id(self, ds_trans_id):
        """Sets the ds_trans_id of this ThreeDS2ResponseData.


        :param ds_trans_id: The ds_trans_id of this ThreeDS2ResponseData.
        :type ds_trans_id: str
        """

        self._ds_trans_id = ds_trans_id

    @property
    def exemption_indicator(self):
        """Gets the exemption_indicator of this ThreeDS2ResponseData.


        :return: The exemption_indicator of this ThreeDS2ResponseData.
        :rtype: str
        """
        return self._exemption_indicator

    @exemption_indicator.setter
    def exemption_indicator(self, exemption_indicator):
        """Sets the exemption_indicator of this ThreeDS2ResponseData.


        :param exemption_indicator: The exemption_indicator of this ThreeDS2ResponseData.
        :type exemption_indicator: str
        """

        self._exemption_indicator = exemption_indicator

    @property
    def message_version(self):
        """Gets the message_version of this ThreeDS2ResponseData.


        :return: The message_version of this ThreeDS2ResponseData.
        :rtype: str
        """
        return self._message_version

    @message_version.setter
    def message_version(self, message_version):
        """Sets the message_version of this ThreeDS2ResponseData.


        :param message_version: The message_version of this ThreeDS2ResponseData.
        :type message_version: str
        """

        self._message_version = message_version

    @property
    def risk_score(self):
        """Gets the risk_score of this ThreeDS2ResponseData.


        :return: The risk_score of this ThreeDS2ResponseData.
        :rtype: str
        """
        return self._risk_score

    @risk_score.setter
    def risk_score(self, risk_score):
        """Sets the risk_score of this ThreeDS2ResponseData.


        :param risk_score: The risk_score of this ThreeDS2ResponseData.
        :type risk_score: str
        """

        self._risk_score = risk_score

    @property
    def sdk_ephem_pub_key(self):
        """Gets the sdk_ephem_pub_key of this ThreeDS2ResponseData.


        :return: The sdk_ephem_pub_key of this ThreeDS2ResponseData.
        :rtype: str
        """
        return self._sdk_ephem_pub_key

    @sdk_ephem_pub_key.setter
    def sdk_ephem_pub_key(self, sdk_ephem_pub_key):
        """Sets the sdk_ephem_pub_key of this ThreeDS2ResponseData.


        :param sdk_ephem_pub_key: The sdk_ephem_pub_key of this ThreeDS2ResponseData.
        :type sdk_ephem_pub_key: str
        """

        self._sdk_ephem_pub_key = sdk_ephem_pub_key

    @property
    def three_ds_server_trans_id(self):
        """Gets the three_ds_server_trans_id of this ThreeDS2ResponseData.


        :return: The three_ds_server_trans_id of this ThreeDS2ResponseData.
        :rtype: str
        """
        return self._three_ds_server_trans_id

    @three_ds_server_trans_id.setter
    def three_ds_server_trans_id(self, three_ds_server_trans_id):
        """Sets the three_ds_server_trans_id of this ThreeDS2ResponseData.


        :param three_ds_server_trans_id: The three_ds_server_trans_id of this ThreeDS2ResponseData.
        :type three_ds_server_trans_id: str
        """

        self._three_ds_server_trans_id = three_ds_server_trans_id

    @property
    def trans_status(self):
        """Gets the trans_status of this ThreeDS2ResponseData.


        :return: The trans_status of this ThreeDS2ResponseData.
        :rtype: str
        """
        return self._trans_status

    @trans_status.setter
    def trans_status(self, trans_status):
        """Sets the trans_status of this ThreeDS2ResponseData.


        :param trans_status: The trans_status of this ThreeDS2ResponseData.
        :type trans_status: str
        """

        self._trans_status = trans_status

    @property
    def trans_status_reason(self):
        """Gets the trans_status_reason of this ThreeDS2ResponseData.


        :return: The trans_status_reason of this ThreeDS2ResponseData.
        :rtype: str
        """
        return self._trans_status_reason

    @trans_status_reason.setter
    def trans_status_reason(self, trans_status_reason):
        """Sets the trans_status_reason of this ThreeDS2ResponseData.


        :param trans_status_reason: The trans_status_reason of this ThreeDS2ResponseData.
        :type trans_status_reason: str
        """

        self._trans_status_reason = trans_status_reason
