/**
 * Adyen Checkout API
 * Adyen Checkout API provides a simple and flexible way to initiate and authorise online payments. You can use the same integration for payments made with cards (including 3D Secure), mobile wallets, and local payment methods (for example, iDEAL and Sofort).  This API reference provides information on available endpoints and how to interact with them. To learn more about the API, visit [online payments documentation](https://docs.adyen.com/online-payments).  ## Authentication Each request to Checkout API must be signed with an API key. For this, [get your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) from your Customer Area, and set this key to the `X-API-Key` header value, for example:  ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ``` ## Versioning Checkout API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://checkout-test.adyen.com/v49/payments ```  ## Going live  To access the live endpoints, you need an API key from your live Customer Area.  The live endpoint URLs contain a prefix which is unique to your company account, for example: ``` https://{PREFIX}-checkout-live.adyenpayments.com/checkout/v49/payments ```  Get your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.  When preparing to do live transactions with Checkout API, follow the [go-live checklist](https://docs.adyen.com/online-payments/go-live-checklist) to make sure you've got all the required configuration in place.  ## Release notes Have a look at the [release notes](https://docs.adyen.com/online-payments/release-notes?integration_type=api&version=49) to find out what changed in this version!
 *
 * The version of the OpenAPI document: 49
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CheckoutRedirectAction from './CheckoutRedirectAction';

/**
 * The PaymentDetailsResponseAction model module.
 * @module model/PaymentDetailsResponseAction
 * @version 49
 */
class PaymentDetailsResponseAction {
    /**
     * Constructs a new <code>PaymentDetailsResponseAction</code>.
     * Action to be taken for completing the payment. When returned, only the 3D Secure action is needed in most cases.
     * @alias module:model/PaymentDetailsResponseAction
     * @param {(module:model/CheckoutRedirectAction)} instance The actual instance to initialize PaymentDetailsResponseAction.
     */
    constructor(instance = null) {
        if (instance === null) {
            this.actualInstance = null;
            return;
        }
        var match = 0;
        var errorMessages = [];
        try {
            if (typeof instance === "CheckoutRedirectAction") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                CheckoutRedirectAction.validateJSON(instance); // throw an exception if no match
                // create CheckoutRedirectAction from JS object
                this.actualInstance = CheckoutRedirectAction.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into CheckoutRedirectAction
            errorMessages.push("Failed to construct CheckoutRedirectAction: " + err)
        }

        if (match > 1) {
            throw new Error("Multiple matches found constructing `PaymentDetailsResponseAction` with oneOf schemas CheckoutRedirectAction. Input: " + JSON.stringify(instance));
        } else if (match === 0) {
            this.actualInstance = null; // clear the actual instance in case there are multiple matches
            throw new Error("No match found constructing `PaymentDetailsResponseAction` with oneOf schemas CheckoutRedirectAction. Details: " +
                            errorMessages.join(", "));
        } else { // only 1 match
            // the input is valid
        }
    }

    /**
     * Constructs a <code>PaymentDetailsResponseAction</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PaymentDetailsResponseAction} obj Optional instance to populate.
     * @return {module:model/PaymentDetailsResponseAction} The populated <code>PaymentDetailsResponseAction</code> instance.
     */
    static constructFromObject(data, obj) {
        return new PaymentDetailsResponseAction(data);
    }

    /**
     * Gets the actual instance, which can be <code>CheckoutRedirectAction</code>.
     * @return {(module:model/CheckoutRedirectAction)} The actual instance.
     */
    getActualInstance() {
        return this.actualInstance;
    }

    /**
     * Sets the actual instance, which can be <code>CheckoutRedirectAction</code>.
     * @param {(module:model/CheckoutRedirectAction)} obj The actual instance.
     */
    setActualInstance(obj) {
       this.actualInstance = PaymentDetailsResponseAction.constructFromObject(obj).getActualInstance();
    }

    /**
     * Returns the JSON representation of the actual instance.
     * @return {string}
     */
    toJSON = function(){
        return this.getActualInstance();
    }

    /**
     * Create an instance of PaymentDetailsResponseAction from a JSON string.
     * @param {string} json_string JSON string.
     * @return {module:model/PaymentDetailsResponseAction} An instance of PaymentDetailsResponseAction.
     */
    static fromJSON = function(json_string){
        return PaymentDetailsResponseAction.constructFromObject(JSON.parse(json_string));
    }
}

/**
 * When the redirect URL must be accessed via POST, use this data to post to the redirect URL.
 * @member {Object.<String, String>} data
 */
PaymentDetailsResponseAction.prototype['data'] = undefined;

/**
 * Specifies the HTTP method, for example GET or POST.
 * @member {String} method
 */
PaymentDetailsResponseAction.prototype['method'] = undefined;

/**
 * A value that must be submitted to the `/payments/details` endpoint to verify this payment.
 * @member {String} paymentData
 */
PaymentDetailsResponseAction.prototype['paymentData'] = undefined;

/**
 * Specifies the payment method.
 * @member {String} paymentMethodType
 */
PaymentDetailsResponseAction.prototype['paymentMethodType'] = undefined;

/**
 * **redirect**
 * @member {module:model/PaymentDetailsResponseAction.TypeEnum} type
 */
PaymentDetailsResponseAction.prototype['type'] = undefined;

/**
 * Specifies the URL to redirect to.
 * @member {String} url
 */
PaymentDetailsResponseAction.prototype['url'] = undefined;


PaymentDetailsResponseAction.OneOf = ["CheckoutRedirectAction"];

export default PaymentDetailsResponseAction;

