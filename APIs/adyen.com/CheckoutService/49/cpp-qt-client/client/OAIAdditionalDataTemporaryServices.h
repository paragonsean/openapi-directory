/**
 * Adyen Checkout API
 * Adyen Checkout API provides a simple and flexible way to initiate and authorise online payments. You can use the same integration for payments made with cards (including 3D Secure), mobile wallets, and local payment methods (for example, iDEAL and Sofort).  This API reference provides information on available endpoints and how to interact with them. To learn more about the API, visit [online payments documentation](https://docs.adyen.com/online-payments).  ## Authentication Each request to Checkout API must be signed with an API key. For this, [get your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) from your Customer Area, and set this key to the `X-API-Key` header value, for example:  ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ``` ## Versioning Checkout API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://checkout-test.adyen.com/v49/payments ```  ## Going live  To access the live endpoints, you need an API key from your live Customer Area.  The live endpoint URLs contain a prefix which is unique to your company account, for example: ``` https://{PREFIX}-checkout-live.adyenpayments.com/checkout/v49/payments ```  Get your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.  When preparing to do live transactions with Checkout API, follow the [go-live checklist](https://docs.adyen.com/online-payments/go-live-checklist) to make sure you've got all the required configuration in place.  ## Release notes Have a look at the [release notes](https://docs.adyen.com/online-payments/release-notes?integration_type=api&version=49) to find out what changed in this version!
 *
 * The version of the OpenAPI document: 49
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAdditionalDataTemporaryServices.h
 *
 * 
 */

#ifndef OAIAdditionalDataTemporaryServices_H
#define OAIAdditionalDataTemporaryServices_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAdditionalDataTemporaryServices : public OAIObject {
public:
    OAIAdditionalDataTemporaryServices();
    OAIAdditionalDataTemporaryServices(QString json);
    ~OAIAdditionalDataTemporaryServices() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getEnhancedSchemeDataCustomerReference() const;
    void setEnhancedSchemeDataCustomerReference(const QString &enhanced_scheme_data_customer_reference);
    bool is_enhanced_scheme_data_customer_reference_Set() const;
    bool is_enhanced_scheme_data_customer_reference_Valid() const;

    QString getEnhancedSchemeDataEmployeeName() const;
    void setEnhancedSchemeDataEmployeeName(const QString &enhanced_scheme_data_employee_name);
    bool is_enhanced_scheme_data_employee_name_Set() const;
    bool is_enhanced_scheme_data_employee_name_Valid() const;

    QString getEnhancedSchemeDataJobDescription() const;
    void setEnhancedSchemeDataJobDescription(const QString &enhanced_scheme_data_job_description);
    bool is_enhanced_scheme_data_job_description_Set() const;
    bool is_enhanced_scheme_data_job_description_Valid() const;

    QString getEnhancedSchemeDataRegularHoursRate() const;
    void setEnhancedSchemeDataRegularHoursRate(const QString &enhanced_scheme_data_regular_hours_rate);
    bool is_enhanced_scheme_data_regular_hours_rate_Set() const;
    bool is_enhanced_scheme_data_regular_hours_rate_Valid() const;

    QString getEnhancedSchemeDataRegularHoursWorked() const;
    void setEnhancedSchemeDataRegularHoursWorked(const QString &enhanced_scheme_data_regular_hours_worked);
    bool is_enhanced_scheme_data_regular_hours_worked_Set() const;
    bool is_enhanced_scheme_data_regular_hours_worked_Valid() const;

    QString getEnhancedSchemeDataRequestName() const;
    void setEnhancedSchemeDataRequestName(const QString &enhanced_scheme_data_request_name);
    bool is_enhanced_scheme_data_request_name_Set() const;
    bool is_enhanced_scheme_data_request_name_Valid() const;

    QString getEnhancedSchemeDataTempStartDate() const;
    void setEnhancedSchemeDataTempStartDate(const QString &enhanced_scheme_data_temp_start_date);
    bool is_enhanced_scheme_data_temp_start_date_Set() const;
    bool is_enhanced_scheme_data_temp_start_date_Valid() const;

    QString getEnhancedSchemeDataTempWeekEnding() const;
    void setEnhancedSchemeDataTempWeekEnding(const QString &enhanced_scheme_data_temp_week_ending);
    bool is_enhanced_scheme_data_temp_week_ending_Set() const;
    bool is_enhanced_scheme_data_temp_week_ending_Valid() const;

    QString getEnhancedSchemeDataTotalTaxAmount() const;
    void setEnhancedSchemeDataTotalTaxAmount(const QString &enhanced_scheme_data_total_tax_amount);
    bool is_enhanced_scheme_data_total_tax_amount_Set() const;
    bool is_enhanced_scheme_data_total_tax_amount_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_enhanced_scheme_data_customer_reference;
    bool m_enhanced_scheme_data_customer_reference_isSet;
    bool m_enhanced_scheme_data_customer_reference_isValid;

    QString m_enhanced_scheme_data_employee_name;
    bool m_enhanced_scheme_data_employee_name_isSet;
    bool m_enhanced_scheme_data_employee_name_isValid;

    QString m_enhanced_scheme_data_job_description;
    bool m_enhanced_scheme_data_job_description_isSet;
    bool m_enhanced_scheme_data_job_description_isValid;

    QString m_enhanced_scheme_data_regular_hours_rate;
    bool m_enhanced_scheme_data_regular_hours_rate_isSet;
    bool m_enhanced_scheme_data_regular_hours_rate_isValid;

    QString m_enhanced_scheme_data_regular_hours_worked;
    bool m_enhanced_scheme_data_regular_hours_worked_isSet;
    bool m_enhanced_scheme_data_regular_hours_worked_isValid;

    QString m_enhanced_scheme_data_request_name;
    bool m_enhanced_scheme_data_request_name_isSet;
    bool m_enhanced_scheme_data_request_name_isValid;

    QString m_enhanced_scheme_data_temp_start_date;
    bool m_enhanced_scheme_data_temp_start_date_isSet;
    bool m_enhanced_scheme_data_temp_start_date_isValid;

    QString m_enhanced_scheme_data_temp_week_ending;
    bool m_enhanced_scheme_data_temp_week_ending_isSet;
    bool m_enhanced_scheme_data_temp_week_ending_isValid;

    QString m_enhanced_scheme_data_total_tax_amount;
    bool m_enhanced_scheme_data_total_tax_amount_isSet;
    bool m_enhanced_scheme_data_total_tax_amount_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAdditionalDataTemporaryServices)

#endif // OAIAdditionalDataTemporaryServices_H
