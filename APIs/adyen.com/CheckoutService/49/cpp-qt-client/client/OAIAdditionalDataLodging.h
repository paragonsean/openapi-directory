/**
 * Adyen Checkout API
 * Adyen Checkout API provides a simple and flexible way to initiate and authorise online payments. You can use the same integration for payments made with cards (including 3D Secure), mobile wallets, and local payment methods (for example, iDEAL and Sofort).  This API reference provides information on available endpoints and how to interact with them. To learn more about the API, visit [online payments documentation](https://docs.adyen.com/online-payments).  ## Authentication Each request to Checkout API must be signed with an API key. For this, [get your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) from your Customer Area, and set this key to the `X-API-Key` header value, for example:  ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ``` ## Versioning Checkout API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://checkout-test.adyen.com/v49/payments ```  ## Going live  To access the live endpoints, you need an API key from your live Customer Area.  The live endpoint URLs contain a prefix which is unique to your company account, for example: ``` https://{PREFIX}-checkout-live.adyenpayments.com/checkout/v49/payments ```  Get your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.  When preparing to do live transactions with Checkout API, follow the [go-live checklist](https://docs.adyen.com/online-payments/go-live-checklist) to make sure you've got all the required configuration in place.  ## Release notes Have a look at the [release notes](https://docs.adyen.com/online-payments/release-notes?integration_type=api&version=49) to find out what changed in this version!
 *
 * The version of the OpenAPI document: 49
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAdditionalDataLodging.h
 *
 * 
 */

#ifndef OAIAdditionalDataLodging_H
#define OAIAdditionalDataLodging_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAdditionalDataLodging : public OAIObject {
public:
    OAIAdditionalDataLodging();
    OAIAdditionalDataLodging(QString json);
    ~OAIAdditionalDataLodging() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getLodgingCheckInDate() const;
    void setLodgingCheckInDate(const QString &lodging_check_in_date);
    bool is_lodging_check_in_date_Set() const;
    bool is_lodging_check_in_date_Valid() const;

    QString getLodgingCheckOutDate() const;
    void setLodgingCheckOutDate(const QString &lodging_check_out_date);
    bool is_lodging_check_out_date_Set() const;
    bool is_lodging_check_out_date_Valid() const;

    QString getLodgingCustomerServiceTollFreeNumber() const;
    void setLodgingCustomerServiceTollFreeNumber(const QString &lodging_customer_service_toll_free_number);
    bool is_lodging_customer_service_toll_free_number_Set() const;
    bool is_lodging_customer_service_toll_free_number_Valid() const;

    QString getLodgingFireSafetyActIndicator() const;
    void setLodgingFireSafetyActIndicator(const QString &lodging_fire_safety_act_indicator);
    bool is_lodging_fire_safety_act_indicator_Set() const;
    bool is_lodging_fire_safety_act_indicator_Valid() const;

    QString getLodgingFolioCashAdvances() const;
    void setLodgingFolioCashAdvances(const QString &lodging_folio_cash_advances);
    bool is_lodging_folio_cash_advances_Set() const;
    bool is_lodging_folio_cash_advances_Valid() const;

    QString getLodgingFolioNumber() const;
    void setLodgingFolioNumber(const QString &lodging_folio_number);
    bool is_lodging_folio_number_Set() const;
    bool is_lodging_folio_number_Valid() const;

    QString getLodgingFoodBeverageCharges() const;
    void setLodgingFoodBeverageCharges(const QString &lodging_food_beverage_charges);
    bool is_lodging_food_beverage_charges_Set() const;
    bool is_lodging_food_beverage_charges_Valid() const;

    QString getLodgingNoShowIndicator() const;
    void setLodgingNoShowIndicator(const QString &lodging_no_show_indicator);
    bool is_lodging_no_show_indicator_Set() const;
    bool is_lodging_no_show_indicator_Valid() const;

    QString getLodgingPrepaidExpenses() const;
    void setLodgingPrepaidExpenses(const QString &lodging_prepaid_expenses);
    bool is_lodging_prepaid_expenses_Set() const;
    bool is_lodging_prepaid_expenses_Valid() const;

    QString getLodgingPropertyPhoneNumber() const;
    void setLodgingPropertyPhoneNumber(const QString &lodging_property_phone_number);
    bool is_lodging_property_phone_number_Set() const;
    bool is_lodging_property_phone_number_Valid() const;

    QString getLodgingRoom1NumberOfNights() const;
    void setLodgingRoom1NumberOfNights(const QString &lodging_room1_number_of_nights);
    bool is_lodging_room1_number_of_nights_Set() const;
    bool is_lodging_room1_number_of_nights_Valid() const;

    QString getLodgingRoom1Rate() const;
    void setLodgingRoom1Rate(const QString &lodging_room1_rate);
    bool is_lodging_room1_rate_Set() const;
    bool is_lodging_room1_rate_Valid() const;

    QString getLodgingTotalRoomTax() const;
    void setLodgingTotalRoomTax(const QString &lodging_total_room_tax);
    bool is_lodging_total_room_tax_Set() const;
    bool is_lodging_total_room_tax_Valid() const;

    QString getLodgingTotalTax() const;
    void setLodgingTotalTax(const QString &lodging_total_tax);
    bool is_lodging_total_tax_Set() const;
    bool is_lodging_total_tax_Valid() const;

    QString getTravelEntertainmentAuthDataDuration() const;
    void setTravelEntertainmentAuthDataDuration(const QString &travel_entertainment_auth_data_duration);
    bool is_travel_entertainment_auth_data_duration_Set() const;
    bool is_travel_entertainment_auth_data_duration_Valid() const;

    QString getTravelEntertainmentAuthDataMarket() const;
    void setTravelEntertainmentAuthDataMarket(const QString &travel_entertainment_auth_data_market);
    bool is_travel_entertainment_auth_data_market_Set() const;
    bool is_travel_entertainment_auth_data_market_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_lodging_check_in_date;
    bool m_lodging_check_in_date_isSet;
    bool m_lodging_check_in_date_isValid;

    QString m_lodging_check_out_date;
    bool m_lodging_check_out_date_isSet;
    bool m_lodging_check_out_date_isValid;

    QString m_lodging_customer_service_toll_free_number;
    bool m_lodging_customer_service_toll_free_number_isSet;
    bool m_lodging_customer_service_toll_free_number_isValid;

    QString m_lodging_fire_safety_act_indicator;
    bool m_lodging_fire_safety_act_indicator_isSet;
    bool m_lodging_fire_safety_act_indicator_isValid;

    QString m_lodging_folio_cash_advances;
    bool m_lodging_folio_cash_advances_isSet;
    bool m_lodging_folio_cash_advances_isValid;

    QString m_lodging_folio_number;
    bool m_lodging_folio_number_isSet;
    bool m_lodging_folio_number_isValid;

    QString m_lodging_food_beverage_charges;
    bool m_lodging_food_beverage_charges_isSet;
    bool m_lodging_food_beverage_charges_isValid;

    QString m_lodging_no_show_indicator;
    bool m_lodging_no_show_indicator_isSet;
    bool m_lodging_no_show_indicator_isValid;

    QString m_lodging_prepaid_expenses;
    bool m_lodging_prepaid_expenses_isSet;
    bool m_lodging_prepaid_expenses_isValid;

    QString m_lodging_property_phone_number;
    bool m_lodging_property_phone_number_isSet;
    bool m_lodging_property_phone_number_isValid;

    QString m_lodging_room1_number_of_nights;
    bool m_lodging_room1_number_of_nights_isSet;
    bool m_lodging_room1_number_of_nights_isValid;

    QString m_lodging_room1_rate;
    bool m_lodging_room1_rate_isSet;
    bool m_lodging_room1_rate_isValid;

    QString m_lodging_total_room_tax;
    bool m_lodging_total_room_tax_isSet;
    bool m_lodging_total_room_tax_isValid;

    QString m_lodging_total_tax;
    bool m_lodging_total_tax_isSet;
    bool m_lodging_total_tax_isValid;

    QString m_travel_entertainment_auth_data_duration;
    bool m_travel_entertainment_auth_data_duration_isSet;
    bool m_travel_entertainment_auth_data_duration_isValid;

    QString m_travel_entertainment_auth_data_market;
    bool m_travel_entertainment_auth_data_market_isSet;
    bool m_travel_entertainment_auth_data_market_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAdditionalDataLodging)

#endif // OAIAdditionalDataLodging_H
