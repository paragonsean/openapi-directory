/**
 * Adyen Checkout API
 * Adyen Checkout API provides a simple and flexible way to initiate and authorise online payments. You can use the same integration for payments made with cards (including 3D Secure), mobile wallets, and local payment methods (for example, iDEAL and Sofort).  This API reference provides information on available endpoints and how to interact with them. To learn more about the API, visit [online payments documentation](https://docs.adyen.com/online-payments).  ## Authentication Each request to Checkout API must be signed with an API key. For this, [get your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) from your Customer Area, and set this key to the `X-API-Key` header value, for example:  ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ``` ## Versioning Checkout API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://checkout-test.adyen.com/v49/payments ```  ## Going live  To access the live endpoints, you need an API key from your live Customer Area.  The live endpoint URLs contain a prefix which is unique to your company account, for example: ``` https://{PREFIX}-checkout-live.adyenpayments.com/checkout/v49/payments ```  Get your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.  When preparing to do live transactions with Checkout API, follow the [go-live checklist](https://docs.adyen.com/online-payments/go-live-checklist) to make sure you've got all the required configuration in place.  ## Release notes Have a look at the [release notes](https://docs.adyen.com/online-payments/release-notes?integration_type=api&version=49) to find out what changed in this version!
 *
 * The version of the OpenAPI document: 49
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAdditionalDataAirline.h
 *
 * 
 */

#ifndef OAIAdditionalDataAirline_H
#define OAIAdditionalDataAirline_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAdditionalDataAirline : public OAIObject {
public:
    OAIAdditionalDataAirline();
    OAIAdditionalDataAirline(QString json);
    ~OAIAdditionalDataAirline() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAirlineAgencyInvoiceNumber() const;
    void setAirlineAgencyInvoiceNumber(const QString &airline_agency_invoice_number);
    bool is_airline_agency_invoice_number_Set() const;
    bool is_airline_agency_invoice_number_Valid() const;

    QString getAirlineAgencyPlanName() const;
    void setAirlineAgencyPlanName(const QString &airline_agency_plan_name);
    bool is_airline_agency_plan_name_Set() const;
    bool is_airline_agency_plan_name_Valid() const;

    QString getAirlineAirlineCode() const;
    void setAirlineAirlineCode(const QString &airline_airline_code);
    bool is_airline_airline_code_Set() const;
    bool is_airline_airline_code_Valid() const;

    QString getAirlineAirlineDesignatorCode() const;
    void setAirlineAirlineDesignatorCode(const QString &airline_airline_designator_code);
    bool is_airline_airline_designator_code_Set() const;
    bool is_airline_airline_designator_code_Valid() const;

    QString getAirlineBoardingFee() const;
    void setAirlineBoardingFee(const QString &airline_boarding_fee);
    bool is_airline_boarding_fee_Set() const;
    bool is_airline_boarding_fee_Valid() const;

    QString getAirlineComputerizedReservationSystem() const;
    void setAirlineComputerizedReservationSystem(const QString &airline_computerized_reservation_system);
    bool is_airline_computerized_reservation_system_Set() const;
    bool is_airline_computerized_reservation_system_Valid() const;

    QString getAirlineCustomerReferenceNumber() const;
    void setAirlineCustomerReferenceNumber(const QString &airline_customer_reference_number);
    bool is_airline_customer_reference_number_Set() const;
    bool is_airline_customer_reference_number_Valid() const;

    QString getAirlineDocumentType() const;
    void setAirlineDocumentType(const QString &airline_document_type);
    bool is_airline_document_type_Set() const;
    bool is_airline_document_type_Valid() const;

    QString getAirlineFlightDate() const;
    void setAirlineFlightDate(const QString &airline_flight_date);
    bool is_airline_flight_date_Set() const;
    bool is_airline_flight_date_Valid() const;

    QString getAirlineLegCarrierCode() const;
    void setAirlineLegCarrierCode(const QString &airline_leg_carrier_code);
    bool is_airline_leg_carrier_code_Set() const;
    bool is_airline_leg_carrier_code_Valid() const;

    QString getAirlineLegClassOfTravel() const;
    void setAirlineLegClassOfTravel(const QString &airline_leg_class_of_travel);
    bool is_airline_leg_class_of_travel_Set() const;
    bool is_airline_leg_class_of_travel_Valid() const;

    QString getAirlineLegDateOfTravel() const;
    void setAirlineLegDateOfTravel(const QString &airline_leg_date_of_travel);
    bool is_airline_leg_date_of_travel_Set() const;
    bool is_airline_leg_date_of_travel_Valid() const;

    QString getAirlineLegDepartAirport() const;
    void setAirlineLegDepartAirport(const QString &airline_leg_depart_airport);
    bool is_airline_leg_depart_airport_Set() const;
    bool is_airline_leg_depart_airport_Valid() const;

    QString getAirlineLegDepartTax() const;
    void setAirlineLegDepartTax(const QString &airline_leg_depart_tax);
    bool is_airline_leg_depart_tax_Set() const;
    bool is_airline_leg_depart_tax_Valid() const;

    QString getAirlineLegDestinationCode() const;
    void setAirlineLegDestinationCode(const QString &airline_leg_destination_code);
    bool is_airline_leg_destination_code_Set() const;
    bool is_airline_leg_destination_code_Valid() const;

    QString getAirlineLegFareBaseCode() const;
    void setAirlineLegFareBaseCode(const QString &airline_leg_fare_base_code);
    bool is_airline_leg_fare_base_code_Set() const;
    bool is_airline_leg_fare_base_code_Valid() const;

    QString getAirlineLegFlightNumber() const;
    void setAirlineLegFlightNumber(const QString &airline_leg_flight_number);
    bool is_airline_leg_flight_number_Set() const;
    bool is_airline_leg_flight_number_Valid() const;

    QString getAirlineLegStopOverCode() const;
    void setAirlineLegStopOverCode(const QString &airline_leg_stop_over_code);
    bool is_airline_leg_stop_over_code_Set() const;
    bool is_airline_leg_stop_over_code_Valid() const;

    QString getAirlinePassengerDateOfBirth() const;
    void setAirlinePassengerDateOfBirth(const QString &airline_passenger_date_of_birth);
    bool is_airline_passenger_date_of_birth_Set() const;
    bool is_airline_passenger_date_of_birth_Valid() const;

    QString getAirlinePassengerFirstName() const;
    void setAirlinePassengerFirstName(const QString &airline_passenger_first_name);
    bool is_airline_passenger_first_name_Set() const;
    bool is_airline_passenger_first_name_Valid() const;

    QString getAirlinePassengerLastName() const;
    void setAirlinePassengerLastName(const QString &airline_passenger_last_name);
    bool is_airline_passenger_last_name_Set() const;
    bool is_airline_passenger_last_name_Valid() const;

    QString getAirlinePassengerTelephoneNumber() const;
    void setAirlinePassengerTelephoneNumber(const QString &airline_passenger_telephone_number);
    bool is_airline_passenger_telephone_number_Set() const;
    bool is_airline_passenger_telephone_number_Valid() const;

    QString getAirlinePassengerTravellerType() const;
    void setAirlinePassengerTravellerType(const QString &airline_passenger_traveller_type);
    bool is_airline_passenger_traveller_type_Set() const;
    bool is_airline_passenger_traveller_type_Valid() const;

    QString getAirlinePassengerName() const;
    void setAirlinePassengerName(const QString &airline_passenger_name);
    bool is_airline_passenger_name_Set() const;
    bool is_airline_passenger_name_Valid() const;

    QString getAirlineTicketIssueAddress() const;
    void setAirlineTicketIssueAddress(const QString &airline_ticket_issue_address);
    bool is_airline_ticket_issue_address_Set() const;
    bool is_airline_ticket_issue_address_Valid() const;

    QString getAirlineTicketNumber() const;
    void setAirlineTicketNumber(const QString &airline_ticket_number);
    bool is_airline_ticket_number_Set() const;
    bool is_airline_ticket_number_Valid() const;

    QString getAirlineTravelAgencyCode() const;
    void setAirlineTravelAgencyCode(const QString &airline_travel_agency_code);
    bool is_airline_travel_agency_code_Set() const;
    bool is_airline_travel_agency_code_Valid() const;

    QString getAirlineTravelAgencyName() const;
    void setAirlineTravelAgencyName(const QString &airline_travel_agency_name);
    bool is_airline_travel_agency_name_Set() const;
    bool is_airline_travel_agency_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_airline_agency_invoice_number;
    bool m_airline_agency_invoice_number_isSet;
    bool m_airline_agency_invoice_number_isValid;

    QString m_airline_agency_plan_name;
    bool m_airline_agency_plan_name_isSet;
    bool m_airline_agency_plan_name_isValid;

    QString m_airline_airline_code;
    bool m_airline_airline_code_isSet;
    bool m_airline_airline_code_isValid;

    QString m_airline_airline_designator_code;
    bool m_airline_airline_designator_code_isSet;
    bool m_airline_airline_designator_code_isValid;

    QString m_airline_boarding_fee;
    bool m_airline_boarding_fee_isSet;
    bool m_airline_boarding_fee_isValid;

    QString m_airline_computerized_reservation_system;
    bool m_airline_computerized_reservation_system_isSet;
    bool m_airline_computerized_reservation_system_isValid;

    QString m_airline_customer_reference_number;
    bool m_airline_customer_reference_number_isSet;
    bool m_airline_customer_reference_number_isValid;

    QString m_airline_document_type;
    bool m_airline_document_type_isSet;
    bool m_airline_document_type_isValid;

    QString m_airline_flight_date;
    bool m_airline_flight_date_isSet;
    bool m_airline_flight_date_isValid;

    QString m_airline_leg_carrier_code;
    bool m_airline_leg_carrier_code_isSet;
    bool m_airline_leg_carrier_code_isValid;

    QString m_airline_leg_class_of_travel;
    bool m_airline_leg_class_of_travel_isSet;
    bool m_airline_leg_class_of_travel_isValid;

    QString m_airline_leg_date_of_travel;
    bool m_airline_leg_date_of_travel_isSet;
    bool m_airline_leg_date_of_travel_isValid;

    QString m_airline_leg_depart_airport;
    bool m_airline_leg_depart_airport_isSet;
    bool m_airline_leg_depart_airport_isValid;

    QString m_airline_leg_depart_tax;
    bool m_airline_leg_depart_tax_isSet;
    bool m_airline_leg_depart_tax_isValid;

    QString m_airline_leg_destination_code;
    bool m_airline_leg_destination_code_isSet;
    bool m_airline_leg_destination_code_isValid;

    QString m_airline_leg_fare_base_code;
    bool m_airline_leg_fare_base_code_isSet;
    bool m_airline_leg_fare_base_code_isValid;

    QString m_airline_leg_flight_number;
    bool m_airline_leg_flight_number_isSet;
    bool m_airline_leg_flight_number_isValid;

    QString m_airline_leg_stop_over_code;
    bool m_airline_leg_stop_over_code_isSet;
    bool m_airline_leg_stop_over_code_isValid;

    QString m_airline_passenger_date_of_birth;
    bool m_airline_passenger_date_of_birth_isSet;
    bool m_airline_passenger_date_of_birth_isValid;

    QString m_airline_passenger_first_name;
    bool m_airline_passenger_first_name_isSet;
    bool m_airline_passenger_first_name_isValid;

    QString m_airline_passenger_last_name;
    bool m_airline_passenger_last_name_isSet;
    bool m_airline_passenger_last_name_isValid;

    QString m_airline_passenger_telephone_number;
    bool m_airline_passenger_telephone_number_isSet;
    bool m_airline_passenger_telephone_number_isValid;

    QString m_airline_passenger_traveller_type;
    bool m_airline_passenger_traveller_type_isSet;
    bool m_airline_passenger_traveller_type_isValid;

    QString m_airline_passenger_name;
    bool m_airline_passenger_name_isSet;
    bool m_airline_passenger_name_isValid;

    QString m_airline_ticket_issue_address;
    bool m_airline_ticket_issue_address_isSet;
    bool m_airline_ticket_issue_address_isValid;

    QString m_airline_ticket_number;
    bool m_airline_ticket_number_isSet;
    bool m_airline_ticket_number_isValid;

    QString m_airline_travel_agency_code;
    bool m_airline_travel_agency_code_isSet;
    bool m_airline_travel_agency_code_isValid;

    QString m_airline_travel_agency_name;
    bool m_airline_travel_agency_name_isSet;
    bool m_airline_travel_agency_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAdditionalDataAirline)

#endif // OAIAdditionalDataAirline_H
