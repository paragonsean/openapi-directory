# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AdditionalDataRetry(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, retry_chain_attempt_number: str=None, retry_order_attempt_number: str=None, retry_skip_retry: str=None):
        """AdditionalDataRetry - a model defined in OpenAPI

        :param retry_chain_attempt_number: The retry_chain_attempt_number of this AdditionalDataRetry.
        :param retry_order_attempt_number: The retry_order_attempt_number of this AdditionalDataRetry.
        :param retry_skip_retry: The retry_skip_retry of this AdditionalDataRetry.
        """
        self.openapi_types = {
            'retry_chain_attempt_number': str,
            'retry_order_attempt_number': str,
            'retry_skip_retry': str
        }

        self.attribute_map = {
            'retry_chain_attempt_number': 'retry.chainAttemptNumber',
            'retry_order_attempt_number': 'retry.orderAttemptNumber',
            'retry_skip_retry': 'retry.skipRetry'
        }

        self._retry_chain_attempt_number = retry_chain_attempt_number
        self._retry_order_attempt_number = retry_order_attempt_number
        self._retry_skip_retry = retry_skip_retry

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AdditionalDataRetry':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AdditionalDataRetry of this AdditionalDataRetry.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def retry_chain_attempt_number(self):
        """Gets the retry_chain_attempt_number of this AdditionalDataRetry.

        The number of times the transaction (not order) has been retried between different payment service providers. For instance, the `chainAttemptNumber` set to 2 means that this transaction has been recently tried on another provider before being sent to Adyen.  > If you submit `retry.chainAttemptNumber`, `retry.orderAttemptNumber`, and `retry.skipRetry` values, we also recommend you provide the `merchantOrderReference` to facilitate linking payment attempts together.

        :return: The retry_chain_attempt_number of this AdditionalDataRetry.
        :rtype: str
        """
        return self._retry_chain_attempt_number

    @retry_chain_attempt_number.setter
    def retry_chain_attempt_number(self, retry_chain_attempt_number):
        """Sets the retry_chain_attempt_number of this AdditionalDataRetry.

        The number of times the transaction (not order) has been retried between different payment service providers. For instance, the `chainAttemptNumber` set to 2 means that this transaction has been recently tried on another provider before being sent to Adyen.  > If you submit `retry.chainAttemptNumber`, `retry.orderAttemptNumber`, and `retry.skipRetry` values, we also recommend you provide the `merchantOrderReference` to facilitate linking payment attempts together.

        :param retry_chain_attempt_number: The retry_chain_attempt_number of this AdditionalDataRetry.
        :type retry_chain_attempt_number: str
        """

        self._retry_chain_attempt_number = retry_chain_attempt_number

    @property
    def retry_order_attempt_number(self):
        """Gets the retry_order_attempt_number of this AdditionalDataRetry.

        The index of the attempt to bill a particular order, which is identified by the `merchantOrderReference` field. For example, if a recurring transaction fails and is retried one day later, then the order number for these attempts would be 1 and 2, respectively.  > If you submit `retry.chainAttemptNumber`, `retry.orderAttemptNumber`, and `retry.skipRetry` values, we also recommend you provide the `merchantOrderReference` to facilitate linking payment attempts together.

        :return: The retry_order_attempt_number of this AdditionalDataRetry.
        :rtype: str
        """
        return self._retry_order_attempt_number

    @retry_order_attempt_number.setter
    def retry_order_attempt_number(self, retry_order_attempt_number):
        """Sets the retry_order_attempt_number of this AdditionalDataRetry.

        The index of the attempt to bill a particular order, which is identified by the `merchantOrderReference` field. For example, if a recurring transaction fails and is retried one day later, then the order number for these attempts would be 1 and 2, respectively.  > If you submit `retry.chainAttemptNumber`, `retry.orderAttemptNumber`, and `retry.skipRetry` values, we also recommend you provide the `merchantOrderReference` to facilitate linking payment attempts together.

        :param retry_order_attempt_number: The retry_order_attempt_number of this AdditionalDataRetry.
        :type retry_order_attempt_number: str
        """

        self._retry_order_attempt_number = retry_order_attempt_number

    @property
    def retry_skip_retry(self):
        """Gets the retry_skip_retry of this AdditionalDataRetry.

        The Boolean value indicating whether Adyen should skip or retry this transaction, if possible.  > If you submit `retry.chainAttemptNumber`, `retry.orderAttemptNumber`, and `retry.skipRetry` values, we also recommend you provide the `merchantOrderReference` to facilitate linking payment attempts together.

        :return: The retry_skip_retry of this AdditionalDataRetry.
        :rtype: str
        """
        return self._retry_skip_retry

    @retry_skip_retry.setter
    def retry_skip_retry(self, retry_skip_retry):
        """Sets the retry_skip_retry of this AdditionalDataRetry.

        The Boolean value indicating whether Adyen should skip or retry this transaction, if possible.  > If you submit `retry.chainAttemptNumber`, `retry.orderAttemptNumber`, and `retry.skipRetry` values, we also recommend you provide the `merchantOrderReference` to facilitate linking payment attempts together.

        :param retry_skip_retry: The retry_skip_retry of this AdditionalDataRetry.
        :type retry_skip_retry: str
        """

        self._retry_skip_retry = retry_skip_retry
