# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ShopperInteractionDevice(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, locale: str=None, os: str=None, os_version: str=None):
        """ShopperInteractionDevice - a model defined in OpenAPI

        :param locale: The locale of this ShopperInteractionDevice.
        :param os: The os of this ShopperInteractionDevice.
        :param os_version: The os_version of this ShopperInteractionDevice.
        """
        self.openapi_types = {
            'locale': str,
            'os': str,
            'os_version': str
        }

        self.attribute_map = {
            'locale': 'locale',
            'os': 'os',
            'os_version': 'osVersion'
        }

        self._locale = locale
        self._os = os
        self._os_version = os_version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ShopperInteractionDevice':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ShopperInteractionDevice of this ShopperInteractionDevice.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def locale(self):
        """Gets the locale of this ShopperInteractionDevice.

        Locale on the shopper interaction device.

        :return: The locale of this ShopperInteractionDevice.
        :rtype: str
        """
        return self._locale

    @locale.setter
    def locale(self, locale):
        """Sets the locale of this ShopperInteractionDevice.

        Locale on the shopper interaction device.

        :param locale: The locale of this ShopperInteractionDevice.
        :type locale: str
        """

        self._locale = locale

    @property
    def os(self):
        """Gets the os of this ShopperInteractionDevice.

        Operating system running on the shopper interaction device.

        :return: The os of this ShopperInteractionDevice.
        :rtype: str
        """
        return self._os

    @os.setter
    def os(self, os):
        """Sets the os of this ShopperInteractionDevice.

        Operating system running on the shopper interaction device.

        :param os: The os of this ShopperInteractionDevice.
        :type os: str
        """

        self._os = os

    @property
    def os_version(self):
        """Gets the os_version of this ShopperInteractionDevice.

        Version of the operating system on the shopper interaction device.

        :return: The os_version of this ShopperInteractionDevice.
        :rtype: str
        """
        return self._os_version

    @os_version.setter
    def os_version(self, os_version):
        """Sets the os_version of this ShopperInteractionDevice.

        Version of the operating system on the shopper interaction device.

        :param os_version: The os_version of this ShopperInteractionDevice.
        :type os_version: str
        """

        self._os_version = os_version
