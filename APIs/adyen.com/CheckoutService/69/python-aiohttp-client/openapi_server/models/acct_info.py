# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AcctInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ch_acc_age_ind: str=None, ch_acc_change: str=None, ch_acc_change_ind: str=None, ch_acc_pw_change: str=None, ch_acc_pw_change_ind: str=None, ch_acc_string: str=None, nb_purchase_account: str=None, payment_acc_age: str=None, payment_acc_ind: str=None, provision_attempts_day: str=None, ship_address_usage: str=None, ship_address_usage_ind: str=None, ship_name_indicator: str=None, suspicious_acc_activity: str=None, txn_activity_day: str=None, txn_activity_year: str=None):
        """AcctInfo - a model defined in OpenAPI

        :param ch_acc_age_ind: The ch_acc_age_ind of this AcctInfo.
        :param ch_acc_change: The ch_acc_change of this AcctInfo.
        :param ch_acc_change_ind: The ch_acc_change_ind of this AcctInfo.
        :param ch_acc_pw_change: The ch_acc_pw_change of this AcctInfo.
        :param ch_acc_pw_change_ind: The ch_acc_pw_change_ind of this AcctInfo.
        :param ch_acc_string: The ch_acc_string of this AcctInfo.
        :param nb_purchase_account: The nb_purchase_account of this AcctInfo.
        :param payment_acc_age: The payment_acc_age of this AcctInfo.
        :param payment_acc_ind: The payment_acc_ind of this AcctInfo.
        :param provision_attempts_day: The provision_attempts_day of this AcctInfo.
        :param ship_address_usage: The ship_address_usage of this AcctInfo.
        :param ship_address_usage_ind: The ship_address_usage_ind of this AcctInfo.
        :param ship_name_indicator: The ship_name_indicator of this AcctInfo.
        :param suspicious_acc_activity: The suspicious_acc_activity of this AcctInfo.
        :param txn_activity_day: The txn_activity_day of this AcctInfo.
        :param txn_activity_year: The txn_activity_year of this AcctInfo.
        """
        self.openapi_types = {
            'ch_acc_age_ind': str,
            'ch_acc_change': str,
            'ch_acc_change_ind': str,
            'ch_acc_pw_change': str,
            'ch_acc_pw_change_ind': str,
            'ch_acc_string': str,
            'nb_purchase_account': str,
            'payment_acc_age': str,
            'payment_acc_ind': str,
            'provision_attempts_day': str,
            'ship_address_usage': str,
            'ship_address_usage_ind': str,
            'ship_name_indicator': str,
            'suspicious_acc_activity': str,
            'txn_activity_day': str,
            'txn_activity_year': str
        }

        self.attribute_map = {
            'ch_acc_age_ind': 'chAccAgeInd',
            'ch_acc_change': 'chAccChange',
            'ch_acc_change_ind': 'chAccChangeInd',
            'ch_acc_pw_change': 'chAccPwChange',
            'ch_acc_pw_change_ind': 'chAccPwChangeInd',
            'ch_acc_string': 'chAccString',
            'nb_purchase_account': 'nbPurchaseAccount',
            'payment_acc_age': 'paymentAccAge',
            'payment_acc_ind': 'paymentAccInd',
            'provision_attempts_day': 'provisionAttemptsDay',
            'ship_address_usage': 'shipAddressUsage',
            'ship_address_usage_ind': 'shipAddressUsageInd',
            'ship_name_indicator': 'shipNameIndicator',
            'suspicious_acc_activity': 'suspiciousAccActivity',
            'txn_activity_day': 'txnActivityDay',
            'txn_activity_year': 'txnActivityYear'
        }

        self._ch_acc_age_ind = ch_acc_age_ind
        self._ch_acc_change = ch_acc_change
        self._ch_acc_change_ind = ch_acc_change_ind
        self._ch_acc_pw_change = ch_acc_pw_change
        self._ch_acc_pw_change_ind = ch_acc_pw_change_ind
        self._ch_acc_string = ch_acc_string
        self._nb_purchase_account = nb_purchase_account
        self._payment_acc_age = payment_acc_age
        self._payment_acc_ind = payment_acc_ind
        self._provision_attempts_day = provision_attempts_day
        self._ship_address_usage = ship_address_usage
        self._ship_address_usage_ind = ship_address_usage_ind
        self._ship_name_indicator = ship_name_indicator
        self._suspicious_acc_activity = suspicious_acc_activity
        self._txn_activity_day = txn_activity_day
        self._txn_activity_year = txn_activity_year

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AcctInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AcctInfo of this AcctInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ch_acc_age_ind(self):
        """Gets the ch_acc_age_ind of this AcctInfo.

        Length of time that the cardholder has had the account with the 3DS Requestor.  Allowed values: * **01** — No account * **02** — Created during this transaction * **03** — Less than 30 days * **04** — 30–60 days * **05** — More than 60 days

        :return: The ch_acc_age_ind of this AcctInfo.
        :rtype: str
        """
        return self._ch_acc_age_ind

    @ch_acc_age_ind.setter
    def ch_acc_age_ind(self, ch_acc_age_ind):
        """Sets the ch_acc_age_ind of this AcctInfo.

        Length of time that the cardholder has had the account with the 3DS Requestor.  Allowed values: * **01** — No account * **02** — Created during this transaction * **03** — Less than 30 days * **04** — 30–60 days * **05** — More than 60 days

        :param ch_acc_age_ind: The ch_acc_age_ind of this AcctInfo.
        :type ch_acc_age_ind: str
        """
        allowed_values = ["01", "02", "03", "04", "05"]  # noqa: E501
        if ch_acc_age_ind not in allowed_values:
            raise ValueError(
                "Invalid value for `ch_acc_age_ind` ({0}), must be one of {1}"
                .format(ch_acc_age_ind, allowed_values)
            )

        self._ch_acc_age_ind = ch_acc_age_ind

    @property
    def ch_acc_change(self):
        """Gets the ch_acc_change of this AcctInfo.

        Date that the cardholder’s account with the 3DS Requestor was last changed, including Billing or Shipping address, new payment account, or new user(s) added.  Format: **YYYYMMDD**

        :return: The ch_acc_change of this AcctInfo.
        :rtype: str
        """
        return self._ch_acc_change

    @ch_acc_change.setter
    def ch_acc_change(self, ch_acc_change):
        """Sets the ch_acc_change of this AcctInfo.

        Date that the cardholder’s account with the 3DS Requestor was last changed, including Billing or Shipping address, new payment account, or new user(s) added.  Format: **YYYYMMDD**

        :param ch_acc_change: The ch_acc_change of this AcctInfo.
        :type ch_acc_change: str
        """

        self._ch_acc_change = ch_acc_change

    @property
    def ch_acc_change_ind(self):
        """Gets the ch_acc_change_ind of this AcctInfo.

        Length of time since the cardholder’s account information with the 3DS Requestor was last changed, including Billing or Shipping address, new payment account, or new user(s) added.  Allowed values: * **01** — Changed during this transaction * **02** — Less than 30 days * **03** — 30–60 days * **04** — More than 60 days

        :return: The ch_acc_change_ind of this AcctInfo.
        :rtype: str
        """
        return self._ch_acc_change_ind

    @ch_acc_change_ind.setter
    def ch_acc_change_ind(self, ch_acc_change_ind):
        """Sets the ch_acc_change_ind of this AcctInfo.

        Length of time since the cardholder’s account information with the 3DS Requestor was last changed, including Billing or Shipping address, new payment account, or new user(s) added.  Allowed values: * **01** — Changed during this transaction * **02** — Less than 30 days * **03** — 30–60 days * **04** — More than 60 days

        :param ch_acc_change_ind: The ch_acc_change_ind of this AcctInfo.
        :type ch_acc_change_ind: str
        """
        allowed_values = ["01", "02", "03", "04"]  # noqa: E501
        if ch_acc_change_ind not in allowed_values:
            raise ValueError(
                "Invalid value for `ch_acc_change_ind` ({0}), must be one of {1}"
                .format(ch_acc_change_ind, allowed_values)
            )

        self._ch_acc_change_ind = ch_acc_change_ind

    @property
    def ch_acc_pw_change(self):
        """Gets the ch_acc_pw_change of this AcctInfo.

        Date that cardholder’s account with the 3DS Requestor had a password change or account reset.  Format: **YYYYMMDD**

        :return: The ch_acc_pw_change of this AcctInfo.
        :rtype: str
        """
        return self._ch_acc_pw_change

    @ch_acc_pw_change.setter
    def ch_acc_pw_change(self, ch_acc_pw_change):
        """Sets the ch_acc_pw_change of this AcctInfo.

        Date that cardholder’s account with the 3DS Requestor had a password change or account reset.  Format: **YYYYMMDD**

        :param ch_acc_pw_change: The ch_acc_pw_change of this AcctInfo.
        :type ch_acc_pw_change: str
        """

        self._ch_acc_pw_change = ch_acc_pw_change

    @property
    def ch_acc_pw_change_ind(self):
        """Gets the ch_acc_pw_change_ind of this AcctInfo.

        Indicates the length of time since the cardholder’s account with the 3DS Requestor had a password change or account reset.  Allowed values: * **01** — No change * **02** — Changed during this transaction * **03** — Less than 30 days * **04** — 30–60 days * **05** — More than 60 days

        :return: The ch_acc_pw_change_ind of this AcctInfo.
        :rtype: str
        """
        return self._ch_acc_pw_change_ind

    @ch_acc_pw_change_ind.setter
    def ch_acc_pw_change_ind(self, ch_acc_pw_change_ind):
        """Sets the ch_acc_pw_change_ind of this AcctInfo.

        Indicates the length of time since the cardholder’s account with the 3DS Requestor had a password change or account reset.  Allowed values: * **01** — No change * **02** — Changed during this transaction * **03** — Less than 30 days * **04** — 30–60 days * **05** — More than 60 days

        :param ch_acc_pw_change_ind: The ch_acc_pw_change_ind of this AcctInfo.
        :type ch_acc_pw_change_ind: str
        """
        allowed_values = ["01", "02", "03", "04", "05"]  # noqa: E501
        if ch_acc_pw_change_ind not in allowed_values:
            raise ValueError(
                "Invalid value for `ch_acc_pw_change_ind` ({0}), must be one of {1}"
                .format(ch_acc_pw_change_ind, allowed_values)
            )

        self._ch_acc_pw_change_ind = ch_acc_pw_change_ind

    @property
    def ch_acc_string(self):
        """Gets the ch_acc_string of this AcctInfo.

        Date that the cardholder opened the account with the 3DS Requestor.  Format: **YYYYMMDD**

        :return: The ch_acc_string of this AcctInfo.
        :rtype: str
        """
        return self._ch_acc_string

    @ch_acc_string.setter
    def ch_acc_string(self, ch_acc_string):
        """Sets the ch_acc_string of this AcctInfo.

        Date that the cardholder opened the account with the 3DS Requestor.  Format: **YYYYMMDD**

        :param ch_acc_string: The ch_acc_string of this AcctInfo.
        :type ch_acc_string: str
        """

        self._ch_acc_string = ch_acc_string

    @property
    def nb_purchase_account(self):
        """Gets the nb_purchase_account of this AcctInfo.

        Number of purchases with this cardholder account during the previous six months. Max length: 4 characters.

        :return: The nb_purchase_account of this AcctInfo.
        :rtype: str
        """
        return self._nb_purchase_account

    @nb_purchase_account.setter
    def nb_purchase_account(self, nb_purchase_account):
        """Sets the nb_purchase_account of this AcctInfo.

        Number of purchases with this cardholder account during the previous six months. Max length: 4 characters.

        :param nb_purchase_account: The nb_purchase_account of this AcctInfo.
        :type nb_purchase_account: str
        """

        self._nb_purchase_account = nb_purchase_account

    @property
    def payment_acc_age(self):
        """Gets the payment_acc_age of this AcctInfo.

        String that the payment account was enrolled in the cardholder’s account with the 3DS Requestor.  Format: **YYYYMMDD**

        :return: The payment_acc_age of this AcctInfo.
        :rtype: str
        """
        return self._payment_acc_age

    @payment_acc_age.setter
    def payment_acc_age(self, payment_acc_age):
        """Sets the payment_acc_age of this AcctInfo.

        String that the payment account was enrolled in the cardholder’s account with the 3DS Requestor.  Format: **YYYYMMDD**

        :param payment_acc_age: The payment_acc_age of this AcctInfo.
        :type payment_acc_age: str
        """

        self._payment_acc_age = payment_acc_age

    @property
    def payment_acc_ind(self):
        """Gets the payment_acc_ind of this AcctInfo.

        Indicates the length of time that the payment account was enrolled in the cardholder’s account with the 3DS Requestor.  Allowed values: * **01** — No account (guest checkout) * **02** — During this transaction * **03** — Less than 30 days * **04** — 30–60 days * **05** — More than 60 days

        :return: The payment_acc_ind of this AcctInfo.
        :rtype: str
        """
        return self._payment_acc_ind

    @payment_acc_ind.setter
    def payment_acc_ind(self, payment_acc_ind):
        """Sets the payment_acc_ind of this AcctInfo.

        Indicates the length of time that the payment account was enrolled in the cardholder’s account with the 3DS Requestor.  Allowed values: * **01** — No account (guest checkout) * **02** — During this transaction * **03** — Less than 30 days * **04** — 30–60 days * **05** — More than 60 days

        :param payment_acc_ind: The payment_acc_ind of this AcctInfo.
        :type payment_acc_ind: str
        """
        allowed_values = ["01", "02", "03", "04", "05"]  # noqa: E501
        if payment_acc_ind not in allowed_values:
            raise ValueError(
                "Invalid value for `payment_acc_ind` ({0}), must be one of {1}"
                .format(payment_acc_ind, allowed_values)
            )

        self._payment_acc_ind = payment_acc_ind

    @property
    def provision_attempts_day(self):
        """Gets the provision_attempts_day of this AcctInfo.

        Number of Add Card attempts in the last 24 hours. Max length: 3 characters.

        :return: The provision_attempts_day of this AcctInfo.
        :rtype: str
        """
        return self._provision_attempts_day

    @provision_attempts_day.setter
    def provision_attempts_day(self, provision_attempts_day):
        """Sets the provision_attempts_day of this AcctInfo.

        Number of Add Card attempts in the last 24 hours. Max length: 3 characters.

        :param provision_attempts_day: The provision_attempts_day of this AcctInfo.
        :type provision_attempts_day: str
        """

        self._provision_attempts_day = provision_attempts_day

    @property
    def ship_address_usage(self):
        """Gets the ship_address_usage of this AcctInfo.

        String when the shipping address used for this transaction was first used with the 3DS Requestor.  Format: **YYYYMMDD**

        :return: The ship_address_usage of this AcctInfo.
        :rtype: str
        """
        return self._ship_address_usage

    @ship_address_usage.setter
    def ship_address_usage(self, ship_address_usage):
        """Sets the ship_address_usage of this AcctInfo.

        String when the shipping address used for this transaction was first used with the 3DS Requestor.  Format: **YYYYMMDD**

        :param ship_address_usage: The ship_address_usage of this AcctInfo.
        :type ship_address_usage: str
        """

        self._ship_address_usage = ship_address_usage

    @property
    def ship_address_usage_ind(self):
        """Gets the ship_address_usage_ind of this AcctInfo.

        Indicates when the shipping address used for this transaction was first used with the 3DS Requestor.  Allowed values: * **01** — This transaction * **02** — Less than 30 days * **03** — 30–60 days * **04** — More than 60 days

        :return: The ship_address_usage_ind of this AcctInfo.
        :rtype: str
        """
        return self._ship_address_usage_ind

    @ship_address_usage_ind.setter
    def ship_address_usage_ind(self, ship_address_usage_ind):
        """Sets the ship_address_usage_ind of this AcctInfo.

        Indicates when the shipping address used for this transaction was first used with the 3DS Requestor.  Allowed values: * **01** — This transaction * **02** — Less than 30 days * **03** — 30–60 days * **04** — More than 60 days

        :param ship_address_usage_ind: The ship_address_usage_ind of this AcctInfo.
        :type ship_address_usage_ind: str
        """
        allowed_values = ["01", "02", "03", "04"]  # noqa: E501
        if ship_address_usage_ind not in allowed_values:
            raise ValueError(
                "Invalid value for `ship_address_usage_ind` ({0}), must be one of {1}"
                .format(ship_address_usage_ind, allowed_values)
            )

        self._ship_address_usage_ind = ship_address_usage_ind

    @property
    def ship_name_indicator(self):
        """Gets the ship_name_indicator of this AcctInfo.

        Indicates if the Cardholder Name on the account is identical to the shipping Name used for this transaction.  Allowed values: * **01** — Account Name identical to shipping Name * **02** — Account Name different to shipping Name

        :return: The ship_name_indicator of this AcctInfo.
        :rtype: str
        """
        return self._ship_name_indicator

    @ship_name_indicator.setter
    def ship_name_indicator(self, ship_name_indicator):
        """Sets the ship_name_indicator of this AcctInfo.

        Indicates if the Cardholder Name on the account is identical to the shipping Name used for this transaction.  Allowed values: * **01** — Account Name identical to shipping Name * **02** — Account Name different to shipping Name

        :param ship_name_indicator: The ship_name_indicator of this AcctInfo.
        :type ship_name_indicator: str
        """
        allowed_values = ["01", "02"]  # noqa: E501
        if ship_name_indicator not in allowed_values:
            raise ValueError(
                "Invalid value for `ship_name_indicator` ({0}), must be one of {1}"
                .format(ship_name_indicator, allowed_values)
            )

        self._ship_name_indicator = ship_name_indicator

    @property
    def suspicious_acc_activity(self):
        """Gets the suspicious_acc_activity of this AcctInfo.

        Indicates whether the 3DS Requestor has experienced suspicious activity (including previous fraud) on the cardholder account.  Allowed values: * **01** — No suspicious activity has been observed * **02** — Suspicious activity has been observed

        :return: The suspicious_acc_activity of this AcctInfo.
        :rtype: str
        """
        return self._suspicious_acc_activity

    @suspicious_acc_activity.setter
    def suspicious_acc_activity(self, suspicious_acc_activity):
        """Sets the suspicious_acc_activity of this AcctInfo.

        Indicates whether the 3DS Requestor has experienced suspicious activity (including previous fraud) on the cardholder account.  Allowed values: * **01** — No suspicious activity has been observed * **02** — Suspicious activity has been observed

        :param suspicious_acc_activity: The suspicious_acc_activity of this AcctInfo.
        :type suspicious_acc_activity: str
        """
        allowed_values = ["01", "02"]  # noqa: E501
        if suspicious_acc_activity not in allowed_values:
            raise ValueError(
                "Invalid value for `suspicious_acc_activity` ({0}), must be one of {1}"
                .format(suspicious_acc_activity, allowed_values)
            )

        self._suspicious_acc_activity = suspicious_acc_activity

    @property
    def txn_activity_day(self):
        """Gets the txn_activity_day of this AcctInfo.

        Number of transactions (successful and abandoned) for this cardholder account with the 3DS Requestor across all payment accounts in the previous 24 hours. Max length: 3 characters.

        :return: The txn_activity_day of this AcctInfo.
        :rtype: str
        """
        return self._txn_activity_day

    @txn_activity_day.setter
    def txn_activity_day(self, txn_activity_day):
        """Sets the txn_activity_day of this AcctInfo.

        Number of transactions (successful and abandoned) for this cardholder account with the 3DS Requestor across all payment accounts in the previous 24 hours. Max length: 3 characters.

        :param txn_activity_day: The txn_activity_day of this AcctInfo.
        :type txn_activity_day: str
        """
        if txn_activity_day is not None and len(txn_activity_day) > 3:
            raise ValueError("Invalid value for `txn_activity_day`, length must be less than or equal to `3`")

        self._txn_activity_day = txn_activity_day

    @property
    def txn_activity_year(self):
        """Gets the txn_activity_year of this AcctInfo.

        Number of transactions (successful and abandoned) for this cardholder account with the 3DS Requestor across all payment accounts in the previous year. Max length: 3 characters.

        :return: The txn_activity_year of this AcctInfo.
        :rtype: str
        """
        return self._txn_activity_year

    @txn_activity_year.setter
    def txn_activity_year(self, txn_activity_year):
        """Sets the txn_activity_year of this AcctInfo.

        Number of transactions (successful and abandoned) for this cardholder account with the 3DS Requestor across all payment accounts in the previous year. Max length: 3 characters.

        :param txn_activity_year: The txn_activity_year of this AcctInfo.
        :type txn_activity_year: str
        """
        if txn_activity_year is not None and len(txn_activity_year) > 3:
            raise ValueError("Invalid value for `txn_activity_year`, length must be less than or equal to `3`")

        self._txn_activity_year = txn_activity_year
