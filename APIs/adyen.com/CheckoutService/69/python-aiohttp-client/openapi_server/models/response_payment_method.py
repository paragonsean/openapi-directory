# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ResponsePaymentMethod(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, brand: str=None, type: str=None):
        """ResponsePaymentMethod - a model defined in OpenAPI

        :param brand: The brand of this ResponsePaymentMethod.
        :param type: The type of this ResponsePaymentMethod.
        """
        self.openapi_types = {
            'brand': str,
            'type': str
        }

        self.attribute_map = {
            'brand': 'brand',
            'type': 'type'
        }

        self._brand = brand
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ResponsePaymentMethod':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ResponsePaymentMethod of this ResponsePaymentMethod.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def brand(self):
        """Gets the brand of this ResponsePaymentMethod.

        The card brand that the shopper used to pay. Only returned if `paymentMethod.type` is **scheme**.

        :return: The brand of this ResponsePaymentMethod.
        :rtype: str
        """
        return self._brand

    @brand.setter
    def brand(self, brand):
        """Sets the brand of this ResponsePaymentMethod.

        The card brand that the shopper used to pay. Only returned if `paymentMethod.type` is **scheme**.

        :param brand: The brand of this ResponsePaymentMethod.
        :type brand: str
        """

        self._brand = brand

    @property
    def type(self):
        """Gets the type of this ResponsePaymentMethod.

        The `paymentMethod.type` value used in the request.

        :return: The type of this ResponsePaymentMethod.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this ResponsePaymentMethod.

        The `paymentMethod.type` value used in the request.

        :param type: The type of this ResponsePaymentMethod.
        :type type: str
        """

        self._type = type
