openapi: 3.1.0
info:
  contact:
    name: Adyen Developer Experience team
    url: https://github.com/Adyen/adyen-openapi
    x-twitter: Adyen
  description: |-
    Adyen Checkout API provides a simple and flexible way to initiate and authorise online payments. You can use the same integration for payments made with cards (including 3D Secure), mobile wallets, and local payment methods (for example, iDEAL and Sofort).

    This API reference provides information on available endpoints and how to interact with them. To learn more about the API, visit [online payments documentation](https://docs.adyen.com/online-payments).

    ## Authentication
    Each request to Checkout API must be signed with an API key. For this, [get your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) from your Customer Area, and set this key to the `X-API-Key` header value, for example:

    ```
    curl
    -H "Content-Type: application/json" \
    -H "X-API-Key: YOUR_API_KEY" \
    ...
    ```
    ## Versioning
    Checkout API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: "vXX", where XX is the version number.

    For example:
    ```
    https://checkout-test.adyen.com/v69/payments
    ```

    ## Going live

    To access the live endpoints, you need an API key from your live Customer Area.

    The live endpoint URLs contain a prefix which is unique to your company account, for example:
    ```
    https://{PREFIX}-checkout-live.adyenpayments.com/checkout/v69/payments
    ```

    Get your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.

    When preparing to do live transactions with Checkout API, follow the [go-live checklist](https://docs.adyen.com/online-payments/go-live-checklist) to make sure you've got all the required configuration in place.

    ## Release notes
    Have a look at the [release notes](https://docs.adyen.com/online-payments/release-notes?integration_type=api&version=69) to find out what changed in this version!
  termsOfService: https://www.adyen.com/legal/terms-and-conditions
  title: Adyen Checkout API
  version: "69"
  x-apisguru-categories:
  - payment
  x-logo:
    url: https://adyen.com/.resources/adyen-website/themes/images/apple-icon-180x180.png
  x-origin:
  - format: openapi
    url: https://raw.githubusercontent.com/Adyen/adyen-openapi/main/json/CheckoutService-v69.json
    version: "3.1"
  x-preferred: false
  x-providerName: adyen.com
  x-publicVersion: true
  x-serviceName: CheckoutService
servers:
- url: https://checkout-test.adyen.com/v69
tags:
- name: Payments
- name: Donations
- name: Payment links
- name: Modifications
- name: Recurring
- name: Orders
- name: Utility
- name: Classic Checkout SDK
paths:
  /applePay/sessions:
    post:
      description: |-
        You need to use this endpoint if you have an API-only integration with Apple Pay which uses Adyen's Apple Pay certificate.

        The endpoint returns the Apple Pay session data which you need to complete the [Apple Pay session validation](https://docs.adyen.com/payment-methods/apple-pay/api-only?tab=adyen-certificate-validation_1#complete-apple-pay-session-validation).
      operationId: post_apple_pay_sessions
      parameters:
      - $ref: '#/components/parameters/Idempotency-Key'
      requestBody:
        content:
          application/json:
            examples:
              basic:
                $ref: '#/components/examples/post-applePay-sessions-basic'
            schema:
              $ref: '#/components/schemas/ApplePaySessionRequest'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              examples:
                basic:
                  $ref: '#/components/examples/post-applePay-sessions-basic-200'
              schema:
                $ref: '#/components/schemas/ApplePaySessionResponse'
          description: OK - the request has succeeded.
          headers:
            Idempotency-Key:
              $ref: '#/components/headers/Idempotency-Key'
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      summary: Get an Apple Pay session
      tags:
      - Utility
      x-methodName: getApplePaySession
      x-sortIndex: 2
      x-openapi-router-controller: openapi_server.controllers.utility_controller
      x-codegen-request-body-name: body
  /cancels:
    post:
      description: |-
        Cancels the authorisation on a payment that has not yet been [captured](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/payments/{paymentPspReference}/captures), and returns a unique reference for this request. You get the outcome of the request asynchronously, in a [**TECHNICAL_CANCEL** webhook](https://docs.adyen.com/online-payments/cancel#cancellation-webhook).

        If you want to cancel a payment using the [`pspReference`](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/payments__resParam_pspReference), use the [`/payments/{paymentPspReference}/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/payments/{paymentPspReference}/cancels) endpoint instead.

        If you want to cancel a payment but are not sure whether it has been captured, use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/payments/{paymentPspReference}/reversals) endpoint instead.

        For more information, refer to [Cancel](https://docs.adyen.com/online-payments/cancel).
      operationId: post_cancels
      parameters:
      - $ref: '#/components/parameters/Idempotency-Key'
      requestBody:
        content:
          application/json:
            examples:
              cancel-with-own-reference:
                $ref: '#/components/examples/post-cancels-cancel-with-own-reference'
            schema:
              $ref: '#/components/schemas/StandalonePaymentCancelRequest'
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              examples:
                cancel-with-own-reference:
                  $ref: '#/components/examples/post-cancels-cancel-with-own-reference-201'
              schema:
                $ref: '#/components/schemas/StandalonePaymentCancelResponse'
          description: Created - the request has been fulfilled and has resulted in
            one or more new resources being created.
          headers:
            Idempotency-Key:
              $ref: '#/components/headers/Idempotency-Key'
        "400":
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-400'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-401'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-403'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-422'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
          headers:
            Idempotency-Key:
              $ref: '#/components/headers/Idempotency-Key'
        "500":
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-500'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      summary: Cancel an authorised payment
      tags:
      - Modifications
      x-methodName: cancelAuthorisedPayment
      x-sortIndex: 3
      x-openapi-router-controller: openapi_server.controllers.modifications_controller
      x-codegen-request-body-name: body
  /cardDetails:
    post:
      description: |+
        Send a request with at least the first 6 digits of the card number to get a response with an array of brands on the card. If you include [your supported brands](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/cardDetails__reqParam_supportedBrands) in the request, the response also tells you if you support each [brand that was identified](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/cardDetails__resParam_details).

        If you have an API-only integration and collect card data, use this endpoint to find out if the shopper's card is co-branded. For co-branded cards, you must let the shopper choose the brand to pay with  if you support both brands.

      operationId: post_card_details
      parameters:
      - $ref: '#/components/parameters/Idempotency-Key'
      requestBody:
        content:
          application/json:
            examples:
              basic:
                $ref: '#/components/examples/post-cardDetails-basic'
              supported-brands:
                $ref: '#/components/examples/post-cardDetails-supported-brands'
            schema:
              $ref: '#/components/schemas/CardDetailsRequest'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              examples:
                basic:
                  $ref: '#/components/examples/post-cardDetails-basic-200'
                supported-brands:
                  $ref: '#/components/examples/post-cardDetails-supported-brands-200'
              schema:
                $ref: '#/components/schemas/CardDetailsResponse'
          description: OK - the request has succeeded.
          headers:
            Idempotency-Key:
              $ref: '#/components/headers/Idempotency-Key'
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      summary: Get the list of brands on the card
      tags:
      - Payments
      x-methodName: cardDetails
      x-sortIndex: 6
      x-openapi-router-controller: openapi_server.controllers.payments_controller
      x-codegen-request-body-name: body
  /donations:
    post:
      description: |-
        Takes in the donation token generated by the `/payments` request and uses it to make the donation for the donation account specified in the request.

        For more information, see [Donations](https://docs.adyen.com/online-payments/donations).
      operationId: post_donations
      parameters:
      - $ref: '#/components/parameters/Idempotency-Key'
      requestBody:
        content:
          application/json:
            examples:
              donations:
                $ref: '#/components/examples/post-donations-donations'
              donations-with-token:
                $ref: '#/components/examples/post-donations-donations-with-token'
            schema:
              $ref: '#/components/schemas/DonationPaymentRequest'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              examples:
                donations:
                  $ref: '#/components/examples/post-donations-donations-200'
              schema:
                $ref: '#/components/schemas/DonationPaymentResponse'
          description: OK - the request has succeeded.
          headers:
            Idempotency-Key:
              $ref: '#/components/headers/Idempotency-Key'
        "400":
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-400'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-401'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-403'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-422'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
          headers:
            Idempotency-Key:
              $ref: '#/components/headers/Idempotency-Key'
        "500":
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-500'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      summary: Start a transaction for donations
      tags:
      - Donations
      x-methodName: donations
      x-sortIndex: 2
      x-openapi-router-controller: openapi_server.controllers.donations_controller
      x-codegen-request-body-name: body
  /orders:
    post:
      description: Creates an order to be used for partial payments. Make a POST `/orders`
        call before making a `/payments` call when processing payments with different
        payment methods.
      operationId: post_orders
      parameters:
      - $ref: '#/components/parameters/Idempotency-Key'
      requestBody:
        content:
          application/json:
            examples:
              basic:
                $ref: '#/components/examples/post-orders-basic'
            schema:
              $ref: '#/components/schemas/CreateOrderRequest'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              examples:
                basic:
                  $ref: '#/components/examples/post-orders-basic-200'
              schema:
                $ref: '#/components/schemas/CreateOrderResponse'
          description: OK - the request has succeeded.
          headers:
            Idempotency-Key:
              $ref: '#/components/headers/Idempotency-Key'
        "400":
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-400'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-401'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-403'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-422'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
          headers:
            Idempotency-Key:
              $ref: '#/components/headers/Idempotency-Key'
        "500":
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-500'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      summary: Create an order
      tags:
      - Orders
      x-methodName: orders
      x-sortIndex: 2
      x-openapi-router-controller: openapi_server.controllers.orders_controller
      x-codegen-request-body-name: body
  /orders/cancel:
    post:
      description: "Cancels an order. Cancellation of an order results in an automatic\
        \ rollback of all payments made in the order, either by canceling or refunding\
        \ the payment, depending on the type of payment method."
      operationId: post_orders_cancel
      parameters:
      - $ref: '#/components/parameters/Idempotency-Key'
      requestBody:
        content:
          application/json:
            examples:
              basic:
                $ref: '#/components/examples/post-orders-cancel-basic'
            schema:
              $ref: '#/components/schemas/CancelOrderRequest'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              examples:
                basic:
                  $ref: '#/components/examples/post-orders-cancel-basic-200'
              schema:
                $ref: '#/components/schemas/CancelOrderResponse'
          description: OK - the request has succeeded.
          headers:
            Idempotency-Key:
              $ref: '#/components/headers/Idempotency-Key'
        "400":
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-400'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-401'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-403'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-422'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
          headers:
            Idempotency-Key:
              $ref: '#/components/headers/Idempotency-Key'
        "500":
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-500'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      summary: Cancel an order
      tags:
      - Orders
      x-methodName: cancelOrder
      x-sortIndex: 3
      x-openapi-router-controller: openapi_server.controllers.orders_controller
      x-codegen-request-body-name: body
  /originKeys:
    post:
      deprecated: true
      description: "This operation takes the origin domains and returns a JSON object\
        \ containing the corresponding origin keys for the domains. \n> If you're\
        \ still using origin key for your Web Drop-in or Components integration, we\
        \ recommend [switching to client key](https://docs.adyen.com/development-resources/client-side-authentication/migrate-from-origin-key-to-client-key).\
        \ This allows you to use a single key for all origins, add or remove origins\
        \ without generating a new key, and detect the card type from the number entered\
        \ in your payment form. "
      operationId: post_origin_keys
      parameters:
      - $ref: '#/components/parameters/Idempotency-Key'
      requestBody:
        content:
          application/json:
            examples:
              basic:
                $ref: '#/components/examples/post-originKeys-basic'
            schema:
              $ref: '#/components/schemas/UtilityRequest'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              examples:
                basic:
                  $ref: '#/components/examples/post-originKeys-basic-200'
              schema:
                $ref: '#/components/schemas/UtilityResponse'
          description: OK - the request has succeeded.
          headers:
            Idempotency-Key:
              $ref: '#/components/headers/Idempotency-Key'
        "400":
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-400'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-401'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-403'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-422'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
          headers:
            Idempotency-Key:
              $ref: '#/components/headers/Idempotency-Key'
        "500":
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-500'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      summary: Create originKey values for domains
      tags:
      - Utility
      x-deprecatedInVersion: "67"
      x-methodName: originKeys
      x-sortIndex: 1
      x-openapi-router-controller: openapi_server.controllers.utility_controller
      x-codegen-request-body-name: body
  /paymentLinks:
    post:
      description: |-
        Creates a payment link to our hosted payment form where shoppers can pay. The list of payment methods presented to the shopper depends on the `currency` and `country` parameters sent in the request.

        For more information, refer to [Pay by Link documentation](https://docs.adyen.com/online-payments/pay-by-link#create-payment-links-through-api).
      operationId: post_payment_links
      parameters:
      - $ref: '#/components/parameters/Idempotency-Key'
      requestBody:
        content:
          application/json:
            examples:
              basic:
                $ref: '#/components/examples/post-paymentLinks-basic'
            schema:
              $ref: '#/components/schemas/PaymentLinkRequest'
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              examples:
                basic:
                  $ref: '#/components/examples/post-paymentLinks-basic-201'
              schema:
                $ref: '#/components/schemas/PaymentLinkResponse'
          description: Created - the request has succeeded.
          headers:
            Idempotency-Key:
              $ref: '#/components/headers/Idempotency-Key'
        "400":
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-400'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-401'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-403'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-422'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
          headers:
            Idempotency-Key:
              $ref: '#/components/headers/Idempotency-Key'
        "500":
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-500'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      summary: Create a payment link
      tags:
      - Payment links
      x-methodName: paymentLinks
      x-sortIndex: 1
      x-openapi-router-controller: openapi_server.controllers.payment_links_controller
      x-codegen-request-body-name: body
  /paymentLinks/{linkId}:
    get:
      description: Retrieves the payment link details using the payment link `id`.
      operationId: get_payment_links_link_id
      parameters:
      - description: Unique identifier of the payment link.
        explode: false
        in: path
        name: linkId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                basic:
                  $ref: '#/components/examples/get-paymentLinks-linkId-basic-200'
              schema:
                $ref: '#/components/schemas/PaymentLinkResponse'
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-400'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-401'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-403'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-422'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-500'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      summary: Get a payment link
      tags:
      - Payment links
      x-methodName: getPaymentLink
      x-sortIndex: 2
      x-openapi-router-controller: openapi_server.controllers.payment_links_controller
    patch:
      description: "Updates the status of a payment link. Use this endpoint to [force\
        \ the expiry of a payment link](https://docs.adyen.com/online-payments/pay-by-link#update-payment-link-status)."
      operationId: patch_payment_links_link_id
      parameters:
      - description: Unique identifier of the payment link.
        explode: false
        in: path
        name: linkId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              basic:
                $ref: '#/components/examples/patch-paymentLinks-linkId-basic'
            schema:
              $ref: '#/components/schemas/UpdatePaymentLinkRequest'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              examples:
                basic:
                  $ref: '#/components/examples/patch-paymentLinks-linkId-basic-200'
              schema:
                $ref: '#/components/schemas/PaymentLinkResponse'
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-400'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-401'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-403'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-422'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-500'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      summary: Update the status of a payment link
      tags:
      - Payment links
      x-methodName: updatePaymentLink
      x-sortIndex: 3
      x-openapi-router-controller: openapi_server.controllers.payment_links_controller
      x-codegen-request-body-name: body
  /paymentMethods:
    post:
      description: |-
        Queries the available payment methods for a transaction based on the transaction context (like amount, country, and currency). Besides giving back a list of the available payment methods, the response also returns which input details you need to collect from the shopper (to be submitted to `/payments`).

        Although we highly recommend using this endpoint to ensure you are always offering the most up-to-date list of payment methods, its usage is optional. You can, for example, also cache the `/paymentMethods` response and update it once a week.
      operationId: post_payment_methods
      parameters:
      - $ref: '#/components/parameters/Idempotency-Key'
      requestBody:
        content:
          application/json:
            examples:
              basic:
                $ref: '#/components/examples/post-paymentMethods-basic'
              filtered:
                $ref: '#/components/examples/post-paymentMethods-filtered'
              include-stored:
                $ref: '#/components/examples/post-paymentMethods-include-stored'
            schema:
              $ref: '#/components/schemas/PaymentMethodsRequest'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              examples:
                basic:
                  $ref: '#/components/examples/post-paymentMethods-basic-200'
                filtered:
                  $ref: '#/components/examples/post-paymentMethods-filtered-200'
                include-stored:
                  $ref: '#/components/examples/post-paymentMethods-include-stored-200'
              schema:
                $ref: '#/components/schemas/PaymentMethodsResponse'
          description: OK - the request has succeeded.
          headers:
            Idempotency-Key:
              $ref: '#/components/headers/Idempotency-Key'
        "400":
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-400'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-401'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-403'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-422'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
          headers:
            Idempotency-Key:
              $ref: '#/components/headers/Idempotency-Key'
        "500":
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-500'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      summary: Get a list of available payment methods
      tags:
      - Payments
      x-methodName: paymentMethods
      x-sortIndex: 2
      x-openapi-router-controller: openapi_server.controllers.payments_controller
      x-codegen-request-body-name: body
  /paymentMethods/balance:
    post:
      description: "Retrieves the balance remaining on a shopper's gift card. To check\
        \ a gift card's balance, make a POST `/paymentMethods/balance` call and include\
        \ the gift card's details inside a `paymentMethod` object."
      operationId: post_payment_methods_balance
      parameters:
      - $ref: '#/components/parameters/Idempotency-Key'
      requestBody:
        content:
          application/json:
            examples:
              basic:
                $ref: '#/components/examples/post-paymentMethods-balance-basic'
              not-enough:
                $ref: '#/components/examples/post-paymentMethods-balance-not-enough'
            schema:
              $ref: '#/components/schemas/BalanceCheckRequest'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              examples:
                basic:
                  $ref: '#/components/examples/post-paymentMethods-balance-basic-200'
                not-enough:
                  $ref: '#/components/examples/post-paymentMethods-balance-not-enough-200'
              schema:
                $ref: '#/components/schemas/BalanceCheckResponse'
          description: OK - the request has succeeded.
          headers:
            Idempotency-Key:
              $ref: '#/components/headers/Idempotency-Key'
        "400":
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-400'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-401'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-403'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-422'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
          headers:
            Idempotency-Key:
              $ref: '#/components/headers/Idempotency-Key'
        "500":
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-500'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      summary: Get the balance of a gift card
      tags:
      - Orders
      x-methodName: getBalanceOfGiftCard
      x-sortIndex: 1
      x-openapi-router-controller: openapi_server.controllers.orders_controller
      x-codegen-request-body-name: body
  /paymentSession:
    post:
      deprecated: true
      description: |-
        Provides the data object that can be used to start the Checkout SDK. To set up the payment, pass its amount, currency, and other required parameters. We use this to optimise the payment flow and perform better risk assessment of the transaction.

        For more information, refer to [How it works](https://docs.adyen.com/online-payments#howitworks).
      operationId: post_payment_session
      parameters:
      - $ref: '#/components/parameters/Idempotency-Key'
      requestBody:
        content:
          application/json:
            examples:
              android:
                $ref: '#/components/examples/post-paymentSession-android'
              enableOneClick:
                $ref: '#/components/examples/post-paymentSession-enableOneClick'
              ios:
                $ref: '#/components/examples/post-paymentSession-ios'
              split:
                $ref: '#/components/examples/post-paymentSession-split'
              web:
                $ref: '#/components/examples/post-paymentSession-web'
            schema:
              $ref: '#/components/schemas/PaymentSetupRequest'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              examples:
                enableOneClick:
                  $ref: '#/components/examples/post-paymentSession-enableOneClick-200'
                web:
                  $ref: '#/components/examples/post-paymentSession-web-200'
              schema:
                $ref: '#/components/schemas/PaymentSetupResponse'
          description: OK - the request has succeeded.
          headers:
            Idempotency-Key:
              $ref: '#/components/headers/Idempotency-Key'
        "400":
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-400'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-401'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-403'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-422'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
          headers:
            Idempotency-Key:
              $ref: '#/components/headers/Idempotency-Key'
        "500":
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-500'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      summary: Create a payment session
      tags:
      - Classic Checkout SDK
      x-deprecatedInVersion: "37"
      x-methodName: paymentSession
      x-sortIndex: 1
      x-openapi-router-controller: openapi_server.controllers.classic_checkout_sdk_controller
      x-codegen-request-body-name: body
  /payments:
    post:
      description: "Sends payment parameters (like amount, country, and currency)\
        \ together with other required input details collected from the shopper. To\
        \ know more about required parameters for specific payment methods, refer\
        \ to our [payment method guides](https://docs.adyen.com/payment-methods).\
        \ \nThe response depends on the [payment flow](https://docs.adyen.com/payment-methods#payment-flow):\n\
        * For a direct flow, the response includes a `pspReference` and a `resultCode`\
        \ with the payment result, for example **Authorised** or **Refused**. \n*\
        \ For a redirect or additional action, the response contains an `action` object. "
      operationId: post_payments
      parameters:
      - $ref: '#/components/parameters/Idempotency-Key'
      requestBody:
        content:
          application/json:
            examples:
              applepay:
                $ref: '#/components/examples/post-payments-applepay'
              card-3d-secure-2-web:
                $ref: '#/components/examples/post-payments-card-3d-secure-2-web'
              card-3d-secure-direct:
                $ref: '#/components/examples/post-payments-card-3d-secure-direct'
              card-direct:
                $ref: '#/components/examples/post-payments-card-direct'
              card-securedfields:
                $ref: '#/components/examples/post-payments-card-securedfields'
              enableOneClick-SF:
                $ref: '#/components/examples/post-payments-enableOneClick-SF'
              enableOneClick-raw:
                $ref: '#/components/examples/post-payments-enableOneClick-raw'
              googlepay:
                $ref: '#/components/examples/post-payments-googlepay'
              ideal:
                $ref: '#/components/examples/post-payments-ideal'
              klarna:
                $ref: '#/components/examples/post-payments-klarna'
              oneclick-direct:
                $ref: '#/components/examples/post-payments-oneclick-direct'
              oneclick-securedfields:
                $ref: '#/components/examples/post-payments-oneclick-securedfields'
              recurring:
                $ref: '#/components/examples/post-payments-recurring'
              split-balanceplatform:
                $ref: '#/components/examples/post-payments-split-balanceplatform'
              split-classic:
                $ref: '#/components/examples/post-payments-split-classic'
              subscription-first-transaction:
                $ref: '#/components/examples/post-payments-subscription-first-transaction'
            schema:
              $ref: '#/components/schemas/PaymentRequest'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              examples:
                card-direct:
                  $ref: '#/components/examples/post-payments-card-direct-200'
                card-securedfields:
                  $ref: '#/components/examples/post-payments-card-securedfields-200'
                enableOneClick-SF:
                  $ref: '#/components/examples/post-payments-enableOneClick-SF-200'
                enableOneClick-raw:
                  $ref: '#/components/examples/post-payments-enableOneClick-raw-200'
                ideal:
                  $ref: '#/components/examples/post-payments-ideal-200'
                split-balanceplatform:
                  $ref: '#/components/examples/post-payments-split-balanceplatform-200'
                subscription-first-transaction:
                  $ref: '#/components/examples/post-payments-subscription-first-transaction-200'
              schema:
                $ref: '#/components/schemas/PaymentResponse'
          description: OK - the request has succeeded.
          headers:
            Idempotency-Key:
              $ref: '#/components/headers/Idempotency-Key'
        "400":
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-400'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-401'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-403'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-422'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
          headers:
            Idempotency-Key:
              $ref: '#/components/headers/Idempotency-Key'
        "500":
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-500'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      summary: Start a transaction
      tags:
      - Payments
      x-methodName: payments
      x-sortIndex: 3
      x-openapi-router-controller: openapi_server.controllers.payments_controller
      x-codegen-request-body-name: body
  /payments/details:
    post:
      description: |+
        Submits details for a payment created using `/payments`. This step is only needed when no final state has been reached on the `/payments` request, for example when the shopper was redirected to another page to complete the payment.

      operationId: post_payments_details
      parameters:
      - $ref: '#/components/parameters/Idempotency-Key'
      requestBody:
        content:
          application/json:
            examples:
              "00.redirect":
                $ref: '#/components/examples/post-payments-details-00.redirect'
              "3d-secure-2-native":
                $ref: '#/components/examples/post-payments-details-3d-secure-2-native'
            schema:
              $ref: '#/components/schemas/PaymentDetailsRequest'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              examples:
                "00.redirect":
                  $ref: '#/components/examples/post-payments-details-00.redirect-200'
              schema:
                $ref: '#/components/schemas/PaymentDetailsResponse'
          description: OK - the request has succeeded.
          headers:
            Idempotency-Key:
              $ref: '#/components/headers/Idempotency-Key'
        "400":
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-400'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-401'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-403'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-422'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
          headers:
            Idempotency-Key:
              $ref: '#/components/headers/Idempotency-Key'
        "500":
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-500'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      summary: Submit details for a payment
      tags:
      - Payments
      x-methodName: paymentsDetails
      x-sortIndex: 4
      x-openapi-router-controller: openapi_server.controllers.payments_controller
      x-codegen-request-body-name: body
  /payments/result:
    post:
      deprecated: true
      description: |-
        Verifies the payment result using the payload returned from the Checkout SDK.

        For more information, refer to [How it works](https://docs.adyen.com/online-payments#howitworks).
      operationId: post_payments_result
      parameters:
      - $ref: '#/components/parameters/Idempotency-Key'
      requestBody:
        content:
          application/json:
            examples:
              basic:
                $ref: '#/components/examples/post-payments-result-basic'
            schema:
              $ref: '#/components/schemas/PaymentVerificationRequest'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              examples:
                basic:
                  $ref: '#/components/examples/post-payments-result-basic-200'
              schema:
                $ref: '#/components/schemas/PaymentVerificationResponse'
          description: OK - the request has succeeded.
          headers:
            Idempotency-Key:
              $ref: '#/components/headers/Idempotency-Key'
        "400":
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-400'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-401'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-403'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-422'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
          headers:
            Idempotency-Key:
              $ref: '#/components/headers/Idempotency-Key'
        "500":
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-500'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      summary: Verify a payment result
      tags:
      - Classic Checkout SDK
      x-deprecatedInVersion: "37"
      x-methodName: verifyPaymentResult
      x-sortIndex: 2
      x-openapi-router-controller: openapi_server.controllers.classic_checkout_sdk_controller
      x-codegen-request-body-name: body
  /payments/{paymentPspReference}/amountUpdates:
    post:
      description: |-
        Increases or decreases the authorised payment amount and returns a unique reference for this request. You get the outcome of the request asynchronously, in an [**AUTHORISATION_ADJUSTMENT** webhook](https://docs.adyen.com/development-resources/webhooks/understand-notifications#event-codes).

        You can only update authorised amounts that have not yet been [captured](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/payments/{paymentPspReference}/captures).

        The amount you specify in the request is the updated amount, which is larger or smaller than the initial authorised amount.

        For more information, refer to [Authorisation adjustment](https://docs.adyen.com/online-payments/adjust-authorisation#use-cases).
      operationId: post_payments_payment_psp_reference_amount_updates
      parameters:
      - description: "The [`pspReference`](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/payments__resParam_pspReference)\
          \ of the payment."
        explode: false
        in: path
        name: paymentPspReference
        required: true
        schema:
          type: string
        style: simple
      - $ref: '#/components/parameters/Idempotency-Key'
      requestBody:
        content:
          application/json:
            examples:
              amount-update:
                $ref: '#/components/examples/post-payments-paymentPspReference-amountUpdates-amount-update'
            schema:
              $ref: '#/components/schemas/PaymentAmountUpdateRequest'
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              examples:
                amount-update:
                  $ref: '#/components/examples/post-payments-paymentPspReference-amountUpdates-amount-update-201'
              schema:
                $ref: '#/components/schemas/PaymentAmountUpdateResponse'
          description: Created - the request has been fulfilled and has resulted in
            one or more new resources being created.
          headers:
            Idempotency-Key:
              $ref: '#/components/headers/Idempotency-Key'
        "400":
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-400'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-401'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-403'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-422'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
          headers:
            Idempotency-Key:
              $ref: '#/components/headers/Idempotency-Key'
        "500":
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-500'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      summary: Update an authorised amount
      tags:
      - Modifications
      x-methodName: updateAuthorisedAmount
      x-sortIndex: 6
      x-openapi-router-controller: openapi_server.controllers.modifications_controller
      x-codegen-request-body-name: body
  /payments/{paymentPspReference}/cancels:
    post:
      description: |-
        Cancels the authorisation on a payment that has not yet been [captured](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/payments/paymentPspReference/captures), and returns a unique reference for this request. You get the outcome of the request asynchronously, in a [**CANCELLATION** webhook](https://docs.adyen.com/online-payments/cancel#cancellation-webhook).

        If you want to cancel a payment but don't have the [`pspReference`](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/payments__resParam_pspReference), use the [`/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/cancels) endpoint instead.

        If you want to cancel a payment but are not sure whether it has been captured, use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/payments/{paymentPspReference}/reversals) endpoint instead.

        For more information, refer to [Cancel](https://docs.adyen.com/online-payments/cancel).
      operationId: post_payments_payment_psp_reference_cancels
      parameters:
      - description: "The [`pspReference`](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/payments__resParam_pspReference)\
          \ of the payment that you want to cancel. "
        explode: false
        in: path
        name: paymentPspReference
        required: true
        schema:
          type: string
        style: simple
      - $ref: '#/components/parameters/Idempotency-Key'
      requestBody:
        content:
          application/json:
            examples:
              cancel-with-psp-reference:
                $ref: '#/components/examples/post-payments-paymentPspReference-cancels-cancel-with-psp-reference'
            schema:
              $ref: '#/components/schemas/PaymentCancelRequest'
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              examples:
                cancel-with-psp-reference:
                  $ref: '#/components/examples/post-payments-paymentPspReference-cancels-cancel-with-psp-reference-201'
              schema:
                $ref: '#/components/schemas/PaymentCancelResponse'
          description: Created - the request has been fulfilled and has resulted in
            one or more new resources being created.
          headers:
            Idempotency-Key:
              $ref: '#/components/headers/Idempotency-Key'
        "400":
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-400'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-401'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-403'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-422'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
          headers:
            Idempotency-Key:
              $ref: '#/components/headers/Idempotency-Key'
        "500":
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-500'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      summary: Cancel an authorised payment
      tags:
      - Modifications
      x-methodName: cancelAuthorisedPaymentByPspReference
      x-sortIndex: 2
      x-openapi-router-controller: openapi_server.controllers.modifications_controller
      x-codegen-request-body-name: body
  /payments/{paymentPspReference}/captures:
    post:
      description: " Captures an authorised payment and returns a unique reference\
        \ for this request. You get the outcome of the request asynchronously, in\
        \ a [**CAPTURE** webhook](https://docs.adyen.com/online-payments/capture#capture-notification).\n\
        \nYou can capture either the full authorised amount or a part of the authorised\
        \ amount. By default, any unclaimed amount after a partial capture gets cancelled.\
        \ This does not apply if you enabled multiple partial captures on your account\
        \ and the payment method supports multiple partial captures. \n\n[Automatic\
        \ capture](https://docs.adyen.com/online-payments/capture#automatic-capture)\
        \ is the default setting for most payment methods. In these cases, you don't\
        \ need to make capture requests. However, making capture requests for payments\
        \ that are captured automatically does not result in double charges.\n\nFor\
        \ more information, refer to [Capture](https://docs.adyen.com/online-payments/capture)."
      operationId: post_payments_payment_psp_reference_captures
      parameters:
      - description: "The [`pspReference`](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/payments__resParam_pspReference)\
          \ of the payment that you want to capture."
        explode: false
        in: path
        name: paymentPspReference
        required: true
        schema:
          type: string
        style: simple
      - $ref: '#/components/parameters/Idempotency-Key'
      requestBody:
        content:
          application/json:
            examples:
              capture:
                $ref: '#/components/examples/post-payments-paymentPspReference-captures-capture'
            schema:
              $ref: '#/components/schemas/PaymentCaptureRequest'
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              examples:
                capture:
                  $ref: '#/components/examples/post-payments-paymentPspReference-captures-capture-201'
              schema:
                $ref: '#/components/schemas/PaymentCaptureResponse'
          description: Created - the request has been fulfilled and has resulted in
            one or more new resources being created.
          headers:
            Idempotency-Key:
              $ref: '#/components/headers/Idempotency-Key'
        "400":
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-400'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-401'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-403'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-422'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
          headers:
            Idempotency-Key:
              $ref: '#/components/headers/Idempotency-Key'
        "500":
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-500'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      summary: Capture an authorised payment
      tags:
      - Modifications
      x-methodName: captureAuthorisedPayment
      x-sortIndex: 1
      x-openapi-router-controller: openapi_server.controllers.modifications_controller
      x-codegen-request-body-name: body
  /payments/{paymentPspReference}/refunds:
    post:
      description: "Refunds a payment that has been [captured](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/payments/{paymentPspReference}/captures),\
        \ and returns a unique reference for this request. You get the outcome of\
        \ the request asynchronously, in a [**REFUND** webhook](https://docs.adyen.com/online-payments/refund#refund-webhook).\n\
        \nYou can refund either the full captured amount or a part of the captured\
        \ amount. You can also perform multiple partial refunds, as long as their\
        \ sum doesn't exceed the captured amount.\n\n> Some payment methods do not\
        \ support partial refunds. To learn if a payment method supports partial refunds,\
        \ refer to the payment method page such as [cards](https://docs.adyen.com/payment-methods/cards#supported-cards),\
        \ [iDEAL](https://docs.adyen.com/payment-methods/ideal), or [Klarna](https://docs.adyen.com/payment-methods/klarna).\
        \ \n\nIf you want to refund a payment but are not sure whether it has been\
        \ captured, use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/payments/{paymentPspReference}/reversals)\
        \ endpoint instead.\n\nFor more information, refer to [Refund](https://docs.adyen.com/online-payments/refund)."
      operationId: post_payments_payment_psp_reference_refunds
      parameters:
      - description: "The [`pspReference`](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/payments__resParam_pspReference)\
          \ of the payment that you want to refund."
        explode: false
        in: path
        name: paymentPspReference
        required: true
        schema:
          type: string
        style: simple
      - $ref: '#/components/parameters/Idempotency-Key'
      requestBody:
        content:
          application/json:
            examples:
              refund:
                $ref: '#/components/examples/post-payments-paymentPspReference-refunds-refund'
            schema:
              $ref: '#/components/schemas/PaymentRefundRequest'
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              examples:
                refund:
                  $ref: '#/components/examples/post-payments-paymentPspReference-refunds-refund-201'
              schema:
                $ref: '#/components/schemas/PaymentRefundResponse'
          description: Created - the request has been fulfilled and has resulted in
            one or more new resources being created.
          headers:
            Idempotency-Key:
              $ref: '#/components/headers/Idempotency-Key'
        "400":
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-400'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-401'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-403'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-422'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
          headers:
            Idempotency-Key:
              $ref: '#/components/headers/Idempotency-Key'
        "500":
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-500'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      summary: Refund a captured payment
      tags:
      - Modifications
      x-methodName: refundCapturedPayment
      x-sortIndex: 4
      x-openapi-router-controller: openapi_server.controllers.modifications_controller
      x-codegen-request-body-name: body
  /payments/{paymentPspReference}/reversals:
    post:
      description: |-
        [Refunds](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/payments/{paymentPspReference}/refunds) a payment if it has already been captured, and [cancels](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/payments/{paymentPspReference}/cancels) a payment if it has not yet been captured. Returns a unique reference for this request. You get the outcome of the request asynchronously, in a [**CANCEL_OR_REFUND** webhook](https://docs.adyen.com/online-payments/reverse#cancel-or-refund-webhook).

        The reversed amount is always the full payment amount.
        > Do not use this request for payments that involve multiple partial captures.

        For more information, refer to [Reversal](https://docs.adyen.com/online-payments/reversal).
      operationId: post_payments_payment_psp_reference_reversals
      parameters:
      - description: "The [`pspReference`](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/payments__resParam_pspReference)\
          \ of the payment that you want to reverse. "
        explode: false
        in: path
        name: paymentPspReference
        required: true
        schema:
          type: string
        style: simple
      - $ref: '#/components/parameters/Idempotency-Key'
      requestBody:
        content:
          application/json:
            examples:
              reversal:
                $ref: '#/components/examples/post-payments-paymentPspReference-reversals-reversal'
            schema:
              $ref: '#/components/schemas/PaymentReversalRequest'
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              examples:
                reversal:
                  $ref: '#/components/examples/post-payments-paymentPspReference-reversals-reversal-201'
              schema:
                $ref: '#/components/schemas/PaymentReversalResponse'
          description: Created - the request has been fulfilled and has resulted in
            one or more new resources being created.
          headers:
            Idempotency-Key:
              $ref: '#/components/headers/Idempotency-Key'
        "400":
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-400'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-401'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-403'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-422'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
          headers:
            Idempotency-Key:
              $ref: '#/components/headers/Idempotency-Key'
        "500":
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-500'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      summary: Refund or cancel a payment
      tags:
      - Modifications
      x-methodName: refundOrCancelPayment
      x-sortIndex: 5
      x-openapi-router-controller: openapi_server.controllers.modifications_controller
      x-codegen-request-body-name: body
  /sessions:
    post:
      description: |-
        Creates a payment session for [Web Drop-in](https://docs.adyen.com/online-payments/web-drop-in) and [Web Components](https://docs.adyen.com/online-payments/web-components) integrations.

        The response contains encrypted payment session data. The front end then uses the session data to make any required server-side calls for the payment flow.

        You get the payment outcome asynchronously, in an [AUTHORISATION](https://docs.adyen.com/api-explorer/#/Webhooks/latest/post/AUTHORISATION) webhook.
      operationId: post_sessions
      parameters:
      - $ref: '#/components/parameters/Idempotency-Key'
      requestBody:
        content:
          application/json:
            examples:
              "00.success":
                $ref: '#/components/examples/post-sessions-00.success'
              "01.klarna":
                $ref: '#/components/examples/post-sessions-01.klarna'
              enableOneClick:
                $ref: '#/components/examples/post-sessions-enableOneClick'
              split:
                $ref: '#/components/examples/post-sessions-split'
            schema:
              $ref: '#/components/schemas/CreateCheckoutSessionRequest'
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              examples:
                "00.success":
                  $ref: '#/components/examples/post-sessions-00.success-201'
                "01.klarna":
                  $ref: '#/components/examples/post-sessions-01.klarna-201'
                enableOneClick:
                  $ref: '#/components/examples/post-sessions-enableOneClick-201'
                split:
                  $ref: '#/components/examples/post-sessions-split-201'
              schema:
                $ref: '#/components/schemas/CreateCheckoutSessionResponse'
          description: Created - the request has been fulfilled and has resulted in
            one or more new resources being created.
          headers:
            Idempotency-Key:
              $ref: '#/components/headers/Idempotency-Key'
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      summary: Create a payment session
      tags:
      - Payments
      x-addedInVersion: "68"
      x-methodName: sessions
      x-sortIndex: 1
      x-openapi-router-controller: openapi_server.controllers.payments_controller
      x-codegen-request-body-name: body
  /sessions/{sessionId}:
    get:
      description: Returns the status of the payment session with the `sessionId`
        and `sessionResult` specified in the path.
      operationId: get_sessions_session_id
      parameters:
      - description: A unique identifier of the session.
        explode: false
        in: path
        name: sessionId
        required: true
        schema:
          type: string
        style: simple
      - description: The `sessionResult` value from the Drop-in or Component.
        explode: true
        in: query
        name: sessionResult
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  $ref: '#/components/examples/get-sessions-sessionId-success-200'
              schema:
                $ref: '#/components/schemas/SessionResultResponse'
          description: OK - the request has succeeded.
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      summary: Get the result of a payment session
      tags:
      - Payments
      x-addedInVersion: "68"
      x-methodName: getResultOfPaymentSession
      x-sortIndex: 2
      x-openapi-router-controller: openapi_server.controllers.payments_controller
components:
  examples:
    generic-400:
      summary: Response code 400. Bad request.
      value:
        errorCode: "702"
        errorType: validation
        message: "Unexpected input: \", expected: }"
        status: 400
    generic-401:
      summary: Response code 401. Unauthorized.
      value:
        errorCode: "000"
        errorType: security
        message: HTTP Status Response - Unauthorized
        status: 401
    generic-403:
      summary: Response code 403. Forbidden.
      value:
        errorCode: "901"
        errorType: security
        message: Invalid Merchant Account
        pspReference: 881611827877203B
        status: 403
    generic-422:
      summary: Response code 422. Unprocessable entity.
      value:
        errorCode: 14030
        errorType: validation
        message: Return URL is missing.
        pspReference: "8816118280275544"
        status: 422
    generic-500:
      summary: Response code 500. Internal server error.
      value:
        errorCode: "905"
        errorType: configuration
        message: Payment details are not supported
        pspReference: "8516091485743033"
        status: 500
    get-paymentLinks-linkId-basic-200:
      summary: Example response for request 'basic'
      value:
        amount:
          currency: EUR
          value: 8700
        countryCode: NL
        expiresAt: 2021-04-08T14:06:39Z
        id: PL61C53A8B97E6915A
        merchantAccount: YOUR_MERCHANT_ACCOUNT
        reference: shopper-reference-ekvL83
        shopperLocale: hu-HU
        shopperReference: shopper-reference-LZfdWZ
        status: active
        url: https://test.adyen.link/PL61C53A8B97E6915A
    get-sessions-sessionId-success-200:
      description: The status of the session with the specified ID.
      summary: "Response code: 200 - Success"
      value:
        id: CS12345678
        status: completed
    patch-paymentLinks-linkId-basic:
      summary: Update the status of a payment link
      value:
        status: expired
    patch-paymentLinks-linkId-basic-200:
      summary: Example response for request 'basic'
      value:
        amount:
          currency: EUR
          value: 8700
        countryCode: NL
        expiresAt: 2021-04-08T14:06:39Z
        id: PL61C53A8B97E6915A
        merchantAccount: YOUR_MERCHANT_ACCOUNT
        reference: shopper-reference-ekvL83
        shopperLocale: hu-HU
        shopperReference: shopper-reference-LZfdWZ
        status: expired
        url: https://test.adyen.link/PL61C53A8B97E6915A
    post-applePay-sessions-basic:
      summary: Get payment session for Apple Pay
      value:
        displayName: YOUR_MERCHANT_NAME
        domainName: YOUR_DOMAIN_NAME
        merchantIdentifier: YOUR_MERCHANT_ID
    post-applePay-sessions-basic-200:
      summary: Payment session data for Apple Pay
      value:
        data: eyJ2Z...
    post-cancels-cancel-with-own-reference:
      description: Example cancel request with your own reference
      summary: Cancel a payment using your own reference
      value:
        merchantAccount: YOUR_MERCHANT_ACCOUNT
        paymentReference: YOUR_UNIQUE_REFERENCE_FOR_THE_PAYMENT
        reference: YOUR_UNIQUE_REFERENCE_FOR_THE_CANCELLATION
    post-cancels-cancel-with-own-reference-201:
      description: Example response when a payment cancellation was requested
      summary: Payment cancellation requested
      value:
        merchantAccount: YOUR_MERCHANT_ACCOUNT
        paymentReference: YOUR_UNIQUE_REFERENCE_FOR_THE_PAYMENT
        pspReference: 993617894906488A
        reference: YOUR_UNIQUE_REFERENCE_FOR_THE_CANCELLATION
        status: received
    post-cardDetails-basic:
      description: Example request for getting a list of brands on a card using the
        first 6 digits of the card number.
      summary: Get a list of brands on a card
      value:
        cardNumber: "411111"
        merchantAccount: YOUR_MERCHANT_ACCOUNT
    post-cardDetails-basic-200:
      description: Example response when the card is co-branded.
      summary: List of brands on the card
      value:
        brands:
        - supported: true
          type: visa
        - supported: true
          type: cartebancaire
    post-cardDetails-supported-brands:
      description: Example request for getting a list of brands on a card using the
        first 6 digits of the card number and including the card brands you support.
      summary: Get a list of brands on a card specifying your supported card brands
      value:
        cardNumber: "411111"
        merchantAccount: YOUR_MERCHANT_ACCOUNT
        supportedBrands:
        - visa
        - mc
        - amex
    post-cardDetails-supported-brands-200:
      description: "Example response when the card is co-branded, and you only support\
        \ Visa."
      summary: List of brands on the card when you specify your supported card brands
      value:
        brands:
        - supported: true
          type: visa
        - supported: false
          type: cartebancaire
    post-donations-donations:
      summary: Start a donation transaction
      value:
        amount:
          currency: EUR
          value: 1000
        donationAccount: CHARITY_ACCOUNT
        donationOriginalPspReference: 991559660454807J
        donationToken: YOUR_DONATION_TOKEN
        merchantAccount: YOUR_MERCHANT_ACCOUNT
        paymentMethod:
          type: scheme
        reference: YOUR_DONATION_REFERENCE
        returnUrl: https://your-company.com/...
        shopperInteraction: ContAuth
    post-donations-donations-200:
      summary: Example response
      value:
        amount:
          currency: EUR
          value: 1000
        donationAccount: CHARITY_ACCOUNT
        id: UNIQUE_RESOURCE_ID
        merchantAccount: YOUR_MERCHANT_ACCOUNT
        payment:
          amount:
            currency: EUR
            value: 1000
          merchantReference: YOUR_DONATION_REFERENCE
          pspReference: "8535762347980628"
          resultCode: Authorised
        reference: YOUR_DONATION_REFERENCE
        status: completed
    post-donations-donations-with-token:
      summary: Start a donation transaction with a token
      value:
        amount:
          currency: EUR
          value: 1000
        donationAccount: CHARITY_ACCOUNT
        merchantAccount: YOUR_MERCHANT_ACCOUNT
        paymentMethod:
          recurringDetailReference: "7219687191761347"
          type: scheme
        recurringProcessingModel: CardOnFile
        reference: YOUR_DONATION_REFERENCE
        returnUrl: https://your-company.com/...
        shopperInteraction: ContAuth
        shopperReference: YOUR_SHOPPER_REFERENCE
    post-orders-basic:
      summary: Create an order
      value:
        amount:
          currency: EUR
          value: 2500
        merchantAccount: YOUR_MERCHANT_ACCOUNT
        reference: YOUR_ORDER_REFERENCE
    post-orders-basic-200:
      summary: Example response for request 'basic'
      value:
        amount:
          currency: EUR
          value: 300
        expiresAt: 2021-04-09T14:16:46Z
        orderData: Ab02b4c0!BQABAgCxXvknCldOcRElkxY8Za7iyym4Wv8aDzyNwmj/3nh4G6YtwnUIJHaK62NlN4oIsACdkn1FEjBwKlheG40jvXcYGBk4KFV5WvOhTVCpv/KXnkrI7xQv/u2lE7U4wA+HPB6K4Zj2L8xO/ogZi+zGZqFs5m16jmkH7ku6FzXygXLNuUCuOlmlXSZhdkHHTNVQSq1MELDK9OL74y532ETRPTCNxx8WlEiZB+LDqYrPvH9GgigtD5kw8Do45jfFfG72kWBEgfYqp4mbUmBB9ebXFYZKfF0qvW1x7A2Y9+/MFlTIdXfKW484bJeDBCTTrmKGXIj+U4r5imr5fXTyNLcrxyUqwrb9jg+5B4qg1XB6Cgj5UPlSI4O62I7v0s5TTj69dzLwUQRxSQbwLrZVGYavXzeVKI54BVLRV3d/+BbPvTqnTo34UhfZbPlOx9F2eyaS0ZXdOKnHw89uGUgxUpLsMqnbRysi/pxpZaulel+0mExb68wVxb/7Teob5eRG4gp7cfZVZs6tLXOYWL+W0TqIlsa3hWsfM0LeaovzkoDtW/pK5JABXwMtLig9tsxoEh9ONYtIzkXC21LZ8ebiuSIMaPizjF8yca+QxrCZalQsu6uKnBz/mm8nnsflaGU2QS5zcoxk1RudL1Bl36LM9UZGPpFEYWiYA4sUsnNLw7peJjWCGhDepnwMv4TlgsEtoDtz1T54AEp7ImtleSI6IkFGMEFBQTEwM0NBNTM3RUFFRDg3QzI0REQ1MzkwOUI4MEE3OEE5MjNFMzgyM0Q2OERBQ0M5NEI5RkY4MzA1REMifRslOdmfgUHTXl66WPD9xoW2whIeRx/jR++2MqNE16x6zQy+KtDN8/h60crZwmqkjVTQYqQlsYSYDHSIyb4wnnay16/5il1yS7vN3UCLaTXjYBIAyyx6Wr9j4P3CI/etB+PpviHoESC4mV6ZN4whMDQyziQ8s230GtboXbh42qND7rk9phySBogowQlXrtF+l2n2F46nyif0owEgik5fGARfvjZtY2w23s30KMLNwU4gWSvX4H6RMVS8TfZH2fKfNrwB3tZUXwYkELs5ntaHysswq5Mn5aq2BKAMHu/Rh/wureMSI73Qi0avjrzWCwzt3JH4wnzErMnOZwSdgA==
        pspReference: "8616178914061985"
        reference: shopper-reference-ekvL83
        remainingAmount:
          currency: EUR
          value: 2500
        resultCode: Success
    post-orders-cancel-basic:
      summary: Cancel an order
      value:
        merchantAccount: YOUR_MERCHANT_ACCOUNT
        order:
          orderData: 823fh892f8f18f4...148f13f9f3f
          pspReference: "8815517812932012"
    post-orders-cancel-basic-200:
      summary: Example response for request 'basic'
      value:
        pspReference: "8816178914079738"
        resultCode: Received
    post-originKeys-basic:
      summary: Get origin keys
      value:
        originDomains:
        - https://www.your-domain1.com
        - https://www.your-domain2.com
        - https://www.your-domain3.com
    post-originKeys-basic-200:
      summary: Example response for request 'basic'
      value:
        originKeys:
          https://www.your-domain1.com: pub.v2.8116178901076090.aHR0cHM6Ly93d3cueW91ci1kb21haW4xLmNvbQ.pvbYlrXz0ICP4kwMJXDGDLVMqALhwXr1MSRjT-fkhvw
          https://www.your-domain2.com: pub.v2.8116178901076090.aHR0cHM6Ly93d3cueW91ci1kb21haW4yLmNvbQ.LdN9kvJ35fYFFiBSJA4idMnwwxJ5_yXpeNS__Ap5wkg
          https://www.your-domain3.com: pub.v2.8116178901076090.aHR0cHM6Ly93d3cueW91ci1kb21haW4zLmNvbQ.FrTpVz7_RzAywKasM0kXCRoMfoMkKIKaxjFymRGORIc
    post-paymentLinks-basic:
      summary: Create a payment link
      value:
        amount:
          currency: BRL
          value: 1250
        billingAddress:
          city: São Paulo
          country: BR
          houseNumberOrName: "999"
          postalCode: "59000060"
          stateOrProvince: SP
          street: Roque Petroni Jr
        countryCode: BR
        deliveryAddress:
          city: São Paulo
          country: BR
          houseNumberOrName: "999"
          postalCode: "59000060"
          stateOrProvince: SP
          street: Roque Petroni Jr
        merchantAccount: YOUR_MERCHANT_ACCOUNT
        reference: YOUR_ORDER_NUMBER
        shopperEmail: test@email.com
        shopperLocale: pt-BR
        shopperReference: YOUR_SHOPPER_REFERENCE
    post-paymentLinks-basic-201:
      summary: Payment link created
      value:
        amount:
          currency: BRL
          value: 1250
        billingAddress:
          city: São Paulo
          country: BR
          houseNumberOrName: "999"
          postalCode: "59000060"
          stateOrProvince: SP
          street: Roque Petroni Jr
        countryCode: BR
        deliveryAddress:
          city: São Paulo
          country: BR
          houseNumberOrName: "999"
          postalCode: "59000060"
          stateOrProvince: SP
          street: Roque Petroni Jr
        expiresAt: 2022-10-28T09:16:22Z
        id: PLE83C39B0A0DE0C1E
        merchantAccount: YOUR_MERCHANT_ACCOUNT
        reference: YOUR_ORDER_NUMBER
        reusable: false
        shopperEmail: test@email.com
        shopperLocale: pt-BR
        shopperReference: YOUR_SHOPPER_REFERENCE
        status: active
        url: https://test.adyen.link/PLE83C39B0A0DE0C1E
    post-paymentMethods-balance-basic:
      summary: Get gift card balance specifying amount of 10 EUR
      value:
        amount:
          currency: EUR
          value: 1000
        merchantAccount: YOUR_MERCHANT_ACCOUNT
        paymentMethod:
          cvc: "737"
          number: "4126491073027401"
          type: givex
    post-paymentMethods-balance-basic-200:
      summary: Gift card balance greater than amount specified in request
      value:
        balance:
          currency: EUR
          value: 5000
        pspReference: KHQC5N7G84BLNK43
        resultCode: Success
    post-paymentMethods-balance-not-enough:
      summary: Get gift card balance specifying amount of 100 EUR
      value:
        amount:
          currency: EUR
          value: 10000
        merchantAccount: YOUR_MERCHANT_ACCOUNT
        paymentMethod:
          cvc: "737"
          number: "4126491073027401"
          type: givex
    post-paymentMethods-balance-not-enough-200:
      summary: Gift card balance lower than amount specified in request
      value:
        balance:
          currency: EUR
          value: 5000
        pspReference: FKSPNCQ8HXSKGK82
        resultCode: NotEnoughBalance
    post-paymentMethods-basic:
      summary: Get available payment methods
      value:
        merchantAccount: YOUR_MERCHANT_ACCOUNT
    post-paymentMethods-basic-200:
      summary: Example response for request 'basic'
      value:
        paymentMethods:
        - name: ACH Direct Debit
          type: ach
        - name: Adyen Voucher
          type: adyen_test_voucher
        - name: AfterPay Invoice
          type: afterpay_default
        - name: AfterPay DirectDebit
          type: afterpay_directdebit
        - name: Afterpay
          type: afterpaytouch
        - name: Credit Card
          type: scheme
        - name: AliPay
          type: alipay
        - name: AliPay HK
          type: alipay_hk
        - name: AliPay
          type: alipay_wap
        - name: Android Pay
          type: androidpay
        - name: Apple Pay
          type: applepay
        - name: Credit Card via AsiaPay
          type: asiapay
        - name: China UnionPay
          type: asiapay_unionpay
        - name: Baby Gift Card
          type: babygiftcard
        - name: Baloto
          type: baloto
        - name: BancNet
          type: bancnet
        - name: Bank Transfer (BG)
          type: bankTransfer_BG
        - name: Bank Transfer (CH)
          type: bankTransfer_CH
        - name: Bank Transfer (DE)
          type: bankTransfer_DE
        - name: Bank Transfer (FI)
          type: bankTransfer_FI
        - name: Bank Transfer (GB)
          type: bankTransfer_GB
        - name: Bank Transfer (HU)
          type: bankTransfer_HU
        - name: SEPA Bank Transfer
          type: bankTransfer_IBAN
        - name: Bank Transfer (IE)
          type: bankTransfer_IE
        - name: Electronic Bank Transfer (MX)
          type: bankTransfer_MX_linked
        - name: Bank Transfer (MX)
          type: bankTransfer_MX_offline
        - name: Bank Transfer (NL)
          type: bankTransfer_NL
        - name: Bank Transfer (PL)
          type: bankTransfer_PL
        - name: Bank Transfer (SE)
          type: bankTransfer_SE
        - name: Bank Transfer (US)
          type: bankTransfer_US
        - name: Payconiq by Bancontact
          type: bcmc_mobile
        - name: Bijenkorf Cadeaucard
          type: bijcadeaucard
        - name: 99Bill
          type: bill99
        - name: Online Banking India
          type: billdesk_online
        - name: UPI
          type: billdesk_upi
        - name: Wallets India
          type: billdesk_wallet
        - name: Blik
          type: blik
        - name: Bloemen Giftcard
          type: bloemengiftcard
        - name: Boekenbon Giftcard
          type: boekenbon
        - name: Boleto
          type: boleto
        - name: Boleto Bancario
          type: boletobancario_santander
        - name: Bradesco
          type: bradesco
        - name: Cash-Ticket
          type: cashticket
        - name: CashU
          type: cashu
        - name: CCAvenue
          type: ccavenue
        - name: Mula Checkout
          type: cellulant
        - name: Chasin Giftcard
          type: chasingiftcard
        - name: Clearpay
          type: clearpay
        - name: ClickandBuy
          type: clickandbuy
        - name: Paiement en 3 fois par Cartes Bancaires
          type: cofinoga_3xcb
        - name: Costes Giftcard
          type: costesgiftcard
        - name: custom_settlement
          type: custom_settlement
        - name: DANA
          type: dana
        - name: DineroMail
          type: dineromail
        - name: Online bank transfer.
          type: directEbanking
        - name: Direct Debit Brazil - Banco do Brazil
          type: directdebit_BR_bancodobrasil
        - name: Direct Debit Brazil - Bradesco
          type: directdebit_BR_bradesco
        - name: Direct Debit Brazil - Caixa Economica Federal
          type: directdebit_BR_caixa
        - name: Direct Debit Brazil - HSBC
          type: directdebit_BR_hsbc
        - name: Direct Debit Brazil - Itau
          type: directdebit_BR_itau
        - name: Direct Debit Brazil - Santander
          type: directdebit_BR_santander
        - name: BACS Direct Debit
          type: directdebit_GB
        - name: Alfamart
          type: doku_alfamart
        - name: BCA Bank Transfer
          type: doku_bca_va
        - name: BNI VA
          type: doku_bni_va
        - name: BRI VA
          type: doku_bri_va
        - name: CIMB VA
          type: doku_cimb_va
        - name: Danamon VA
          type: doku_danamon_va
        - name: Indomaret
          type: doku_indomaret
        - name: Mandiri VA
          type: doku_mandiri_va
        - name: OVO
          type: doku_ovo
        - name: Bank Transfer
          type: doku_permata_lite_atm
        - name: DOKU wallet
          type: doku_wallet
        - name: Local Polish Payment Methods
          type: dotpay
        - name: Dragonpay Prepaid Credits
          type: dragonpay_credits
        - name: Online Banking
          type: dragonpay_ebanking
        - name: GCash
          type: dragonpay_gcash
        - name: Over The Counter Banks
          type: dragonpay_otc_banking
        - name: OTC non-Bank via Dragonpay
          type: dragonpay_otc_non_banking
        - name: Convenience Stores
          type: dragonpay_otc_philippines
        - name: 7/11
          type: dragonpay_seveneleven
        - name: eagleeye_voucher
          type: eagleeye_voucher
        - name: Finnish E-Banking
          type: ebanking_FI
        - name: Pay-easy ATM
          type: econtext_atm
        - name: Online Banking
          type: econtext_online
        - name: 7-Eleven
          type: econtext_seven_eleven
        - name: Convenience Stores
          type: econtext_stores
        - name: eft_directdebit_CA
          type: eft_directdebit_CA
        - name: Lastschrift (ELV)
          type: elv
        - name: Bank Payment
          type: entercash
        - name: Nationale Entertainment Card
          type: entertainmentcard
        - name: EPS
          type: eps
        - name: Expert Cadeaukaart
          type: expertgiftcard
        - name: 3x Oney
          type: facilypay_3x
        - name: 4x Oney
          type: facilypay_4x
        - name: Fashioncheque
          type: fashioncheque
        - name: Fawry
          type: fawry
        - name: FijnCadeau
          type: fijncadeau
        - name: Fleurop Bloemenbon
          type: fleuropbloemenbon
        - name: Fonq Giftcard
          type: fonqgiftcard
        - name: Gall & Gall
          type: gallgall
        - name: GCash
          type: gcash
        - name: Generic GiftCard
          type: genericgiftcard
        - name: GiftFor2
          type: giftfor2card
        - name: Givex
          type: givex
        - name: Globe GCash
          type: globegcash
        - name: Goldsmiths Card
          type: goldsmithscard
        - name: GoPay Wallet
          type: gopay_wallet
        - name: OVO
          type: grabpay_ID
        - name: GrabPay
          type: grabpay_PH
        - name: GrabPay
          type: grabpay_SG
        - name: Hallmark Card
          type: hallmarkcard
        - name: HDFC
          type: hdfc
        - name: Hunkemoller Member Card
          type: hmclub
        - name: Hunkemoller Lingerie Card
          type: hmlingerie
        - name: iDEAL
          type: ideal
        - name: igive
          type: igive
        - name: Korean Account Transfer (IniPay)
          type: inicisIniPay_accounttransfer
        - name: Korean Credit Cards (IniPay)
          type: inicisIniPay_creditcard
        - name: Korean Mobile Phone (IniPay)
          type: inicisIniPay_mobilephone
        - name: Korean Virtual Account (IniPay)
          type: inicisIniPay_virtualaccount
        - name: Korean Account Transfer (Mobile)
          type: inicisMobile_accounttransfer
        - name: Korean Credit Cards (Mobile)
          type: inicisMobile_creditcard
        - name: Korean Mobile Phone (Mobile)
          type: inicisMobile_mobilephone
        - name: Korean Virtual Account (Mobile)
          type: inicisMobile_virtualaccount
        - name: Korean Credit Cards
          type: inicis_creditcard
        - name: Interac® Online
          type: interac
        - name: Instant EFT
          type: ipay
        - name: iPay88
          type: ipay88
        - name: isracard
          type: isracard
        - name: Phone Payment
          type: ivr
        - name: Landline phone
          type: ivrLandline
        - name: Mobile phone
          type: ivrMobile
        - name: Kado Wereld
          type: kadowereld
        - name: KakaoPay
          type: kakaopay
        - name: Karen Millen Card
          type: karenmillen
        - name: Karen Millen GiftCard
          type: karenmillengiftcard
        - name: Bank Transfer
          type: kcp_banktransfer
        - name: Korea–issued cards
          type: kcp_creditcard
        - name: PayCo
          type: kcp_payco
        - name: Naver Pay
          type: kcp_naverpay
        - name: Virtual Account via KCP
          type: kcp_va
        - name: Pay later with Klarna.
          type: klarna
        - name: Pay over time with Klarna.
          type: klarna_account
        - name: "Buy Now, Pay Later with Billie"
          type: klarna_b2b
        - name: Pay now with Klarna.
          type: klarna_paynow
        - name: Leisure Card
          type: leisurecard
        - name: China Credit Card
          type: lianlianpay_creditcard
        - name: China Debit Card
          type: lianlianpay_debitcard
        - name: China Online Banking - Credit Card
          type: lianlianpay_ebanking_credit
        - name: China Online Banking - Debit Card
          type: lianlianpay_ebanking_debit
        - name: China Online Banking - Enterprise
          type: lianlianpay_ebanking_enterprise
        - name: Loods5 Cadeaukaart
          type: loods5giftcard
        - name: Loods5 Tegoedbon
          type: loods5prepaidcard
        - name: Love2Shop GiftCard
          type: love2shop
        - name: mada
          type: mada
        - name: Mappin & Webb Card
          type: mappinwebbcard
        - name: MB WAY
          type: mbway
        - name: Amazon Pay
          supportsRecurring: true
          type: amazonpay
        - name: Mercado Pago
          type: mercadopago
        - name: MobilePay
          type: mobilepay
        - name: AliPay via Razer Merchant Services
          type: molpay_alipay
        - name: 7-Eleven
          type: molpay_cash
        - name: CIMB Virtual Account
          type: molpay_cimb_va
        - name: Malaysia E-Banking via Razer Merchant Services
          type: molpay_ebanking_MY
        - name: Vietnam E-Banking
          type: molpay_ebanking_VN
        - name: Malaysia E-Banking
          type: molpay_ebanking_fpx_MY
        - name: eNETS Debit
          type: molpay_enetsd
        - name: epay
          type: molpay_epay
        - name: Esapay
          type: molpay_esapay
        - name: MyClear FPX
          type: molpay_fpx
        - name: Maybank2u
          type: molpay_maybank2u
        - name: Nganluong
          type: molpay_nganluong
        - name: Convenience Stores Thailand
          type: molpay_paysbuy
        - name: MOLPoints
          type: molpay_points
        - name: RHB Now
          type: molpay_rhb
        - name: SAM by SingPost
          type: molpay_singpost
        - name: MOLWallet
          type: molpay_wallet
        - name: MoMo ATM
          type: momo_atm
        - name: Momo Wallet
          type: momo_wallet
        - name: Moneybookers
          type: moneybookers
        - name: Multibanco
          type: multibanco
        - name: De Nationale Musicalcard
          type: musicalcard
        - name: Nationale Bioscoopbon
          type: nationalebioscoopbon
        - name: Nationale Tuinbon
          type: nationaletuinbon
        - name: Nationale Verwen Cadeaubon
          type: nationaleverwencadeaubon
        - name: BankAxess
          type: netaxept_bankaxess
        - name: NETELLER
          type: neteller
        - name: Onebip
          type: onebip
        - name: One Two Three
          type: onetwothree
        - name: Online Banking PL
          type: onlineBanking_PL
        - name: Online banking
          type: openbanking_UK
        - name: Oxxo
          type: oxxo
        - name: Pathe Giftcard
          type: pathegiftcard
        - name: PayBright
          type: paybright
        - name: Maya Wallet
          type: paymaya_wallet
        - name: PayPal
          type: paypal
        - name: Paysafecard
          type: paysafecard
        - name: Payshop
          type: payshop
        - name: PayD AMT via Paythru
          type: paythru_amt
        - name: EFT via Paythru
          type: paythru_eft
        - name: PayTM
          type: paytm
        - name: PayU UPI
          type: payu_IN_upi
        - name: EFT Pro via PayU
          type: payu_ZA_eftpro
        - name: Google Pay
          type: paywithgoogle
        - name: pix
          type: pix
        - name: Plastix
          type: plastix
        - name: Pluim
          type: pluimgiftcard
        - name: Podium Card
          type: podiumcard
        - name: POLi
          type: poli
        - name: PPS
          type: pps
        - name: Primera Cadeaukaart
          type: primeracadeaucard
        - name: Illicado Gift Card
          type: prosodie_illicado
        - name: PSE
          type: pse
        - name: Qiwi Wallet
          type: qiwiwallet
        - name: RatePay Invoice
          type: ratepay
        - name: RatePay Direct Debit
          type: ratepay_directdebit
        - name: Rituals Giftcard
          type: rituals
        - name: Rob Peetoom Giftcard
          type: robpeetoomgiftcard
        - name: SafetyPay
          type: safetypay
        - name: SafetyPay Cash
          type: safetypay_cash
        - name: Shoes&Accessories Cadeau
          type: sagiftcard
        - name: Score Giftcard
          type: scoregiftcard
        - name: SEB Direktbetalning
          type: sebdirectpayment
        - name: SEPA Direct Debit
          type: sepadirectdebit
        - name: 7-Eleven
          type: seveneleven
        - name: Premium SMS
          type: sms
        - name: SVS
          type: svs
        - name: Swish
          type: swish
        - name: TCS Test GiftCard
          type: tcstestgiftcard
        - name: TenPay
          type: tenpay
        - name: The Sting Giftcard
          type: thestinggiftcard
        - name: TrueMoney
          type: truemoney
        - name: Trustly
          type: trustly
        - name: Online Banking by Trustpay
          type: trustpay
        - name: TWINT
          type: twint
        - name: Ukash
          type: ukash
        - name: UnionPay
          type: unionpay
        - name: UPI Collect
          type: upi_collect
        - name: Valuelink
          type: valuelink
        - name: V&D Cadeaukaart
          type: vdcadeaucard
        - name: Vipps
          type: vipps
        - name: Visa Checkout
          type: visacheckout
        - name: VVV Cadeaubon
          type: vvvcadeaubon
        - name: VVV Giftcard
          type: vvvgiftcard
        - name: Webshop Giftcard
          type: webshopgiftcard
        - name: WeChat Pay
          type: wechatpayMiniProgram
        - name: WeChat Pay
          type: wechatpayQR
        - name: WeChat Pay
          type: wechatpayWeb
        - name: WE Fashion Giftcard
          type: wefashiongiftcard
        - name: Western Union
          type: westernunion
        - name: Winkel Cheque
          type: winkelcheque
        - name: WOS Card
          type: woscard
        - name: Alfa-Click
          type: yandex_alfaclick
        - name: Pay using bank card
          type: yandex_bank_card
        - name: Cash terminals
          type: yandex_cash
        - name: Pay using installments
          type: yandex_installments
        - name: YooMoney
          type: yandex_money
        - name: Promsvyazbank
          type: yandex_promsvyazbank
        - name: SberPay
          type: yandex_sberbank
        - name: WebMoney
          type: yandex_webmoney
        - name: Your Gift
          type: yourgift
        - name: Zip
          type: zip
    post-paymentMethods-filtered:
      summary: Get payment methods based on the country and amount
      value:
        amount:
          currency: EUR
          value: 1000
        countryCode: NL
        merchantAccount: YOUR_MERCHANT_ACCOUNT
        shopperLocale: nl-NL
    post-paymentMethods-filtered-200:
      summary: Example response for request 'filtered'
      value:
        paymentMethods:
        - name: iDEAL
          type: ideal
        - name: Hitelkártya
          type: scheme
        - name: PayPal
          type: paypal
        - name: AfterPay Invoice
          type: afterpay_default
        - name: Pay later with Klarna.
          type: klarna
        - name: SEPA Direct Debit
          type: sepadirectdebit
        - name: Paysafecard
          type: paysafecard
        - name: Bijenkorf Cadeaucard
          type: bijcadeaucard
        - name: Fonq Giftcard
          type: fonqgiftcard
        - name: Bank Transfer (NL)
          type: bankTransfer_NL
        - name: Pathe Giftcard
          type: pathegiftcard
        - name: VVV Giftcard
          type: vvvgiftcard
        - name: Podium Card
          type: podiumcard
        - name: RatePay Direct Debit
          type: ratepay_directdebit
        - name: Rituals Giftcard
          type: rituals
        - name: Hunkemoller Lingerie Card
          type: hmlingerie
        - name: Primera Cadeaukaart
          type: primeracadeaucard
        - name: Fashioncheque
          type: fashioncheque
        - name: NETELLER
          type: neteller
        - name: Adyen Voucher
          type: adyen_test_voucher
        - name: AfterPay B2B
          type: afterpay_b2b
        - name: AfterPay DirectDebit
          type: afterpay_directdebit
        - name: AliPay
          type: alipay
        - name: AliPay
          type: alipay_wap
        - name: Android Pay
          type: androidpay
        - name: Apple Pay
          type: applepay
        - name: Baby Gift Card
          type: babygiftcard
        - name: SEPA Bank Transfer
          type: bankTransfer_IBAN
        - name: Bloemen Giftcard
          type: bloemengiftcard
        - name: Boekenbon Giftcard
          type: boekenbon
        - name: Cash-Ticket
          type: cashticket
        - name: Chasin Giftcard
          type: chasingiftcard
        - name: ClickandBuy
          type: clickandbuy
        - name: Costes Giftcard
          type: costesgiftcard
        - name: custom_settlement
          type: custom_settlement
        - name: eft_directdebit_CA
          type: eft_directdebit_CA
        - name: Nationale Entertainment Card
          type: entertainmentcard
        - name: Expert Cadeaukaart
          type: expertgiftcard
        - name: FijnCadeau
          type: fijncadeau
        - name: Fleurop Bloemenbon
          type: fleuropbloemenbon
        - name: Gall & Gall
          type: gallgall
        - name: Generic GiftCard
          type: genericgiftcard
        - name: GiftFor2
          type: giftfor2card
        - name: Givex
          type: givex
        - name: Goldsmiths Card
          type: goldsmithscard
        - name: Hunkemoller Member Card
          type: hmclub
        - name: Phone Payment
          type: ivr
        - name: Landline phone
          type: ivrLandline
        - name: Mobile phone
          type: ivrMobile
        - name: Kado Wereld
          type: kadowereld
        - name: Karen Millen GiftCard
          type: karenmillengiftcard
        - name: Leisure Card
          type: leisurecard
        - name: Loods5 Cadeaukaart
          type: loods5giftcard
        - name: Loods5 Tegoedbon
          type: loods5prepaidcard
        - name: Amazon Pay
          supportsRecurring: true
          type: amazonpay
        - name: MOLPoints
          type: molpay_points
        - name: Moneybookers
          type: moneybookers
        - name: De Nationale Musicalcard
          type: musicalcard
        - name: Nationale Bioscoopbon
          type: nationalebioscoopbon
        - name: Nationale Tuinbon
          type: nationaletuinbon
        - name: Nationale Verwen Cadeaubon
          type: nationaleverwencadeaubon
        - name: Onebip
          type: onebip
        - name: Google Pay
          type: paywithgoogle
        - name: Plastix
          type: plastix
        - name: Pluim
          type: pluimgiftcard
        - name: Illicado Gift Card
          type: prosodie_illicado
        - name: RatePay Invoice
          type: ratepay
        - name: Rob Peetoom Giftcard
          type: robpeetoomgiftcard
        - name: Shoes&Accessories Cadeau
          type: sagiftcard
        - name: Score Giftcard
          type: scoregiftcard
        - name: Premium SMS
          type: sms
        - name: SVS
          type: svs
        - name: TCS Test GiftCard
          type: tcstestgiftcard
        - name: The Sting Giftcard
          type: thestinggiftcard
        - name: Ukash
          type: ukash
        - name: UnionPay
          type: unionpay
        - name: Valuelink
          type: valuelink
        - name: V&D Cadeaukaart
          type: vdcadeaucard
        - name: Visa Checkout
          type: visacheckout
        - name: VVV Cadeaubon
          type: vvvcadeaubon
        - name: Webshop Giftcard
          type: webshopgiftcard
        - name: WE Fashion Giftcard
          type: wefashiongiftcard
        - name: Western Union
          type: westernunion
        - name: Winkel Cheque
          type: winkelcheque
        - name: Your Gift
          type: yourgift
    post-paymentMethods-include-stored:
      summary: Get payment methods including stored card details
      value:
        amount:
          currency: EUR
          value: 1000
        countryCode: NL
        merchantAccount: YOUR_MERCHANT_ACCOUNT
        shopperReference: YOUR_SHOPPER_REFERENCE
    post-paymentMethods-include-stored-200:
      summary: Example response that includes stored payment methods
      value:
        paymentMethods:
        - name: iDEAL
          type: ideal
        - name: Credit Card
          type: scheme
        - name: PayPal
          type: paypal
        - name: AfterPay Invoice
          type: afterpay_default
        - name: Pay later with Klarna.
          type: klarna
        - name: SEPA Direct Debit
          type: sepadirectdebit
        - name: Paysafecard
          type: paysafecard
        - name: Bijenkorf Cadeaucard
          type: bijcadeaucard
        - name: Fonq Giftcard
          type: fonqgiftcard
        - name: Bank Transfer (NL)
          type: bankTransfer_NL
        - name: Pathe Giftcard
          type: pathegiftcard
        - name: VVV Giftcard
          type: vvvgiftcard
        - name: Podium Card
          type: podiumcard
        - name: RatePay Direct Debit
          type: ratepay_directdebit
        - name: Rituals Giftcard
          type: rituals
        - name: Hunkemoller Lingerie Card
          type: hmlingerie
        - name: Primera Cadeaukaart
          type: primeracadeaucard
        - name: Fashioncheque
          type: fashioncheque
        - name: NETELLER
          type: neteller
        - name: Adyen Voucher
          type: adyen_test_voucher
        - name: AfterPay B2B
          type: afterpay_b2b
        - name: AfterPay DirectDebit
          type: afterpay_directdebit
        - name: AliPay
          type: alipay
        - name: AliPay
          type: alipay_wap
        - name: Android Pay
          type: androidpay
        - name: Apple Pay
          type: applepay
        - name: Baby Gift Card
          type: babygiftcard
        - name: SEPA Bank Transfer
          type: bankTransfer_IBAN
        - name: Bloemen Giftcard
          type: bloemengiftcard
        - name: Boekenbon Giftcard
          type: boekenbon
        - name: Cash-Ticket
          type: cashticket
        - name: Chasin Giftcard
          type: chasingiftcard
        - name: ClickandBuy
          type: clickandbuy
        - name: Costes Giftcard
          type: costesgiftcard
        - name: custom_settlement
          type: custom_settlement
        - name: eft_directdebit_CA
          type: eft_directdebit_CA
        - name: Nationale Entertainment Card
          type: entertainmentcard
        - name: Expert Cadeaukaart
          type: expertgiftcard
        - name: FijnCadeau
          type: fijncadeau
        - name: Fleurop Bloemenbon
          type: fleuropbloemenbon
        - name: Gall & Gall
          type: gallgall
        - name: Generic GiftCard
          type: genericgiftcard
        - name: GiftFor2
          type: giftfor2card
        - name: Givex
          type: givex
        - name: Goldsmiths Card
          type: goldsmithscard
        - name: Hunkemoller Member Card
          type: hmclub
        - name: Phone Payment
          type: ivr
        - name: Landline phone
          type: ivrLandline
        - name: Mobile phone
          type: ivrMobile
        - name: Kado Wereld
          type: kadowereld
        - name: Karen Millen GiftCard
          type: karenmillengiftcard
        - name: Leisure Card
          type: leisurecard
        - name: Loods5 Cadeaukaart
          type: loods5giftcard
        - name: Loods5 Tegoedbon
          type: loods5prepaidcard
        - name: Amazon Pay
          supportsRecurring: true
          type: amazonpay
        - name: MOLPoints
          type: molpay_points
        - name: Moneybookers
          type: moneybookers
        - name: De Nationale Musicalcard
          type: musicalcard
        - name: Nationale Bioscoopbon
          type: nationalebioscoopbon
        - name: Nationale Tuinbon
          type: nationaletuinbon
        - name: Nationale Verwen Cadeaubon
          type: nationaleverwencadeaubon
        - name: Onebip
          type: onebip
        - name: Google Pay
          type: paywithgoogle
        - name: Plastix
          type: plastix
        - name: Pluim
          type: pluimgiftcard
        - name: Illicado Gift Card
          type: prosodie_illicado
        - name: RatePay Invoice
          type: ratepay
        - name: Rob Peetoom Giftcard
          type: robpeetoomgiftcard
        - name: Shoes&Accessories Cadeau
          type: sagiftcard
        - name: Score Giftcard
          type: scoregiftcard
        - name: Premium SMS
          type: sms
        - name: SVS
          type: svs
        - name: TCS Test GiftCard
          type: tcstestgiftcard
        - name: The Sting Giftcard
          type: thestinggiftcard
        - name: Ukash
          type: ukash
        - name: UnionPay
          type: unionpay
        - name: Valuelink
          type: valuelink
        - name: V&D Cadeaukaart
          type: vdcadeaucard
        - name: Visa Checkout
          type: visacheckout
        - name: VVV Cadeaubon
          type: vvvcadeaubon
        - name: Webshop Giftcard
          type: webshopgiftcard
        - name: WE Fashion Giftcard
          type: wefashiongiftcard
        - name: Western Union
          type: westernunion
        - name: Winkel Cheque
          type: winkelcheque
        - name: Your Gift
          type: yourgift
        storedPaymentMethods:
        - brand: visa
          expiryMonth: "10"
          expiryYear: "30"
          holderName: John Smith
          id: "7219687191761347"
          issuerName: ISSUER_NAME
          lastFour: "1111"
          name: VISA
          shopperEmail: john.smith@example.com
          shopperReference: YOUR_SHOPPER_REFERENCE
          supportedRecurringProcessingModels:
          - CardOnFile
          - Subscription
          - UnscheduledCardOnFile
          type: scheme
    post-paymentSession-android:
      summary: Set up a payment session (Android)
      value:
        amount:
          currency: EUR
          value: 17408
        channel: Android
        countryCode: NL
        merchantAccount: YOUR_MERCHANT_ACCOUNT
        reference: Your order number
        returnUrl: app://
        sessionValidity: 2017-04-06T13:09:13Z
        shopperLocale: nl_NL
        shopperReference: YOUR_SHOPPER_REFERENCE
        token: TOKEN_YOU_GET_FROM_CHECKOUT_SDK
    post-paymentSession-enableOneClick:
      summary: Set up a payment session with the option to store card details
      value:
        amount:
          currency: EUR
          value: 17408
        channel: Web
        countryCode: NL
        enableOneClick: true
        enableRecurring: true
        merchantAccount: YOUR_MERCHANT_ACCOUNT
        origin: https://www.yourwebsite.com
        reference: Your order number
        returnUrl: https://www.yourshop.com/checkout/result
        sdkVersion: 1.7.0
        shopperLocale: nl_NL
        shopperReference: YOUR_SHOPPER_REFERENCE
    post-paymentSession-enableOneClick-200:
      summary: Example response for request 'enableOneClick'
      value:
        paymentSession: eyJjaGVja291dHNob3BwZXJCYXN...
    post-paymentSession-ios:
      summary: Set up a payment session (iOS)
      value:
        amount:
          currency: EUR
          value: 17408
        channel: iOS
        countryCode: NL
        merchantAccount: YOUR_MERCHANT_ACCOUNT
        reference: Your order number
        returnUrl: app://
        sessionValidity: 2017-04-06T13:09:13Z
        shopperLocale: nl_NL
        shopperReference: YOUR_SHOPPER_REFERENCE
        token: TOKEN_YOU_GET_FROM_CHECKOUT_SDK
    post-paymentSession-split:
      summary: Split a payment between a sub-merchant and a platform account
      value:
        additionalData:
          split.api: "1"
          split.currencyCode: EUR
          split.item1.account: "151272963"
          split.item1.amount: "6000"
          split.item1.description: "Porcelain Doll: Eliza (20cm)"
          split.item1.reference: "6124145"
          split.item1.type: MarketPlace
          split.item2.amount: "200"
          split.item2.reference: "6124146"
          split.item2.type: Commission
          split.nrOfItems: "2"
          split.totalAmount: "6200"
        amount:
          currency: EUR
          value: 6200
        channel: Android
        countryCode: NL
        merchantAccount: YOUR_MERCHANT_ACCOUNT
        reference: Your order number
        returnUrl: app://
        sessionValidity: 2017-04-06T13:09:13Z
        shopperLocale: nl_NL
        shopperReference: YOUR_SHOPPER_REFERENCE
        token: TOKEN_YOU_GET_FROM_CHECKOUT_SDK
    post-paymentSession-web:
      summary: Set up a payment session (Web)
      value:
        amount:
          currency: EUR
          value: 17408
        channel: Web
        countryCode: NL
        merchantAccount: YOUR_MERCHANT_ACCOUNT
        origin: https://www.yourwebsite.com
        reference: Your order number
        returnUrl: https://www.yourshop.com/checkout/result
        sdkVersion: 1.9.5
        shopperLocale: nl_NL
        shopperReference: YOUR_SHOPPER_REFERENCE
    post-paymentSession-web-200:
      summary: Example response for request 'web'
      value:
        paymentSession: eyJjaGVja291dHNob3BwZXJCYXN...
    post-payments-applepay:
      summary: Make an Apple Pay payment
      value:
        amount:
          currency: USD
          value: 1000
        merchantAccount: YOUR_MERCHANT_ACCOUNT
        paymentMethod:
          applePayToken: VNRWtuNlNEWkRCSm1xWndjMDFFbktkQU...
          type: applepay
        reference: Your order number
        returnUrl: https://your-company.com/...
    post-payments-card-3d-secure-2-web:
      summary: "Make a card payment with 3D Secure 2 native authentication, using\
        \ encrypted card details"
      value:
        amount:
          currency: EUR
          value: 1000
        authenticationData:
          threeDSRequestData:
            nativeThreeDS: preferred
        billingAddress:
          city: New York
          country: US
          houseNumberOrName: 37C
          postalCode: "10039"
          stateOrProvince: NY
          street: Redwood Block
        browserInfo:
          acceptHeader: "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8"
          colorDepth: 24
          javaEnabled: true
          language: nl-NL
          screenHeight: 723
          screenWidth: 1536
          timeZoneOffset: 0
          userAgent: "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36\
            \ (KHTML, like Gecko) Chrome/70.0.3538.110 Safari/537.36"
        channel: Web
        merchantAccount: YOUR_MERCHANT_ACCOUNT
        origin: https://your-company.com
        paymentMethod:
          encryptedCardNumber: test_4035501428146300
          encryptedExpiryMonth: test_03
          encryptedExpiryYear: test_2030
          encryptedSecurityCode: test_737
          holderName: John Smith
          type: scheme
        reference: YOUR_ORDER_NUMBER
        returnUrl: https://your-company.com/checkout/
        shopperEmail: s.hopper@test.com
        shopperIP: 192.0.2.1
    post-payments-card-3d-secure-direct:
      summary: Make card payment with 3D Secure redirect authentication
      value:
        amount:
          currency: USD
          value: 1000
        browserInfo:
          acceptHeader: "text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8"
          colorDepth: 10
          javaEnabled: true
          language: en
          screenHeight: 2000
          screenWidth: 3000
          timeZoneOffset: 5
          userAgent: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9) Gecko/2008052912
            Firefox/3.0
        merchantAccount: YOUR_MERCHANT_ACCOUNT
        paymentMethod:
          cvc: "737"
          expiryMonth: "03"
          expiryYear: "2030"
          holderName: John Smith
          number: "4212345678901237"
          type: scheme
        reference: Your order number
        returnUrl: https://your-company.com/...
    post-payments-card-direct:
      summary: Make a card payment
      value:
        amount:
          currency: USD
          value: 1000
        merchantAccount: YOUR_MERCHANT_ACCOUNT
        paymentMethod:
          cvc: "737"
          expiryMonth: "03"
          expiryYear: "2030"
          holderName: John Smith
          number: "4111111111111111"
          type: scheme
        reference: Your order number
        returnUrl: https://your-company.com/...
    post-payments-card-direct-200:
      summary: Successful card payment
      value:
        additionalData:
          acquirerCode: TestPmmAcquirer
          acquirerReference: 8PQMP9VEP3H
          authCode: "044925"
          avsResult: 4 AVS not supported for this card type
          avsResultRaw: "4"
          cvcResult: 1 Matches
          cvcResultRaw: M
          refusalReasonRaw: AUTHORISED
        merchantReference: string
        pspReference: 993617895204576J
        resultCode: Authorised
    post-payments-card-securedfields:
      summary: Make a card payment using encrypted card details
      value:
        amount:
          currency: USD
          value: 1000
        merchantAccount: YOUR_MERCHANT_ACCOUNT
        paymentMethod:
          encryptedCardNumber: test_4111111111111111
          encryptedExpiryMonth: test_03
          encryptedExpiryYear: test_2030
          encryptedSecurityCode: test_737
          type: scheme
        reference: Your order number
        returnUrl: https://your-company.com/...
    post-payments-card-securedfields-200:
      summary: Successful card payment using encrypted card details
      value:
        additionalData:
          acquirerCode: TestPmmAcquirer
          acquirerReference: 8PQMP9VIE9N
          authCode: "065696"
          avsResult: 4 AVS not supported for this card type
          avsResultRaw: "4"
          cvcResult: 1 Matches
          cvcResultRaw: M
          refusalReasonRaw: AUTHORISED
        merchantReference: string
        pspReference: 993617895215577D
        resultCode: Authorised
    post-payments-details-00.redirect:
      description: Example request when submitting a redirect result
      summary: Submit the redirect result
      value:
        details:
          redirectResult: X6XtfGC3!Y...
    post-payments-details-00.redirect-200:
      description: Example response when submitting the redirect result
      summary: Payment authorised
      value:
        pspReference: V4HZ4RBFJGXXGN82
        resultCode: Authorised
    post-payments-details-3d-secure-2-native:
      summary: Submit 3D Secure 2 authentication result
      value:
        details:
          threeDSResult: eyJ0cmFuc1N0YXR1cyI6IlkifQ==
    post-payments-enableOneClick-SF:
      summary: "Tokenize card details for one-off payments, using encrypted card details"
      value:
        amount:
          currency: USD
          value: 1000
        merchantAccount: YOUR_MERCHANT_ACCOUNT
        paymentMethod:
          encryptedCardNumber: test_4111111111111111
          encryptedExpiryMonth: test_03
          encryptedExpiryYear: test_2030
          encryptedSecurityCode: test_737
          type: scheme
        recurringProcessingModel: CardOnFile
        reference: Your order number
        returnUrl: https://your-company.com/...
        shopperInteraction: Ecommerce
        shopperReference: YOUR_SHOPPER_REFERENCE
        storePaymentMethod: true
    post-payments-enableOneClick-SF-200:
      summary: "Card details tokenized for one-off payments, using encrypted card\
        \ details"
      value:
        additionalData:
          acquirerCode: TestPmmAcquirer
          acquirerReference: 8PQMP9VC172
          authCode: "082338"
          avsResult: 4 AVS not supported for this card type
          avsResultRaw: "4"
          cvcResult: 1 Matches
          cvcResultRaw: M
          recurring.recurringDetailReference: "9916178934434753"
          recurring.shopperReference: YOUR_UNIQUE_SHOPPER_ID_IOfW3k9G2PvXFu2j
          recurringProcessingModel: CardOnFile
          refusalReasonRaw: AUTHORISED
        merchantReference: string
        pspReference: 993617895195570C
        resultCode: Authorised
    post-payments-enableOneClick-raw:
      summary: Tokenize card details for one-off payments
      value:
        amount:
          currency: USD
          value: 1000
        merchantAccount: YOUR_MERCHANT_ACCOUNT
        paymentMethod:
          cvc: "737"
          expiryMonth: "03"
          expiryYear: "2030"
          holderName: John Smith
          number: "4111111111111111"
          type: scheme
        recurringProcessingModel: CardOnFile
        reference: Your order number
        returnUrl: https://your-company.com/...
        shopperInteraction: Ecommerce
        shopperReference: YOUR_SHOPPER_REFERENCE
        storePaymentMethod: true
    post-payments-enableOneClick-raw-200:
      summary: Card details tokenized for one-off payments
      value:
        additionalData:
          acquirerCode: TestPmmAcquirer
          acquirerReference: 8PQMP9VCKO0
          authCode: "003704"
          avsResult: 4 AVS not supported for this card type
          avsResultRaw: "4"
          cvcResult: 1 Matches
          cvcResultRaw: M
          recurring.recurringDetailReference: "9916178934434753"
          recurring.shopperReference: YOUR_UNIQUE_SHOPPER_ID_IOfW3k9G2PvXFu2j
          recurringProcessingModel: CardOnFile
          refusalReasonRaw: AUTHORISED
        merchantReference: string
        pspReference: 993617895197573E
        resultCode: Authorised
    post-payments-googlepay:
      summary: Make a Google Pay payment
      value:
        amount:
          currency: USD
          value: 1000
        merchantAccount: YourMerchantAccount
        paymentMethod:
          googlePayToken: ==Payload as retrieved from Google Pay response==
          type: paywithgoogle
        reference: Your order number
        returnUrl: https://your-company.com/...
    post-payments-ideal:
      summary: Make an iDEAL payment
      value:
        amount:
          currency: EUR
          value: 1000
        merchantAccount: YOUR_MERCHANT_ACCOUNT
        paymentMethod:
          issuer: "1121"
          type: ideal
        reference: Your order number
        returnUrl: https://your-company.com/...
    post-payments-ideal-200:
      summary: Successful iDEAL payment
      value:
        action:
          method: GET
          paymentMethodType: ideal
          type: redirect
          url: https://test.adyen.com/hpp/checkout.shtml?u=redirectIdeal&p=eJxtUl1zmzAQ-DXwZgaB*XrQg0Nwg2s3DTVtJy8ZRbqAYlsikmCMf30FddNMpzOak2bvZm-3Ts*KCJZLBpgzIEeX9kqBoOMMFXXlcq17UCXDCAXIPYGiLRFmRanshcF70GZ3xd6TpTDQKGK4FJ4ZO8D5XZF-vq-3T5*KL0VV5v*tHEBpe*Pob5cKXmBSA1gbxUXzIWF6JW6JITjLUIySNItQliVxsH6v*cYbnNSHZsMfcydYr8SrE9yY7HRjavMAlyyIjhuK*tzszj9ew-uHrN854a3bkfEE1uBp9od833cV6Lra4taYzglXlsueo6Tk2EptLJL6qW8h2gI9yN7oVnYdKItoUAOnoO3z62-aUlB5sk4qYFwBNTYzoD9015odmFYyJ1z-M2yr7uO4nSBW8xisNpua1NlG0SQwmiTaMMpeLWzDjojRs-cMep7natDTrL*TI2fcjDjwA7Twlws-3aPYOkKZDVH26F69THtShE57woUlmpSBqw9czP*k65*9IfCuq0jiJElQGi69Szn8DPebmKXDWATt6vxEWduea7*sLy-Lt*1bcbctGhgZk78A5S7dyQ
        paymentData: Ab02b4c0!BQABAgCINC3kOq5nsaj4k+VaArf6VIiTWkYALwijaS+VOvzTSf76Un3WYBgKJlEBqALZW3vlw+IDQGw5jqkVBO4axEJEFKu5fDL2RkeHbm+aHY7tlRVsjvNIcVTNbMtHJcclHakOVTrtTCQfspf11XGsmENUaL45bdeu07iDBtpnIvd39p6g8OVaLcSIGaA8Zosd93hs0h3lvIePt3QTekeOUH+zrMMfLyy/4QKBZtLjnWo3/4U0e2tsneOudynW0l5i+VyobWOZb7yZUj7v9GMVpAZ3YEqNZ1aWJlSmty9TJTpXp4PQQcNeELQAfTu4zaarMq5btRZpcmDRvSOQK0Qo/PvfWrv/si0c1NPr5EM43ebdkLiDEUSIGBDTellblheOaRsgD0JlrNLOHSpS6iCiyY5FQaWx7FpnYReP/un2f/2mMGxdehif1MqWWZzgAhjdA4kksQVb8eMIGLY2IveJ4iTmDAkFbhIATs2SuWhYBGqFnBGeH1jlJCJDDV8/XJ0IcX1/r0qC3wsUFecoElZ6gts+4tlfPUoeuSH/NFmyBEzrjZbgCqCH9YVXa/+W+dwQCOQ0G7K4SJepnlNcmpCtI29zMZgeRqmtzI0hImvQYt188MXK44ieh2wsmpVv6Y9EGIgJVR+t1IZKizm6Q2D5MCUC1uAVwu2iw7Xt5Re1XcWSaBC/nZt2iHaZF7kpgIXfrFshAEp7ImtleSI6IkFGMEFBQTEwM0NBNTM3RUFFRDg3QzI0REQ1MzkwOUI4MEE3OEE5MjNFMzgyM0Q2OERBQ0M5NEI5RkY4MzA1REMifVTgdc9kCwE5LJyeGFVSr+P70S1hwc62Ad03Oy1Ksxr823klh1hxYQDWBJETNf/YmYC9cHDGr6LxMQ8OOnwfg2xjsVU7ZUwWJbHid1vU/oJzHBXe54lHMNNre0HaQD6TSokVpazQsY3hRB84uevmeT7KVal98iqXd755VuiIxwHhhywaub1ogyQQEVxNGWx2+vL5Vh8NKmoghZQ+NLSZWRn77hJTGV+lKJdseGA9nV7DSlWodNmZ8RyRfQoqwtaK9woQ87PIN7XqSznZMS1HWMOE/aDLEXLJEfozHWrHuGVmn6Hupt/fBnm1GckSsMGeQNKS+4XmKGrJefrHDmdoZVBaZS9UjxfKjD2sCwu5vutgb6SLrECgCvu3q5/LTyFeTuPV1ZZrlpapC6umnWmSKmj/SdnhXJO00PNuFT2WY/GyH0cyA498zApE6VtLx2e9IvS01Oex6ZCRFDJ6sDCBzVN5g60vsm9tBut6trpQWyryqVM2cQ39xh9olCQ5Ml+2h4YFV5gA+1c0i+e6SeMtFJN788NW2EnQT/2pzM/rNAaSVwSf8vJcx3ZB9n8Pf8xi2buKZFEkyJpZJSg22JC/38D1E0tPRpQ7gZ1Z86meAGXnfKUtA+w2FllB2Y0dMrqi8jXnS/mqMPBmPVnIxUW96e40cB7W8E0VDf1IKx/wQphI8/vM3UOSqC81agmnyQ3nIDrAy8vqMOD+d1xcoElzRNy0OxU6v/90IKkhfAKr3Tur7Vb3FD6Pi/XrujJX95UlRd7fmaAI7Po1cIh1v7HEhsCNoh1z7WFNag==
        redirect:
          method: GET
          url: https://test.adyen.com/hpp/checkout.shtml?u=redirectIdeal&p=eJxtUl1zmzAQ-DXwZgaB*XrQg0Nwg2s3DTVtJy8ZRbqAYlsikmCMf30FddNMpzOak2bvZm-3Ts*KCJZLBpgzIEeX9kqBoOMMFXXlcq17UCXDCAXIPYGiLRFmRanshcF70GZ3xd6TpTDQKGK4FJ4ZO8D5XZF-vq-3T5*KL0VV5v*tHEBpe*Pob5cKXmBSA1gbxUXzIWF6JW6JITjLUIySNItQliVxsH6v*cYbnNSHZsMfcydYr8SrE9yY7HRjavMAlyyIjhuK*tzszj9ew-uHrN854a3bkfEE1uBp9od833cV6Lra4taYzglXlsueo6Tk2EptLJL6qW8h2gI9yN7oVnYdKItoUAOnoO3z62-aUlB5sk4qYFwBNTYzoD9015odmFYyJ1z-M2yr7uO4nSBW8xisNpua1NlG0SQwmiTaMMpeLWzDjojRs-cMep7natDTrL*TI2fcjDjwA7Twlws-3aPYOkKZDVH26F69THtShE57woUlmpSBqw9czP*k65*9IfCuq0jiJElQGi69Szn8DPebmKXDWATt6vxEWduea7*sLy-Lt*1bcbctGhgZk78A5S7dyQ
        resultCode: RedirectShopper
    post-payments-klarna:
      summary: Make a Klarna payment
      value:
        amount:
          currency: SEK
          value: 1000
        billingAddress:
          city: Ankeborg
          country: SE
          houseNumberOrName: "1"
          postalCode: "12345"
          street: Stargatan
        countryCode: SE
        deliveryAddress:
          city: Ankeborg
          country: SE
          houseNumberOrName: "1"
          postalCode: "12345"
          street: Stargatan
        lineItems:
        - amountExcludingTax: 331
          amountIncludingTax: 400
          description: Shoes
          id: "Item #1"
          imageUrl: URL_TO_PICTURE_OF_PURCHASED_ITEM
          productUrl: URL_TO_PURCHASED_ITEM
          quantity: 1
          taxAmount: 69
          taxPercentage: 2100
        - amountExcludingTax: 248
          amountIncludingTax: 300
          description: Socks
          id: "Item #2"
          imageUrl: URL_TO_PICTURE_OF_PURCHASED_ITEM
          productUrl: URL_TO_PURCHASED_ITEM
          quantity: 2
          taxAmount: 52
          taxPercentage: 2100
        merchantAccount: YOUR_MERCHANT_ACCOUNT
        paymentMethod:
          type: klarna
        reference: YOUR_ORDER_REFERENCE
        returnUrl: https://www.your-company.com/...
        shopperEmail: youremail@email.com
        shopperLocale: en_US
        shopperName:
          firstName: Testperson-se
          lastName: Approved
        shopperReference: YOUR_UNIQUE_SHOPPER_ID_IOfW3k9G2PvXFu2j
        telephoneNumber: +46 840 839 298
    post-payments-oneclick-direct:
      summary: Make a one-off payment with a token and CVV
      value:
        amount:
          currency: USD
          value: 1000
        merchantAccount: YOUR_MERCHANT_ACCOUNT
        paymentMethod:
          cvc: "737"
          storedPaymentMethodId: "8416038790273850"
          type: scheme
        reference: Your order number
        returnUrl: https://your-company.com/...
        shopperReference: YOUR_UNIQUE_SHOPPER_ID_6738oneoff
    post-payments-oneclick-securedfields:
      summary: "Make a one-off payment with a token and CVV, using encrypted card\
        \ details"
      value:
        amount:
          currency: USD
          value: 1000
        merchantAccount: YOUR_MERCHANT_ACCOUNT
        paymentMethod:
          encryptedSecurityCode: adyenjs_0_1_18$MT6ppy0FAMVMLH...
          storedPaymentMethodId: "8416038790273850"
          type: scheme
        recurringProcessingModel: CardOnFile
        reference: Your order number
        returnUrl: https://your-company.com/...
        shopperInteraction: ContAuth
        shopperReference: YOUR_UNIQUE_SHOPPER_ID_6738oneoff
    post-payments-paymentPspReference-amountUpdates-amount-update:
      description: Example request to update the amount of a payment
      summary: Update the amount of an authorised payment
      value:
        amount:
          currency: EUR
          value: 2500
        merchantAccount: YOUR_MERCHANT_ACCOUNT
        reference: YOUR_UNIQUE_REFERENCE
    post-payments-paymentPspReference-amountUpdates-amount-update-201:
      description: Example response when an amount update was requested
      summary: Amount update requested
      value:
        amount:
          currency: EUR
          value: 2500
        merchantAccount: YOUR_MERCHANT_ACCOUNT
        paymentPspReference: 993617894903480A
        pspReference: 993617894906488A
        reference: YOUR_UNIQUE_REFERENCE
        status: received
    post-payments-paymentPspReference-cancels-cancel-with-psp-reference:
      description: Example cancel request with a PSP reference
      summary: Cancel payment using a PSP reference
      value:
        merchantAccount: YOUR_MERCHANT_ACCOUNT
        reference: YOUR_UNIQUE_REFERENCE
    post-payments-paymentPspReference-cancels-cancel-with-psp-reference-201:
      description: Example response when a refund was requested
      summary: Refund requested
      value:
        merchantAccount: YOUR_MERCHANT_ACCOUNT
        paymentPspReference: 993617894903480A
        pspReference: 993617894906488A
        reference: YOUR_UNIQUE_REFERENCE
        status: received
    post-payments-paymentPspReference-captures-capture:
      description: Example capture request
      summary: Capture an authorised payment
      value:
        amount:
          currency: EUR
          value: 2000
        merchantAccount: YOUR_MERCHANT_ACCOUNT
        reference: YOUR_UNIQUE_REFERENCE
    post-payments-paymentPspReference-captures-capture-201:
      description: Example response when a capture was requested
      summary: Capture requested
      value:
        amount:
          currency: EUR
          value: 2000
        merchantAccount: YOUR_MERCHANT_ACCOUNT
        paymentPspReference: 993617894903480A
        pspReference: 993617894906488A
        reference: YOUR_UNIQUE_REFERENCE
        status: received
    post-payments-paymentPspReference-refunds-refund:
      description: Example refund request
      summary: Refund a payment
      value:
        amount:
          currency: EUR
          value: 2500
        merchantAccount: YOUR_MERCHANT_ACCOUNT
        reference: YOUR_UNIQUE_REFERENCE
    post-payments-paymentPspReference-refunds-refund-201:
      description: Example response when a refund was requested
      summary: Refund requested
      value:
        amount:
          currency: EUR
          value: 2500
        merchantAccount: YOUR_MERCHANT_ACCOUNT
        paymentPspReference: 993617894903480A
        pspReference: 993617894906488A
        reference: YOUR_UNIQUE_REFERENCE
        status: received
    post-payments-paymentPspReference-reversals-reversal:
      description: Example request to reverse a payment
      summary: Reverse (cancel or refund) a payment
      value:
        merchantAccount: YOUR_MERCHANT_ACCOUNT
        reference: YOUR_UNIQUE_REFERENCE
    post-payments-paymentPspReference-reversals-reversal-201:
      description: Example response when a payment reversal was requested
      summary: Payment reversal requested
      value:
        merchantAccount: YOUR_MERCHANT_ACCOUNT
        paymentPspReference: 993617894903480A
        pspReference: 993617894906488A
        reference: YOUR_UNIQUE_REFERENCE
        status: received
    post-payments-recurring:
      summary: Make a card payment with a token
      value:
        amount:
          currency: USD
          value: 1000
        merchantAccount: YOUR_MERCHANT_ACCOUNT
        paymentMethod:
          storedPaymentMethodId: "8316038796685850"
          type: scheme
        recurringProcessingModel: Subscription
        reference: Your order number
        returnUrl: https://your-company.com/...
        shopperInteraction: ContAuth
        shopperReference: YOUR_UNIQUE_SHOPPER_ID_IOfW3subscription
    post-payments-result-basic:
      summary: Verify payment results
      value:
        payload: VALUE_YOU_GET_FROM_CHECKOUT_SDK
    post-payments-result-basic-200:
      summary: Payment authorised
      value:
        merchantReference: Your order number
        paymentMethod: ideal
        pspReference: V4HZ4RBFJGXXGN82
        shopperLocale: nl_NL
    post-payments-split-balanceplatform:
      summary: Split a payment between balance accounts
      value:
        amount:
          currency: USD
          value: 40000
        merchantAccount: YOUR_MERCHANT_ACCOUNT
        paymentMethod:
          cvc: "737"
          expiryMonth: "03"
          expiryYear: "2030"
          holderName: John Smith
          number: "4111111111111111"
          type: scheme
        platformChargebackLogic:
          behavior: deductFromOneBalanceAccount
          costAllocationAccount: BA00000000000000000000001
          targetAccount: BA00000000000000000000001
        reference: YOUR_ORDER_NUMBER
        returnUrl: https://your-company.com/...
        splits:
        - account: BA00000000000000000000001
          amount:
            value: 39600
          description: Your description for the sale amount
          reference: Your reference for the sale amount
          type: BalanceAccount
        - amount:
            value: 400
          description: Your description for the commission
          reference: Your reference for the commission
          type: Commission
        - account: BA00000000000000000000001
          description: Your description for the fees
          reference: Your reference for the fees
          type: PaymentFee
    post-payments-split-balanceplatform-200:
      summary: Payment split between balance accounts
      value:
        additionalData:
          PaymentAccountReference: 6006491286999921374...
          acquirerAccountCode: YOUR_ACQUIRER_ACCOUNT
          acquirerCode: YOUR_ACQUIRER_CODE
          acquirerReference: YOUR_ACQUIRER_REFERENCE
          alias: "8915844059375211"
          aliasType: Default
          authCode: "035450"
          authorisationMid: "50"
          authorisedAmountCurrency: USD
          authorisedAmountValue: "40000"
          avsResult: 5 No AVS data provided
          avsResultRaw: "5"
          cardBin: "411111"
          cardHolderName: John Smith
          cardIssuingBank: ISSUING_BANK_CUSTOMER
          cardIssuingCountry: NL
          cardPaymentMethod: visa
          cardSummary: "1111"
          cavvAlgorithm: N/A
          cvcResult: 1 Matches
          cvcResultRaw: M
          eci: N/A
          expiryDate: 3/2030
          fraudManualReview: "false"
          fraudResultType: GREEN
          fundsAvailability: I
          isCardCommercial: unknown
          issuerBin: "41111111"
          issuerCountry: NL
          liabilityShift: "false"
          merchantReference: YOUR_ORDER_NUMBER
          networkTxReference: "777718270854480"
          paymentMethod: visa
          paymentMethodVariant: visa
          payoutEligible: "Y"
          refusalReasonRaw: AUTHORISED
          retry.attempt1.acquirer: YOUR_ACQUIRER_CODE
          retry.attempt1.acquirerAccount: YOUR_ACQUIRER_ACCOUNT
          retry.attempt1.avsResultRaw: "5"
          retry.attempt1.rawResponse: AUTHORISED
          retry.attempt1.responseCode: Approved
          retry.attempt1.shopperInteraction: Ecommerce
          threeDAuthenticated: "false"
          threeDAuthenticatedResponse: N/A
          threeDOffered: "false"
          threeDOfferedResponse: N/A
          xid: N/A
        amount:
          currency: USD
          value: 40000
        donationToken: 81234567890123456...
        merchantReference: YOUR_ORDER_NUMBER
        paymentMethod:
          brand: visa
          type: scheme
        pspReference: PPKFQ89R6QRXGN82
        resultCode: Authorised
    post-payments-split-classic:
      summary: Split a payment in a Classic Platforms integration
      value:
        amount:
          currency: EUR
          value: 6200
        merchantAccount: YOUR_MERCHANT_ACCOUNT
        paymentMethod:
          cvc: "737"
          expiryMonth: "03"
          expiryYear: "2030"
          holderName: John Smith
          number: "4111111111111111"
          type: scheme
        reference: YOUR_ORDER_NUMBER
        returnUrl: https://your-company.com/...
        splits:
        - account: "151272963"
          amount:
            value: 6000
          description: "Porcelain Doll: Eliza (20cm)"
          reference: "6124145"
          type: MarketPlace
        - amount:
            value: 200
          reference: "6124146"
          type: Commission
    post-payments-subscription-first-transaction:
      summary: Tokenize card details for a subscription
      value:
        amount:
          currency: USD
          value: 1000
        merchantAccount: YOUR_MERCHANT_ACCOUNT
        paymentMethod:
          cvc: "737"
          expiryMonth: "03"
          expiryYear: "2030"
          holderName: John Smith
          number: "4111111111111111"
          type: scheme
        recurringProcessingModel: Subscription
        reference: Your order number
        returnUrl: https://your-company.com/...
        shopperInteraction: Ecommerce
        shopperReference: YOUR_SHOPPER_REFERENCE
        storePaymentMethod: true
    post-payments-subscription-first-transaction-200:
      summary: Card details tokenized for a subscription
      value:
        additionalData:
          acquirerCode: TestPmmAcquirer
          acquirerReference: 8PQMP9VD896
          authCode: "098871"
          avsResult: 4 AVS not supported for this card type
          avsResultRaw: "4"
          cvcResult: 1 Matches
          cvcResultRaw: M
          recurring.recurringDetailReference: "9916178934434753"
          recurring.shopperReference: YOUR_UNIQUE_SHOPPER_ID_IOfW3k9G2PvXFu2j
          recurringProcessingModel: Subscription
          refusalReasonRaw: AUTHORISED
        merchantReference: string
        pspReference: 993617895199574A
        resultCode: Authorised
    post-sessions-00.success:
      description: Example request for creating a payment session
      summary: Create a payment session
      value:
        amount:
          currency: EUR
          value: 100
        countryCode: NL
        merchantAccount: YOUR_MERCHANT_ACCOUNT
        reference: YOUR_PAYMENT_REFERENCE
        returnUrl: https://your-company.com/checkout?shopperOrder=12xy..
    post-sessions-00.success-201:
      description: Example response for creating a payment session
      summary: "Response code: 201. Success."
      value:
        amount:
          currency: EUR
          value: 100
        countryCode: NL
        expiresAt: 2022-01-11T13:53:18+01:00
        id: CS451F2AB1ED897A94
        merchantAccount: YOUR_MERCHANT_ACCOUNT
        reference: YOUR_PAYMENT_REFERENCE
        returnUrl: https://your-company.com/checkout?shopperOrder=12xy..
        sessionData: Ab02b4c0!BQABAgBfYI29...
    post-sessions-01.klarna:
      description: Example request for creating a payment session when Klarna is one
        of the available payment methods
      summary: Create a payment session including Klarna fields
      value:
        amount:
          currency: SEK
          value: 1000
        billingAddress:
          city: Ankeborg
          country: SE
          houseNumberOrName: "1"
          postalCode: "12345"
          street: Stargatan
        countryCode: SE
        dateOfBirth: 1996-09-04
        deliveryAddress:
          city: Ankeborg
          country: SE
          houseNumberOrName: "1"
          postalCode: "12345"
          street: Stargatan
        lineItems:
        - amountExcludingTax: 331
          amountIncludingTax: 400
          description: Shoes
          id: "Item #1"
          imageUrl: URL_TO_PICTURE_OF_PURCHASED_ITEM
          productUrl: URL_TO_PURCHASED_ITEM
          quantity: 1
          taxAmount: 69
          taxPercentage: 2100
        - amountExcludingTax: 248
          amountIncludingTax: 300
          description: Socks
          id: "Item #2"
          imageUrl: URL_TO_PICTURE_OF_PURCHASED_ITEM
          productUrl: URL_TO_PURCHASED_ITEM
          quantity: 2
          taxAmount: 52
          taxPercentage: 2100
        merchantAccount: YOUR_MERCHANT_ACCOUNT
        reference: YOUR_ORDER_REFERENCE
        returnUrl: https://example.org
        shopperEmail: youremail@email.com
        shopperLocale: en_US
        shopperName:
          firstName: Testperson-se
          lastName: Approved
        shopperReference: YOUR_SHOPPER_REFERENCE
        socialSecurityNumber: "0108"
        telephoneNumber: +46 840 839 298
    post-sessions-01.klarna-201:
      description: 'Example '
      summary: "Response code: 201. Success."
      value:
        amount:
          currency: SEK
          value: 1000
        billingAddress:
          city: Ankeborg
          country: SE
          houseNumberOrName: "1"
          postalCode: "12345"
          street: Stargatan
        countryCode: SE
        dateOfBirth: 1996-09-04T02:00:00+02:00
        deliveryAddress:
          city: Ankeborg
          country: SE
          houseNumberOrName: "1"
          postalCode: "12345"
          street: Stargatan
        expiresAt: 2022-01-11T13:57:52+01:00
        id: CSC52E9932D39ADAF3
        lineItems:
        - amountExcludingTax: 331
          amountIncludingTax: 400
          description: Shoes
          id: "Item #1"
          imageUrl: URL_TO_PICTURE_OF_PURCHASED_ITEM
          productUrl: URL_TO_PURCHASED_ITEM
          quantity: 1
          taxAmount: 69
          taxPercentage: 2100
        - amountExcludingTax: 248
          amountIncludingTax: 300
          description: Socks
          id: "Item #2"
          imageUrl: URL_TO_PICTURE_OF_PURCHASED_ITEM
          productUrl: URL_TO_PURCHASED_ITEM
          quantity: 2
          taxAmount: 52
          taxPercentage: 2100
        merchantAccount: YOUR_MERCHANT_ACCOUNT
        reference: YOUR_ORDER_REFERENCE
        returnUrl: https://example.org
        sessionData: Ab02b4c0!BQABAgBfYI29...
        shopperEmail: youremail@email.com
        shopperLocale: en_US
        shopperName:
          firstName: Testperson-se
          lastName: Approved
        shopperReference: YOUR_SHOPPER_REFERENCE
        socialSecurityNumber: "0108"
        telephoneNumber: +46 840 839 298
    post-sessions-enableOneClick:
      description: Example request for tokenizing card details for one-off payments
      summary: Tokenize card details for one-off payments
      value:
        amount:
          currency: EUR
          value: 100
        countryCode: NL
        merchantAccount: TestMerchantCheckout
        recurringProcessingModel: CardOnFile
        reference: YOUR_PAYMENT_REFERENCE
        returnUrl: https://your-company.com/checkout?shopperOrder=12xy..
        shopperInteraction: Ecommerce
        shopperReference: YOUR_SHOPPER_REFERENCE
        storePaymentMethod: true
    post-sessions-enableOneClick-201:
      description: 'Example '
      summary: "Response code: 201. Success."
      value:
        amount:
          currency: EUR
          value: 100
        countryCode: NL
        expiresAt: 2022-01-11T13:56:05+01:00
        id: CSEE37DC1DD751A01F
        merchantAccount: YOUR_MERCHANT_ACCOUNT
        recurringProcessingModel: CardOnFile
        reference: YOUR_PAYMENT_REFERENCE
        returnUrl: https://your-company.com/checkout?shopperOrder=12xy..
        sessionData: Ab02b4c0!BQABAgBfYI29...
        shopperInteraction: Ecommerce
        shopperReference: YOUR_SHOPPER_REFERENCE
        storePaymentMethod: true
    post-sessions-split:
      summary: Split a payment between balance accounts
      value:
        amount:
          currency: USD
          value: 40000
        merchantAccount: YOUR_MERCHANT_ACCOUNT
        reference: YOUR_ORDER_NUMBER
        returnUrl: https://your-company.com/...
        splits:
        - account: BA00000000000000000000001
          amount:
            value: 39200
          description: Your description for the sale amount
          reference: Your reference for the sale amount
          type: BalanceAccount
        - amount:
            value: 400
          description: Your description for the commission
          reference: Your reference for the commission
          type: Commission
        - account: BA00000000000000000000001
          amount:
            value: 400
          description: Your description for the fees
          reference: Your reference for the fees
          type: PaymentFee
    post-sessions-split-201:
      summary: Example response for request 'split'
      value:
        amount:
          currency: USD
          value: 40000
        expiresAt: 2023-06-26T11:01:55+02:00
        id: CSFCBC80570618EF2C
        merchantAccount: YOUR_MERCHANT_ACCOUNT
        reference: YOUR_ORDER_NUMBER
        returnUrl: https://your-company.com/...
        sessionData: Ab02b4c0!BQABAgCjTErwAztqXSFTiZtxZMjRLYkoGbPkmvCvDX1
        shopperLocale: en-US
        splits:
        - account: BA00000000000000000000001
          amount:
            value: 39200
          description: Your description for the sale amount
          reference: Your reference for the sale amount
          type: BalanceAccount
        - amount:
            value: 400
          description: Your description for the commission
          reference: Your reference for the commission
          type: Commission
        - account: BA00000000000000000000001
          amount:
            value: 400
          description: Your description for the fees
          reference: Your reference for the fees
          type: PaymentFee
  headers:
    Idempotency-Key:
      description: The idempotency key used for processing the request. Present if
        the key was provided in the request.
      explode: false
      schema: {}
      style: simple
  parameters:
    Idempotency-Key:
      description: A unique identifier for the message with a maximum of 64 characters
        (we recommend a UUID).
      example: 37ca9c97-d1d1-4c62-89e8-706891a563ed
      explode: false
      in: header
      name: idempotency_key
      required: false
      schema:
        type: string
      style: simple
      x-python-connexion-openapi-name: Idempotency-Key
  schemas:
    AccountInfo:
      example:
        passwordChangeDate: 2000-01-23T04:56:07.000+00:00
        paymentAccountIndicator: notApplicable
        suspiciousActivity: true
        deliveryAddressUsageIndicator: thisTransaction
        pastTransactionsYear: 1
        accountType: notApplicable
        homePhone: homePhone
        paymentAccountAge: 2000-01-23T04:56:07.000+00:00
        accountAgeIndicator: notApplicable
        deliveryAddressUsageDate: 2000-01-23T04:56:07.000+00:00
        accountChangeDate: 2000-01-23T04:56:07.000+00:00
        accountCreationDate: 2000-01-23T04:56:07.000+00:00
        mobilePhone: mobilePhone
        pastTransactionsDay: 6
        accountChangeIndicator: thisTransaction
        passwordChangeIndicator: notApplicable
        addCardAttemptsDay: 0
        workPhone: workPhone
        purchasesLast6Months: 5
      properties:
        accountAgeIndicator:
          description: |-
            Indicator for the length of time since this shopper account was created in the merchant's environment.
            Allowed values:
            * notApplicable
            * thisTransaction
            * lessThan30Days
            * from30To60Days
            * moreThan60Days
          enum:
          - notApplicable
          - thisTransaction
          - lessThan30Days
          - from30To60Days
          - moreThan60Days
          title: accountAgeIndicator
          type: string
        accountChangeDate:
          description: Date when the shopper's account was last changed.
          format: date-time
          title: accountChangeDate
          type: string
        accountChangeIndicator:
          description: |-
            Indicator for the length of time since the shopper's account was last updated.
            Allowed values:
            * thisTransaction
            * lessThan30Days
            * from30To60Days
            * moreThan60Days
          enum:
          - thisTransaction
          - lessThan30Days
          - from30To60Days
          - moreThan60Days
          title: accountChangeIndicator
          type: string
        accountCreationDate:
          description: Date when the shopper's account was created.
          format: date-time
          title: accountCreationDate
          type: string
        accountType:
          description: |-
            Indicates the type of account. For example, for a multi-account card product.
            Allowed values:
            * notApplicable
            * credit
            * debit
          enum:
          - notApplicable
          - credit
          - debit
          title: accountType
          type: string
          x-addedInVersion: "50"
        addCardAttemptsDay:
          description: Number of attempts the shopper tried to add a card to their
            account in the last day.
          format: int32
          title: addCardAttemptsDay
          type: integer
        deliveryAddressUsageDate:
          description: Date the selected delivery address was first used.
          format: date-time
          title: deliveryAddressUsageDate
          type: string
        deliveryAddressUsageIndicator:
          description: |-
            Indicator for the length of time since this delivery address was first used.
            Allowed values:
            * thisTransaction
            * lessThan30Days
            * from30To60Days
            * moreThan60Days
          enum:
          - thisTransaction
          - lessThan30Days
          - from30To60Days
          - moreThan60Days
          title: deliveryAddressUsageIndicator
          type: string
        homePhone:
          deprecated: true
          description: Shopper's home phone number (including the country code).
          title: homePhone
          type: string
          x-deprecatedInVersion: "68"
          x-deprecatedMessage: Use `ThreeDS2RequestData.homePhone` instead.
        mobilePhone:
          deprecated: true
          description: Shopper's mobile phone number (including the country code).
          title: mobilePhone
          type: string
          x-deprecatedInVersion: "68"
          x-deprecatedMessage: Use `ThreeDS2RequestData.mobilePhone` instead.
        passwordChangeDate:
          description: Date when the shopper last changed their password.
          format: date-time
          title: passwordChangeDate
          type: string
        passwordChangeIndicator:
          description: |-
            Indicator when the shopper has changed their password.
            Allowed values:
            * notApplicable
            * thisTransaction
            * lessThan30Days
            * from30To60Days
            * moreThan60Days
          enum:
          - notApplicable
          - thisTransaction
          - lessThan30Days
          - from30To60Days
          - moreThan60Days
          title: passwordChangeIndicator
          type: string
        pastTransactionsDay:
          description: Number of all transactions (successful and abandoned) from
            this shopper in the past 24 hours.
          format: int32
          title: pastTransactionsDay
          type: integer
        pastTransactionsYear:
          description: Number of all transactions (successful and abandoned) from
            this shopper in the past year.
          format: int32
          title: pastTransactionsYear
          type: integer
        paymentAccountAge:
          description: Date this payment method was added to the shopper's account.
          format: date-time
          title: paymentAccountAge
          type: string
        paymentAccountIndicator:
          description: |-
            Indicator for the length of time since this payment method was added to this shopper's account.
            Allowed values:
            * notApplicable
            * thisTransaction
            * lessThan30Days
            * from30To60Days
            * moreThan60Days
          enum:
          - notApplicable
          - thisTransaction
          - lessThan30Days
          - from30To60Days
          - moreThan60Days
          title: paymentAccountIndicator
          type: string
        purchasesLast6Months:
          description: Number of successful purchases in the last six months.
          format: int32
          title: purchasesLast6Months
          type: integer
        suspiciousActivity:
          description: Whether suspicious activity was recorded on this account.
          title: suspiciousActivity
          type: boolean
        workPhone:
          deprecated: true
          description: Shopper's work phone number (including the country code).
          title: workPhone
          type: string
          x-deprecatedInVersion: "68"
          x-deprecatedMessage: Use `ThreeDS2RequestData.workPhone` instead.
      title: AccountInfo
    AcctInfo:
      example:
        shipAddressUsageInd: "01"
        paymentAccAge: paymentAccAge
        paymentAccInd: "01"
        txnActivityYear: txnActivityYear
        shipNameIndicator: "01"
        chAccPwChangeInd: "01"
        provisionAttemptsDay: provisionAttemptsDay
        chAccChange: chAccChange
        chAccChangeInd: "01"
        chAccString: chAccString
        nbPurchaseAccount: nbPurchaseAccount
        chAccAgeInd: "01"
        chAccPwChange: chAccPwChange
        shipAddressUsage: shipAddressUsage
        suspiciousAccActivity: "01"
        txnActivityDay: txnActivityDay
      properties:
        chAccAgeInd:
          description: "Length of time that the cardholder has had the account with\
            \ the 3DS Requestor. \nAllowed values:\n* **01** — No account\n* **02**\
            \ — Created during this transaction\n* **03** — Less than 30 days\n* **04**\
            \ — 30–60 days\n* **05** — More than 60 days"
          enum:
          - "01"
          - "02"
          - "03"
          - "04"
          - "05"
          maxLength: 2
          minLength: 2
          title: chAccAgeInd
          type: string
        chAccChange:
          description: "Date that the cardholder’s account with the 3DS Requestor\
            \ was last changed, including Billing or Shipping address, new payment\
            \ account, or new user(s) added. \nFormat: **YYYYMMDD**"
          title: chAccChange
          type: string
        chAccChangeInd:
          description: "Length of time since the cardholder’s account information\
            \ with the 3DS Requestor was last changed, including Billing or Shipping\
            \ address, new payment account, or new user(s) added. \nAllowed values:\n\
            * **01** — Changed during this transaction\n* **02** — Less than 30 days\n\
            * **03** — 30–60 days\n* **04** — More than 60 days"
          enum:
          - "01"
          - "02"
          - "03"
          - "04"
          maxLength: 2
          minLength: 2
          title: chAccChangeInd
          type: string
        chAccPwChange:
          description: "Date that cardholder’s account with the 3DS Requestor had\
            \ a password change or account reset. \nFormat: **YYYYMMDD**"
          title: chAccPwChange
          type: string
        chAccPwChangeInd:
          description: "Indicates the length of time since the cardholder’s account\
            \ with the 3DS Requestor had a password change or account reset. \nAllowed\
            \ values:\n* **01** — No change\n* **02** — Changed during this transaction\n\
            * **03** — Less than 30 days\n* **04** — 30–60 days\n* **05** — More than\
            \ 60 days"
          enum:
          - "01"
          - "02"
          - "03"
          - "04"
          - "05"
          maxLength: 2
          minLength: 2
          title: chAccPwChangeInd
          type: string
        chAccString:
          description: "Date that the cardholder opened the account with the 3DS Requestor.\
            \ \nFormat: **YYYYMMDD**"
          title: chAccString
          type: string
        nbPurchaseAccount:
          description: "Number of purchases with this cardholder account during the\
            \ previous six months. Max length: 4 characters."
          title: nbPurchaseAccount
          type: string
        paymentAccAge:
          description: "String that the payment account was enrolled in the cardholder’\
            s account with the 3DS Requestor. \nFormat: **YYYYMMDD**"
          title: paymentAccAge
          type: string
        paymentAccInd:
          description: "Indicates the length of time that the payment account was\
            \ enrolled in the cardholder’s account with the 3DS Requestor. \nAllowed\
            \ values:\n* **01** — No account (guest checkout)\n* **02** — During this\
            \ transaction\n* **03** — Less than 30 days\n* **04** — 30–60 days\n*\
            \ **05** — More than 60 days"
          enum:
          - "01"
          - "02"
          - "03"
          - "04"
          - "05"
          maxLength: 2
          minLength: 2
          title: paymentAccInd
          type: string
        provisionAttemptsDay:
          description: "Number of Add Card attempts in the last 24 hours. Max length:\
            \ 3 characters."
          title: provisionAttemptsDay
          type: string
        shipAddressUsage:
          description: "String when the shipping address used for this transaction\
            \ was first used with the 3DS Requestor. \nFormat: **YYYYMMDD**"
          title: shipAddressUsage
          type: string
        shipAddressUsageInd:
          description: "Indicates when the shipping address used for this transaction\
            \ was first used with the 3DS Requestor. \nAllowed values:\n* **01** —\
            \ This transaction\n* **02** — Less than 30 days\n* **03** — 30–60 days\n\
            * **04** — More than 60 days"
          enum:
          - "01"
          - "02"
          - "03"
          - "04"
          maxLength: 2
          minLength: 2
          title: shipAddressUsageInd
          type: string
        shipNameIndicator:
          description: "Indicates if the Cardholder Name on the account is identical\
            \ to the shipping Name used for this transaction. \nAllowed values:\n\
            * **01** — Account Name identical to shipping Name\n* **02** — Account\
            \ Name different to shipping Name"
          enum:
          - "01"
          - "02"
          maxLength: 2
          minLength: 2
          title: shipNameIndicator
          type: string
        suspiciousAccActivity:
          description: "Indicates whether the 3DS Requestor has experienced suspicious\
            \ activity (including previous fraud) on the cardholder account. \nAllowed\
            \ values:\n* **01** — No suspicious activity has been observed\n* **02**\
            \ — Suspicious activity has been observed"
          enum:
          - "01"
          - "02"
          maxLength: 2
          minLength: 2
          title: suspiciousAccActivity
          type: string
        txnActivityDay:
          description: "Number of transactions (successful and abandoned) for this\
            \ cardholder account with the 3DS Requestor across all payment accounts\
            \ in the previous 24 hours. Max length: 3 characters."
          maxLength: 3
          title: txnActivityDay
          type: string
        txnActivityYear:
          description: "Number of transactions (successful and abandoned) for this\
            \ cardholder account with the 3DS Requestor across all payment accounts\
            \ in the previous year. Max length: 3 characters."
          maxLength: 3
          title: txnActivityYear
          type: string
      title: AcctInfo
    AchDetails:
      additionalProperties: false
      example:
        bankAccountType: balance
        ownerName: ownerName
        storedPaymentMethodId: storedPaymentMethodId
        encryptedBankAccountNumber: encryptedBankAccountNumber
        recurringDetailReference: recurringDetailReference
        bankAccountNumber: bankAccountNumber
        checkoutAttemptId: checkoutAttemptId
        bankLocationId: bankLocationId
        type: ach
        encryptedBankLocationId: encryptedBankLocationId
      properties:
        bankAccountNumber:
          description: The bank account number (without separators).
          title: bankAccountNumber
          type: string
        bankAccountType:
          description: "The bank account type (checking, savings...)."
          enum:
          - balance
          - checking
          - deposit
          - general
          - other
          - payment
          - savings
          title: bankAccountType
          type: string
        bankLocationId:
          description: The bank routing number of the account. The field value is
            `nil` in most cases.
          title: bankLocationId
          type: string
        checkoutAttemptId:
          description: The checkout attempt identifier.
          title: checkoutAttemptId
          type: string
          x-addedInVersion: "68"
        encryptedBankAccountNumber:
          description: Encrypted bank account number. The bank account number (without
            separators).
          title: encryptedBankAccountNumber
          type: string
        encryptedBankLocationId:
          description: Encrypted location id. The bank routing number of the account.
            The field value is `nil` in most cases.
          title: encryptedBankLocationId
          type: string
        ownerName:
          description: |-
            The name of the bank account holder.
            If you submit a name with non-Latin characters, we automatically replace some of them with corresponding Latin characters to meet the FATF recommendations. For example:
            * χ12 is converted to ch12.
            * üA is converted to euA.
            * Peter Møller is converted to Peter Mller, because banks don't accept 'ø'.
            After replacement, the ownerName must have at least three alphanumeric characters (A-Z, a-z, 0-9), and at least one of them must be a valid Latin character (A-Z, a-z). For example:
            * John17 - allowed.
            * J17 - allowed.
            * 171 - not allowed.
            * John-7 - allowed.
            > If provided details don't match the required format, the response returns the error message: 203 'Invalid bank account holder name'.
          title: ownerName
          type: string
        recurringDetailReference:
          deprecated: true
          description: This is the `recurringDetailReference` returned in the response
            when you created the token.
          title: recurringDetailReference
          type: string
          x-deprecatedInVersion: "49"
          x-deprecatedMessage: Use `storedPaymentMethodId` instead.
        storedPaymentMethodId:
          description: This is the `recurringDetailReference` returned in the response
            when you created the token.
          maxLength: 64
          title: storedPaymentMethodId
          type: string
          x-addedInVersion: "49"
        type:
          default: ach
          description: '**ach**'
          enum:
          - ach
          - ach_plaid
          title: type
          type: string
      required:
      - bankAccountNumber
      title: ACH Direct Debit
    AdditionalData3DSecure:
      example:
        challengeWindowSize: "01"
        mpiImplementationType: mpiImplementationType
        allow3DS2: allow3DS2
        executeThreeD: executeThreeD
        threeDSVersion: threeDSVersion
        scaExemption: scaExemption
      properties:
        allow3DS2:
          deprecated: true
          description: |
            Indicates if you are able to process 3D Secure 2 transactions natively on your payment page. Send this parameter when you are using `/payments` endpoint with any of our [native 3D Secure 2 solutions](https://docs.adyen.com/online-payments/3d-secure/native-3ds2).

             > This parameter only indicates readiness to support native 3D Secure 2 authentication. To specify if you _want_ to perform 3D Secure, use [Dynamic 3D Secure](/risk-management/dynamic-3d-secure) or send the `executeThreeD` parameter.

            Possible values:
            * **true** - Ready to support native 3D Secure 2 authentication. Setting this to true does not mean always applying 3D Secure 2. Adyen still selects the version of 3D Secure based on configuration to optimize authorisation rates and improve the shopper's experience.
            * **false** – Not ready to support native 3D Secure 2 authentication. Adyen will not offer 3D Secure 2 to your shopper regardless of your configuration.
          title: allow3DS2
          type: string
          x-deprecatedInVersion: "69"
          x-deprecatedMessage: Use `authenticationData.threeDSRequestData.nativeThreeDS`
            instead.
        challengeWindowSize:
          description: "Dimensions of the 3DS2 challenge window to be displayed to\
            \ the cardholder.\n\nPossible values:\n\n* **01** - size of 250x400 \n\
            * **02** - size of 390x400\n* **03** - size of 500x600\n* **04** - size\
            \ of 600x400\n* **05** - Fullscreen"
          enum:
          - "01"
          - "02"
          - "03"
          - "04"
          - "05"
          title: challengeWindowSize
          type: string
        executeThreeD:
          deprecated: true
          description: "Indicates if you want to perform 3D Secure authentication\
            \ on a transaction.\n\n > Alternatively, you can use [Dynamic 3D Secure](/risk-management/dynamic-3d-secure)\
            \ to configure rules for applying 3D Secure.\n\nPossible values:\n* **true**\
            \ – Perform 3D Secure authentication.\n* **false** – Don't perform 3D\
            \ Secure authentication. Note that this setting results in refusals if\
            \ the issuer mandates 3D Secure because of the PSD2 directive  or other,\
            \ national regulations. \n"
          title: executeThreeD
          type: string
          x-deprecatedInVersion: "69"
          x-deprecatedMessage: "Use [`authenticationData.attemptAuthentication`](https://docs.adyen.com/api-explorer/Checkout/latest/post/payments?target=_blank#request-authenticationData-attemptAuthentication)\
            \ instead"
        mpiImplementationType:
          description: "In case of Secure+, this field must be set to **CUPSecurePlus**."
          title: mpiImplementationType
          type: string
        scaExemption:
          description: "Indicates the [exemption type](https://docs.adyen.com/payments-fundamentals/psd2-sca-compliance-and-implementation-guide#specifypreferenceinyourapirequest)\
            \ that you want to request for the transaction.\n\n Possible values:\n\
            * **lowValue** \n* **secureCorporate** \n* **trustedBeneficiary** \n*\
            \ **transactionRiskAnalysis** "
          title: scaExemption
          type: string
        threeDSVersion:
          description: "Indicates your preference for the 3D Secure version. \n> If\
            \ you use this parameter, you override the checks from Adyen's Authentication\
            \ Engine. We recommend to use this field only if you have an extensive\
            \ knowledge of 3D Secure.\n\nPossible values:\n* **1.0.2**: Apply 3D Secure\
            \ version 1.0.2. \n* **2.1.0**: Apply 3D Secure version 2.1.0. \n* **2.2.0**:\
            \ Apply 3D Secure version 2.2.0. If the issuer does not support version\
            \ 2.2.0, we will fall back to 2.1.0.\n\nThe following rules apply:\n*\
            \ If you prefer 2.1.0 or 2.2.0 but we receive a negative `transStatus`\
            \ in the `ARes`, we will apply the fallback policy configured in your\
            \ account. For example, if the configuration is to fall back to 3D Secure\
            \ 1, we will apply version 1.0.2.\n* If you prefer 2.1.0 or 2.2.0 but\
            \ the BIN is not enrolled, you will receive an error.\n\n"
          title: threeDSVersion
          type: string
      title: AdditionalData3DSecure
    AdditionalDataAirline:
      properties:
        airline.agency_invoice_number:
          description: |-
            The reference number for the invoice, issued by the agency.
            * Encoding: ASCII
            * minLength: 1 character
            * maxLength: 6 characters
          title: airline.agency_invoice_number
          type: string
        airline.agency_plan_name:
          description: |-
            The two-letter agency plan identifier.
            * Encoding: ASCII
            * minLength: 2 characters
            * maxLength: 2 characters
          title: airline.agency_plan_name
          type: string
        airline.airline_code:
          description: |-
            The [IATA](https://www.iata.org/services/pages/codes.aspx) 3-digit accounting code (PAX) that identifies the carrier.
            * Format: IATA 3-digit accounting code (PAX)
            * Example: KLM = 074
            * minLength: 3 characters
            * maxLength: 3 characters
            * Must not be all spaces
            *Must not be all zeros.
          title: airline.airline_code
          type: string
        airline.airline_designator_code:
          description: |-
            The [IATA](https://www.iata.org/services/pages/codes.aspx) 2-letter accounting code (PAX) that identifies the carrier.
            * Encoding: ASCII
            * Example: KLM = KL
            * minLength: 2 characters
            * maxLength: 2 characters
            * Must not be all spaces
            *Must not be all zeros.
          title: airline.airline_designator_code
          type: string
        airline.boarding_fee:
          description: |-
            The amount charged for boarding the plane, in [minor units](https://docs.adyen.com/development-resources/currency-codes).
            * Encoding: Numeric
            * minLength: 1 character
            * maxLength: 18 characters
          title: airline.boarding_fee
          type: string
        airline.computerized_reservation_system:
          description: |-
            The [CRS](https://en.wikipedia.org/wiki/Computer_reservation_system) used to make the reservation and purchase the ticket.
            * Encoding: ASCII
            * minLength: 4 characters
            * maxLength: 4 characters
          title: airline.computerized_reservation_system
          type: string
        airline.customer_reference_number:
          description: |-
            The alphanumeric customer reference number.
            * Encoding: ASCII
            * maxLength: 20 characters
            * If you send more than 20 characters, the customer reference number is truncated
            * Must not be all spaces
          title: airline.customer_reference_number
          type: string
        airline.document_type:
          description: |-
            A code that identifies the type of item bought. The description of the code can appear on credit card statements.
            * Encoding: ASCII
            * Example: Passenger ticket = 01
            * minLength: 2 characters
            * maxLength: 2 characters
          title: airline.document_type
          type: string
        airline.flight_date:
          description: |-
            The flight departure date. Local time `(HH:mm)` is optional.
            * Date format: `yyyy-MM-dd`
            * Date and time format: `yyyy-MM-dd HH:mm`
            * minLength: 10 characters
            * maxLength: 16 characters
          title: airline.flight_date
          type: string
        airline.leg.carrier_code:
          description: |-
            The [IATA](https://www.iata.org/services/pages/codes.aspx) 2-letter accounting code (PAX) that identifies the carrier.
            This field is required if the airline data includes leg details.
            * Example: KLM = KL
            * minLength: 2 characters
            * maxLength: 2 characters
            * Must not be all spaces
            *Must not be all zeros.
          title: airline.leg.carrier_code
          type: string
        airline.leg.class_of_travel:
          description: |-
            A one-letter travel class identifier.
             The following are common:
             * F: first class
            * J: business class
            * Y: economy class
            * W: premium economy

            * Encoding: ASCII
            * minLength: 1 character
            * maxLength: 1 character
            * Must not be all spaces
            *Must not be all zeros.
          title: airline.leg.class_of_travel
          type: string
        airline.leg.date_of_travel:
          description: "\t\nDate and time of travel in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)\
            \ format `yyyy-MM-dd HH:mm`.\n* Encoding: ASCII\n* minLength: 16 characters\n\
            * maxLength: 16 characters"
          title: airline.leg.date_of_travel
          type: string
        airline.leg.depart_airport:
          description: |-
            The [IATA](https://www.iata.org/services/pages/codes.aspx) three-letter airport code of the departure airport.
            This field is required if the airline data includes leg details.

            * Encoding: ASCII
            * Example: Amsterdam = AMS
            * minLength: 3 characters
            * maxLength: 3 characters
            * Must not be all spaces
            *Must not be all zeros.
          title: airline.leg.depart_airport
          type: string
        airline.leg.depart_tax:
          description: |-
            The amount of [departure tax](https://en.wikipedia.org/wiki/Departure_tax) charged, in [minor units](https://docs.adyen.com/development-resources/currency-codes).
            * Encoding: Numeric
            * minLength: 1
            * maxLength: 12
            *Must not be all zeros.
          title: airline.leg.depart_tax
          type: string
        airline.leg.destination_code:
          description: |-
            The [IATA](https://www.iata.org/services/pages/codes.aspx) 3-letter airport code of the destination airport.
            This field is required if the airline data includes leg details.
            * Example: Amsterdam = AMS
            * Encoding: ASCII
            * minLength: 3 characters
            * maxLength: 3 characters
            * Must not be all spaces
            *Must not be all zeros.
          title: airline.leg.destination_code
          type: string
        airline.leg.fare_base_code:
          description: |-
            The [fare basis code](https://en.wikipedia.org/wiki/Fare_basis_code), alphanumeric.
            * minLength: 1 character
            * maxLength: 6 characters
            * Must not be all spaces
            *Must not be all zeros.
          title: airline.leg.fare_base_code
          type: string
        airline.leg.flight_number:
          description: |-
            The flight identifier.
            * minLength: 1 character
            * maxLength: 5 characters
            * Must not be all spaces
            *Must not be all zeros.
          title: airline.leg.flight_number
          type: string
        airline.leg.stop_over_code:
          description: |-
            A one-letter code that indicates whether the passenger is entitled to make a stopover. Can be a space, O if the passenger is entitled to make a stopover, or X if they are not.
            * Encoding: ASCII
            * minLength: 1 character
            * maxLength: 1 character
          title: airline.leg.stop_over_code
          type: string
        airline.passenger.date_of_birth:
          description: |-
            The passenger's date of birth.

            Date format: `yyyy-MM-dd`
            * minLength: 10
            * maxLength: 10
          title: airline.passenger.date_of_birth
          type: string
        airline.passenger.first_name:
          description: |-
            The passenger's first name.
            > This field is required if the airline data includes passenger details or leg details.
            * Encoding: ASCII
          title: airline.passenger.first_name
          type: string
        airline.passenger.last_name:
          description: |-
            The passenger's last name.
            > This field is required if the airline data includes passenger details or leg details.
            * Encoding: ASCII
          title: airline.passenger.last_name
          type: string
        airline.passenger.telephone_number:
          description: |-
            The passenger's telephone number, including country code. This is an alphanumeric field that can include the '+' and '-' signs.
            * Encoding: ASCII
            * minLength: 3 characters
            * maxLength: 30 characters
          title: airline.passenger.telephone_number
          type: string
        airline.passenger.traveller_type:
          description: |-
            The IATA passenger type code (PTC).
            * Encoding: ASCII
            * minLength: 3 characters
            * maxLength: 6 characters
          title: airline.passenger.traveller_type
          type: string
        airline.passenger_name:
          description: "The passenger's name, initials, and title.\n* Format: last\
            \ name + first name or initials + title\n* Example: *FLYER / MARY MS*\n\
            * minLength: 1 character\n* maxLength: 20 characters\n* If you send more\
            \ than 20 characters, the name is truncated\n* Must not be all spaces\
            \ \n*Must not be all zeros."
          title: airline.passenger_name
          type: string
        airline.ticket_issue_address:
          description: |-
            The address of the organization that issued the ticket.
            * minLength: 0 characters
            * maxLength: 16 characters
          title: airline.ticket_issue_address
          type: string
        airline.ticket_number:
          description: |-
            The ticket's unique identifier.
            * minLength: 1 character
            * maxLength: 15 characters
            * Must not be all spaces
            *Must not be all zeros.
          title: airline.ticket_number
          type: string
        airline.travel_agency_code:
          description: |-
            The unique identifier from IATA or ARC for the travel agency that issues the ticket.
            * Encoding: ASCII
            * minLength: 1 character
            * maxLength: 8 characters
            * Must not be all spaces
            *Must not be all zeros.
          title: airline.travel_agency_code
          type: string
        airline.travel_agency_name:
          description: |-
            The name of the travel agency.

            * Encoding: ASCII
            * minLength: 1 character
            * maxLength: 25 characters
            * Must not be all spaces
            *Must not be all zeros.
          title: airline.travel_agency_name
          type: string
      required:
      - airline.passenger_name
      title: AdditionalDataAirline
    AdditionalDataCarRental:
      properties:
        carRental.checkOutDate:
          description: |-
            The pick-up date.
            * Date format: `yyyyMMdd`
          title: carRental.checkOutDate
          type: string
        carRental.customerServiceTollFreeNumber:
          description: |-
            The customer service phone number of the car rental company.
            * Format: Alphanumeric
            * maxLength: 17
            * For US and CA numbers must be 10 characters in length
            * Must not start with a space
            * Must not contain any special characters such as + or -
            *Must not be all zeros.
          title: carRental.customerServiceTollFreeNumber
          type: string
        carRental.daysRented:
          description: |-
            Number of days for which the car is being rented.
            * Format: Numeric
            * maxLength: 4
            * Must not be all spaces
          title: carRental.daysRented
          type: string
        carRental.fuelCharges:
          description: |-
            Any fuel charges associated with the rental, in [minor units](https://docs.adyen.com/development-resources/currency-codes).
            * Format: Numeric
            * maxLength: 12
          title: carRental.fuelCharges
          type: string
        carRental.insuranceCharges:
          description: |-
            Any insurance charges associated with the rental, in [minor units](https://docs.adyen.com/development-resources/currency-codes).
            * Format: Numeric
            * maxLength: 12
            * Must not be all spaces
            *Must not be all zeros.
          title: carRental.insuranceCharges
          type: string
        carRental.locationCity:
          description: |-
            The city where the car is rented.
            * Format: Alphanumeric
            * maxLength: 18
            * Must not start with a space or be all spaces
            *Must not be all zeros.
          title: carRental.locationCity
          type: string
        carRental.locationCountry:
          description: |-
            The country where the car is rented, in [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) format.
            * Format: Alphanumeric
            * maxLength: 2
          title: carRental.locationCountry
          type: string
        carRental.locationStateProvince:
          description: |-
            The state or province where the car is rented.
            * Format: Alphanumeric
            * maxLength: 2
            * Must not start with a space or be all spaces
            *Must not be all zeros.
          title: carRental.locationStateProvince
          type: string
        carRental.noShowIndicator:
          description: |-
            Indicates if the customer didn't pick up their rental car.
            * Y - Customer did not pick up their car
            * N - Not applicable
          title: carRental.noShowIndicator
          type: string
        carRental.oneWayDropOffCharges:
          description: |-
            The charge for not returning a car to the original rental location, in [minor units](https://docs.adyen.com/development-resources/currency-codes).
            * maxLength: 12
          title: carRental.oneWayDropOffCharges
          type: string
        carRental.rate:
          description: |-
            The daily rental rate, in [minor units](https://docs.adyen.com/development-resources/currency-codes).
            * Format: Alphanumeric
            * maxLength: 12
          title: carRental.rate
          type: string
        carRental.rateIndicator:
          description: |-
            Specifies whether the given rate is applied daily or weekly.
            * D - Daily rate
            * W - Weekly rate
          title: carRental.rateIndicator
          type: string
        carRental.rentalAgreementNumber:
          description: |-
            The rental agreement number for the car rental.
            * Format: Alphanumeric
            * maxLength: 9
            * Must not start with a space or be all spaces
            *Must not be all zeros.
          title: carRental.rentalAgreementNumber
          type: string
        carRental.rentalClassId:
          description: |-
            The classification of the rental car.
            * Format: Alphanumeric
            * maxLength: 4
            * Must not start with a space or be all spaces
            *Must not be all zeros.
          title: carRental.rentalClassId
          type: string
        carRental.renterName:
          description: |-
            The name of the person renting the car.
            * Format: Alphanumeric
            * maxLength: 26
            * If you send more than 26 characters, the name is truncated
            * Must not start with a space or be all spaces
            *Must not be all zeros.
          title: carRental.renterName
          type: string
        carRental.returnCity:
          description: |-
            The city where the car must be returned.
            * Format: Alphanumeric
            * maxLength: 18
            * Must not start with a space or be all spaces
            *Must not be all zeros.
          title: carRental.returnCity
          type: string
        carRental.returnCountry:
          description: |-
            The country where the car must be returned, in [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) format.
            * Format: Alphanumeric
            * maxLength: 2
          title: carRental.returnCountry
          type: string
        carRental.returnDate:
          description: |-
            The last date to return the car by.
            * Date format: `yyyyMMdd`
            * maxLength: 8
          title: carRental.returnDate
          type: string
        carRental.returnLocationId:
          description: |-
            The agency code, phone number, or address abbreviation
            * Format: Alphanumeric
            * maxLength: 10
            * Must not start with a space or be all spaces
            *Must not be all zeros.
          title: carRental.returnLocationId
          type: string
        carRental.returnStateProvince:
          description: |-
            The state or province where the car must be returned.
            * Format: Alphanumeric
            * maxLength: 3
            * Must not start with a space or be all spaces
            *Must not be all zeros.
          title: carRental.returnStateProvince
          type: string
        carRental.taxExemptIndicator:
          description: |-
            Indicates if the goods or services were tax-exempt, or if tax was not paid on them.

            Values:
            * Y - Goods or services were tax exempt
            * N - Tax was not collected
          title: carRental.taxExemptIndicator
          type: string
        travelEntertainmentAuthData.duration:
          description: |-
            Number of days the car is rented for. This should be included in the auth message.
            * Format: Numeric
            * maxLength: 4
          title: travelEntertainmentAuthData.duration
          type: string
        travelEntertainmentAuthData.market:
          description: |-
            Indicates what market-specific dataset will be submitted or is being submitted. Value should be 'A' for car rental. This should be included in the auth message.
            * Format: Alphanumeric
            * maxLength: 1
          title: travelEntertainmentAuthData.market
          type: string
      title: AdditionalDataCarRental
    AdditionalDataCommon:
      properties:
        RequestedTestErrorResponseCode:
          description: |-
            Triggers test scenarios that allow to replicate certain communication errors.

            Allowed values:
            * **NO_CONNECTION_AVAILABLE** – There wasn't a connection available to service the outgoing communication.
            This is a transient, retriable error since no messaging could be initiated to an issuing system (or third-party acquiring system). Therefore, the header Transient-Error: true is returned in the response. A subsequent request using the same idempotency key will be processed as if it was the first request.
            * **IOEXCEPTION_RECEIVED** – Something went wrong during transmission of the message or receiving the response.
            This is a classified as non-transient because the message could have been received by the issuing party and been acted upon. No transient error header is returned. If using idempotency, the (error) response is stored as the final result for the idempotency key. Subsequent messages with the same idempotency key not be processed beyond returning the stored response.
          title: RequestedTestErrorResponseCode
          type: string
        allowPartialAuth:
          description: "Set to true to authorise a part of the requested amount in\
            \ case the cardholder does not have enough funds on their account. \n\
            If a payment was partially authorised, the response includes resultCode:\
            \ PartiallyAuthorised and the authorised amount in additionalData.authorisedAmountValue.\n\
            To enable this functionality, contact our Support Team."
          title: allowPartialAuth
          type: string
        authorisationType:
          description: |-
            Flags a card payment request for either pre-authorisation or final authorisation. For more information, refer to [Authorisation types](https://docs.adyen.com/online-payments/adjust-authorisation#authorisation-types).

            Allowed values:
            * **PreAuth** – flags the payment request to be handled as a pre-authorisation.
            * **FinalAuth** – flags the payment request to be handled as a final authorisation.
          title: authorisationType
          type: string
        customRoutingFlag:
          description: |-
            Allows you to determine or override the acquirer account that should be used for the transaction.

            If you need to process a payment with an acquirer different from a default one, you can set up a corresponding configuration on the Adyen payments platform. Then you can pass a custom routing flag in a payment request's additional data to target a specific acquirer.

            To enable this functionality, contact [Support](https://www.adyen.help/hc/en-us/requests/new).
          title: customRoutingFlag
          type: string
        industryUsage:
          description: |-
            In case of [asynchronous authorisation adjustment](https://docs.adyen.com/online-payments/adjust-authorisation#adjust-authorisation), this field denotes why the additional payment is made.

            Possible values:

             * **NoShow**: An incremental charge is carried out because of a no-show for a guaranteed reservation.

             * **DelayedCharge**: An incremental charge is carried out to process an additional payment after the original services have been rendered and the respective payment has been processed.
          enum:
          - NoShow
          - DelayedCharge
          title: industryUsage
          type: string
        manualCapture:
          description: "Set to **true** to require [manual capture](https://docs.adyen.com/online-payments/capture)\
            \ for the transaction."
          title: manualCapture
          type: string
        networkTxReference:
          description: |-
            Allows you to link the transaction to the original or previous one in a subscription/card-on-file chain. This field is required for token-based transactions where Adyen does not tokenize the card.

            Transaction identifier from card schemes, for example, Mastercard Trace ID or the Visa Transaction ID.

            Submit the original transaction ID of the contract in your payment request if you are not tokenizing card details with Adyen and are making a merchant-initiated transaction (MIT) for subsequent charges.

            Make sure you are sending `shopperInteraction` **ContAuth** and `recurringProcessingModel` **Subscription** or **UnscheduledCardOnFile** to ensure that the transaction is classified as MIT.
          title: networkTxReference
          type: string
        overwriteBrand:
          description: "Boolean indicator that can be optionally used for performing\
            \ debit transactions on combo cards (for example, combo cards in Brazil).\
            \ This is not mandatory but we recommend that you set this to true if\
            \ you want to use the `selectedBrand` value to specify how to process\
            \ the transaction."
          title: overwriteBrand
          type: string
        subMerchantCity:
          description: |-
            This field is required if the transaction is performed by a registered payment facilitator. This field must contain the city of the actual merchant's address.
            * Format: alpha-numeric.
            * Maximum length: 13 characters.
          title: subMerchantCity
          type: string
        subMerchantCountry:
          description: |-
            This field is required if the transaction is performed by a registered payment facilitator. This field must contain the three-letter country code of the actual merchant's address.
            * Format: alpha-numeric.
            * Fixed length: 3 characters.
          title: subMerchantCountry
          type: string
        subMerchantID:
          description: |-
            This field contains an identifier of the actual merchant when a transaction is submitted via a payment facilitator. The payment facilitator must send in this unique ID.

            A unique identifier per submerchant that is required if the transaction is performed by a registered payment facilitator.
            * Format: alpha-numeric.
            * Fixed length: 15 characters.
          title: subMerchantID
          type: string
        subMerchantName:
          description: |-
            This field is required if the transaction is performed by a registered payment facilitator. This field must contain the name of the actual merchant.
            * Format: alpha-numeric.
            * Maximum length: 22 characters.
          title: subMerchantName
          type: string
        subMerchantPostalCode:
          description: |-
            This field is required if the transaction is performed by a registered payment facilitator. This field must contain the postal code of the actual merchant's address.
            * Format: alpha-numeric.
            * Maximum length: 10 characters.
          title: subMerchantPostalCode
          type: string
        subMerchantState:
          description: |-
            This field is required if the transaction is performed by a registered payment facilitator, and if applicable to the country. This field must contain the state code of the actual merchant's address.
            * Format: alpha-numeric.
            * Maximum length: 3 characters.
          title: subMerchantState
          type: string
        subMerchantStreet:
          description: |-
            This field is required if the transaction is performed by a registered payment facilitator. This field must contain the street of the actual merchant's address.
            * Format: alpha-numeric.
            * Maximum length: 60 characters.
          title: subMerchantStreet
          type: string
        subMerchantTaxId:
          description: |-
            This field is required if the transaction is performed by a registered payment facilitator. This field must contain the tax ID of the actual merchant.
            * Format: alpha-numeric.
            * Fixed length: 11 or 14 characters.
          title: subMerchantTaxId
          type: string
      title: AdditionalDataCommon
    AdditionalDataLevel23:
      properties:
        enhancedSchemeData.customerReference:
          description: |-
            The customer code.
            * Encoding: ASCII
            * Max length: 25 characters
            * Must not start with a space or be all spaces
            * Must not be all zeros.
          title: enhancedSchemeData.customerReference
          type: string
        enhancedSchemeData.destinationCountryCode:
          description: |-
            The three-letter [ISO 3166-1 alpha-3 country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3) for the destination address.
            * Encoding: ASCII
            * Fixed length: 3 characters
          title: enhancedSchemeData.destinationCountryCode
          type: string
        enhancedSchemeData.destinationPostalCode:
          description: |-
            The postal code of the destination address.
            * Encoding: ASCII
            * Max length: 10 characters
            * Must not start with a space
          title: enhancedSchemeData.destinationPostalCode
          type: string
        enhancedSchemeData.destinationStateProvinceCode:
          description: |-
            Destination state or province code.
            * Encoding: ASCII
            * Max length: 3 characters
            * Must not start with a space
          title: enhancedSchemeData.destinationStateProvinceCode
          type: string
        enhancedSchemeData.dutyAmount:
          description: |-
            The duty amount, in [minor units](https://docs.adyen.com/development-resources/currency-codes).
            * For example, 2000 means USD 20.00.
            * Encoding: Numeric
            * Max length: 12 characters
          title: enhancedSchemeData.dutyAmount
          type: string
        enhancedSchemeData.freightAmount:
          description: |-
            The shipping amount, in [minor units](https://docs.adyen.com/development-resources/currency-codes).
            * For example, 2000 means USD 20.00.
            * Encoding: Numeric
            *Max length: 12 characters
          title: enhancedSchemeData.freightAmount
          type: string
        enhancedSchemeData.itemDetailLine[itemNr].commodityCode:
          description: |-
            The [UNSPC commodity code](https://www.unspsc.org/) of the item.
            * Encoding: ASCII
            * Max length: 12 characters
            * Must not start with a space or be all spaces
            * Must not be all zeros.
          title: "enhancedSchemeData.itemDetailLine[itemNr].commodityCode"
          type: string
        enhancedSchemeData.itemDetailLine[itemNr].description:
          description: |-
            A description of the item.
            * Encoding: ASCII
            * Max length: 26 characters
            * Must not start with a space or be all spaces
            * Must not be all zeros.
          title: "enhancedSchemeData.itemDetailLine[itemNr].description"
          type: string
        enhancedSchemeData.itemDetailLine[itemNr].discountAmount:
          description: |-
            The discount amount, in [minor units](https://docs.adyen.com/development-resources/currency-codes).
            * For example, 2000 means USD 20.00.
            * Encoding: Numeric
            * Max length: 12 characters
          title: "enhancedSchemeData.itemDetailLine[itemNr].discountAmount"
          type: string
        enhancedSchemeData.itemDetailLine[itemNr].productCode:
          description: |-
            The product code.
            * Encoding: ASCII.
            * Max length: 12 characters
            * Must not start with a space or be all spaces
            * Must not be all zeros.
          title: "enhancedSchemeData.itemDetailLine[itemNr].productCode"
          type: string
        enhancedSchemeData.itemDetailLine[itemNr].quantity:
          description: |+
            The number of items. Must be an integer greater than zero.
            * Encoding: Numeric
            * Max length: 12 characters
            * Must not start with a space or be all spaces

          title: "enhancedSchemeData.itemDetailLine[itemNr].quantity"
          type: string
        enhancedSchemeData.itemDetailLine[itemNr].totalAmount:
          description: |-
            The total amount, in [minor units](https://docs.adyen.com/development-resources/currency-codes).
            * For example, 2000 means USD 20.00.
            * Max length: 12 characters
            * Must not start with a space or be all spaces
            * Must not be all zeros.
          title: "enhancedSchemeData.itemDetailLine[itemNr].totalAmount"
          type: string
        enhancedSchemeData.itemDetailLine[itemNr].unitOfMeasure:
          description: |-
            The unit of measurement for an item.
            * Encoding: ASCII

            Max length: 3 characters
            * Must not start with a space or be all spaces
            * Must not be all zeros.
          title: "enhancedSchemeData.itemDetailLine[itemNr].unitOfMeasure"
          type: string
        enhancedSchemeData.itemDetailLine[itemNr].unitPrice:
          description: |-
            The unit price in [minor units](https://docs.adyen.com/development-resources/currency-codes).
            * For example, 2000 means USD 20.00.
            * Encoding: Numeric
            * Max length: 12 characters
            * Must not be all zeros.
          title: "enhancedSchemeData.itemDetailLine[itemNr].unitPrice"
          type: string
        enhancedSchemeData.orderDate:
          description: |-
            The order date.
            * Format: `ddMMyy`
            * Encoding: ASCII
            * Max length: 6 characters
          title: enhancedSchemeData.orderDate
          type: string
        enhancedSchemeData.shipFromPostalCode:
          description: |-
            The postal code of the address the item is shipped from.
            * Encoding: ASCII
            * Max length: 10 characters
            * Must not start with a space or be all spaces
            * Must not be all zeros.
          title: enhancedSchemeData.shipFromPostalCode
          type: string
        enhancedSchemeData.totalTaxAmount:
          description: |-
            The total tax amount, in [minor units](https://docs.adyen.com/development-resources/currency-codes).
            * For example, 2000 means USD 20.00.
            *Encoding: Numeric
            *Max length: 12 characters
            * Must not be all zeros.
          title: enhancedSchemeData.totalTaxAmount
          type: string
      title: AdditionalDataLevel23
    AdditionalDataLodging:
      properties:
        lodging.checkInDate:
          description: |-
            The arrival date.
            * Date format: **yyyyMmDd**. For example, for 2023 April 22, **20230422**.
          title: lodging.checkInDate
          type: string
        lodging.checkOutDate:
          description: |-
            The departure date.
            * Date format: **yyyyMmDd**. For example, for 2023 April 22, **20230422**.
          title: lodging.checkOutDate
          type: string
        lodging.customerServiceTollFreeNumber:
          description: |-
            The toll-free phone number for the lodging.
            * Format: numeric
            * Max length: 17 characters.
            * For US and CA numbers must be 10 characters in length
            * Must not start with a space
            * Must not contain any special characters such as + or -
            *Must not be all zeros.
          title: lodging.customerServiceTollFreeNumber
          type: string
        lodging.fireSafetyActIndicator:
          description: |-
            Identifies that the facility complies with the Hotel and Motel Fire Safety Act of 1990. Must be 'Y' or 'N'.
            * Format: alphabetic
            * Max length: 1 character
          title: lodging.fireSafetyActIndicator
          type: string
        lodging.folioCashAdvances:
          description: |-
            The folio cash advances, in [minor units](https://docs.adyen.com/development-resources/currency-codes).
            * Format: numeric
            * Max length: 12 characters
          title: lodging.folioCashAdvances
          type: string
        lodging.folioNumber:
          description: |-
            The card acceptor’s internal invoice or billing ID reference number.
            * Max length: 25 characters.
            * Must not start with a space
            *Must not be all zeros.
          title: lodging.folioNumber
          type: string
        lodging.foodBeverageCharges:
          description: |-
            Any charges for food and beverages associated with the booking, in [minor units](https://docs.adyen.com/development-resources/currency-codes).
            * Format: numeric
            * Max length: 12 characters
          title: lodging.foodBeverageCharges
          type: string
        lodging.noShowIndicator:
          description: "Indicates if the customer didn't check in for their booking.\n\
            \ Possible values: \n* **Y**: the customer didn't check in \n* **N**:\
            \ the customer checked in"
          title: lodging.noShowIndicator
          type: string
        lodging.prepaidExpenses:
          description: |-
            The prepaid expenses for the booking.
            * Format: numeric
            * Max length: 12 characters
          title: lodging.prepaidExpenses
          type: string
        lodging.propertyPhoneNumber:
          description: |-
            The lodging property location's phone number.
            * Format: numeric.
            * Min length: 10 characters
            * Max length: 17 characters
            * For US and CA numbers must be 10 characters in length
            * Must not start with a space
            * Must not contain any special characters such as + or -
            *Must not be all zeros.
          title: lodging.propertyPhoneNumber
          type: string
        lodging.room1.numberOfNights:
          description: |-
            The total number of nights the room is booked for.
            * Format: numeric
            * Must be a number between 0 and 99
            * Max length: 4 characters
          title: lodging.room1.numberOfNights
          type: string
        lodging.room1.rate:
          description: |-
            The rate for the room, in [minor units](https://docs.adyen.com/development-resources/currency-codes).
            * Format: numeric
            * Max length: 12 characters
            * Must not be a negative number
          title: lodging.room1.rate
          type: string
        lodging.totalRoomTax:
          description: |-
            The total room tax amount, in [minor units](https://docs.adyen.com/development-resources/currency-codes).
            * Format: numeric
            * Max length: 12 characters
            * Must not be a negative number
          title: lodging.totalRoomTax
          type: string
        lodging.totalTax:
          description: |-
            The total tax amount, in [minor units](https://docs.adyen.com/development-resources/currency-codes).
            * Format: numeric
            * Max length: 12 characters
            * Must not be a negative number
          title: lodging.totalTax
          type: string
        travelEntertainmentAuthData.duration:
          description: |-
            The number of nights. This should be included in the auth message.
            * Format: numeric
            * Max length: 4 characters
          title: travelEntertainmentAuthData.duration
          type: string
        travelEntertainmentAuthData.market:
          description: |-
            Indicates what market-specific dataset will be submitted. Must be 'H' for Hotel. This should be included in the auth message.

            * Format: alphanumeric
            * Max length: 1 character
          title: travelEntertainmentAuthData.market
          type: string
      title: AdditionalDataLodging
    AdditionalDataOpenInvoice:
      properties:
        openinvoicedata.merchantData:
          description: |-
            Holds different merchant data points like product, purchase, customer, and so on. It takes data in a Base64 encoded string.

            The `merchantData` parameter needs to be added to the `openinvoicedata` signature at the end.

            Since the field is optional, if it's not included it does not impact computing the merchant signature.

            Applies only to Klarna.

            You can contact Klarna for the format and structure of the string.
          title: openinvoicedata.merchantData
          type: string
        openinvoicedata.numberOfLines:
          description: |-
            The number of invoice lines included in `openinvoicedata`.

            There needs to be at least one line, so `numberOfLines` needs to be at least 1.
          title: openinvoicedata.numberOfLines
          type: string
        openinvoicedata.recipientFirstName:
          description: "First name of the recipient. If the delivery address and the\
            \ billing address are different, specify the `recipientFirstName` and\
            \ `recipientLastName` to share the delivery address with Klarna. Otherwise,\
            \ only the billing address is shared with Klarna."
          title: openinvoicedata.recipientFirstName
          type: string
        openinvoicedata.recipientLastName:
          description: "Last name of the recipient. If the delivery address and the\
            \ billing address are different, specify the `recipientFirstName` and\
            \ `recipientLastName` to share the delivery address with Klarna. Otherwise,\
            \ only the billing address is shared with Klarna."
          title: openinvoicedata.recipientLastName
          type: string
        openinvoicedataLine[itemNr].currencyCode:
          description: The three-character ISO currency code.
          title: "openinvoicedataLine[itemNr].currencyCode"
          type: string
        openinvoicedataLine[itemNr].description:
          description: A text description of the product the invoice line refers to.
          title: "openinvoicedataLine[itemNr].description"
          type: string
        openinvoicedataLine[itemNr].itemAmount:
          description: |-
            The price for one item in the invoice line, represented in minor units.

            The due amount for the item, VAT excluded.
          title: "openinvoicedataLine[itemNr].itemAmount"
          type: string
        openinvoicedataLine[itemNr].itemId:
          description: A unique id for this item. Required for RatePay if the description
            of each item is not unique.
          title: "openinvoicedataLine[itemNr].itemId"
          type: string
        openinvoicedataLine[itemNr].itemVatAmount:
          description: "The VAT due for one item in the invoice line, represented\
            \ in minor units."
          title: "openinvoicedataLine[itemNr].itemVatAmount"
          type: string
        openinvoicedataLine[itemNr].itemVatPercentage:
          description: |-
            The VAT percentage for one item in the invoice line, represented in minor units.

            For example, 19% VAT is specified as 1900.
          title: "openinvoicedataLine[itemNr].itemVatPercentage"
          type: string
        openinvoicedataLine[itemNr].numberOfItems:
          description: The number of units purchased of a specific product.
          title: "openinvoicedataLine[itemNr].numberOfItems"
          type: string
        openinvoicedataLine[itemNr].returnShippingCompany:
          description: Name of the shipping company handling the the return shipment.
          title: "openinvoicedataLine[itemNr].returnShippingCompany"
          type: string
        openinvoicedataLine[itemNr].returnTrackingNumber:
          description: The tracking number for the return of the shipment.
          title: "openinvoicedataLine[itemNr].returnTrackingNumber"
          type: string
        openinvoicedataLine[itemNr].returnTrackingUri:
          description: URI where the customer can track the return of their shipment.
          title: "openinvoicedataLine[itemNr].returnTrackingUri"
          type: string
        openinvoicedataLine[itemNr].shippingCompany:
          description: Name of the shipping company handling the delivery.
          title: "openinvoicedataLine[itemNr].shippingCompany"
          type: string
        openinvoicedataLine[itemNr].shippingMethod:
          description: Shipping method.
          title: "openinvoicedataLine[itemNr].shippingMethod"
          type: string
        openinvoicedataLine[itemNr].trackingNumber:
          description: The tracking number for the shipment.
          title: "openinvoicedataLine[itemNr].trackingNumber"
          type: string
        openinvoicedataLine[itemNr].trackingUri:
          description: URI where the customer can track their shipment.
          title: "openinvoicedataLine[itemNr].trackingUri"
          type: string
      title: AdditionalDataOpenInvoice
    AdditionalDataOpi:
      properties:
        opi.includeTransToken:
          description: |-
            Optional boolean indicator. Set to **true** if you want an ecommerce transaction to return an `opi.transToken` as additional data in the response.

            You can store this Oracle Payment Interface token in your Oracle Opera database. For more information and required settings, see [Oracle Opera](https://docs.adyen.com/plugins/oracle-opera#opi-token-ecommerce).
          title: opi.includeTransToken
          type: string
      title: AdditionalDataOpi
    AdditionalDataRatepay:
      properties:
        ratepay.installmentAmount:
          description: Amount the customer has to pay each month.
          title: ratepay.installmentAmount
          type: string
        ratepay.interestRate:
          description: Interest rate of this installment.
          title: ratepay.interestRate
          type: string
        ratepay.lastInstallmentAmount:
          description: Amount of the last installment.
          title: ratepay.lastInstallmentAmount
          type: string
        ratepay.paymentFirstday:
          description: Calendar day of the first payment.
          title: ratepay.paymentFirstday
          type: string
        ratepaydata.deliveryDate:
          description: Date the merchant delivered the goods to the customer.
          title: ratepaydata.deliveryDate
          type: string
        ratepaydata.dueDate:
          description: Date by which the customer must settle the payment.
          title: ratepaydata.dueDate
          type: string
        ratepaydata.invoiceDate:
          description: "Invoice date, defined by the merchant. If not included, the\
            \ invoice date is set to the delivery date."
          title: ratepaydata.invoiceDate
          type: string
        ratepaydata.invoiceId:
          description: "Identification name or number for the invoice, defined by\
            \ the merchant."
          title: ratepaydata.invoiceId
          type: string
      title: AdditionalDataRatepay
    AdditionalDataRetry:
      properties:
        retry.chainAttemptNumber:
          description: |-
            The number of times the transaction (not order) has been retried between different payment service providers. For instance, the `chainAttemptNumber` set to 2 means that this transaction has been recently tried on another provider before being sent to Adyen.

            > If you submit `retry.chainAttemptNumber`, `retry.orderAttemptNumber`, and `retry.skipRetry` values, we also recommend you provide the `merchantOrderReference` to facilitate linking payment attempts together.
          title: retry.chainAttemptNumber
          type: string
        retry.orderAttemptNumber:
          description: |-
            The index of the attempt to bill a particular order, which is identified by the `merchantOrderReference` field. For example, if a recurring transaction fails and is retried one day later, then the order number for these attempts would be 1 and 2, respectively.

            > If you submit `retry.chainAttemptNumber`, `retry.orderAttemptNumber`, and `retry.skipRetry` values, we also recommend you provide the `merchantOrderReference` to facilitate linking payment attempts together.
          title: retry.orderAttemptNumber
          type: string
        retry.skipRetry:
          description: |-
            The Boolean value indicating whether Adyen should skip or retry this transaction, if possible.

            > If you submit `retry.chainAttemptNumber`, `retry.orderAttemptNumber`, and `retry.skipRetry` values, we also recommend you provide the `merchantOrderReference` to facilitate linking payment attempts together.
          title: retry.skipRetry
          type: string
      title: AdditionalDataRetry
    AdditionalDataRisk:
      properties:
        riskdata.[customFieldName]:
          description: "The data for your custom risk field. For more information,\
            \ refer to [Create custom risk fields](https://docs.adyen.com/risk-management/configure-custom-risk-rules#step-1-create-custom-risk-fields)."
          title: "riskdata.[customFieldName]"
          type: string
        riskdata.basket.item[itemNr].amountPerItem:
          description: "The price of item in the basket, represented in [minor units](https://docs.adyen.com/development-resources/currency-codes)."
          title: "riskdata.basket.item[itemNr].amountPerItem"
          type: string
        riskdata.basket.item[itemNr].brand:
          description: Brand of the item.
          title: "riskdata.basket.item[itemNr].brand"
          type: string
        riskdata.basket.item[itemNr].category:
          description: Category of the item.
          title: "riskdata.basket.item[itemNr].category"
          type: string
        riskdata.basket.item[itemNr].color:
          description: Color of the item.
          title: "riskdata.basket.item[itemNr].color"
          type: string
        riskdata.basket.item[itemNr].currency:
          description: "The three-character [ISO currency code](https://en.wikipedia.org/wiki/ISO_4217)."
          title: "riskdata.basket.item[itemNr].currency"
          type: string
        riskdata.basket.item[itemNr].itemID:
          description: ID of the item.
          title: "riskdata.basket.item[itemNr].itemID"
          type: string
        riskdata.basket.item[itemNr].manufacturer:
          description: Manufacturer of the item.
          title: "riskdata.basket.item[itemNr].manufacturer"
          type: string
        riskdata.basket.item[itemNr].productTitle:
          description: A text description of the product the invoice line refers to.
          title: "riskdata.basket.item[itemNr].productTitle"
          type: string
        riskdata.basket.item[itemNr].quantity:
          description: Quantity of the item purchased.
          title: "riskdata.basket.item[itemNr].quantity"
          type: string
        riskdata.basket.item[itemNr].receiverEmail:
          description: Email associated with the given product in the basket (usually
            in electronic gift cards).
          title: "riskdata.basket.item[itemNr].receiverEmail"
          type: string
        riskdata.basket.item[itemNr].size:
          description: Size of the item.
          title: "riskdata.basket.item[itemNr].size"
          type: string
        riskdata.basket.item[itemNr].sku:
          description: "[Stock keeping unit](https://en.wikipedia.org/wiki/Stock_keeping_unit)."
          title: "riskdata.basket.item[itemNr].sku"
          type: string
        riskdata.basket.item[itemNr].upc:
          description: "[Universal Product Code](https://en.wikipedia.org/wiki/Universal_Product_Code)."
          title: "riskdata.basket.item[itemNr].upc"
          type: string
        riskdata.promotions.promotion[itemNr].promotionCode:
          description: Code of the promotion.
          title: "riskdata.promotions.promotion[itemNr].promotionCode"
          type: string
        riskdata.promotions.promotion[itemNr].promotionDiscountAmount:
          description: "The discount amount of the promotion, represented in [minor\
            \ units](https://docs.adyen.com/development-resources/currency-codes)."
          title: "riskdata.promotions.promotion[itemNr].promotionDiscountAmount"
          type: string
        riskdata.promotions.promotion[itemNr].promotionDiscountCurrency:
          description: "The three-character [ISO currency code](https://en.wikipedia.org/wiki/ISO_4217)."
          title: "riskdata.promotions.promotion[itemNr].promotionDiscountCurrency"
          type: string
        riskdata.promotions.promotion[itemNr].promotionDiscountPercentage:
          description: |-
            Promotion's percentage discount. It is represented in percentage value and there is no need to include the '%' sign.

            e.g. for a promotion discount of 30%, the value of the field should be 30.
          title: "riskdata.promotions.promotion[itemNr].promotionDiscountPercentage"
          type: string
        riskdata.promotions.promotion[itemNr].promotionName:
          description: Name of the promotion.
          title: "riskdata.promotions.promotion[itemNr].promotionName"
          type: string
        riskdata.riskProfileReference:
          description: "Reference number of the risk profile that you want to apply\
            \ to the payment. If not provided or left blank, the merchant-level account's\
            \ default risk profile will be applied to the payment. For more information,\
            \ see [dynamically assign a risk profile to a payment](https://docs.adyen.com/risk-management/create-and-use-risk-profiles#dynamically-assign-a-risk-profile-to-a-payment)."
          title: riskdata.riskProfileReference
          type: string
        riskdata.skipRisk:
          description: "If this parameter is provided with the value **true**, risk\
            \ checks for the payment request are skipped and the transaction will\
            \ not get a risk score."
          title: riskdata.skipRisk
          type: string
      title: AdditionalDataRisk
    AdditionalDataRiskStandalone:
      properties:
        PayPal.CountryCode:
          description: Shopper's country of residence in the form of ISO standard
            3166 2-character country codes.
          title: PayPal.CountryCode
          type: string
        PayPal.EmailId:
          description: Shopper's email.
          title: PayPal.EmailId
          type: string
        PayPal.FirstName:
          description: Shopper's first name.
          title: PayPal.FirstName
          type: string
        PayPal.LastName:
          description: Shopper's last name.
          title: PayPal.LastName
          type: string
        PayPal.PayerId:
          description: "Unique PayPal Customer Account identification number. Character\
            \ length and limitations: 13 single-byte alphanumeric characters."
          title: PayPal.PayerId
          type: string
        PayPal.Phone:
          description: Shopper's phone number.
          title: PayPal.Phone
          type: string
        PayPal.ProtectionEligibility:
          description: |-
            Allowed values:
            * **Eligible** — Merchant is protected by PayPal's Seller Protection Policy for Unauthorized Payments and Item Not Received.

            * **PartiallyEligible** — Merchant is protected by PayPal's Seller Protection Policy for Item Not Received.

            * **Ineligible** — Merchant is not protected under the Seller Protection Policy.
          title: PayPal.ProtectionEligibility
          type: string
        PayPal.TransactionId:
          description: Unique transaction ID of the payment.
          title: PayPal.TransactionId
          type: string
        avsResultRaw:
          description: "Raw AVS result received from the acquirer, where available.\
            \ Example: D"
          title: avsResultRaw
          type: string
        bin:
          description: "The Bank Identification Number of a credit card, which is\
            \ the first six digits of a card number. Required for [tokenized card\
            \ request](https://docs.adyen.com/risk-management/standalone-risk#tokenised-pan-request)."
          title: bin
          type: string
        cvcResultRaw:
          description: "Raw CVC result received from the acquirer, where available.\
            \ Example: 1"
          title: cvcResultRaw
          type: string
        riskToken:
          description: Unique identifier or token for the shopper's card details.
          title: riskToken
          type: string
        threeDAuthenticated:
          description: "A Boolean value indicating whether 3DS authentication was\
            \ completed on this payment. Example: true"
          title: threeDAuthenticated
          type: string
        threeDOffered:
          description: "A Boolean value indicating whether 3DS was offered for this\
            \ payment. Example: true"
          title: threeDOffered
          type: string
        tokenDataType:
          description: "Required for PayPal payments only. The only supported value\
            \ is: **paypal**."
          title: tokenDataType
          type: string
      title: AdditionalDataRiskStandalone
    AdditionalDataSubMerchant:
      properties:
        subMerchant.numberOfSubSellers:
          description: "Required for transactions performed by registered payment\
            \ facilitators. Indicates the number of sub-merchants contained in the\
            \ request. For example, **3**."
          title: subMerchant.numberOfSubSellers
          type: string
        subMerchant.subSeller[subSellerNr].city:
          description: |-
            Required for transactions performed by registered payment facilitators. The city of the sub-merchant's address.
            * Format: Alphanumeric
            * Maximum length: 13 characters
          title: "subMerchant.subSeller[subSellerNr].city"
          type: string
        subMerchant.subSeller[subSellerNr].country:
          description: "Required for transactions performed by registered payment\
            \ facilitators. The three-letter country code of the sub-merchant's address.\
            \ For example, **BRA** for Brazil. \n* Format: [ISO 3166-1 alpha-3](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3)\n\
            * Fixed length: 3 characters"
          title: "subMerchant.subSeller[subSellerNr].country"
          type: string
        subMerchant.subSeller[subSellerNr].id:
          description: "Required for transactions performed by registered payment\
            \ facilitators. A unique identifier that you create for the sub-merchant,\
            \ used by schemes to identify the sub-merchant. \n* Format: Alphanumeric\n\
            * Maximum length: 15 characters"
          title: "subMerchant.subSeller[subSellerNr].id"
          type: string
        subMerchant.subSeller[subSellerNr].mcc:
          description: "Required for transactions performed by registered payment\
            \ facilitators. The sub-merchant's 4-digit Merchant Category Code (MCC).\
            \ \n* Format: Numeric\n* Fixed length: 4 digits"
          title: "subMerchant.subSeller[subSellerNr].mcc"
          type: string
        subMerchant.subSeller[subSellerNr].name:
          description: |-
            Required for transactions performed by registered payment facilitators. The name of the sub-merchant. Based on scheme specifications, this value will overwrite the shopper statement  that will appear in the card statement.
            * Format: Alphanumeric
            * Maximum length: 22 characters
          title: "subMerchant.subSeller[subSellerNr].name"
          type: string
        subMerchant.subSeller[subSellerNr].postalCode:
          description: |-
            Required for transactions performed by registered payment facilitators. The postal code of the sub-merchant's address, without dashes.
            * Format: Numeric
            * Fixed length: 8 digits
          title: "subMerchant.subSeller[subSellerNr].postalCode"
          type: string
        subMerchant.subSeller[subSellerNr].state:
          description: |-
            Required for transactions performed by registered payment facilitators. The state code of the sub-merchant's address, if applicable to the country.
            * Format: Alphanumeric
            * Maximum length: 2 characters
          title: "subMerchant.subSeller[subSellerNr].state"
          type: string
        subMerchant.subSeller[subSellerNr].street:
          description: |-
            Required for transactions performed by registered payment facilitators. The street name and house number of the sub-merchant's address.
            * Format: Alphanumeric
            * Maximum length: 60 characters
          title: "subMerchant.subSeller[subSellerNr].street"
          type: string
        subMerchant.subSeller[subSellerNr].taxId:
          description: |-
            Required for transactions performed by registered payment facilitators. The tax ID of the sub-merchant.
            * Format: Numeric
            * Fixed length: 11 digits for the CPF or 14 digits for the CNPJ
          title: "subMerchant.subSeller[subSellerNr].taxId"
          type: string
      title: AdditionalDataSubMerchant
    AdditionalDataTemporaryServices:
      properties:
        enhancedSchemeData.customerReference:
          description: |-
            The customer code, if supplied by a customer.
            * Encoding: ASCII
            * maxLength: 25
          title: enhancedSchemeData.customerReference
          type: string
        enhancedSchemeData.employeeName:
          description: "The name or ID of the person working in a temporary capacity.\n\
            * maxLength: 40.  \n* Must not be all spaces. \n*Must not be all zeros."
          title: enhancedSchemeData.employeeName
          type: string
        enhancedSchemeData.jobDescription:
          description: "The job description of the person working in a temporary capacity.\n\
            * maxLength: 40 \n* Must not be all spaces. \n*Must not be all zeros."
          title: enhancedSchemeData.jobDescription
          type: string
        enhancedSchemeData.regularHoursRate:
          description: |-
            The amount paid for regular hours worked, [minor units](https://docs.adyen.com/development-resources/currency-codes).
            * maxLength: 7
            * Must not be empty
            * Can be all zeros
          title: enhancedSchemeData.regularHoursRate
          type: string
        enhancedSchemeData.regularHoursWorked:
          description: |-
            The hours worked.
            * maxLength: 7
            * Must not be empty
            * Can be all zeros
          title: enhancedSchemeData.regularHoursWorked
          type: string
        enhancedSchemeData.requestName:
          description: |-
            The name of the person requesting temporary services.
            * maxLength: 40
            * Must not be all zeros
            * Must not be all spaces
          title: enhancedSchemeData.requestName
          type: string
        enhancedSchemeData.tempStartDate:
          description: |-
            The billing period start date.
            * Format: ddMMyy
            * maxLength: 6
          title: enhancedSchemeData.tempStartDate
          type: string
        enhancedSchemeData.tempWeekEnding:
          description: |-
            The billing period end date.
            * Format: ddMMyy
            * maxLength: 6
          title: enhancedSchemeData.tempWeekEnding
          type: string
        enhancedSchemeData.totalTaxAmount:
          description: |-
            The total tax amount, in [minor units](https://docs.adyen.com/development-resources/currency-codes). For example, 2000 means USD 20.00
            * maxLength: 12
          title: enhancedSchemeData.totalTaxAmount
          type: string
      title: AdditionalDataTemporaryServices
    AdditionalDataWallets:
      properties:
        androidpay.token:
          description: The Android Pay token retrieved from the SDK.
          title: androidpay.token
          type: string
        masterpass.transactionId:
          description: The Mastercard Masterpass Transaction ID retrieved from the
            SDK.
          title: masterpass.transactionId
          type: string
        payment.token:
          description: The Apple Pay token retrieved from the SDK.
          title: payment.token
          type: string
        paywithgoogle.token:
          description: The Google Pay token retrieved from the SDK.
          title: paywithgoogle.token
          type: string
        samsungpay.token:
          description: The Samsung Pay token retrieved from the SDK.
          title: samsungpay.token
          type: string
        visacheckout.callId:
          description: The Visa Checkout Call ID retrieved from the SDK.
          title: visacheckout.callId
          type: string
      title: AdditionalDataWallets
    Address:
      example:
        country: country
        stateOrProvince: stateOrProvince
        city: city
        houseNumberOrName: houseNumberOrName
        street: street
        postalCode: postalCode
      properties:
        city:
          description: "The name of the city. Maximum length: 3000 characters."
          maxLength: 3000
          title: city
          type: string
        country:
          description: |-
            The two-character ISO-3166-1 alpha-2 country code. For example, **US**.
            > If you don't know the country or are not collecting the country from the shopper, provide `country` as `ZZ`.
          title: country
          type: string
        houseNumberOrName:
          description: "The number or name of the house. Maximum length: 3000 characters."
          maxLength: 3000
          title: houseNumberOrName
          type: string
        postalCode:
          description: "A maximum of five digits for an address in the US, or a maximum\
            \ of ten characters for an address in all other countries."
          title: postalCode
          type: string
        stateOrProvince:
          description: |-
            The two-character ISO 3166-2 state or province code. For example, **CA** in the US or **ON** in Canada.
            > Required for the US and Canada.
          title: stateOrProvince
          type: string
        street:
          description: |-
            The name of the street. Maximum length: 3000 characters.
            > The house number should not be included in this field; it should be separately provided via `houseNumberOrName`.
          maxLength: 3000
          title: street
          type: string
      required:
      - city
      - country
      - houseNumberOrName
      - postalCode
      - street
      title: Address
    AfterpayDetails:
      additionalProperties: false
      properties:
        billingAddress:
          description: The address where to send the invoice.
          title: billingAddress
          type: string
        checkoutAttemptId:
          description: The checkout attempt identifier.
          title: checkoutAttemptId
          type: string
          x-addedInVersion: "68"
        deliveryAddress:
          description: The address where the goods should be delivered.
          title: deliveryAddress
          type: string
        personalDetails:
          description: "Shopper name, date of birth, phone number, and email address."
          title: personalDetails
          type: string
        recurringDetailReference:
          deprecated: true
          description: This is the `recurringDetailReference` returned in the response
            when you created the token.
          title: recurringDetailReference
          type: string
          x-deprecatedInVersion: "49"
          x-deprecatedMessage: Use `storedPaymentMethodId` instead.
        storedPaymentMethodId:
          description: This is the `recurringDetailReference` returned in the response
            when you created the token.
          maxLength: 64
          title: storedPaymentMethodId
          type: string
          x-addedInVersion: "49"
        type:
          default: afterpay_default
          description: '**afterpay_default**'
          enum:
          - afterpay_default
          - afterpaytouch
          - afterpay_b2b
          - clearpay
          title: type
          type: string
      required:
      - type
      title: Afterpay
    AmazonPayDetails:
      additionalProperties: false
      properties:
        amazonPayToken:
          description: "This is the `amazonPayToken` that you obtained from the [Get\
            \ Checkout Session](https://amazon-pay-acquirer-guide.s3-eu-west-1.amazonaws.com/v1/amazon-pay-api-v2/checkout-session.html#get-checkout-session)\
            \ response. This token is used for API only integration specifically."
          title: amazonPayToken
          type: string
        checkoutAttemptId:
          description: The checkout attempt identifier.
          title: checkoutAttemptId
          type: string
          x-addedInVersion: "68"
        checkoutSessionId:
          description: "The `checkoutSessionId` is used to identify the checkout session\
            \ at the Amazon Pay side. This field is required only for drop-in and\
            \ components integration, where it replaces the amazonPayToken."
          title: checkoutSessionId
          type: string
        type:
          default: amazonpay
          description: '**amazonpay**'
          enum:
          - amazonpay
          title: type
          type: string
      title: Amazon Pay
    Amount:
      example:
        currency: currency
        value: 0
      properties:
        currency:
          description: "The three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes)."
          maxLength: 3
          minLength: 3
          title: currency
          type: string
        value:
          description: "The amount of the transaction, in [minor units](https://docs.adyen.com/development-resources/currency-codes)."
          format: int64
          title: value
          type: integer
      required:
      - currency
      - value
      title: Amount
    AndroidPayDetails:
      additionalProperties: false
      properties:
        checkoutAttemptId:
          description: The checkout attempt identifier.
          title: checkoutAttemptId
          type: string
          x-addedInVersion: "68"
        type:
          default: androidpay
          description: '**androidpay**'
          enum:
          - androidpay
          title: type
          type: string
      title: Android Pay
    ApplePayDetails:
      additionalProperties: false
      example:
        storedPaymentMethodId: storedPaymentMethodId
        recurringDetailReference: recurringDetailReference
        applePayToken: applePayToken
        checkoutAttemptId: checkoutAttemptId
        fundingSource: credit
        type: applepay
      properties:
        applePayToken:
          description: The stringified and base64 encoded `paymentData` you retrieved
            from the Apple framework.
          maxLength: 10000
          title: applePayToken
          type: string
        checkoutAttemptId:
          description: The checkout attempt identifier.
          title: checkoutAttemptId
          type: string
          x-addedInVersion: "68"
        fundingSource:
          description: "The funding source that should be used when multiple sources\
            \ are available. For Brazilian combo cards, by default the funding source\
            \ is credit. To use debit, set this value to **debit**."
          enum:
          - credit
          - debit
          title: fundingSource
          type: string
        recurringDetailReference:
          deprecated: true
          description: This is the `recurringDetailReference` returned in the response
            when you created the token.
          title: recurringDetailReference
          type: string
          x-deprecatedInVersion: "49"
          x-deprecatedMessage: Use `storedPaymentMethodId` instead.
        storedPaymentMethodId:
          description: This is the `recurringDetailReference` returned in the response
            when you created the token.
          maxLength: 64
          title: storedPaymentMethodId
          type: string
          x-addedInVersion: "49"
        type:
          default: applepay
          description: '**applepay**'
          enum:
          - applepay
          title: type
          type: string
      required:
      - applePayToken
      title: Apple Pay
    ApplePayDonations:
      additionalProperties: false
      example:
        storedPaymentMethodId: storedPaymentMethodId
        recurringDetailReference: recurringDetailReference
        applePayToken: applePayToken
        checkoutAttemptId: checkoutAttemptId
        fundingSource: credit
        type: applepay
      properties:
        applePayToken:
          description: The stringified and base64 encoded `paymentData` you retrieved
            from the Apple framework.
          maxLength: 10000
          title: applePayToken
          type: string
        checkoutAttemptId:
          description: The checkout attempt identifier.
          title: checkoutAttemptId
          type: string
          x-addedInVersion: "68"
        fundingSource:
          description: "The funding source that should be used when multiple sources\
            \ are available. For Brazilian combo cards, by default the funding source\
            \ is credit. To use debit, set this value to **debit**."
          enum:
          - credit
          - debit
          title: fundingSource
          type: string
        recurringDetailReference:
          deprecated: true
          description: This is the `recurringDetailReference` returned in the response
            when you created the token.
          title: recurringDetailReference
          type: string
          x-deprecatedInVersion: "49"
          x-deprecatedMessage: Use `storedPaymentMethodId` instead.
        storedPaymentMethodId:
          description: This is the `recurringDetailReference` returned in the response
            when you created the token.
          maxLength: 64
          title: storedPaymentMethodId
          type: string
          x-addedInVersion: "49"
        type:
          default: applepay
          description: '**applepay**'
          enum:
          - applepay
          title: type
          type: string
      required:
      - applePayToken
      title: Apple Pay
    ApplePaySessionRequest:
      example:
        merchantIdentifier: merchantIdentifier
        displayName: displayName
        domainName: domainName
      properties:
        displayName:
          description: |-
            This is the name that your shoppers will see in the Apple Pay interface.

            The value returned as `configuration.merchantName` field from the [`/paymentMethods`](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/paymentMethods) response.
          title: displayName
          type: string
        domainName:
          description: |-
            The domain name you provided when you added Apple Pay in your Customer Area.

            This must match the `window.location.hostname` of the web shop.
          title: domainName
          type: string
        merchantIdentifier:
          description: |-
            Your merchant identifier registered with Apple Pay.

            Use the value of the `configuration.merchantId` field from the [`/paymentMethods`](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/paymentMethods) response.
          title: merchantIdentifier
          type: string
      required:
      - displayName
      - domainName
      - merchantIdentifier
      title: ApplePaySessionRequest
    ApplePaySessionResponse:
      example:
        data: data
      properties:
        data:
          description: "Base64 encoded data you need to [complete the Apple Pay merchant\
            \ validation](https://docs.adyen.com/payment-methods/apple-pay/api-only?tab=adyen-certificate-validation_1#complete-apple-pay-session-validation)."
          title: data
          type: string
      required:
      - data
      title: ApplePaySessionResponse
    ApplicationInfo:
      example:
        adyenLibrary:
          name: name
          version: version
        merchantApplication:
          name: name
          version: version
        adyenPaymentSource:
          name: name
          version: version
        merchantDevice:
          reference: reference
          os: os
          osVersion: osVersion
        shopperInteractionDevice:
          os: os
          osVersion: osVersion
          locale: locale
        externalPlatform:
          name: name
          integrator: integrator
          version: version
      properties:
        adyenLibrary:
          $ref: '#/components/schemas/CommonField'
        adyenPaymentSource:
          $ref: '#/components/schemas/CommonField'
        externalPlatform:
          $ref: '#/components/schemas/ExternalPlatform'
        merchantApplication:
          $ref: '#/components/schemas/CommonField'
        merchantDevice:
          $ref: '#/components/schemas/MerchantDevice'
        shopperInteractionDevice:
          $ref: '#/components/schemas/ShopperInteractionDevice'
      title: ApplicationInfo
    AuthenticationData:
      example:
        authenticationOnly: false
        threeDSRequestData:
          challengeWindowSize: "01"
          dataOnly: "false"
          threeDSVersion: 2.1.0
          nativeThreeDS: preferred
        attemptAuthentication: always
      properties:
        attemptAuthentication:
          description: |-
            Indicates when 3D Secure authentication should be attempted. This overrides all other rules, including [Dynamic 3D Secure settings](https://docs.adyen.com/risk-management/dynamic-3d-secure).

            Possible values:

            * **always**: Perform 3D Secure authentication.
            * **never**: Don't perform 3D Secure authentication. If PSD2 SCA or other national regulations require authentication, the transaction gets declined.
          enum:
          - always
          - never
          title: attemptAuthentication
          type: string
          x-addedInVersion: "69"
        authenticationOnly:
          default: false
          description: |-
            If set to true, you will only perform the [3D Secure 2 authentication](https://docs.adyen.com/online-payments/3d-secure/other-3ds-flows/authentication-only), and not the payment authorisation.
            Default: **false**.
          title: authenticationOnly
          type: boolean
          x-addedInVersion: "69"
        threeDSRequestData:
          $ref: '#/components/schemas/ThreeDSRequestData'
      title: AuthenticationData
    Avs:
      example:
        addressEditable: true
        enabled: true
      properties:
        addressEditable:
          description: Indicates whether the shopper is allowed to modify the billing
            address for the current payment request.
          title: addressEditable
          type: boolean
        enabled:
          description: |-
            Specifies whether the shopper should enter their billing address during checkout.

            Allowed values:
            * yes — Perform AVS checks for every card payment.
            * automatic — Perform AVS checks only when required to optimize the conversion rate.
            * no — Do not perform AVS checks.
          enum:
          - true
          - false
          - automatic
          title: enabled
          type: string
      title: Avs
    BacsDirectDebitDetails:
      additionalProperties: false
      properties:
        bankAccountNumber:
          description: The bank account number (without separators).
          title: bankAccountNumber
          type: string
          x-addedInVersion: "65"
        bankLocationId:
          description: The bank routing number of the account.
          title: bankLocationId
          type: string
          x-addedInVersion: "65"
        checkoutAttemptId:
          description: The checkout attempt identifier.
          title: checkoutAttemptId
          type: string
          x-addedInVersion: "68"
        holderName:
          description: The name of the bank account holder.
          title: holderName
          type: string
          x-addedInVersion: "65"
        recurringDetailReference:
          deprecated: true
          description: This is the `recurringDetailReference` returned in the response
            when you created the token.
          title: recurringDetailReference
          type: string
          x-deprecatedInVersion: "49"
          x-deprecatedMessage: Use `storedPaymentMethodId` instead.
        storedPaymentMethodId:
          description: This is the `recurringDetailReference` returned in the response
            when you created the token.
          maxLength: 64
          title: storedPaymentMethodId
          type: string
          x-addedInVersion: "49"
        type:
          default: directdebit_GB
          description: '**directdebit_GB**'
          enum:
          - directdebit_GB
          title: type
          type: string
      title: BACS Direct Debit
    BalanceCheckRequest:
      example:
        dccQuote:
          reference: reference
          validTill: 2000-01-23T04:56:07.000+00:00
          signature: signature
          accountType: accountType
          buy:
            currency: currency
            value: 0
          sell:
            currency: currency
            value: 0
          interbank:
            currency: currency
            value: 0
          source: source
          type: type
          basePoints: 2
          account: account
          baseAmount:
            currency: currency
            value: 0
        metadata:
          key: metadata
        splits:
        - reference: reference
          amount:
            currency: currency
            value: 5
          description: description
          type: AcquiringFees
          account: account
        - reference: reference
          amount:
            currency: currency
            value: 5
          description: description
          type: AcquiringFees
          account: account
        telephoneNumber: telephoneNumber
        deviceFingerprint: deviceFingerprint
        localizedShopperStatement:
          key: localizedShopperStatement
        socialSecurityNumber: socialSecurityNumber
        shopperIP: shopperIP
        mcc: mcc
        threeDSAuthenticationOnly: false
        merchantRiskIndicator:
          preOrderDate: 2000-01-23T04:56:07.000+00:00
          shipIndicator: shipIndicator
          giftCardAmount:
            currency: currency
            value: 0
          preOrderPurchaseInd: preOrderPurchaseInd
          deliveryEmail: deliveryEmail
          giftCardCount: 1
          addressMatch: true
          deliveryTimeframe: electronicDelivery
          reorderItems: true
          deliveryEmailAddress: deliveryEmailAddress
          preOrderPurchase: true
          giftCardCurr: giftCardCurr
          reorderItemsInd: reorderItemsInd
          deliveryAddressIndicator: shipToBillingAddress
        reference: reference
        shopperName:
          firstName: firstName
          lastName: lastName
        deliveryAddress:
          country: country
          stateOrProvince: stateOrProvince
          city: city
          houseNumberOrName: houseNumberOrName
          street: street
          postalCode: postalCode
        installments:
          plan: regular
          value: 7
        recurringProcessingModel: CardOnFile
        selectedRecurringDetailReference: selectedRecurringDetailReference
        shopperInteraction: Ecommerce
        totalsGroup: totalsGroup
        additionalData:
          challengeWindowSize: "01"
          mpiImplementationType: mpiImplementationType
          allow3DS2: allow3DS2
          executeThreeD: executeThreeD
          threeDSVersion: threeDSVersion
          scaExemption: scaExemption
        selectedBrand: selectedBrand
        deliveryDate: 2000-01-23T04:56:07.000+00:00
        trustedShopper: true
        accountInfo:
          passwordChangeDate: 2000-01-23T04:56:07.000+00:00
          paymentAccountIndicator: notApplicable
          suspiciousActivity: true
          deliveryAddressUsageIndicator: thisTransaction
          pastTransactionsYear: 1
          accountType: notApplicable
          homePhone: homePhone
          paymentAccountAge: 2000-01-23T04:56:07.000+00:00
          accountAgeIndicator: notApplicable
          deliveryAddressUsageDate: 2000-01-23T04:56:07.000+00:00
          accountChangeDate: 2000-01-23T04:56:07.000+00:00
          accountCreationDate: 2000-01-23T04:56:07.000+00:00
          mobilePhone: mobilePhone
          pastTransactionsDay: 6
          accountChangeIndicator: thisTransaction
          passwordChangeIndicator: notApplicable
          addCardAttemptsDay: 0
          workPhone: workPhone
          purchasesLast6Months: 5
        fraudOffset: 6
        merchantOrderReference: merchantOrderReference
        amount:
          currency: currency
          value: 0
        additionalAmount:
          currency: currency
          value: 0
        recurring:
          recurringExpiry: 2000-01-23T04:56:07.000+00:00
          recurringFrequency: recurringFrequency
          tokenService: VISATOKENSERVICE
          contract: ONECLICK
          recurringDetailName: recurringDetailName
        dateOfBirth: 2000-01-23
        shopperEmail: shopperEmail
        sessionId: sessionId
        store: store
        merchantAccount: merchantAccount
        threeDS2RequestData:
          notificationURL: notificationURL
          paymentAuthenticationUseCase: paymentAuthenticationUseCase
          recurringFrequency: recurringFrequency
          mcc: mcc
          platform: iOS
          sdkEphemPubKey:
            kty: kty
            crv: crv
            x: x
            "y": "y"
          merchantName: merchantName
          recurringExpiry: recurringExpiry
          threeDSRequestorAuthenticationInd: threeDSRequestorAuthenticationInd
          addrMatch: "Y"
          threeDSRequestorURL: threeDSRequestorURL
          sdkReferenceNumber: sdkReferenceNumber
          threeDSRequestorName: threeDSRequestorName
          acquirerMerchantID: acquirerMerchantID
          sdkAppID: sdkAppID
          messageVersion: messageVersion
          sdkTransID: sdkTransID
          whiteListStatus: whiteListStatus
          authenticationOnly: false
          sdkMaxTimeout: 1
          homePhone:
            cc: cc
            subscriber: subscriber
          payTokenInd: true
          sdkEncData: sdkEncData
          purchaseInstalData: purchaseInstalData
          acquirerBIN: acquirerBIN
          threeDSRequestorID: threeDSRequestorID
          deviceChannel: deviceChannel
          deviceRenderOptions:
            sdkUiType:
            - multiSelect
            - multiSelect
            sdkInterface: both
          transactionType: goodsOrServicePurchase
          acctInfo:
            shipAddressUsageInd: "01"
            paymentAccAge: paymentAccAge
            paymentAccInd: "01"
            txnActivityYear: txnActivityYear
            shipNameIndicator: "01"
            chAccPwChangeInd: "01"
            provisionAttemptsDay: provisionAttemptsDay
            chAccChange: chAccChange
            chAccChangeInd: "01"
            chAccString: chAccString
            nbPurchaseAccount: nbPurchaseAccount
            chAccAgeInd: "01"
            chAccPwChange: chAccPwChange
            shipAddressUsage: shipAddressUsage
            suspiciousAccActivity: "01"
            txnActivityDay: txnActivityDay
          threeDSRequestorChallengeInd: "01"
          mobilePhone:
            cc: cc
            subscriber: subscriber
          threeDSRequestorAuthenticationInfo:
            threeDSReqAuthMethod: "01"
            threeDSReqAuthData: threeDSReqAuthData
            threeDSReqAuthTimestamp: threeDSReqAuthTimestamp
          transType: "01"
          challengeIndicator: noPreference
          acctType: "01"
          sdkVersion: sdkVersion
          workPhone:
            cc: cc
            subscriber: subscriber
          threeDSCompInd: threeDSCompInd
          threeDSRequestorPriorAuthenticationInfo:
            threeDSReqPriorRef: threeDSReqPriorRef
            threeDSReqPriorAuthData: threeDSReqPriorAuthData
            threeDSReqPriorAuthMethod: "01"
            threeDSReqPriorAuthTimestamp: threeDSReqPriorAuthTimestamp
        orderReference: orderReference
        paymentMethod:
          key: paymentMethod
        billingAddress:
          country: country
          stateOrProvince: stateOrProvince
          city: city
          houseNumberOrName: houseNumberOrName
          street: street
          postalCode: postalCode
        shopperLocale: shopperLocale
        captureDelayHours: 0
        applicationInfo:
          adyenLibrary:
            name: name
            version: version
          merchantApplication:
            name: name
            version: version
          adyenPaymentSource:
            name: name
            version: version
          merchantDevice:
            reference: reference
            os: os
            osVersion: osVersion
          shopperInteractionDevice:
            os: os
            osVersion: osVersion
            locale: locale
          externalPlatform:
            name: name
            integrator: integrator
            version: version
        browserInfo:
          acceptHeader: acceptHeader
          screenWidth: 7
          javaEnabled: true
          screenHeight: 2
          timeZoneOffset: 9
          javaScriptEnabled: true
          language: language
          userAgent: userAgent
          colorDepth: 5
        shopperReference: shopperReference
        shopperStatement: shopperStatement
      properties:
        accountInfo:
          $ref: '#/components/schemas/AccountInfo'
        additionalAmount:
          $ref: '#/components/schemas/Amount'
        additionalData:
          $ref: '#/components/schemas/BalanceCheckRequest_additionalData'
        amount:
          $ref: '#/components/schemas/Amount'
        applicationInfo:
          $ref: '#/components/schemas/ApplicationInfo'
        billingAddress:
          $ref: '#/components/schemas/Address'
        browserInfo:
          $ref: '#/components/schemas/BrowserInfo'
        captureDelayHours:
          description: "The delay between the authorisation and scheduled auto-capture,\
            \ specified in hours."
          format: int32
          title: captureDelayHours
          type: integer
          x-addedInVersion: "2"
        dateOfBirth:
          description: |-
            The shopper's date of birth.

            Format [ISO-8601](https://www.w3.org/TR/NOTE-datetime): YYYY-MM-DD
          format: date
          title: dateOfBirth
          type: string
          x-addedInVersion: "7"
        dccQuote:
          $ref: '#/components/schemas/ForexQuote'
        deliveryAddress:
          $ref: '#/components/schemas/Address'
        deliveryDate:
          description: |-
            The date and time the purchased goods should be delivered.

            Format [ISO 8601](https://www.w3.org/TR/NOTE-datetime): YYYY-MM-DDThh:mm:ss.sssTZD

            Example: 2017-07-17T13:42:40.428+01:00
          format: date-time
          title: deliveryDate
          type: string
          x-addedInVersion: "8"
        deviceFingerprint:
          description: "A string containing the shopper's device fingerprint. For\
            \ more information, refer to [Device fingerprinting](https://docs.adyen.com/risk-management/device-fingerprinting)."
          maxLength: 5000
          title: deviceFingerprint
          type: string
          x-addedInVersion: "2"
        fraudOffset:
          description: An integer value that is added to the normal fraud score. The
            value can be either positive or negative.
          format: int32
          title: fraudOffset
          type: integer
        installments:
          $ref: '#/components/schemas/Installments'
        localizedShopperStatement:
          additionalProperties:
            type: string
          description: "The `localizedShopperStatement` field lets you use dynamic\
            \ values for your shopper statement in a local character set.\nIf not\
            \ supplied, left empty, or for cross-border transactions, **shopperStatement**\
            \ is used.\n\nAdyen currently supports the ja-Kana character set for Visa\
            \ and Mastercard payments in Japan using Japanese cards. This character\
            \ set supports:\n\n* UTF-8 based Katakana, capital letters, numbers and\
            \ special characters. \n* Half-width or full-width characters."
          title: localizedShopperStatement
          x-addedInVersion: "68"
        mcc:
          description: "The [merchant category code](https://en.wikipedia.org/wiki/Merchant_category_code)\
            \ (MCC) is a four-digit number, which relates to a particular market segment.\
            \ This code reflects the predominant activity that is conducted by the\
            \ merchant."
          title: mcc
          type: string
          x-addedInVersion: "12"
        merchantAccount:
          description: "The merchant account identifier, with which you want to process\
            \ the transaction."
          title: merchantAccount
          type: string
        merchantOrderReference:
          description: |-
            This reference allows linking multiple transactions to each other for reporting purposes (i.e. order auth-rate). The reference should be unique per billing cycle.
            The same merchant order reference should never be reused after the first authorised attempt. If used, this field should be supplied for all incoming authorisations.
            > We strongly recommend you send the `merchantOrderReference` value to benefit from linking payment requests when authorisation retries take place. In addition, we recommend you provide `retry.orderAttemptNumber`, `retry.chainAttemptNumber`, and `retry.skipRetry` values in `PaymentRequest.additionalData`.
          title: merchantOrderReference
          type: string
          x-addedInVersion: "9"
        merchantRiskIndicator:
          $ref: '#/components/schemas/MerchantRiskIndicator'
        metadata:
          additionalProperties:
            type: string
          description: "Metadata consists of entries, each of which includes a key\
            \ and a value.\nLimits:\n* Maximum 20 key-value pairs per request. When\
            \ exceeding, the \"177\" error occurs: \"Metadata size exceeds limit\"\
            .\n* Maximum 20 characters per key.\n* Maximum 80 characters per value. "
          title: metadata
          x-addedInVersion: "17"
        orderReference:
          description: "When you are doing multiple partial (gift card) payments,\
            \ this is the `pspReference` of the first payment. We use this to link\
            \ the multiple payments to each other. As your own reference for linking\
            \ multiple payments, use the `merchantOrderReference`instead."
          title: orderReference
          type: string
        paymentMethod:
          additionalProperties:
            type: string
          description: The collection that contains the type of the payment method
            and its specific information.
          title: paymentMethod
        recurring:
          $ref: '#/components/schemas/Recurring'
        recurringProcessingModel:
          description: |
            Defines a recurring payment type. Required when creating a token to store payment details or using stored payment details.
            Allowed values:
            * `Subscription` – A transaction for a fixed or variable amount, which follows a fixed schedule.
            * `CardOnFile` – With a card-on-file (CoF) transaction, card details are stored to enable one-click or omnichannel journeys, or simply to streamline the checkout process. Any subscription not following a fixed schedule is also considered a card-on-file transaction.
            * `UnscheduledCardOnFile` – An unscheduled card-on-file (UCoF) transaction is a transaction that occurs on a non-fixed schedule and/or have variable amounts. For example, automatic top-ups when a cardholder's balance drops below a certain amount.
          enum:
          - CardOnFile
          - Subscription
          - UnscheduledCardOnFile
          title: recurringProcessingModel
          type: string
          x-addedInVersion: "30"
        reference:
          description: |-
            The reference to uniquely identify a payment. This reference is used in all communication with you about the payment status. We recommend using a unique value per payment; however, it is not a requirement.
            If you need to provide multiple references for a transaction, separate them with hyphens ("-").
            Maximum length: 80 characters.
          title: reference
          type: string
        selectedBrand:
          description: |-
            Some payment methods require defining a value for this field to specify how to process the transaction.

            For the Bancontact payment method, it can be set to:
            * `maestro` (default), to be processed like a Maestro card, or
            * `bcmc`, to be processed like a Bancontact card.
          title: selectedBrand
          type: string
        selectedRecurringDetailReference:
          description: The `recurringDetailReference` you want to use for this payment.
            The value `LATEST` can be used to select the most recently stored recurring
            detail.
          title: selectedRecurringDetailReference
          type: string
        sessionId:
          description: A session ID used to identify a payment session.
          title: sessionId
          type: string
        shopperEmail:
          description: |-
            The shopper's email address. We recommend that you provide this data, as it is used in velocity fraud checks.
            > For 3D Secure 2 transactions, schemes require `shopperEmail` for all browser-based and mobile implementations.
          title: shopperEmail
          type: string
        shopperIP:
          description: |-
            The shopper's IP address. In general, we recommend that you provide this data, as it is used in a number of risk checks (for instance, number of payment attempts or location-based checks).
            > For 3D Secure 2 transactions, schemes require `shopperIP` for all browser-based implementations.
            This field is also mandatory for some merchants depending on your business model. For more information, [contact Support](https://www.adyen.help/hc/en-us/requests/new).
          title: shopperIP
          type: string
        shopperInteraction:
          description: |-
            Specifies the sales channel, through which the shopper gives their card details, and whether the shopper is a returning customer.
            For the web service API, Adyen assumes Ecommerce shopper interaction by default.

            This field has the following possible values:
            * `Ecommerce` - Online transactions where the cardholder is present (online). For better authorisation rates, we recommend sending the card security code (CSC) along with the request.
            * `ContAuth` - Card on file and/or subscription transactions, where the cardholder is known to the merchant (returning customer). If the shopper is present (online), you can supply also the CSC to improve authorisation (one-click payment).
            * `Moto` - Mail-order and telephone-order transactions where the shopper is in contact with the merchant via email or telephone.
            * `POS` - Point-of-sale transactions where the shopper is physically present to make a payment using a secure payment terminal.
          enum:
          - Ecommerce
          - ContAuth
          - Moto
          - POS
          title: shopperInteraction
          type: string
        shopperLocale:
          description: The combination of a language code and a country code to specify
            the language to be used in the payment.
          title: shopperLocale
          type: string
          x-addedInVersion: "7"
        shopperName:
          $ref: '#/components/schemas/Name'
        shopperReference:
          description: "Required for recurring payments. \nYour reference to uniquely\
            \ identify this shopper, for example user ID or account ID. Minimum length:\
            \ 3 characters.\n> Your reference must not include personally identifiable\
            \ information (PII), for example name or email address."
          title: shopperReference
          type: string
        shopperStatement:
          description: |-
            The text to be shown on the shopper's bank statement.
             We recommend sending a maximum of 22 characters, otherwise banks might truncate the string.
             Allowed characters: **a-z**, **A-Z**, **0-9**, spaces, and special characters **. , ' _ - ? + * /**.
          title: shopperStatement
          type: string
        socialSecurityNumber:
          description: The shopper's social security number.
          title: socialSecurityNumber
          type: string
          x-addedInVersion: "4"
        splits:
          description: "An array of objects specifying how the payment should be split\
            \ when using [Adyen for Platforms](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information)\
            \ or [Issuing](https://docs.adyen.com/issuing/add-manage-funds#split)."
          items:
            $ref: '#/components/schemas/Split'
          title: splits
          type: array
          x-addedInVersion: "37"
        store:
          description: "Required for Adyen for Platforms integrations if you have\
            \ a platform setup. This is your [reference](https://docs.adyen.com/api-explorer/Management/3/post/merchants/(merchantId)/stores#request-reference)\
            \ (on [balance platform](https://docs.adyen.com/marketplaces-and-platforms/classic/platforms-for-partners#route-payments))\
            \ or the [storeReference](https://docs.adyen.com/api-explorer/Account/latest/post/updateAccountHolder#request-accountHolderDetails-storeDetails-storeReference)\
            \ (in the [classic integration](https://docs.adyen.com/marketplaces-and-platforms/processing-payments/route-payment-to-store/#route-a-payment-to-a-store))\
            \ for the ecommerce or point-of-sale store that is processing the payment."
          maxLength: 16
          minLength: 1
          title: store
          type: string
          x-addedInVersion: "23"
        telephoneNumber:
          description: The shopper's telephone number.
          title: telephoneNumber
          type: string
          x-addedInVersion: "7"
        threeDS2RequestData:
          $ref: '#/components/schemas/ThreeDS2RequestData'
        threeDSAuthenticationOnly:
          default: false
          deprecated: true
          description: "If set to true, you will only perform the [3D Secure 2 authentication](https://docs.adyen.com/online-payments/3d-secure/other-3ds-flows/authentication-only),\
            \ and not the payment authorisation."
          title: threeDSAuthenticationOnly
          type: boolean
          x-addedInVersion: "50"
          x-deprecatedInVersion: "69"
          x-deprecatedMessage: Use `authenticationData.authenticationOnly` instead.
        totalsGroup:
          description: "The reference value to aggregate sales totals in reporting.\
            \ When not specified, the store field is used (if available)."
          maxLength: 16
          minLength: 1
          title: totalsGroup
          type: string
          x-addedInVersion: "23"
        trustedShopper:
          description: Set to true if the payment should be routed to a trusted MID.
          title: trustedShopper
          type: boolean
          x-addedInVersion: "37"
      required:
      - amount
      - merchantAccount
      - paymentMethod
      title: BalanceCheckRequest
    BalanceCheckResponse:
      example:
        balance:
          currency: currency
          value: 0
        resultCode: Success
        refusalReason: refusalReason
        additionalData:
          cavv: cavv
          cavvAlgorithm: cavvAlgorithm
          scaExemptionRequested: scaExemptionRequested
          threeds2.cardEnrolled: true
          cardHolderInfo: cardHolderInfo
        transactionLimit:
          currency: currency
          value: 0
        fraudResult:
          accountScore: 6
          results:
          - accountScore: 1
            name: name
            checkId: 5
          - accountScore: 1
            name: name
            checkId: 5
        pspReference: pspReference
      properties:
        additionalData:
          $ref: '#/components/schemas/BalanceCheckResponse_additionalData'
        balance:
          $ref: '#/components/schemas/Amount'
        fraudResult:
          $ref: '#/components/schemas/FraudResult'
        pspReference:
          description: Adyen's 16-character reference associated with the transaction/request.
            This value is globally unique; quote it when communicating with us about
            this request.
          title: pspReference
          type: string
        refusalReason:
          description: |-
            If the payment's authorisation is refused or an error occurs during authorisation, this field holds Adyen's mapped reason for the refusal or a description of the error. When a transaction fails, the authorisation response includes `resultCode` and `refusalReason` values.

            For more information, see [Refusal reasons](https://docs.adyen.com/development-resources/refusal-reasons).
          title: refusalReason
          type: string
        resultCode:
          description: |-
            The result of the cancellation request.

            Possible values:

            * **Success** – Indicates that the balance check was successful.
            * **NotEnoughBalance** – Commonly indicates that the card did not have enough balance to pay the amount in the request, or that the currency of the balance on the card did not match the currency of the requested amount.
            * **Failed** – Indicates that the balance check failed.
          enum:
          - Success
          - NotEnoughBalance
          - Failed
          title: resultCode
          type: string
        transactionLimit:
          $ref: '#/components/schemas/Amount'
      required:
      - balance
      - resultCode
      title: BalanceCheckResponse
    BankAccount:
      example:
        ownerName: ownerName
        countryCode: countryCode
        taxId: taxId
        iban: iban
        bankAccountNumber: bankAccountNumber
        bankName: bankName
        bankLocationId: bankLocationId
        bic: bic
        bankCity: bankCity
      properties:
        bankAccountNumber:
          description: The bank account number (without separators).
          title: bankAccountNumber
          type: string
        bankCity:
          description: The bank city.
          title: bankCity
          type: string
          x-addedInVersion: "18"
        bankLocationId:
          description: The location id of the bank. The field value is `nil` in most
            cases.
          title: bankLocationId
          type: string
        bankName:
          description: The name of the bank.
          title: bankName
          type: string
        bic:
          description: "The [Business Identifier Code](https://en.wikipedia.org/wiki/ISO_9362)\
            \ (BIC) is the SWIFT address assigned to a bank. The field value is `nil`\
            \ in most cases."
          title: bic
          type: string
        countryCode:
          description: |-
            Country code where the bank is located.

            A valid value is an ISO two-character country code (e.g. 'NL').
          title: countryCode
          type: string
        iban:
          description: "The [International Bank Account Number](https://en.wikipedia.org/wiki/International_Bank_Account_Number)\
            \ (IBAN)."
          title: iban
          type: string
        ownerName:
          description: |-
            The name of the bank account holder.
            If you submit a name with non-Latin characters, we automatically replace some of them with corresponding Latin characters to meet the FATF recommendations. For example:
            * χ12 is converted to ch12.
            * üA is converted to euA.
            * Peter Møller is converted to Peter Mller, because banks don't accept 'ø'.
            After replacement, the ownerName must have at least three alphanumeric characters (A-Z, a-z, 0-9), and at least one of them must be a valid Latin character (A-Z, a-z). For example:
            * John17 - allowed.
            * J17 - allowed.
            * 171 - not allowed.
            * John-7 - allowed.
            > If provided details don't match the required format, the response returns the error message: 203 'Invalid bank account holder name'.
          title: ownerName
          type: string
        taxId:
          description: The bank account holder's tax ID.
          title: taxId
          type: string
          x-addedInVersion: "18"
      title: BankAccount
    BillDeskDetails:
      additionalProperties: false
      properties:
        checkoutAttemptId:
          description: The checkout attempt identifier.
          title: checkoutAttemptId
          type: string
          x-addedInVersion: "68"
        issuer:
          description: The issuer id of the shopper's selected bank.
          title: issuer
          type: string
        type:
          description: '**billdesk**'
          enum:
          - billdesk_online
          - billdesk_wallet
          title: type
          type: string
      required:
      - issuer
      - type
      title: BillDesk
    BillingAddress:
      example:
        country: country
        stateOrProvince: stateOrProvince
        city: city
        houseNumberOrName: houseNumberOrName
        street: street
        postalCode: postalCode
      properties:
        city:
          description: "The name of the city. Maximum length: 3000 characters."
          maxLength: 3000
          title: city
          type: string
        country:
          description: |-
            The two-character ISO-3166-1 alpha-2 country code. For example, **US**.
            > If you don't know the country or are not collecting the country from the shopper, provide `country` as `ZZ`.
          title: country
          type: string
        houseNumberOrName:
          description: "The number or name of the house. Maximum length: 3000 characters."
          maxLength: 3000
          title: houseNumberOrName
          type: string
        postalCode:
          description: "A maximum of five digits for an address in the US, or a maximum\
            \ of ten characters for an address in all other countries."
          title: postalCode
          type: string
        stateOrProvince:
          description: |-
            The two-character ISO 3166-2 state or province code. For example, **CA** in the US or **ON** in Canada.
            > Required for the US and Canada.
          title: stateOrProvince
          type: string
        street:
          description: |-
            The name of the street. Maximum length: 3000 characters.
            > The house number should not be included in this field; it should be separately provided via `houseNumberOrName`.
          maxLength: 3000
          title: street
          type: string
      required:
      - city
      - country
      - houseNumberOrName
      - postalCode
      - street
      title: Address
    BlikDetails:
      additionalProperties: false
      properties:
        blikCode:
          description: BLIK code consisting of 6 digits.
          title: blikCode
          type: string
        checkoutAttemptId:
          description: The checkout attempt identifier.
          title: checkoutAttemptId
          type: string
          x-addedInVersion: "68"
        recurringDetailReference:
          deprecated: true
          description: This is the `recurringDetailReference` returned in the response
            when you created the token.
          title: recurringDetailReference
          type: string
          x-deprecatedInVersion: "49"
          x-deprecatedMessage: Use `storedPaymentMethodId` instead.
        storedPaymentMethodId:
          description: This is the `recurringDetailReference` returned in the response
            when you created the token.
          maxLength: 64
          title: storedPaymentMethodId
          type: string
          x-addedInVersion: "49"
        type:
          description: '**blik**'
          enum:
          - blik
          title: type
          type: string
      title: BLIK
    BrowserInfo:
      example:
        acceptHeader: acceptHeader
        screenWidth: 7
        javaEnabled: true
        screenHeight: 2
        timeZoneOffset: 9
        javaScriptEnabled: true
        language: language
        userAgent: userAgent
        colorDepth: 5
      properties:
        acceptHeader:
          description: The accept header value of the shopper's browser.
          title: acceptHeader
          type: string
        colorDepth:
          description: "The color depth of the shopper's browser in bits per pixel.\
            \ This should be obtained by using the browser's `screen.colorDepth` property.\
            \ Accepted values: 1, 4, 8, 15, 16, 24, 30, 32 or 48 bit color depth."
          format: int32
          title: colorDepth
          type: integer
          x-addedInVersion: "40"
        javaEnabled:
          description: Boolean value indicating if the shopper's browser is able to
            execute Java.
          title: javaEnabled
          type: boolean
          x-addedInVersion: "40"
        javaScriptEnabled:
          default: true
          description: Boolean value indicating if the shopper's browser is able to
            execute JavaScript. A default 'true' value is assumed if the field is
            not present.
          title: javaScriptEnabled
          type: boolean
          x-addedInVersion: "40"
        language:
          description: The `navigator.language` value of the shopper's browser (as
            defined in IETF BCP 47).
          title: language
          type: string
          x-addedInVersion: "40"
        screenHeight:
          description: The total height of the shopper's device screen in pixels.
          format: int32
          title: screenHeight
          type: integer
          x-addedInVersion: "40"
        screenWidth:
          description: The total width of the shopper's device screen in pixels.
          format: int32
          title: screenWidth
          type: integer
          x-addedInVersion: "40"
        timeZoneOffset:
          description: "Time difference between UTC time and the shopper's browser\
            \ local time, in minutes."
          format: int32
          title: timeZoneOffset
          type: integer
          x-addedInVersion: "40"
        userAgent:
          description: The user agent value of the shopper's browser.
          title: userAgent
          type: string
      required:
      - acceptHeader
      - colorDepth
      - javaEnabled
      - language
      - screenHeight
      - screenWidth
      - timeZoneOffset
      - userAgent
      title: BrowserInfo
    CancelOrderRequest:
      example:
        merchantAccount: merchantAccount
        order:
          orderData: orderData
          pspReference: pspReference
      properties:
        merchantAccount:
          description: The merchant account identifier that orderData belongs to.
          title: merchantAccount
          type: string
        order:
          $ref: '#/components/schemas/EncryptedOrderData'
      required:
      - merchantAccount
      - order
      title: CancelOrderRequest
    CancelOrderResponse:
      example:
        resultCode: Received
        pspReference: pspReference
      properties:
        pspReference:
          description: A unique reference of the cancellation request.
          title: pspReference
          type: string
        resultCode:
          description: |-
            The result of the cancellation request.

            Possible values:

            * **Received** – Indicates the cancellation has successfully been received by Adyen, and will be processed.
          enum:
          - Received
          title: resultCode
          type: string
      required:
      - pspReference
      - resultCode
      title: CancelOrderResponse
    Card:
      example:
        cvc: cvc
        number: number
        holderName: holderName
        startMonth: startMonth
        issueNumber: issueNumber
        expiryMonth: expiryMonth
        startYear: startYear
        expiryYear: expiryYear
      properties:
        cvc:
          description: |-
            The [card verification code](https://docs.adyen.com/payments-fundamentals/payment-glossary#card-security-code-cvc-cvv-cid) (1-20 characters). Depending on the card brand, it is known also as:
            * CVV2/CVC2 – length: 3 digits
            * CID – length: 4 digits
            > If you are using [Client-Side Encryption](https://docs.adyen.com/classic-integration/cse-integration-ecommerce), the CVC code is present in the encrypted data. You must never post the card details to the server.
            > This field must be always present in a [one-click payment request](https://docs.adyen.com/classic-integration/recurring-payments).
            > When this value is returned in a response, it is always empty because it is not stored.
          maxLength: 20
          minLength: 1
          title: cvc
          type: string
        expiryMonth:
          description: |-
            The card expiry month.
            Format: 2 digits, zero-padded for single digits. For example:
            * 03 = March
            * 11 = November
          maxLength: 2
          minLength: 1
          title: expiryMonth
          type: string
        expiryYear:
          description: |-
            The card expiry year.
            Format: 4 digits. For example: 2020
          maxLength: 4
          minLength: 4
          title: expiryYear
          type: string
        holderName:
          description: "The name of the cardholder, as printed on the card."
          maxLength: 50
          minLength: 1
          title: holderName
          type: string
        issueNumber:
          description: The issue number of the card (for some UK debit cards only).
          maxLength: 2
          minLength: 1
          title: issueNumber
          type: string
        number:
          description: |-
            The card number (4-19 characters). Do not use any separators.
            When this value is returned in a response, only the last 4 digits of the card number are returned.
          maxLength: 19
          minLength: 4
          title: number
          type: string
        startMonth:
          description: The month component of the start date (for some UK debit cards
            only).
          maxLength: 2
          minLength: 1
          title: startMonth
          type: string
        startYear:
          description: The year component of the start date (for some UK debit cards
            only).
          maxLength: 4
          minLength: 4
          title: startYear
          type: string
      title: Card
    CardBrandDetails:
      example:
        type: type
        supported: true
      properties:
        supported:
          description: Indicates if you support the card brand.
          title: supported
          type: boolean
        type:
          description: The name of the card brand.
          title: type
          type: string
      title: CardBrandDetails
    CardDetails:
      additionalProperties: false
      example:
        holderName: holderName
        cupsecureplus.smscode: cupsecureplus.smscode
        expiryMonth: expiryMonth
        threeDS2SdkVersion: threeDS2SdkVersion
        networkPaymentReference: networkPaymentReference
        checkoutAttemptId: checkoutAttemptId
        expiryYear: expiryYear
        type: scheme
        shopperNotificationReference: shopperNotificationReference
        cvc: cvc
        number: number
        encryptedCardNumber: encryptedCardNumber
        encryptedSecurityCode: encryptedSecurityCode
        encryptedExpiryYear: encryptedExpiryYear
        storedPaymentMethodId: storedPaymentMethodId
        recurringDetailReference: recurringDetailReference
        encryptedExpiryMonth: encryptedExpiryMonth
        fundingSource: credit
        brand: brand
      properties:
        brand:
          description: "Secondary brand of the card. For example: **plastix**, **hmclub**."
          title: brand
          type: string
        checkoutAttemptId:
          description: The checkout attempt identifier.
          title: checkoutAttemptId
          type: string
          x-addedInVersion: "68"
        cupsecureplus.smscode:
          deprecated: true
          title: cupsecureplus.smscode
          type: string
        cvc:
          description: "The card verification code. Only collect raw card data if\
            \ you are [fully PCI compliant](https://docs.adyen.com/development-resources/pci-dss-compliance-guide)."
          title: cvc
          type: string
        encryptedCardNumber:
          description: The encrypted card number.
          maxLength: 15000
          title: encryptedCardNumber
          type: string
        encryptedExpiryMonth:
          description: The encrypted card expiry month.
          maxLength: 15000
          title: encryptedExpiryMonth
          type: string
        encryptedExpiryYear:
          description: The encrypted card expiry year.
          maxLength: 15000
          title: encryptedExpiryYear
          type: string
        encryptedSecurityCode:
          description: The encrypted card verification code.
          maxLength: 15000
          title: encryptedSecurityCode
          type: string
        expiryMonth:
          description: "The card expiry month. Only collect raw card data if you are\
            \ [fully PCI compliant](https://docs.adyen.com/development-resources/pci-dss-compliance-guide)."
          title: expiryMonth
          type: string
        expiryYear:
          description: "The card expiry year. Only collect raw card data if you are\
            \ [fully PCI compliant](https://docs.adyen.com/development-resources/pci-dss-compliance-guide)."
          title: expiryYear
          type: string
        fundingSource:
          description: "The funding source that should be used when multiple sources\
            \ are available. For Brazilian combo cards, by default the funding source\
            \ is credit. To use debit, set this value to **debit**."
          enum:
          - credit
          - debit
          title: fundingSource
          type: string
        holderName:
          description: The name of the card holder.
          title: holderName
          type: string
        networkPaymentReference:
          description: "The network token reference. This is the [`networkTxReference`](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/payments__resParam_additionalData-ResponseAdditionalDataCommon-networkTxReference)\
            \ from the response to the first payment."
          title: networkPaymentReference
          type: string
        number:
          description: "The card number. Only collect raw card data if you are [fully\
            \ PCI compliant](https://docs.adyen.com/development-resources/pci-dss-compliance-guide)."
          title: number
          type: string
        recurringDetailReference:
          deprecated: true
          description: This is the `recurringDetailReference` returned in the response
            when you created the token.
          title: recurringDetailReference
          type: string
          x-deprecatedInVersion: "49"
          x-deprecatedMessage: Use `storedPaymentMethodId` instead.
        shopperNotificationReference:
          description: The `shopperNotificationReference` returned in the response
            when you requested to notify the shopper. Used only for recurring payments
            in India.
          title: shopperNotificationReference
          type: string
        storedPaymentMethodId:
          description: This is the `recurringDetailReference` returned in the response
            when you created the token.
          maxLength: 64
          title: storedPaymentMethodId
          type: string
          x-addedInVersion: "49"
        threeDS2SdkVersion:
          description: Required for mobile integrations. Version of the 3D Secure
            2 mobile SDK.
          maxLength: 12
          title: threeDS2SdkVersion
          type: string
        type:
          default: scheme
          description: "Default payment method details. Common for scheme payment\
            \ methods, and for simple payment method details."
          enum:
          - bcmc
          - scheme
          - networkToken
          - giftcard
          - card
          title: type
          type: string
      title: Card
    CardDetailsRequest:
      example:
        encryptedCardNumber: encryptedCardNumber
        merchantAccount: merchantAccount
        countryCode: countryCode
        supportedBrands:
        - supportedBrands
        - supportedBrands
        cardNumber: cardNumber
      properties:
        cardNumber:
          description: "A minimum of the first 8 digits of the card number and a maximum\
            \ of the full card number. 11 digits gives the best result. \n\nYou must\
            \ be [fully PCI compliant](https://docs.adyen.com/development-resources/pci-dss-compliance-guide)\
            \ to collect raw card data."
          title: cardNumber
          type: string
        countryCode:
          description: |-
            The shopper country.

            Format: [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
            Example: NL or DE
          title: countryCode
          type: string
        encryptedCardNumber:
          description: The encrypted card number.
          title: encryptedCardNumber
          type: string
        merchantAccount:
          description: "The merchant account identifier, with which you want to process\
            \ the transaction."
          title: merchantAccount
          type: string
        supportedBrands:
          description: "The card brands you support. This is the [`brands`](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/paymentMethods__resParam_paymentMethods-brands)\
            \ array from your [`/paymentMethods`](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/paymentMethods)\
            \ response. \n\nIf not included, our API uses the ones configured for\
            \ your merchant account and, if provided, the country code."
          items:
            type: string
          title: supportedBrands
          type: array
      required:
      - cardNumber
      - merchantAccount
      title: CardDetailsRequest
    CardDetailsResponse:
      example:
        brands:
        - type: type
          supported: true
        - type: type
          supported: true
      properties:
        brands:
          description: The list of brands identified for the card.
          items:
            $ref: '#/components/schemas/CardBrandDetails'
          title: brands
          type: array
      title: CardDetailsResponse
    CardDonations:
      additionalProperties: false
      example:
        holderName: holderName
        cupsecureplus.smscode: cupsecureplus.smscode
        expiryMonth: expiryMonth
        threeDS2SdkVersion: threeDS2SdkVersion
        networkPaymentReference: networkPaymentReference
        checkoutAttemptId: checkoutAttemptId
        expiryYear: expiryYear
        type: scheme
        shopperNotificationReference: shopperNotificationReference
        cvc: cvc
        number: number
        encryptedCardNumber: encryptedCardNumber
        encryptedSecurityCode: encryptedSecurityCode
        encryptedExpiryYear: encryptedExpiryYear
        storedPaymentMethodId: storedPaymentMethodId
        recurringDetailReference: recurringDetailReference
        encryptedExpiryMonth: encryptedExpiryMonth
        fundingSource: credit
        brand: brand
      properties:
        brand:
          description: "Secondary brand of the card. For example: **plastix**, **hmclub**."
          title: brand
          type: string
        checkoutAttemptId:
          description: The checkout attempt identifier.
          title: checkoutAttemptId
          type: string
          x-addedInVersion: "68"
        cupsecureplus.smscode:
          deprecated: true
          title: cupsecureplus.smscode
          type: string
        cvc:
          description: "The card verification code. Only collect raw card data if\
            \ you are [fully PCI compliant](https://docs.adyen.com/development-resources/pci-dss-compliance-guide)."
          title: cvc
          type: string
        encryptedCardNumber:
          description: The encrypted card number.
          maxLength: 15000
          title: encryptedCardNumber
          type: string
        encryptedExpiryMonth:
          description: The encrypted card expiry month.
          maxLength: 15000
          title: encryptedExpiryMonth
          type: string
        encryptedExpiryYear:
          description: The encrypted card expiry year.
          maxLength: 15000
          title: encryptedExpiryYear
          type: string
        encryptedSecurityCode:
          description: The encrypted card verification code.
          maxLength: 15000
          title: encryptedSecurityCode
          type: string
        expiryMonth:
          description: "The card expiry month. Only collect raw card data if you are\
            \ [fully PCI compliant](https://docs.adyen.com/development-resources/pci-dss-compliance-guide)."
          title: expiryMonth
          type: string
        expiryYear:
          description: "The card expiry year. Only collect raw card data if you are\
            \ [fully PCI compliant](https://docs.adyen.com/development-resources/pci-dss-compliance-guide)."
          title: expiryYear
          type: string
        fundingSource:
          description: "The funding source that should be used when multiple sources\
            \ are available. For Brazilian combo cards, by default the funding source\
            \ is credit. To use debit, set this value to **debit**."
          enum:
          - credit
          - debit
          title: fundingSource
          type: string
        holderName:
          description: The name of the card holder.
          title: holderName
          type: string
        networkPaymentReference:
          description: "The network token reference. This is the [`networkTxReference`](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/payments__resParam_additionalData-ResponseAdditionalDataCommon-networkTxReference)\
            \ from the response to the first payment."
          title: networkPaymentReference
          type: string
        number:
          description: "The card number. Only collect raw card data if you are [fully\
            \ PCI compliant](https://docs.adyen.com/development-resources/pci-dss-compliance-guide)."
          title: number
          type: string
        recurringDetailReference:
          deprecated: true
          description: This is the `recurringDetailReference` returned in the response
            when you created the token.
          title: recurringDetailReference
          type: string
          x-deprecatedInVersion: "49"
          x-deprecatedMessage: Use `storedPaymentMethodId` instead.
        shopperNotificationReference:
          description: The `shopperNotificationReference` returned in the response
            when you requested to notify the shopper. Used only for recurring payments
            in India.
          title: shopperNotificationReference
          type: string
        storedPaymentMethodId:
          description: This is the `recurringDetailReference` returned in the response
            when you created the token.
          maxLength: 64
          title: storedPaymentMethodId
          type: string
          x-addedInVersion: "49"
        threeDS2SdkVersion:
          description: Required for mobile integrations. Version of the 3D Secure
            2 mobile SDK.
          maxLength: 12
          title: threeDS2SdkVersion
          type: string
        type:
          default: scheme
          description: "Default payment method details. Common for scheme payment\
            \ methods, and for simple payment method details."
          enum:
          - bcmc
          - scheme
          - networkToken
          - giftcard
          - card
          title: type
          type: string
      title: Card
    CellulantDetails:
      additionalProperties: false
      properties:
        checkoutAttemptId:
          description: The checkout attempt identifier.
          title: checkoutAttemptId
          type: string
          x-addedInVersion: "68"
        issuer:
          description: The Cellulant issuer.
          title: issuer
          type: string
        type:
          default: cellulant
          description: '**Cellulant**'
          enum:
          - cellulant
          title: type
          type: string
      title: Cellulant
    CheckoutAwaitAction:
      additionalProperties: false
      example:
        paymentData: paymentData
        type: await
        paymentMethodType: paymentMethodType
        url: url
      properties:
        paymentData:
          description: Encoded payment data.
          title: paymentData
          type: string
        paymentMethodType:
          description: Specifies the payment method.
          title: paymentMethodType
          type: string
        type:
          description: '**await**'
          enum:
          - await
          title: type
          type: string
        url:
          description: Specifies the URL to redirect to.
          title: url
          type: string
      required:
      - type
      title: CheckoutAwaitAction
    CheckoutDelegatedAuthenticationAction:
      additionalProperties: false
      properties:
        authorisationToken:
          description: A token needed to authorise a payment.
          title: authorisationToken
          type: string
        paymentData:
          description: Encoded payment data.
          title: paymentData
          type: string
        paymentMethodType:
          description: Specifies the payment method.
          title: paymentMethodType
          type: string
        token:
          description: A token to pass to the delegatedAuthentication component.
          title: token
          type: string
        type:
          description: '**delegatedAuthentication**'
          enum:
          - delegatedAuthentication
          title: type
          type: string
        url:
          description: Specifies the URL to redirect to.
          title: url
          type: string
      required:
      - type
      title: CheckoutDelegatedAuthenticationAction
    CheckoutNativeRedirectAction:
      additionalProperties: false
      properties:
        data:
          additionalProperties:
            type: string
          description: "When the redirect URL must be accessed via POST, use this\
            \ data to post to the redirect URL."
          title: data
        method:
          description: "Specifies the HTTP method, for example GET or POST."
          title: method
          type: string
        nativeRedirectData:
          description: Native SDK's redirect data containing the direct issuer link
            and state data that must be submitted to the /v1/nativeRedirect/redirectResult.
          title: nativeRedirectData
          type: string
        paymentMethodType:
          description: Specifies the payment method.
          title: paymentMethodType
          type: string
        type:
          description: '**nativeRedirect**'
          enum:
          - nativeRedirect
          title: type
          type: string
        url:
          description: Specifies the URL to redirect to.
          title: url
          type: string
      required:
      - type
      title: CheckoutNativeRedirectAction
    CheckoutOrderResponse:
      example:
        reference: reference
        remainingAmount:
          currency: currency
          value: 0
        amount:
          currency: currency
          value: 0
        orderData: orderData
        pspReference: pspReference
        expiresAt: expiresAt
      properties:
        amount:
          $ref: '#/components/schemas/Amount'
        expiresAt:
          description: The expiry date for the order.
          title: expiresAt
          type: string
        orderData:
          description: The encrypted order data.
          title: orderData
          type: string
        pspReference:
          description: The `pspReference` that belongs to the order.
          title: pspReference
          type: string
        reference:
          description: The merchant reference for the order.
          title: reference
          type: string
        remainingAmount:
          $ref: '#/components/schemas/Amount'
      required:
      - pspReference
      title: CheckoutOrderResponse
    CheckoutQrCodeAction:
      additionalProperties: false
      properties:
        expiresAt:
          description: Expiry time of the QR code.
          title: expiresAt
          type: string
        paymentData:
          description: Encoded payment data.
          title: paymentData
          type: string
        paymentMethodType:
          description: Specifies the payment method.
          title: paymentMethodType
          type: string
        qrCodeData:
          description: The contents of the QR code as a UTF8 string.
          title: qrCodeData
          type: string
        type:
          description: '**qrCode**'
          enum:
          - qrCode
          title: type
          type: string
        url:
          description: Specifies the URL to redirect to.
          title: url
          type: string
      required:
      - type
      title: CheckoutQrCodeAction
    CheckoutRedirectAction:
      additionalProperties: false
      properties:
        data:
          additionalProperties:
            type: string
          description: "When the redirect URL must be accessed via POST, use this\
            \ data to post to the redirect URL."
          title: data
        method:
          description: "Specifies the HTTP method, for example GET or POST."
          title: method
          type: string
        paymentMethodType:
          description: Specifies the payment method.
          title: paymentMethodType
          type: string
        type:
          description: '**redirect**'
          enum:
          - redirect
          title: type
          type: string
        url:
          description: Specifies the URL to redirect to.
          title: url
          type: string
      required:
      - type
      title: CheckoutRedirectAction
    CheckoutSDKAction:
      additionalProperties: false
      properties:
        paymentData:
          description: Encoded payment data.
          title: paymentData
          type: string
        paymentMethodType:
          description: Specifies the payment method.
          title: paymentMethodType
          type: string
        sdkData:
          additionalProperties:
            type: string
          description: The data to pass to the SDK.
          title: sdkData
        type:
          description: The type of the action.
          enum:
          - sdk
          - wechatpaySDK
          title: type
          type: string
        url:
          description: Specifies the URL to redirect to.
          title: url
          type: string
      required:
      - type
      title: CheckoutSDKAction
    CheckoutSessionInstallmentOption:
      example:
        preselectedValue: 6
        plans:
        - regular
        - regular
        values:
        - 1
        - 1
      properties:
        plans:
          description: |-
            Defines the type of installment plan. If not set, defaults to **regular**.

            Possible values:
            * **regular**
            * **revolving**
          items:
            enum:
            - regular
            - revolving
            type: string
          title: plans
          type: array
        preselectedValue:
          description: Preselected number of installments offered for this payment
            method.
          format: int32
          title: preselectedValue
          type: integer
        values:
          description: "An array of the number of installments that the shopper can\
            \ choose from. For example, **[2,3,5]**. This cannot be specified simultaneously\
            \ with `maxValue`."
          items:
            format: int32
            type: integer
          title: values
          type: array
      title: CheckoutSessionInstallmentOption
    CheckoutThreeDS2Action:
      additionalProperties: false
      properties:
        authorisationToken:
          description: A token needed to authorise a payment.
          title: authorisationToken
          type: string
        paymentData:
          description: Encoded payment data.
          title: paymentData
          type: string
        paymentMethodType:
          description: Specifies the payment method.
          title: paymentMethodType
          type: string
        subtype:
          description: A subtype of the token.
          title: subtype
          type: string
        token:
          description: A token to pass to the 3DS2 Component to get the fingerprint.
          title: token
          type: string
        type:
          description: '**threeDS2**'
          enum:
          - threeDS2
          title: type
          type: string
        url:
          description: Specifies the URL to redirect to.
          title: url
          type: string
      required:
      - type
      title: CheckoutThreeDS2Action
    CheckoutVoucherAction:
      additionalProperties: false
      properties:
        alternativeReference:
          description: The voucher alternative reference code.
          title: alternativeReference
          type: string
        collectionInstitutionNumber:
          description: A collection institution number (store number) for Econtext
            Pay-Easy ATM.
          title: collectionInstitutionNumber
          type: string
        downloadUrl:
          description: The URL to download the voucher.
          title: downloadUrl
          type: string
        entity:
          description: An entity number of Multibanco.
          title: entity
          type: string
        expiresAt:
          description: The date time of the voucher expiry.
          title: expiresAt
          type: string
        initialAmount:
          $ref: '#/components/schemas/Amount'
        instructionsUrl:
          description: The URL to the detailed instructions to make payment using
            the voucher.
          title: instructionsUrl
          type: string
        issuer:
          description: The issuer of the voucher.
          title: issuer
          type: string
        maskedTelephoneNumber:
          description: The shopper telephone number (partially masked).
          title: maskedTelephoneNumber
          type: string
        merchantName:
          description: The merchant name.
          title: merchantName
          type: string
        merchantReference:
          description: The merchant reference.
          title: merchantReference
          type: string
        passCreationToken:
          description: A base64 encoded signature of all properties
          title: passCreationToken
          type: string
          x-addedInVersion: "68"
        paymentData:
          description: Encoded payment data.
          title: paymentData
          type: string
        paymentMethodType:
          description: Specifies the payment method.
          title: paymentMethodType
          type: string
        reference:
          description: The voucher reference code.
          title: reference
          type: string
        shopperEmail:
          description: The shopper email.
          title: shopperEmail
          type: string
        shopperName:
          description: The shopper name.
          title: shopperName
          type: string
        surcharge:
          $ref: '#/components/schemas/Amount'
        totalAmount:
          $ref: '#/components/schemas/Amount'
        type:
          description: '**voucher**'
          enum:
          - voucher
          title: type
          type: string
        url:
          description: Specifies the URL to redirect to.
          title: url
          type: string
      required:
      - type
      title: CheckoutVoucherAction
    CommonField:
      example:
        name: name
        version: version
      properties:
        name:
          description: "Name of the field. For example, Name of External Platform."
          title: name
          type: string
        version:
          description: "Version of the field. For example, Version of External Platform."
          title: version
          type: string
      title: CommonField
    Company:
      example:
        registrationNumber: registrationNumber
        registryLocation: registryLocation
        taxId: taxId
        name: name
        type: type
        homepage: homepage
      properties:
        homepage:
          description: The company website's home page.
          title: homepage
          type: string
        name:
          description: The company name.
          title: name
          type: string
        registrationNumber:
          description: Registration number of the company.
          title: registrationNumber
          type: string
        registryLocation:
          description: Registry location of the company.
          title: registryLocation
          type: string
        taxId:
          description: Tax ID of the company.
          title: taxId
          type: string
        type:
          description: The company type.
          title: type
          type: string
      title: Company
    Configuration:
      example:
        cardHolderName: NONE
        installments:
          maxNumberOfInstallments: 6
        shopperInput:
          deliveryAddress: editable
          personalDetails: editable
          billingAddress: editable
        avs:
          addressEditable: true
          enabled: true
      properties:
        avs:
          $ref: '#/components/schemas/Avs'
        cardHolderName:
          description: |-
            Determines whether the cardholder name should be provided or not.

            Permitted values:
            * NONE
            * OPTIONAL
            * REQUIRED
          enum:
          - NONE
          - OPTIONAL
          - REQUIRED
          title: cardHolderName
          type: string
          x-addedInVersion: "37"
        installments:
          $ref: '#/components/schemas/InstallmentsNumber'
        shopperInput:
          $ref: '#/components/schemas/ShopperInput'
      title: Configuration
    CreateCheckoutSessionRequest:
      example:
        metadata:
          key: metadata
        splits:
        - reference: reference
          amount:
            currency: currency
            value: 5
          description: description
          type: AcquiringFees
          account: account
        - reference: reference
          amount:
            currency: currency
            value: 5
          description: description
          type: AcquiringFees
          account: account
        redirectToIssuerMethod: redirectToIssuerMethod
        channel: iOS
        mcc: mcc
        threeDSAuthenticationOnly: false
        lineItems:
        - quantity: 1
          itemCategory: itemCategory
          amountExcludingTax: 1
          imageUrl: imageUrl
          taxPercentage: 7
          description: description
          id: id
          amountIncludingTax: 1
          productUrl: productUrl
          taxAmount: 6
        - quantity: 1
          itemCategory: itemCategory
          amountExcludingTax: 1
          imageUrl: imageUrl
          taxPercentage: 7
          description: description
          id: id
          amountIncludingTax: 1
          productUrl: productUrl
          taxAmount: 6
        mode: embedded
        reference: reference
        deliveryAddress:
          country: country
          firstName: firstName
          lastName: lastName
          stateOrProvince: stateOrProvince
          city: city
          houseNumberOrName: houseNumberOrName
          street: street
          postalCode: postalCode
        recurringProcessingModel: CardOnFile
        additionalData:
          challengeWindowSize: "01"
          mpiImplementationType: mpiImplementationType
          allow3DS2: allow3DS2
          executeThreeD: executeThreeD
          threeDSVersion: threeDSVersion
          scaExemption: scaExemption
        blockedPaymentMethods:
        - blockedPaymentMethods
        - blockedPaymentMethods
        trustedShopper: true
        enablePayOut: true
        additionalAmount:
          currency: currency
          value: 0
        shopperEmail: shopperEmail
        enableOneClick: true
        deliverAt: 2000-01-23T04:56:07.000+00:00
        showRemovePaymentMethodButton: true
        shopperLocale: shopperLocale
        captureDelayHours: 0
        applicationInfo:
          adyenLibrary:
            name: name
            version: version
          merchantApplication:
            name: name
            version: version
          adyenPaymentSource:
            name: name
            version: version
          merchantDevice:
            reference: reference
            os: os
            osVersion: osVersion
          shopperInteractionDevice:
            os: os
            osVersion: osVersion
            locale: locale
          externalPlatform:
            name: name
            integrator: integrator
            version: version
        shopperReference: shopperReference
        shopperStatement: shopperStatement
        mandate:
          amount: amount
          amountRule: max
          billingDay: billingDay
          startsAt: startsAt
          billingAttemptsRule: true
          endsAt: endsAt
          remarks: remarks
          frequency: adhoc
        recurringFrequency: recurringFrequency
        telephoneNumber: telephoneNumber
        socialSecurityNumber: socialSecurityNumber
        splitCardFundingSources: false
        themeId: themeId
        shopperIP: shopperIP
        fundOrigin:
          shopperName:
            firstName: firstName
            lastName: lastName
          telephoneNumber: telephoneNumber
          walletIdentifier: walletIdentifier
          shopperEmail: shopperEmail
          billingAddress:
            country: country
            stateOrProvince: stateOrProvince
            city: city
            houseNumberOrName: houseNumberOrName
            street: street
            postalCode: postalCode
        recurringExpiry: recurringExpiry
        shopperName:
          firstName: firstName
          lastName: lastName
        countryCode: countryCode
        shopperInteraction: Ecommerce
        company:
          registrationNumber: registrationNumber
          registryLocation: registryLocation
          taxId: taxId
          name: name
          type: type
          homepage: homepage
        returnUrl: returnUrl
        accountInfo:
          passwordChangeDate: 2000-01-23T04:56:07.000+00:00
          paymentAccountIndicator: notApplicable
          suspiciousActivity: true
          deliveryAddressUsageIndicator: thisTransaction
          pastTransactionsYear: 1
          accountType: notApplicable
          homePhone: homePhone
          paymentAccountAge: 2000-01-23T04:56:07.000+00:00
          accountAgeIndicator: notApplicable
          deliveryAddressUsageDate: 2000-01-23T04:56:07.000+00:00
          accountChangeDate: 2000-01-23T04:56:07.000+00:00
          accountCreationDate: 2000-01-23T04:56:07.000+00:00
          mobilePhone: mobilePhone
          pastTransactionsDay: 6
          accountChangeIndicator: thisTransaction
          passwordChangeIndicator: notApplicable
          addCardAttemptsDay: 0
          workPhone: workPhone
          purchasesLast6Months: 5
        authenticationData:
          authenticationOnly: false
          threeDSRequestData:
            challengeWindowSize: "01"
            dataOnly: "false"
            threeDSVersion: 2.1.0
            nativeThreeDS: preferred
          attemptAuthentication: always
        merchantOrderReference: merchantOrderReference
        amount:
          currency: currency
          value: 0
        redirectFromIssuerMethod: redirectFromIssuerMethod
        dateOfBirth: 2000-01-23
        showInstallmentAmount: true
        store: store
        allowedPaymentMethods:
        - allowedPaymentMethods
        - allowedPaymentMethods
        riskData:
          fraudOffset: 4
          customFields:
            key: customFields
          profileReference: profileReference
          clientData: clientData
        expiresAt: 2000-01-23T04:56:07.000+00:00
        storePaymentMethod: true
        merchantAccount: merchantAccount
        installmentOptions:
          key:
            preselectedValue: 6
            plans:
            - regular
            - regular
            values:
            - 1
            - 1
        fundRecipient:
          shopperName:
            firstName: firstName
            lastName: lastName
          subMerchant:
            country: country
            city: city
            taxId: taxId
            name: name
            mcc: mcc
          telephoneNumber: telephoneNumber
          storedPaymentMethodId: storedPaymentMethodId
          walletIdentifier: walletIdentifier
          paymentMethod:
            holderName: holderName
            cupsecureplus.smscode: cupsecureplus.smscode
            expiryMonth: expiryMonth
            threeDS2SdkVersion: threeDS2SdkVersion
            networkPaymentReference: networkPaymentReference
            checkoutAttemptId: checkoutAttemptId
            expiryYear: expiryYear
            type: scheme
            shopperNotificationReference: shopperNotificationReference
            cvc: cvc
            number: number
            encryptedCardNumber: encryptedCardNumber
            encryptedSecurityCode: encryptedSecurityCode
            encryptedExpiryYear: encryptedExpiryYear
            storedPaymentMethodId: storedPaymentMethodId
            recurringDetailReference: recurringDetailReference
            encryptedExpiryMonth: encryptedExpiryMonth
            fundingSource: credit
            brand: brand
          shopperEmail: shopperEmail
          walletOwnerTaxId: walletOwnerTaxId
          billingAddress:
            country: country
            stateOrProvince: stateOrProvince
            city: city
            houseNumberOrName: houseNumberOrName
            street: street
            postalCode: postalCode
          shopperReference: shopperReference
        billingAddress:
          country: country
          stateOrProvince: stateOrProvince
          city: city
          houseNumberOrName: houseNumberOrName
          street: street
          postalCode: postalCode
        enableRecurring: true
        mpiData:
          cavv: cavv
          authenticationResponse: "Y"
          xid: xid
          cavvAlgorithm: cavvAlgorithm
          dsTransID: dsTransID
          tokenAuthenticationVerificationValue: tokenAuthenticationVerificationValue
          transStatusReason: transStatusReason
          challengeCancel: "01"
          directoryResponse: A
          eci: eci
          riskScore: riskScore
          threeDSVersion: threeDSVersion
      properties:
        accountInfo:
          $ref: '#/components/schemas/AccountInfo'
        additionalAmount:
          $ref: '#/components/schemas/Amount'
        additionalData:
          $ref: '#/components/schemas/BalanceCheckRequest_additionalData'
        allowedPaymentMethods:
          description: |-
            List of payment methods to be presented to the shopper. To refer to payment methods, use their [payment method type](https://docs.adyen.com/payment-methods/payment-method-types).

            Example: `"allowedPaymentMethods":["ideal","giropay"]`
          items:
            type: string
          title: allowedPaymentMethods
          type: array
        amount:
          $ref: '#/components/schemas/Amount'
        applicationInfo:
          $ref: '#/components/schemas/ApplicationInfo'
        authenticationData:
          $ref: '#/components/schemas/AuthenticationData'
        billingAddress:
          $ref: '#/components/schemas/BillingAddress'
        blockedPaymentMethods:
          description: |-
            List of payment methods to be hidden from the shopper. To refer to payment methods, use their [payment method type](https://docs.adyen.com/payment-methods/payment-method-types).

            Example: `"blockedPaymentMethods":["ideal","giropay"]`
          items:
            type: string
          title: blockedPaymentMethods
          type: array
        captureDelayHours:
          description: "The delay between the authorisation and scheduled auto-capture,\
            \ specified in hours."
          format: int32
          title: captureDelayHours
          type: integer
        channel:
          description: |-
            The platform where a payment transaction takes place. This field is optional for filtering out payment methods that are only available on specific platforms. If this value is not set, then we will try to infer it from the `sdkVersion` or `token`.

            Possible values:
            * **iOS**
            * **Android**
            * **Web**
          enum:
          - iOS
          - Android
          - Web
          title: channel
          type: string
        company:
          $ref: '#/components/schemas/Company'
        countryCode:
          description: The shopper's two-letter country code.
          title: countryCode
          type: string
        dateOfBirth:
          description: |-
            The shopper's date of birth.

            Format [ISO-8601](https://www.w3.org/TR/NOTE-datetime): YYYY-MM-DD
          format: date
          title: dateOfBirth
          type: string
        deliverAt:
          description: |-
            The date and time when the purchased goods should be delivered.

            [ISO 8601](https://www.w3.org/TR/NOTE-datetime) format: YYYY-MM-DDThh:mm:ss+TZD, for example, **2020-12-18T10:15:30+01:00**.
          format: date-time
          title: deliverAt
          type: string
        deliveryAddress:
          $ref: '#/components/schemas/DeliveryAddress'
        enableOneClick:
          description: "When true and `shopperReference` is provided, the shopper\
            \ will be asked if the payment details should be stored for future one-click\
            \ payments."
          title: enableOneClick
          type: boolean
        enablePayOut:
          description: "When true and `shopperReference` is provided, the payment\
            \ details will be tokenized for payouts."
          title: enablePayOut
          type: boolean
        enableRecurring:
          description: "When true and `shopperReference` is provided, the payment\
            \ details will be tokenized for recurring payments."
          title: enableRecurring
          type: boolean
        expiresAt:
          description: "The date the session expires in [ISO8601](https://www.iso.org/iso-8601-date-and-time-format.html)\
            \ format. When not specified, the expiry date is set to 1 hour after session\
            \ creation. You cannot set the session expiry to more than 24 hours after\
            \ session creation."
          format: date-time
          title: expiresAt
          type: string
        fundOrigin:
          $ref: '#/components/schemas/FundOrigin'
        fundRecipient:
          $ref: '#/components/schemas/FundRecipient'
        installmentOptions:
          additionalProperties:
            $ref: '#/components/schemas/CheckoutSessionInstallmentOption'
          description: "A set of key-value pairs that specifies the installment options\
            \ available per payment method. The key must be a payment method name\
            \ in lowercase. For example, **card** to specify installment options for\
            \ all cards, or **visa** or **mc**. The value must be an object containing\
            \ the installment options."
          title: installmentOptions
        lineItems:
          description: |-
            Price and product information about the purchased items, to be included on the invoice sent to the shopper.
            > This field is required for 3x 4x Oney, Affirm, Afterpay, Clearpay, Klarna, Ratepay, and Zip.
          items:
            $ref: '#/components/schemas/LineItem'
          title: lineItems
          type: array
        mandate:
          $ref: '#/components/schemas/Mandate'
        mcc:
          description: "The [merchant category code](https://en.wikipedia.org/wiki/Merchant_category_code)\
            \ (MCC) is a four-digit number, which relates to a particular market segment.\
            \ This code reflects the predominant activity that is conducted by the\
            \ merchant."
          title: mcc
          type: string
        merchantAccount:
          description: "The merchant account identifier, with which you want to process\
            \ the transaction."
          title: merchantAccount
          type: string
        merchantOrderReference:
          description: |-
            This reference allows linking multiple transactions to each other for reporting purposes (i.e. order auth-rate). The reference should be unique per billing cycle.
            The same merchant order reference should never be reused after the first authorised attempt. If used, this field should be supplied for all incoming authorisations.
            > We strongly recommend you send the `merchantOrderReference` value to benefit from linking payment requests when authorisation retries take place. In addition, we recommend you provide `retry.orderAttemptNumber`, `retry.chainAttemptNumber`, and `retry.skipRetry` values in `PaymentRequest.additionalData`.
          title: merchantOrderReference
          type: string
        metadata:
          additionalProperties:
            type: string
          description: "Metadata consists of entries, each of which includes a key\
            \ and a value.\nLimits:\n* Maximum 20 key-value pairs per request.\n*\
            \ Maximum 20 characters per key.\n* Maximum 80 characters per value. "
          title: metadata
        mode:
          default: embedded
          description: |-
            Indicates the type of front end integration. Possible values:
            * **embedded** (default): Drop-in or Components integration
            * **hosted**: Hosted Checkout integration
          enum:
          - embedded
          - hosted
          title: mode
          type: string
          x-addedInVersion: "69"
        mpiData:
          $ref: '#/components/schemas/ThreeDSecureData'
        recurringExpiry:
          description: Date after which no further authorisations shall be performed.
            Only for 3D Secure 2.
          title: recurringExpiry
          type: string
        recurringFrequency:
          description: Minimum number of days between authorisations. Only for 3D
            Secure 2.
          title: recurringFrequency
          type: string
        recurringProcessingModel:
          description: |
            Defines a recurring payment type. Required when creating a token to store payment details.
            Allowed values:
            * `Subscription` – A transaction for a fixed or variable amount, which follows a fixed schedule.
            * `CardOnFile` – With a card-on-file (CoF) transaction, card details are stored to enable one-click or omnichannel journeys, or simply to streamline the checkout process. Any subscription not following a fixed schedule is also considered a card-on-file transaction.
            * `UnscheduledCardOnFile` – An unscheduled card-on-file (UCoF) transaction is a transaction that occurs on a non-fixed schedule and/or have variable amounts. For example, automatic top-ups when a cardholder's balance drops below a certain amount.
          enum:
          - CardOnFile
          - Subscription
          - UnscheduledCardOnFile
          title: recurringProcessingModel
          type: string
        redirectFromIssuerMethod:
          description: Specifies the redirect method (GET or POST) when redirecting
            back from the issuer.
          title: redirectFromIssuerMethod
          type: string
        redirectToIssuerMethod:
          description: Specifies the redirect method (GET or POST) when redirecting
            to the issuer.
          title: redirectToIssuerMethod
          type: string
        reference:
          description: The reference to uniquely identify a payment.
          title: reference
          type: string
        returnUrl:
          description: The URL to return to when a redirect payment is completed.
          title: returnUrl
          type: string
        riskData:
          $ref: '#/components/schemas/RiskData'
        shopperEmail:
          description: The shopper's email address.
          title: shopperEmail
          type: string
        shopperIP:
          description: |-
            The shopper's IP address. In general, we recommend that you provide this data, as it is used in a number of risk checks (for instance, number of payment attempts or location-based checks).
            > For 3D Secure 2 transactions, schemes require `shopperIP` for all browser-based implementations.
            This field is also mandatory for some merchants depending on your business model. For more information, [contact Support](https://www.adyen.help/hc/en-us/requests/new).
          title: shopperIP
          type: string
        shopperInteraction:
          description: |-
            Specifies the sales channel, through which the shopper gives their card details, and whether the shopper is a returning customer.
            For the web service API, Adyen assumes Ecommerce shopper interaction by default.

            This field has the following possible values:
            * `Ecommerce` - Online transactions where the cardholder is present (online). For better authorisation rates, we recommend sending the card security code (CSC) along with the request.
            * `ContAuth` - Card on file and/or subscription transactions, where the cardholder is known to the merchant (returning customer). If the shopper is present (online), you can supply also the CSC to improve authorisation (one-click payment).
            * `Moto` - Mail-order and telephone-order transactions where the shopper is in contact with the merchant via email or telephone.
            * `POS` - Point-of-sale transactions where the shopper is physically present to make a payment using a secure payment terminal.
          enum:
          - Ecommerce
          - ContAuth
          - Moto
          - POS
          title: shopperInteraction
          type: string
        shopperLocale:
          description: The combination of a language code and a country code to specify
            the language to be used in the payment.
          title: shopperLocale
          type: string
        shopperName:
          $ref: '#/components/schemas/Name'
        shopperReference:
          description: |-
            Your reference to uniquely identify this shopper, for example user ID or account ID. Minimum length: 3 characters.
            > Your reference must not include personally identifiable information (PII), for example name or email address.
          maxLength: 256
          minLength: 3
          title: shopperReference
          type: string
        shopperStatement:
          description: |-
            The text to be shown on the shopper's bank statement.
             We recommend sending a maximum of 22 characters, otherwise banks might truncate the string.
             Allowed characters: **a-z**, **A-Z**, **0-9**, spaces, and special characters **. , ' _ - ? + * /**.
          title: shopperStatement
          type: string
        showInstallmentAmount:
          description: Set to true to show the payment amount per installment.
          title: showInstallmentAmount
          type: boolean
        showRemovePaymentMethodButton:
          description: Set to **true** to show a button that lets the shopper remove
            a stored payment method.
          title: showRemovePaymentMethodButton
          type: boolean
        socialSecurityNumber:
          description: The shopper's social security number.
          title: socialSecurityNumber
          type: string
        splitCardFundingSources:
          default: false
          description: Boolean value indicating whether the card payment method should
            be split into separate debit and credit options.
          title: splitCardFundingSources
          type: boolean
        splits:
          description: "An array of objects specifying how to split a payment when\
            \ using [Adyen for Platforms](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information),\
            \ [Classic Platforms integration](https://docs.adyen.com/marketplaces-and-platforms/classic/processing-payments#providing-split-information),\
            \ or [Issuing](https://docs.adyen.com/issuing/manage-funds#split)."
          items:
            $ref: '#/components/schemas/Split'
          title: splits
          type: array
        store:
          description: "Required for Adyen for Platforms integrations if you have\
            \ a platform setup. This is your [reference](https://docs.adyen.com/api-explorer/Management/3/post/merchants/(merchantId)/stores#request-reference)\
            \ (on [balance platform](https://docs.adyen.com/marketplaces-and-platforms/classic/platforms-for-partners#route-payments))\
            \ or the [storeReference](https://docs.adyen.com/api-explorer/Account/latest/post/updateAccountHolder#request-accountHolderDetails-storeDetails-storeReference)\
            \ (in the [classic integration](https://docs.adyen.com/marketplaces-and-platforms/processing-payments/route-payment-to-store/#route-a-payment-to-a-store))\
            \ for the ecommerce or point-of-sale store that is processing the payment."
          title: store
          type: string
        storePaymentMethod:
          description: "When this is set to **true** and the `shopperReference` is\
            \ provided, the payment details will be stored."
          title: storePaymentMethod
          type: boolean
        telephoneNumber:
          description: The shopper's telephone number.
          title: telephoneNumber
          type: string
        themeId:
          description: "Sets a custom theme for [Hosted Checkout](https://docs.adyen.com/online-payments/build-your-integration/?platform=Web&integration=Hosted+Checkout).\
            \ The value can be any of the **Theme ID** values from your Customer Area."
          title: themeId
          type: string
          x-addedInVersion: "69"
        threeDSAuthenticationOnly:
          default: false
          deprecated: true
          description: "If set to true, you will only perform the [3D Secure 2 authentication](https://docs.adyen.com/online-payments/3d-secure/other-3ds-flows/authentication-only),\
            \ and not the payment authorisation."
          title: threeDSAuthenticationOnly
          type: boolean
          x-deprecatedInVersion: "69"
          x-deprecatedMessage: Use `authenticationData.authenticationOnly` instead.
        trustedShopper:
          description: Set to true if the payment should be routed to a trusted MID.
          title: trustedShopper
          type: boolean
      required:
      - amount
      - merchantAccount
      - reference
      - returnUrl
      title: CreateCheckoutSessionRequest
    CreateCheckoutSessionResponse:
      example:
        metadata:
          key: metadata
        splits:
        - reference: reference
          amount:
            currency: currency
            value: 5
          description: description
          type: AcquiringFees
          account: account
        - reference: reference
          amount:
            currency: currency
            value: 5
          description: description
          type: AcquiringFees
          account: account
        redirectToIssuerMethod: redirectToIssuerMethod
        channel: iOS
        mcc: mcc
        threeDSAuthenticationOnly: false
        lineItems:
        - quantity: 1
          itemCategory: itemCategory
          amountExcludingTax: 1
          imageUrl: imageUrl
          taxPercentage: 7
          description: description
          id: id
          amountIncludingTax: 1
          productUrl: productUrl
          taxAmount: 6
        - quantity: 1
          itemCategory: itemCategory
          amountExcludingTax: 1
          imageUrl: imageUrl
          taxPercentage: 7
          description: description
          id: id
          amountIncludingTax: 1
          productUrl: productUrl
          taxAmount: 6
        reference: reference
        deliveryAddress:
          country: country
          firstName: firstName
          lastName: lastName
          stateOrProvince: stateOrProvince
          city: city
          houseNumberOrName: houseNumberOrName
          street: street
          postalCode: postalCode
        recurringProcessingModel: CardOnFile
        additionalData:
          challengeWindowSize: "01"
          mpiImplementationType: mpiImplementationType
          allow3DS2: allow3DS2
          executeThreeD: executeThreeD
          threeDSVersion: threeDSVersion
          scaExemption: scaExemption
        blockedPaymentMethods:
        - blockedPaymentMethods
        - blockedPaymentMethods
        id: id
        trustedShopper: true
        enablePayOut: true
        additionalAmount:
          currency: currency
          value: 0
        shopperEmail: shopperEmail
        enableOneClick: true
        deliverAt: 2000-01-23T04:56:07.000+00:00
        showRemovePaymentMethodButton: true
        shopperLocale: shopperLocale
        captureDelayHours: 0
        applicationInfo:
          adyenLibrary:
            name: name
            version: version
          merchantApplication:
            name: name
            version: version
          adyenPaymentSource:
            name: name
            version: version
          merchantDevice:
            reference: reference
            os: os
            osVersion: osVersion
          shopperInteractionDevice:
            os: os
            osVersion: osVersion
            locale: locale
          externalPlatform:
            name: name
            integrator: integrator
            version: version
        shopperReference: shopperReference
        shopperStatement: shopperStatement
        sessionData: sessionData
        mandate:
          amount: amount
          amountRule: max
          billingDay: billingDay
          startsAt: startsAt
          billingAttemptsRule: true
          endsAt: endsAt
          remarks: remarks
          frequency: adhoc
        recurringFrequency: recurringFrequency
        telephoneNumber: telephoneNumber
        socialSecurityNumber: socialSecurityNumber
        splitCardFundingSources: false
        themeId: themeId
        shopperIP: shopperIP
        fundOrigin:
          shopperName:
            firstName: firstName
            lastName: lastName
          telephoneNumber: telephoneNumber
          walletIdentifier: walletIdentifier
          shopperEmail: shopperEmail
          billingAddress:
            country: country
            stateOrProvince: stateOrProvince
            city: city
            houseNumberOrName: houseNumberOrName
            street: street
            postalCode: postalCode
        recurringExpiry: recurringExpiry
        shopperName:
          firstName: firstName
          lastName: lastName
        countryCode: countryCode
        shopperInteraction: Ecommerce
        company:
          registrationNumber: registrationNumber
          registryLocation: registryLocation
          taxId: taxId
          name: name
          type: type
          homepage: homepage
        returnUrl: returnUrl
        accountInfo:
          passwordChangeDate: 2000-01-23T04:56:07.000+00:00
          paymentAccountIndicator: notApplicable
          suspiciousActivity: true
          deliveryAddressUsageIndicator: thisTransaction
          pastTransactionsYear: 1
          accountType: notApplicable
          homePhone: homePhone
          paymentAccountAge: 2000-01-23T04:56:07.000+00:00
          accountAgeIndicator: notApplicable
          deliveryAddressUsageDate: 2000-01-23T04:56:07.000+00:00
          accountChangeDate: 2000-01-23T04:56:07.000+00:00
          accountCreationDate: 2000-01-23T04:56:07.000+00:00
          mobilePhone: mobilePhone
          pastTransactionsDay: 6
          accountChangeIndicator: thisTransaction
          passwordChangeIndicator: notApplicable
          addCardAttemptsDay: 0
          workPhone: workPhone
          purchasesLast6Months: 5
        authenticationData:
          authenticationOnly: false
          threeDSRequestData:
            challengeWindowSize: "01"
            dataOnly: "false"
            threeDSVersion: 2.1.0
            nativeThreeDS: preferred
          attemptAuthentication: always
        merchantOrderReference: merchantOrderReference
        amount:
          currency: currency
          value: 0
        redirectFromIssuerMethod: redirectFromIssuerMethod
        dateOfBirth: 2000-01-23T04:56:07.000+00:00
        showInstallmentAmount: true
        store: store
        allowedPaymentMethods:
        - allowedPaymentMethods
        - allowedPaymentMethods
        riskData:
          fraudOffset: 4
          customFields:
            key: customFields
          profileReference: profileReference
          clientData: clientData
        expiresAt: 2000-01-23T04:56:07.000+00:00
        url: url
        storePaymentMethod: true
        merchantAccount: merchantAccount
        installmentOptions:
          key:
            preselectedValue: 6
            plans:
            - regular
            - regular
            values:
            - 1
            - 1
        fundRecipient:
          shopperName:
            firstName: firstName
            lastName: lastName
          subMerchant:
            country: country
            city: city
            taxId: taxId
            name: name
            mcc: mcc
          telephoneNumber: telephoneNumber
          storedPaymentMethodId: storedPaymentMethodId
          walletIdentifier: walletIdentifier
          paymentMethod:
            holderName: holderName
            cupsecureplus.smscode: cupsecureplus.smscode
            expiryMonth: expiryMonth
            threeDS2SdkVersion: threeDS2SdkVersion
            networkPaymentReference: networkPaymentReference
            checkoutAttemptId: checkoutAttemptId
            expiryYear: expiryYear
            type: scheme
            shopperNotificationReference: shopperNotificationReference
            cvc: cvc
            number: number
            encryptedCardNumber: encryptedCardNumber
            encryptedSecurityCode: encryptedSecurityCode
            encryptedExpiryYear: encryptedExpiryYear
            storedPaymentMethodId: storedPaymentMethodId
            recurringDetailReference: recurringDetailReference
            encryptedExpiryMonth: encryptedExpiryMonth
            fundingSource: credit
            brand: brand
          shopperEmail: shopperEmail
          walletOwnerTaxId: walletOwnerTaxId
          billingAddress:
            country: country
            stateOrProvince: stateOrProvince
            city: city
            houseNumberOrName: houseNumberOrName
            street: street
            postalCode: postalCode
          shopperReference: shopperReference
        billingAddress:
          country: country
          stateOrProvince: stateOrProvince
          city: city
          houseNumberOrName: houseNumberOrName
          street: street
          postalCode: postalCode
        enableRecurring: true
        mpiData:
          cavv: cavv
          authenticationResponse: "Y"
          xid: xid
          cavvAlgorithm: cavvAlgorithm
          dsTransID: dsTransID
          tokenAuthenticationVerificationValue: tokenAuthenticationVerificationValue
          transStatusReason: transStatusReason
          challengeCancel: "01"
          directoryResponse: A
          eci: eci
          riskScore: riskScore
          threeDSVersion: threeDSVersion
      properties:
        accountInfo:
          $ref: '#/components/schemas/AccountInfo'
        additionalAmount:
          $ref: '#/components/schemas/Amount'
        additionalData:
          $ref: '#/components/schemas/BalanceCheckRequest_additionalData'
        allowedPaymentMethods:
          description: |-
            List of payment methods to be presented to the shopper. To refer to payment methods, use their [payment method type](https://docs.adyen.com/payment-methods/payment-method-types).

            Example: `"allowedPaymentMethods":["ideal","giropay"]`
          items:
            type: string
          title: allowedPaymentMethods
          type: array
        amount:
          $ref: '#/components/schemas/Amount'
        applicationInfo:
          $ref: '#/components/schemas/ApplicationInfo'
        authenticationData:
          $ref: '#/components/schemas/AuthenticationData'
        billingAddress:
          $ref: '#/components/schemas/BillingAddress'
        blockedPaymentMethods:
          description: |-
            List of payment methods to be hidden from the shopper. To refer to payment methods, use their [payment method type](https://docs.adyen.com/payment-methods/payment-method-types).

            Example: `"blockedPaymentMethods":["ideal","giropay"]`
          items:
            type: string
          title: blockedPaymentMethods
          type: array
        captureDelayHours:
          description: "The delay between the authorisation and scheduled auto-capture,\
            \ specified in hours."
          format: int32
          title: captureDelayHours
          type: integer
        channel:
          description: |-
            The platform where a payment transaction takes place. This field is optional for filtering out payment methods that are only available on specific platforms. If this value is not set, then we will try to infer it from the `sdkVersion` or `token`.

            Possible values:
            * **iOS**
            * **Android**
            * **Web**
          enum:
          - iOS
          - Android
          - Web
          title: channel
          type: string
        company:
          $ref: '#/components/schemas/Company'
        countryCode:
          description: The shopper's two-letter country code.
          title: countryCode
          type: string
        dateOfBirth:
          description: "The shopper's date of birth in [ISO8601](https://www.iso.org/iso-8601-date-and-time-format.html)\
            \ format."
          format: date-time
          title: dateOfBirth
          type: string
        deliverAt:
          description: |-
            The date and time when the purchased goods should be delivered.

            [ISO 8601](https://www.w3.org/TR/NOTE-datetime) format: YYYY-MM-DDThh:mm:ss+TZD, for example, **2020-12-18T10:15:30+01:00**.
          format: date-time
          title: deliverAt
          type: string
        deliveryAddress:
          $ref: '#/components/schemas/DeliveryAddress'
        enableOneClick:
          description: "When true and `shopperReference` is provided, the shopper\
            \ will be asked if the payment details should be stored for future one-click\
            \ payments."
          title: enableOneClick
          type: boolean
        enablePayOut:
          description: "When true and `shopperReference` is provided, the payment\
            \ details will be tokenized for payouts."
          title: enablePayOut
          type: boolean
        enableRecurring:
          description: "When true and `shopperReference` is provided, the payment\
            \ details will be tokenized for recurring payments."
          title: enableRecurring
          type: boolean
        expiresAt:
          description: "The date the session expires in [ISO8601](https://www.iso.org/iso-8601-date-and-time-format.html)\
            \ format. When not specified, the expiry date is set to 1 hour after session\
            \ creation. You cannot set the session expiry to more than 24 hours after\
            \ session creation."
          format: date-time
          title: expiresAt
          type: string
        fundOrigin:
          $ref: '#/components/schemas/FundOrigin'
        fundRecipient:
          $ref: '#/components/schemas/FundRecipient'
        id:
          description: A unique identifier of the session.
          readOnly: true
          title: id
          type: string
        installmentOptions:
          additionalProperties:
            $ref: '#/components/schemas/CheckoutSessionInstallmentOption'
          description: "A set of key-value pairs that specifies the installment options\
            \ available per payment method. The key must be a payment method name\
            \ in lowercase. For example, **card** to specify installment options for\
            \ all cards, or **visa** or **mc**. The value must be an object containing\
            \ the installment options."
          title: installmentOptions
        lineItems:
          description: |-
            Price and product information about the purchased items, to be included on the invoice sent to the shopper.
            > This field is required for 3x 4x Oney, Affirm, Afterpay, Clearpay, Klarna, Ratepay, and Zip.
          items:
            $ref: '#/components/schemas/LineItem'
          title: lineItems
          type: array
        mandate:
          $ref: '#/components/schemas/Mandate'
        mcc:
          description: "The [merchant category code](https://en.wikipedia.org/wiki/Merchant_category_code)\
            \ (MCC) is a four-digit number, which relates to a particular market segment.\
            \ This code reflects the predominant activity that is conducted by the\
            \ merchant."
          title: mcc
          type: string
        merchantAccount:
          description: "The merchant account identifier, with which you want to process\
            \ the transaction."
          title: merchantAccount
          type: string
        merchantOrderReference:
          description: |-
            This reference allows linking multiple transactions to each other for reporting purposes (i.e. order auth-rate). The reference should be unique per billing cycle.
            The same merchant order reference should never be reused after the first authorised attempt. If used, this field should be supplied for all incoming authorisations.
            > We strongly recommend you send the `merchantOrderReference` value to benefit from linking payment requests when authorisation retries take place. In addition, we recommend you provide `retry.orderAttemptNumber`, `retry.chainAttemptNumber`, and `retry.skipRetry` values in `PaymentRequest.additionalData`.
          title: merchantOrderReference
          type: string
        metadata:
          additionalProperties:
            type: string
          description: "Metadata consists of entries, each of which includes a key\
            \ and a value.\nLimits:\n* Maximum 20 key-value pairs per request.\n*\
            \ Maximum 20 characters per key.\n* Maximum 80 characters per value. "
          title: metadata
        mpiData:
          $ref: '#/components/schemas/ThreeDSecureData'
        recurringExpiry:
          description: Date after which no further authorisations shall be performed.
            Only for 3D Secure 2.
          title: recurringExpiry
          type: string
        recurringFrequency:
          description: Minimum number of days between authorisations. Only for 3D
            Secure 2.
          title: recurringFrequency
          type: string
        recurringProcessingModel:
          description: |
            Defines a recurring payment type. Required when creating a token to store payment details.
            Allowed values:
            * `Subscription` – A transaction for a fixed or variable amount, which follows a fixed schedule.
            * `CardOnFile` – With a card-on-file (CoF) transaction, card details are stored to enable one-click or omnichannel journeys, or simply to streamline the checkout process. Any subscription not following a fixed schedule is also considered a card-on-file transaction.
            * `UnscheduledCardOnFile` – An unscheduled card-on-file (UCoF) transaction is a transaction that occurs on a non-fixed schedule and/or have variable amounts. For example, automatic top-ups when a cardholder's balance drops below a certain amount.
          enum:
          - CardOnFile
          - Subscription
          - UnscheduledCardOnFile
          title: recurringProcessingModel
          type: string
        redirectFromIssuerMethod:
          description: Specifies the redirect method (GET or POST) when redirecting
            back from the issuer.
          title: redirectFromIssuerMethod
          type: string
        redirectToIssuerMethod:
          description: Specifies the redirect method (GET or POST) when redirecting
            to the issuer.
          title: redirectToIssuerMethod
          type: string
        reference:
          description: The reference to uniquely identify a payment.
          title: reference
          type: string
        returnUrl:
          description: The URL to return to when a redirect payment is completed.
          title: returnUrl
          type: string
        riskData:
          $ref: '#/components/schemas/RiskData'
        sessionData:
          description: The payment session data you need to pass to your front end.
          title: sessionData
          type: string
        shopperEmail:
          description: The shopper's email address.
          title: shopperEmail
          type: string
        shopperIP:
          description: |-
            The shopper's IP address. In general, we recommend that you provide this data, as it is used in a number of risk checks (for instance, number of payment attempts or location-based checks).
            > For 3D Secure 2 transactions, schemes require `shopperIP` for all browser-based implementations.
            This field is also mandatory for some merchants depending on your business model. For more information, [contact Support](https://www.adyen.help/hc/en-us/requests/new).
          title: shopperIP
          type: string
        shopperInteraction:
          description: |-
            Specifies the sales channel, through which the shopper gives their card details, and whether the shopper is a returning customer.
            For the web service API, Adyen assumes Ecommerce shopper interaction by default.

            This field has the following possible values:
            * `Ecommerce` - Online transactions where the cardholder is present (online). For better authorisation rates, we recommend sending the card security code (CSC) along with the request.
            * `ContAuth` - Card on file and/or subscription transactions, where the cardholder is known to the merchant (returning customer). If the shopper is present (online), you can supply also the CSC to improve authorisation (one-click payment).
            * `Moto` - Mail-order and telephone-order transactions where the shopper is in contact with the merchant via email or telephone.
            * `POS` - Point-of-sale transactions where the shopper is physically present to make a payment using a secure payment terminal.
          enum:
          - Ecommerce
          - ContAuth
          - Moto
          - POS
          title: shopperInteraction
          type: string
        shopperLocale:
          description: The combination of a language code and a country code to specify
            the language to be used in the payment.
          title: shopperLocale
          type: string
        shopperName:
          $ref: '#/components/schemas/Name'
        shopperReference:
          description: |-
            Your reference to uniquely identify this shopper, for example user ID or account ID. Minimum length: 3 characters.
            > Your reference must not include personally identifiable information (PII), for example name or email address.
          maxLength: 256
          minLength: 3
          title: shopperReference
          type: string
        shopperStatement:
          description: |-
            The text to be shown on the shopper's bank statement.
             We recommend sending a maximum of 22 characters, otherwise banks might truncate the string.
             Allowed characters: **a-z**, **A-Z**, **0-9**, spaces, and special characters **. , ' _ - ? + * /**.
          title: shopperStatement
          type: string
        showInstallmentAmount:
          description: Set to true to show the payment amount per installment.
          title: showInstallmentAmount
          type: boolean
        showRemovePaymentMethodButton:
          description: Set to **true** to show a button that lets the shopper remove
            a stored payment method.
          title: showRemovePaymentMethodButton
          type: boolean
        socialSecurityNumber:
          description: The shopper's social security number.
          title: socialSecurityNumber
          type: string
        splitCardFundingSources:
          default: false
          description: Boolean value indicating whether the card payment method should
            be split into separate debit and credit options.
          title: splitCardFundingSources
          type: boolean
        splits:
          description: "An array of objects specifying how to split a payment when\
            \ using [Adyen for Platforms](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information),\
            \ [Classic Platforms integration](https://docs.adyen.com/marketplaces-and-platforms/classic/processing-payments#providing-split-information),\
            \ or [Issuing](https://docs.adyen.com/issuing/manage-funds#split)."
          items:
            $ref: '#/components/schemas/Split'
          title: splits
          type: array
        store:
          description: "Required for Adyen for Platforms integrations if you have\
            \ a platform setup. This is your [reference](https://docs.adyen.com/api-explorer/Management/3/post/merchants/(merchantId)/stores#request-reference)\
            \ (on [balance platform](https://docs.adyen.com/marketplaces-and-platforms/classic/platforms-for-partners#route-payments))\
            \ or the [storeReference](https://docs.adyen.com/api-explorer/Account/latest/post/updateAccountHolder#request-accountHolderDetails-storeDetails-storeReference)\
            \ (in the [classic integration](https://docs.adyen.com/marketplaces-and-platforms/processing-payments/route-payment-to-store/#route-a-payment-to-a-store))\
            \ for the ecommerce or point-of-sale store that is processing the payment."
          title: store
          type: string
        storePaymentMethod:
          description: "When this is set to **true** and the `shopperReference` is\
            \ provided, the payment details will be stored."
          title: storePaymentMethod
          type: boolean
        telephoneNumber:
          description: The shopper's telephone number.
          title: telephoneNumber
          type: string
        themeId:
          description: "Sets a custom theme for [Hosted Checkout](https://docs.adyen.com/online-payments/build-your-integration/?platform=Web&integration=Hosted+Checkout).\
            \ The value can be any of the **Theme ID** values from your Customer Area."
          title: themeId
          type: string
          x-addedInVersion: "69"
        threeDSAuthenticationOnly:
          default: false
          deprecated: true
          description: "If set to true, you will only perform the [3D Secure 2 authentication](https://docs.adyen.com/online-payments/3d-secure/other-3ds-flows/authentication-only),\
            \ and not the payment authorisation."
          title: threeDSAuthenticationOnly
          type: boolean
          x-deprecatedInVersion: "69"
          x-deprecatedMessage: Use `authenticationData.authenticationOnly` instead.
        trustedShopper:
          description: Set to true if the payment should be routed to a trusted MID.
          title: trustedShopper
          type: boolean
        url:
          description: The URL for the Hosted Checkout page. Redirect the shopper
            to this URL so they can make the payment.
          title: url
          type: string
          x-addedInVersion: "69"
      required:
      - amount
      - expiresAt
      - id
      - merchantAccount
      - reference
      - returnUrl
      title: CreateCheckoutSessionResponse
    CreateOrderRequest:
      example:
        reference: reference
        amount:
          currency: currency
          value: 0
        merchantAccount: merchantAccount
        expiresAt: expiresAt
      properties:
        amount:
          $ref: '#/components/schemas/Amount'
        expiresAt:
          description: "The date that order expires; e.g. 2019-03-23T12:25:28Z. If\
            \ not provided, the default expiry duration is 1 day."
          title: expiresAt
          type: string
        merchantAccount:
          description: "The merchant account identifier, with which you want to process\
            \ the order."
          title: merchantAccount
          type: string
        reference:
          description: A custom reference identifying the order.
          title: reference
          type: string
      required:
      - amount
      - merchantAccount
      - reference
      title: CreateOrderRequest
    CreateOrderResponse:
      example:
        reference: reference
        remainingAmount:
          currency: currency
          value: 0
        amount:
          currency: currency
          value: 0
        resultCode: Success
        orderData: orderData
        refusalReason: refusalReason
        additionalData:
          cavv: cavv
          cavvAlgorithm: cavvAlgorithm
          scaExemptionRequested: scaExemptionRequested
          threeds2.cardEnrolled: true
          cardHolderInfo: cardHolderInfo
        fraudResult:
          accountScore: 6
          results:
          - accountScore: 1
            name: name
            checkId: 5
          - accountScore: 1
            name: name
            checkId: 5
        pspReference: pspReference
        expiresAt: expiresAt
      properties:
        additionalData:
          $ref: '#/components/schemas/BalanceCheckResponse_additionalData'
        amount:
          $ref: '#/components/schemas/Amount'
        expiresAt:
          description: The date that the order will expire.
          title: expiresAt
          type: string
        fraudResult:
          $ref: '#/components/schemas/FraudResult'
        orderData:
          description: The encrypted data that will be used by merchant for adding
            payments to the order.
          title: orderData
          type: string
        pspReference:
          description: Adyen's 16-character reference associated with the transaction/request.
            This value is globally unique; quote it when communicating with us about
            this request.
          title: pspReference
          type: string
        reference:
          description: The reference provided by merchant for creating the order.
          title: reference
          type: string
        refusalReason:
          description: |-
            If the payment's authorisation is refused or an error occurs during authorisation, this field holds Adyen's mapped reason for the refusal or a description of the error. When a transaction fails, the authorisation response includes `resultCode` and `refusalReason` values.

            For more information, see [Refusal reasons](https://docs.adyen.com/development-resources/refusal-reasons).
          title: refusalReason
          type: string
        remainingAmount:
          $ref: '#/components/schemas/Amount'
        resultCode:
          description: |-
            The result of the order creation request.
             The value is always **Success**.
          enum:
          - Success
          title: resultCode
          type: string
      required:
      - amount
      - expiresAt
      - orderData
      - remainingAmount
      - resultCode
      title: CreateOrderResponse
    DeliveryAddress:
      example:
        country: country
        firstName: firstName
        lastName: lastName
        stateOrProvince: stateOrProvince
        city: city
        houseNumberOrName: houseNumberOrName
        street: street
        postalCode: postalCode
      properties:
        city:
          description: "The name of the city. Maximum length: 3000 characters."
          maxLength: 3000
          title: city
          type: string
        country:
          description: |-
            The two-character ISO-3166-1 alpha-2 country code. For example, **US**.
            > If you don't know the country or are not collecting the country from the shopper, provide `country` as `ZZ`.
          title: country
          type: string
        firstName:
          title: firstName
          type: string
        houseNumberOrName:
          description: "The number or name of the house. Maximum length: 3000 characters."
          maxLength: 3000
          title: houseNumberOrName
          type: string
        lastName:
          title: lastName
          type: string
        postalCode:
          description: "A maximum of five digits for an address in the US, or a maximum\
            \ of ten characters for an address in all other countries."
          title: postalCode
          type: string
        stateOrProvince:
          description: |-
            The two-character ISO 3166-2 state or province code. For example, **CA** in the US or **ON** in Canada.
            > Required for the US and Canada.
          title: stateOrProvince
          type: string
        street:
          description: |-
            The name of the street. Maximum length: 3000 characters.
            > The house number should not be included in this field; it should be separately provided via `houseNumberOrName`.
          maxLength: 3000
          title: street
          type: string
      required:
      - city
      - country
      - houseNumberOrName
      - postalCode
      - street
      title: DeliveryAddress
    DetailsRequestAuthenticationData:
      example:
        authenticationOnly: false
      properties:
        authenticationOnly:
          default: false
          description: |-
            If set to true, you will only perform the [3D Secure 2 authentication](https://docs.adyen.com/online-payments/3d-secure/other-3ds-flows/authentication-only), and not the payment authorisation.
            Default: *false**.
          title: authenticationOnly
          type: boolean
          x-addedInVersion: "69"
      title: DetailsRequestAuthenticationData
    DeviceRenderOptions:
      example:
        sdkUiType:
        - multiSelect
        - multiSelect
        sdkInterface: both
      properties:
        sdkInterface:
          default: both
          description: |-
            Supported SDK interface types.
            Allowed values:
            * native
            * html
            * both
          enum:
          - native
          - html
          - both
          title: sdkInterface
          type: string
        sdkUiType:
          description: |-
            UI types supported for displaying specific challenges.
            Allowed values:
            * text
            * singleSelect
            * outOfBand
            * otherHtml
            * multiSelect
          items:
            enum:
            - multiSelect
            - otherHtml
            - outOfBand
            - singleSelect
            - text
            type: string
          title: sdkUiType
          type: array
      title: DeviceRenderOptions
    DokuDetails:
      additionalProperties: false
      properties:
        checkoutAttemptId:
          description: The checkout attempt identifier.
          title: checkoutAttemptId
          type: string
          x-addedInVersion: "68"
        firstName:
          description: The shopper's first name.
          title: firstName
          type: string
        lastName:
          description: The shopper's last name.
          title: lastName
          type: string
        shopperEmail:
          description: The shopper's email.
          title: shopperEmail
          type: string
        type:
          description: '**doku**'
          enum:
          - doku_mandiri_va
          - doku_cimb_va
          - doku_danamon_va
          - doku_bni_va
          - doku_permata_lite_atm
          - doku_bri_va
          - doku_bca_va
          - doku_alfamart
          - doku_indomaret
          - doku_wallet
          - doku_ovo
          title: type
          type: string
      required:
      - firstName
      - lastName
      - shopperEmail
      - type
      title: Doku
    DonationPaymentRequest:
      example:
        dccQuote:
          reference: reference
          validTill: 2000-01-23T04:56:07.000+00:00
          signature: signature
          accountType: accountType
          buy:
            currency: currency
            value: 0
          sell:
            currency: currency
            value: 0
          interbank:
            currency: currency
            value: 0
          source: source
          type: type
          basePoints: 2
          account: account
          baseAmount:
            currency: currency
            value: 0
        metadata:
          key: metadata
        sessionValidity: sessionValidity
        splits:
        - reference: reference
          amount:
            currency: currency
            value: 5
          description: description
          type: AcquiringFees
          account: account
        - reference: reference
          amount:
            currency: currency
            value: 5
          description: description
          type: AcquiringFees
          account: account
        deviceFingerprint: deviceFingerprint
        redirectToIssuerMethod: redirectToIssuerMethod
        channel: iOS
        platformChargebackLogic:
          costAllocationAccount: costAllocationAccount
          targetAccount: targetAccount
          behavior: deductAccordingToSplitRatio
        checkoutAttemptId: checkoutAttemptId
        mcc: mcc
        donationAccount: donationAccount
        threeDSAuthenticationOnly: false
        donationToken: donationToken
        merchantRiskIndicator:
          preOrderDate: 2000-01-23T04:56:07.000+00:00
          shipIndicator: shipIndicator
          giftCardAmount:
            currency: currency
            value: 0
          preOrderPurchaseInd: preOrderPurchaseInd
          deliveryEmail: deliveryEmail
          giftCardCount: 1
          addressMatch: true
          deliveryTimeframe: electronicDelivery
          reorderItems: true
          deliveryEmailAddress: deliveryEmailAddress
          preOrderPurchase: true
          giftCardCurr: giftCardCurr
          reorderItemsInd: reorderItemsInd
          deliveryAddressIndicator: shipToBillingAddress
        lineItems:
        - quantity: 1
          itemCategory: itemCategory
          amountExcludingTax: 1
          imageUrl: imageUrl
          taxPercentage: 7
          description: description
          id: id
          amountIncludingTax: 1
          productUrl: productUrl
          taxAmount: 6
        - quantity: 1
          itemCategory: itemCategory
          amountExcludingTax: 1
          imageUrl: imageUrl
          taxPercentage: 7
          description: description
          id: id
          amountIncludingTax: 1
          productUrl: productUrl
          taxAmount: 6
        reference: reference
        deliveryAddress:
          country: country
          firstName: firstName
          lastName: lastName
          stateOrProvince: stateOrProvince
          city: city
          houseNumberOrName: houseNumberOrName
          street: street
          postalCode: postalCode
        installments:
          plan: regular
          value: 7
        recurringProcessingModel: CardOnFile
        additionalData:
          challengeWindowSize: "01"
          mpiImplementationType: mpiImplementationType
          allow3DS2: allow3DS2
          executeThreeD: executeThreeD
          threeDSVersion: threeDSVersion
          scaExemption: scaExemption
        blockedPaymentMethods:
        - blockedPaymentMethods
        - blockedPaymentMethods
        order:
          orderData: orderData
          pspReference: pspReference
        trustedShopper: true
        enablePayOut: true
        fraudOffset: 4
        additionalAmount:
          currency: currency
          value: 0
        entityType: NaturalPerson
        shopperEmail: shopperEmail
        enableOneClick: true
        threeDS2RequestData:
          notificationURL: notificationURL
          paymentAuthenticationUseCase: paymentAuthenticationUseCase
          recurringFrequency: recurringFrequency
          mcc: mcc
          platform: iOS
          sdkEphemPubKey:
            kty: kty
            crv: crv
            x: x
            "y": "y"
          merchantName: merchantName
          recurringExpiry: recurringExpiry
          threeDSRequestorAuthenticationInd: threeDSRequestorAuthenticationInd
          addrMatch: "Y"
          threeDSRequestorURL: threeDSRequestorURL
          sdkReferenceNumber: sdkReferenceNumber
          threeDSRequestorName: threeDSRequestorName
          acquirerMerchantID: acquirerMerchantID
          sdkAppID: sdkAppID
          messageVersion: messageVersion
          sdkTransID: sdkTransID
          whiteListStatus: whiteListStatus
          authenticationOnly: false
          sdkMaxTimeout: 9
          homePhone:
            cc: cc
            subscriber: subscriber
          payTokenInd: true
          purchaseInstalData: purchaseInstalData
          acquirerBIN: acquirerBIN
          threeDSRequestorID: threeDSRequestorID
          deviceRenderOptions:
            sdkUiType:
            - multiSelect
            - multiSelect
            sdkInterface: both
          transactionType: goodsOrServicePurchase
          acctInfo:
            shipAddressUsageInd: "01"
            paymentAccAge: paymentAccAge
            paymentAccInd: "01"
            txnActivityYear: txnActivityYear
            shipNameIndicator: "01"
            chAccPwChangeInd: "01"
            provisionAttemptsDay: provisionAttemptsDay
            chAccChange: chAccChange
            chAccChangeInd: "01"
            chAccString: chAccString
            nbPurchaseAccount: nbPurchaseAccount
            chAccAgeInd: "01"
            chAccPwChange: chAccPwChange
            shipAddressUsage: shipAddressUsage
            suspiciousAccActivity: "01"
            txnActivityDay: txnActivityDay
          threeDSRequestorChallengeInd: "01"
          mobilePhone:
            cc: cc
            subscriber: subscriber
          threeDSRequestorAuthenticationInfo:
            threeDSReqAuthMethod: "01"
            threeDSReqAuthData: threeDSReqAuthData
            threeDSReqAuthTimestamp: threeDSReqAuthTimestamp
          transType: "01"
          challengeIndicator: noPreference
          acctType: "01"
          workPhone:
            cc: cc
            subscriber: subscriber
          threeDSCompInd: threeDSCompInd
          threeDSRequestorPriorAuthenticationInfo:
            threeDSReqPriorRef: threeDSReqPriorRef
            threeDSReqPriorAuthData: threeDSReqPriorAuthData
            threeDSReqPriorAuthMethod: "01"
            threeDSReqPriorAuthTimestamp: threeDSReqPriorAuthTimestamp
        orderReference: orderReference
        paymentMethod:
          storedPaymentMethodId: storedPaymentMethodId
          recurringDetailReference: recurringDetailReference
          applePayToken: applePayToken
          checkoutAttemptId: checkoutAttemptId
          fundingSource: credit
          type: applepay
        shopperLocale: shopperLocale
        captureDelayHours: 3
        fundingSource: debit
        applicationInfo:
          adyenLibrary:
            name: name
            version: version
          merchantApplication:
            name: name
            version: version
          adyenPaymentSource:
            name: name
            version: version
          merchantDevice:
            reference: reference
            os: os
            osVersion: osVersion
          shopperInteractionDevice:
            os: os
            osVersion: osVersion
            locale: locale
          externalPlatform:
            name: name
            integrator: integrator
            version: version
        browserInfo:
          acceptHeader: acceptHeader
          screenWidth: 7
          javaEnabled: true
          screenHeight: 2
          timeZoneOffset: 9
          javaScriptEnabled: true
          language: language
          userAgent: userAgent
          colorDepth: 5
        shopperReference: shopperReference
        shopperStatement: shopperStatement
        mandate:
          amount: amount
          amountRule: max
          billingDay: billingDay
          startsAt: startsAt
          billingAttemptsRule: true
          endsAt: endsAt
          remarks: remarks
          frequency: adhoc
        recurringFrequency: recurringFrequency
        telephoneNumber: telephoneNumber
        localizedShopperStatement:
          key: localizedShopperStatement
        socialSecurityNumber: socialSecurityNumber
        origin: origin
        shopperIP: shopperIP
        fundOrigin:
          shopperName:
            firstName: firstName
            lastName: lastName
          telephoneNumber: telephoneNumber
          walletIdentifier: walletIdentifier
          shopperEmail: shopperEmail
          billingAddress:
            country: country
            stateOrProvince: stateOrProvince
            city: city
            houseNumberOrName: houseNumberOrName
            street: street
            postalCode: postalCode
        recurringExpiry: recurringExpiry
        shopperName:
          firstName: firstName
          lastName: lastName
        countryCode: countryCode
        selectedRecurringDetailReference: selectedRecurringDetailReference
        shopperInteraction: Ecommerce
        company:
          registrationNumber: registrationNumber
          registryLocation: registryLocation
          taxId: taxId
          name: name
          type: type
          homepage: homepage
        deliveryDate: 2000-01-23T04:56:07.000+00:00
        returnUrl: returnUrl
        conversionId: conversionId
        accountInfo:
          passwordChangeDate: 2000-01-23T04:56:07.000+00:00
          paymentAccountIndicator: notApplicable
          suspiciousActivity: true
          deliveryAddressUsageIndicator: thisTransaction
          pastTransactionsYear: 1
          accountType: notApplicable
          homePhone: homePhone
          paymentAccountAge: 2000-01-23T04:56:07.000+00:00
          accountAgeIndicator: notApplicable
          deliveryAddressUsageDate: 2000-01-23T04:56:07.000+00:00
          accountChangeDate: 2000-01-23T04:56:07.000+00:00
          accountCreationDate: 2000-01-23T04:56:07.000+00:00
          mobilePhone: mobilePhone
          pastTransactionsDay: 6
          accountChangeIndicator: thisTransaction
          passwordChangeIndicator: notApplicable
          addCardAttemptsDay: 0
          workPhone: workPhone
          purchasesLast6Months: 5
        authenticationData:
          authenticationOnly: false
          threeDSRequestData:
            challengeWindowSize: "01"
            dataOnly: "false"
            threeDSVersion: 2.1.0
            nativeThreeDS: preferred
          attemptAuthentication: always
        merchantOrderReference: merchantOrderReference
        amount:
          currency: currency
          value: 0
        redirectFromIssuerMethod: redirectFromIssuerMethod
        dateOfBirth: 2000-01-23T04:56:07.000+00:00
        store: store
        allowedPaymentMethods:
        - allowedPaymentMethods
        - allowedPaymentMethods
        riskData:
          fraudOffset: 4
          customFields:
            key: customFields
          profileReference: profileReference
          clientData: clientData
        storePaymentMethod: true
        merchantAccount: merchantAccount
        donationOriginalPspReference: donationOriginalPspReference
        fundRecipient:
          shopperName:
            firstName: firstName
            lastName: lastName
          subMerchant:
            country: country
            city: city
            taxId: taxId
            name: name
            mcc: mcc
          telephoneNumber: telephoneNumber
          storedPaymentMethodId: storedPaymentMethodId
          walletIdentifier: walletIdentifier
          paymentMethod:
            holderName: holderName
            cupsecureplus.smscode: cupsecureplus.smscode
            expiryMonth: expiryMonth
            threeDS2SdkVersion: threeDS2SdkVersion
            networkPaymentReference: networkPaymentReference
            checkoutAttemptId: checkoutAttemptId
            expiryYear: expiryYear
            type: scheme
            shopperNotificationReference: shopperNotificationReference
            cvc: cvc
            number: number
            encryptedCardNumber: encryptedCardNumber
            encryptedSecurityCode: encryptedSecurityCode
            encryptedExpiryYear: encryptedExpiryYear
            storedPaymentMethodId: storedPaymentMethodId
            recurringDetailReference: recurringDetailReference
            encryptedExpiryMonth: encryptedExpiryMonth
            fundingSource: credit
            brand: brand
          shopperEmail: shopperEmail
          walletOwnerTaxId: walletOwnerTaxId
          billingAddress:
            country: country
            stateOrProvince: stateOrProvince
            city: city
            houseNumberOrName: houseNumberOrName
            street: street
            postalCode: postalCode
          shopperReference: shopperReference
        billingAddress:
          country: country
          stateOrProvince: stateOrProvince
          city: city
          houseNumberOrName: houseNumberOrName
          street: street
          postalCode: postalCode
        enableRecurring: true
        mpiData:
          cavv: cavv
          authenticationResponse: "Y"
          xid: xid
          cavvAlgorithm: cavvAlgorithm
          dsTransID: dsTransID
          tokenAuthenticationVerificationValue: tokenAuthenticationVerificationValue
          transStatusReason: transStatusReason
          challengeCancel: "01"
          directoryResponse: A
          eci: eci
          riskScore: riskScore
          threeDSVersion: threeDSVersion
      properties:
        accountInfo:
          $ref: '#/components/schemas/AccountInfo'
        additionalAmount:
          $ref: '#/components/schemas/Amount'
        additionalData:
          $ref: '#/components/schemas/BalanceCheckRequest_additionalData'
        allowedPaymentMethods:
          description: |-
            List of payment methods to be presented to the shopper. To refer to payment methods, use their [payment method type](https://docs.adyen.com/payment-methods/payment-method-types).

            Example: `"allowedPaymentMethods":["ideal","giropay"]`
          items:
            type: string
          title: allowedPaymentMethods
          type: array
          x-addedInVersion: "33"
        amount:
          $ref: '#/components/schemas/Amount'
        applicationInfo:
          $ref: '#/components/schemas/ApplicationInfo'
        authenticationData:
          $ref: '#/components/schemas/AuthenticationData'
        billingAddress:
          $ref: '#/components/schemas/BillingAddress'
        blockedPaymentMethods:
          description: |-
            List of payment methods to be hidden from the shopper. To refer to payment methods, use their [payment method type](https://docs.adyen.com/payment-methods/payment-method-types).

            Example: `"blockedPaymentMethods":["ideal","giropay"]`
          items:
            type: string
          title: blockedPaymentMethods
          type: array
          x-addedInVersion: "33"
        browserInfo:
          $ref: '#/components/schemas/BrowserInfo'
        captureDelayHours:
          description: "The delay between the authorisation and scheduled auto-capture,\
            \ specified in hours."
          format: int32
          title: captureDelayHours
          type: integer
        channel:
          description: |-
            The platform where a payment transaction takes place. This field is optional for filtering out payment methods that are only available on specific platforms. If this value is not set, then we will try to infer it from the `sdkVersion` or `token`.

            Possible values:
            * iOS
            * Android
            * Web
          enum:
          - iOS
          - Android
          - Web
          title: channel
          type: string
        checkoutAttemptId:
          description: Checkout attempt ID that corresponds to the Id generated by
            the client SDK for tracking user payment journey.
          title: checkoutAttemptId
          type: string
          x-addedInVersion: "68"
        company:
          $ref: '#/components/schemas/Company'
        conversionId:
          deprecated: true
          description: Conversion ID that corresponds to the Id generated by the client
            SDK for tracking user payment journey.
          title: conversionId
          type: string
          x-addedInVersion: "49"
          x-deprecatedInVersion: "68"
          x-deprecatedMessage: Use `checkoutAttemptId` instead
        countryCode:
          description: |-
            The shopper country.

            Format: [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
            Example: NL or DE
          title: countryCode
          type: string
        dateOfBirth:
          description: |-
            The shopper's date of birth.

            Format [ISO-8601](https://www.w3.org/TR/NOTE-datetime): YYYY-MM-DD
          format: date-time
          title: dateOfBirth
          type: string
        dccQuote:
          $ref: '#/components/schemas/ForexQuote'
        deliveryAddress:
          $ref: '#/components/schemas/DeliveryAddress'
        deliveryDate:
          description: |-
            The date and time the purchased goods should be delivered.

            Format [ISO 8601](https://www.w3.org/TR/NOTE-datetime): YYYY-MM-DDThh:mm:ss.sssTZD

            Example: 2017-07-17T13:42:40.428+01:00
          format: date-time
          title: deliveryDate
          type: string
        deviceFingerprint:
          description: "A string containing the shopper's device fingerprint. For\
            \ more information, refer to [Device fingerprinting](https://docs.adyen.com/risk-management/device-fingerprinting)."
          maxLength: 5000
          title: deviceFingerprint
          type: string
        donationAccount:
          description: Donation account to which the transaction is credited.
          title: donationAccount
          type: string
        donationOriginalPspReference:
          description: PSP reference of the transaction from which the donation token
            is generated. Required when `donationToken` is provided.
          title: donationOriginalPspReference
          type: string
        donationToken:
          description: Donation token received in the `/payments` call.
          title: donationToken
          type: string
        enableOneClick:
          description: "When true and `shopperReference` is provided, the shopper\
            \ will be asked if the payment details should be stored for future one-click\
            \ payments."
          title: enableOneClick
          type: boolean
          x-addedInVersion: "32"
        enablePayOut:
          description: "When true and `shopperReference` is provided, the payment\
            \ details will be tokenized for payouts."
          title: enablePayOut
          type: boolean
          x-addedInVersion: "32"
        enableRecurring:
          description: "When true and `shopperReference` is provided, the payment\
            \ details will be tokenized for recurring payments."
          title: enableRecurring
          type: boolean
          x-addedInVersion: "32"
        entityType:
          description: The type of the entity the payment is processed for.
          enum:
          - NaturalPerson
          - CompanyName
          title: entityType
          type: string
        fraudOffset:
          description: An integer value that is added to the normal fraud score. The
            value can be either positive or negative.
          format: int32
          title: fraudOffset
          type: integer
        fundOrigin:
          $ref: '#/components/schemas/FundOrigin'
        fundRecipient:
          $ref: '#/components/schemas/FundRecipient'
        fundingSource:
          description: "The funding source that should be used when multiple sources\
            \ are available. For Brazilian combo cards, by default the funding source\
            \ is credit. To use debit, set this value to **debit**."
          enum:
          - debit
          title: fundingSource
          type: string
          x-addedInVersion: "52"
        installments:
          $ref: '#/components/schemas/Installments'
        lineItems:
          description: |-
            Price and product information about the purchased items, to be included on the invoice sent to the shopper.
            > This field is required for 3x 4x Oney, Affirm, Afterpay, Clearpay, Klarna, Ratepay, and Zip.
          items:
            $ref: '#/components/schemas/LineItem'
          title: lineItems
          type: array
          x-addedInVersion: "32"
        localizedShopperStatement:
          additionalProperties:
            type: string
          description: "The `localizedShopperStatement` field lets you use dynamic\
            \ values for your shopper statement in a local character set.\nIf not\
            \ supplied, left empty, or for cross-border transactions, **shopperStatement**\
            \ is used.\n\nAdyen currently supports the ja-Kana character set for Visa\
            \ and Mastercard payments in Japan using Japanese cards. This character\
            \ set supports:\n\n* UTF-8 based Katakana, capital letters, numbers and\
            \ special characters. \n* Half-width or full-width characters."
          title: localizedShopperStatement
          x-addedInVersion: "68"
        mandate:
          $ref: '#/components/schemas/Mandate'
        mcc:
          description: "The [merchant category code](https://en.wikipedia.org/wiki/Merchant_category_code)\
            \ (MCC) is a four-digit number, which relates to a particular market segment.\
            \ This code reflects the predominant activity that is conducted by the\
            \ merchant."
          title: mcc
          type: string
        merchantAccount:
          description: "The merchant account identifier, with which you want to process\
            \ the transaction."
          title: merchantAccount
          type: string
        merchantOrderReference:
          description: |-
            This reference allows linking multiple transactions to each other for reporting purposes (i.e. order auth-rate). The reference should be unique per billing cycle.
            The same merchant order reference should never be reused after the first authorised attempt. If used, this field should be supplied for all incoming authorisations.
            > We strongly recommend you send the `merchantOrderReference` value to benefit from linking payment requests when authorisation retries take place. In addition, we recommend you provide `retry.orderAttemptNumber`, `retry.chainAttemptNumber`, and `retry.skipRetry` values in `PaymentRequest.additionalData`.
          title: merchantOrderReference
          type: string
        merchantRiskIndicator:
          $ref: '#/components/schemas/MerchantRiskIndicator'
        metadata:
          additionalProperties:
            type: string
          description: "Metadata consists of entries, each of which includes a key\
            \ and a value.\nLimits:\n* Maximum 20 key-value pairs per request. When\
            \ exceeding, the \"177\" error occurs: \"Metadata size exceeds limit\"\
            .\n* Maximum 20 characters per key.\n* Maximum 80 characters per value. "
          title: metadata
        mpiData:
          $ref: '#/components/schemas/ThreeDSecureData'
        order:
          $ref: '#/components/schemas/EncryptedOrderData'
        orderReference:
          description: "When you are doing multiple partial (gift card) payments,\
            \ this is the `pspReference` of the first payment. We use this to link\
            \ the multiple payments to each other. As your own reference for linking\
            \ multiple payments, use the `merchantOrderReference`instead."
          title: orderReference
          type: string
        origin:
          description: |-
            Required for the 3D Secure 2 `channel` **Web** integration.

            Set this parameter to the origin URL of the page that you are loading the 3D Secure Component from.
          maxLength: 80
          title: origin
          type: string
          x-addedInVersion: "40"
        paymentMethod:
          $ref: '#/components/schemas/DonationPaymentRequest_paymentMethod'
        platformChargebackLogic:
          $ref: '#/components/schemas/PlatformChargebackLogic'
        recurringExpiry:
          description: Date after which no further authorisations shall be performed.
            Only for 3D Secure 2.
          title: recurringExpiry
          type: string
        recurringFrequency:
          description: Minimum number of days between authorisations. Only for 3D
            Secure 2.
          title: recurringFrequency
          type: string
        recurringProcessingModel:
          description: |
            Defines a recurring payment type. Required when creating a token to store payment details or using stored payment details.
            Allowed values:
            * `Subscription` – A transaction for a fixed or variable amount, which follows a fixed schedule.
            * `CardOnFile` – With a card-on-file (CoF) transaction, card details are stored to enable one-click or omnichannel journeys, or simply to streamline the checkout process. Any subscription not following a fixed schedule is also considered a card-on-file transaction.
            * `UnscheduledCardOnFile` – An unscheduled card-on-file (UCoF) transaction is a transaction that occurs on a non-fixed schedule and/or have variable amounts. For example, automatic top-ups when a cardholder's balance drops below a certain amount.
          enum:
          - CardOnFile
          - Subscription
          - UnscheduledCardOnFile
          title: recurringProcessingModel
          type: string
          x-addedInVersion: "30"
        redirectFromIssuerMethod:
          description: Specifies the redirect method (GET or POST) when redirecting
            back from the issuer.
          title: redirectFromIssuerMethod
          type: string
          x-addedInVersion: "32"
        redirectToIssuerMethod:
          description: Specifies the redirect method (GET or POST) when redirecting
            to the issuer.
          title: redirectToIssuerMethod
          type: string
          x-addedInVersion: "32"
        reference:
          description: |-
            The reference to uniquely identify a payment. This reference is used in all communication with you about the payment status. We recommend using a unique value per payment; however, it is not a requirement.
            If you need to provide multiple references for a transaction, separate them with hyphens ("-").
            Maximum length: 80 characters.
          title: reference
          type: string
        returnUrl:
          description: |-
            The URL to return to in case of a redirection.
            The format depends on the channel. This URL can have a maximum of 1024 characters.
            * For web, include the protocol `http://` or `https://`. You can also include your own additional query parameters, for example, shopper ID or order reference number.
            Example: `https://your-company.com/checkout?shopperOrder=12xy`
            * For iOS, use the custom URL for your app. To know more about setting custom URL schemes, refer to the [Apple Developer documentation](https://developer.apple.com/documentation/uikit/inter-process_communication/allowing_apps_and_websites_to_link_to_your_content/defining_a_custom_url_scheme_for_your_app).
            Example: `my-app://`
            * For Android, use a custom URL handled by an Activity on your app. You can configure it with an [intent filter](https://developer.android.com/guide/components/intents-filters).
            Example: `my-app://your.package.name`
          maxLength: 8000
          title: returnUrl
          type: string
        riskData:
          $ref: '#/components/schemas/RiskData'
        selectedRecurringDetailReference:
          description: The `recurringDetailReference` you want to use for this payment.
            The value `LATEST` can be used to select the most recently stored recurring
            detail.
          title: selectedRecurringDetailReference
          type: string
        sessionValidity:
          description: |-
            The date and time until when the session remains valid, in [ISO 8601](https://www.w3.org/TR/NOTE-datetime) format.

            For example: 2020-07-18T15:42:40.428+01:00
          title: sessionValidity
          type: string
        shopperEmail:
          description: |-
            The shopper's email address. We recommend that you provide this data, as it is used in velocity fraud checks.
            > For 3D Secure 2 transactions, schemes require `shopperEmail` for all browser-based and mobile implementations.
          title: shopperEmail
          type: string
        shopperIP:
          description: |-
            The shopper's IP address. In general, we recommend that you provide this data, as it is used in a number of risk checks (for instance, number of payment attempts or location-based checks).
            > For 3D Secure 2 transactions, schemes require `shopperIP` for all browser-based implementations.
            This field is also mandatory for some merchants depending on your business model. For more information, [contact Support](https://www.adyen.help/hc/en-us/requests/new).
          title: shopperIP
          type: string
        shopperInteraction:
          description: |-
            Specifies the sales channel, through which the shopper gives their card details, and whether the shopper is a returning customer.
            For the web service API, Adyen assumes Ecommerce shopper interaction by default.

            This field has the following possible values:
            * `Ecommerce` - Online transactions where the cardholder is present (online). For better authorisation rates, we recommend sending the card security code (CSC) along with the request.
            * `ContAuth` - Card on file and/or subscription transactions, where the cardholder is known to the merchant (returning customer). If the shopper is present (online), you can supply also the CSC to improve authorisation (one-click payment).
            * `Moto` - Mail-order and telephone-order transactions where the shopper is in contact with the merchant via email or telephone.
            * `POS` - Point-of-sale transactions where the shopper is physically present to make a payment using a secure payment terminal.
          enum:
          - Ecommerce
          - ContAuth
          - Moto
          - POS
          title: shopperInteraction
          type: string
        shopperLocale:
          description: The combination of a language code and a country code to specify
            the language to be used in the payment.
          title: shopperLocale
          type: string
        shopperName:
          $ref: '#/components/schemas/Name'
        shopperReference:
          description: "Required for recurring payments. \nYour reference to uniquely\
            \ identify this shopper, for example user ID or account ID. Minimum length:\
            \ 3 characters.\n> Your reference must not include personally identifiable\
            \ information (PII), for example name or email address."
          maxLength: 256
          minLength: 3
          title: shopperReference
          type: string
        shopperStatement:
          description: |-
            The text to be shown on the shopper's bank statement.
             We recommend sending a maximum of 22 characters, otherwise banks might truncate the string.
             Allowed characters: **a-z**, **A-Z**, **0-9**, spaces, and special characters **. , ' _ - ? + * /**.
          title: shopperStatement
          type: string
        socialSecurityNumber:
          description: The shopper's social security number.
          title: socialSecurityNumber
          type: string
        splits:
          description: "An array of objects specifying how to split a payment when\
            \ using [Adyen for Platforms](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information),\
            \ [Classic Platforms integration](https://docs.adyen.com/marketplaces-and-platforms/classic/processing-payments#providing-split-information),\
            \ or [Issuing](https://docs.adyen.com/issuing/manage-funds#split)."
          items:
            $ref: '#/components/schemas/Split'
          title: splits
          type: array
          x-addedInVersion: "37"
        store:
          description: "Required for Adyen for Platforms integrations if you have\
            \ a platform setup. This is your [reference](https://docs.adyen.com/api-explorer/Management/3/post/merchants/(merchantId)/stores#request-reference)\
            \ (on [balance platform](https://docs.adyen.com/marketplaces-and-platforms/classic/platforms-for-partners#route-payments))\
            \ or the [storeReference](https://docs.adyen.com/api-explorer/Account/latest/post/updateAccountHolder#request-accountHolderDetails-storeDetails-storeReference)\
            \ (in the [classic integration](https://docs.adyen.com/marketplaces-and-platforms/processing-payments/route-payment-to-store/#route-a-payment-to-a-store))\
            \ for the ecommerce or point-of-sale store that is processing the payment."
          maxLength: 16
          minLength: 1
          title: store
          type: string
        storePaymentMethod:
          description: "When true and `shopperReference` is provided, the payment\
            \ details will be stored."
          title: storePaymentMethod
          type: boolean
          x-addedInVersion: "49"
        telephoneNumber:
          description: The shopper's telephone number.
          title: telephoneNumber
          type: string
        threeDS2RequestData:
          $ref: '#/components/schemas/ThreeDS2RequestFields'
        threeDSAuthenticationOnly:
          default: false
          deprecated: true
          description: "If set to true, you will only perform the [3D Secure 2 authentication](https://docs.adyen.com/online-payments/3d-secure/other-3ds-flows/authentication-only),\
            \ and not the payment authorisation."
          title: threeDSAuthenticationOnly
          type: boolean
          x-addedInVersion: "50"
          x-deprecatedInVersion: "69"
          x-deprecatedMessage: Use `authenticationData.authenticationOnly` instead.
        trustedShopper:
          description: Set to true if the payment should be routed to a trusted MID.
          title: trustedShopper
          type: boolean
          x-addedInVersion: "37"
      required:
      - amount
      - merchantAccount
      - paymentMethod
      - reference
      - returnUrl
      title: DonationPaymentRequest
    DonationPaymentResponse:
      example:
        reference: reference
        amount:
          currency: currency
          value: 0
        merchantAccount: merchantAccount
        payment:
          threeDS2Result:
            whiteListStatus: whiteListStatus
            exemptionIndicator: lowValue
            challengeCancel: "01"
            eci: eci
            threeDSRequestorChallengeInd: "01"
            cavvAlgorithm: cavvAlgorithm
            dsTransID: dsTransID
            transStatusReason: transStatusReason
            messageVersion: messageVersion
            riskScore: riskScore
            authenticationValue: authenticationValue
            transStatus: transStatus
            threeDSServerTransID: threeDSServerTransID
            timestamp: timestamp
          amount:
            currency: currency
            value: 0
          resultCode: AuthenticationFinished
          fraudResult:
            accountScore: 6
            results:
            - accountScore: 1
              name: name
              checkId: 5
            - accountScore: 1
              name: name
              checkId: 5
          donationToken: donationToken
          refusalReasonCode: refusalReasonCode
          threeDSPaymentData: threeDSPaymentData
          action:
            paymentData: paymentData
            type: await
            paymentMethodType: paymentMethodType
            url: url
          paymentMethod:
            type: type
            brand: brand
          threeDS2ResponseData:
            acsTransID: acsTransID
            exemptionIndicator: exemptionIndicator
            cardHolderInfo: cardHolderInfo
            sdkEphemPubKey: sdkEphemPubKey
            acsURL: acsURL
            dsReferenceNumber: dsReferenceNumber
            acsReferenceNumber: acsReferenceNumber
            cavvAlgorithm: cavvAlgorithm
            challengeIndicator: challengeIndicator
            dsTransID: dsTransID
            transStatusReason: transStatusReason
            acsOperatorID: acsOperatorID
            authenticationType: authenticationType
            messageVersion: messageVersion
            riskScore: riskScore
            acsSignedContent: acsSignedContent
            acsChallengeMandated: acsChallengeMandated
            transStatus: transStatus
            threeDSServerTransID: threeDSServerTransID
          refusalReason: refusalReason
          additionalData:
            cavv: cavv
            cavvAlgorithm: cavvAlgorithm
            scaExemptionRequested: scaExemptionRequested
            threeds2.cardEnrolled: true
            cardHolderInfo: cardHolderInfo
          merchantReference: merchantReference
          pspReference: pspReference
          order:
            reference: reference
            remainingAmount:
              currency: currency
              value: 0
            amount:
              currency: currency
              value: 0
            orderData: orderData
            pspReference: pspReference
            expiresAt: expiresAt
        id: id
        donationAccount: donationAccount
        status: completed
      properties:
        amount:
          $ref: '#/components/schemas/Amount'
        donationAccount:
          description: "The Adyen account name of your charity. We will provide you\
            \ with this account name once your chosen charity has been [onboarded](https://docs.adyen.com/online-payments/donations#onboarding)."
          title: donationAccount
          type: string
        id:
          description: Your unique resource identifier.
          title: id
          type: string
        merchantAccount:
          description: "The merchant account identifier, with which you want to process\
            \ the transaction."
          title: merchantAccount
          type: string
        payment:
          $ref: '#/components/schemas/PaymentResponse'
        reference:
          description: "The reference to uniquely identify a payment. This reference\
            \ is used in all communication with you about the payment status. We recommend\
            \ using a unique value per payment; however, it is not a requirement.\
            \ If you need to provide multiple references for a transaction, separate\
            \ them with hyphens (\"-\"). Maximum length: 80 characters."
          title: reference
          type: string
        status:
          description: |-
            The status of the donation transaction.

            Possible values:
            * **completed**
            * **pending**
            * **refused**
          enum:
          - completed
          - pending
          - refused
          title: status
          type: string
      title: DonationPaymentResponse
    DotpayDetails:
      additionalProperties: false
      properties:
        checkoutAttemptId:
          description: The checkout attempt identifier.
          title: checkoutAttemptId
          type: string
          x-addedInVersion: "68"
        issuer:
          description: The Dotpay issuer value of the shopper's selected bank. Set
            this to an **id** of a Dotpay issuer to preselect it.
          title: issuer
          type: string
        type:
          default: dotpay
          description: '**dotpay**'
          enum:
          - dotpay
          title: type
          type: string
      required:
      - issuer
      title: Dotpay
    DragonpayDetails:
      additionalProperties: false
      properties:
        checkoutAttemptId:
          description: The checkout attempt identifier.
          title: checkoutAttemptId
          type: string
          x-addedInVersion: "68"
        issuer:
          description: The Dragonpay issuer value of the shopper's selected bank.
            Set this to an **id** of a Dragonpay issuer to preselect it.
          title: issuer
          type: string
        shopperEmail:
          description: The shopper’s email address.
          title: shopperEmail
          type: string
        type:
          description: '**dragonpay**'
          enum:
          - dragonpay_ebanking
          - dragonpay_otc_banking
          - dragonpay_otc_non_banking
          - dragonpay_otc_philippines
          title: type
          type: string
      required:
      - issuer
      - type
      title: Dragonpay
    EcontextVoucherDetails:
      additionalProperties: false
      properties:
        checkoutAttemptId:
          description: The checkout attempt identifier.
          title: checkoutAttemptId
          type: string
          x-addedInVersion: "68"
        firstName:
          description: The shopper's first name.
          title: firstName
          type: string
        lastName:
          description: The shopper's last name.
          title: lastName
          type: string
        shopperEmail:
          description: The shopper's email.
          title: shopperEmail
          type: string
        telephoneNumber:
          description: "The shopper's contact number. It must have an international\
            \ number format, for example **+31 20 779 1846**. Formats like **+31 (0)20\
            \ 779 1846** or **0031 20 779 1846** are not accepted."
          title: telephoneNumber
          type: string
        type:
          description: '**econtextvoucher**'
          enum:
          - econtext_seveneleven
          - econtext_stores
          title: type
          type: string
      required:
      - firstName
      - lastName
      - shopperEmail
      - telephoneNumber
      - type
      title: Voucher
    EncryptedOrderData:
      example:
        orderData: orderData
        pspReference: pspReference
      properties:
        orderData:
          description: The encrypted order data.
          title: orderData
          type: string
        pspReference:
          description: The `pspReference` that belongs to the order.
          title: pspReference
          type: string
      required:
      - orderData
      - pspReference
      title: EncryptedOrderData
    ExternalPlatform:
      example:
        name: name
        integrator: integrator
        version: version
      properties:
        integrator:
          description: External platform integrator.
          title: integrator
          type: string
        name:
          description: "Name of the field. For example, Name of External Platform."
          title: name
          type: string
        version:
          description: "Version of the field. For example, Version of External Platform."
          title: version
          type: string
      title: ExternalPlatform
    ForexQuote:
      example:
        reference: reference
        validTill: 2000-01-23T04:56:07.000+00:00
        signature: signature
        accountType: accountType
        buy:
          currency: currency
          value: 0
        sell:
          currency: currency
          value: 0
        interbank:
          currency: currency
          value: 0
        source: source
        type: type
        basePoints: 2
        account: account
        baseAmount:
          currency: currency
          value: 0
      properties:
        account:
          description: The account name.
          title: account
          type: string
        accountType:
          description: The account type.
          title: accountType
          type: string
        baseAmount:
          $ref: '#/components/schemas/Amount'
        basePoints:
          description: The base points.
          format: int32
          title: basePoints
          type: integer
        buy:
          $ref: '#/components/schemas/Amount'
        interbank:
          $ref: '#/components/schemas/Amount'
        reference:
          description: The reference assigned to the forex quote request.
          title: reference
          type: string
        sell:
          $ref: '#/components/schemas/Amount'
        signature:
          description: The signature to validate the integrity.
          title: signature
          type: string
        source:
          description: The source of the forex quote.
          title: source
          type: string
        type:
          description: The type of forex.
          title: type
          type: string
        validTill:
          description: The date until which the forex quote is valid.
          format: date-time
          title: validTill
          type: string
      required:
      - basePoints
      - validTill
      title: ForexQuote
    FraudCheckResult:
      example:
        accountScore: 1
        name: name
        checkId: 5
      properties:
        accountScore:
          description: The fraud score generated by the risk check.
          format: int32
          title: accountScore
          type: integer
        checkId:
          description: The ID of the risk check.
          format: int32
          title: checkId
          type: integer
        name:
          description: The name of the risk check.
          title: name
          type: string
      required:
      - accountScore
      - checkId
      - name
      title: FraudCheckResult
    FraudResult:
      example:
        accountScore: 6
        results:
        - accountScore: 1
          name: name
          checkId: 5
        - accountScore: 1
          name: name
          checkId: 5
      properties:
        accountScore:
          description: The total fraud score generated by the risk checks.
          format: int32
          title: accountScore
          type: integer
        results:
          description: The result of the individual risk checks.
          items:
            $ref: '#/components/schemas/FraudCheckResult'
          title: results
          type: array
      required:
      - accountScore
      title: FraudResult
    FundOrigin:
      example:
        shopperName:
          firstName: firstName
          lastName: lastName
        telephoneNumber: telephoneNumber
        walletIdentifier: walletIdentifier
        shopperEmail: shopperEmail
        billingAddress:
          country: country
          stateOrProvince: stateOrProvince
          city: city
          houseNumberOrName: houseNumberOrName
          street: street
          postalCode: postalCode
      properties:
        billingAddress:
          $ref: '#/components/schemas/Address'
        shopperEmail:
          description: Email address of the person.
          title: shopperEmail
          type: string
        shopperName:
          $ref: '#/components/schemas/Name'
        telephoneNumber:
          description: Phone number of the person
          title: telephoneNumber
          type: string
        walletIdentifier:
          title: walletIdentifier
          type: string
      title: FundOrigin
    FundRecipient:
      example:
        shopperName:
          firstName: firstName
          lastName: lastName
        subMerchant:
          country: country
          city: city
          taxId: taxId
          name: name
          mcc: mcc
        telephoneNumber: telephoneNumber
        storedPaymentMethodId: storedPaymentMethodId
        walletIdentifier: walletIdentifier
        paymentMethod:
          holderName: holderName
          cupsecureplus.smscode: cupsecureplus.smscode
          expiryMonth: expiryMonth
          threeDS2SdkVersion: threeDS2SdkVersion
          networkPaymentReference: networkPaymentReference
          checkoutAttemptId: checkoutAttemptId
          expiryYear: expiryYear
          type: scheme
          shopperNotificationReference: shopperNotificationReference
          cvc: cvc
          number: number
          encryptedCardNumber: encryptedCardNumber
          encryptedSecurityCode: encryptedSecurityCode
          encryptedExpiryYear: encryptedExpiryYear
          storedPaymentMethodId: storedPaymentMethodId
          recurringDetailReference: recurringDetailReference
          encryptedExpiryMonth: encryptedExpiryMonth
          fundingSource: credit
          brand: brand
        shopperEmail: shopperEmail
        walletOwnerTaxId: walletOwnerTaxId
        billingAddress:
          country: country
          stateOrProvince: stateOrProvince
          city: city
          houseNumberOrName: houseNumberOrName
          street: street
          postalCode: postalCode
        shopperReference: shopperReference
      properties:
        billingAddress:
          $ref: '#/components/schemas/Address'
        paymentMethod:
          $ref: '#/components/schemas/CardDetails'
        shopperEmail:
          description: the email address of the person
          title: shopperEmail
          type: string
        shopperName:
          $ref: '#/components/schemas/Name'
        shopperReference:
          description: "Required for recurring payments. \nYour reference to uniquely\
            \ identify this shopper, for example user ID or account ID. Minimum length:\
            \ 3 characters.\n> Your reference must not include personally identifiable\
            \ information (PII), for example name or email address."
          maxLength: 256
          minLength: 3
          title: shopperReference
          type: string
        storedPaymentMethodId:
          description: This is the `recurringDetailReference` returned in the response
            when you created the token.
          maxLength: 64
          title: storedPaymentMethodId
          type: string
        subMerchant:
          $ref: '#/components/schemas/SubMerchant'
        telephoneNumber:
          description: the telephone number of the person
          title: telephoneNumber
          type: string
        walletIdentifier:
          description: indicates where the money is going
          title: walletIdentifier
          type: string
        walletOwnerTaxId:
          description: indicates the tax identifier of the fund recepient
          title: walletOwnerTaxId
          type: string
      title: FundRecipient
    GenericIssuerPaymentMethodDetails:
      additionalProperties: false
      properties:
        checkoutAttemptId:
          description: The checkout attempt identifier.
          title: checkoutAttemptId
          type: string
          x-addedInVersion: "68"
        issuer:
          description: The issuer id of the shopper's selected bank.
          title: issuer
          type: string
        recurringDetailReference:
          deprecated: true
          description: This is the `recurringDetailReference` returned in the response
            when you created the token.
          title: recurringDetailReference
          type: string
          x-deprecatedInVersion: "49"
          x-deprecatedMessage: Use `storedPaymentMethodId` instead.
        storedPaymentMethodId:
          description: This is the `recurringDetailReference` returned in the response
            when you created the token.
          maxLength: 64
          title: storedPaymentMethodId
          type: string
          x-addedInVersion: "49"
        type:
          description: '**genericissuer**'
          enum:
          - onlineBanking_PL
          - eps
          - onlineBanking_SK
          - onlineBanking_CZ
          title: type
          type: string
      required:
      - issuer
      - type
      title: Stored Payment Method
    GiropayDetails:
      additionalProperties: false
      properties:
        checkoutAttemptId:
          description: The checkout attempt identifier.
          title: checkoutAttemptId
          type: string
          x-addedInVersion: "68"
        recurringDetailReference:
          deprecated: true
          description: This is the `recurringDetailReference` returned in the response
            when you created the token.
          title: recurringDetailReference
          type: string
          x-deprecatedInVersion: "49"
          x-deprecatedMessage: Use `storedPaymentMethodId` instead.
        storedPaymentMethodId:
          description: This is the `recurringDetailReference` returned in the response
            when you created the token.
          maxLength: 64
          title: storedPaymentMethodId
          type: string
          x-addedInVersion: "49"
        type:
          default: giropay
          description: '**giropay**'
          enum:
          - giropay
          title: type
          type: string
      title: Giropay
    GooglePayDetails:
      additionalProperties: false
      properties:
        checkoutAttemptId:
          description: The checkout attempt identifier.
          title: checkoutAttemptId
          type: string
          x-addedInVersion: "68"
        fundingSource:
          description: "The funding source that should be used when multiple sources\
            \ are available. For Brazilian combo cards, by default the funding source\
            \ is credit. To use debit, set this value to **debit**."
          enum:
          - credit
          - debit
          title: fundingSource
          type: string
        googlePayCardNetwork:
          description: 'The selected payment card network. '
          title: googlePayCardNetwork
          type: string
        googlePayToken:
          description: "The `token` that you obtained from the [Google Pay API](https://developers.google.com/pay/api/web/reference/response-objects#PaymentData)\
            \ `PaymentData` response."
          title: googlePayToken
          type: string
        recurringDetailReference:
          deprecated: true
          description: This is the `recurringDetailReference` returned in the response
            when you created the token.
          title: recurringDetailReference
          type: string
          x-deprecatedInVersion: "49"
          x-deprecatedMessage: Use `storedPaymentMethodId` instead.
        storedPaymentMethodId:
          description: This is the `recurringDetailReference` returned in the response
            when you created the token.
          maxLength: 64
          title: storedPaymentMethodId
          type: string
          x-addedInVersion: "49"
        type:
          default: googlepay
          description: "**googlepay**, **paywithgoogle**"
          enum:
          - googlepay
          title: type
          type: string
      required:
      - googlePayToken
      title: Google Pay
    GooglePayDonations:
      additionalProperties: false
      properties:
        checkoutAttemptId:
          description: The checkout attempt identifier.
          title: checkoutAttemptId
          type: string
          x-addedInVersion: "68"
        fundingSource:
          description: "The funding source that should be used when multiple sources\
            \ are available. For Brazilian combo cards, by default the funding source\
            \ is credit. To use debit, set this value to **debit**."
          enum:
          - credit
          - debit
          title: fundingSource
          type: string
        googlePayCardNetwork:
          description: 'The selected payment card network. '
          title: googlePayCardNetwork
          type: string
        googlePayToken:
          description: "The `token` that you obtained from the [Google Pay API](https://developers.google.com/pay/api/web/reference/response-objects#PaymentData)\
            \ `PaymentData` response."
          title: googlePayToken
          type: string
        recurringDetailReference:
          deprecated: true
          description: This is the `recurringDetailReference` returned in the response
            when you created the token.
          title: recurringDetailReference
          type: string
          x-deprecatedInVersion: "49"
          x-deprecatedMessage: Use `storedPaymentMethodId` instead.
        storedPaymentMethodId:
          description: This is the `recurringDetailReference` returned in the response
            when you created the token.
          maxLength: 64
          title: storedPaymentMethodId
          type: string
          x-addedInVersion: "49"
        type:
          default: googlepay
          description: "**googlepay**, **paywithgoogle**"
          enum:
          - googlepay
          title: type
          type: string
      required:
      - googlePayToken
      title: Google Pay
    IdealDetails:
      additionalProperties: false
      properties:
        checkoutAttemptId:
          description: The checkout attempt identifier.
          title: checkoutAttemptId
          type: string
          x-addedInVersion: "68"
        issuer:
          description: The iDEAL issuer value of the shopper's selected bank. Set
            this to an **id** of an iDEAL issuer to preselect it.
          title: issuer
          type: string
        recurringDetailReference:
          deprecated: true
          description: This is the `recurringDetailReference` returned in the response
            when you created the token.
          title: recurringDetailReference
          type: string
          x-deprecatedInVersion: "49"
          x-deprecatedMessage: Use `storedPaymentMethodId` instead.
        storedPaymentMethodId:
          description: This is the `recurringDetailReference` returned in the response
            when you created the token.
          maxLength: 64
          title: storedPaymentMethodId
          type: string
          x-addedInVersion: "49"
        type:
          default: ideal
          description: '**ideal**'
          enum:
          - ideal
          title: type
          type: string
      required:
      - issuer
      title: iDEAL
    IdealDonations:
      additionalProperties: false
      properties:
        checkoutAttemptId:
          description: The checkout attempt identifier.
          title: checkoutAttemptId
          type: string
          x-addedInVersion: "68"
        issuer:
          description: The iDEAL issuer value of the shopper's selected bank. Set
            this to an **id** of an iDEAL issuer to preselect it.
          title: issuer
          type: string
        recurringDetailReference:
          deprecated: true
          description: This is the `recurringDetailReference` returned in the response
            when you created the token.
          title: recurringDetailReference
          type: string
          x-deprecatedInVersion: "49"
          x-deprecatedMessage: Use `storedPaymentMethodId` instead.
        storedPaymentMethodId:
          description: This is the `recurringDetailReference` returned in the response
            when you created the token.
          maxLength: 64
          title: storedPaymentMethodId
          type: string
          x-addedInVersion: "49"
        type:
          default: ideal
          description: '**ideal**'
          enum:
          - ideal
          title: type
          type: string
      required:
      - issuer
      title: iDEAL
    InputDetail:
      example:
        configuration:
          key: configuration
        details:
        - configuration:
            key: configuration
          optional: true
          type: type
          items:
          - name: name
            id: id
          - name: name
            id: id
          value: value
          key: key
        - configuration:
            key: configuration
          optional: true
          type: type
          items:
          - name: name
            id: id
          - name: name
            id: id
          value: value
          key: key
        optional: true
        inputDetails:
        - configuration:
            key: configuration
          optional: true
          type: type
          items:
          - name: name
            id: id
          - name: name
            id: id
          value: value
          key: key
        - configuration:
            key: configuration
          optional: true
          type: type
          items:
          - name: name
            id: id
          - name: name
            id: id
          value: value
          key: key
        type: type
        items:
        - name: name
          id: id
        - name: name
          id: id
        value: value
        key: key
        itemSearchUrl: itemSearchUrl
      properties:
        configuration:
          additionalProperties:
            type: string
          description: Configuration parameters for the required input.
          title: configuration
        details:
          description: Input details can also be provided recursively.
          items:
            $ref: '#/components/schemas/SubInputDetail'
          title: details
          type: array
        inputDetails:
          description: Input details can also be provided recursively (deprecated).
          items:
            $ref: '#/components/schemas/SubInputDetail'
          title: inputDetails
          type: array
        itemSearchUrl:
          description: "In case of a select, the URL from which to query the items."
          title: itemSearchUrl
          type: string
        items:
          description: "In case of a select, the items to choose from."
          items:
            $ref: '#/components/schemas/Item'
          title: items
          type: array
        key:
          description: The value to provide in the result.
          title: key
          type: string
        optional:
          description: True if this input value is optional.
          title: optional
          type: boolean
        type:
          description: The type of the required input.
          title: type
          type: string
        value:
          description: "The value can be pre-filled, if available."
          title: value
          type: string
      title: InputDetail
    InstallmentOption:
      example:
        preselectedValue: 1
        maxValue: 6
        plans:
        - regular
        - regular
        values:
        - 5
        - 5
      properties:
        maxValue:
          description: The maximum number of installments offered for this payment
            method.
          format: int32
          title: maxValue
          type: integer
        plans:
          description: |-
            Defines the type of installment plan. If not set, defaults to **regular**.

            Possible values:
            * **regular**
            * **revolving**
          items:
            enum:
            - regular
            - revolving
            type: string
          title: plans
          type: array
          x-addedInVersion: "64"
        preselectedValue:
          description: Preselected number of installments offered for this payment
            method.
          format: int32
          title: preselectedValue
          type: integer
          x-addedInVersion: "64"
        values:
          description: "An array of the number of installments that the shopper can\
            \ choose from. For example, **[2,3,5]**. This cannot be specified simultaneously\
            \ with `maxValue`."
          items:
            format: int32
            type: integer
          title: values
          type: array
          x-addedInVersion: "64"
      title: InstallmentOption
    Installments:
      example:
        plan: regular
        value: 7
      properties:
        plan:
          description: |
            The installment plan, used for [card installments in Japan](https://docs.adyen.com/payment-methods/cards/credit-card-installments#make-a-payment-japan). By default, this is set to **regular**. Possible values:
            * **regular**
            * **revolving**
          enum:
          - regular
          - revolving
          title: plan
          type: string
          x-addedInVersion: "64"
        value:
          description: |-
            Defines the number of installments. Its value needs to be greater than zero.

            Usually, the maximum allowed number of installments is capped. For example, it may not be possible to split a payment in more than 24 installments. The acquirer sets this upper limit, so its value may vary.
          format: int32
          title: value
          type: integer
      required:
      - value
      title: Installments
    InstallmentsNumber:
      example:
        maxNumberOfInstallments: 6
      properties:
        maxNumberOfInstallments:
          description: Maximum number of installments
          format: int32
          title: maxNumberOfInstallments
          type: integer
      required:
      - maxNumberOfInstallments
      title: InstallmentsNumber
    Item:
      example:
        name: name
        id: id
      properties:
        id:
          description: The value to provide in the result.
          title: id
          type: string
        name:
          description: The display name.
          title: name
          type: string
      title: Item
    KlarnaDetails:
      additionalProperties: false
      properties:
        billingAddress:
          description: The address where to send the invoice.
          title: billingAddress
          type: string
        checkoutAttemptId:
          description: The checkout attempt identifier.
          title: checkoutAttemptId
          type: string
          x-addedInVersion: "68"
        deliveryAddress:
          description: The address where the goods should be delivered.
          title: deliveryAddress
          type: string
        personalDetails:
          description: "Shopper name, date of birth, phone number, and email address."
          title: personalDetails
          type: string
        recurringDetailReference:
          deprecated: true
          description: This is the `recurringDetailReference` returned in the response
            when you created the token.
          title: recurringDetailReference
          type: string
          x-deprecatedInVersion: "49"
          x-deprecatedMessage: Use `storedPaymentMethodId` instead.
        storedPaymentMethodId:
          description: This is the `recurringDetailReference` returned in the response
            when you created the token.
          maxLength: 64
          title: storedPaymentMethodId
          type: string
          x-addedInVersion: "49"
        subtype:
          description: The type of flow to initiate.
          title: subtype
          type: string
        type:
          default: klarna
          description: '**klarna**'
          enum:
          - klarna
          - klarnapayments
          - klarnapayments_account
          - klarnapayments_b2b
          - klarna_paynow
          - klarna_account
          - klarna_b2b
          title: type
          type: string
      required:
      - type
      title: Klarna
    LineItem:
      example:
        quantity: 1
        itemCategory: itemCategory
        amountExcludingTax: 1
        imageUrl: imageUrl
        taxPercentage: 7
        description: description
        id: id
        amountIncludingTax: 1
        productUrl: productUrl
        taxAmount: 6
      properties:
        amountExcludingTax:
          description: "Item amount excluding the tax, in minor units."
          format: int64
          title: amountExcludingTax
          type: integer
        amountIncludingTax:
          description: "Item amount including the tax, in minor units."
          format: int64
          title: amountIncludingTax
          type: integer
        description:
          description: Description of the line item.
          title: description
          type: string
        id:
          description: ID of the line item.
          title: id
          type: string
        imageUrl:
          description: Link to the picture of the purchased item.
          title: imageUrl
          type: string
        itemCategory:
          description: "Item category, used by the payment methods PayPal and Ratepay."
          title: itemCategory
          type: string
        productUrl:
          description: Link to the purchased item.
          title: productUrl
          type: string
        quantity:
          description: Number of items.
          format: int64
          title: quantity
          type: integer
        taxAmount:
          description: "Tax amount, in minor units."
          format: int64
          title: taxAmount
          type: integer
        taxPercentage:
          description: "Tax percentage, in minor units."
          format: int64
          title: taxPercentage
          type: integer
      title: LineItem
    Mandate:
      example:
        amount: amount
        amountRule: max
        billingDay: billingDay
        startsAt: startsAt
        billingAttemptsRule: true
        endsAt: endsAt
        remarks: remarks
        frequency: adhoc
      properties:
        amount:
          description: The billing amount (in minor units) of the recurring transactions.
          title: amount
          type: string
        amountRule:
          description: |+
            The limitation rule of the billing amount.

            Possible values:
             * **max**: The transaction amount can not exceed the `amount`.

             * **exact**: The transaction amount should be the same as the `amount`.

          enum:
          - max
          - exact
          title: amountRule
          type: string
        billingAttemptsRule:
          description: |+
            The rule to specify the period, within which the recurring debit can happen, relative to the mandate recurring date.

            Possible values:

             * **on**: On a specific date.

             * **before**:  Before and on a specific date.

             * **after**: On and after a specific date.

          enum:
          - true
          - before
          - after
          title: billingAttemptsRule
          type: string
        billingDay:
          description: |-
            The number of the day, on which the recurring debit can happen. Should be within the same calendar month as the mandate recurring date.

            Possible values: 1-31 based on the `frequency`.
          title: billingDay
          type: string
        endsAt:
          description: "End date of the billing plan, in YYYY-MM-DD format."
          title: endsAt
          type: string
        frequency:
          description: |-
            The frequency with which a shopper should be charged.

            Possible values: **daily**, **weekly**, **biWeekly**, **monthly**, **quarterly**, **halfYearly**, **yearly**.
          enum:
          - adhoc
          - daily
          - weekly
          - biWeekly
          - monthly
          - quarterly
          - halfYearly
          - yearly
          title: frequency
          type: string
        remarks:
          description: The message shown by UPI to the shopper on the approval screen.
          title: remarks
          type: string
        startsAt:
          description: "Start date of the billing plan, in YYYY-MM-DD format. By default,\
            \ the transaction date."
          title: startsAt
          type: string
      required:
      - amount
      - endsAt
      - frequency
      title: Mandate
    MasterpassDetails:
      additionalProperties: false
      properties:
        checkoutAttemptId:
          description: The checkout attempt identifier.
          title: checkoutAttemptId
          type: string
          x-addedInVersion: "68"
        fundingSource:
          description: "The funding source that should be used when multiple sources\
            \ are available. For Brazilian combo cards, by default the funding source\
            \ is credit. To use debit, set this value to **debit**."
          enum:
          - credit
          - debit
          title: fundingSource
          type: string
        masterpassTransactionId:
          description: The Masterpass transaction ID.
          title: masterpassTransactionId
          type: string
        type:
          default: masterpass
          description: '**masterpass**'
          enum:
          - masterpass
          title: type
          type: string
      required:
      - masterpassTransactionId
      title: Masterpass
    MbwayDetails:
      additionalProperties: false
      properties:
        checkoutAttemptId:
          description: The checkout attempt identifier.
          title: checkoutAttemptId
          type: string
          x-addedInVersion: "68"
        shopperEmail:
          description: ""
          title: shopperEmail
          type: string
        telephoneNumber:
          description: ""
          title: telephoneNumber
          type: string
        type:
          default: mbway
          description: '**mbway**'
          enum:
          - mbway
          title: type
          type: string
      required:
      - shopperEmail
      - telephoneNumber
      title: MBWay
    MerchantDevice:
      example:
        reference: reference
        os: os
        osVersion: osVersion
      properties:
        os:
          description: Operating system running on the merchant device.
          title: os
          type: string
        osVersion:
          description: Version of the operating system on the merchant device.
          title: osVersion
          type: string
        reference:
          description: Merchant device reference.
          title: reference
          type: string
      title: MerchantDevice
    MerchantRiskIndicator:
      example:
        preOrderDate: 2000-01-23T04:56:07.000+00:00
        shipIndicator: shipIndicator
        giftCardAmount:
          currency: currency
          value: 0
        preOrderPurchaseInd: preOrderPurchaseInd
        deliveryEmail: deliveryEmail
        giftCardCount: 1
        addressMatch: true
        deliveryTimeframe: electronicDelivery
        reorderItems: true
        deliveryEmailAddress: deliveryEmailAddress
        preOrderPurchase: true
        giftCardCurr: giftCardCurr
        reorderItemsInd: reorderItemsInd
        deliveryAddressIndicator: shipToBillingAddress
      properties:
        addressMatch:
          description: Whether the chosen delivery address is identical to the billing
            address.
          title: addressMatch
          type: boolean
        deliveryAddressIndicator:
          description: |-
            Indicator regarding the delivery address.
            Allowed values:
            * `shipToBillingAddress`
            * `shipToVerifiedAddress`
            * `shipToNewAddress`
            * `shipToStore`
            * `digitalGoods`
            * `goodsNotShipped`
            * `other`
          enum:
          - shipToBillingAddress
          - shipToVerifiedAddress
          - shipToNewAddress
          - shipToStore
          - digitalGoods
          - goodsNotShipped
          - other
          title: deliveryAddressIndicator
          type: string
        deliveryEmail:
          deprecated: true
          description: The delivery email address (for digital goods).
          title: deliveryEmail
          type: string
          x-deprecatedInVersion: "68"
          x-deprecatedMessage: Use `deliveryEmailAddress` instead.
        deliveryEmailAddress:
          description: "For Electronic delivery, the email address to which the merchandise\
            \ was delivered. Maximum length: 254 characters."
          maxLength: 254
          title: deliveryEmailAddress
          type: string
          x-addedInVersion: "68"
        deliveryTimeframe:
          description: |-
            The estimated delivery time for the shopper to receive the goods.
            Allowed values:
            * `electronicDelivery`
            * `sameDayShipping`
            * `overnightShipping`
            * `twoOrMoreDaysShipping`
          enum:
          - electronicDelivery
          - sameDayShipping
          - overnightShipping
          - twoOrMoreDaysShipping
          title: deliveryTimeframe
          type: string
        giftCardAmount:
          $ref: '#/components/schemas/Amount'
        giftCardCount:
          description: "For prepaid or gift card purchase, total count of individual\
            \ prepaid or gift cards/codes purchased."
          format: int32
          title: giftCardCount
          type: integer
        giftCardCurr:
          description: "For prepaid or gift card purchase, [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html)\
            \ three-digit currency code of the gift card, other than those listed\
            \ in Table A.5 of the EMVCo 3D Secure Protocol and Core Functions Specification."
          title: giftCardCurr
          type: string
          x-addedInVersion: "68"
        preOrderDate:
          description: "For pre-order purchases, the expected date this product will\
            \ be available to the shopper."
          format: date-time
          title: preOrderDate
          type: string
        preOrderPurchase:
          description: Indicator for whether this transaction is for pre-ordering
            a product.
          title: preOrderPurchase
          type: boolean
        preOrderPurchaseInd:
          description: Indicates whether Cardholder is placing an order for merchandise
            with a future availability or release date.
          title: preOrderPurchaseInd
          type: string
          x-addedInVersion: "68"
        reorderItems:
          description: Indicator for whether the shopper has already purchased the
            same items in the past.
          title: reorderItems
          type: boolean
        reorderItemsInd:
          description: Indicates whether the cardholder is reordering previously purchased
            merchandise.
          title: reorderItemsInd
          type: string
          x-addedInVersion: "68"
        shipIndicator:
          description: Indicates shipping method chosen for the transaction.
          title: shipIndicator
          type: string
          x-addedInVersion: "68"
      title: MerchantRiskIndicator
    MobilePayDetails:
      additionalProperties: false
      properties:
        checkoutAttemptId:
          description: The checkout attempt identifier.
          title: checkoutAttemptId
          type: string
          x-addedInVersion: "68"
        type:
          default: mobilepay
          description: '**mobilepay**'
          enum:
          - mobilepay
          title: type
          type: string
      title: MobilePay
    MolPayDetails:
      additionalProperties: false
      properties:
        checkoutAttemptId:
          description: The checkout attempt identifier.
          title: checkoutAttemptId
          type: string
          x-addedInVersion: "68"
        issuer:
          description: The shopper's bank. Specify this with the issuer value that
            corresponds to this bank.
          title: issuer
          type: string
        type:
          description: '**molpay**'
          enum:
          - molpay_ebanking_fpx_MY
          - molpay_ebanking_TH
          title: type
          type: string
      required:
      - issuer
      - type
      title: MOLPay
    Name:
      example:
        firstName: firstName
        lastName: lastName
      properties:
        firstName:
          description: The first name.
          title: firstName
          type: string
        lastName:
          description: The last name.
          title: lastName
          type: string
      required:
      - firstName
      - lastName
      title: Name
    OpenInvoiceDetails:
      additionalProperties: false
      properties:
        billingAddress:
          description: The address where to send the invoice.
          title: billingAddress
          type: string
        checkoutAttemptId:
          description: The checkout attempt identifier.
          title: checkoutAttemptId
          type: string
          x-addedInVersion: "68"
        deliveryAddress:
          description: The address where the goods should be delivered.
          title: deliveryAddress
          type: string
        personalDetails:
          description: "Shopper name, date of birth, phone number, and email address."
          title: personalDetails
          type: string
        recurringDetailReference:
          deprecated: true
          description: This is the `recurringDetailReference` returned in the response
            when you created the token.
          title: recurringDetailReference
          type: string
          x-deprecatedInVersion: "49"
          x-deprecatedMessage: Use `storedPaymentMethodId` instead.
        storedPaymentMethodId:
          description: This is the `recurringDetailReference` returned in the response
            when you created the token.
          maxLength: 64
          title: storedPaymentMethodId
          type: string
          x-addedInVersion: "49"
        type:
          default: openinvoice
          description: '**openinvoice**'
          enum:
          - openinvoice
          - afterpay_directdebit
          - atome_pos
          title: type
          type: string
      title: Open Invoice
    PayPalDetails:
      additionalProperties: false
      properties:
        checkoutAttemptId:
          description: The checkout attempt identifier.
          title: checkoutAttemptId
          type: string
          x-addedInVersion: "68"
        orderID:
          description: The unique ID associated with the order.
          title: orderID
          type: string
        payeePreferred:
          description: IMMEDIATE_PAYMENT_REQUIRED or UNRESTRICTED
          title: payeePreferred
          type: string
        payerID:
          description: The unique ID associated with the payer.
          title: payerID
          type: string
        payerSelected:
          description: PAYPAL or PAYPAL_CREDIT
          title: payerSelected
          type: string
        recurringDetailReference:
          deprecated: true
          description: This is the `recurringDetailReference` returned in the response
            when you created the token.
          title: recurringDetailReference
          type: string
          x-deprecatedInVersion: "49"
          x-deprecatedMessage: Use `storedPaymentMethodId` instead.
        storedPaymentMethodId:
          description: This is the `recurringDetailReference` returned in the response
            when you created the token.
          maxLength: 64
          title: storedPaymentMethodId
          type: string
          x-addedInVersion: "49"
        subtype:
          description: The type of flow to initiate.
          enum:
          - redirect
          - sdk
          title: subtype
          type: string
        type:
          default: paypal
          description: '**paypal**'
          enum:
          - paypal
          title: type
          type: string
      required:
      - type
      title: PayPal
    PayUUpiDetails:
      additionalProperties: false
      properties:
        checkoutAttemptId:
          description: The checkout attempt identifier.
          title: checkoutAttemptId
          type: string
          x-addedInVersion: "68"
        recurringDetailReference:
          deprecated: true
          description: This is the `recurringDetailReference` returned in the response
            when you created the token.
          title: recurringDetailReference
          type: string
          x-deprecatedInVersion: "49"
          x-deprecatedMessage: Use `storedPaymentMethodId` instead.
        shopperNotificationReference:
          description: The `shopperNotificationReference` returned in the response
            when you requested to notify the shopper. Used for recurring payment only.
          title: shopperNotificationReference
          type: string
        storedPaymentMethodId:
          description: This is the `recurringDetailReference` returned in the response
            when you created the token.
          maxLength: 64
          title: storedPaymentMethodId
          type: string
          x-addedInVersion: "49"
        type:
          default: payu_IN_upi
          description: '**payu_IN_upi**'
          enum:
          - payu_IN_upi
          title: type
          type: string
        virtualPaymentAddress:
          description: The virtual payment address for UPI.
          title: virtualPaymentAddress
          type: string
      required:
      - type
      title: PayU
    PayWithGoogleDetails:
      additionalProperties: false
      properties:
        checkoutAttemptId:
          description: The checkout attempt identifier.
          title: checkoutAttemptId
          type: string
          x-addedInVersion: "68"
        fundingSource:
          description: "The funding source that should be used when multiple sources\
            \ are available. For Brazilian combo cards, by default the funding source\
            \ is credit. To use debit, set this value to **debit**."
          enum:
          - credit
          - debit
          title: fundingSource
          type: string
        googlePayToken:
          description: "The `token` that you obtained from the [Google Pay API](https://developers.google.com/pay/api/web/reference/response-objects#PaymentData)\
            \ `PaymentData` response."
          title: googlePayToken
          type: string
        recurringDetailReference:
          deprecated: true
          description: This is the `recurringDetailReference` returned in the response
            when you created the token.
          title: recurringDetailReference
          type: string
          x-deprecatedInVersion: "49"
          x-deprecatedMessage: Use `storedPaymentMethodId` instead.
        storedPaymentMethodId:
          description: This is the `recurringDetailReference` returned in the response
            when you created the token.
          maxLength: 64
          title: storedPaymentMethodId
          type: string
          x-addedInVersion: "49"
        type:
          default: paywithgoogle
          description: '**paywithgoogle**'
          enum:
          - paywithgoogle
          title: type
          type: string
      required:
      - googlePayToken
      title: Google Pay
    PayWithGoogleDonations:
      additionalProperties: false
      properties:
        checkoutAttemptId:
          description: The checkout attempt identifier.
          title: checkoutAttemptId
          type: string
          x-addedInVersion: "68"
        fundingSource:
          description: "The funding source that should be used when multiple sources\
            \ are available. For Brazilian combo cards, by default the funding source\
            \ is credit. To use debit, set this value to **debit**."
          enum:
          - credit
          - debit
          title: fundingSource
          type: string
        googlePayToken:
          description: "The `token` that you obtained from the [Google Pay API](https://developers.google.com/pay/api/web/reference/response-objects#PaymentData)\
            \ `PaymentData` response."
          title: googlePayToken
          type: string
        recurringDetailReference:
          deprecated: true
          description: This is the `recurringDetailReference` returned in the response
            when you created the token.
          title: recurringDetailReference
          type: string
          x-deprecatedInVersion: "49"
          x-deprecatedMessage: Use `storedPaymentMethodId` instead.
        storedPaymentMethodId:
          description: This is the `recurringDetailReference` returned in the response
            when you created the token.
          maxLength: 64
          title: storedPaymentMethodId
          type: string
          x-addedInVersion: "49"
        type:
          default: paywithgoogle
          description: '**paywithgoogle**'
          enum:
          - paywithgoogle
          title: type
          type: string
      required:
      - googlePayToken
      title: Google Pay
    PaymentAmountUpdateRequest:
      example:
        reference: reference
        reason: delayedCharge
        amount:
          currency: currency
          value: 0
        splits:
        - reference: reference
          amount:
            currency: currency
            value: 5
          description: description
          type: AcquiringFees
          account: account
        - reference: reference
          amount:
            currency: currency
            value: 5
          description: description
          type: AcquiringFees
          account: account
        merchantAccount: merchantAccount
        applicationInfo:
          adyenLibrary:
            name: name
            version: version
          merchantApplication:
            name: name
            version: version
          adyenPaymentSource:
            name: name
            version: version
          merchantDevice:
            reference: reference
            os: os
            osVersion: osVersion
          shopperInteractionDevice:
            os: os
            osVersion: osVersion
            locale: locale
          externalPlatform:
            name: name
            integrator: integrator
            version: version
      properties:
        amount:
          $ref: '#/components/schemas/Amount'
        applicationInfo:
          $ref: '#/components/schemas/ApplicationInfo'
        merchantAccount:
          description: The merchant account that is used to process the payment.
          title: merchantAccount
          type: string
        reason:
          description: "The reason for the amount update. Possible values: \n* **delayedCharge**\
            \ \n* **noShow**"
          enum:
          - delayedCharge
          - noShow
          title: reason
          type: string
        reference:
          description: "Your reference for the amount update request. Maximum length:\
            \ 80 characters."
          title: reference
          type: string
        splits:
          description: "An array of objects specifying how the amount should be split\
            \ between accounts when using Adyen for Platforms. For details, refer\
            \ to [Providing split information](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information)."
          items:
            $ref: '#/components/schemas/Split'
          title: splits
          type: array
      required:
      - amount
      - merchantAccount
      title: PaymentAmountUpdateRequest
    PaymentAmountUpdateResponse:
      example:
        reference: reference
        reason: delayedCharge
        amount:
          currency: currency
          value: 0
        splits:
        - reference: reference
          amount:
            currency: currency
            value: 5
          description: description
          type: AcquiringFees
          account: account
        - reference: reference
          amount:
            currency: currency
            value: 5
          description: description
          type: AcquiringFees
          account: account
        merchantAccount: merchantAccount
        paymentPspReference: paymentPspReference
        pspReference: pspReference
        status: received
      properties:
        amount:
          $ref: '#/components/schemas/Amount'
        merchantAccount:
          description: The merchant account that is used to process the payment.
          title: merchantAccount
          type: string
        paymentPspReference:
          description: "The [`pspReference`](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/payments__resParam_pspReference)\
            \ of the payment to update. "
          title: paymentPspReference
          type: string
        pspReference:
          description: Adyen's 16-character reference associated with the amount update
            request.
          title: pspReference
          type: string
        reason:
          description: "The reason for the amount update. Possible values: \n* **DelayedCharge**\
            \ \n* **NoShow**"
          enum:
          - delayedCharge
          - noShow
          title: reason
          type: string
        reference:
          description: "Your reference for the amount update request. Maximum length:\
            \ 80 characters."
          title: reference
          type: string
        splits:
          description: "An array of objects specifying how the amount should be split\
            \ between accounts when using Adyen for Platforms. For details, refer\
            \ to [Providing split information](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information)."
          items:
            $ref: '#/components/schemas/Split'
          title: splits
          type: array
        status:
          description: The status of your request. This will always have the value
            **received**.
          enum:
          - received
          title: status
          type: string
      required:
      - amount
      - merchantAccount
      - paymentPspReference
      - pspReference
      - reference
      - status
      title: PaymentAmountUpdateResponse
    PaymentCancelRequest:
      example:
        reference: reference
        merchantAccount: merchantAccount
        applicationInfo:
          adyenLibrary:
            name: name
            version: version
          merchantApplication:
            name: name
            version: version
          adyenPaymentSource:
            name: name
            version: version
          merchantDevice:
            reference: reference
            os: os
            osVersion: osVersion
          shopperInteractionDevice:
            os: os
            osVersion: osVersion
            locale: locale
          externalPlatform:
            name: name
            integrator: integrator
            version: version
      properties:
        applicationInfo:
          $ref: '#/components/schemas/ApplicationInfo'
        merchantAccount:
          description: The merchant account that is used to process the payment.
          title: merchantAccount
          type: string
        reference:
          description: "Your reference for the cancel request. Maximum length: 80\
            \ characters."
          title: reference
          type: string
      required:
      - merchantAccount
      title: PaymentCancelRequest
    PaymentCancelResponse:
      example:
        reference: reference
        merchantAccount: merchantAccount
        paymentPspReference: paymentPspReference
        pspReference: pspReference
        status: received
      properties:
        merchantAccount:
          description: The merchant account that is used to process the payment.
          title: merchantAccount
          type: string
        paymentPspReference:
          description: "The [`pspReference`](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/payments__resParam_pspReference)\
            \ of the payment to cancel. "
          title: paymentPspReference
          type: string
        pspReference:
          description: Adyen's 16-character reference associated with the cancel request.
          title: pspReference
          type: string
        reference:
          description: Your reference for the cancel request.
          title: reference
          type: string
        status:
          description: The status of your request. This will always have the value
            **received**.
          enum:
          - received
          title: status
          type: string
      required:
      - merchantAccount
      - paymentPspReference
      - pspReference
      - status
      title: PaymentCancelResponse
    PaymentCaptureRequest:
      example:
        lineItems:
        - quantity: 1
          itemCategory: itemCategory
          amountExcludingTax: 1
          imageUrl: imageUrl
          taxPercentage: 7
          description: description
          id: id
          amountIncludingTax: 1
          productUrl: productUrl
          taxAmount: 6
        - quantity: 1
          itemCategory: itemCategory
          amountExcludingTax: 1
          imageUrl: imageUrl
          taxPercentage: 7
          description: description
          id: id
          amountIncludingTax: 1
          productUrl: productUrl
          taxAmount: 6
        reference: reference
        amount:
          currency: currency
          value: 0
        splits:
        - reference: reference
          amount:
            currency: currency
            value: 5
          description: description
          type: AcquiringFees
          account: account
        - reference: reference
          amount:
            currency: currency
            value: 5
          description: description
          type: AcquiringFees
          account: account
        merchantAccount: merchantAccount
        applicationInfo:
          adyenLibrary:
            name: name
            version: version
          merchantApplication:
            name: name
            version: version
          adyenPaymentSource:
            name: name
            version: version
          merchantDevice:
            reference: reference
            os: os
            osVersion: osVersion
          shopperInteractionDevice:
            os: os
            osVersion: osVersion
            locale: locale
          externalPlatform:
            name: name
            integrator: integrator
            version: version
      properties:
        amount:
          $ref: '#/components/schemas/Amount'
        applicationInfo:
          $ref: '#/components/schemas/ApplicationInfo'
        lineItems:
          description: |-
            Price and product information of the refunded items, required for [partial refunds](https://docs.adyen.com/online-payments/refund#refund-a-payment).
            > This field is required for partial refunds with 3x 4x Oney, Affirm, Afterpay, Atome, Clearpay, Klarna, Ratepay, Walley, and Zip.
          items:
            $ref: '#/components/schemas/LineItem'
          title: lineItems
          type: array
        merchantAccount:
          description: The merchant account that is used to process the payment.
          title: merchantAccount
          type: string
        reference:
          description: "Your reference for the capture request. Maximum length: 80\
            \ characters."
          title: reference
          type: string
        splits:
          description: "An array of objects specifying how the amount should be split\
            \ between accounts when using Adyen for Platforms. For details, refer\
            \ to [Providing split information](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information)."
          items:
            $ref: '#/components/schemas/Split'
          title: splits
          type: array
      required:
      - amount
      - merchantAccount
      title: PaymentCaptureRequest
    PaymentCaptureResponse:
      example:
        lineItems:
        - quantity: 1
          itemCategory: itemCategory
          amountExcludingTax: 1
          imageUrl: imageUrl
          taxPercentage: 7
          description: description
          id: id
          amountIncludingTax: 1
          productUrl: productUrl
          taxAmount: 6
        - quantity: 1
          itemCategory: itemCategory
          amountExcludingTax: 1
          imageUrl: imageUrl
          taxPercentage: 7
          description: description
          id: id
          amountIncludingTax: 1
          productUrl: productUrl
          taxAmount: 6
        reference: reference
        amount:
          currency: currency
          value: 0
        splits:
        - reference: reference
          amount:
            currency: currency
            value: 5
          description: description
          type: AcquiringFees
          account: account
        - reference: reference
          amount:
            currency: currency
            value: 5
          description: description
          type: AcquiringFees
          account: account
        merchantAccount: merchantAccount
        paymentPspReference: paymentPspReference
        pspReference: pspReference
        status: received
      properties:
        amount:
          $ref: '#/components/schemas/Amount'
        lineItems:
          description: |-
            Price and product information of the refunded items, required for [partial refunds](https://docs.adyen.com/online-payments/refund#refund-a-payment).
            > This field is required for partial refunds with 3x 4x Oney, Affirm, Afterpay, Atome, Clearpay, Klarna, Ratepay, Walley, and Zip.
          items:
            $ref: '#/components/schemas/LineItem'
          title: lineItems
          type: array
        merchantAccount:
          description: The merchant account that is used to process the payment.
          title: merchantAccount
          type: string
        paymentPspReference:
          description: "The [`pspReference`](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/payments__resParam_pspReference)\
            \ of the payment to capture. "
          title: paymentPspReference
          type: string
        pspReference:
          description: Adyen's 16-character reference associated with the capture
            request.
          title: pspReference
          type: string
        reference:
          description: Your reference for the capture request.
          title: reference
          type: string
        splits:
          description: "An array of objects specifying how the amount should be split\
            \ between accounts when using Adyen for Platforms. For details, refer\
            \ to [Providing split information](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information)."
          items:
            $ref: '#/components/schemas/Split'
          title: splits
          type: array
        status:
          description: The status of your request. This will always have the value
            **received**.
          enum:
          - received
          title: status
          type: string
      required:
      - amount
      - merchantAccount
      - paymentPspReference
      - pspReference
      - status
      title: PaymentCaptureResponse
    PaymentCompletionDetails:
      example:
        cupsecureplus.smscode: cupsecureplus.smscode
        orderID: orderID
        payerID: payerID
        resultCode: resultCode
        threeDSResult: threeDSResult
        oneTimePasscode: oneTimePasscode
        threeds2.challengeResult: threeds2.challengeResult
        redirectResult: redirectResult
        threeds2.fingerprint: threeds2.fingerprint
        authorization_token: authorization_token
        payload: payload
        billingToken: billingToken
        paymentID: paymentID
        MD: MD
        PaReq: PaReq
        PaRes: PaRes
        paymentStatus: paymentStatus
        facilitatorAccessToken: facilitatorAccessToken
      properties:
        MD:
          description: A payment session identifier returned by the card issuer.
          maxLength: 20000
          title: MD
          type: string
        PaReq:
          description: (3D) Payment Authentication Request data for the card issuer.
          title: PaReq
          type: string
        PaRes:
          description: (3D) Payment Authentication Response data by the card issuer.
          maxLength: 20000
          title: PaRes
          type: string
        authorization_token:
          title: authorization_token
          type: string
        billingToken:
          description: PayPal-generated token for recurring payments.
          title: billingToken
          type: string
        cupsecureplus.smscode:
          description: The SMS verification code collected from the shopper.
          title: cupsecureplus.smscode
          type: string
        facilitatorAccessToken:
          description: PayPal-generated third party access token.
          title: facilitatorAccessToken
          type: string
        oneTimePasscode:
          description: A random number sent to the mobile phone number of the shopper
            to verify the payment.
          title: oneTimePasscode
          type: string
        orderID:
          description: PayPal-assigned ID for the order.
          title: orderID
          type: string
        payerID:
          description: PayPal-assigned ID for the payer (shopper).
          title: payerID
          type: string
        payload:
          description: Payload appended to the `returnURL` as a result of the redirect.
          maxLength: 20000
          title: payload
          type: string
        paymentID:
          description: PayPal-generated ID for the payment.
          title: paymentID
          type: string
        paymentStatus:
          description: "Value passed from the WeChat MiniProgram `wx.requestPayment`\
            \ **complete** callback. Possible values: any value starting with `requestPayment:`."
          title: paymentStatus
          type: string
        redirectResult:
          description: The result of the redirect as appended to the `returnURL`.
          maxLength: 20000
          title: redirectResult
          type: string
        resultCode:
          description: Value you received from the WeChat Pay SDK.
          title: resultCode
          type: string
        threeDSResult:
          description: "Base64-encoded string returned by the Component after the\
            \ challenge flow. It contains the following parameters: `transStatus`,\
            \ `authorisationToken`."
          maxLength: 50000
          title: threeDSResult
          type: string
        threeds2.challengeResult:
          description: "Base64-encoded string returned by the Component after the\
            \ challenge flow. It contains the following parameter: `transStatus`."
          maxLength: 50000
          title: threeds2.challengeResult
          type: string
        threeds2.fingerprint:
          description: "Base64-encoded string returned by the Component after the\
            \ challenge flow. It contains the following parameter: `threeDSCompInd`."
          maxLength: 100000
          title: threeds2.fingerprint
          type: string
      title: PaymentCompletionDetails
    PaymentDetails:
      additionalProperties: false
      properties:
        checkoutAttemptId:
          description: The checkout attempt identifier.
          title: checkoutAttemptId
          type: string
          x-addedInVersion: "68"
        type:
          description: The payment method type.
          enum:
          - alipay
          - multibanco
          - bankTransfer_IBAN
          - paybright
          - paynow
          - affirm
          - affirm_pos
          - trustly
          - trustlyvector
          - oney
          - facilypay
          - facilypay_3x
          - facilypay_4x
          - facilypay_6x
          - facilypay_10x
          - facilypay_12x
          - unionpay
          - kcp_banktransfer
          - kcp_payco
          - kcp_creditcard
          - wechatpaySDK
          - wechatpayQR
          - wechatpayWeb
          - molpay_boost
          - wallet_IN
          - payu_IN_cashcard
          - payu_IN_nb
          - upi_qr
          - paytm
          - molpay_ebanking_VN
          - paybybank
          - ebanking_FI
          - molpay_ebanking_MY
          - molpay_ebanking_direct_MY
          - swish
          - pix
          - walley
          - walley_b2b
          - alma
          - paypo
          - molpay_fpx
          - konbini
          - directEbanking
          - boletobancario
          - neteller
          - paysafecard
          - cashticket
          - ikano
          - karenmillen
          - oasis
          - warehouse
          - primeiropay_boleto
          - mada
          - benefit
          - knet
          - omannet
          - gopay_wallet
          - kcp_naverpay
          - onlinebanking_IN
          - fawry
          - atome
          - moneybookers
          - naps
          - nordea
          - boletobancario_bradesco
          - boletobancario_itau
          - boletobancario_santander
          - boletobancario_bancodobrasil
          - boletobancario_hsbc
          - molpay_maybank2u
          - molpay_cimb
          - molpay_rhb
          - molpay_amb
          - molpay_hlb
          - molpay_affin_epg
          - molpay_bankislam
          - molpay_publicbank
          - fpx_agrobank
          - touchngo
          - maybank2u_mae
          - duitnow
          - promptpay
          - twint_pos
          - alipay_hk
          - alipay_hk_web
          - alipay_hk_wap
          - alipay_wap
          - balanceplatform
          title: type
          type: string
      title: Payment Details
    PaymentDetailsRequest:
      example:
        authenticationData:
          authenticationOnly: false
        paymentData: paymentData
        details:
          cupsecureplus.smscode: cupsecureplus.smscode
          orderID: orderID
          payerID: payerID
          resultCode: resultCode
          threeDSResult: threeDSResult
          oneTimePasscode: oneTimePasscode
          threeds2.challengeResult: threeds2.challengeResult
          redirectResult: redirectResult
          threeds2.fingerprint: threeds2.fingerprint
          authorization_token: authorization_token
          payload: payload
          billingToken: billingToken
          paymentID: paymentID
          MD: MD
          PaReq: PaReq
          PaRes: PaRes
          paymentStatus: paymentStatus
          facilitatorAccessToken: facilitatorAccessToken
        threeDSAuthenticationOnly: true
      properties:
        authenticationData:
          $ref: '#/components/schemas/DetailsRequestAuthenticationData'
        details:
          $ref: '#/components/schemas/PaymentCompletionDetails'
        paymentData:
          description: |-
            Encoded payment data. For [authorizing a payment after using 3D Secure 2 Authentication-only](https://docs.adyen.com/online-payments/3d-secure/other-3ds-flows/authentication-only/#authorise-the-payment-with-adyen):

            If you received `resultCode`: **AuthenticationNotRequired** in the `/payments` response, use the `threeDSPaymentData` from the same response.

            If you received `resultCode`: **AuthenticationFinished** in the `/payments` response, use the `action.paymentData` from the same response.
          maxLength: 200000
          title: paymentData
          type: string
        threeDSAuthenticationOnly:
          deprecated: true
          description: Change the `authenticationOnly` indicator originally set in
            the `/payments` request. Only needs to be set if you want to modify the
            value set previously.
          title: threeDSAuthenticationOnly
          type: boolean
          x-addedInVersion: "40"
          x-deprecatedInVersion: "69"
          x-deprecatedMessage: Use `authenticationData.authenticationOnly` instead.
      required:
      - details
      title: PaymentDetailsRequest
    PaymentDetailsResponse:
      example:
        threeDS2Result:
          whiteListStatus: whiteListStatus
          exemptionIndicator: lowValue
          challengeCancel: "01"
          eci: eci
          threeDSRequestorChallengeInd: "01"
          cavvAlgorithm: cavvAlgorithm
          dsTransID: dsTransID
          transStatusReason: transStatusReason
          messageVersion: messageVersion
          riskScore: riskScore
          authenticationValue: authenticationValue
          transStatus: transStatus
          threeDSServerTransID: threeDSServerTransID
          timestamp: timestamp
        amount:
          currency: currency
          value: 0
        resultCode: AuthenticationFinished
        fraudResult:
          accountScore: 6
          results:
          - accountScore: 1
            name: name
            checkId: 5
          - accountScore: 1
            name: name
            checkId: 5
        donationToken: donationToken
        refusalReasonCode: refusalReasonCode
        threeDSPaymentData: threeDSPaymentData
        paymentMethod:
          type: type
          brand: brand
        threeDS2ResponseData:
          acsTransID: acsTransID
          exemptionIndicator: exemptionIndicator
          cardHolderInfo: cardHolderInfo
          sdkEphemPubKey: sdkEphemPubKey
          acsURL: acsURL
          dsReferenceNumber: dsReferenceNumber
          acsReferenceNumber: acsReferenceNumber
          cavvAlgorithm: cavvAlgorithm
          challengeIndicator: challengeIndicator
          dsTransID: dsTransID
          transStatusReason: transStatusReason
          acsOperatorID: acsOperatorID
          authenticationType: authenticationType
          messageVersion: messageVersion
          riskScore: riskScore
          acsSignedContent: acsSignedContent
          acsChallengeMandated: acsChallengeMandated
          transStatus: transStatus
          threeDSServerTransID: threeDSServerTransID
        refusalReason: refusalReason
        additionalData:
          cavv: cavv
          cavvAlgorithm: cavvAlgorithm
          scaExemptionRequested: scaExemptionRequested
          threeds2.cardEnrolled: true
          cardHolderInfo: cardHolderInfo
        shopperLocale: shopperLocale
        merchantReference: merchantReference
        pspReference: pspReference
        order:
          reference: reference
          remainingAmount:
            currency: currency
            value: 0
          amount:
            currency: currency
            value: 0
          orderData: orderData
          pspReference: pspReference
          expiresAt: expiresAt
      properties:
        additionalData:
          $ref: '#/components/schemas/BalanceCheckResponse_additionalData'
        amount:
          $ref: '#/components/schemas/Amount'
        donationToken:
          description: Donation Token containing payment details for Adyen Giving.
          title: donationToken
          type: string
          x-addedInVersion: "66"
        fraudResult:
          $ref: '#/components/schemas/FraudResult'
        merchantReference:
          description: The reference used during the /payments request.
          title: merchantReference
          type: string
          x-addedInVersion: "49"
        order:
          $ref: '#/components/schemas/CheckoutOrderResponse'
        paymentMethod:
          $ref: '#/components/schemas/ResponsePaymentMethod'
        pspReference:
          description: Adyen's 16-character string reference associated with the transaction/request.
            This value is globally unique; quote it when communicating with us about
            this request.
          title: pspReference
          type: string
        refusalReason:
          description: |-
            If the payment's authorisation is refused or an error occurs during authorisation, this field holds Adyen's mapped reason for the refusal or a description of the error. When a transaction fails, the authorisation response includes `resultCode` and `refusalReason` values.

            For more information, see [Refusal reasons](https://docs.adyen.com/development-resources/refusal-reasons).
          title: refusalReason
          type: string
        refusalReasonCode:
          description: "Code that specifies the refusal reason. For more information,\
            \ see [Authorisation refusal reasons](https://docs.adyen.com/development-resources/refusal-reasons)."
          title: refusalReasonCode
          type: string
          x-addedInVersion: "37"
        resultCode:
          description: |-
            The result of the payment. For more information, see [Result codes](https://docs.adyen.com/online-payments/payment-result-codes).

            Possible values:

            * **AuthenticationFinished** – The payment has been successfully authenticated with 3D Secure 2. Returned for 3D Secure 2 authentication-only transactions.
            * **AuthenticationNotRequired** – The transaction does not require 3D Secure authentication. Returned for [standalone authentication-only integrations](https://docs.adyen.com/online-payments/3d-secure/other-3ds-flows/authentication-only).
            * **Authorised** – The payment was successfully authorised. This state serves as an indicator to proceed with the delivery of goods and services. This is a final state.
            * **Cancelled** – Indicates the payment has been cancelled (either by the shopper or the merchant) before processing was completed. This is a final state.
            * **ChallengeShopper** – The issuer requires further shopper interaction before the payment can be authenticated. Returned for 3D Secure 2 transactions.
            * **Error** – There was an error when the payment was being processed. The reason is given in the `refusalReason` field. This is a final state.
            * **IdentifyShopper** – The issuer requires the shopper's device fingerprint before the payment can be authenticated. Returned for 3D Secure 2 transactions.
            * **PartiallyAuthorised** – The payment has been authorised for a partial amount.
            This happens for card payments when the merchant supports Partial Authorisations and the cardholder has insufficient funds.
            * **Pending** – Indicates that it is not possible to obtain the final status of the payment. This can happen if the systems providing final status information for the payment are unavailable, or if the shopper needs to take further action to complete the payment.
            * **PresentToShopper** – Indicates that the response contains additional information that you need to present to a shopper, so that they can use it to complete a payment.
            * **Received** – Indicates the payment has successfully been received by Adyen, and will be processed. This is the initial state for all payments.
            * **RedirectShopper** – Indicates the shopper should be redirected to an external web page or app to complete the authorisation.
            * **Refused** – Indicates the payment was refused. The reason is given in the `refusalReason` field. This is a final state.
          enum:
          - AuthenticationFinished
          - AuthenticationNotRequired
          - Authorised
          - Cancelled
          - ChallengeShopper
          - Error
          - IdentifyShopper
          - PartiallyAuthorised
          - Pending
          - PresentToShopper
          - Received
          - RedirectShopper
          - Refused
          - Success
          title: resultCode
          type: string
        shopperLocale:
          description: The shopperLocale.
          title: shopperLocale
          type: string
        threeDS2ResponseData:
          $ref: '#/components/schemas/ThreeDS2ResponseData'
        threeDS2Result:
          $ref: '#/components/schemas/ThreeDS2Result'
        threeDSPaymentData:
          description: "When non-empty, contains a value that you must submit to the\
            \ `/payments/details` endpoint as `paymentData`."
          title: threeDSPaymentData
          type: string
          x-addedInVersion: "67"
      title: PaymentDetailsResponse
    PaymentLinkRequest:
      example:
        metadata:
          key: metadata
        splits:
        - reference: reference
          amount:
            currency: currency
            value: 5
          description: description
          type: AcquiringFees
          account: account
        - reference: reference
          amount:
            currency: currency
            value: 5
          description: description
          type: AcquiringFees
          account: account
        telephoneNumber: telephoneNumber
        socialSecurityNumber: socialSecurityNumber
        splitCardFundingSources: false
        description: description
        themeId: themeId
        mcc: mcc
        lineItems:
        - quantity: 1
          itemCategory: itemCategory
          amountExcludingTax: 1
          imageUrl: imageUrl
          taxPercentage: 7
          description: description
          id: id
          amountIncludingTax: 1
          productUrl: productUrl
          taxAmount: 6
        - quantity: 1
          itemCategory: itemCategory
          amountExcludingTax: 1
          imageUrl: imageUrl
          taxPercentage: 7
          description: description
          id: id
          amountIncludingTax: 1
          productUrl: productUrl
          taxAmount: 6
        reference: reference
        shopperName:
          firstName: firstName
          lastName: lastName
        deliveryAddress:
          country: country
          stateOrProvince: stateOrProvince
          city: city
          houseNumberOrName: houseNumberOrName
          street: street
          postalCode: postalCode
        countryCode: countryCode
        recurringProcessingModel: CardOnFile
        blockedPaymentMethods:
        - blockedPaymentMethods
        - blockedPaymentMethods
        returnUrl: returnUrl
        merchantOrderReference: merchantOrderReference
        amount:
          currency: currency
          value: 0
        manualCapture: true
        dateOfBirth: 2000-01-23
        shopperEmail: shopperEmail
        store: store
        allowedPaymentMethods:
        - allowedPaymentMethods
        - allowedPaymentMethods
        riskData:
          fraudOffset: 4
          customFields:
            key: customFields
          profileReference: profileReference
          clientData: clientData
        expiresAt: expiresAt
        reusable: true
        storePaymentMethodMode: askForConsent
        merchantAccount: merchantAccount
        installmentOptions:
          key:
            preselectedValue: 1
            maxValue: 6
            plans:
            - regular
            - regular
            values:
            - 5
            - 5
        deliverAt: 2000-01-23T04:56:07.000+00:00
        requiredShopperFields:
        - billingAddress
        - billingAddress
        showRemovePaymentMethodButton: true
        billingAddress:
          country: country
          stateOrProvince: stateOrProvince
          city: city
          houseNumberOrName: houseNumberOrName
          street: street
          postalCode: postalCode
        shopperLocale: shopperLocale
        captureDelayHours: 0
        applicationInfo:
          adyenLibrary:
            name: name
            version: version
          merchantApplication:
            name: name
            version: version
          adyenPaymentSource:
            name: name
            version: version
          merchantDevice:
            reference: reference
            os: os
            osVersion: osVersion
          shopperInteractionDevice:
            os: os
            osVersion: osVersion
            locale: locale
          externalPlatform:
            name: name
            integrator: integrator
            version: version
        shopperReference: shopperReference
        shopperStatement: shopperStatement
      properties:
        allowedPaymentMethods:
          description: |-
            List of payment methods to be presented to the shopper. To refer to payment methods, use their [payment method type](https://docs.adyen.com/payment-methods/payment-method-types).

            Example: `"allowedPaymentMethods":["ideal","giropay"]`
          items:
            type: string
          title: allowedPaymentMethods
          type: array
        amount:
          $ref: '#/components/schemas/Amount'
        applicationInfo:
          $ref: '#/components/schemas/ApplicationInfo'
        billingAddress:
          $ref: '#/components/schemas/Address'
        blockedPaymentMethods:
          description: |-
            List of payment methods to be hidden from the shopper. To refer to payment methods, use their [payment method type](https://docs.adyen.com/payment-methods/payment-method-types).

            Example: `"blockedPaymentMethods":["ideal","giropay"]`
          items:
            type: string
          title: blockedPaymentMethods
          type: array
        captureDelayHours:
          description: "The delay between the authorisation and scheduled auto-capture,\
            \ specified in hours."
          format: int32
          title: captureDelayHours
          type: integer
          x-addedInVersion: "69"
        countryCode:
          description: The shopper's two-letter country code.
          title: countryCode
          type: string
        dateOfBirth:
          description: |-
            The shopper's date of birth.

            Format [ISO-8601](https://www.w3.org/TR/NOTE-datetime): YYYY-MM-DD
          format: date
          title: dateOfBirth
          type: string
          x-addedInVersion: "69"
        deliverAt:
          description: |-
            The date and time when the purchased goods should be delivered.

            [ISO 8601](https://www.w3.org/TR/NOTE-datetime) format: YYYY-MM-DDThh:mm:ss+TZD, for example, **2020-12-18T10:15:30+01:00**.
          format: date-time
          title: deliverAt
          type: string
        deliveryAddress:
          $ref: '#/components/schemas/Address'
        description:
          description: |-
            A short description visible on the payment page.
            Maximum length: 280 characters.
          title: description
          type: string
        expiresAt:
          description: |-
            The date when the payment link expires.

            [ISO 8601](https://www.w3.org/TR/NOTE-datetime) format with time zone designator **Z**: YYYY-MM-DDThh:mm:ss+TZD, for example, **2020-12-18T10:15:30Z**.

            The maximum expiry date is 70 days after the payment link is created.

            If not provided, the payment link expires 24 hours after it was created.
          title: expiresAt
          type: string
        installmentOptions:
          additionalProperties:
            $ref: '#/components/schemas/InstallmentOption'
          description: "A set of key-value pairs that specifies the installment options\
            \ available per payment method. The key must be a payment method name\
            \ in lowercase. For example, **card** to specify installment options for\
            \ all cards, or **visa** or **mc**. The value must be an object containing\
            \ the installment options."
          title: installmentOptions
        lineItems:
          description: |-
            Price and product information about the purchased items, to be included on the invoice sent to the shopper.
            This parameter is required for open invoice (_buy now, pay later_) payment methods such Afterpay, Clearpay, Klarna, RatePay, and Zip.
          items:
            $ref: '#/components/schemas/LineItem'
          title: lineItems
          type: array
        manualCapture:
          description: "Indicates if the payment must be [captured manually](https://docs.adyen.com/online-payments/capture)."
          title: manualCapture
          type: boolean
        mcc:
          description: "The [merchant category code](https://en.wikipedia.org/wiki/Merchant_category_code)\
            \ (MCC) is a four-digit number, which relates to a particular market segment.\
            \ This code reflects the predominant activity that is conducted by the\
            \ merchant."
          title: mcc
          type: string
          x-addedInVersion: "69"
        merchantAccount:
          description: The merchant account identifier for which the payment link
            is created.
          title: merchantAccount
          type: string
        merchantOrderReference:
          description: "This reference allows linking multiple transactions to each\
            \ other for reporting purposes (for example, order auth-rate). The reference\
            \ should be unique per billing cycle."
          title: merchantOrderReference
          type: string
        metadata:
          additionalProperties:
            type: string
          description: |-
            Metadata consists of entries, each of which includes a key and a value.
            Limitations:
            * Maximum 20 key-value pairs per request. Otherwise, error "177" occurs: "Metadata size exceeds limit"
            * Maximum 20 characters per key. Otherwise, error "178" occurs: "Metadata key size exceeds limit"
            * A key cannot have the name `checkout.linkId`. Any value that you provide with this key is going to be replaced by the real payment link ID.
          maxLength: 80
          title: metadata
        recurringProcessingModel:
          description: |
            Defines a recurring payment type. Required when `storePaymentMethodMode` is set to **askForConsent** or **enabled**.
            Possible values:
            * **Subscription** – A transaction for a fixed or variable amount, which follows a fixed schedule.
            * **CardOnFile** – With a card-on-file (CoF) transaction, card details are stored to enable one-click or omnichannel journeys, or simply to streamline the checkout process. Any subscription not following a fixed schedule is also considered a card-on-file transaction.
            * **UnscheduledCardOnFile** – An unscheduled card-on-file (UCoF) transaction is a transaction that occurs on a non-fixed schedule and/or has variable amounts. For example, automatic top-ups when a cardholder's balance drops below a certain amount.
          enum:
          - CardOnFile
          - Subscription
          - UnscheduledCardOnFile
          title: recurringProcessingModel
          type: string
        reference:
          description: A reference that is used to uniquely identify the payment in
            future communications about the payment status.
          title: reference
          type: string
        requiredShopperFields:
          description: |
            List of fields that the shopper has to provide on the payment page before completing the payment. For more information, refer to [Provide shopper information](https://docs.adyen.com/unified-commerce/pay-by-link/payment-links/api#shopper-information).

            Possible values:
            * **billingAddress** – The address where to send the invoice.
            * **deliveryAddress** – The address where the purchased goods should be delivered.
            * **shopperEmail** – The shopper's email address.
            * **shopperName** – The shopper's full name.
            * **telephoneNumber** – The shopper's phone number.
          items:
            enum:
            - billingAddress
            - deliveryAddress
            - shopperEmail
            - shopperName
            - telephoneNumber
            type: string
          title: requiredShopperFields
          type: array
          x-addedInVersion: "67"
        returnUrl:
          description: |-
            Website URL used for redirection after payment is completed.
            If provided, a **Continue** button will be shown on the payment page. If shoppers select the button, they are redirected to the specified URL.
          title: returnUrl
          type: string
        reusable:
          description: "Indicates whether the payment link can be reused for multiple\
            \ payments. If not provided, this defaults to **false** which means the\
            \ link can be used for one successful payment only."
          title: reusable
          type: boolean
        riskData:
          $ref: '#/components/schemas/RiskData'
        shopperEmail:
          description: The shopper's email address.
          title: shopperEmail
          type: string
        shopperLocale:
          description: |-
            The language to be used in the payment page, specified by a combination of a language and country code. For example, `en-US`.

            For a list of shopper locales that Pay by Link supports, refer to [Language and localization](https://docs.adyen.com/unified-commerce/pay-by-link/payment-links/api#language).
          title: shopperLocale
          type: string
        shopperName:
          $ref: '#/components/schemas/Name'
        shopperReference:
          description: |-
            Your reference to uniquely identify this shopper, for example user ID or account ID. Minimum length: 3 characters.
            > Your reference must not include personally identifiable information (PII), for example name or email address.
          maxLength: 256
          minLength: 3
          title: shopperReference
          type: string
        shopperStatement:
          description: |-
            The text to be shown on the shopper's bank statement.
             We recommend sending a maximum of 22 characters, otherwise banks might truncate the string.
             Allowed characters: **a-z**, **A-Z**, **0-9**, spaces, and special characters **. , ' _ - ? + * /**.
          title: shopperStatement
          type: string
          x-addedInVersion: "69"
        showRemovePaymentMethodButton:
          default: true
          description: Set to **false** to hide the button that lets the shopper remove
            a stored payment method.
          title: showRemovePaymentMethodButton
          type: boolean
        socialSecurityNumber:
          description: The shopper's social security number.
          title: socialSecurityNumber
          type: string
          x-addedInVersion: "69"
        splitCardFundingSources:
          default: false
          description: Boolean value indicating whether the card payment method should
            be split into separate debit and credit options.
          title: splitCardFundingSources
          type: boolean
          x-addedInVersion: "69"
        splits:
          description: "An array of objects specifying how to split a payment when\
            \ using [Adyen for Platforms](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information),\
            \ [Classic Platforms integration](https://docs.adyen.com/marketplaces-and-platforms/classic/processing-payments#providing-split-information),\
            \ or [Issuing](https://docs.adyen.com/issuing/manage-funds#split)."
          items:
            $ref: '#/components/schemas/Split'
          title: splits
          type: array
        store:
          description: "The physical store, for which this payment is processed."
          title: store
          type: string
        storePaymentMethodMode:
          description: "Indicates if the details of the payment method will be stored\
            \ for the shopper. Possible values:\n* **disabled** – No details will\
            \ be stored (default).\n* **askForConsent** – If the `shopperReference`\
            \ is provided, the UI lets the shopper choose if they want their payment\
            \ details to be stored.\n* **enabled** – If the `shopperReference` is\
            \ provided, the details will be stored without asking the shopper for\
            \ consent. \n When set to **askForConsent** or **enabled**, you must also\
            \ include the `recurringProcessingModel` parameter."
          enum:
          - askForConsent
          - disabled
          - enabled
          title: storePaymentMethodMode
          type: string
          x-addedInVersion: "68"
        telephoneNumber:
          description: The shopper's telephone number.
          title: telephoneNumber
          type: string
          x-addedInVersion: "68"
        themeId:
          description: "A [theme](https://docs.adyen.com/unified-commerce/pay-by-link/payment-links/api#themes)\
            \ to customize the appearance of the payment page. If not specified, the\
            \ payment page is rendered according to the theme set as default in your\
            \ Customer Area."
          title: themeId
          type: string
          x-addedInVersion: "67"
      required:
      - amount
      - merchantAccount
      - reference
      title: PaymentLinkRequest
    PaymentLinkResponse:
      example:
        metadata:
          key: metadata
        splits:
        - reference: reference
          amount:
            currency: currency
            value: 5
          description: description
          type: AcquiringFees
          account: account
        - reference: reference
          amount:
            currency: currency
            value: 5
          description: description
          type: AcquiringFees
          account: account
        telephoneNumber: telephoneNumber
        socialSecurityNumber: socialSecurityNumber
        splitCardFundingSources: false
        description: description
        themeId: themeId
        mcc: mcc
        lineItems:
        - quantity: 1
          itemCategory: itemCategory
          amountExcludingTax: 1
          imageUrl: imageUrl
          taxPercentage: 7
          description: description
          id: id
          amountIncludingTax: 1
          productUrl: productUrl
          taxAmount: 6
        - quantity: 1
          itemCategory: itemCategory
          amountExcludingTax: 1
          imageUrl: imageUrl
          taxPercentage: 7
          description: description
          id: id
          amountIncludingTax: 1
          productUrl: productUrl
          taxAmount: 6
        reference: reference
        shopperName:
          firstName: firstName
          lastName: lastName
        deliveryAddress:
          country: country
          stateOrProvince: stateOrProvince
          city: city
          houseNumberOrName: houseNumberOrName
          street: street
          postalCode: postalCode
        countryCode: countryCode
        recurringProcessingModel: CardOnFile
        blockedPaymentMethods:
        - blockedPaymentMethods
        - blockedPaymentMethods
        id: id
        returnUrl: returnUrl
        updatedAt: 2000-01-23T04:56:07.000+00:00
        merchantOrderReference: merchantOrderReference
        amount:
          currency: currency
          value: 0
        manualCapture: true
        dateOfBirth: 2000-01-23
        shopperEmail: shopperEmail
        store: store
        allowedPaymentMethods:
        - allowedPaymentMethods
        - allowedPaymentMethods
        riskData:
          fraudOffset: 4
          customFields:
            key: customFields
          profileReference: profileReference
          clientData: clientData
        expiresAt: expiresAt
        url: url
        reusable: true
        storePaymentMethodMode: askForConsent
        merchantAccount: merchantAccount
        installmentOptions:
          key:
            preselectedValue: 1
            maxValue: 6
            plans:
            - regular
            - regular
            values:
            - 5
            - 5
        deliverAt: 2000-01-23T04:56:07.000+00:00
        requiredShopperFields:
        - billingAddress
        - billingAddress
        showRemovePaymentMethodButton: true
        billingAddress:
          country: country
          stateOrProvince: stateOrProvince
          city: city
          houseNumberOrName: houseNumberOrName
          street: street
          postalCode: postalCode
        shopperLocale: shopperLocale
        captureDelayHours: 0
        applicationInfo:
          adyenLibrary:
            name: name
            version: version
          merchantApplication:
            name: name
            version: version
          adyenPaymentSource:
            name: name
            version: version
          merchantDevice:
            reference: reference
            os: os
            osVersion: osVersion
          shopperInteractionDevice:
            os: os
            osVersion: osVersion
            locale: locale
          externalPlatform:
            name: name
            integrator: integrator
            version: version
        shopperReference: shopperReference
        shopperStatement: shopperStatement
        status: active
      properties:
        allowedPaymentMethods:
          description: |-
            List of payment methods to be presented to the shopper. To refer to payment methods, use their [payment method type](https://docs.adyen.com/payment-methods/payment-method-types).

            Example: `"allowedPaymentMethods":["ideal","giropay"]`
          items:
            type: string
          title: allowedPaymentMethods
          type: array
        amount:
          $ref: '#/components/schemas/Amount'
        applicationInfo:
          $ref: '#/components/schemas/ApplicationInfo'
        billingAddress:
          $ref: '#/components/schemas/Address'
        blockedPaymentMethods:
          description: |-
            List of payment methods to be hidden from the shopper. To refer to payment methods, use their [payment method type](https://docs.adyen.com/payment-methods/payment-method-types).

            Example: `"blockedPaymentMethods":["ideal","giropay"]`
          items:
            type: string
          title: blockedPaymentMethods
          type: array
        captureDelayHours:
          description: "The delay between the authorisation and scheduled auto-capture,\
            \ specified in hours."
          format: int32
          title: captureDelayHours
          type: integer
          x-addedInVersion: "69"
        countryCode:
          description: The shopper's two-letter country code.
          title: countryCode
          type: string
        dateOfBirth:
          description: |-
            The shopper's date of birth.

            Format [ISO-8601](https://www.w3.org/TR/NOTE-datetime): YYYY-MM-DD
          format: date
          title: dateOfBirth
          type: string
          x-addedInVersion: "69"
        deliverAt:
          description: |-
            The date and time when the purchased goods should be delivered.

            [ISO 8601](https://www.w3.org/TR/NOTE-datetime) format: YYYY-MM-DDThh:mm:ss+TZD, for example, **2020-12-18T10:15:30+01:00**.
          format: date-time
          title: deliverAt
          type: string
        deliveryAddress:
          $ref: '#/components/schemas/Address'
        description:
          description: |-
            A short description visible on the payment page.
            Maximum length: 280 characters.
          title: description
          type: string
        expiresAt:
          description: |-
            The date when the payment link expires.

            [ISO 8601](https://www.w3.org/TR/NOTE-datetime) format with time zone designator **Z**: YYYY-MM-DDThh:mm:ss+TZD, for example, **2020-12-18T10:15:30Z**.

            The maximum expiry date is 70 days after the payment link is created.

            If not provided, the payment link expires 24 hours after it was created.
          title: expiresAt
          type: string
        id:
          description: A unique identifier of the payment link.
          readOnly: true
          title: id
          type: string
          x-addedInVersion: "51"
        installmentOptions:
          additionalProperties:
            $ref: '#/components/schemas/InstallmentOption'
          description: "A set of key-value pairs that specifies the installment options\
            \ available per payment method. The key must be a payment method name\
            \ in lowercase. For example, **card** to specify installment options for\
            \ all cards, or **visa** or **mc**. The value must be an object containing\
            \ the installment options."
          title: installmentOptions
        lineItems:
          description: |-
            Price and product information about the purchased items, to be included on the invoice sent to the shopper.
            This parameter is required for open invoice (_buy now, pay later_) payment methods such Afterpay, Clearpay, Klarna, RatePay, and Zip.
          items:
            $ref: '#/components/schemas/LineItem'
          title: lineItems
          type: array
        manualCapture:
          description: "Indicates if the payment must be [captured manually](https://docs.adyen.com/online-payments/capture)."
          title: manualCapture
          type: boolean
        mcc:
          description: "The [merchant category code](https://en.wikipedia.org/wiki/Merchant_category_code)\
            \ (MCC) is a four-digit number, which relates to a particular market segment.\
            \ This code reflects the predominant activity that is conducted by the\
            \ merchant."
          title: mcc
          type: string
          x-addedInVersion: "69"
        merchantAccount:
          description: The merchant account identifier for which the payment link
            is created.
          title: merchantAccount
          type: string
        merchantOrderReference:
          description: "This reference allows linking multiple transactions to each\
            \ other for reporting purposes (for example, order auth-rate). The reference\
            \ should be unique per billing cycle."
          title: merchantOrderReference
          type: string
        metadata:
          additionalProperties:
            type: string
          description: |-
            Metadata consists of entries, each of which includes a key and a value.
            Limitations:
            * Maximum 20 key-value pairs per request. Otherwise, error "177" occurs: "Metadata size exceeds limit"
            * Maximum 20 characters per key. Otherwise, error "178" occurs: "Metadata key size exceeds limit"
            * A key cannot have the name `checkout.linkId`. Any value that you provide with this key is going to be replaced by the real payment link ID.
          maxLength: 80
          title: metadata
        recurringProcessingModel:
          description: |
            Defines a recurring payment type. Required when `storePaymentMethodMode` is set to **askForConsent** or **enabled**.
            Possible values:
            * **Subscription** – A transaction for a fixed or variable amount, which follows a fixed schedule.
            * **CardOnFile** – With a card-on-file (CoF) transaction, card details are stored to enable one-click or omnichannel journeys, or simply to streamline the checkout process. Any subscription not following a fixed schedule is also considered a card-on-file transaction.
            * **UnscheduledCardOnFile** – An unscheduled card-on-file (UCoF) transaction is a transaction that occurs on a non-fixed schedule and/or has variable amounts. For example, automatic top-ups when a cardholder's balance drops below a certain amount.
          enum:
          - CardOnFile
          - Subscription
          - UnscheduledCardOnFile
          title: recurringProcessingModel
          type: string
        reference:
          description: A reference that is used to uniquely identify the payment in
            future communications about the payment status.
          title: reference
          type: string
        requiredShopperFields:
          description: |
            List of fields that the shopper has to provide on the payment page before completing the payment. For more information, refer to [Provide shopper information](https://docs.adyen.com/unified-commerce/pay-by-link/payment-links/api#shopper-information).

            Possible values:
            * **billingAddress** – The address where to send the invoice.
            * **deliveryAddress** – The address where the purchased goods should be delivered.
            * **shopperEmail** – The shopper's email address.
            * **shopperName** – The shopper's full name.
            * **telephoneNumber** – The shopper's phone number.
          items:
            enum:
            - billingAddress
            - deliveryAddress
            - shopperEmail
            - shopperName
            - telephoneNumber
            type: string
          title: requiredShopperFields
          type: array
          x-addedInVersion: "67"
        returnUrl:
          description: |-
            Website URL used for redirection after payment is completed.
            If provided, a **Continue** button will be shown on the payment page. If shoppers select the button, they are redirected to the specified URL.
          title: returnUrl
          type: string
        reusable:
          description: "Indicates whether the payment link can be reused for multiple\
            \ payments. If not provided, this defaults to **false** which means the\
            \ link can be used for one successful payment only."
          title: reusable
          type: boolean
        riskData:
          $ref: '#/components/schemas/RiskData'
        shopperEmail:
          description: The shopper's email address.
          title: shopperEmail
          type: string
        shopperLocale:
          description: |-
            The language to be used in the payment page, specified by a combination of a language and country code. For example, `en-US`.

            For a list of shopper locales that Pay by Link supports, refer to [Language and localization](https://docs.adyen.com/unified-commerce/pay-by-link/payment-links/api#language).
          title: shopperLocale
          type: string
        shopperName:
          $ref: '#/components/schemas/Name'
        shopperReference:
          description: |-
            Your reference to uniquely identify this shopper, for example user ID or account ID. Minimum length: 3 characters.
            > Your reference must not include personally identifiable information (PII), for example name or email address.
          maxLength: 256
          minLength: 3
          title: shopperReference
          type: string
        shopperStatement:
          description: |-
            The text to be shown on the shopper's bank statement.
             We recommend sending a maximum of 22 characters, otherwise banks might truncate the string.
             Allowed characters: **a-z**, **A-Z**, **0-9**, spaces, and special characters **. , ' _ - ? + * /**.
          title: shopperStatement
          type: string
          x-addedInVersion: "69"
        showRemovePaymentMethodButton:
          default: true
          description: Set to **false** to hide the button that lets the shopper remove
            a stored payment method.
          title: showRemovePaymentMethodButton
          type: boolean
        socialSecurityNumber:
          description: The shopper's social security number.
          title: socialSecurityNumber
          type: string
          x-addedInVersion: "69"
        splitCardFundingSources:
          default: false
          description: Boolean value indicating whether the card payment method should
            be split into separate debit and credit options.
          title: splitCardFundingSources
          type: boolean
          x-addedInVersion: "69"
        splits:
          description: "An array of objects specifying how to split a payment when\
            \ using [Adyen for Platforms](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information),\
            \ [Classic Platforms integration](https://docs.adyen.com/marketplaces-and-platforms/classic/processing-payments#providing-split-information),\
            \ or [Issuing](https://docs.adyen.com/issuing/manage-funds#split)."
          items:
            $ref: '#/components/schemas/Split'
          title: splits
          type: array
        status:
          description: |-
            Status of the payment link. Possible values:
            * **active**: The link can be used to make payments.
            * **expired**: The expiry date for the payment link has passed. Shoppers can no longer use the link to make payments.
            * **completed**: The shopper completed the payment.
            * **paymentPending**: The shopper is in the process of making the payment. Applies to payment methods with an asynchronous flow.
          enum:
          - active
          - completed
          - expired
          - paid
          - paymentPending
          title: status
          type: string
        store:
          description: "The physical store, for which this payment is processed."
          title: store
          type: string
        storePaymentMethodMode:
          description: "Indicates if the details of the payment method will be stored\
            \ for the shopper. Possible values:\n* **disabled** – No details will\
            \ be stored (default).\n* **askForConsent** – If the `shopperReference`\
            \ is provided, the UI lets the shopper choose if they want their payment\
            \ details to be stored.\n* **enabled** – If the `shopperReference` is\
            \ provided, the details will be stored without asking the shopper for\
            \ consent. \n When set to **askForConsent** or **enabled**, you must also\
            \ include the `recurringProcessingModel` parameter."
          enum:
          - askForConsent
          - disabled
          - enabled
          title: storePaymentMethodMode
          type: string
          x-addedInVersion: "68"
        telephoneNumber:
          description: The shopper's telephone number.
          title: telephoneNumber
          type: string
          x-addedInVersion: "68"
        themeId:
          description: "A [theme](https://docs.adyen.com/unified-commerce/pay-by-link/payment-links/api#themes)\
            \ to customize the appearance of the payment page. If not specified, the\
            \ payment page is rendered according to the theme set as default in your\
            \ Customer Area."
          title: themeId
          type: string
          x-addedInVersion: "67"
        updatedAt:
          description: |-
            The date when the payment link status was updated.

            [ISO 8601](https://www.w3.org/TR/NOTE-datetime) format: YYYY-MM-DDThh:mm:ss+TZD, for example, **2020-12-18T10:15:30+01:00**.
          format: date-time
          title: updatedAt
          type: string
        url:
          description: The URL at which the shopper can complete the payment.
          readOnly: true
          title: url
          type: string
      required:
      - amount
      - id
      - merchantAccount
      - reference
      - status
      - url
      title: PaymentLinkResponse
    PaymentMethod:
      example:
        brands:
        - brands
        - brands
        configuration:
          key: configuration
        name: name
        inputDetails:
        - configuration:
            key: configuration
          details:
          - configuration:
              key: configuration
            optional: true
            type: type
            items:
            - name: name
              id: id
            - name: name
              id: id
            value: value
            key: key
          - configuration:
              key: configuration
            optional: true
            type: type
            items:
            - name: name
              id: id
            - name: name
              id: id
            value: value
            key: key
          optional: true
          inputDetails:
          - configuration:
              key: configuration
            optional: true
            type: type
            items:
            - name: name
              id: id
            - name: name
              id: id
            value: value
            key: key
          - configuration:
              key: configuration
            optional: true
            type: type
            items:
            - name: name
              id: id
            - name: name
              id: id
            value: value
            key: key
          type: type
          items:
          - name: name
            id: id
          - name: name
            id: id
          value: value
          key: key
          itemSearchUrl: itemSearchUrl
        - configuration:
            key: configuration
          details:
          - configuration:
              key: configuration
            optional: true
            type: type
            items:
            - name: name
              id: id
            - name: name
              id: id
            value: value
            key: key
          - configuration:
              key: configuration
            optional: true
            type: type
            items:
            - name: name
              id: id
            - name: name
              id: id
            value: value
            key: key
          optional: true
          inputDetails:
          - configuration:
              key: configuration
            optional: true
            type: type
            items:
            - name: name
              id: id
            - name: name
              id: id
            value: value
            key: key
          - configuration:
              key: configuration
            optional: true
            type: type
            items:
            - name: name
              id: id
            - name: name
              id: id
            value: value
            key: key
          type: type
          items:
          - name: name
            id: id
          - name: name
            id: id
          value: value
          key: key
          itemSearchUrl: itemSearchUrl
        fundingSource: credit
        issuers:
        - name: name
          disabled: false
          id: id
        - name: name
          disabled: false
          id: id
        type: type
        brand: brand
        group:
          paymentMethodData: paymentMethodData
          name: name
          type: type
      properties:
        brand:
          description: "Brand for the selected gift card. For example: plastix, hmclub."
          title: brand
          type: string
          x-addedInVersion: "65"
        brands:
          description: "List of possible brands. For example: visa, mc."
          items:
            type: string
          title: brands
          type: array
          x-addedInVersion: "49"
        configuration:
          additionalProperties:
            type: string
          description: The configuration of the payment method.
          title: configuration
        fundingSource:
          description: The funding source of the payment method.
          enum:
          - credit
          - debit
          title: fundingSource
          type: string
          x-addedInVersion: "53"
        group:
          $ref: '#/components/schemas/PaymentMethodGroup'
        inputDetails:
          description: All input details to be provided to complete the payment with
            this payment method.
          items:
            $ref: '#/components/schemas/InputDetail'
          title: inputDetails
          type: array
        issuers:
          description: A list of issuers for this payment method.
          items:
            $ref: '#/components/schemas/PaymentMethodIssuer'
          title: issuers
          type: array
          x-addedInVersion: "68"
        name:
          description: The displayable name of this payment method.
          title: name
          type: string
        type:
          description: The unique payment method code.
          title: type
          type: string
      title: PaymentMethod
    PaymentMethodGroup:
      example:
        paymentMethodData: paymentMethodData
        name: name
        type: type
      properties:
        name:
          description: The name of the group.
          title: name
          type: string
        paymentMethodData:
          description: Echo data to be used if the payment method is displayed as
            part of this group.
          title: paymentMethodData
          type: string
        type:
          description: The unique code of the group.
          title: type
          type: string
      title: PaymentMethodGroup
    PaymentMethodIssuer:
      example:
        name: name
        disabled: false
        id: id
      properties:
        disabled:
          default: false
          description: A boolean value indicating whether this issuer is unavailable.
            Can be `true` whenever the issuer is offline.
          title: disabled
          type: boolean
        id:
          description: "The unique identifier of this issuer, to submit in requests\
            \ to /payments."
          title: id
          type: string
        name:
          description: A localized name of the issuer.
          title: name
          type: string
      required:
      - id
      - name
      title: PaymentMethodIssuer
    PaymentMethodsRequest:
      example:
        amount:
          currency: currency
          value: 0
        merchantAccount: merchantAccount
        countryCode: countryCode
        splitCardFundingSources: false
        channel: iOS
        additionalData:
          challengeWindowSize: "01"
          mpiImplementationType: mpiImplementationType
          allow3DS2: allow3DS2
          executeThreeD: executeThreeD
          threeDSVersion: threeDSVersion
          scaExemption: scaExemption
        blockedPaymentMethods:
        - blockedPaymentMethods
        - blockedPaymentMethods
        shopperLocale: shopperLocale
        store: store
        allowedPaymentMethods:
        - allowedPaymentMethods
        - allowedPaymentMethods
        order:
          orderData: orderData
          pspReference: pspReference
        shopperReference: shopperReference
      properties:
        additionalData:
          $ref: '#/components/schemas/BalanceCheckRequest_additionalData'
        allowedPaymentMethods:
          description: |-
            List of payment methods to be presented to the shopper. To refer to payment methods, use their [payment method type](https://docs.adyen.com/payment-methods/payment-method-types).

            Example: `"allowedPaymentMethods":["ideal","giropay"]`
          items:
            type: string
          title: allowedPaymentMethods
          type: array
          x-addedInVersion: "33"
        amount:
          $ref: '#/components/schemas/Amount'
        blockedPaymentMethods:
          description: |-
            List of payment methods to be hidden from the shopper. To refer to payment methods, use their [payment method type](https://docs.adyen.com/payment-methods/payment-method-types).

            Example: `"blockedPaymentMethods":["ideal","giropay"]`
          items:
            type: string
          title: blockedPaymentMethods
          type: array
          x-addedInVersion: "33"
        channel:
          description: |-
            The platform where a payment transaction takes place. This field can be used for filtering out payment methods that are only available on specific platforms. Possible values:
            * iOS
            * Android
            * Web
          enum:
          - iOS
          - Android
          - Web
          title: channel
          type: string
        countryCode:
          description: The shopper's country code.
          title: countryCode
          type: string
        merchantAccount:
          description: "The merchant account identifier, with which you want to process\
            \ the transaction."
          title: merchantAccount
          type: string
        order:
          $ref: '#/components/schemas/EncryptedOrderData'
        shopperLocale:
          description: The combination of a language code and a country code to specify
            the language to be used in the payment.
          title: shopperLocale
          type: string
          x-addedInVersion: "7"
        shopperReference:
          description: "Required for recurring payments. \nYour reference to uniquely\
            \ identify this shopper, for example user ID or account ID. Minimum length:\
            \ 3 characters.\n> Your reference must not include personally identifiable\
            \ information (PII), for example name or email address."
          title: shopperReference
          type: string
        splitCardFundingSources:
          default: false
          description: Boolean value indicating whether the card payment method should
            be split into separate debit and credit options.
          title: splitCardFundingSources
          type: boolean
          x-addedInVersion: "53"
        store:
          description: "Required for Adyen for Platforms integrations if you have\
            \ a platform setup. This is your [reference](https://docs.adyen.com/api-explorer/Management/3/post/merchants/(merchantId)/stores#request-reference)\
            \ (on [balance platform](https://docs.adyen.com/marketplaces-and-platforms/classic/platforms-for-partners#route-payments))\
            \ or the [storeReference](https://docs.adyen.com/api-explorer/Account/latest/post/updateAccountHolder#request-accountHolderDetails-storeDetails-storeReference)\
            \ (in the [classic integration](https://docs.adyen.com/marketplaces-and-platforms/processing-payments/route-payment-to-store/#route-a-payment-to-a-store))\
            \ for the ecommerce or point-of-sale store that is processing the payment."
          maxLength: 16
          minLength: 1
          title: store
          type: string
          x-addedInVersion: "23"
      required:
      - merchantAccount
      title: PaymentMethodsRequest
    PaymentMethodsResponse:
      example:
        paymentMethods:
        - brands:
          - brands
          - brands
          configuration:
            key: configuration
          name: name
          inputDetails:
          - configuration:
              key: configuration
            details:
            - configuration:
                key: configuration
              optional: true
              type: type
              items:
              - name: name
                id: id
              - name: name
                id: id
              value: value
              key: key
            - configuration:
                key: configuration
              optional: true
              type: type
              items:
              - name: name
                id: id
              - name: name
                id: id
              value: value
              key: key
            optional: true
            inputDetails:
            - configuration:
                key: configuration
              optional: true
              type: type
              items:
              - name: name
                id: id
              - name: name
                id: id
              value: value
              key: key
            - configuration:
                key: configuration
              optional: true
              type: type
              items:
              - name: name
                id: id
              - name: name
                id: id
              value: value
              key: key
            type: type
            items:
            - name: name
              id: id
            - name: name
              id: id
            value: value
            key: key
            itemSearchUrl: itemSearchUrl
          - configuration:
              key: configuration
            details:
            - configuration:
                key: configuration
              optional: true
              type: type
              items:
              - name: name
                id: id
              - name: name
                id: id
              value: value
              key: key
            - configuration:
                key: configuration
              optional: true
              type: type
              items:
              - name: name
                id: id
              - name: name
                id: id
              value: value
              key: key
            optional: true
            inputDetails:
            - configuration:
                key: configuration
              optional: true
              type: type
              items:
              - name: name
                id: id
              - name: name
                id: id
              value: value
              key: key
            - configuration:
                key: configuration
              optional: true
              type: type
              items:
              - name: name
                id: id
              - name: name
                id: id
              value: value
              key: key
            type: type
            items:
            - name: name
              id: id
            - name: name
              id: id
            value: value
            key: key
            itemSearchUrl: itemSearchUrl
          fundingSource: credit
          issuers:
          - name: name
            disabled: false
            id: id
          - name: name
            disabled: false
            id: id
          type: type
          brand: brand
          group:
            paymentMethodData: paymentMethodData
            name: name
            type: type
        - brands:
          - brands
          - brands
          configuration:
            key: configuration
          name: name
          inputDetails:
          - configuration:
              key: configuration
            details:
            - configuration:
                key: configuration
              optional: true
              type: type
              items:
              - name: name
                id: id
              - name: name
                id: id
              value: value
              key: key
            - configuration:
                key: configuration
              optional: true
              type: type
              items:
              - name: name
                id: id
              - name: name
                id: id
              value: value
              key: key
            optional: true
            inputDetails:
            - configuration:
                key: configuration
              optional: true
              type: type
              items:
              - name: name
                id: id
              - name: name
                id: id
              value: value
              key: key
            - configuration:
                key: configuration
              optional: true
              type: type
              items:
              - name: name
                id: id
              - name: name
                id: id
              value: value
              key: key
            type: type
            items:
            - name: name
              id: id
            - name: name
              id: id
            value: value
            key: key
            itemSearchUrl: itemSearchUrl
          - configuration:
              key: configuration
            details:
            - configuration:
                key: configuration
              optional: true
              type: type
              items:
              - name: name
                id: id
              - name: name
                id: id
              value: value
              key: key
            - configuration:
                key: configuration
              optional: true
              type: type
              items:
              - name: name
                id: id
              - name: name
                id: id
              value: value
              key: key
            optional: true
            inputDetails:
            - configuration:
                key: configuration
              optional: true
              type: type
              items:
              - name: name
                id: id
              - name: name
                id: id
              value: value
              key: key
            - configuration:
                key: configuration
              optional: true
              type: type
              items:
              - name: name
                id: id
              - name: name
                id: id
              value: value
              key: key
            type: type
            items:
            - name: name
              id: id
            - name: name
              id: id
            value: value
            key: key
            itemSearchUrl: itemSearchUrl
          fundingSource: credit
          issuers:
          - name: name
            disabled: false
            id: id
          - name: name
            disabled: false
            id: id
          type: type
          brand: brand
          group:
            paymentMethodData: paymentMethodData
            name: name
            type: type
        storedPaymentMethods:
        - lastFour: lastFour
          holderName: holderName
          expiryMonth: expiryMonth
          networkTxReference: networkTxReference
          shopperEmail: shopperEmail
          expiryYear: expiryYear
          type: type
          ownerName: ownerName
          iban: iban
          name: name
          bankAccountNumber: bankAccountNumber
          id: id
          supportedShopperInteractions:
          - supportedShopperInteractions
          - supportedShopperInteractions
          bankLocationId: bankLocationId
          brand: brand
        - lastFour: lastFour
          holderName: holderName
          expiryMonth: expiryMonth
          networkTxReference: networkTxReference
          shopperEmail: shopperEmail
          expiryYear: expiryYear
          type: type
          ownerName: ownerName
          iban: iban
          name: name
          bankAccountNumber: bankAccountNumber
          id: id
          supportedShopperInteractions:
          - supportedShopperInteractions
          - supportedShopperInteractions
          bankLocationId: bankLocationId
          brand: brand
      properties:
        paymentMethods:
          description: Detailed list of payment methods required to generate payment
            forms.
          items:
            $ref: '#/components/schemas/PaymentMethod'
          title: paymentMethods
          type: array
        storedPaymentMethods:
          description: List of all stored payment methods.
          items:
            $ref: '#/components/schemas/StoredPaymentMethod'
          title: storedPaymentMethods
          type: array
          x-addedInVersion: "49"
      title: PaymentMethodsResponse
    PaymentRefundRequest:
      example:
        lineItems:
        - quantity: 1
          itemCategory: itemCategory
          amountExcludingTax: 1
          imageUrl: imageUrl
          taxPercentage: 7
          description: description
          id: id
          amountIncludingTax: 1
          productUrl: productUrl
          taxAmount: 6
        - quantity: 1
          itemCategory: itemCategory
          amountExcludingTax: 1
          imageUrl: imageUrl
          taxPercentage: 7
          description: description
          id: id
          amountIncludingTax: 1
          productUrl: productUrl
          taxAmount: 6
        reference: reference
        amount:
          currency: currency
          value: 0
        splits:
        - reference: reference
          amount:
            currency: currency
            value: 5
          description: description
          type: AcquiringFees
          account: account
        - reference: reference
          amount:
            currency: currency
            value: 5
          description: description
          type: AcquiringFees
          account: account
        merchantAccount: merchantAccount
        merchantRefundReason: FRAUD
        store: store
        applicationInfo:
          adyenLibrary:
            name: name
            version: version
          merchantApplication:
            name: name
            version: version
          adyenPaymentSource:
            name: name
            version: version
          merchantDevice:
            reference: reference
            os: os
            osVersion: osVersion
          shopperInteractionDevice:
            os: os
            osVersion: osVersion
            locale: locale
          externalPlatform:
            name: name
            integrator: integrator
            version: version
      properties:
        amount:
          $ref: '#/components/schemas/Amount'
        applicationInfo:
          $ref: '#/components/schemas/ApplicationInfo'
        lineItems:
          description: |-
            Price and product information of the refunded items, required for [partial refunds](https://docs.adyen.com/online-payments/refund#refund-a-payment).
            > This field is required for partial refunds with 3x 4x Oney, Affirm, Afterpay, Atome, Clearpay, Klarna, Ratepay, Walley, and Zip.
          items:
            $ref: '#/components/schemas/LineItem'
          title: lineItems
          type: array
        merchantAccount:
          description: The merchant account that is used to process the payment.
          title: merchantAccount
          type: string
        merchantRefundReason:
          description: Your reason for the refund request
          enum:
          - FRAUD
          - CUSTOMER REQUEST
          - RETURN
          - DUPLICATE
          - OTHER
          title: merchantRefundReason
          type: string
        reference:
          description: "Your reference for the refund request. Maximum length: 80\
            \ characters."
          title: reference
          type: string
        splits:
          description: "An array of objects specifying how the amount should be split\
            \ between accounts when using Adyen for Platforms. For details, refer\
            \ to [Providing split information](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information)."
          items:
            $ref: '#/components/schemas/Split'
          title: splits
          type: array
        store:
          description: "The online store or [physical store](https://docs.adyen.com/point-of-sale/design-your-integration/determine-account-structure/#create-stores)\
            \ that is processing the refund. This must be the same as the store name\
            \ configured in your Customer Area.  Otherwise, you get an error and the\
            \ refund fails."
          title: store
          type: string
      required:
      - amount
      - merchantAccount
      title: PaymentRefundRequest
    PaymentRefundResponse:
      example:
        lineItems:
        - quantity: 1
          itemCategory: itemCategory
          amountExcludingTax: 1
          imageUrl: imageUrl
          taxPercentage: 7
          description: description
          id: id
          amountIncludingTax: 1
          productUrl: productUrl
          taxAmount: 6
        - quantity: 1
          itemCategory: itemCategory
          amountExcludingTax: 1
          imageUrl: imageUrl
          taxPercentage: 7
          description: description
          id: id
          amountIncludingTax: 1
          productUrl: productUrl
          taxAmount: 6
        reference: reference
        amount:
          currency: currency
          value: 0
        splits:
        - reference: reference
          amount:
            currency: currency
            value: 5
          description: description
          type: AcquiringFees
          account: account
        - reference: reference
          amount:
            currency: currency
            value: 5
          description: description
          type: AcquiringFees
          account: account
        merchantAccount: merchantAccount
        paymentPspReference: paymentPspReference
        merchantRefundReason: FRAUD
        store: store
        pspReference: pspReference
        status: received
      properties:
        amount:
          $ref: '#/components/schemas/Amount'
        lineItems:
          description: |-
            Price and product information of the refunded items, required for [partial refunds](https://docs.adyen.com/online-payments/refund#refund-a-payment).
            > This field is required for partial refunds with 3x 4x Oney, Affirm, Afterpay, Atome, Clearpay, Klarna, Ratepay, Walley, and Zip.
          items:
            $ref: '#/components/schemas/LineItem'
          title: lineItems
          type: array
        merchantAccount:
          description: The merchant account that is used to process the payment.
          title: merchantAccount
          type: string
        merchantRefundReason:
          description: Your reason for the refund request.
          enum:
          - FRAUD
          - CUSTOMER REQUEST
          - RETURN
          - DUPLICATE
          - OTHER
          title: merchantRefundReason
          type: string
        paymentPspReference:
          description: "The [`pspReference`](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/payments__resParam_pspReference)\
            \ of the payment to refund. "
          title: paymentPspReference
          type: string
        pspReference:
          description: Adyen's 16-character reference associated with the refund request.
          title: pspReference
          type: string
        reference:
          description: Your reference for the refund request.
          title: reference
          type: string
        splits:
          description: "An array of objects specifying how the amount should be split\
            \ between accounts when using Adyen for Platforms. For details, refer\
            \ to [Providing split information](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information)."
          items:
            $ref: '#/components/schemas/Split'
          title: splits
          type: array
        status:
          description: The status of your request. This will always have the value
            **received**.
          enum:
          - received
          title: status
          type: string
        store:
          description: "The online store or [physical store](https://docs.adyen.com/point-of-sale/design-your-integration/determine-account-structure/#create-stores)\
            \ that is processing the refund. This must be the same as the store name\
            \ configured in your Customer Area.  Otherwise, you get an error and the\
            \ refund fails."
          title: store
          type: string
      required:
      - amount
      - merchantAccount
      - paymentPspReference
      - pspReference
      - status
      title: PaymentRefundResponse
    PaymentRequest:
      example:
        dccQuote:
          reference: reference
          validTill: 2000-01-23T04:56:07.000+00:00
          signature: signature
          accountType: accountType
          buy:
            currency: currency
            value: 0
          sell:
            currency: currency
            value: 0
          interbank:
            currency: currency
            value: 0
          source: source
          type: type
          basePoints: 2
          account: account
          baseAmount:
            currency: currency
            value: 0
        metadata:
          key: metadata
        sessionValidity: sessionValidity
        splits:
        - reference: reference
          amount:
            currency: currency
            value: 5
          description: description
          type: AcquiringFees
          account: account
        - reference: reference
          amount:
            currency: currency
            value: 5
          description: description
          type: AcquiringFees
          account: account
        deviceFingerprint: deviceFingerprint
        redirectToIssuerMethod: redirectToIssuerMethod
        channel: iOS
        platformChargebackLogic:
          costAllocationAccount: costAllocationAccount
          targetAccount: targetAccount
          behavior: deductAccordingToSplitRatio
        checkoutAttemptId: checkoutAttemptId
        mcc: mcc
        threeDSAuthenticationOnly: false
        merchantRiskIndicator:
          preOrderDate: 2000-01-23T04:56:07.000+00:00
          shipIndicator: shipIndicator
          giftCardAmount:
            currency: currency
            value: 0
          preOrderPurchaseInd: preOrderPurchaseInd
          deliveryEmail: deliveryEmail
          giftCardCount: 1
          addressMatch: true
          deliveryTimeframe: electronicDelivery
          reorderItems: true
          deliveryEmailAddress: deliveryEmailAddress
          preOrderPurchase: true
          giftCardCurr: giftCardCurr
          reorderItemsInd: reorderItemsInd
          deliveryAddressIndicator: shipToBillingAddress
        lineItems:
        - quantity: 1
          itemCategory: itemCategory
          amountExcludingTax: 1
          imageUrl: imageUrl
          taxPercentage: 7
          description: description
          id: id
          amountIncludingTax: 1
          productUrl: productUrl
          taxAmount: 6
        - quantity: 1
          itemCategory: itemCategory
          amountExcludingTax: 1
          imageUrl: imageUrl
          taxPercentage: 7
          description: description
          id: id
          amountIncludingTax: 1
          productUrl: productUrl
          taxAmount: 6
        reference: reference
        deliveryAddress:
          country: country
          firstName: firstName
          lastName: lastName
          stateOrProvince: stateOrProvince
          city: city
          houseNumberOrName: houseNumberOrName
          street: street
          postalCode: postalCode
        installments:
          plan: regular
          value: 7
        recurringProcessingModel: CardOnFile
        additionalData:
          challengeWindowSize: "01"
          mpiImplementationType: mpiImplementationType
          allow3DS2: allow3DS2
          executeThreeD: executeThreeD
          threeDSVersion: threeDSVersion
          scaExemption: scaExemption
        order:
          orderData: orderData
          pspReference: pspReference
        trustedShopper: true
        enablePayOut: true
        fraudOffset: 6
        additionalAmount:
          currency: currency
          value: 0
        entityType: NaturalPerson
        shopperEmail: shopperEmail
        enableOneClick: true
        threeDS2RequestData:
          notificationURL: notificationURL
          paymentAuthenticationUseCase: paymentAuthenticationUseCase
          recurringFrequency: recurringFrequency
          mcc: mcc
          platform: iOS
          sdkEphemPubKey:
            kty: kty
            crv: crv
            x: x
            "y": "y"
          merchantName: merchantName
          recurringExpiry: recurringExpiry
          threeDSRequestorAuthenticationInd: threeDSRequestorAuthenticationInd
          addrMatch: "Y"
          threeDSRequestorURL: threeDSRequestorURL
          sdkReferenceNumber: sdkReferenceNumber
          threeDSRequestorName: threeDSRequestorName
          acquirerMerchantID: acquirerMerchantID
          sdkAppID: sdkAppID
          messageVersion: messageVersion
          sdkTransID: sdkTransID
          whiteListStatus: whiteListStatus
          authenticationOnly: false
          sdkMaxTimeout: 9
          homePhone:
            cc: cc
            subscriber: subscriber
          payTokenInd: true
          purchaseInstalData: purchaseInstalData
          acquirerBIN: acquirerBIN
          threeDSRequestorID: threeDSRequestorID
          deviceRenderOptions:
            sdkUiType:
            - multiSelect
            - multiSelect
            sdkInterface: both
          transactionType: goodsOrServicePurchase
          acctInfo:
            shipAddressUsageInd: "01"
            paymentAccAge: paymentAccAge
            paymentAccInd: "01"
            txnActivityYear: txnActivityYear
            shipNameIndicator: "01"
            chAccPwChangeInd: "01"
            provisionAttemptsDay: provisionAttemptsDay
            chAccChange: chAccChange
            chAccChangeInd: "01"
            chAccString: chAccString
            nbPurchaseAccount: nbPurchaseAccount
            chAccAgeInd: "01"
            chAccPwChange: chAccPwChange
            shipAddressUsage: shipAddressUsage
            suspiciousAccActivity: "01"
            txnActivityDay: txnActivityDay
          threeDSRequestorChallengeInd: "01"
          mobilePhone:
            cc: cc
            subscriber: subscriber
          threeDSRequestorAuthenticationInfo:
            threeDSReqAuthMethod: "01"
            threeDSReqAuthData: threeDSReqAuthData
            threeDSReqAuthTimestamp: threeDSReqAuthTimestamp
          transType: "01"
          challengeIndicator: noPreference
          acctType: "01"
          workPhone:
            cc: cc
            subscriber: subscriber
          threeDSCompInd: threeDSCompInd
          threeDSRequestorPriorAuthenticationInfo:
            threeDSReqPriorRef: threeDSReqPriorRef
            threeDSReqPriorAuthData: threeDSReqPriorAuthData
            threeDSReqPriorAuthMethod: "01"
            threeDSReqPriorAuthTimestamp: threeDSReqPriorAuthTimestamp
        orderReference: orderReference
        paymentMethod:
          bankAccountType: balance
          ownerName: ownerName
          storedPaymentMethodId: storedPaymentMethodId
          encryptedBankAccountNumber: encryptedBankAccountNumber
          recurringDetailReference: recurringDetailReference
          bankAccountNumber: bankAccountNumber
          checkoutAttemptId: checkoutAttemptId
          bankLocationId: bankLocationId
          type: ach
          encryptedBankLocationId: encryptedBankLocationId
        shopperLocale: shopperLocale
        captureDelayHours: 0
        applicationInfo:
          adyenLibrary:
            name: name
            version: version
          merchantApplication:
            name: name
            version: version
          adyenPaymentSource:
            name: name
            version: version
          merchantDevice:
            reference: reference
            os: os
            osVersion: osVersion
          shopperInteractionDevice:
            os: os
            osVersion: osVersion
            locale: locale
          externalPlatform:
            name: name
            integrator: integrator
            version: version
        browserInfo:
          acceptHeader: acceptHeader
          screenWidth: 7
          javaEnabled: true
          screenHeight: 2
          timeZoneOffset: 9
          javaScriptEnabled: true
          language: language
          userAgent: userAgent
          colorDepth: 5
        shopperReference: shopperReference
        shopperStatement: shopperStatement
        mandate:
          amount: amount
          amountRule: max
          billingDay: billingDay
          startsAt: startsAt
          billingAttemptsRule: true
          endsAt: endsAt
          remarks: remarks
          frequency: adhoc
        recurringFrequency: recurringFrequency
        telephoneNumber: telephoneNumber
        localizedShopperStatement:
          key: localizedShopperStatement
        socialSecurityNumber: socialSecurityNumber
        origin: origin
        shopperIP: shopperIP
        fundOrigin:
          shopperName:
            firstName: firstName
            lastName: lastName
          telephoneNumber: telephoneNumber
          walletIdentifier: walletIdentifier
          shopperEmail: shopperEmail
          billingAddress:
            country: country
            stateOrProvince: stateOrProvince
            city: city
            houseNumberOrName: houseNumberOrName
            street: street
            postalCode: postalCode
        recurringExpiry: recurringExpiry
        shopperName:
          firstName: firstName
          lastName: lastName
        countryCode: countryCode
        shopperInteraction: Ecommerce
        company:
          registrationNumber: registrationNumber
          registryLocation: registryLocation
          taxId: taxId
          name: name
          type: type
          homepage: homepage
        deliveryDate: 2000-01-23T04:56:07.000+00:00
        returnUrl: returnUrl
        conversionId: conversionId
        accountInfo:
          passwordChangeDate: 2000-01-23T04:56:07.000+00:00
          paymentAccountIndicator: notApplicable
          suspiciousActivity: true
          deliveryAddressUsageIndicator: thisTransaction
          pastTransactionsYear: 1
          accountType: notApplicable
          homePhone: homePhone
          paymentAccountAge: 2000-01-23T04:56:07.000+00:00
          accountAgeIndicator: notApplicable
          deliveryAddressUsageDate: 2000-01-23T04:56:07.000+00:00
          accountChangeDate: 2000-01-23T04:56:07.000+00:00
          accountCreationDate: 2000-01-23T04:56:07.000+00:00
          mobilePhone: mobilePhone
          pastTransactionsDay: 6
          accountChangeIndicator: thisTransaction
          passwordChangeIndicator: notApplicable
          addCardAttemptsDay: 0
          workPhone: workPhone
          purchasesLast6Months: 5
        authenticationData:
          authenticationOnly: false
          threeDSRequestData:
            challengeWindowSize: "01"
            dataOnly: "false"
            threeDSVersion: 2.1.0
            nativeThreeDS: preferred
          attemptAuthentication: always
        merchantOrderReference: merchantOrderReference
        amount:
          currency: currency
          value: 0
        redirectFromIssuerMethod: redirectFromIssuerMethod
        dateOfBirth: 2000-01-23T04:56:07.000+00:00
        store: store
        riskData:
          fraudOffset: 4
          customFields:
            key: customFields
          profileReference: profileReference
          clientData: clientData
        storePaymentMethod: true
        merchantAccount: merchantAccount
        fundRecipient:
          shopperName:
            firstName: firstName
            lastName: lastName
          subMerchant:
            country: country
            city: city
            taxId: taxId
            name: name
            mcc: mcc
          telephoneNumber: telephoneNumber
          storedPaymentMethodId: storedPaymentMethodId
          walletIdentifier: walletIdentifier
          paymentMethod:
            holderName: holderName
            cupsecureplus.smscode: cupsecureplus.smscode
            expiryMonth: expiryMonth
            threeDS2SdkVersion: threeDS2SdkVersion
            networkPaymentReference: networkPaymentReference
            checkoutAttemptId: checkoutAttemptId
            expiryYear: expiryYear
            type: scheme
            shopperNotificationReference: shopperNotificationReference
            cvc: cvc
            number: number
            encryptedCardNumber: encryptedCardNumber
            encryptedSecurityCode: encryptedSecurityCode
            encryptedExpiryYear: encryptedExpiryYear
            storedPaymentMethodId: storedPaymentMethodId
            recurringDetailReference: recurringDetailReference
            encryptedExpiryMonth: encryptedExpiryMonth
            fundingSource: credit
            brand: brand
          shopperEmail: shopperEmail
          walletOwnerTaxId: walletOwnerTaxId
          billingAddress:
            country: country
            stateOrProvince: stateOrProvince
            city: city
            houseNumberOrName: houseNumberOrName
            street: street
            postalCode: postalCode
          shopperReference: shopperReference
        billingAddress:
          country: country
          stateOrProvince: stateOrProvince
          city: city
          houseNumberOrName: houseNumberOrName
          street: street
          postalCode: postalCode
        enableRecurring: true
        mpiData:
          cavv: cavv
          authenticationResponse: "Y"
          xid: xid
          cavvAlgorithm: cavvAlgorithm
          dsTransID: dsTransID
          tokenAuthenticationVerificationValue: tokenAuthenticationVerificationValue
          transStatusReason: transStatusReason
          challengeCancel: "01"
          directoryResponse: A
          eci: eci
          riskScore: riskScore
          threeDSVersion: threeDSVersion
      properties:
        accountInfo:
          $ref: '#/components/schemas/AccountInfo'
        additionalAmount:
          $ref: '#/components/schemas/Amount'
        additionalData:
          $ref: '#/components/schemas/BalanceCheckRequest_additionalData'
        amount:
          $ref: '#/components/schemas/Amount'
        applicationInfo:
          $ref: '#/components/schemas/ApplicationInfo'
        authenticationData:
          $ref: '#/components/schemas/AuthenticationData'
        billingAddress:
          $ref: '#/components/schemas/BillingAddress'
        browserInfo:
          $ref: '#/components/schemas/BrowserInfo'
        captureDelayHours:
          description: "The delay between the authorisation and scheduled auto-capture,\
            \ specified in hours."
          format: int32
          title: captureDelayHours
          type: integer
        channel:
          description: |-
            The platform where a payment transaction takes place. This field is optional for filtering out payment methods that are only available on specific platforms. If this value is not set, then we will try to infer it from the `sdkVersion` or `token`.

            Possible values:
            * iOS
            * Android
            * Web
          enum:
          - iOS
          - Android
          - Web
          title: channel
          type: string
        checkoutAttemptId:
          description: Checkout attempt ID that corresponds to the Id generated by
            the client SDK for tracking user payment journey.
          title: checkoutAttemptId
          type: string
          x-addedInVersion: "68"
        company:
          $ref: '#/components/schemas/Company'
        conversionId:
          deprecated: true
          description: Conversion ID that corresponds to the Id generated by the client
            SDK for tracking user payment journey.
          title: conversionId
          type: string
          x-addedInVersion: "49"
          x-deprecatedInVersion: "68"
          x-deprecatedMessage: Use `checkoutAttemptId` instead
        countryCode:
          description: |-
            The shopper country.

            Format: [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
            Example: NL or DE
          title: countryCode
          type: string
        dateOfBirth:
          description: |-
            The shopper's date of birth.

            Format [ISO-8601](https://www.w3.org/TR/NOTE-datetime): YYYY-MM-DD
          format: date-time
          title: dateOfBirth
          type: string
        dccQuote:
          $ref: '#/components/schemas/ForexQuote'
        deliveryAddress:
          $ref: '#/components/schemas/DeliveryAddress'
        deliveryDate:
          description: |-
            The date and time the purchased goods should be delivered.

            Format [ISO 8601](https://www.w3.org/TR/NOTE-datetime): YYYY-MM-DDThh:mm:ss.sssTZD

            Example: 2017-07-17T13:42:40.428+01:00
          format: date-time
          title: deliveryDate
          type: string
        deviceFingerprint:
          description: "A string containing the shopper's device fingerprint. For\
            \ more information, refer to [Device fingerprinting](https://docs.adyen.com/risk-management/device-fingerprinting)."
          maxLength: 5000
          title: deviceFingerprint
          type: string
        enableOneClick:
          description: "When true and `shopperReference` is provided, the shopper\
            \ will be asked if the payment details should be stored for future one-click\
            \ payments."
          title: enableOneClick
          type: boolean
          x-addedInVersion: "32"
        enablePayOut:
          description: "When true and `shopperReference` is provided, the payment\
            \ details will be tokenized for payouts."
          title: enablePayOut
          type: boolean
          x-addedInVersion: "32"
        enableRecurring:
          description: "When true and `shopperReference` is provided, the payment\
            \ details will be tokenized for recurring payments."
          title: enableRecurring
          type: boolean
          x-addedInVersion: "32"
        entityType:
          description: The type of the entity the payment is processed for.
          enum:
          - NaturalPerson
          - CompanyName
          title: entityType
          type: string
        fraudOffset:
          description: An integer value that is added to the normal fraud score. The
            value can be either positive or negative.
          format: int32
          title: fraudOffset
          type: integer
        fundOrigin:
          $ref: '#/components/schemas/FundOrigin'
        fundRecipient:
          $ref: '#/components/schemas/FundRecipient'
        installments:
          $ref: '#/components/schemas/Installments'
        lineItems:
          description: |-
            Price and product information about the purchased items, to be included on the invoice sent to the shopper.
            > This field is required for 3x 4x Oney, Affirm, Afterpay, Clearpay, Klarna, Ratepay, and Zip.
          items:
            $ref: '#/components/schemas/LineItem'
          title: lineItems
          type: array
          x-addedInVersion: "32"
        localizedShopperStatement:
          additionalProperties:
            type: string
          description: "The `localizedShopperStatement` field lets you use dynamic\
            \ values for your shopper statement in a local character set.\nIf not\
            \ supplied, left empty, or for cross-border transactions, **shopperStatement**\
            \ is used.\n\nAdyen currently supports the ja-Kana character set for Visa\
            \ and Mastercard payments in Japan using Japanese cards. This character\
            \ set supports:\n\n* UTF-8 based Katakana, capital letters, numbers and\
            \ special characters. \n* Half-width or full-width characters."
          title: localizedShopperStatement
          x-addedInVersion: "68"
        mandate:
          $ref: '#/components/schemas/Mandate'
        mcc:
          description: "The [merchant category code](https://en.wikipedia.org/wiki/Merchant_category_code)\
            \ (MCC) is a four-digit number, which relates to a particular market segment.\
            \ This code reflects the predominant activity that is conducted by the\
            \ merchant."
          title: mcc
          type: string
        merchantAccount:
          description: "The merchant account identifier, with which you want to process\
            \ the transaction."
          title: merchantAccount
          type: string
        merchantOrderReference:
          description: |-
            This reference allows linking multiple transactions to each other for reporting purposes (i.e. order auth-rate). The reference should be unique per billing cycle.
            The same merchant order reference should never be reused after the first authorised attempt. If used, this field should be supplied for all incoming authorisations.
            > We strongly recommend you send the `merchantOrderReference` value to benefit from linking payment requests when authorisation retries take place. In addition, we recommend you provide `retry.orderAttemptNumber`, `retry.chainAttemptNumber`, and `retry.skipRetry` values in `PaymentRequest.additionalData`.
          title: merchantOrderReference
          type: string
        merchantRiskIndicator:
          $ref: '#/components/schemas/MerchantRiskIndicator'
        metadata:
          additionalProperties:
            type: string
          description: "Metadata consists of entries, each of which includes a key\
            \ and a value.\nLimits:\n* Maximum 20 key-value pairs per request. When\
            \ exceeding, the \"177\" error occurs: \"Metadata size exceeds limit\"\
            .\n* Maximum 20 characters per key.\n* Maximum 80 characters per value. "
          title: metadata
        mpiData:
          $ref: '#/components/schemas/ThreeDSecureData'
        order:
          $ref: '#/components/schemas/EncryptedOrderData'
        orderReference:
          description: "When you are doing multiple partial (gift card) payments,\
            \ this is the `pspReference` of the first payment. We use this to link\
            \ the multiple payments to each other. As your own reference for linking\
            \ multiple payments, use the `merchantOrderReference`instead."
          title: orderReference
          type: string
        origin:
          description: |-
            Required for the 3D Secure 2 `channel` **Web** integration.

            Set this parameter to the origin URL of the page that you are loading the 3D Secure Component from.
          maxLength: 80
          title: origin
          type: string
          x-addedInVersion: "40"
        paymentMethod:
          $ref: '#/components/schemas/PaymentRequest_paymentMethod'
        platformChargebackLogic:
          $ref: '#/components/schemas/PlatformChargebackLogic'
        recurringExpiry:
          description: Date after which no further authorisations shall be performed.
            Only for 3D Secure 2.
          title: recurringExpiry
          type: string
        recurringFrequency:
          description: Minimum number of days between authorisations. Only for 3D
            Secure 2.
          title: recurringFrequency
          type: string
        recurringProcessingModel:
          description: |
            Defines a recurring payment type. Required when creating a token to store payment details or using stored payment details.
            Allowed values:
            * `Subscription` – A transaction for a fixed or variable amount, which follows a fixed schedule.
            * `CardOnFile` – With a card-on-file (CoF) transaction, card details are stored to enable one-click or omnichannel journeys, or simply to streamline the checkout process. Any subscription not following a fixed schedule is also considered a card-on-file transaction.
            * `UnscheduledCardOnFile` – An unscheduled card-on-file (UCoF) transaction is a transaction that occurs on a non-fixed schedule and/or have variable amounts. For example, automatic top-ups when a cardholder's balance drops below a certain amount.
          enum:
          - CardOnFile
          - Subscription
          - UnscheduledCardOnFile
          title: recurringProcessingModel
          type: string
          x-addedInVersion: "30"
        redirectFromIssuerMethod:
          description: Specifies the redirect method (GET or POST) when redirecting
            back from the issuer.
          title: redirectFromIssuerMethod
          type: string
          x-addedInVersion: "32"
        redirectToIssuerMethod:
          description: Specifies the redirect method (GET or POST) when redirecting
            to the issuer.
          title: redirectToIssuerMethod
          type: string
          x-addedInVersion: "32"
        reference:
          description: |-
            The reference to uniquely identify a payment. This reference is used in all communication with you about the payment status. We recommend using a unique value per payment; however, it is not a requirement.
            If you need to provide multiple references for a transaction, separate them with hyphens ("-").
            Maximum length: 80 characters.
          title: reference
          type: string
        returnUrl:
          description: "The URL to return to in case of a redirection.\nThe format\
            \ depends on the channel. \n* For web, include the protocol `http://`\
            \ or `https://`. You can also include your own additional query parameters,\
            \ for example, shopper ID or order reference number.\nExample: `https://your-company.com/checkout?shopperOrder=12xy`\n\
            * For iOS, use the custom URL for your app. To know more about setting\
            \ custom URL schemes, refer to the [Apple Developer documentation](https://developer.apple.com/documentation/uikit/inter-process_communication/allowing_apps_and_websites_to_link_to_your_content/defining_a_custom_url_scheme_for_your_app).\n\
            Example: `my-app://`\n* For Android, use a custom URL handled by an Activity\
            \ on your app. You can configure it with an [intent filter](https://developer.android.com/guide/components/intents-filters).\n\
            Example: `my-app://your.package.name`"
          title: returnUrl
          type: string
        riskData:
          $ref: '#/components/schemas/RiskData'
        sessionValidity:
          description: |-
            The date and time until when the session remains valid, in [ISO 8601](https://www.w3.org/TR/NOTE-datetime) format.

            For example: 2020-07-18T15:42:40.428+01:00
          title: sessionValidity
          type: string
        shopperEmail:
          description: |-
            The shopper's email address. We recommend that you provide this data, as it is used in velocity fraud checks.
            > For 3D Secure 2 transactions, schemes require `shopperEmail` for all browser-based and mobile implementations.
          title: shopperEmail
          type: string
        shopperIP:
          description: |-
            The shopper's IP address. In general, we recommend that you provide this data, as it is used in a number of risk checks (for instance, number of payment attempts or location-based checks).
            > For 3D Secure 2 transactions, schemes require `shopperIP` for all browser-based implementations.
            This field is also mandatory for some merchants depending on your business model. For more information, [contact Support](https://www.adyen.help/hc/en-us/requests/new).
          title: shopperIP
          type: string
        shopperInteraction:
          description: |-
            Specifies the sales channel, through which the shopper gives their card details, and whether the shopper is a returning customer.
            For the web service API, Adyen assumes Ecommerce shopper interaction by default.

            This field has the following possible values:
            * `Ecommerce` - Online transactions where the cardholder is present (online). For better authorisation rates, we recommend sending the card security code (CSC) along with the request.
            * `ContAuth` - Card on file and/or subscription transactions, where the cardholder is known to the merchant (returning customer). If the shopper is present (online), you can supply also the CSC to improve authorisation (one-click payment).
            * `Moto` - Mail-order and telephone-order transactions where the shopper is in contact with the merchant via email or telephone.
            * `POS` - Point-of-sale transactions where the shopper is physically present to make a payment using a secure payment terminal.
          enum:
          - Ecommerce
          - ContAuth
          - Moto
          - POS
          title: shopperInteraction
          type: string
        shopperLocale:
          description: The combination of a language code and a country code to specify
            the language to be used in the payment.
          title: shopperLocale
          type: string
        shopperName:
          $ref: '#/components/schemas/Name'
        shopperReference:
          description: "Required for recurring payments. \nYour reference to uniquely\
            \ identify this shopper, for example user ID or account ID. Minimum length:\
            \ 3 characters.\n> Your reference must not include personally identifiable\
            \ information (PII), for example name or email address."
          maxLength: 256
          minLength: 3
          title: shopperReference
          type: string
        shopperStatement:
          description: |-
            The text to be shown on the shopper's bank statement.
             We recommend sending a maximum of 22 characters, otherwise banks might truncate the string.
             Allowed characters: **a-z**, **A-Z**, **0-9**, spaces, and special characters **. , ' _ - ? + * /**.
          title: shopperStatement
          type: string
        socialSecurityNumber:
          description: The shopper's social security number.
          title: socialSecurityNumber
          type: string
        splits:
          description: "An array of objects specifying how to split a payment when\
            \ using [Adyen for Platforms](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information),\
            \ [Classic Platforms integration](https://docs.adyen.com/marketplaces-and-platforms/classic/processing-payments#providing-split-information),\
            \ or [Issuing](https://docs.adyen.com/issuing/manage-funds#split)."
          items:
            $ref: '#/components/schemas/Split'
          title: splits
          type: array
          x-addedInVersion: "37"
        store:
          description: "Required for Adyen for Platforms integrations if you have\
            \ a platform setup. This is your [reference](https://docs.adyen.com/api-explorer/Management/3/post/merchants/(merchantId)/stores#request-reference)\
            \ (on [balance platform](https://docs.adyen.com/marketplaces-and-platforms/classic/platforms-for-partners#route-payments))\
            \ or the [storeReference](https://docs.adyen.com/api-explorer/Account/latest/post/updateAccountHolder#request-accountHolderDetails-storeDetails-storeReference)\
            \ (in the [classic integration](https://docs.adyen.com/marketplaces-and-platforms/processing-payments/route-payment-to-store/#route-a-payment-to-a-store))\
            \ for the ecommerce or point-of-sale store that is processing the payment."
          maxLength: 64
          minLength: 1
          title: store
          type: string
        storePaymentMethod:
          description: "When true and `shopperReference` is provided, the payment\
            \ details will be stored."
          title: storePaymentMethod
          type: boolean
          x-addedInVersion: "49"
        telephoneNumber:
          description: The shopper's telephone number.
          title: telephoneNumber
          type: string
        threeDS2RequestData:
          $ref: '#/components/schemas/ThreeDS2RequestFields'
        threeDSAuthenticationOnly:
          default: false
          deprecated: true
          description: "If set to true, you will only perform the [3D Secure 2 authentication](https://docs.adyen.com/online-payments/3d-secure/other-3ds-flows/authentication-only),\
            \ and not the payment authorisation."
          title: threeDSAuthenticationOnly
          type: boolean
          x-addedInVersion: "50"
          x-deprecatedInVersion: "69"
          x-deprecatedMessage: Use `authenticationData.authenticationOnly` instead.
        trustedShopper:
          description: Set to true if the payment should be routed to a trusted MID.
          title: trustedShopper
          type: boolean
          x-addedInVersion: "37"
      required:
      - amount
      - merchantAccount
      - paymentMethod
      - reference
      - returnUrl
      title: PaymentRequest
    PaymentResponse:
      example:
        threeDS2Result:
          whiteListStatus: whiteListStatus
          exemptionIndicator: lowValue
          challengeCancel: "01"
          eci: eci
          threeDSRequestorChallengeInd: "01"
          cavvAlgorithm: cavvAlgorithm
          dsTransID: dsTransID
          transStatusReason: transStatusReason
          messageVersion: messageVersion
          riskScore: riskScore
          authenticationValue: authenticationValue
          transStatus: transStatus
          threeDSServerTransID: threeDSServerTransID
          timestamp: timestamp
        amount:
          currency: currency
          value: 0
        resultCode: AuthenticationFinished
        fraudResult:
          accountScore: 6
          results:
          - accountScore: 1
            name: name
            checkId: 5
          - accountScore: 1
            name: name
            checkId: 5
        donationToken: donationToken
        refusalReasonCode: refusalReasonCode
        threeDSPaymentData: threeDSPaymentData
        action:
          paymentData: paymentData
          type: await
          paymentMethodType: paymentMethodType
          url: url
        paymentMethod:
          type: type
          brand: brand
        threeDS2ResponseData:
          acsTransID: acsTransID
          exemptionIndicator: exemptionIndicator
          cardHolderInfo: cardHolderInfo
          sdkEphemPubKey: sdkEphemPubKey
          acsURL: acsURL
          dsReferenceNumber: dsReferenceNumber
          acsReferenceNumber: acsReferenceNumber
          cavvAlgorithm: cavvAlgorithm
          challengeIndicator: challengeIndicator
          dsTransID: dsTransID
          transStatusReason: transStatusReason
          acsOperatorID: acsOperatorID
          authenticationType: authenticationType
          messageVersion: messageVersion
          riskScore: riskScore
          acsSignedContent: acsSignedContent
          acsChallengeMandated: acsChallengeMandated
          transStatus: transStatus
          threeDSServerTransID: threeDSServerTransID
        refusalReason: refusalReason
        additionalData:
          cavv: cavv
          cavvAlgorithm: cavvAlgorithm
          scaExemptionRequested: scaExemptionRequested
          threeds2.cardEnrolled: true
          cardHolderInfo: cardHolderInfo
        merchantReference: merchantReference
        pspReference: pspReference
        order:
          reference: reference
          remainingAmount:
            currency: currency
            value: 0
          amount:
            currency: currency
            value: 0
          orderData: orderData
          pspReference: pspReference
          expiresAt: expiresAt
      properties:
        action:
          $ref: '#/components/schemas/PaymentResponse_action'
        additionalData:
          $ref: '#/components/schemas/BalanceCheckResponse_additionalData'
        amount:
          $ref: '#/components/schemas/Amount'
        donationToken:
          description: Donation Token containing payment details for Adyen Giving.
          title: donationToken
          type: string
          x-addedInVersion: "66"
        fraudResult:
          $ref: '#/components/schemas/FraudResult'
        merchantReference:
          description: |-
            The reference to uniquely identify a payment. This reference is used in all communication with you about the payment status. We recommend using a unique value per payment; however, it is not a requirement.
            If you need to provide multiple references for a transaction, separate them with hyphens ("-").
            Maximum length: 80 characters.
          title: merchantReference
          type: string
          x-addedInVersion: "49"
        order:
          $ref: '#/components/schemas/CheckoutOrderResponse'
        paymentMethod:
          $ref: '#/components/schemas/ResponsePaymentMethod'
        pspReference:
          description: |-
            Adyen's 16-character string reference associated with the transaction/request. This value is globally unique; quote it when communicating with us about this request.

            > For payment methods that require a redirect or additional action, you will get this value in the `/payments/details` response.
          title: pspReference
          type: string
        refusalReason:
          description: |-
            If the payment's authorisation is refused or an error occurs during authorisation, this field holds Adyen's mapped reason for the refusal or a description of the error. When a transaction fails, the authorisation response includes `resultCode` and `refusalReason` values.

            For more information, see [Refusal reasons](https://docs.adyen.com/development-resources/refusal-reasons).
          title: refusalReason
          type: string
        refusalReasonCode:
          description: "Code that specifies the refusal reason. For more information,\
            \ see [Authorisation refusal reasons](https://docs.adyen.com/development-resources/refusal-reasons)."
          title: refusalReasonCode
          type: string
          x-addedInVersion: "37"
        resultCode:
          description: |-
            The result of the payment. For more information, see [Result codes](https://docs.adyen.com/online-payments/payment-result-codes).

            Possible values:

            * **AuthenticationFinished** – The payment has been successfully authenticated with 3D Secure 2. Returned for 3D Secure 2 authentication-only transactions.
            * **AuthenticationNotRequired** – The transaction does not require 3D Secure authentication. Returned for [standalone authentication-only integrations](https://docs.adyen.com/online-payments/3d-secure/other-3ds-flows/authentication-only).
            * **Authorised** – The payment was successfully authorised. This state serves as an indicator to proceed with the delivery of goods and services. This is a final state.
            * **Cancelled** – Indicates the payment has been cancelled (either by the shopper or the merchant) before processing was completed. This is a final state.
            * **ChallengeShopper** – The issuer requires further shopper interaction before the payment can be authenticated. Returned for 3D Secure 2 transactions.
            * **Error** – There was an error when the payment was being processed. The reason is given in the `refusalReason` field. This is a final state.
            * **IdentifyShopper** – The issuer requires the shopper's device fingerprint before the payment can be authenticated. Returned for 3D Secure 2 transactions.
            * **PartiallyAuthorised** – The payment has been authorised for a partial amount.
            This happens for card payments when the merchant supports Partial Authorisations and the cardholder has insufficient funds.
            * **Pending** – Indicates that it is not possible to obtain the final status of the payment. This can happen if the systems providing final status information for the payment are unavailable, or if the shopper needs to take further action to complete the payment.
            * **PresentToShopper** – Indicates that the response contains additional information that you need to present to a shopper, so that they can use it to complete a payment.
            * **Received** – Indicates the payment has successfully been received by Adyen, and will be processed. This is the initial state for all payments.
            * **RedirectShopper** – Indicates the shopper should be redirected to an external web page or app to complete the authorisation.
            * **Refused** – Indicates the payment was refused. The reason is given in the `refusalReason` field. This is a final state.
          enum:
          - AuthenticationFinished
          - AuthenticationNotRequired
          - Authorised
          - Cancelled
          - ChallengeShopper
          - Error
          - IdentifyShopper
          - PartiallyAuthorised
          - Pending
          - PresentToShopper
          - Received
          - RedirectShopper
          - Refused
          - Success
          title: resultCode
          type: string
        threeDS2ResponseData:
          $ref: '#/components/schemas/ThreeDS2ResponseData'
        threeDS2Result:
          $ref: '#/components/schemas/ThreeDS2Result'
        threeDSPaymentData:
          description: "When non-empty, contains a value that you must submit to the\
            \ `/payments/details` endpoint as `paymentData`."
          title: threeDSPaymentData
          type: string
          x-addedInVersion: "67"
      title: PaymentResponse
    PaymentReversalRequest:
      example:
        reference: reference
        merchantAccount: merchantAccount
        applicationInfo:
          adyenLibrary:
            name: name
            version: version
          merchantApplication:
            name: name
            version: version
          adyenPaymentSource:
            name: name
            version: version
          merchantDevice:
            reference: reference
            os: os
            osVersion: osVersion
          shopperInteractionDevice:
            os: os
            osVersion: osVersion
            locale: locale
          externalPlatform:
            name: name
            integrator: integrator
            version: version
      properties:
        applicationInfo:
          $ref: '#/components/schemas/ApplicationInfo'
        merchantAccount:
          description: The merchant account that is used to process the payment.
          title: merchantAccount
          type: string
        reference:
          description: "Your reference for the reversal request. Maximum length: 80\
            \ characters."
          title: reference
          type: string
      required:
      - merchantAccount
      title: PaymentReversalRequest
    PaymentReversalResponse:
      example:
        reference: reference
        merchantAccount: merchantAccount
        paymentPspReference: paymentPspReference
        pspReference: pspReference
        status: received
      properties:
        merchantAccount:
          description: The merchant account that is used to process the payment.
          title: merchantAccount
          type: string
        paymentPspReference:
          description: "The [`pspReference`](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/payments__resParam_pspReference)\
            \ of the payment to reverse. "
          title: paymentPspReference
          type: string
        pspReference:
          description: Adyen's 16-character reference associated with the reversal
            request.
          title: pspReference
          type: string
        reference:
          description: Your reference for the reversal request.
          title: reference
          type: string
        status:
          description: The status of your request. This will always have the value
            **received**.
          enum:
          - received
          title: status
          type: string
      required:
      - merchantAccount
      - paymentPspReference
      - pspReference
      - status
      title: PaymentReversalResponse
    PaymentSetupRequest:
      example:
        dccQuote:
          reference: reference
          validTill: 2000-01-23T04:56:07.000+00:00
          signature: signature
          accountType: accountType
          buy:
            currency: currency
            value: 0
          sell:
            currency: currency
            value: 0
          interbank:
            currency: currency
            value: 0
          source: source
          type: type
          basePoints: 2
          account: account
          baseAmount:
            currency: currency
            value: 0
        metadata:
          key: metadata
        sessionValidity: sessionValidity
        splits:
        - reference: reference
          amount:
            currency: currency
            value: 5
          description: description
          type: AcquiringFees
          account: account
        - reference: reference
          amount:
            currency: currency
            value: 5
          description: description
          type: AcquiringFees
          account: account
        channel: iOS
        platformChargebackLogic:
          costAllocationAccount: costAllocationAccount
          targetAccount: targetAccount
          behavior: deductAccordingToSplitRatio
        checkoutAttemptId: checkoutAttemptId
        mcc: mcc
        threeDSAuthenticationOnly: false
        lineItems:
        - quantity: 1
          itemCategory: itemCategory
          amountExcludingTax: 1
          imageUrl: imageUrl
          taxPercentage: 7
          description: description
          id: id
          amountIncludingTax: 1
          productUrl: productUrl
          taxAmount: 6
        - quantity: 1
          itemCategory: itemCategory
          amountExcludingTax: 1
          imageUrl: imageUrl
          taxPercentage: 7
          description: description
          id: id
          amountIncludingTax: 1
          productUrl: productUrl
          taxAmount: 6
        reference: reference
        deliveryAddress:
          country: country
          stateOrProvince: stateOrProvince
          city: city
          houseNumberOrName: houseNumberOrName
          street: street
          postalCode: postalCode
        installments:
          plan: regular
          value: 7
        additionalData:
          challengeWindowSize: "01"
          mpiImplementationType: mpiImplementationType
          allow3DS2: allow3DS2
          executeThreeD: executeThreeD
          threeDSVersion: threeDSVersion
          scaExemption: scaExemption
        blockedPaymentMethods:
        - blockedPaymentMethods
        - blockedPaymentMethods
        trustedShopper: true
        enablePayOut: true
        fraudOffset: 1
        additionalAmount:
          currency: currency
          value: 0
        entityType: NaturalPerson
        shopperEmail: shopperEmail
        enableOneClick: true
        orderReference: orderReference
        sdkVersion: sdkVersion
        shopperLocale: shopperLocale
        captureDelayHours: 0
        applicationInfo:
          adyenLibrary:
            name: name
            version: version
          merchantApplication:
            name: name
            version: version
          adyenPaymentSource:
            name: name
            version: version
          merchantDevice:
            reference: reference
            os: os
            osVersion: osVersion
          shopperInteractionDevice:
            os: os
            osVersion: osVersion
            locale: locale
          externalPlatform:
            name: name
            integrator: integrator
            version: version
        shopperReference: shopperReference
        shopperStatement: shopperStatement
        mandate:
          amount: amount
          amountRule: max
          billingDay: billingDay
          startsAt: startsAt
          billingAttemptsRule: true
          endsAt: endsAt
          remarks: remarks
          frequency: adhoc
        recurringFrequency: recurringFrequency
        telephoneNumber: telephoneNumber
        localizedShopperStatement:
          key: localizedShopperStatement
        configuration:
          cardHolderName: NONE
          installments:
            maxNumberOfInstallments: 6
          shopperInput:
            deliveryAddress: editable
            personalDetails: editable
            billingAddress: editable
          avs:
            addressEditable: true
            enabled: true
        socialSecurityNumber: socialSecurityNumber
        origin: origin
        shopperIP: shopperIP
        recurringExpiry: recurringExpiry
        shopperName:
          firstName: firstName
          lastName: lastName
        countryCode: countryCode
        shopperInteraction: Ecommerce
        company:
          registrationNumber: registrationNumber
          registryLocation: registryLocation
          taxId: taxId
          name: name
          type: type
          homepage: homepage
        deliveryDate: 2000-01-23T04:56:07.000+00:00
        returnUrl: returnUrl
        conversionId: conversionId
        merchantOrderReference: merchantOrderReference
        amount:
          currency: currency
          value: 0
        dateOfBirth: 2000-01-23
        store: store
        allowedPaymentMethods:
        - allowedPaymentMethods
        - allowedPaymentMethods
        riskData:
          fraudOffset: 4
          customFields:
            key: customFields
          profileReference: profileReference
          clientData: clientData
        token: token
        storePaymentMethod: true
        merchantAccount: merchantAccount
        billingAddress:
          country: country
          stateOrProvince: stateOrProvince
          city: city
          houseNumberOrName: houseNumberOrName
          street: street
          postalCode: postalCode
        enableRecurring: true
      properties:
        additionalAmount:
          $ref: '#/components/schemas/Amount'
        additionalData:
          $ref: '#/components/schemas/BalanceCheckRequest_additionalData'
        allowedPaymentMethods:
          description: |-
            List of payment methods to be presented to the shopper. To refer to payment methods, use their [payment method type](https://docs.adyen.com/payment-methods/payment-method-types).

            Example: `"allowedPaymentMethods":["ideal","giropay"]`
          items:
            type: string
          title: allowedPaymentMethods
          type: array
          x-addedInVersion: "33"
        amount:
          $ref: '#/components/schemas/Amount'
        applicationInfo:
          $ref: '#/components/schemas/ApplicationInfo'
        billingAddress:
          $ref: '#/components/schemas/Address'
        blockedPaymentMethods:
          description: |-
            List of payment methods to be hidden from the shopper. To refer to payment methods, use their [payment method type](https://docs.adyen.com/payment-methods/payment-method-types).

            Example: `"blockedPaymentMethods":["ideal","giropay"]`
          items:
            type: string
          title: blockedPaymentMethods
          type: array
          x-addedInVersion: "33"
        captureDelayHours:
          description: "The delay between the authorisation and scheduled auto-capture,\
            \ specified in hours."
          format: int32
          title: captureDelayHours
          type: integer
          x-addedInVersion: "2"
        channel:
          description: |-
            The platform where a payment transaction takes place. This field is optional for filtering out payment methods that are only available on specific platforms. If this value is not set, then we will try to infer it from the `sdkVersion` or `token`.

            Possible values:
            * iOS
            * Android
            * Web
          enum:
          - iOS
          - Android
          - Web
          title: channel
          type: string
        checkoutAttemptId:
          description: Checkout attempt ID that corresponds to the Id generated by
            the client SDK for tracking user payment journey.
          title: checkoutAttemptId
          type: string
          x-addedInVersion: "68"
        company:
          $ref: '#/components/schemas/Company'
        configuration:
          $ref: '#/components/schemas/Configuration'
        conversionId:
          deprecated: true
          description: Conversion ID that corresponds to the Id generated by the client
            SDK for tracking user payment journey.
          title: conversionId
          type: string
          x-addedInVersion: "49"
          x-deprecatedInVersion: "68"
          x-deprecatedMessage: Use `checkoutAttemptId` instead
        countryCode:
          description: |-
            The shopper country.

            Format: [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
            Example: NL or DE
          title: countryCode
          type: string
        dateOfBirth:
          description: |-
            The shopper's date of birth.

            Format [ISO-8601](https://www.w3.org/TR/NOTE-datetime): YYYY-MM-DD
          format: date
          title: dateOfBirth
          type: string
          x-addedInVersion: "7"
        dccQuote:
          $ref: '#/components/schemas/ForexQuote'
        deliveryAddress:
          $ref: '#/components/schemas/Address'
        deliveryDate:
          description: |-
            The date and time the purchased goods should be delivered.

            Format [ISO 8601](https://www.w3.org/TR/NOTE-datetime): YYYY-MM-DDThh:mm:ss.sssTZD

            Example: 2017-07-17T13:42:40.428+01:00
          format: date-time
          title: deliveryDate
          type: string
          x-addedInVersion: "8"
        enableOneClick:
          description: "When true and `shopperReference` is provided, the shopper\
            \ will be asked if the payment details should be stored for future one-click\
            \ payments."
          title: enableOneClick
          type: boolean
          x-addedInVersion: "32"
        enablePayOut:
          description: "When true and `shopperReference` is provided, the payment\
            \ details will be tokenized for payouts."
          title: enablePayOut
          type: boolean
          x-addedInVersion: "32"
        enableRecurring:
          description: "When true and `shopperReference` is provided, the payment\
            \ details will be tokenized for recurring payments."
          title: enableRecurring
          type: boolean
          x-addedInVersion: "32"
        entityType:
          description: The type of the entity the payment is processed for.
          enum:
          - NaturalPerson
          - CompanyName
          title: entityType
          type: string
          x-addedInVersion: "24"
        fraudOffset:
          description: An integer value that is added to the normal fraud score. The
            value can be either positive or negative.
          format: int32
          title: fraudOffset
          type: integer
        installments:
          $ref: '#/components/schemas/Installments'
        lineItems:
          description: |-
            Price and product information of the refunded items, required for [partial refunds](https://docs.adyen.com/online-payments/refund#refund-a-payment).
            > This field is required for partial refunds with 3x 4x Oney, Affirm, Afterpay, Atome, Clearpay, Klarna, Ratepay, Walley, and Zip.
          items:
            $ref: '#/components/schemas/LineItem'
          title: lineItems
          type: array
          x-addedInVersion: "32"
        localizedShopperStatement:
          additionalProperties:
            type: string
          description: "The `localizedShopperStatement` field lets you use dynamic\
            \ values for your shopper statement in a local character set.\nIf not\
            \ supplied, left empty, or for cross-border transactions, **shopperStatement**\
            \ is used.\n\nAdyen currently supports the ja-Kana character set for Visa\
            \ and Mastercard payments in Japan using Japanese cards. This character\
            \ set supports:\n\n* UTF-8 based Katakana, capital letters, numbers and\
            \ special characters. \n* Half-width or full-width characters."
          title: localizedShopperStatement
          x-addedInVersion: "68"
        mandate:
          $ref: '#/components/schemas/Mandate'
        mcc:
          description: "The [merchant category code](https://en.wikipedia.org/wiki/Merchant_category_code)\
            \ (MCC) is a four-digit number, which relates to a particular market segment.\
            \ This code reflects the predominant activity that is conducted by the\
            \ merchant."
          title: mcc
          type: string
          x-addedInVersion: "12"
        merchantAccount:
          description: "The merchant account identifier, with which you want to process\
            \ the transaction."
          title: merchantAccount
          type: string
        merchantOrderReference:
          description: |-
            This reference allows linking multiple transactions to each other for reporting purposes (i.e. order auth-rate). The reference should be unique per billing cycle.
            The same merchant order reference should never be reused after the first authorised attempt. If used, this field should be supplied for all incoming authorisations.
            > We strongly recommend you send the `merchantOrderReference` value to benefit from linking payment requests when authorisation retries take place. In addition, we recommend you provide `retry.orderAttemptNumber`, `retry.chainAttemptNumber`, and `retry.skipRetry` values in `PaymentRequest.additionalData`.
          title: merchantOrderReference
          type: string
          x-addedInVersion: "9"
        metadata:
          additionalProperties:
            type: string
          description: "Metadata consists of entries, each of which includes a key\
            \ and a value.\nLimits:\n* Maximum 20 key-value pairs per request. When\
            \ exceeding, the \"177\" error occurs: \"Metadata size exceeds limit\"\
            .\n* Maximum 20 characters per key.\n* Maximum 80 characters per value. "
          title: metadata
          x-addedInVersion: "17"
        orderReference:
          description: "When you are doing multiple partial (gift card) payments,\
            \ this is the `pspReference` of the first payment. We use this to link\
            \ the multiple payments to each other. As your own reference for linking\
            \ multiple payments, use the `merchantOrderReference`instead."
          title: orderReference
          type: string
        origin:
          description: |-
            Required for the Web integration.

            Set this parameter to the origin URL of the page that you are loading the SDK from.
          title: origin
          type: string
        platformChargebackLogic:
          $ref: '#/components/schemas/PlatformChargebackLogic'
        recurringExpiry:
          description: Date after which no further authorisations shall be performed.
            Only for 3D Secure 2.
          title: recurringExpiry
          type: string
        recurringFrequency:
          description: Minimum number of days between authorisations. Only for 3D
            Secure 2.
          title: recurringFrequency
          type: string
        reference:
          description: |-
            The reference to uniquely identify a payment. This reference is used in all communication with you about the payment status. We recommend using a unique value per payment; however, it is not a requirement.
            If you need to provide multiple references for a transaction, separate them with hyphens ("-").
            Maximum length: 80 characters.
          title: reference
          type: string
        returnUrl:
          description: |-
            The URL to return to in case of a redirection.
            The format depends on the channel. This URL can have a maximum of 1024 characters.
            * For web, include the protocol `http://` or `https://`. You can also include your own additional query parameters, for example, shopper ID or order reference number.
            Example: `https://your-company.com/checkout?shopperOrder=12xy`
            * For iOS, use the custom URL for your app. To know more about setting custom URL schemes, refer to the [Apple Developer documentation](https://developer.apple.com/documentation/uikit/inter-process_communication/allowing_apps_and_websites_to_link_to_your_content/defining_a_custom_url_scheme_for_your_app).
            Example: `my-app://`
            * For Android, use a custom URL handled by an Activity on your app. You can configure it with an [intent filter](https://developer.android.com/guide/components/intents-filters).
            Example: `my-app://your.package.name`
          maxLength: 8000
          title: returnUrl
          type: string
        riskData:
          $ref: '#/components/schemas/RiskData'
        sdkVersion:
          description: The version of the SDK you are using (for Web SDK integrations
            only).
          title: sdkVersion
          type: string
          x-addedInVersion: "32"
        sessionValidity:
          description: |-
            The date and time until when the session remains valid, in [ISO 8601](https://www.w3.org/TR/NOTE-datetime) format.

            For example: 2020-07-18T15:42:40.428+01:00
          title: sessionValidity
          type: string
        shopperEmail:
          description: |-
            The shopper's email address. We recommend that you provide this data, as it is used in velocity fraud checks.
            > For 3D Secure 2 transactions, schemes require `shopperEmail` for all browser-based and mobile implementations.
          title: shopperEmail
          type: string
        shopperIP:
          description: |-
            The shopper's IP address. In general, we recommend that you provide this data, as it is used in a number of risk checks (for instance, number of payment attempts or location-based checks).
            > For 3D Secure 2 transactions, schemes require `shopperIP` for all browser-based implementations.
            This field is also mandatory for some merchants depending on your business model. For more information, [contact Support](https://www.adyen.help/hc/en-us/requests/new).
          title: shopperIP
          type: string
        shopperInteraction:
          description: |-
            Specifies the sales channel, through which the shopper gives their card details, and whether the shopper is a returning customer.
            For the web service API, Adyen assumes Ecommerce shopper interaction by default.

            This field has the following possible values:
            * `Ecommerce` - Online transactions where the cardholder is present (online). For better authorisation rates, we recommend sending the card security code (CSC) along with the request.
            * `ContAuth` - Card on file and/or subscription transactions, where the cardholder is known to the merchant (returning customer). If the shopper is present (online), you can supply also the CSC to improve authorisation (one-click payment).
            * `Moto` - Mail-order and telephone-order transactions where the shopper is in contact with the merchant via email or telephone.
            * `POS` - Point-of-sale transactions where the shopper is physically present to make a payment using a secure payment terminal.
          enum:
          - Ecommerce
          - ContAuth
          - Moto
          - POS
          title: shopperInteraction
          type: string
        shopperLocale:
          description: The combination of a language code and a country code to specify
            the language to be used in the payment.
          title: shopperLocale
          type: string
          x-addedInVersion: "7"
        shopperName:
          $ref: '#/components/schemas/Name'
        shopperReference:
          description: "Required for recurring payments. \nYour reference to uniquely\
            \ identify this shopper, for example user ID or account ID. Minimum length:\
            \ 3 characters.\n> Your reference must not include personally identifiable\
            \ information (PII), for example name or email address."
          title: shopperReference
          type: string
        shopperStatement:
          description: |-
            The text to be shown on the shopper's bank statement.
             We recommend sending a maximum of 22 characters, otherwise banks might truncate the string.
             Allowed characters: **a-z**, **A-Z**, **0-9**, spaces, and special characters **. , ' _ - ? + * /**.
          title: shopperStatement
          type: string
        socialSecurityNumber:
          description: The shopper's social security number.
          title: socialSecurityNumber
          type: string
          x-addedInVersion: "4"
        splits:
          description: "An array of objects specifying how the payment should be split\
            \ when using [Adyen for Platforms](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information)\
            \ or [Issuing](https://docs.adyen.com/issuing/add-manage-funds#split)."
          items:
            $ref: '#/components/schemas/Split'
          title: splits
          type: array
          x-addedInVersion: "37"
        store:
          description: "Required for Adyen for Platforms integrations if you have\
            \ a platform setup. This is your [reference](https://docs.adyen.com/api-explorer/Management/3/post/merchants/(merchantId)/stores#request-reference)\
            \ (on [balance platform](https://docs.adyen.com/marketplaces-and-platforms/classic/platforms-for-partners#route-payments))\
            \ or the [storeReference](https://docs.adyen.com/api-explorer/Account/latest/post/updateAccountHolder#request-accountHolderDetails-storeDetails-storeReference)\
            \ (in the [classic integration](https://docs.adyen.com/marketplaces-and-platforms/processing-payments/route-payment-to-store/#route-a-payment-to-a-store))\
            \ for the ecommerce or point-of-sale store that is processing the payment."
          maxLength: 16
          minLength: 1
          title: store
          type: string
          x-addedInVersion: "23"
        storePaymentMethod:
          description: "When true and `shopperReference` is provided, the payment\
            \ details will be stored."
          title: storePaymentMethod
          type: boolean
          x-addedInVersion: "49"
        telephoneNumber:
          description: The shopper's telephone number.
          title: telephoneNumber
          type: string
          x-addedInVersion: "7"
        threeDSAuthenticationOnly:
          default: false
          deprecated: true
          description: "If set to true, you will only perform the [3D Secure 2 authentication](https://docs.adyen.com/online-payments/3d-secure/other-3ds-flows/authentication-only),\
            \ and not the payment authorisation."
          title: threeDSAuthenticationOnly
          type: boolean
          x-addedInVersion: "50"
          x-deprecatedInVersion: "69"
          x-deprecatedMessage: Use `authenticationData.authenticationOnly` instead.
        token:
          description: |-
            The token obtained when initializing the SDK.

            > This parameter is required for iOS and Android; not required for Web.
          title: token
          type: string
        trustedShopper:
          description: Set to true if the payment should be routed to a trusted MID.
          title: trustedShopper
          type: boolean
          x-addedInVersion: "37"
      required:
      - amount
      - countryCode
      - merchantAccount
      - reference
      - returnUrl
      title: PaymentSetupRequest
    PaymentSetupResponse:
      example:
        recurringDetails:
        - storedDetails:
            bank:
              ownerName: ownerName
              countryCode: countryCode
              taxId: taxId
              iban: iban
              bankAccountNumber: bankAccountNumber
              bankName: bankName
              bankLocationId: bankLocationId
              bic: bic
              bankCity: bankCity
            emailAddress: emailAddress
            card:
              cvc: cvc
              number: number
              holderName: holderName
              startMonth: startMonth
              issueNumber: issueNumber
              expiryMonth: expiryMonth
              startYear: startYear
              expiryYear: expiryYear
          brands:
          - brands
          - brands
          configuration:
            key: configuration
          name: name
          recurringDetailReference: recurringDetailReference
          inputDetails:
          - configuration:
              key: configuration
            details:
            - configuration:
                key: configuration
              optional: true
              type: type
              items:
              - name: name
                id: id
              - name: name
                id: id
              value: value
              key: key
            - configuration:
                key: configuration
              optional: true
              type: type
              items:
              - name: name
                id: id
              - name: name
                id: id
              value: value
              key: key
            optional: true
            inputDetails:
            - configuration:
                key: configuration
              optional: true
              type: type
              items:
              - name: name
                id: id
              - name: name
                id: id
              value: value
              key: key
            - configuration:
                key: configuration
              optional: true
              type: type
              items:
              - name: name
                id: id
              - name: name
                id: id
              value: value
              key: key
            type: type
            items:
            - name: name
              id: id
            - name: name
              id: id
            value: value
            key: key
            itemSearchUrl: itemSearchUrl
          - configuration:
              key: configuration
            details:
            - configuration:
                key: configuration
              optional: true
              type: type
              items:
              - name: name
                id: id
              - name: name
                id: id
              value: value
              key: key
            - configuration:
                key: configuration
              optional: true
              type: type
              items:
              - name: name
                id: id
              - name: name
                id: id
              value: value
              key: key
            optional: true
            inputDetails:
            - configuration:
                key: configuration
              optional: true
              type: type
              items:
              - name: name
                id: id
              - name: name
                id: id
              value: value
              key: key
            - configuration:
                key: configuration
              optional: true
              type: type
              items:
              - name: name
                id: id
              - name: name
                id: id
              value: value
              key: key
            type: type
            items:
            - name: name
              id: id
            - name: name
              id: id
            value: value
            key: key
            itemSearchUrl: itemSearchUrl
          fundingSource: credit
          issuers:
          - name: name
            disabled: false
            id: id
          - name: name
            disabled: false
            id: id
          type: type
          brand: brand
          group:
            paymentMethodData: paymentMethodData
            name: name
            type: type
        - storedDetails:
            bank:
              ownerName: ownerName
              countryCode: countryCode
              taxId: taxId
              iban: iban
              bankAccountNumber: bankAccountNumber
              bankName: bankName
              bankLocationId: bankLocationId
              bic: bic
              bankCity: bankCity
            emailAddress: emailAddress
            card:
              cvc: cvc
              number: number
              holderName: holderName
              startMonth: startMonth
              issueNumber: issueNumber
              expiryMonth: expiryMonth
              startYear: startYear
              expiryYear: expiryYear
          brands:
          - brands
          - brands
          configuration:
            key: configuration
          name: name
          recurringDetailReference: recurringDetailReference
          inputDetails:
          - configuration:
              key: configuration
            details:
            - configuration:
                key: configuration
              optional: true
              type: type
              items:
              - name: name
                id: id
              - name: name
                id: id
              value: value
              key: key
            - configuration:
                key: configuration
              optional: true
              type: type
              items:
              - name: name
                id: id
              - name: name
                id: id
              value: value
              key: key
            optional: true
            inputDetails:
            - configuration:
                key: configuration
              optional: true
              type: type
              items:
              - name: name
                id: id
              - name: name
                id: id
              value: value
              key: key
            - configuration:
                key: configuration
              optional: true
              type: type
              items:
              - name: name
                id: id
              - name: name
                id: id
              value: value
              key: key
            type: type
            items:
            - name: name
              id: id
            - name: name
              id: id
            value: value
            key: key
            itemSearchUrl: itemSearchUrl
          - configuration:
              key: configuration
            details:
            - configuration:
                key: configuration
              optional: true
              type: type
              items:
              - name: name
                id: id
              - name: name
                id: id
              value: value
              key: key
            - configuration:
                key: configuration
              optional: true
              type: type
              items:
              - name: name
                id: id
              - name: name
                id: id
              value: value
              key: key
            optional: true
            inputDetails:
            - configuration:
                key: configuration
              optional: true
              type: type
              items:
              - name: name
                id: id
              - name: name
                id: id
              value: value
              key: key
            - configuration:
                key: configuration
              optional: true
              type: type
              items:
              - name: name
                id: id
              - name: name
                id: id
              value: value
              key: key
            type: type
            items:
            - name: name
              id: id
            - name: name
              id: id
            value: value
            key: key
            itemSearchUrl: itemSearchUrl
          fundingSource: credit
          issuers:
          - name: name
            disabled: false
            id: id
          - name: name
            disabled: false
            id: id
          type: type
          brand: brand
          group:
            paymentMethodData: paymentMethodData
            name: name
            type: type
        paymentSession: paymentSession
      properties:
        paymentSession:
          description: The encoded payment session that you need to pass to the SDK.
          title: paymentSession
          type: string
        recurringDetails:
          description: The detailed list of stored payment details required to generate
            payment forms. Will be empty if oneClick is set to false in the request.
          items:
            $ref: '#/components/schemas/RecurringDetail'
          title: recurringDetails
          type: array
      title: PaymentSetupResponse
    PaymentVerificationRequest:
      example:
        payload: payload
      properties:
        payload:
          description: Encrypted and signed payment result data. You should receive
            this value from the Checkout SDK after the shopper completes the payment.
          maxLength: 40000
          title: payload
          type: string
      required:
      - payload
      title: PaymentVerificationRequest
    PaymentVerificationResponse:
      example:
        refusalReasonCode: refusalReasonCode
        serviceError:
          errorType: errorType
          errorCode: errorCode
          message: message
          pspReference: pspReference
        resultCode: AuthenticationFinished
        refusalReason: refusalReason
        additionalData:
          cavv: cavv
          cavvAlgorithm: cavvAlgorithm
          scaExemptionRequested: scaExemptionRequested
          threeds2.cardEnrolled: true
          cardHolderInfo: cardHolderInfo
        shopperLocale: shopperLocale
        fraudResult:
          accountScore: 6
          results:
          - accountScore: 1
            name: name
            checkId: 5
          - accountScore: 1
            name: name
            checkId: 5
        merchantReference: merchantReference
        pspReference: pspReference
        order:
          reference: reference
          remainingAmount:
            currency: currency
            value: 0
          amount:
            currency: currency
            value: 0
          orderData: orderData
          pspReference: pspReference
          expiresAt: expiresAt
      properties:
        additionalData:
          $ref: '#/components/schemas/BalanceCheckResponse_additionalData'
        fraudResult:
          $ref: '#/components/schemas/FraudResult'
        merchantReference:
          description: A unique value that you provided in the initial `/paymentSession`
            request as a `reference` field.
          title: merchantReference
          type: string
        order:
          $ref: '#/components/schemas/CheckoutOrderResponse'
        pspReference:
          description: Adyen's 16-character reference associated with the transaction/request.
            This value is globally unique; quote it when communicating with us about
            this request.
          title: pspReference
          type: string
        refusalReason:
          description: |-
            If the payment's authorisation is refused or an error occurs during authorisation, this field holds Adyen's mapped reason for the refusal or a description of the error. When a transaction fails, the authorisation response includes `resultCode` and `refusalReason` values.

            For more information, see [Refusal reasons](https://docs.adyen.com/development-resources/refusal-reasons).
          title: refusalReason
          type: string
        refusalReasonCode:
          description: "Code that specifies the refusal reason. For more information,\
            \ see [Authorisation refusal reasons](https://docs.adyen.com/development-resources/refusal-reasons)."
          title: refusalReasonCode
          type: string
          x-addedInVersion: "37"
        resultCode:
          description: |-
            The result of the payment. For more information, see [Result codes](https://docs.adyen.com/online-payments/payment-result-codes).

            Possible values:

            * **AuthenticationFinished** – The payment has been successfully authenticated with 3D Secure 2. Returned for 3D Secure 2 authentication-only transactions.
            * **AuthenticationNotRequired** – The transaction does not require 3D Secure authentication. Returned for [standalone authentication-only integrations](https://docs.adyen.com/online-payments/3d-secure/other-3ds-flows/authentication-only).
            * **Authorised** – The payment was successfully authorised. This state serves as an indicator to proceed with the delivery of goods and services. This is a final state.
            * **Cancelled** – Indicates the payment has been cancelled (either by the shopper or the merchant) before processing was completed. This is a final state.
            * **ChallengeShopper** – The issuer requires further shopper interaction before the payment can be authenticated. Returned for 3D Secure 2 transactions.
            * **Error** – There was an error when the payment was being processed. The reason is given in the `refusalReason` field. This is a final state.
            * **IdentifyShopper** – The issuer requires the shopper's device fingerprint before the payment can be authenticated. Returned for 3D Secure 2 transactions.
            * **PartiallyAuthorised** – The payment has been authorised for a partial amount.
            This happens for card payments when the merchant supports Partial Authorisations and the cardholder has insufficient funds.
            * **Pending** – Indicates that it is not possible to obtain the final status of the payment. This can happen if the systems providing final status information for the payment are unavailable, or if the shopper needs to take further action to complete the payment.
            * **PresentToShopper** – Indicates that the response contains additional information that you need to present to a shopper, so that they can use it to complete a payment.
            * **Received** – Indicates the payment has successfully been received by Adyen, and will be processed. This is the initial state for all payments.
            * **RedirectShopper** – Indicates the shopper should be redirected to an external web page or app to complete the authorisation.
            * **Refused** – Indicates the payment was refused. The reason is given in the `refusalReason` field. This is a final state.
          enum:
          - AuthenticationFinished
          - AuthenticationNotRequired
          - Authorised
          - Cancelled
          - ChallengeShopper
          - Error
          - IdentifyShopper
          - PartiallyAuthorised
          - Pending
          - PresentToShopper
          - Received
          - RedirectShopper
          - Refused
          - Success
          title: resultCode
          type: string
        serviceError:
          $ref: '#/components/schemas/ServiceErrorDetails'
        shopperLocale:
          description: The shopperLocale value provided in the payment request.
          title: shopperLocale
          type: string
      required:
      - merchantReference
      - shopperLocale
      title: PaymentVerificationResponse
    Phone:
      example:
        cc: cc
        subscriber: subscriber
      properties:
        cc:
          description: "Country code. Length: 1–3 characters."
          maxLength: 3
          minLength: 1
          title: cc
          type: string
        subscriber:
          description: "Subscriber number. Maximum length: 15 characters."
          maxLength: 15
          title: subscriber
          type: string
      title: Phone
    PlatformChargebackLogic:
      example:
        costAllocationAccount: costAllocationAccount
        targetAccount: targetAccount
        behavior: deductAccordingToSplitRatio
      properties:
        behavior:
          description: |-
            The method of handling the chargeback.

            Possible values: **deductFromLiableAccount**, **deductFromOneBalanceAccount**, **deductAccordingToSplitRatio**.
          enum:
          - deductAccordingToSplitRatio
          - deductFromLiableAccount
          - deductFromOneBalanceAccount
          title: behavior
          type: string
          x-addedInVersion: "68"
        costAllocationAccount:
          description: "The unique identifier of the balance account to which the\
            \ chargeback fees are booked. By default, the chargeback fees are booked\
            \ to your liable balance account."
          title: costAllocationAccount
          type: string
          x-addedInVersion: "68"
        targetAccount:
          description: |-
            The unique identifier of the balance account against which the disputed amount is booked.

            Required if `behavior` is **deductFromOneBalanceAccount**.
          title: targetAccount
          type: string
          x-addedInVersion: "68"
      title: PlatformChargebackLogic
    RatepayDetails:
      additionalProperties: false
      properties:
        billingAddress:
          description: The address where to send the invoice.
          title: billingAddress
          type: string
        checkoutAttemptId:
          description: The checkout attempt identifier.
          title: checkoutAttemptId
          type: string
          x-addedInVersion: "68"
        deliveryAddress:
          description: The address where the goods should be delivered.
          title: deliveryAddress
          type: string
        personalDetails:
          description: "Shopper name, date of birth, phone number, and email address."
          title: personalDetails
          type: string
        recurringDetailReference:
          deprecated: true
          description: This is the `recurringDetailReference` returned in the response
            when you created the token.
          title: recurringDetailReference
          type: string
          x-deprecatedInVersion: "49"
          x-deprecatedMessage: Use `storedPaymentMethodId` instead.
        storedPaymentMethodId:
          description: This is the `recurringDetailReference` returned in the response
            when you created the token.
          maxLength: 64
          title: storedPaymentMethodId
          type: string
          x-addedInVersion: "49"
        type:
          default: ratepay
          description: '**ratepay**'
          enum:
          - ratepay
          - ratepay_directdebit
          title: type
          type: string
      required:
      - type
      title: Ratepay
    Recurring:
      example:
        recurringExpiry: 2000-01-23T04:56:07.000+00:00
        recurringFrequency: recurringFrequency
        tokenService: VISATOKENSERVICE
        contract: ONECLICK
        recurringDetailName: recurringDetailName
      properties:
        contract:
          description: |-
            The type of recurring contract to be used.
            Possible values:
            * `ONECLICK` – Payment details can be used to initiate a one-click payment, where the shopper enters the [card security code (CVC/CVV)](https://docs.adyen.com/payments-fundamentals/payment-glossary#card-security-code-cvc-cvv-cid).
            * `RECURRING` – Payment details can be used without the card security code to initiate [card-not-present transactions](https://docs.adyen.com/payments-fundamentals/payment-glossary#card-not-present-cnp).
            * `ONECLICK,RECURRING` – Payment details can be used regardless of whether the shopper is on your site or not.
            * `PAYOUT` – Payment details can be used to [make a payout](https://docs.adyen.com/online-payments/online-payouts).
          enum:
          - ONECLICK
          - RECURRING
          - PAYOUT
          title: contract
          type: string
        recurringDetailName:
          description: A descriptive name for this detail.
          title: recurringDetailName
          type: string
        recurringExpiry:
          description: Date after which no further authorisations shall be performed.
            Only for 3D Secure 2.
          format: date-time
          title: recurringExpiry
          type: string
          x-addedInVersion: "40"
        recurringFrequency:
          description: Minimum number of days between authorisations. Only for 3D
            Secure 2.
          title: recurringFrequency
          type: string
          x-addedInVersion: "40"
        tokenService:
          description: The name of the token service.
          enum:
          - VISATOKENSERVICE
          - MCTOKENSERVICE
          - AMEXTOKENSERVICE
          - TOKEN_SHARING
          title: tokenService
          type: string
          x-addedInVersion: "25"
      title: Recurring
    RecurringDetail:
      example:
        storedDetails:
          bank:
            ownerName: ownerName
            countryCode: countryCode
            taxId: taxId
            iban: iban
            bankAccountNumber: bankAccountNumber
            bankName: bankName
            bankLocationId: bankLocationId
            bic: bic
            bankCity: bankCity
          emailAddress: emailAddress
          card:
            cvc: cvc
            number: number
            holderName: holderName
            startMonth: startMonth
            issueNumber: issueNumber
            expiryMonth: expiryMonth
            startYear: startYear
            expiryYear: expiryYear
        brands:
        - brands
        - brands
        configuration:
          key: configuration
        name: name
        recurringDetailReference: recurringDetailReference
        inputDetails:
        - configuration:
            key: configuration
          details:
          - configuration:
              key: configuration
            optional: true
            type: type
            items:
            - name: name
              id: id
            - name: name
              id: id
            value: value
            key: key
          - configuration:
              key: configuration
            optional: true
            type: type
            items:
            - name: name
              id: id
            - name: name
              id: id
            value: value
            key: key
          optional: true
          inputDetails:
          - configuration:
              key: configuration
            optional: true
            type: type
            items:
            - name: name
              id: id
            - name: name
              id: id
            value: value
            key: key
          - configuration:
              key: configuration
            optional: true
            type: type
            items:
            - name: name
              id: id
            - name: name
              id: id
            value: value
            key: key
          type: type
          items:
          - name: name
            id: id
          - name: name
            id: id
          value: value
          key: key
          itemSearchUrl: itemSearchUrl
        - configuration:
            key: configuration
          details:
          - configuration:
              key: configuration
            optional: true
            type: type
            items:
            - name: name
              id: id
            - name: name
              id: id
            value: value
            key: key
          - configuration:
              key: configuration
            optional: true
            type: type
            items:
            - name: name
              id: id
            - name: name
              id: id
            value: value
            key: key
          optional: true
          inputDetails:
          - configuration:
              key: configuration
            optional: true
            type: type
            items:
            - name: name
              id: id
            - name: name
              id: id
            value: value
            key: key
          - configuration:
              key: configuration
            optional: true
            type: type
            items:
            - name: name
              id: id
            - name: name
              id: id
            value: value
            key: key
          type: type
          items:
          - name: name
            id: id
          - name: name
            id: id
          value: value
          key: key
          itemSearchUrl: itemSearchUrl
        fundingSource: credit
        issuers:
        - name: name
          disabled: false
          id: id
        - name: name
          disabled: false
          id: id
        type: type
        brand: brand
        group:
          paymentMethodData: paymentMethodData
          name: name
          type: type
      properties:
        brand:
          description: "Brand for the selected gift card. For example: plastix, hmclub."
          title: brand
          type: string
          x-addedInVersion: "65"
        brands:
          description: "List of possible brands. For example: visa, mc."
          items:
            type: string
          title: brands
          type: array
          x-addedInVersion: "49"
        configuration:
          additionalProperties:
            type: string
          description: The configuration of the payment method.
          title: configuration
        fundingSource:
          description: The funding source of the payment method.
          enum:
          - credit
          - debit
          title: fundingSource
          type: string
          x-addedInVersion: "53"
        group:
          $ref: '#/components/schemas/PaymentMethodGroup'
        inputDetails:
          description: All input details to be provided to complete the payment with
            this payment method.
          items:
            $ref: '#/components/schemas/InputDetail'
          title: inputDetails
          type: array
        issuers:
          description: A list of issuers for this payment method.
          items:
            $ref: '#/components/schemas/PaymentMethodIssuer'
          title: issuers
          type: array
          x-addedInVersion: "68"
        name:
          description: The displayable name of this payment method.
          title: name
          type: string
        recurringDetailReference:
          description: The reference that uniquely identifies the recurring detail.
          title: recurringDetailReference
          type: string
        storedDetails:
          $ref: '#/components/schemas/StoredDetails'
        type:
          description: The unique payment method code.
          title: type
          type: string
      title: RecurringDetail
    ResponseAdditionalData3DSecure:
      example:
        cavv: cavv
        cavvAlgorithm: cavvAlgorithm
        scaExemptionRequested: scaExemptionRequested
        threeds2.cardEnrolled: true
        cardHolderInfo: cardHolderInfo
      properties:
        cardHolderInfo:
          description: "Information provided by the issuer to the cardholder. If this\
            \ field is present, you need to display this information to the cardholder. "
          title: cardHolderInfo
          type: string
        cavv:
          description: "The Cardholder Authentication Verification Value (CAVV) for\
            \ the 3D Secure authentication session, as a Base64-encoded 20-byte array."
          title: cavv
          type: string
        cavvAlgorithm:
          description: The CAVV algorithm used.
          title: cavvAlgorithm
          type: string
        scaExemptionRequested:
          description: "Shows the [exemption type](https://docs.adyen.com/payments-fundamentals/psd2-sca-compliance-and-implementation-guide#specifypreferenceinyourapirequest)\
            \ that Adyen requested for the payment.\n\n Possible values:\n* **lowValue**\
            \ \n* **secureCorporate** \n* **trustedBeneficiary** \n* **transactionRiskAnalysis** "
          title: scaExemptionRequested
          type: string
        threeds2.cardEnrolled:
          description: Indicates whether a card is enrolled for 3D Secure 2.
          title: threeds2.cardEnrolled
          type: boolean
      title: ResponseAdditionalData3DSecure
    ResponseAdditionalDataBillingAddress:
      properties:
        billingAddress.city:
          description: The billing address city passed in the payment request.
          title: billingAddress.city
          type: string
        billingAddress.country:
          description: |-
            The billing address country passed in the payment request.

            Example: NL
          title: billingAddress.country
          type: string
        billingAddress.houseNumberOrName:
          description: The billing address house number or name passed in the payment
            request.
          title: billingAddress.houseNumberOrName
          type: string
        billingAddress.postalCode:
          description: |-
            The billing address postal code passed in the payment request.

            Example: 1011 DJ
          title: billingAddress.postalCode
          type: string
        billingAddress.stateOrProvince:
          description: |-
            The billing address state or province passed in the payment request.

            Example: NH
          title: billingAddress.stateOrProvince
          type: string
        billingAddress.street:
          description: The billing address street passed in the payment request.
          title: billingAddress.street
          type: string
      title: ResponseAdditionalDataBillingAddress
    ResponseAdditionalDataCard:
      properties:
        cardBin:
          description: |-
            The first six digits of the card number.

            This is the [Bank Identification Number (BIN)](https://docs.adyen.com/get-started-with-adyen/payment-glossary#bank-identification-number-bin) for card numbers with a six-digit BIN.

            Example: 521234
          title: cardBin
          type: string
        cardHolderName:
          description: The cardholder name passed in the payment request.
          title: cardHolderName
          type: string
        cardIssuingBank:
          description: The bank or the financial institution granting lines of credit
            through card association branded payment cards. This information can be
            included when available.
          title: cardIssuingBank
          type: string
        cardIssuingCountry:
          description: |-
            The country where the card was issued.

            Example: US
          title: cardIssuingCountry
          type: string
        cardIssuingCurrency:
          description: "The currency in which the card is issued, if this information\
            \ is available. Provided as the currency code or currency number from\
            \ the ISO-4217 standard. \n\nExample: USD"
          title: cardIssuingCurrency
          type: string
        cardPaymentMethod:
          description: |-
            The card payment method used for the transaction.

            Example: amex
          title: cardPaymentMethod
          type: string
        cardSummary:
          description: |-
            The last four digits of a card number.

            > Returned only in case of a card payment.
          title: cardSummary
          type: string
        issuerBin:
          description: |-
            The first eight digits of the card number. Only returned if the card number is 16 digits or more.

            This is the [Bank Identification Number (BIN)](https://docs.adyen.com/get-started-with-adyen/payment-glossary#bank-identification-number-bin) for card numbers with an eight-digit BIN.

            Example: 52123423
          title: issuerBin
          type: string
      title: ResponseAdditionalDataCard
    ResponseAdditionalDataCommon:
      properties:
        acquirerAccountCode:
          description: |-
            The name of the Adyen acquirer account.

            Example: PayPalSandbox_TestAcquirer

            > Only relevant for PayPal transactions.
          title: acquirerAccountCode
          type: string
        acquirerCode:
          description: |-
            The name of the acquirer processing the payment request.

            Example: TestPmmAcquirer
          title: acquirerCode
          type: string
        acquirerReference:
          description: |-
            The reference number that can be used for reconciliation in case a non-Adyen acquirer is used for settlement.

            Example: 7C9N3FNBKT9
          title: acquirerReference
          type: string
        alias:
          description: |-
            The Adyen alias of the card.

            Example: H167852639363479
          title: alias
          type: string
        aliasType:
          description: |-
            The type of the card alias.

            Example: Default
          title: aliasType
          type: string
        authCode:
          description: |-
            Authorisation code:
            * When the payment is authorised successfully, this field holds the authorisation code for the payment.
            * When the payment is not authorised, this field is empty.

            Example: 58747
          title: authCode
          type: string
        authorisationMid:
          description: Merchant ID known by the acquirer.
          title: authorisationMid
          type: string
        authorisedAmountCurrency:
          description: "The currency of the authorised amount, as a three-character\
            \ [ISO currency code](https://docs.adyen.com/development-resources/currency-codes)."
          title: authorisedAmountCurrency
          type: string
        authorisedAmountValue:
          description: |-
            Value of the amount authorised.

            This amount is represented in minor units according to the [following table](https://docs.adyen.com/development-resources/currency-codes).
          title: authorisedAmountValue
          type: string
        avsResult:
          description: |-
            The AVS result code of the payment, which provides information about the outcome of the AVS check.

            For possible values, see [AVS](https://docs.adyen.com/risk-management/configure-standard-risk-rules/consistency-rules#billing-address-does-not-match-cardholder-address-avs).
          title: avsResult
          type: string
        avsResultRaw:
          description: |-
            Raw AVS result received from the acquirer, where available.

            Example: D
          title: avsResultRaw
          type: string
        bic:
          description: |-
            BIC of a bank account.

            Example: TESTNL01

            > Only relevant for SEPA Direct Debit transactions.
          title: bic
          type: string
        coBrandedWith:
          description: Includes the co-branded card information.
          title: coBrandedWith
          type: string
        cvcResult:
          description: The result of CVC verification.
          title: cvcResult
          type: string
        cvcResultRaw:
          description: The raw result of CVC verification.
          title: cvcResultRaw
          type: string
        dsTransID:
          description: Supported for 3D Secure 2. The unique transaction identifier
            assigned by the DS to identify a single transaction.
          title: dsTransID
          type: string
        eci:
          description: |-
            The Electronic Commerce Indicator returned from the schemes for the 3DS payment session.

            Example: 02
          title: eci
          type: string
        expiryDate:
          description: |-
            The expiry date on the card.

            Example: 6/2016

            > Returned only in case of a card payment.
          title: expiryDate
          type: string
        extraCostsCurrency:
          description: |-
            The currency of the extra amount charged due to additional amounts set in the skin used in the HPP payment request.

            Example: EUR
          title: extraCostsCurrency
          type: string
        extraCostsValue:
          description: The value of the extra amount charged due to additional amounts
            set in the skin used in the HPP payment request. The amount is in minor
            units.
          title: extraCostsValue
          type: string
        fraudCheck-[itemNr]-[FraudCheckname]:
          description: The fraud score due to a particular fraud check. The fraud
            check name is found in the key of the key-value pair.
          title: "fraudCheck-[itemNr]-[FraudCheckname]"
          type: string
        fraudManualReview:
          description: Indicates if the payment is sent to manual review.
          title: fraudManualReview
          type: string
        fraudResultType:
          description: The fraud result properties of the payment.
          enum:
          - GREEN
          - FRAUD
          title: fraudResultType
          type: string
        fundingSource:
          description: |-
            Information regarding the funding type of the card. The possible return values are:
            * CHARGE
            * CREDIT
            * DEBIT
            * PREPAID
            * PREPAID_RELOADABLE

            * PREPAID_NONRELOADABLE
            * DEFFERED_DEBIT

            > This functionality requires additional configuration on Adyen's end. To enable it, contact the Support Team.

            For receiving this field in the notification, enable **Include Funding Source** in **Notifications** > **Additional settings**.
          title: fundingSource
          type: string
        fundsAvailability:
          description: |-
            Indicates availability of funds.

            Visa:
            * "I" (fast funds are supported)
            * "N" (otherwise)

            Mastercard:
            * "I" (product type is Prepaid or Debit, or issuing country is in CEE/HGEM list)
            * "N" (otherwise)

            > Returned when you verify a card BIN or estimate costs, and only if payoutEligible is "Y" or "D".
          title: fundsAvailability
          type: string
        inferredRefusalReason:
          description: |-
            Provides the more granular indication of why a transaction was refused. When a transaction fails with either "Refused", "Restricted Card", "Transaction Not Permitted", "Not supported" or "DeclinedNon Generic" refusalReason from the issuer, Adyen cross references its PSP-wide data for extra insight into the refusal reason. If an inferred refusal reason is available, the `inferredRefusalReason`, field is populated and the `refusalReason`, is set to "Not Supported".

            Possible values:

            * 3D Secure Mandated
            * Closed Account
            * ContAuth Not Supported
            * CVC Mandated
            * Ecommerce Not Allowed
            * Crossborder Not Supported
            * Card Updated

            * Low Authrate Bin
            * Non-reloadable prepaid card
          title: inferredRefusalReason
          type: string
        isCardCommercial:
          description: Indicates if the card is used for business purposes only.
          title: isCardCommercial
          type: string
        issuerCountry:
          description: |-
            The issuing country of the card based on the BIN list that Adyen maintains.

            Example: JP
          title: issuerCountry
          type: string
        liabilityShift:
          description: A Boolean value indicating whether a liability shift was offered
            for this payment.
          title: liabilityShift
          type: string
        mcBankNetReferenceNumber:
          description: |-
            The `mcBankNetReferenceNumber`, is a minimum of six characters and a maximum of nine characters long.

            > Contact Support Team to enable this field.
          title: mcBankNetReferenceNumber
          type: string
        merchantAdviceCode:
          description: |-
            The Merchant Advice Code (MAC) can be returned by Mastercard issuers for refused payments. If present, the MAC contains information about why the payment failed, and whether it can be retried.

            For more information see [Mastercard Merchant Advice Codes](https://docs.adyen.com/development-resources/raw-acquirer-responses#mastercard-merchant-advice-codes).
          title: merchantAdviceCode
          type: string
        merchantReference:
          description: The reference provided for the transaction.
          title: merchantReference
          type: string
        networkTxReference:
          description: |-
            Returned in the response if you are not tokenizing with Adyen and are using the Merchant-initiated transactions (MIT) framework from Mastercard or Visa.

            This contains either the Mastercard Trace ID or the Visa Transaction ID.
          title: networkTxReference
          type: string
        ownerName:
          description: |-
            The owner name of a bank account.

            Only relevant for SEPA Direct Debit transactions.
          title: ownerName
          type: string
        paymentAccountReference:
          description: The Payment Account Reference (PAR) value links a network token
            with the underlying primary account number (PAN). The PAR value consists
            of 29 uppercase alphanumeric characters.
          title: paymentAccountReference
          type: string
        paymentMethod:
          description: The payment method used in the transaction.
          title: paymentMethod
          type: string
        paymentMethodVariant:
          description: |-
            The Adyen sub-variant of the payment method used for the payment request.

            For more information, refer to [PaymentMethodVariant](https://docs.adyen.com/development-resources/paymentmethodvariant).

            Example: mcpro
          title: paymentMethodVariant
          type: string
        payoutEligible:
          description: |-
            Indicates whether a payout is eligible or not for this card.

            Visa:
            * "Y"
            * "N"

            Mastercard:
            * "Y" (domestic and cross-border)

            * "D" (only domestic)
            * "N" (no MoneySend)
            * "U" (unknown)
          title: payoutEligible
          type: string
        realtimeAccountUpdaterStatus:
          description: |-
            The response code from the Real Time Account Updater service.

            Possible return values are:
            * CardChanged
            * CardExpiryChanged
            * CloseAccount

            * ContactCardAccountHolder
          title: realtimeAccountUpdaterStatus
          type: string
        receiptFreeText:
          description: Message to be displayed on the terminal.
          title: receiptFreeText
          type: string
        recurring.contractTypes:
          description: The recurring contract types applicable to the transaction.
          title: recurring.contractTypes
          type: string
          x-addedInVersion: "40"
        recurring.firstPspReference:
          description: |-
            The `pspReference`, of the first recurring payment that created the recurring detail.

            This functionality requires additional configuration on Adyen's end. To enable it, contact the Support Team.
          title: recurring.firstPspReference
          type: string
        recurring.recurringDetailReference:
          description: The reference that uniquely identifies the recurring transaction.
          title: recurring.recurringDetailReference
          type: string
        recurring.shopperReference:
          description: The provided reference of the shopper for a recurring transaction.
          title: recurring.shopperReference
          type: string
          x-addedInVersion: "40"
        recurringProcessingModel:
          description: The processing model used for the recurring transaction.
          enum:
          - CardOnFile
          - Subscription
          - UnscheduledCardOnFile
          title: recurringProcessingModel
          type: string
          x-addedInVersion: "40"
        referred:
          description: |-
            If the payment is referred, this field is set to true.

            This field is unavailable if the payment is referred and is usually not returned with ecommerce transactions.

            Example: true
          title: referred
          type: string
        refusalReasonRaw:
          description: |-
            Raw refusal reason received from the acquirer, where available.

            Example: AUTHORISED
          title: refusalReasonRaw
          type: string
        requestAmount:
          description: The amount of the payment request.
          title: requestAmount
          type: string
        requestCurrencyCode:
          description: The currency of the payment request.
          title: requestCurrencyCode
          type: string
        shopperInteraction:
          description: |-
            The shopper interaction type of the payment request.

            Example: Ecommerce
          title: shopperInteraction
          type: string
        shopperReference:
          description: |-
            The shopperReference passed in the payment request.

            Example: AdyenTestShopperXX
          title: shopperReference
          type: string
        terminalId:
          description: |-
            The terminal ID used in a point-of-sale payment.

            Example: 06022622
          title: terminalId
          type: string
        threeDAuthenticated:
          description: |-
            A Boolean value indicating whether 3DS authentication was completed on this payment.

            Example: true
          title: threeDAuthenticated
          type: string
        threeDAuthenticatedResponse:
          description: |-
            The raw 3DS authentication result from the card issuer.

            Example: N
          title: threeDAuthenticatedResponse
          type: string
        threeDOffered:
          description: |-
            A Boolean value indicating whether 3DS was offered for this payment.

            Example: true
          title: threeDOffered
          type: string
        threeDOfferedResponse:
          description: |-
            The raw enrollment result from the 3DS directory services of the card schemes.

            Example: Y
          title: threeDOfferedResponse
          type: string
        threeDSVersion:
          description: The 3D Secure 2 version.
          title: threeDSVersion
          type: string
        visaTransactionId:
          description: |-
            The `visaTransactionId`, has a fixed length of 15 numeric characters.

            > Contact Support Team to enable this field.
          title: visaTransactionId
          type: string
        xid:
          description: |-
            The 3DS transaction ID of the 3DS session sent in notifications. The value is Base64-encoded and is returned for transactions with directoryResponse 'N' or 'Y'. If you want to submit the xid in your 3D Secure 1 request, use the `mpiData.xid`, field.

            Example: ODgxNDc2MDg2MDExODk5MAAAAAA=
          title: xid
          type: string
      title: ResponseAdditionalDataCommon
    ResponseAdditionalDataDomesticError:
      properties:
        domesticRefusalReasonRaw:
          description: "The reason the transaction was declined, given by the local\
            \ issuer. \nCurrently available for merchants in Japan."
          title: domesticRefusalReasonRaw
          type: string
        domesticShopperAdvice:
          description: "The action the shopper should take, in a local language. \n\
            Currently available in Japanese, for merchants in Japan."
          title: domesticShopperAdvice
          type: string
      title: ResponseAdditionalDataDomesticError
    ResponseAdditionalDataInstallments:
      properties:
        installmentPaymentData.installmentType:
          description: Type of installment. The value of `installmentType` should
            be **IssuerFinanced**.
          title: installmentPaymentData.installmentType
          type: string
        installmentPaymentData.option[itemNr].annualPercentageRate:
          description: Annual interest rate.
          title: "installmentPaymentData.option[itemNr].annualPercentageRate"
          type: string
        installmentPaymentData.option[itemNr].firstInstallmentAmount:
          description: First Installment Amount in minor units.
          title: "installmentPaymentData.option[itemNr].firstInstallmentAmount"
          type: string
        installmentPaymentData.option[itemNr].installmentFee:
          description: Installment fee amount in minor units.
          title: "installmentPaymentData.option[itemNr].installmentFee"
          type: string
        installmentPaymentData.option[itemNr].interestRate:
          description: Interest rate for the installment period.
          title: "installmentPaymentData.option[itemNr].interestRate"
          type: string
        installmentPaymentData.option[itemNr].maximumNumberOfInstallments:
          description: Maximum number of installments possible for this payment.
          title: "installmentPaymentData.option[itemNr].maximumNumberOfInstallments"
          type: string
        installmentPaymentData.option[itemNr].minimumNumberOfInstallments:
          description: Minimum number of installments possible for this payment.
          title: "installmentPaymentData.option[itemNr].minimumNumberOfInstallments"
          type: string
        installmentPaymentData.option[itemNr].numberOfInstallments:
          description: Total number of installments possible for this payment.
          title: "installmentPaymentData.option[itemNr].numberOfInstallments"
          type: string
        installmentPaymentData.option[itemNr].subsequentInstallmentAmount:
          description: Subsequent Installment Amount in minor units.
          title: "installmentPaymentData.option[itemNr].subsequentInstallmentAmount"
          type: string
        installmentPaymentData.option[itemNr].totalAmountDue:
          description: Total amount in minor units.
          title: "installmentPaymentData.option[itemNr].totalAmountDue"
          type: string
        installmentPaymentData.paymentOptions:
          description: |-
            Possible values:
            * PayInInstallmentsOnly
            * PayInFullOnly
            * PayInFullOrInstallments
          title: installmentPaymentData.paymentOptions
          type: string
        installments.value:
          description: |-
            The number of installments that the payment amount should be charged with.

            Example: 5
            > Only relevant for card payments in countries that support installments.
          title: installments.value
          type: string
      title: ResponseAdditionalDataInstallments
    ResponseAdditionalDataNetworkTokens:
      properties:
        networkToken.available:
          description: Indicates whether a network token is available for the specified
            card.
          title: networkToken.available
          type: string
        networkToken.bin:
          description: "The Bank Identification Number of a tokenized card, which\
            \ is the first six digits of a card number."
          title: networkToken.bin
          type: string
        networkToken.tokenSummary:
          description: The last four digits of a network token.
          title: networkToken.tokenSummary
          type: string
      title: ResponseAdditionalDataNetworkTokens
    ResponseAdditionalDataOpi:
      properties:
        opi.transToken:
          description: "Returned in the response if you included `opi.includeTransToken:\
            \ true` in an ecommerce payment request. This contains an Oracle Payment\
            \ Interface token that you can store in your Oracle Opera database to\
            \ identify tokenized ecommerce transactions. For more information and\
            \ required settings, see [Oracle Opera](https://docs.adyen.com/plugins/oracle-opera#opi-token-ecommerce)."
          title: opi.transToken
          type: string
      title: ResponseAdditionalDataOpi
    ResponseAdditionalDataSepa:
      properties:
        sepadirectdebit.dateOfSignature:
          description: |-
            The transaction signature date.

            Format: yyyy-MM-dd
          title: sepadirectdebit.dateOfSignature
          type: string
        sepadirectdebit.mandateId:
          description: Its value corresponds to the pspReference value of the transaction.
          title: sepadirectdebit.mandateId
          type: string
        sepadirectdebit.sequenceType:
          description: |-
            This field can take one of the following values:
            * OneOff: (OOFF) Direct debit instruction to initiate exactly one direct debit transaction.

            * First: (FRST) Initial/first collection in a series of direct debit instructions.
            * Recurring: (RCUR) Direct debit instruction to carry out regular direct debit transactions initiated by the creditor.
            * Final: (FNAL) Last/final collection in a series of direct debit instructions.

            Example: OOFF
          title: sepadirectdebit.sequenceType
          type: string
      title: ResponseAdditionalDataSepa
    ResponsePaymentMethod:
      example:
        type: type
        brand: brand
      properties:
        brand:
          description: The card brand that the shopper used to pay. Only returned
            if `paymentMethod.type` is **scheme**.
          title: brand
          type: string
        type:
          description: The `paymentMethod.type` value used in the request.
          title: type
          type: string
      title: paymentResponse
    RiskData:
      example:
        fraudOffset: 4
        customFields:
          key: customFields
        profileReference: profileReference
        clientData: clientData
      properties:
        clientData:
          description: "Contains client-side data, like the device fingerprint, cookies,\
            \ and specific browser settings."
          title: clientData
          type: string
        customFields:
          additionalProperties:
            type: string
          description: Any custom fields used as part of the input to configured risk
            rules.
          title: customFields
          x-addedInVersion: "65"
        fraudOffset:
          description: An integer value that is added to the normal fraud score. The
            value can be either positive or negative.
          format: int32
          title: fraudOffset
          type: integer
          x-addedInVersion: "65"
        profileReference:
          description: "The risk profile to assign to this payment. When left empty,\
            \ the merchant-level account's default risk profile will be applied."
          title: profileReference
          type: string
          x-addedInVersion: "65"
      title: RiskData
    SDKEphemPubKey:
      example:
        kty: kty
        crv: crv
        x: x
        "y": "y"
      properties:
        crv:
          description: The `crv` value as received from the 3D Secure 2 SDK.
          title: crv
          type: string
        kty:
          description: The `kty` value as received from the 3D Secure 2 SDK.
          title: kty
          type: string
        x:
          description: The `x` value as received from the 3D Secure 2 SDK.
          title: x
          type: string
        "y":
          description: The `y` value as received from the 3D Secure 2 SDK.
          title: "y"
          type: string
      title: SDKEphemPubKey
    SamsungPayDetails:
      additionalProperties: false
      properties:
        checkoutAttemptId:
          description: The checkout attempt identifier.
          title: checkoutAttemptId
          type: string
          x-addedInVersion: "68"
        fundingSource:
          description: "The funding source that should be used when multiple sources\
            \ are available. For Brazilian combo cards, by default the funding source\
            \ is credit. To use debit, set this value to **debit**."
          enum:
          - credit
          - debit
          title: fundingSource
          type: string
        recurringDetailReference:
          deprecated: true
          description: This is the `recurringDetailReference` returned in the response
            when you created the token.
          title: recurringDetailReference
          type: string
          x-deprecatedInVersion: "49"
          x-deprecatedMessage: Use `storedPaymentMethodId` instead.
        samsungPayToken:
          description: The payload you received from the Samsung Pay SDK response.
          title: samsungPayToken
          type: string
        storedPaymentMethodId:
          description: This is the `recurringDetailReference` returned in the response
            when you created the token.
          maxLength: 64
          title: storedPaymentMethodId
          type: string
          x-addedInVersion: "49"
        type:
          default: samsungpay
          description: '**samsungpay**'
          enum:
          - samsungpay
          title: type
          type: string
      required:
      - samsungPayToken
      title: Samsung Pay
    SepaDirectDebitDetails:
      additionalProperties: false
      properties:
        checkoutAttemptId:
          description: The checkout attempt identifier.
          title: checkoutAttemptId
          type: string
          x-addedInVersion: "68"
        iban:
          description: The International Bank Account Number (IBAN).
          title: iban
          type: string
        ownerName:
          description: The name of the bank account holder.
          title: ownerName
          type: string
        recurringDetailReference:
          deprecated: true
          description: This is the `recurringDetailReference` returned in the response
            when you created the token.
          title: recurringDetailReference
          type: string
          x-deprecatedInVersion: "49"
          x-deprecatedMessage: Use `storedPaymentMethodId` instead.
        storedPaymentMethodId:
          description: This is the `recurringDetailReference` returned in the response
            when you created the token.
          maxLength: 64
          title: storedPaymentMethodId
          type: string
          x-addedInVersion: "49"
        type:
          default: sepadirectdebit
          description: '**sepadirectdebit**'
          enum:
          - sepadirectdebit
          - sepadirectdebit_amazonpay
          title: type
          type: string
      required:
      - iban
      - ownerName
      title: SEPA Direct Debit
    ServiceError:
      example:
        errorType: errorType
        errorCode: errorCode
        additionalData:
          key: additionalData
        message: message
        pspReference: pspReference
        status: 0
      properties:
        additionalData:
          additionalProperties:
            type: string
          description: Contains additional information about the payment. Some data
            fields are included only if you select them first. Go to **Customer Area**
            > **Developers** > **Additional data**.
          title: additionalData
          x-addedInVersion: "46"
        errorCode:
          description: The error code mapped to the error message.
          title: errorCode
          type: string
        errorType:
          description: The category of the error.
          title: errorType
          type: string
        message:
          description: A short explanation of the issue.
          title: message
          type: string
        pspReference:
          description: The PSP reference of the payment.
          title: pspReference
          type: string
        status:
          description: The HTTP response status.
          format: int32
          title: status
          type: integer
      title: ServiceError
    ServiceErrorDetails:
      example:
        errorType: errorType
        errorCode: errorCode
        message: message
        pspReference: pspReference
      properties:
        errorCode:
          title: errorCode
          type: string
        errorType:
          title: errorType
          type: string
        message:
          title: message
          type: string
        pspReference:
          title: pspReference
          type: string
      title: ServiceErrorDetails
    SessionResultResponse:
      example:
        id: id
        status: active
      properties:
        id:
          description: A unique identifier of the session.
          title: id
          type: string
        status:
          description: |
            The status of the session. The status included in the response doesn't get updated. Don't make the request again to check for payment status updates.

            Possible values:

                     * **completed** – The shopper completed the payment. This means that the payment was authorized.
                     * **paymentPending** – The shopper is in the process of making the payment. This applies to payment methods with an asynchronous flow.
                     * **refused** – The session has been refused, due to too many refused payment attempts. Shoppers can no longer complete the payment with this session.
                     * **canceled** – The shopper canceled the payment.
                     * **active** – The session is still active and can be paid.
                     * **expired** – The session expired (default: 1 hour after session creation). Shoppers can no longer complete the payment with this session.
          enum:
          - active
          - canceled
          - completed
          - expired
          - paymentPending
          - refused
          title: status
          type: string
      title: SessionResultResponse
    ShopperInput:
      example:
        deliveryAddress: editable
        personalDetails: editable
        billingAddress: editable
      properties:
        billingAddress:
          description: |-
            Specifies visibility of billing address fields.

            Permitted values:
            * editable
            * hidden
            * readOnly
          enum:
          - editable
          - hidden
          - readOnly
          title: billingAddress
          type: string
        deliveryAddress:
          description: |-
            Specifies visibility of delivery address fields.

            Permitted values:
            * editable
            * hidden
            * readOnly
          enum:
          - editable
          - hidden
          - readOnly
          title: deliveryAddress
          type: string
        personalDetails:
          description: |-
            Specifies visibility of personal details.

            Permitted values:
            * editable
            * hidden
            * readOnly
          enum:
          - editable
          - hidden
          - readOnly
          title: personalDetails
          type: string
      title: ShopperInput
    ShopperInteractionDevice:
      example:
        os: os
        osVersion: osVersion
        locale: locale
      properties:
        locale:
          description: Locale on the shopper interaction device.
          title: locale
          type: string
        os:
          description: Operating system running on the shopper interaction device.
          title: os
          type: string
        osVersion:
          description: Version of the operating system on the shopper interaction
            device.
          title: osVersion
          type: string
      title: ShopperInteractionDevice
    Split:
      example:
        reference: reference
        amount:
          currency: currency
          value: 5
        description: description
        type: AcquiringFees
        account: account
      properties:
        account:
          description: |-
            The unique identifier of the account to which the split amount is booked. Required if `type` is **MarketPlace** or **BalanceAccount**.

            * [Classic Platforms integration](https://docs.adyen.com/marketplaces-and-platforms/classic): The [`accountCode`](https://docs.adyen.com/api-explorer/Account/latest/post/updateAccount#request-accountCode) of the account to which the split amount is booked.
            * [Balance Platform](https://docs.adyen.com/marketplaces-and-platforms): The [`balanceAccountId`](https://docs.adyen.com/api-explorer/balanceplatform/latest/get/balanceAccounts/_id_#path-id) of the account to which the split amount is booked.
          title: account
          type: string
        amount:
          $ref: '#/components/schemas/SplitAmount'
        description:
          description: Your description for the split item.
          title: description
          type: string
        reference:
          description: |-
            Your unique reference for the split item.

            This is required if `type` is **MarketPlace** ([Classic Platforms integration](https://docs.adyen.com/marketplaces-and-platforms/classic)) or **BalanceAccount** ([Balance Platform](https://docs.adyen.com/marketplaces-and-platforms)).

            For the other types, we also recommend providing a **unique** reference so you can reconcile the split and the associated payment in the transaction overview and in the reports.
          title: reference
          type: string
        type:
          description: |-
            The type of the split item.

            Possible values:

            * [Classic Platforms integration](https://docs.adyen.com/marketplaces-and-platforms/classic): **Commission**, **Default**, **Marketplace**, **PaymentFee**, **VAT**.
            * [Balance Platform](https://docs.adyen.com/marketplaces-and-platforms): **BalanceAccount**, **Commission**, **Default**, **PaymentFee**, **Remainder**, **Surcharge**, **Tip**, **VAT**.
          enum:
          - AcquiringFees
          - AdyenCommission
          - AdyenFees
          - AdyenMarkup
          - BalanceAccount
          - Commission
          - Default
          - Interchange
          - MarketPlace
          - PaymentFee
          - Remainder
          - SchemeFee
          - Surcharge
          - Tip
          - VAT
          title: type
          type: string
      required:
      - type
      title: Split
    SplitAmount:
      example:
        currency: currency
        value: 5
      properties:
        currency:
          description: "The three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes).\
            \ By default, this is the original payment currency."
          maxLength: 3
          minLength: 3
          title: currency
          type: string
        value:
          description: "The value of the split amount, in [minor units](https://docs.adyen.com/development-resources/currency-codes)."
          format: int64
          title: value
          type: integer
      required:
      - value
      title: SplitAmount
    StandalonePaymentCancelRequest:
      example:
        reference: reference
        merchantAccount: merchantAccount
        paymentReference: paymentReference
        applicationInfo:
          adyenLibrary:
            name: name
            version: version
          merchantApplication:
            name: name
            version: version
          adyenPaymentSource:
            name: name
            version: version
          merchantDevice:
            reference: reference
            os: os
            osVersion: osVersion
          shopperInteractionDevice:
            os: os
            osVersion: osVersion
            locale: locale
          externalPlatform:
            name: name
            integrator: integrator
            version: version
      properties:
        applicationInfo:
          $ref: '#/components/schemas/ApplicationInfo'
        merchantAccount:
          description: The merchant account that is used to process the payment.
          title: merchantAccount
          type: string
        paymentReference:
          description: "The [`reference`](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/payments__reqParam_reference)\
            \ of the payment that you want to cancel."
          title: paymentReference
          type: string
        reference:
          description: "Your reference for the cancel request. Maximum length: 80\
            \ characters."
          title: reference
          type: string
      required:
      - merchantAccount
      - paymentReference
      title: StandalonePaymentCancelRequest
    StandalonePaymentCancelResponse:
      example:
        reference: reference
        merchantAccount: merchantAccount
        paymentReference: paymentReference
        pspReference: pspReference
        status: received
      properties:
        merchantAccount:
          description: The merchant account that is used to process the payment.
          title: merchantAccount
          type: string
        paymentReference:
          description: "The [`reference`](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/payments__reqParam_reference)\
            \ of the payment to cancel."
          title: paymentReference
          type: string
        pspReference:
          description: Adyen's 16-character reference associated with the cancel request.
          title: pspReference
          type: string
        reference:
          description: Your reference for the cancel request.
          title: reference
          type: string
        status:
          description: The status of your request. This will always have the value
            **received**.
          enum:
          - received
          title: status
          type: string
      required:
      - merchantAccount
      - paymentReference
      - pspReference
      - status
      title: StandalonePaymentCancelResponse
    StoredDetails:
      example:
        bank:
          ownerName: ownerName
          countryCode: countryCode
          taxId: taxId
          iban: iban
          bankAccountNumber: bankAccountNumber
          bankName: bankName
          bankLocationId: bankLocationId
          bic: bic
          bankCity: bankCity
        emailAddress: emailAddress
        card:
          cvc: cvc
          number: number
          holderName: holderName
          startMonth: startMonth
          issueNumber: issueNumber
          expiryMonth: expiryMonth
          startYear: startYear
          expiryYear: expiryYear
      properties:
        bank:
          $ref: '#/components/schemas/BankAccount'
        card:
          $ref: '#/components/schemas/Card'
        emailAddress:
          description: The email associated with stored payment details.
          title: emailAddress
          type: string
      title: StoredDetails
    StoredPaymentMethod:
      example:
        lastFour: lastFour
        holderName: holderName
        expiryMonth: expiryMonth
        networkTxReference: networkTxReference
        shopperEmail: shopperEmail
        expiryYear: expiryYear
        type: type
        ownerName: ownerName
        iban: iban
        name: name
        bankAccountNumber: bankAccountNumber
        id: id
        supportedShopperInteractions:
        - supportedShopperInteractions
        - supportedShopperInteractions
        bankLocationId: bankLocationId
        brand: brand
      properties:
        bankAccountNumber:
          description: The bank account number (without separators).
          title: bankAccountNumber
          type: string
        bankLocationId:
          description: The location id of the bank. The field value is `nil` in most
            cases.
          title: bankLocationId
          type: string
        brand:
          description: The brand of the card.
          title: brand
          type: string
        expiryMonth:
          description: The month the card expires.
          title: expiryMonth
          type: string
        expiryYear:
          description: "The last two digits of the year the card expires. For example,\
            \ **22** for the year 2022."
          title: expiryYear
          type: string
        holderName:
          description: The unique payment method code.
          title: holderName
          type: string
        iban:
          description: The IBAN of the bank account.
          title: iban
          type: string
          x-addedInVersion: "67"
        id:
          description: A unique identifier of this stored payment method.
          title: id
          type: string
        lastFour:
          description: The last four digits of the PAN.
          title: lastFour
          type: string
        name:
          description: The display name of the stored payment method.
          title: name
          type: string
        networkTxReference:
          description: |-
            Returned in the response if you are not tokenizing with Adyen and are using the Merchant-initiated transactions (MIT) framework from Mastercard or Visa.

            This contains either the Mastercard Trace ID or the Visa Transaction ID.
          title: networkTxReference
          type: string
          x-addedInVersion: "68"
        ownerName:
          description: The name of the bank account holder.
          title: ownerName
          type: string
          x-addedInVersion: "67"
        shopperEmail:
          description: The shopper’s email address.
          title: shopperEmail
          type: string
        supportedShopperInteractions:
          description: The supported shopper interactions for this stored payment
            method.
          items:
            type: string
          title: supportedShopperInteractions
          type: array
        type:
          description: The type of payment method.
          title: type
          type: string
      title: StoredPaymentMethod
    StoredPaymentMethodDetails:
      additionalProperties: false
      properties:
        checkoutAttemptId:
          description: The checkout attempt identifier.
          title: checkoutAttemptId
          type: string
          x-addedInVersion: "68"
        recurringDetailReference:
          deprecated: true
          description: This is the `recurringDetailReference` returned in the response
            when you created the token.
          title: recurringDetailReference
          type: string
          x-deprecatedInVersion: "49"
          x-deprecatedMessage: Use `storedPaymentMethodId` instead.
        storedPaymentMethodId:
          description: This is the `recurringDetailReference` returned in the response
            when you created the token.
          maxLength: 64
          title: storedPaymentMethodId
          type: string
          x-addedInVersion: "49"
        type:
          description: The payment method type.
          enum:
          - bcmc_mobile
          - bcmc_mobile_QR
          - bcmc_mobile_app
          - momo_wallet
          - momo_wallet_app
          - twint
          - paymaya_wallet
          - grabpay_SG
          - grabpay_MY
          - grabpay_TH
          - grabpay_ID
          - grabpay_VN
          - grabpay_PH
          - oxxo
          - gcash
          - dana
          - kakaopay
          - truemoney
          title: type
          type: string
      title: Stored Payment Method
    SubInputDetail:
      example:
        configuration:
          key: configuration
        optional: true
        type: type
        items:
        - name: name
          id: id
        - name: name
          id: id
        value: value
        key: key
      properties:
        configuration:
          additionalProperties:
            type: string
          description: Configuration parameters for the required input.
          title: configuration
        items:
          description: "In case of a select, the items to choose from."
          items:
            $ref: '#/components/schemas/Item'
          title: items
          type: array
        key:
          description: The value to provide in the result.
          title: key
          type: string
        optional:
          description: True if this input is optional to provide.
          title: optional
          type: boolean
        type:
          description: The type of the required input.
          title: type
          type: string
        value:
          description: "The value can be pre-filled, if available."
          title: value
          type: string
      title: SubInputDetail
    SubMerchant:
      example:
        country: country
        city: city
        taxId: taxId
        name: name
        mcc: mcc
      properties:
        city:
          description: |-
            The city of the sub-merchant's address.
            * Format: Alphanumeric
            * Maximum length: 13 characters
          title: city
          type: string
        country:
          description: "The three-letter country code of the sub-merchant's address.\
            \ For example, **BRA** for Brazil. \n* Format: [ISO 3166-1 alpha-3](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3)\n\
            * Fixed length: 3 characters"
          title: country
          type: string
        mcc:
          description: "The sub-merchant's 4-digit Merchant Category Code (MCC). \n\
            * Format: Numeric\n* Fixed length: 4 digits"
          title: mcc
          type: string
        name:
          description: |-
            The name of the sub-merchant. Based on scheme specifications, this value will overwrite the shopper statement  that will appear in the card statement.
            * Format: Alphanumeric
            * Maximum length: 22 characters
          title: name
          type: string
        taxId:
          description: |-
            The tax ID of the sub-merchant.
            * Format: Numeric
            * Fixed length: 11 digits for the CPF or 14 digits for the CNPJ
          title: taxId
          type: string
      title: SubMerchant
    ThreeDS2RequestData:
      example:
        notificationURL: notificationURL
        paymentAuthenticationUseCase: paymentAuthenticationUseCase
        recurringFrequency: recurringFrequency
        mcc: mcc
        platform: iOS
        sdkEphemPubKey:
          kty: kty
          crv: crv
          x: x
          "y": "y"
        merchantName: merchantName
        recurringExpiry: recurringExpiry
        threeDSRequestorAuthenticationInd: threeDSRequestorAuthenticationInd
        addrMatch: "Y"
        threeDSRequestorURL: threeDSRequestorURL
        sdkReferenceNumber: sdkReferenceNumber
        threeDSRequestorName: threeDSRequestorName
        acquirerMerchantID: acquirerMerchantID
        sdkAppID: sdkAppID
        messageVersion: messageVersion
        sdkTransID: sdkTransID
        whiteListStatus: whiteListStatus
        authenticationOnly: false
        sdkMaxTimeout: 1
        homePhone:
          cc: cc
          subscriber: subscriber
        payTokenInd: true
        sdkEncData: sdkEncData
        purchaseInstalData: purchaseInstalData
        acquirerBIN: acquirerBIN
        threeDSRequestorID: threeDSRequestorID
        deviceChannel: deviceChannel
        deviceRenderOptions:
          sdkUiType:
          - multiSelect
          - multiSelect
          sdkInterface: both
        transactionType: goodsOrServicePurchase
        acctInfo:
          shipAddressUsageInd: "01"
          paymentAccAge: paymentAccAge
          paymentAccInd: "01"
          txnActivityYear: txnActivityYear
          shipNameIndicator: "01"
          chAccPwChangeInd: "01"
          provisionAttemptsDay: provisionAttemptsDay
          chAccChange: chAccChange
          chAccChangeInd: "01"
          chAccString: chAccString
          nbPurchaseAccount: nbPurchaseAccount
          chAccAgeInd: "01"
          chAccPwChange: chAccPwChange
          shipAddressUsage: shipAddressUsage
          suspiciousAccActivity: "01"
          txnActivityDay: txnActivityDay
        threeDSRequestorChallengeInd: "01"
        mobilePhone:
          cc: cc
          subscriber: subscriber
        threeDSRequestorAuthenticationInfo:
          threeDSReqAuthMethod: "01"
          threeDSReqAuthData: threeDSReqAuthData
          threeDSReqAuthTimestamp: threeDSReqAuthTimestamp
        transType: "01"
        challengeIndicator: noPreference
        acctType: "01"
        sdkVersion: sdkVersion
        workPhone:
          cc: cc
          subscriber: subscriber
        threeDSCompInd: threeDSCompInd
        threeDSRequestorPriorAuthenticationInfo:
          threeDSReqPriorRef: threeDSReqPriorRef
          threeDSReqPriorAuthData: threeDSReqPriorAuthData
          threeDSReqPriorAuthMethod: "01"
          threeDSReqPriorAuthTimestamp: threeDSReqPriorAuthTimestamp
      properties:
        acctInfo:
          $ref: '#/components/schemas/AcctInfo'
        acctType:
          description: |-
            Indicates the type of account. For example, for a multi-account card product. Length: 2 characters. Allowed values:
            * **01** — Not applicable
            * **02** — Credit
            * **03** — Debit
          enum:
          - "01"
          - "02"
          - "03"
          maxLength: 2
          minLength: 2
          title: acctType
          type: string
          x-addedInVersion: "68"
        acquirerBIN:
          description: "Required for [authentication-only integration](https://docs.adyen.com/online-payments/3d-secure/other-3ds-flows/authentication-only).\
            \ The acquiring BIN enrolled for 3D Secure 2. This string should match\
            \ the value that you will use in the authorisation. Use 123456 on the\
            \ Test platform."
          title: acquirerBIN
          type: string
          x-addedInVersion: "49"
        acquirerMerchantID:
          description: "Required for [authentication-only integration](https://docs.adyen.com/online-payments/3d-secure/other-3ds-flows/authentication-only).\
            \ The merchantId that is enrolled for 3D Secure 2 by the merchant's acquirer.\
            \ This string should match the value that you will use in the authorisation.\
            \ Use 123456 on the Test platform."
          title: acquirerMerchantID
          type: string
          x-addedInVersion: "49"
        addrMatch:
          description: |-
            Indicates whether the Cardholder Shipping Address and Cardholder Billing Address are the same. Allowed values:
            * **Y** — Shipping Address matches Billing Address.
            * **N** — Shipping Address does not match Billing Address.
          enum:
          - "Y"
          - "N"
          maxLength: 1
          minLength: 1
          title: addrMatch
          type: string
          x-addedInVersion: "68"
        authenticationOnly:
          default: false
          deprecated: true
          description: "If set to true, you will only perform the [3D Secure 2 authentication](https://docs.adyen.com/online-payments/3d-secure/other-3ds-flows/authentication-only),\
            \ and not the payment authorisation."
          title: authenticationOnly
          type: boolean
          x-deprecatedInVersion: "50"
          x-deprecatedMessage: Use `threeDSAuthenticationOnly` instead.
        challengeIndicator:
          deprecated: true
          description: |
            Possibility to specify a preference for receiving a challenge from the issuer.
            Allowed values:
            * `noPreference`
            * `requestNoChallenge`
            * `requestChallenge`
            * `requestChallengeAsMandate`
          enum:
          - noPreference
          - requestNoChallenge
          - requestChallenge
          - requestChallengeAsMandate
          title: challengeIndicator
          type: string
          x-deprecatedInVersion: "68"
          x-deprecatedMessage: Use `threeDSRequestorChallengeInd` instead.
        deviceChannel:
          description: |-
            The environment of the shopper.
            Allowed values:
            * `app`
            * `browser`
          title: deviceChannel
          type: string
        deviceRenderOptions:
          $ref: '#/components/schemas/DeviceRenderOptions'
        homePhone:
          $ref: '#/components/schemas/Phone'
        mcc:
          description: "Required for merchants that have been enrolled for 3D Secure\
            \ 2 by another party than Adyen, mostly [authentication-only integrations](https://docs.adyen.com/online-payments/3d-secure/other-3ds-flows/authentication-only).\
            \ The `mcc` is a four-digit code with which the previously given `acquirerMerchantID`\
            \ is registered at the scheme."
          title: mcc
          type: string
          x-addedInVersion: "49"
        merchantName:
          description: |-
            Required for [authentication-only integration](https://docs.adyen.com/online-payments/3d-secure/other-3ds-flows/authentication-only). The merchant name that the issuer presents to the shopper if they get a challenge. We recommend to use the same value that you will use in the authorization. Maximum length is 40 characters.
            > Optional for a [full 3D Secure 2 integration](https://docs.adyen.com/online-payments/3d-secure/native-3ds2/api-integration). Use this field if you are enrolled for 3D Secure 2 with us and want to override the merchant name already configured on your account.
          title: merchantName
          type: string
          x-addedInVersion: "49"
        messageVersion:
          description: The `messageVersion` value indicating the 3D Secure 2 protocol
            version.
          title: messageVersion
          type: string
        mobilePhone:
          $ref: '#/components/schemas/Phone'
        notificationURL:
          description: URL to where the issuer should send the `CRes`. Required if
            you are not using components for `channel` **Web** or if you are using
            classic integration `deviceChannel` **browser**.
          title: notificationURL
          type: string
        payTokenInd:
          description: Value **true** indicates that the transaction was de-tokenised
            prior to being received by the ACS.
          title: payTokenInd
          type: boolean
          x-addedInVersion: "68"
        paymentAuthenticationUseCase:
          description: Indicates the type of payment for which an authentication is
            requested (message extension)
          title: paymentAuthenticationUseCase
          type: string
          x-addedInVersion: "68"
        platform:
          description: |-
            The platform of the shopper.
            Allowed values:
            * `iOS`
            * `android`
            * `browser`
          enum:
          - iOS
          - android
          - browser
          title: platform
          type: string
        purchaseInstalData:
          description: "Indicates the maximum number of authorisations permitted for\
            \ instalment payments. Length: 1–3 characters."
          maxLength: 3
          minLength: 1
          title: purchaseInstalData
          type: string
          x-addedInVersion: "68"
        recurringExpiry:
          description: "Date after which no further authorisations shall be performed.\
            \ Format: YYYYMMDD"
          title: recurringExpiry
          type: string
          x-addedInVersion: "68"
        recurringFrequency:
          description: "Indicates the minimum number of days between authorisations.\
            \ Maximum length: 4 characters."
          maxLength: 4
          title: recurringFrequency
          type: string
          x-addedInVersion: "68"
        sdkAppID:
          description: |-
            The `sdkAppID` value as received from the 3D Secure 2 SDK.
            Required for `deviceChannel` set to **app**.
          title: sdkAppID
          type: string
        sdkEncData:
          description: |-
            The `sdkEncData` value as received from the 3D Secure 2 SDK.
            Required for `deviceChannel` set to **app**.
          title: sdkEncData
          type: string
        sdkEphemPubKey:
          $ref: '#/components/schemas/SDKEphemPubKey'
        sdkMaxTimeout:
          default: 60
          description: |-
            The maximum amount of time in minutes for the 3D Secure 2 authentication process.
            Optional and only for `deviceChannel` set to **app**. Defaults to **60** minutes.
          format: int32
          title: sdkMaxTimeout
          type: integer
        sdkReferenceNumber:
          description: |-
            The `sdkReferenceNumber` value as received from the 3D Secure 2 SDK.
            Only for `deviceChannel` set to **app**.
          title: sdkReferenceNumber
          type: string
        sdkTransID:
          description: |-
            The `sdkTransID` value as received from the 3D Secure 2 SDK.
            Only for `deviceChannel` set to **app**.
          title: sdkTransID
          type: string
        sdkVersion:
          description: "Version of the 3D Secure 2 mobile SDK. \nOnly for `deviceChannel`\
            \ set to **app**."
          title: sdkVersion
          type: string
          x-addedInVersion: "40"
        threeDSCompInd:
          description: Completion indicator for the device fingerprinting.
          title: threeDSCompInd
          type: string
        threeDSRequestorAuthenticationInd:
          description: Indicates the type of Authentication request.
          title: threeDSRequestorAuthenticationInd
          type: string
          x-addedInVersion: "68"
        threeDSRequestorAuthenticationInfo:
          $ref: '#/components/schemas/ThreeDSRequestorAuthenticationInfo'
        threeDSRequestorChallengeInd:
          description: |-
            Indicates whether a challenge is requested for this transaction. Possible values:
            * **01** — No preference
            * **02** — No challenge requested
            * **03** — Challenge requested (3DS Requestor preference)
            * **04** — Challenge requested (Mandate)
            * **05** — No challenge (transactional risk analysis is already performed)
            * **06** — Data Only
          enum:
          - "01"
          - "02"
          - "03"
          - "04"
          - "05"
          - "06"
          title: threeDSRequestorChallengeInd
          type: string
          x-addedInVersion: "68"
        threeDSRequestorID:
          description: "Required for [authentication-only integration](https://docs.adyen.com/online-payments/3d-secure/other-3ds-flows/authentication-only)\
            \ for Visa. Unique 3D Secure requestor identifier assigned by the Directory\
            \ Server when you enrol for 3D Secure 2."
          title: threeDSRequestorID
          type: string
        threeDSRequestorName:
          description: "Required for [authentication-only integration](https://docs.adyen.com/online-payments/3d-secure/other-3ds-flows/authentication-only)\
            \ for Visa. Unique 3D Secure requestor name assigned by the Directory\
            \ Server when you enrol for 3D Secure 2."
          title: threeDSRequestorName
          type: string
        threeDSRequestorPriorAuthenticationInfo:
          $ref: '#/components/schemas/ThreeDSRequestorPriorAuthenticationInfo'
        threeDSRequestorURL:
          description: URL of the (customer service) website that will be shown to
            the shopper in case of technical errors during the 3D Secure 2 process.
          title: threeDSRequestorURL
          type: string
        transType:
          description: |-
            Identifies the type of transaction being authenticated. Length: 2 characters. Allowed values:
            * **01** — Goods/Service Purchase
            * **03** — Check Acceptance
            * **10** — Account Funding
            * **11** — Quasi-Cash Transaction
            * **28** — Prepaid Activation and Load
          enum:
          - "01"
          - "03"
          - "10"
          - "11"
          - "28"
          maxLength: 2
          minLength: 2
          title: transType
          type: string
          x-addedInVersion: "68"
        transactionType:
          description: Identify the type of the transaction being authenticated.
          enum:
          - goodsOrServicePurchase
          - checkAcceptance
          - accountFunding
          - quasiCashTransaction
          - prepaidActivationAndLoad
          title: transactionType
          type: string
          x-addedInVersion: "50"
        whiteListStatus:
          description: "The `whiteListStatus` value returned from a previous 3D Secure\
            \ 2 transaction, only applicable for 3D Secure 2 protocol version 2.2.0."
          title: whiteListStatus
          type: string
          x-addedInVersion: "49"
        workPhone:
          $ref: '#/components/schemas/Phone'
      required:
      - deviceChannel
      title: ThreeDS2RequestData
    ThreeDS2RequestFields:
      example:
        notificationURL: notificationURL
        paymentAuthenticationUseCase: paymentAuthenticationUseCase
        recurringFrequency: recurringFrequency
        mcc: mcc
        platform: iOS
        sdkEphemPubKey:
          kty: kty
          crv: crv
          x: x
          "y": "y"
        merchantName: merchantName
        recurringExpiry: recurringExpiry
        threeDSRequestorAuthenticationInd: threeDSRequestorAuthenticationInd
        addrMatch: "Y"
        threeDSRequestorURL: threeDSRequestorURL
        sdkReferenceNumber: sdkReferenceNumber
        threeDSRequestorName: threeDSRequestorName
        acquirerMerchantID: acquirerMerchantID
        sdkAppID: sdkAppID
        messageVersion: messageVersion
        sdkTransID: sdkTransID
        whiteListStatus: whiteListStatus
        authenticationOnly: false
        sdkMaxTimeout: 9
        homePhone:
          cc: cc
          subscriber: subscriber
        payTokenInd: true
        purchaseInstalData: purchaseInstalData
        acquirerBIN: acquirerBIN
        threeDSRequestorID: threeDSRequestorID
        deviceRenderOptions:
          sdkUiType:
          - multiSelect
          - multiSelect
          sdkInterface: both
        transactionType: goodsOrServicePurchase
        acctInfo:
          shipAddressUsageInd: "01"
          paymentAccAge: paymentAccAge
          paymentAccInd: "01"
          txnActivityYear: txnActivityYear
          shipNameIndicator: "01"
          chAccPwChangeInd: "01"
          provisionAttemptsDay: provisionAttemptsDay
          chAccChange: chAccChange
          chAccChangeInd: "01"
          chAccString: chAccString
          nbPurchaseAccount: nbPurchaseAccount
          chAccAgeInd: "01"
          chAccPwChange: chAccPwChange
          shipAddressUsage: shipAddressUsage
          suspiciousAccActivity: "01"
          txnActivityDay: txnActivityDay
        threeDSRequestorChallengeInd: "01"
        mobilePhone:
          cc: cc
          subscriber: subscriber
        threeDSRequestorAuthenticationInfo:
          threeDSReqAuthMethod: "01"
          threeDSReqAuthData: threeDSReqAuthData
          threeDSReqAuthTimestamp: threeDSReqAuthTimestamp
        transType: "01"
        challengeIndicator: noPreference
        acctType: "01"
        workPhone:
          cc: cc
          subscriber: subscriber
        threeDSCompInd: threeDSCompInd
        threeDSRequestorPriorAuthenticationInfo:
          threeDSReqPriorRef: threeDSReqPriorRef
          threeDSReqPriorAuthData: threeDSReqPriorAuthData
          threeDSReqPriorAuthMethod: "01"
          threeDSReqPriorAuthTimestamp: threeDSReqPriorAuthTimestamp
      properties:
        acctInfo:
          $ref: '#/components/schemas/AcctInfo'
        acctType:
          description: |-
            Indicates the type of account. For example, for a multi-account card product. Length: 2 characters. Allowed values:
            * **01** — Not applicable
            * **02** — Credit
            * **03** — Debit
          enum:
          - "01"
          - "02"
          - "03"
          maxLength: 2
          minLength: 2
          title: acctType
          type: string
          x-addedInVersion: "68"
        acquirerBIN:
          description: "Required for [authentication-only integration](https://docs.adyen.com/online-payments/3d-secure/other-3ds-flows/authentication-only).\
            \ The acquiring BIN enrolled for 3D Secure 2. This string should match\
            \ the value that you will use in the authorisation. Use 123456 on the\
            \ Test platform."
          title: acquirerBIN
          type: string
          x-addedInVersion: "49"
        acquirerMerchantID:
          description: "Required for [authentication-only integration](https://docs.adyen.com/online-payments/3d-secure/other-3ds-flows/authentication-only).\
            \ The merchantId that is enrolled for 3D Secure 2 by the merchant's acquirer.\
            \ This string should match the value that you will use in the authorisation.\
            \ Use 123456 on the Test platform."
          title: acquirerMerchantID
          type: string
          x-addedInVersion: "49"
        addrMatch:
          description: |-
            Indicates whether the Cardholder Shipping Address and Cardholder Billing Address are the same. Allowed values:
            * **Y** — Shipping Address matches Billing Address.
            * **N** — Shipping Address does not match Billing Address.
          enum:
          - "Y"
          - "N"
          maxLength: 1
          minLength: 1
          title: addrMatch
          type: string
          x-addedInVersion: "68"
        authenticationOnly:
          default: false
          deprecated: true
          description: "If set to true, you will only perform the [3D Secure 2 authentication](https://docs.adyen.com/online-payments/3d-secure/other-3ds-flows/authentication-only),\
            \ and not the payment authorisation."
          title: authenticationOnly
          type: boolean
          x-deprecatedInVersion: "50"
          x-deprecatedMessage: Use `threeDSAuthenticationOnly` instead.
        challengeIndicator:
          deprecated: true
          description: |
            Possibility to specify a preference for receiving a challenge from the issuer.
            Allowed values:
            * `noPreference`
            * `requestNoChallenge`
            * `requestChallenge`
            * `requestChallengeAsMandate`
          enum:
          - noPreference
          - requestNoChallenge
          - requestChallenge
          - requestChallengeAsMandate
          title: challengeIndicator
          type: string
          x-deprecatedInVersion: "68"
          x-deprecatedMessage: Use `threeDSRequestorChallengeInd` instead.
        deviceRenderOptions:
          $ref: '#/components/schemas/DeviceRenderOptions'
        homePhone:
          $ref: '#/components/schemas/Phone'
        mcc:
          description: "Required for merchants that have been enrolled for 3D Secure\
            \ 2 by another party than Adyen, mostly [authentication-only integrations](https://docs.adyen.com/online-payments/3d-secure/other-3ds-flows/authentication-only).\
            \ The `mcc` is a four-digit code with which the previously given `acquirerMerchantID`\
            \ is registered at the scheme."
          title: mcc
          type: string
          x-addedInVersion: "49"
        merchantName:
          description: |-
            Required for [authentication-only integration](https://docs.adyen.com/online-payments/3d-secure/other-3ds-flows/authentication-only). The merchant name that the issuer presents to the shopper if they get a challenge. We recommend to use the same value that you will use in the authorization. Maximum length is 40 characters.
            > Optional for a [full 3D Secure 2 integration](https://docs.adyen.com/online-payments/3d-secure/native-3ds2/api-integration). Use this field if you are enrolled for 3D Secure 2 with us and want to override the merchant name already configured on your account.
          title: merchantName
          type: string
          x-addedInVersion: "49"
        messageVersion:
          description: The `messageVersion` value indicating the 3D Secure 2 protocol
            version.
          title: messageVersion
          type: string
        mobilePhone:
          $ref: '#/components/schemas/Phone'
        notificationURL:
          description: URL to where the issuer should send the `CRes`. Required if
            you are not using components for `channel` **Web** or if you are using
            classic integration `deviceChannel` **browser**.
          title: notificationURL
          type: string
        payTokenInd:
          description: Value **true** indicates that the transaction was de-tokenised
            prior to being received by the ACS.
          title: payTokenInd
          type: boolean
          x-addedInVersion: "68"
        paymentAuthenticationUseCase:
          description: Indicates the type of payment for which an authentication is
            requested (message extension)
          title: paymentAuthenticationUseCase
          type: string
          x-addedInVersion: "68"
        platform:
          description: |-
            The platform of the shopper.
            Allowed values:
            * `iOS`
            * `android`
            * `browser`
          enum:
          - iOS
          - android
          - browser
          title: platform
          type: string
        purchaseInstalData:
          description: "Indicates the maximum number of authorisations permitted for\
            \ instalment payments. Length: 1–3 characters."
          maxLength: 3
          minLength: 1
          title: purchaseInstalData
          type: string
          x-addedInVersion: "68"
        recurringExpiry:
          description: "Date after which no further authorisations shall be performed.\
            \ Format: YYYYMMDD"
          title: recurringExpiry
          type: string
          x-addedInVersion: "68"
        recurringFrequency:
          description: "Indicates the minimum number of days between authorisations.\
            \ Maximum length: 4 characters."
          maxLength: 4
          title: recurringFrequency
          type: string
          x-addedInVersion: "68"
        sdkAppID:
          description: The `sdkAppID` value as received from the 3D Secure 2 SDK.
          title: sdkAppID
          type: string
        sdkEphemPubKey:
          $ref: '#/components/schemas/SDKEphemPubKey'
        sdkMaxTimeout:
          default: 60
          description: |-
            The maximum amount of time in minutes for the 3D Secure 2 authentication process.
            Optional and only for `deviceChannel` set to **app**. Defaults to **60** minutes.
          format: int32
          title: sdkMaxTimeout
          type: integer
        sdkReferenceNumber:
          description: The `sdkReferenceNumber` value as received from the 3D Secure
            2 SDK.
          title: sdkReferenceNumber
          type: string
        sdkTransID:
          description: The `sdkTransID` value as received from the 3D Secure 2 SDK.
          title: sdkTransID
          type: string
        threeDSCompInd:
          description: Completion indicator for the device fingerprinting.
          title: threeDSCompInd
          type: string
        threeDSRequestorAuthenticationInd:
          description: Indicates the type of Authentication request.
          title: threeDSRequestorAuthenticationInd
          type: string
          x-addedInVersion: "68"
        threeDSRequestorAuthenticationInfo:
          $ref: '#/components/schemas/ThreeDSRequestorAuthenticationInfo'
        threeDSRequestorChallengeInd:
          description: |-
            Indicates whether a challenge is requested for this transaction. Possible values:
            * **01** — No preference
            * **02** — No challenge requested
            * **03** — Challenge requested (3DS Requestor preference)
            * **04** — Challenge requested (Mandate)
            * **05** — No challenge (transactional risk analysis is already performed)
            * **06** — Data Only
          enum:
          - "01"
          - "02"
          - "03"
          - "04"
          - "05"
          - "06"
          title: threeDSRequestorChallengeInd
          type: string
          x-addedInVersion: "68"
        threeDSRequestorID:
          description: "Required for [authentication-only integration](https://docs.adyen.com/online-payments/3d-secure/other-3ds-flows/authentication-only)\
            \ for Visa. Unique 3D Secure requestor identifier assigned by the Directory\
            \ Server when you enrol for 3D Secure 2."
          title: threeDSRequestorID
          type: string
        threeDSRequestorName:
          description: "Required for [authentication-only integration](https://docs.adyen.com/online-payments/3d-secure/other-3ds-flows/authentication-only)\
            \ for Visa. Unique 3D Secure requestor name assigned by the Directory\
            \ Server when you enrol for 3D Secure 2."
          title: threeDSRequestorName
          type: string
        threeDSRequestorPriorAuthenticationInfo:
          $ref: '#/components/schemas/ThreeDSRequestorPriorAuthenticationInfo'
        threeDSRequestorURL:
          description: URL of the (customer service) website that will be shown to
            the shopper in case of technical errors during the 3D Secure 2 process.
          title: threeDSRequestorURL
          type: string
        transType:
          description: |-
            Identifies the type of transaction being authenticated. Length: 2 characters. Allowed values:
            * **01** — Goods/Service Purchase
            * **03** — Check Acceptance
            * **10** — Account Funding
            * **11** — Quasi-Cash Transaction
            * **28** — Prepaid Activation and Load
          enum:
          - "01"
          - "03"
          - "10"
          - "11"
          - "28"
          maxLength: 2
          minLength: 2
          title: transType
          type: string
          x-addedInVersion: "68"
        transactionType:
          description: Identify the type of the transaction being authenticated.
          enum:
          - goodsOrServicePurchase
          - checkAcceptance
          - accountFunding
          - quasiCashTransaction
          - prepaidActivationAndLoad
          title: transactionType
          type: string
          x-addedInVersion: "50"
        whiteListStatus:
          description: "The `whiteListStatus` value returned from a previous 3D Secure\
            \ 2 transaction, only applicable for 3D Secure 2 protocol version 2.2.0."
          title: whiteListStatus
          type: string
          x-addedInVersion: "49"
        workPhone:
          $ref: '#/components/schemas/Phone'
      title: ThreeDS2RequestFields
    ThreeDS2ResponseData:
      example:
        acsTransID: acsTransID
        exemptionIndicator: exemptionIndicator
        cardHolderInfo: cardHolderInfo
        sdkEphemPubKey: sdkEphemPubKey
        acsURL: acsURL
        dsReferenceNumber: dsReferenceNumber
        acsReferenceNumber: acsReferenceNumber
        cavvAlgorithm: cavvAlgorithm
        challengeIndicator: challengeIndicator
        dsTransID: dsTransID
        transStatusReason: transStatusReason
        acsOperatorID: acsOperatorID
        authenticationType: authenticationType
        messageVersion: messageVersion
        riskScore: riskScore
        acsSignedContent: acsSignedContent
        acsChallengeMandated: acsChallengeMandated
        transStatus: transStatus
        threeDSServerTransID: threeDSServerTransID
      properties:
        acsChallengeMandated:
          title: acsChallengeMandated
          type: string
        acsOperatorID:
          title: acsOperatorID
          type: string
        acsReferenceNumber:
          title: acsReferenceNumber
          type: string
        acsSignedContent:
          title: acsSignedContent
          type: string
        acsTransID:
          title: acsTransID
          type: string
        acsURL:
          title: acsURL
          type: string
        authenticationType:
          title: authenticationType
          type: string
        cardHolderInfo:
          title: cardHolderInfo
          type: string
        cavvAlgorithm:
          title: cavvAlgorithm
          type: string
        challengeIndicator:
          title: challengeIndicator
          type: string
        dsReferenceNumber:
          title: dsReferenceNumber
          type: string
        dsTransID:
          title: dsTransID
          type: string
        exemptionIndicator:
          title: exemptionIndicator
          type: string
        messageVersion:
          title: messageVersion
          type: string
        riskScore:
          title: riskScore
          type: string
        sdkEphemPubKey:
          title: sdkEphemPubKey
          type: string
        threeDSServerTransID:
          title: threeDSServerTransID
          type: string
        transStatus:
          title: transStatus
          type: string
        transStatusReason:
          title: transStatusReason
          type: string
      title: ThreeDS2ResponseData
    ThreeDS2Result:
      example:
        whiteListStatus: whiteListStatus
        exemptionIndicator: lowValue
        challengeCancel: "01"
        eci: eci
        threeDSRequestorChallengeInd: "01"
        cavvAlgorithm: cavvAlgorithm
        dsTransID: dsTransID
        transStatusReason: transStatusReason
        messageVersion: messageVersion
        riskScore: riskScore
        authenticationValue: authenticationValue
        transStatus: transStatus
        threeDSServerTransID: threeDSServerTransID
        timestamp: timestamp
      properties:
        authenticationValue:
          description: The `authenticationValue` value as defined in the 3D Secure
            2 specification.
          title: authenticationValue
          type: string
        cavvAlgorithm:
          description: "The algorithm used by the ACS to calculate the authentication\
            \ value, only for Cartes Bancaires integrations."
          title: cavvAlgorithm
          type: string
          x-addedInVersion: "50"
        challengeCancel:
          description: "Indicator informing the Access Control Server (ACS) and the\
            \ Directory Server (DS) that the authentication has been cancelled. For\
            \ possible values, refer to [3D Secure API reference](https://docs.adyen.com/online-payments/3d-secure/api-reference#mpidata)."
          enum:
          - "01"
          - "02"
          - "03"
          - "04"
          - "05"
          - "06"
          - "07"
          title: challengeCancel
          type: string
          x-addedInVersion: "67"
        dsTransID:
          description: The `dsTransID` value as defined in the 3D Secure 2 specification.
          title: dsTransID
          type: string
        eci:
          description: The `eci` value as defined in the 3D Secure 2 specification.
          title: eci
          type: string
        exemptionIndicator:
          description: |
            Indicates the exemption type that was applied by the issuer to the authentication, if exemption applied.
            Allowed values:
            * `lowValue`
            * `secureCorporate`
            * `trustedBeneficiary`
            * `transactionRiskAnalysis`
          enum:
          - lowValue
          - secureCorporate
          - trustedBeneficiary
          - transactionRiskAnalysis
          title: exemptionIndicator
          type: string
          x-addedInVersion: "67"
        messageVersion:
          description: The `messageVersion` value as defined in the 3D Secure 2 specification.
          title: messageVersion
          type: string
          x-addedInVersion: "49"
        riskScore:
          description: Risk score calculated by Cartes Bancaires Directory Server
            (DS).
          title: riskScore
          type: string
          x-addedInVersion: "67"
        threeDSRequestorChallengeInd:
          description: |-
            Indicates whether a challenge is requested for this transaction. Possible values:
            * **01** — No preference
            * **02** — No challenge requested
            * **03** — Challenge requested (3DS Requestor preference)
            * **04** — Challenge requested (Mandate)
            * **05** — No challenge (transactional risk analysis is already performed)
            * **06** — Data Only
          enum:
          - "01"
          - "02"
          - "03"
          - "04"
          - "05"
          - "06"
          title: threeDSRequestorChallengeInd
          type: string
          x-addedInVersion: "68"
        threeDSServerTransID:
          description: The `threeDSServerTransID` value as defined in the 3D Secure
            2 specification.
          title: threeDSServerTransID
          type: string
        timestamp:
          description: The `timestamp` value of the 3D Secure 2 authentication.
          title: timestamp
          type: string
        transStatus:
          description: The `transStatus` value as defined in the 3D Secure 2 specification.
          title: transStatus
          type: string
        transStatusReason:
          description: "Provides information on why the `transStatus` field has the\
            \ specified value. For possible values, refer to [our docs](https://docs.adyen.com/online-payments/3d-secure/api-reference#possible-transstatusreason-values)."
          title: transStatusReason
          type: string
        whiteListStatus:
          description: The `whiteListStatus` value as defined in the 3D Secure 2 specification.
          title: whiteListStatus
          type: string
          x-addedInVersion: "49"
      title: ThreeDS2Result
    ThreeDSRequestData:
      example:
        challengeWindowSize: "01"
        dataOnly: "false"
        threeDSVersion: 2.1.0
        nativeThreeDS: preferred
      properties:
        challengeWindowSize:
          description: "Dimensions of the 3DS2 challenge window to be displayed to\
            \ the cardholder.\n\nPossible values:\n\n* **01** - size of 250x400 \n\
            * **02** - size of 390x400\n* **03** - size of 500x600\n* **04** - size\
            \ of 600x400\n* **05** - Fullscreen"
          enum:
          - "01"
          - "02"
          - "03"
          - "04"
          - "05"
          title: challengeWindowSize
          type: string
          x-addedInVersion: "69"
        dataOnly:
          description: Flag for data only flow.
          enum:
          - "false"
          - "true"
          title: dataOnly
          type: string
          x-addedInVersion: "69"
        nativeThreeDS:
          description: |-
            Indicates if [native 3D Secure authentication](https://docs.adyen.com/online-payments/3d-secure/native-3ds2) should be used when available.

            Possible values:
            * **preferred**: Use native 3D Secure authentication when available.
          enum:
          - preferred
          title: nativeThreeDS
          type: string
          x-addedInVersion: "69"
        threeDSVersion:
          description: |-
            The version of 3D Secure to use.

            Possible values:

            * **2.1.0**
            * **2.2.0**
          enum:
          - 2.1.0
          - 2.2.0
          title: threeDSVersion
          type: string
          x-addedInVersion: "69"
      title: ThreeDSRequestData
    ThreeDSRequestorAuthenticationInfo:
      example:
        threeDSReqAuthMethod: "01"
        threeDSReqAuthData: threeDSReqAuthData
        threeDSReqAuthTimestamp: threeDSReqAuthTimestamp
      properties:
        threeDSReqAuthData:
          description: "Data that documents and supports a specific authentication\
            \ process. Maximum length: 2048 bytes."
          title: threeDSReqAuthData
          type: string
        threeDSReqAuthMethod:
          description: |-
            Mechanism used by the Cardholder to authenticate to the 3DS Requestor. Allowed values:
            * **01** — No 3DS Requestor authentication occurred (for example, cardholder “logged in” as guest).
            * **02** — Login to the cardholder account at the 3DS Requestor system using 3DS Requestor’s own credentials.
            * **03** — Login to the cardholder account at the 3DS Requestor system using federated ID.
            * **04** — Login to the cardholder account at the 3DS Requestor system using issuer credentials.
            * **05** — Login to the cardholder account at the 3DS Requestor system using third-party authentication.
            * **06** — Login to the cardholder account at the 3DS Requestor system using FIDO Authenticator.
          enum:
          - "01"
          - "02"
          - "03"
          - "04"
          - "05"
          - "06"
          maxLength: 2
          minLength: 2
          title: threeDSReqAuthMethod
          type: string
        threeDSReqAuthTimestamp:
          description: "Date and time in UTC of the cardholder authentication. Format:\
            \ YYYYMMDDHHMM"
          maxLength: 12
          minLength: 12
          title: threeDSReqAuthTimestamp
          type: string
      title: ThreeDSRequestorAuthenticationInfo
    ThreeDSRequestorPriorAuthenticationInfo:
      example:
        threeDSReqPriorRef: threeDSReqPriorRef
        threeDSReqPriorAuthData: threeDSReqPriorAuthData
        threeDSReqPriorAuthMethod: "01"
        threeDSReqPriorAuthTimestamp: threeDSReqPriorAuthTimestamp
      properties:
        threeDSReqPriorAuthData:
          description: "Data that documents and supports a specific authentication\
            \ process. Maximum length: 2048 bytes."
          title: threeDSReqPriorAuthData
          type: string
        threeDSReqPriorAuthMethod:
          description: |-
            Mechanism used by the Cardholder to previously authenticate to the 3DS Requestor. Allowed values:
            * **01** — Frictionless authentication occurred by ACS.
            * **02** — Cardholder challenge occurred by ACS.
            * **03** — AVS verified.
            * **04** — Other issuer methods.
          enum:
          - "01"
          - "02"
          - "03"
          - "04"
          maxLength: 2
          minLength: 2
          title: threeDSReqPriorAuthMethod
          type: string
        threeDSReqPriorAuthTimestamp:
          description: "Date and time in UTC of the prior cardholder authentication.\
            \ Format: YYYYMMDDHHMM"
          maxLength: 12
          minLength: 12
          title: threeDSReqPriorAuthTimestamp
          type: string
        threeDSReqPriorRef:
          description: "This data element provides additional information to the ACS\
            \ to determine the best approach for handing a request. This data element\
            \ contains an ACS Transaction ID for a prior authenticated transaction.\
            \ For example, the first recurring transaction that was authenticated\
            \ with the cardholder. Length: 30 characters."
          maxLength: 36
          minLength: 36
          title: threeDSReqPriorRef
          type: string
      title: ThreeDSRequestorPriorAuthenticationInfo
    ThreeDSecureData:
      example:
        cavv: cavv
        authenticationResponse: "Y"
        xid: xid
        cavvAlgorithm: cavvAlgorithm
        dsTransID: dsTransID
        tokenAuthenticationVerificationValue: tokenAuthenticationVerificationValue
        transStatusReason: transStatusReason
        challengeCancel: "01"
        directoryResponse: A
        eci: eci
        riskScore: riskScore
        threeDSVersion: threeDSVersion
      properties:
        authenticationResponse:
          description: |-
            In 3D Secure 1, the authentication response if the shopper was redirected.

            In 3D Secure 2, this is the `transStatus` from the challenge result. If the transaction was frictionless, omit this parameter.
          enum:
          - "Y"
          - "N"
          - U
          - A
          title: authenticationResponse
          type: string
        cavv:
          description: "The cardholder authentication value (base64 encoded, 20 bytes\
            \ in a decoded form)."
          title: cavv
          type: string
        cavvAlgorithm:
          description: The CAVV algorithm used. Include this only for 3D Secure 1.
          title: cavvAlgorithm
          type: string
        challengeCancel:
          description: "Indicator informing the Access Control Server (ACS) and the\
            \ Directory Server (DS) that the authentication has been cancelled. For\
            \ possible values, refer to [3D Secure API reference](https://docs.adyen.com/online-payments/3d-secure/api-reference#mpidata)."
          enum:
          - "01"
          - "02"
          - "03"
          - "04"
          - "05"
          - "06"
          - "07"
          title: challengeCancel
          type: string
          x-addedInVersion: "67"
        directoryResponse:
          description: |-
            In 3D Secure 1, this is the enrollment response from the 3D directory server.

            In 3D Secure 2, this is the `transStatus` from the `ARes`.
          enum:
          - A
          - C
          - D
          - I
          - "N"
          - R
          - U
          - "Y"
          title: directoryResponse
          type: string
        dsTransID:
          description: Supported for 3D Secure 2. The unique transaction identifier
            assigned by the Directory Server (DS) to identify a single transaction.
          title: dsTransID
          type: string
          x-addedInVersion: "40"
        eci:
          description: The electronic commerce indicator.
          title: eci
          type: string
        riskScore:
          description: Risk score calculated by Directory Server (DS). Required for
            Cartes Bancaires integrations.
          title: riskScore
          type: string
          x-addedInVersion: "67"
        threeDSVersion:
          description: The version of the 3D Secure protocol.
          title: threeDSVersion
          type: string
          x-addedInVersion: "40"
        tokenAuthenticationVerificationValue:
          description: Network token authentication verification value (TAVV). The
            network token cryptogram.
          title: tokenAuthenticationVerificationValue
          type: string
          x-addedInVersion: "68"
        transStatusReason:
          description: "Provides information on why the `transStatus` field has the\
            \ specified value. For possible values, refer to [our docs](https://docs.adyen.com/online-payments/3d-secure/api-reference#possible-transstatusreason-values)."
          title: transStatusReason
          type: string
          x-addedInVersion: "67"
        xid:
          description: "Supported for 3D Secure 1. The transaction identifier (Base64-encoded,\
            \ 20 bytes in a decoded form)."
          title: xid
          type: string
      title: ThreeDSecureData
    UpdatePaymentLinkRequest:
      example:
        status: expired
      properties:
        status:
          description: |-
            Status of the payment link. Possible values:
            * **expired**
          enum:
          - expired
          title: status
          type: string
      required:
      - status
      title: UpdatePaymentLinkRequest
    UpiCollectDetails:
      additionalProperties: false
      properties:
        billingSequenceNumber:
          description: "The sequence number for the debit. For example, send **2**\
            \ if this is the second debit for the subscription. The sequence number\
            \ is included in the notification sent to the shopper."
          title: billingSequenceNumber
          type: string
        checkoutAttemptId:
          description: The checkout attempt identifier.
          title: checkoutAttemptId
          type: string
          x-addedInVersion: "68"
        recurringDetailReference:
          deprecated: true
          description: This is the `recurringDetailReference` returned in the response
            when you created the token.
          title: recurringDetailReference
          type: string
          x-deprecatedInVersion: "49"
          x-deprecatedMessage: Use `storedPaymentMethodId` instead.
        shopperNotificationReference:
          description: The `shopperNotificationReference` returned in the response
            when you requested to notify the shopper. Used for recurring payment only.
          title: shopperNotificationReference
          type: string
        storedPaymentMethodId:
          description: This is the `recurringDetailReference` returned in the response
            when you created the token.
          maxLength: 64
          title: storedPaymentMethodId
          type: string
          x-addedInVersion: "49"
        type:
          default: upi_collect
          description: '**upi_collect**'
          enum:
          - upi_collect
          title: type
          type: string
        virtualPaymentAddress:
          description: The virtual payment address for UPI.
          title: virtualPaymentAddress
          type: string
      required:
      - billingSequenceNumber
      - type
      title: UPI Collect
    UpiIntentDetails:
      additionalProperties: false
      properties:
        checkoutAttemptId:
          description: The checkout attempt identifier.
          title: checkoutAttemptId
          type: string
          x-addedInVersion: "68"
        recurringDetailReference:
          deprecated: true
          description: This is the `recurringDetailReference` returned in the response
            when you created the token.
          title: recurringDetailReference
          type: string
          x-deprecatedInVersion: "49"
          x-deprecatedMessage: Use `storedPaymentMethodId` instead.
        shopperNotificationReference:
          description: The `shopperNotificationReference` returned in the response
            when you requested to notify the shopper. Used for recurring payment only.
          title: shopperNotificationReference
          type: string
        storedPaymentMethodId:
          description: This is the `recurringDetailReference` returned in the response
            when you created the token.
          maxLength: 64
          title: storedPaymentMethodId
          type: string
          x-addedInVersion: "49"
        type:
          default: upi_intent
          description: '**upi_intent**'
          enum:
          - upi_intent
          title: type
          type: string
      required:
      - type
      title: UPI Intent
    UtilityRequest:
      example:
        originDomains:
        - originDomains
        - originDomains
      properties:
        originDomains:
          description: "The list of origin domains, for which origin keys are requested."
          items:
            type: string
          title: originDomains
          type: array
      required:
      - originDomains
      title: UtilityRequest
    UtilityResponse:
      example:
        originKeys:
          key: originKeys
      properties:
        originKeys:
          additionalProperties:
            type: string
          description: "The list of origin keys for all requested domains. For each\
            \ list item, the key is the domain and the value is the origin key."
          title: originKeys
          x-addedInVersion: "1"
      title: UtilityResponse
    VippsDetails:
      additionalProperties: false
      properties:
        checkoutAttemptId:
          description: The checkout attempt identifier.
          title: checkoutAttemptId
          type: string
          x-addedInVersion: "68"
        recurringDetailReference:
          deprecated: true
          description: This is the `recurringDetailReference` returned in the response
            when you created the token.
          title: recurringDetailReference
          type: string
          x-deprecatedInVersion: "49"
          x-deprecatedMessage: Use `storedPaymentMethodId` instead.
        storedPaymentMethodId:
          description: This is the `recurringDetailReference` returned in the response
            when you created the token.
          maxLength: 64
          title: storedPaymentMethodId
          type: string
          x-addedInVersion: "49"
        telephoneNumber:
          description: ""
          title: telephoneNumber
          type: string
        type:
          default: vipps
          description: '**vipps**'
          enum:
          - vipps
          title: type
          type: string
      required:
      - telephoneNumber
      title: Vipps
    VisaCheckoutDetails:
      additionalProperties: false
      properties:
        checkoutAttemptId:
          description: The checkout attempt identifier.
          title: checkoutAttemptId
          type: string
          x-addedInVersion: "68"
        fundingSource:
          description: "The funding source that should be used when multiple sources\
            \ are available. For Brazilian combo cards, by default the funding source\
            \ is credit. To use debit, set this value to **debit**."
          enum:
          - credit
          - debit
          title: fundingSource
          type: string
        type:
          default: visacheckout
          description: '**visacheckout**'
          enum:
          - visacheckout
          title: type
          type: string
        visaCheckoutCallId:
          description: "The Visa Click to Pay Call ID value. When your shopper selects\
            \ a payment and/or a shipping address from Visa Click to Pay, you will\
            \ receive a Visa Click to Pay Call ID."
          title: visaCheckoutCallId
          type: string
      required:
      - visaCheckoutCallId
      title: Visa Checkout
    WeChatPayDetails:
      additionalProperties: false
      properties:
        checkoutAttemptId:
          description: The checkout attempt identifier.
          title: checkoutAttemptId
          type: string
          x-addedInVersion: "68"
        type:
          default: wechatpay
          description: '**wechatpay**'
          enum:
          - wechatpay
          - wechatpay_pos
          title: type
          type: string
      title: WeChat Pay
    WeChatPayMiniProgramDetails:
      additionalProperties: false
      properties:
        appId:
          title: appId
          type: string
        checkoutAttemptId:
          description: The checkout attempt identifier.
          title: checkoutAttemptId
          type: string
          x-addedInVersion: "68"
        openid:
          title: openid
          type: string
        type:
          default: wechatpayMiniProgram
          description: '**wechatpayMiniProgram**'
          enum:
          - wechatpayMiniProgram
          title: type
          type: string
      title: WeChat Pay - Mini Program
    ZipDetails:
      additionalProperties: false
      properties:
        checkoutAttemptId:
          description: The checkout attempt identifier.
          title: checkoutAttemptId
          type: string
          x-addedInVersion: "68"
        clickAndCollect:
          description: "Set this to **true** if the shopper would like to pick up\
            \ and collect their order, instead of having the goods delivered to them."
          title: clickAndCollect
          type: string
        recurringDetailReference:
          deprecated: true
          description: This is the `recurringDetailReference` returned in the response
            when you created the token.
          title: recurringDetailReference
          type: string
          x-deprecatedInVersion: "49"
          x-deprecatedMessage: Use `storedPaymentMethodId` instead.
        storedPaymentMethodId:
          description: This is the `recurringDetailReference` returned in the response
            when you created the token.
          maxLength: 64
          title: storedPaymentMethodId
          type: string
          x-addedInVersion: "49"
        type:
          default: zip
          description: '**zip**'
          enum:
          - zip
          - zip_pos
          title: type
          type: string
      title: Zip
    BalanceCheckRequest_additionalData:
      additionalProperties:
        type: string
      anyOf:
      - $ref: '#/components/schemas/AdditionalData3DSecure'
      - $ref: '#/components/schemas/AdditionalDataAirline'
      - $ref: '#/components/schemas/AdditionalDataCarRental'
      - $ref: '#/components/schemas/AdditionalDataCommon'
      - $ref: '#/components/schemas/AdditionalDataLevel23'
      - $ref: '#/components/schemas/AdditionalDataLodging'
      - $ref: '#/components/schemas/AdditionalDataOpenInvoice'
      - $ref: '#/components/schemas/AdditionalDataOpi'
      - $ref: '#/components/schemas/AdditionalDataRatepay'
      - $ref: '#/components/schemas/AdditionalDataRetry'
      - $ref: '#/components/schemas/AdditionalDataRisk'
      - $ref: '#/components/schemas/AdditionalDataRiskStandalone'
      - $ref: '#/components/schemas/AdditionalDataSubMerchant'
      - $ref: '#/components/schemas/AdditionalDataTemporaryServices'
      - $ref: '#/components/schemas/AdditionalDataWallets'
      description: |-
        This field contains additional data, which may be required for a particular payment request.

        The `additionalData` object consists of entries, each of which includes the key and value.
      title: BalanceCheckRequest_additionalData
    BalanceCheckResponse_additionalData:
      additionalProperties:
        type: string
      anyOf:
      - $ref: '#/components/schemas/ResponseAdditionalData3DSecure'
      - $ref: '#/components/schemas/ResponseAdditionalDataBillingAddress'
      - $ref: '#/components/schemas/ResponseAdditionalDataCard'
      - $ref: '#/components/schemas/ResponseAdditionalDataCommon'
      - $ref: '#/components/schemas/ResponseAdditionalDataDomesticError'
      - $ref: '#/components/schemas/ResponseAdditionalDataInstallments'
      - $ref: '#/components/schemas/ResponseAdditionalDataNetworkTokens'
      - $ref: '#/components/schemas/ResponseAdditionalDataOpi'
      - $ref: '#/components/schemas/ResponseAdditionalDataSepa'
      description: "Contains additional information about the payment. Some data fields\
        \ are included only if you select them first: Go to **Customer Area** > **Developers**\
        \ > **Additional data**."
      title: BalanceCheckResponse_additionalData
    DonationPaymentRequest_paymentMethod:
      description: The type and required details of a payment method to use.
      oneOf:
      - $ref: '#/components/schemas/ApplePayDonations'
      - $ref: '#/components/schemas/CardDonations'
      - $ref: '#/components/schemas/GooglePayDonations'
      - $ref: '#/components/schemas/IdealDonations'
      - $ref: '#/components/schemas/PayWithGoogleDonations'
      title: DonationPaymentRequest_paymentMethod
    PaymentRequest_paymentMethod:
      description: The type and required details of a payment method to use.
      oneOf:
      - $ref: '#/components/schemas/AchDetails'
      - $ref: '#/components/schemas/AfterpayDetails'
      - $ref: '#/components/schemas/AmazonPayDetails'
      - $ref: '#/components/schemas/AndroidPayDetails'
      - $ref: '#/components/schemas/ApplePayDetails'
      - $ref: '#/components/schemas/BacsDirectDebitDetails'
      - $ref: '#/components/schemas/BillDeskDetails'
      - $ref: '#/components/schemas/BlikDetails'
      - $ref: '#/components/schemas/CardDetails'
      - $ref: '#/components/schemas/CellulantDetails'
      - $ref: '#/components/schemas/DokuDetails'
      - $ref: '#/components/schemas/DotpayDetails'
      - $ref: '#/components/schemas/DragonpayDetails'
      - $ref: '#/components/schemas/EcontextVoucherDetails'
      - $ref: '#/components/schemas/GenericIssuerPaymentMethodDetails'
      - $ref: '#/components/schemas/GiropayDetails'
      - $ref: '#/components/schemas/GooglePayDetails'
      - $ref: '#/components/schemas/IdealDetails'
      - $ref: '#/components/schemas/KlarnaDetails'
      - $ref: '#/components/schemas/MasterpassDetails'
      - $ref: '#/components/schemas/MbwayDetails'
      - $ref: '#/components/schemas/MobilePayDetails'
      - $ref: '#/components/schemas/MolPayDetails'
      - $ref: '#/components/schemas/OpenInvoiceDetails'
      - $ref: '#/components/schemas/PayPalDetails'
      - $ref: '#/components/schemas/PayUUpiDetails'
      - $ref: '#/components/schemas/PayWithGoogleDetails'
      - $ref: '#/components/schemas/PaymentDetails'
      - $ref: '#/components/schemas/RatepayDetails'
      - $ref: '#/components/schemas/SamsungPayDetails'
      - $ref: '#/components/schemas/SepaDirectDebitDetails'
      - $ref: '#/components/schemas/StoredPaymentMethodDetails'
      - $ref: '#/components/schemas/UpiCollectDetails'
      - $ref: '#/components/schemas/UpiIntentDetails'
      - $ref: '#/components/schemas/VippsDetails'
      - $ref: '#/components/schemas/VisaCheckoutDetails'
      - $ref: '#/components/schemas/WeChatPayDetails'
      - $ref: '#/components/schemas/WeChatPayMiniProgramDetails'
      - $ref: '#/components/schemas/ZipDetails'
      title: PaymentRequest_paymentMethod
    PaymentResponse_action:
      description: Action to be taken for completing the payment.
      oneOf:
      - $ref: '#/components/schemas/CheckoutAwaitAction'
      - $ref: '#/components/schemas/CheckoutDelegatedAuthenticationAction'
      - $ref: '#/components/schemas/CheckoutNativeRedirectAction'
      - $ref: '#/components/schemas/CheckoutQrCodeAction'
      - $ref: '#/components/schemas/CheckoutRedirectAction'
      - $ref: '#/components/schemas/CheckoutSDKAction'
      - $ref: '#/components/schemas/CheckoutThreeDS2Action'
      - $ref: '#/components/schemas/CheckoutVoucherAction'
      title: PaymentResponse_action
      x-addedInVersion: "49"
  securitySchemes:
    ApiKeyAuth:
      in: header
      name: X-API-Key
      type: apiKey
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_ApiKeyAuth
    BasicAuth:
      scheme: basic
      type: http
      x-basicInfoFunc: openapi_server.controllers.security_controller.info_from_BasicAuth
