# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AccountInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_age_indicator: str=None, account_change_date: datetime=None, account_change_indicator: str=None, account_creation_date: datetime=None, add_card_attempts_day: int=None, delivery_address_usage_date: datetime=None, delivery_address_usage_indicator: str=None, home_phone: str=None, mobile_phone: str=None, password_change_date: datetime=None, password_change_indicator: str=None, past_transactions_day: int=None, past_transactions_year: int=None, payment_account_age: datetime=None, payment_account_indicator: str=None, purchases_last6_months: int=None, suspicious_activity: bool=None, work_phone: str=None):
        """AccountInfo - a model defined in OpenAPI

        :param account_age_indicator: The account_age_indicator of this AccountInfo.
        :param account_change_date: The account_change_date of this AccountInfo.
        :param account_change_indicator: The account_change_indicator of this AccountInfo.
        :param account_creation_date: The account_creation_date of this AccountInfo.
        :param add_card_attempts_day: The add_card_attempts_day of this AccountInfo.
        :param delivery_address_usage_date: The delivery_address_usage_date of this AccountInfo.
        :param delivery_address_usage_indicator: The delivery_address_usage_indicator of this AccountInfo.
        :param home_phone: The home_phone of this AccountInfo.
        :param mobile_phone: The mobile_phone of this AccountInfo.
        :param password_change_date: The password_change_date of this AccountInfo.
        :param password_change_indicator: The password_change_indicator of this AccountInfo.
        :param past_transactions_day: The past_transactions_day of this AccountInfo.
        :param past_transactions_year: The past_transactions_year of this AccountInfo.
        :param payment_account_age: The payment_account_age of this AccountInfo.
        :param payment_account_indicator: The payment_account_indicator of this AccountInfo.
        :param purchases_last6_months: The purchases_last6_months of this AccountInfo.
        :param suspicious_activity: The suspicious_activity of this AccountInfo.
        :param work_phone: The work_phone of this AccountInfo.
        """
        self.openapi_types = {
            'account_age_indicator': str,
            'account_change_date': datetime,
            'account_change_indicator': str,
            'account_creation_date': datetime,
            'add_card_attempts_day': int,
            'delivery_address_usage_date': datetime,
            'delivery_address_usage_indicator': str,
            'home_phone': str,
            'mobile_phone': str,
            'password_change_date': datetime,
            'password_change_indicator': str,
            'past_transactions_day': int,
            'past_transactions_year': int,
            'payment_account_age': datetime,
            'payment_account_indicator': str,
            'purchases_last6_months': int,
            'suspicious_activity': bool,
            'work_phone': str
        }

        self.attribute_map = {
            'account_age_indicator': 'accountAgeIndicator',
            'account_change_date': 'accountChangeDate',
            'account_change_indicator': 'accountChangeIndicator',
            'account_creation_date': 'accountCreationDate',
            'add_card_attempts_day': 'addCardAttemptsDay',
            'delivery_address_usage_date': 'deliveryAddressUsageDate',
            'delivery_address_usage_indicator': 'deliveryAddressUsageIndicator',
            'home_phone': 'homePhone',
            'mobile_phone': 'mobilePhone',
            'password_change_date': 'passwordChangeDate',
            'password_change_indicator': 'passwordChangeIndicator',
            'past_transactions_day': 'pastTransactionsDay',
            'past_transactions_year': 'pastTransactionsYear',
            'payment_account_age': 'paymentAccountAge',
            'payment_account_indicator': 'paymentAccountIndicator',
            'purchases_last6_months': 'purchasesLast6Months',
            'suspicious_activity': 'suspiciousActivity',
            'work_phone': 'workPhone'
        }

        self._account_age_indicator = account_age_indicator
        self._account_change_date = account_change_date
        self._account_change_indicator = account_change_indicator
        self._account_creation_date = account_creation_date
        self._add_card_attempts_day = add_card_attempts_day
        self._delivery_address_usage_date = delivery_address_usage_date
        self._delivery_address_usage_indicator = delivery_address_usage_indicator
        self._home_phone = home_phone
        self._mobile_phone = mobile_phone
        self._password_change_date = password_change_date
        self._password_change_indicator = password_change_indicator
        self._past_transactions_day = past_transactions_day
        self._past_transactions_year = past_transactions_year
        self._payment_account_age = payment_account_age
        self._payment_account_indicator = payment_account_indicator
        self._purchases_last6_months = purchases_last6_months
        self._suspicious_activity = suspicious_activity
        self._work_phone = work_phone

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AccountInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AccountInfo of this AccountInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_age_indicator(self):
        """Gets the account_age_indicator of this AccountInfo.

        Indicator for the length of time since this shopper account was created in the merchant's environment. Allowed values: * notApplicable * thisTransaction * lessThan30Days * from30To60Days * moreThan60Days

        :return: The account_age_indicator of this AccountInfo.
        :rtype: str
        """
        return self._account_age_indicator

    @account_age_indicator.setter
    def account_age_indicator(self, account_age_indicator):
        """Sets the account_age_indicator of this AccountInfo.

        Indicator for the length of time since this shopper account was created in the merchant's environment. Allowed values: * notApplicable * thisTransaction * lessThan30Days * from30To60Days * moreThan60Days

        :param account_age_indicator: The account_age_indicator of this AccountInfo.
        :type account_age_indicator: str
        """
        allowed_values = ["notApplicable", "thisTransaction", "lessThan30Days", "from30To60Days", "moreThan60Days"]  # noqa: E501
        if account_age_indicator not in allowed_values:
            raise ValueError(
                "Invalid value for `account_age_indicator` ({0}), must be one of {1}"
                .format(account_age_indicator, allowed_values)
            )

        self._account_age_indicator = account_age_indicator

    @property
    def account_change_date(self):
        """Gets the account_change_date of this AccountInfo.

        Date when the shopper's account was last changed.

        :return: The account_change_date of this AccountInfo.
        :rtype: datetime
        """
        return self._account_change_date

    @account_change_date.setter
    def account_change_date(self, account_change_date):
        """Sets the account_change_date of this AccountInfo.

        Date when the shopper's account was last changed.

        :param account_change_date: The account_change_date of this AccountInfo.
        :type account_change_date: datetime
        """

        self._account_change_date = account_change_date

    @property
    def account_change_indicator(self):
        """Gets the account_change_indicator of this AccountInfo.

        Indicator for the length of time since the shopper's account was last updated. Allowed values: * thisTransaction * lessThan30Days * from30To60Days * moreThan60Days

        :return: The account_change_indicator of this AccountInfo.
        :rtype: str
        """
        return self._account_change_indicator

    @account_change_indicator.setter
    def account_change_indicator(self, account_change_indicator):
        """Sets the account_change_indicator of this AccountInfo.

        Indicator for the length of time since the shopper's account was last updated. Allowed values: * thisTransaction * lessThan30Days * from30To60Days * moreThan60Days

        :param account_change_indicator: The account_change_indicator of this AccountInfo.
        :type account_change_indicator: str
        """
        allowed_values = ["thisTransaction", "lessThan30Days", "from30To60Days", "moreThan60Days"]  # noqa: E501
        if account_change_indicator not in allowed_values:
            raise ValueError(
                "Invalid value for `account_change_indicator` ({0}), must be one of {1}"
                .format(account_change_indicator, allowed_values)
            )

        self._account_change_indicator = account_change_indicator

    @property
    def account_creation_date(self):
        """Gets the account_creation_date of this AccountInfo.

        Date when the shopper's account was created.

        :return: The account_creation_date of this AccountInfo.
        :rtype: datetime
        """
        return self._account_creation_date

    @account_creation_date.setter
    def account_creation_date(self, account_creation_date):
        """Sets the account_creation_date of this AccountInfo.

        Date when the shopper's account was created.

        :param account_creation_date: The account_creation_date of this AccountInfo.
        :type account_creation_date: datetime
        """

        self._account_creation_date = account_creation_date

    @property
    def add_card_attempts_day(self):
        """Gets the add_card_attempts_day of this AccountInfo.

        Number of attempts the shopper tried to add a card to their account in the last day.

        :return: The add_card_attempts_day of this AccountInfo.
        :rtype: int
        """
        return self._add_card_attempts_day

    @add_card_attempts_day.setter
    def add_card_attempts_day(self, add_card_attempts_day):
        """Sets the add_card_attempts_day of this AccountInfo.

        Number of attempts the shopper tried to add a card to their account in the last day.

        :param add_card_attempts_day: The add_card_attempts_day of this AccountInfo.
        :type add_card_attempts_day: int
        """

        self._add_card_attempts_day = add_card_attempts_day

    @property
    def delivery_address_usage_date(self):
        """Gets the delivery_address_usage_date of this AccountInfo.

        Date the selected delivery address was first used.

        :return: The delivery_address_usage_date of this AccountInfo.
        :rtype: datetime
        """
        return self._delivery_address_usage_date

    @delivery_address_usage_date.setter
    def delivery_address_usage_date(self, delivery_address_usage_date):
        """Sets the delivery_address_usage_date of this AccountInfo.

        Date the selected delivery address was first used.

        :param delivery_address_usage_date: The delivery_address_usage_date of this AccountInfo.
        :type delivery_address_usage_date: datetime
        """

        self._delivery_address_usage_date = delivery_address_usage_date

    @property
    def delivery_address_usage_indicator(self):
        """Gets the delivery_address_usage_indicator of this AccountInfo.

        Indicator for the length of time since this delivery address was first used. Allowed values: * thisTransaction * lessThan30Days * from30To60Days * moreThan60Days

        :return: The delivery_address_usage_indicator of this AccountInfo.
        :rtype: str
        """
        return self._delivery_address_usage_indicator

    @delivery_address_usage_indicator.setter
    def delivery_address_usage_indicator(self, delivery_address_usage_indicator):
        """Sets the delivery_address_usage_indicator of this AccountInfo.

        Indicator for the length of time since this delivery address was first used. Allowed values: * thisTransaction * lessThan30Days * from30To60Days * moreThan60Days

        :param delivery_address_usage_indicator: The delivery_address_usage_indicator of this AccountInfo.
        :type delivery_address_usage_indicator: str
        """
        allowed_values = ["thisTransaction", "lessThan30Days", "from30To60Days", "moreThan60Days"]  # noqa: E501
        if delivery_address_usage_indicator not in allowed_values:
            raise ValueError(
                "Invalid value for `delivery_address_usage_indicator` ({0}), must be one of {1}"
                .format(delivery_address_usage_indicator, allowed_values)
            )

        self._delivery_address_usage_indicator = delivery_address_usage_indicator

    @property
    def home_phone(self):
        """Gets the home_phone of this AccountInfo.

        Shopper's home phone number (including the country code).

        :return: The home_phone of this AccountInfo.
        :rtype: str
        """
        return self._home_phone

    @home_phone.setter
    def home_phone(self, home_phone):
        """Sets the home_phone of this AccountInfo.

        Shopper's home phone number (including the country code).

        :param home_phone: The home_phone of this AccountInfo.
        :type home_phone: str
        """

        self._home_phone = home_phone

    @property
    def mobile_phone(self):
        """Gets the mobile_phone of this AccountInfo.

        Shopper's mobile phone number (including the country code).

        :return: The mobile_phone of this AccountInfo.
        :rtype: str
        """
        return self._mobile_phone

    @mobile_phone.setter
    def mobile_phone(self, mobile_phone):
        """Sets the mobile_phone of this AccountInfo.

        Shopper's mobile phone number (including the country code).

        :param mobile_phone: The mobile_phone of this AccountInfo.
        :type mobile_phone: str
        """

        self._mobile_phone = mobile_phone

    @property
    def password_change_date(self):
        """Gets the password_change_date of this AccountInfo.

        Date when the shopper last changed their password.

        :return: The password_change_date of this AccountInfo.
        :rtype: datetime
        """
        return self._password_change_date

    @password_change_date.setter
    def password_change_date(self, password_change_date):
        """Sets the password_change_date of this AccountInfo.

        Date when the shopper last changed their password.

        :param password_change_date: The password_change_date of this AccountInfo.
        :type password_change_date: datetime
        """

        self._password_change_date = password_change_date

    @property
    def password_change_indicator(self):
        """Gets the password_change_indicator of this AccountInfo.

        Indicator when the shopper has changed their password. Allowed values: * notApplicable * thisTransaction * lessThan30Days * from30To60Days * moreThan60Days

        :return: The password_change_indicator of this AccountInfo.
        :rtype: str
        """
        return self._password_change_indicator

    @password_change_indicator.setter
    def password_change_indicator(self, password_change_indicator):
        """Sets the password_change_indicator of this AccountInfo.

        Indicator when the shopper has changed their password. Allowed values: * notApplicable * thisTransaction * lessThan30Days * from30To60Days * moreThan60Days

        :param password_change_indicator: The password_change_indicator of this AccountInfo.
        :type password_change_indicator: str
        """
        allowed_values = ["notApplicable", "thisTransaction", "lessThan30Days", "from30To60Days", "moreThan60Days"]  # noqa: E501
        if password_change_indicator not in allowed_values:
            raise ValueError(
                "Invalid value for `password_change_indicator` ({0}), must be one of {1}"
                .format(password_change_indicator, allowed_values)
            )

        self._password_change_indicator = password_change_indicator

    @property
    def past_transactions_day(self):
        """Gets the past_transactions_day of this AccountInfo.

        Number of all transactions (successful and abandoned) from this shopper in the past 24 hours.

        :return: The past_transactions_day of this AccountInfo.
        :rtype: int
        """
        return self._past_transactions_day

    @past_transactions_day.setter
    def past_transactions_day(self, past_transactions_day):
        """Sets the past_transactions_day of this AccountInfo.

        Number of all transactions (successful and abandoned) from this shopper in the past 24 hours.

        :param past_transactions_day: The past_transactions_day of this AccountInfo.
        :type past_transactions_day: int
        """

        self._past_transactions_day = past_transactions_day

    @property
    def past_transactions_year(self):
        """Gets the past_transactions_year of this AccountInfo.

        Number of all transactions (successful and abandoned) from this shopper in the past year.

        :return: The past_transactions_year of this AccountInfo.
        :rtype: int
        """
        return self._past_transactions_year

    @past_transactions_year.setter
    def past_transactions_year(self, past_transactions_year):
        """Sets the past_transactions_year of this AccountInfo.

        Number of all transactions (successful and abandoned) from this shopper in the past year.

        :param past_transactions_year: The past_transactions_year of this AccountInfo.
        :type past_transactions_year: int
        """

        self._past_transactions_year = past_transactions_year

    @property
    def payment_account_age(self):
        """Gets the payment_account_age of this AccountInfo.

        Date this payment method was added to the shopper's account.

        :return: The payment_account_age of this AccountInfo.
        :rtype: datetime
        """
        return self._payment_account_age

    @payment_account_age.setter
    def payment_account_age(self, payment_account_age):
        """Sets the payment_account_age of this AccountInfo.

        Date this payment method was added to the shopper's account.

        :param payment_account_age: The payment_account_age of this AccountInfo.
        :type payment_account_age: datetime
        """

        self._payment_account_age = payment_account_age

    @property
    def payment_account_indicator(self):
        """Gets the payment_account_indicator of this AccountInfo.

        Indicator for the length of time since this payment method was added to this shopper's account. Allowed values: * notApplicable * thisTransaction * lessThan30Days * from30To60Days * moreThan60Days

        :return: The payment_account_indicator of this AccountInfo.
        :rtype: str
        """
        return self._payment_account_indicator

    @payment_account_indicator.setter
    def payment_account_indicator(self, payment_account_indicator):
        """Sets the payment_account_indicator of this AccountInfo.

        Indicator for the length of time since this payment method was added to this shopper's account. Allowed values: * notApplicable * thisTransaction * lessThan30Days * from30To60Days * moreThan60Days

        :param payment_account_indicator: The payment_account_indicator of this AccountInfo.
        :type payment_account_indicator: str
        """
        allowed_values = ["notApplicable", "thisTransaction", "lessThan30Days", "from30To60Days", "moreThan60Days"]  # noqa: E501
        if payment_account_indicator not in allowed_values:
            raise ValueError(
                "Invalid value for `payment_account_indicator` ({0}), must be one of {1}"
                .format(payment_account_indicator, allowed_values)
            )

        self._payment_account_indicator = payment_account_indicator

    @property
    def purchases_last6_months(self):
        """Gets the purchases_last6_months of this AccountInfo.

        Number of successful purchases in the last six months.

        :return: The purchases_last6_months of this AccountInfo.
        :rtype: int
        """
        return self._purchases_last6_months

    @purchases_last6_months.setter
    def purchases_last6_months(self, purchases_last6_months):
        """Sets the purchases_last6_months of this AccountInfo.

        Number of successful purchases in the last six months.

        :param purchases_last6_months: The purchases_last6_months of this AccountInfo.
        :type purchases_last6_months: int
        """

        self._purchases_last6_months = purchases_last6_months

    @property
    def suspicious_activity(self):
        """Gets the suspicious_activity of this AccountInfo.

        Whether suspicious activity was recorded on this account.

        :return: The suspicious_activity of this AccountInfo.
        :rtype: bool
        """
        return self._suspicious_activity

    @suspicious_activity.setter
    def suspicious_activity(self, suspicious_activity):
        """Sets the suspicious_activity of this AccountInfo.

        Whether suspicious activity was recorded on this account.

        :param suspicious_activity: The suspicious_activity of this AccountInfo.
        :type suspicious_activity: bool
        """

        self._suspicious_activity = suspicious_activity

    @property
    def work_phone(self):
        """Gets the work_phone of this AccountInfo.

        Shopper's work phone number (including the country code).

        :return: The work_phone of this AccountInfo.
        :rtype: str
        """
        return self._work_phone

    @work_phone.setter
    def work_phone(self, work_phone):
        """Sets the work_phone of this AccountInfo.

        Shopper's work phone number (including the country code).

        :param work_phone: The work_phone of this AccountInfo.
        :type work_phone: str
        """

        self._work_phone = work_phone
