# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PaymentMethodGroup(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, payment_method_data: str=None, type: str=None):
        """PaymentMethodGroup - a model defined in OpenAPI

        :param name: The name of this PaymentMethodGroup.
        :param payment_method_data: The payment_method_data of this PaymentMethodGroup.
        :param type: The type of this PaymentMethodGroup.
        """
        self.openapi_types = {
            'name': str,
            'payment_method_data': str,
            'type': str
        }

        self.attribute_map = {
            'name': 'name',
            'payment_method_data': 'paymentMethodData',
            'type': 'type'
        }

        self._name = name
        self._payment_method_data = payment_method_data
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PaymentMethodGroup':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PaymentMethodGroup of this PaymentMethodGroup.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this PaymentMethodGroup.

        The name of the group.

        :return: The name of this PaymentMethodGroup.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this PaymentMethodGroup.

        The name of the group.

        :param name: The name of this PaymentMethodGroup.
        :type name: str
        """

        self._name = name

    @property
    def payment_method_data(self):
        """Gets the payment_method_data of this PaymentMethodGroup.

        Echo data to be used if the payment method is displayed as part of this group.

        :return: The payment_method_data of this PaymentMethodGroup.
        :rtype: str
        """
        return self._payment_method_data

    @payment_method_data.setter
    def payment_method_data(self, payment_method_data):
        """Sets the payment_method_data of this PaymentMethodGroup.

        Echo data to be used if the payment method is displayed as part of this group.

        :param payment_method_data: The payment_method_data of this PaymentMethodGroup.
        :type payment_method_data: str
        """

        self._payment_method_data = payment_method_data

    @property
    def type(self):
        """Gets the type of this PaymentMethodGroup.

        The unique code of the group.

        :return: The type of this PaymentMethodGroup.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this PaymentMethodGroup.

        The unique code of the group.

        :param type: The type of this PaymentMethodGroup.
        :type type: str
        """

        self._type = type
