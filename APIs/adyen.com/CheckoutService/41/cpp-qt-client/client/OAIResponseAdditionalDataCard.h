/**
 * Adyen Checkout API
 * Adyen Checkout API provides a simple and flexible way to initiate and authorise online payments. You can use the same integration for payments made with cards (including 3D Secure), mobile wallets, and local payment methods (for example, iDEAL and Sofort).  This API reference provides information on available endpoints and how to interact with them. To learn more about the API, visit [online payments documentation](https://docs.adyen.com/online-payments).  ## Authentication Each request to Checkout API must be signed with an API key. For this, [get your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) from your Customer Area, and set this key to the `X-API-Key` header value, for example:  ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ``` ## Versioning Checkout API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://checkout-test.adyen.com/v41/payments ```  ## Going live  To access the live endpoints, you need an API key from your live Customer Area.  The live endpoint URLs contain a prefix which is unique to your company account, for example: ``` https://{PREFIX}-checkout-live.adyenpayments.com/checkout/v41/payments ```  Get your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.  When preparing to do live transactions with Checkout API, follow the [go-live checklist](https://docs.adyen.com/online-payments/go-live-checklist) to make sure you've got all the required configuration in place.  ## Release notes Have a look at the [release notes](https://docs.adyen.com/online-payments/release-notes?integration_type=api&version=41) to find out what changed in this version!
 *
 * The version of the OpenAPI document: 41
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIResponseAdditionalDataCard.h
 *
 * 
 */

#ifndef OAIResponseAdditionalDataCard_H
#define OAIResponseAdditionalDataCard_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIResponseAdditionalDataCard : public OAIObject {
public:
    OAIResponseAdditionalDataCard();
    OAIResponseAdditionalDataCard(QString json);
    ~OAIResponseAdditionalDataCard() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCardBin() const;
    void setCardBin(const QString &card_bin);
    bool is_card_bin_Set() const;
    bool is_card_bin_Valid() const;

    QString getCardHolderName() const;
    void setCardHolderName(const QString &card_holder_name);
    bool is_card_holder_name_Set() const;
    bool is_card_holder_name_Valid() const;

    QString getCardIssuingBank() const;
    void setCardIssuingBank(const QString &card_issuing_bank);
    bool is_card_issuing_bank_Set() const;
    bool is_card_issuing_bank_Valid() const;

    QString getCardIssuingCountry() const;
    void setCardIssuingCountry(const QString &card_issuing_country);
    bool is_card_issuing_country_Set() const;
    bool is_card_issuing_country_Valid() const;

    QString getCardIssuingCurrency() const;
    void setCardIssuingCurrency(const QString &card_issuing_currency);
    bool is_card_issuing_currency_Set() const;
    bool is_card_issuing_currency_Valid() const;

    QString getCardPaymentMethod() const;
    void setCardPaymentMethod(const QString &card_payment_method);
    bool is_card_payment_method_Set() const;
    bool is_card_payment_method_Valid() const;

    QString getCardSummary() const;
    void setCardSummary(const QString &card_summary);
    bool is_card_summary_Set() const;
    bool is_card_summary_Valid() const;

    QString getIssuerBin() const;
    void setIssuerBin(const QString &issuer_bin);
    bool is_issuer_bin_Set() const;
    bool is_issuer_bin_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_card_bin;
    bool m_card_bin_isSet;
    bool m_card_bin_isValid;

    QString m_card_holder_name;
    bool m_card_holder_name_isSet;
    bool m_card_holder_name_isValid;

    QString m_card_issuing_bank;
    bool m_card_issuing_bank_isSet;
    bool m_card_issuing_bank_isValid;

    QString m_card_issuing_country;
    bool m_card_issuing_country_isSet;
    bool m_card_issuing_country_isValid;

    QString m_card_issuing_currency;
    bool m_card_issuing_currency_isSet;
    bool m_card_issuing_currency_isValid;

    QString m_card_payment_method;
    bool m_card_payment_method_isSet;
    bool m_card_payment_method_isValid;

    QString m_card_summary;
    bool m_card_summary_isSet;
    bool m_card_summary_isValid;

    QString m_issuer_bin;
    bool m_issuer_bin_isSet;
    bool m_issuer_bin_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIResponseAdditionalDataCard)

#endif // OAIResponseAdditionalDataCard_H
