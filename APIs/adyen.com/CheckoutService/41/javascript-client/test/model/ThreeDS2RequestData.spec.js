/**
 * Adyen Checkout API
 * Adyen Checkout API provides a simple and flexible way to initiate and authorise online payments. You can use the same integration for payments made with cards (including 3D Secure), mobile wallets, and local payment methods (for example, iDEAL and Sofort).  This API reference provides information on available endpoints and how to interact with them. To learn more about the API, visit [online payments documentation](https://docs.adyen.com/online-payments).  ## Authentication Each request to Checkout API must be signed with an API key. For this, [get your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) from your Customer Area, and set this key to the `X-API-Key` header value, for example:  ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ``` ## Versioning Checkout API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://checkout-test.adyen.com/v41/payments ```  ## Going live  To access the live endpoints, you need an API key from your live Customer Area.  The live endpoint URLs contain a prefix which is unique to your company account, for example: ``` https://{PREFIX}-checkout-live.adyenpayments.com/checkout/v41/payments ```  Get your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.  When preparing to do live transactions with Checkout API, follow the [go-live checklist](https://docs.adyen.com/online-payments/go-live-checklist) to make sure you've got all the required configuration in place.  ## Release notes Have a look at the [release notes](https://docs.adyen.com/online-payments/release-notes?integration_type=api&version=41) to find out what changed in this version!
 *
 * The version of the OpenAPI document: 41
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AdyenCheckoutApi);
  }
}(this, function(expect, AdyenCheckoutApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AdyenCheckoutApi.ThreeDS2RequestData();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ThreeDS2RequestData', function() {
    it('should create an instance of ThreeDS2RequestData', function() {
      // uncomment below and update the code to test ThreeDS2RequestData
      //var instance = new AdyenCheckoutApi.ThreeDS2RequestData();
      //expect(instance).to.be.a(AdyenCheckoutApi.ThreeDS2RequestData);
    });

    it('should have the property authenticationOnly (base name: "authenticationOnly")', function() {
      // uncomment below and update the code to test the property authenticationOnly
      //var instance = new AdyenCheckoutApi.ThreeDS2RequestData();
      //expect(instance).to.be();
    });

    it('should have the property challengeIndicator (base name: "challengeIndicator")', function() {
      // uncomment below and update the code to test the property challengeIndicator
      //var instance = new AdyenCheckoutApi.ThreeDS2RequestData();
      //expect(instance).to.be();
    });

    it('should have the property deviceChannel (base name: "deviceChannel")', function() {
      // uncomment below and update the code to test the property deviceChannel
      //var instance = new AdyenCheckoutApi.ThreeDS2RequestData();
      //expect(instance).to.be();
    });

    it('should have the property deviceRenderOptions (base name: "deviceRenderOptions")', function() {
      // uncomment below and update the code to test the property deviceRenderOptions
      //var instance = new AdyenCheckoutApi.ThreeDS2RequestData();
      //expect(instance).to.be();
    });

    it('should have the property messageVersion (base name: "messageVersion")', function() {
      // uncomment below and update the code to test the property messageVersion
      //var instance = new AdyenCheckoutApi.ThreeDS2RequestData();
      //expect(instance).to.be();
    });

    it('should have the property notificationURL (base name: "notificationURL")', function() {
      // uncomment below and update the code to test the property notificationURL
      //var instance = new AdyenCheckoutApi.ThreeDS2RequestData();
      //expect(instance).to.be();
    });

    it('should have the property platform (base name: "platform")', function() {
      // uncomment below and update the code to test the property platform
      //var instance = new AdyenCheckoutApi.ThreeDS2RequestData();
      //expect(instance).to.be();
    });

    it('should have the property sdkAppID (base name: "sdkAppID")', function() {
      // uncomment below and update the code to test the property sdkAppID
      //var instance = new AdyenCheckoutApi.ThreeDS2RequestData();
      //expect(instance).to.be();
    });

    it('should have the property sdkEncData (base name: "sdkEncData")', function() {
      // uncomment below and update the code to test the property sdkEncData
      //var instance = new AdyenCheckoutApi.ThreeDS2RequestData();
      //expect(instance).to.be();
    });

    it('should have the property sdkEphemPubKey (base name: "sdkEphemPubKey")', function() {
      // uncomment below and update the code to test the property sdkEphemPubKey
      //var instance = new AdyenCheckoutApi.ThreeDS2RequestData();
      //expect(instance).to.be();
    });

    it('should have the property sdkMaxTimeout (base name: "sdkMaxTimeout")', function() {
      // uncomment below and update the code to test the property sdkMaxTimeout
      //var instance = new AdyenCheckoutApi.ThreeDS2RequestData();
      //expect(instance).to.be();
    });

    it('should have the property sdkReferenceNumber (base name: "sdkReferenceNumber")', function() {
      // uncomment below and update the code to test the property sdkReferenceNumber
      //var instance = new AdyenCheckoutApi.ThreeDS2RequestData();
      //expect(instance).to.be();
    });

    it('should have the property sdkTransID (base name: "sdkTransID")', function() {
      // uncomment below and update the code to test the property sdkTransID
      //var instance = new AdyenCheckoutApi.ThreeDS2RequestData();
      //expect(instance).to.be();
    });

    it('should have the property sdkVersion (base name: "sdkVersion")', function() {
      // uncomment below and update the code to test the property sdkVersion
      //var instance = new AdyenCheckoutApi.ThreeDS2RequestData();
      //expect(instance).to.be();
    });

    it('should have the property threeDSCompInd (base name: "threeDSCompInd")', function() {
      // uncomment below and update the code to test the property threeDSCompInd
      //var instance = new AdyenCheckoutApi.ThreeDS2RequestData();
      //expect(instance).to.be();
    });

    it('should have the property threeDSRequestorID (base name: "threeDSRequestorID")', function() {
      // uncomment below and update the code to test the property threeDSRequestorID
      //var instance = new AdyenCheckoutApi.ThreeDS2RequestData();
      //expect(instance).to.be();
    });

    it('should have the property threeDSRequestorName (base name: "threeDSRequestorName")', function() {
      // uncomment below and update the code to test the property threeDSRequestorName
      //var instance = new AdyenCheckoutApi.ThreeDS2RequestData();
      //expect(instance).to.be();
    });

    it('should have the property threeDSRequestorURL (base name: "threeDSRequestorURL")', function() {
      // uncomment below and update the code to test the property threeDSRequestorURL
      //var instance = new AdyenCheckoutApi.ThreeDS2RequestData();
      //expect(instance).to.be();
    });

  });

}));
