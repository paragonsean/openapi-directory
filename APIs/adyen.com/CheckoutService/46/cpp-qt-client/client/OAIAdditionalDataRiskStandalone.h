/**
 * Adyen Checkout API
 * Adyen Checkout API provides a simple and flexible way to initiate and authorise online payments. You can use the same integration for payments made with cards (including 3D Secure), mobile wallets, and local payment methods (for example, iDEAL and Sofort).  This API reference provides information on available endpoints and how to interact with them. To learn more about the API, visit [online payments documentation](https://docs.adyen.com/online-payments).  ## Authentication Each request to Checkout API must be signed with an API key. For this, [get your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) from your Customer Area, and set this key to the `X-API-Key` header value, for example:  ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ``` ## Versioning Checkout API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://checkout-test.adyen.com/v46/payments ```  ## Going live  To access the live endpoints, you need an API key from your live Customer Area.  The live endpoint URLs contain a prefix which is unique to your company account, for example: ``` https://{PREFIX}-checkout-live.adyenpayments.com/checkout/v46/payments ```  Get your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.  When preparing to do live transactions with Checkout API, follow the [go-live checklist](https://docs.adyen.com/online-payments/go-live-checklist) to make sure you've got all the required configuration in place.  ## Release notes Have a look at the [release notes](https://docs.adyen.com/online-payments/release-notes?integration_type=api&version=46) to find out what changed in this version!
 *
 * The version of the OpenAPI document: 46
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAdditionalDataRiskStandalone.h
 *
 * 
 */

#ifndef OAIAdditionalDataRiskStandalone_H
#define OAIAdditionalDataRiskStandalone_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAdditionalDataRiskStandalone : public OAIObject {
public:
    OAIAdditionalDataRiskStandalone();
    OAIAdditionalDataRiskStandalone(QString json);
    ~OAIAdditionalDataRiskStandalone() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getPayPalCountryCode() const;
    void setPayPalCountryCode(const QString &pay_pal_country_code);
    bool is_pay_pal_country_code_Set() const;
    bool is_pay_pal_country_code_Valid() const;

    QString getPayPalEmailId() const;
    void setPayPalEmailId(const QString &pay_pal_email_id);
    bool is_pay_pal_email_id_Set() const;
    bool is_pay_pal_email_id_Valid() const;

    QString getPayPalFirstName() const;
    void setPayPalFirstName(const QString &pay_pal_first_name);
    bool is_pay_pal_first_name_Set() const;
    bool is_pay_pal_first_name_Valid() const;

    QString getPayPalLastName() const;
    void setPayPalLastName(const QString &pay_pal_last_name);
    bool is_pay_pal_last_name_Set() const;
    bool is_pay_pal_last_name_Valid() const;

    QString getPayPalPayerId() const;
    void setPayPalPayerId(const QString &pay_pal_payer_id);
    bool is_pay_pal_payer_id_Set() const;
    bool is_pay_pal_payer_id_Valid() const;

    QString getPayPalPhone() const;
    void setPayPalPhone(const QString &pay_pal_phone);
    bool is_pay_pal_phone_Set() const;
    bool is_pay_pal_phone_Valid() const;

    QString getPayPalProtectionEligibility() const;
    void setPayPalProtectionEligibility(const QString &pay_pal_protection_eligibility);
    bool is_pay_pal_protection_eligibility_Set() const;
    bool is_pay_pal_protection_eligibility_Valid() const;

    QString getPayPalTransactionId() const;
    void setPayPalTransactionId(const QString &pay_pal_transaction_id);
    bool is_pay_pal_transaction_id_Set() const;
    bool is_pay_pal_transaction_id_Valid() const;

    QString getAvsResultRaw() const;
    void setAvsResultRaw(const QString &avs_result_raw);
    bool is_avs_result_raw_Set() const;
    bool is_avs_result_raw_Valid() const;

    QString getBin() const;
    void setBin(const QString &bin);
    bool is_bin_Set() const;
    bool is_bin_Valid() const;

    QString getCvcResultRaw() const;
    void setCvcResultRaw(const QString &cvc_result_raw);
    bool is_cvc_result_raw_Set() const;
    bool is_cvc_result_raw_Valid() const;

    QString getRiskToken() const;
    void setRiskToken(const QString &risk_token);
    bool is_risk_token_Set() const;
    bool is_risk_token_Valid() const;

    QString getThreeDAuthenticated() const;
    void setThreeDAuthenticated(const QString &three_d_authenticated);
    bool is_three_d_authenticated_Set() const;
    bool is_three_d_authenticated_Valid() const;

    QString getThreeDOffered() const;
    void setThreeDOffered(const QString &three_d_offered);
    bool is_three_d_offered_Set() const;
    bool is_three_d_offered_Valid() const;

    QString getTokenDataType() const;
    void setTokenDataType(const QString &token_data_type);
    bool is_token_data_type_Set() const;
    bool is_token_data_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_pay_pal_country_code;
    bool m_pay_pal_country_code_isSet;
    bool m_pay_pal_country_code_isValid;

    QString m_pay_pal_email_id;
    bool m_pay_pal_email_id_isSet;
    bool m_pay_pal_email_id_isValid;

    QString m_pay_pal_first_name;
    bool m_pay_pal_first_name_isSet;
    bool m_pay_pal_first_name_isValid;

    QString m_pay_pal_last_name;
    bool m_pay_pal_last_name_isSet;
    bool m_pay_pal_last_name_isValid;

    QString m_pay_pal_payer_id;
    bool m_pay_pal_payer_id_isSet;
    bool m_pay_pal_payer_id_isValid;

    QString m_pay_pal_phone;
    bool m_pay_pal_phone_isSet;
    bool m_pay_pal_phone_isValid;

    QString m_pay_pal_protection_eligibility;
    bool m_pay_pal_protection_eligibility_isSet;
    bool m_pay_pal_protection_eligibility_isValid;

    QString m_pay_pal_transaction_id;
    bool m_pay_pal_transaction_id_isSet;
    bool m_pay_pal_transaction_id_isValid;

    QString m_avs_result_raw;
    bool m_avs_result_raw_isSet;
    bool m_avs_result_raw_isValid;

    QString m_bin;
    bool m_bin_isSet;
    bool m_bin_isValid;

    QString m_cvc_result_raw;
    bool m_cvc_result_raw_isSet;
    bool m_cvc_result_raw_isValid;

    QString m_risk_token;
    bool m_risk_token_isSet;
    bool m_risk_token_isValid;

    QString m_three_d_authenticated;
    bool m_three_d_authenticated_isSet;
    bool m_three_d_authenticated_isValid;

    QString m_three_d_offered;
    bool m_three_d_offered_isSet;
    bool m_three_d_offered_isValid;

    QString m_token_data_type;
    bool m_token_data_type_isSet;
    bool m_token_data_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAdditionalDataRiskStandalone)

#endif // OAIAdditionalDataRiskStandalone_H
