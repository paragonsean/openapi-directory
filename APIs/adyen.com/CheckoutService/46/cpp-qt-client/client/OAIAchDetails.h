/**
 * Adyen Checkout API
 * Adyen Checkout API provides a simple and flexible way to initiate and authorise online payments. You can use the same integration for payments made with cards (including 3D Secure), mobile wallets, and local payment methods (for example, iDEAL and Sofort).  This API reference provides information on available endpoints and how to interact with them. To learn more about the API, visit [online payments documentation](https://docs.adyen.com/online-payments).  ## Authentication Each request to Checkout API must be signed with an API key. For this, [get your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) from your Customer Area, and set this key to the `X-API-Key` header value, for example:  ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ``` ## Versioning Checkout API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://checkout-test.adyen.com/v46/payments ```  ## Going live  To access the live endpoints, you need an API key from your live Customer Area.  The live endpoint URLs contain a prefix which is unique to your company account, for example: ``` https://{PREFIX}-checkout-live.adyenpayments.com/checkout/v46/payments ```  Get your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.  When preparing to do live transactions with Checkout API, follow the [go-live checklist](https://docs.adyen.com/online-payments/go-live-checklist) to make sure you've got all the required configuration in place.  ## Release notes Have a look at the [release notes](https://docs.adyen.com/online-payments/release-notes?integration_type=api&version=46) to find out what changed in this version!
 *
 * The version of the OpenAPI document: 46
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAchDetails.h
 *
 * 
 */

#ifndef OAIAchDetails_H
#define OAIAchDetails_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAchDetails : public OAIObject {
public:
    OAIAchDetails();
    OAIAchDetails(QString json);
    ~OAIAchDetails() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBankAccountNumber() const;
    void setBankAccountNumber(const QString &bank_account_number);
    bool is_bank_account_number_Set() const;
    bool is_bank_account_number_Valid() const;

    QString getBankAccountType() const;
    void setBankAccountType(const QString &bank_account_type);
    bool is_bank_account_type_Set() const;
    bool is_bank_account_type_Valid() const;

    QString getBankLocationId() const;
    void setBankLocationId(const QString &bank_location_id);
    bool is_bank_location_id_Set() const;
    bool is_bank_location_id_Valid() const;

    QString getEncryptedBankAccountNumber() const;
    void setEncryptedBankAccountNumber(const QString &encrypted_bank_account_number);
    bool is_encrypted_bank_account_number_Set() const;
    bool is_encrypted_bank_account_number_Valid() const;

    QString getEncryptedBankLocationId() const;
    void setEncryptedBankLocationId(const QString &encrypted_bank_location_id);
    bool is_encrypted_bank_location_id_Set() const;
    bool is_encrypted_bank_location_id_Valid() const;

    QString getOwnerName() const;
    void setOwnerName(const QString &owner_name);
    bool is_owner_name_Set() const;
    bool is_owner_name_Valid() const;

    QString getRecurringDetailReference() const;
    void setRecurringDetailReference(const QString &recurring_detail_reference);
    bool is_recurring_detail_reference_Set() const;
    bool is_recurring_detail_reference_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_bank_account_number;
    bool m_bank_account_number_isSet;
    bool m_bank_account_number_isValid;

    QString m_bank_account_type;
    bool m_bank_account_type_isSet;
    bool m_bank_account_type_isValid;

    QString m_bank_location_id;
    bool m_bank_location_id_isSet;
    bool m_bank_location_id_isValid;

    QString m_encrypted_bank_account_number;
    bool m_encrypted_bank_account_number_isSet;
    bool m_encrypted_bank_account_number_isValid;

    QString m_encrypted_bank_location_id;
    bool m_encrypted_bank_location_id_isSet;
    bool m_encrypted_bank_location_id_isValid;

    QString m_owner_name;
    bool m_owner_name_isSet;
    bool m_owner_name_isValid;

    QString m_recurring_detail_reference;
    bool m_recurring_detail_reference_isSet;
    bool m_recurring_detail_reference_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAchDetails)

#endif // OAIAchDetails_H
