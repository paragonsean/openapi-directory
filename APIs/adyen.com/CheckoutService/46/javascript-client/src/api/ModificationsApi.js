/**
 * Adyen Checkout API
 * Adyen Checkout API provides a simple and flexible way to initiate and authorise online payments. You can use the same integration for payments made with cards (including 3D Secure), mobile wallets, and local payment methods (for example, iDEAL and Sofort).  This API reference provides information on available endpoints and how to interact with them. To learn more about the API, visit [online payments documentation](https://docs.adyen.com/online-payments).  ## Authentication Each request to Checkout API must be signed with an API key. For this, [get your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) from your Customer Area, and set this key to the `X-API-Key` header value, for example:  ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ``` ## Versioning Checkout API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://checkout-test.adyen.com/v46/payments ```  ## Going live  To access the live endpoints, you need an API key from your live Customer Area.  The live endpoint URLs contain a prefix which is unique to your company account, for example: ``` https://{PREFIX}-checkout-live.adyenpayments.com/checkout/v46/payments ```  Get your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.  When preparing to do live transactions with Checkout API, follow the [go-live checklist](https://docs.adyen.com/online-payments/go-live-checklist) to make sure you've got all the required configuration in place.  ## Release notes Have a look at the [release notes](https://docs.adyen.com/online-payments/release-notes?integration_type=api&version=46) to find out what changed in this version!
 *
 * The version of the OpenAPI document: 46
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import PaymentAmountUpdateRequest from '../model/PaymentAmountUpdateRequest';
import PaymentAmountUpdateResponse from '../model/PaymentAmountUpdateResponse';
import PaymentCancelRequest from '../model/PaymentCancelRequest';
import PaymentCancelResponse from '../model/PaymentCancelResponse';
import PaymentCaptureRequest from '../model/PaymentCaptureRequest';
import PaymentCaptureResponse from '../model/PaymentCaptureResponse';
import PaymentRefundRequest from '../model/PaymentRefundRequest';
import PaymentRefundResponse from '../model/PaymentRefundResponse';
import PaymentReversalRequest from '../model/PaymentReversalRequest';
import PaymentReversalResponse from '../model/PaymentReversalResponse';
import ServiceError from '../model/ServiceError';
import StandalonePaymentCancelRequest from '../model/StandalonePaymentCancelRequest';
import StandalonePaymentCancelResponse from '../model/StandalonePaymentCancelResponse';

/**
* Modifications service.
* @module api/ModificationsApi
* @version 46
*/
export default class ModificationsApi {

    /**
    * Constructs a new ModificationsApi. 
    * @alias module:api/ModificationsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the postCancels operation.
     * @callback module:api/ModificationsApi~postCancelsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/StandalonePaymentCancelResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Cancel an authorised payment
     * Cancels the authorisation on a payment that has not yet been [captured](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/payments/{paymentPspReference}/captures), and returns a unique reference for this request. You get the outcome of the request asynchronously, in a [**TECHNICAL_CANCEL** webhook](https://docs.adyen.com/online-payments/cancel#cancellation-webhook).  If you want to cancel a payment using the [`pspReference`](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/payments__resParam_pspReference), use the [`/payments/{paymentPspReference}/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/payments/{paymentPspReference}/cancels) endpoint instead.  If you want to cancel a payment but are not sure whether it has been captured, use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/payments/{paymentPspReference}/reversals) endpoint instead.  For more information, refer to [Cancel](https://docs.adyen.com/online-payments/cancel).
     * @param {Object} opts Optional parameters
     * @param {String} [idempotencyKey] A unique identifier for the message with a maximum of 64 characters (we recommend a UUID).
     * @param {module:model/StandalonePaymentCancelRequest} [standalonePaymentCancelRequest] 
     * @param {module:api/ModificationsApi~postCancelsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/StandalonePaymentCancelResponse}
     */
    postCancels(opts, callback) {
      opts = opts || {};
      let postBody = opts['standalonePaymentCancelRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Idempotency-Key': opts['idempotencyKey']
      };
      let formParams = {
      };

      let authNames = ['BasicAuth', 'ApiKeyAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = StandalonePaymentCancelResponse;
      return this.apiClient.callApi(
        '/cancels', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the postPaymentsPaymentPspReferenceAmountUpdates operation.
     * @callback module:api/ModificationsApi~postPaymentsPaymentPspReferenceAmountUpdatesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PaymentAmountUpdateResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update an authorised amount
     * Increases or decreases the authorised payment amount and returns a unique reference for this request. You get the outcome of the request asynchronously, in an [**AUTHORISATION_ADJUSTMENT** webhook](https://docs.adyen.com/development-resources/webhooks/understand-notifications#event-codes).  You can only update authorised amounts that have not yet been [captured](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/payments/{paymentPspReference}/captures).  The amount you specify in the request is the updated amount, which is larger or smaller than the initial authorised amount.  For more information, refer to [Authorisation adjustment](https://docs.adyen.com/online-payments/adjust-authorisation#use-cases).
     * @param {String} paymentPspReference The [`pspReference`](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/payments__resParam_pspReference) of the payment.
     * @param {Object} opts Optional parameters
     * @param {String} [idempotencyKey] A unique identifier for the message with a maximum of 64 characters (we recommend a UUID).
     * @param {module:model/PaymentAmountUpdateRequest} [paymentAmountUpdateRequest] 
     * @param {module:api/ModificationsApi~postPaymentsPaymentPspReferenceAmountUpdatesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PaymentAmountUpdateResponse}
     */
    postPaymentsPaymentPspReferenceAmountUpdates(paymentPspReference, opts, callback) {
      opts = opts || {};
      let postBody = opts['paymentAmountUpdateRequest'];
      // verify the required parameter 'paymentPspReference' is set
      if (paymentPspReference === undefined || paymentPspReference === null) {
        throw new Error("Missing the required parameter 'paymentPspReference' when calling postPaymentsPaymentPspReferenceAmountUpdates");
      }

      let pathParams = {
        'paymentPspReference': paymentPspReference
      };
      let queryParams = {
      };
      let headerParams = {
        'Idempotency-Key': opts['idempotencyKey']
      };
      let formParams = {
      };

      let authNames = ['BasicAuth', 'ApiKeyAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = PaymentAmountUpdateResponse;
      return this.apiClient.callApi(
        '/payments/{paymentPspReference}/amountUpdates', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the postPaymentsPaymentPspReferenceCancels operation.
     * @callback module:api/ModificationsApi~postPaymentsPaymentPspReferenceCancelsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PaymentCancelResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Cancel an authorised payment
     * Cancels the authorisation on a payment that has not yet been [captured](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/payments/paymentPspReference/captures), and returns a unique reference for this request. You get the outcome of the request asynchronously, in a [**CANCELLATION** webhook](https://docs.adyen.com/online-payments/cancel#cancellation-webhook).  If you want to cancel a payment but don't have the [`pspReference`](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/payments__resParam_pspReference), use the [`/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/cancels) endpoint instead.  If you want to cancel a payment but are not sure whether it has been captured, use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/payments/{paymentPspReference}/reversals) endpoint instead.  For more information, refer to [Cancel](https://docs.adyen.com/online-payments/cancel).
     * @param {String} paymentPspReference The [`pspReference`](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/payments__resParam_pspReference) of the payment that you want to cancel. 
     * @param {Object} opts Optional parameters
     * @param {String} [idempotencyKey] A unique identifier for the message with a maximum of 64 characters (we recommend a UUID).
     * @param {module:model/PaymentCancelRequest} [paymentCancelRequest] 
     * @param {module:api/ModificationsApi~postPaymentsPaymentPspReferenceCancelsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PaymentCancelResponse}
     */
    postPaymentsPaymentPspReferenceCancels(paymentPspReference, opts, callback) {
      opts = opts || {};
      let postBody = opts['paymentCancelRequest'];
      // verify the required parameter 'paymentPspReference' is set
      if (paymentPspReference === undefined || paymentPspReference === null) {
        throw new Error("Missing the required parameter 'paymentPspReference' when calling postPaymentsPaymentPspReferenceCancels");
      }

      let pathParams = {
        'paymentPspReference': paymentPspReference
      };
      let queryParams = {
      };
      let headerParams = {
        'Idempotency-Key': opts['idempotencyKey']
      };
      let formParams = {
      };

      let authNames = ['BasicAuth', 'ApiKeyAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = PaymentCancelResponse;
      return this.apiClient.callApi(
        '/payments/{paymentPspReference}/cancels', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the postPaymentsPaymentPspReferenceCaptures operation.
     * @callback module:api/ModificationsApi~postPaymentsPaymentPspReferenceCapturesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PaymentCaptureResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Capture an authorised payment
     *  Captures an authorised payment and returns a unique reference for this request. You get the outcome of the request asynchronously, in a [**CAPTURE** webhook](https://docs.adyen.com/online-payments/capture#capture-notification).  You can capture either the full authorised amount or a part of the authorised amount. By default, any unclaimed amount after a partial capture gets cancelled. This does not apply if you enabled multiple partial captures on your account and the payment method supports multiple partial captures.   [Automatic capture](https://docs.adyen.com/online-payments/capture#automatic-capture) is the default setting for most payment methods. In these cases, you don't need to make capture requests. However, making capture requests for payments that are captured automatically does not result in double charges.  For more information, refer to [Capture](https://docs.adyen.com/online-payments/capture).
     * @param {String} paymentPspReference The [`pspReference`](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/payments__resParam_pspReference) of the payment that you want to capture.
     * @param {Object} opts Optional parameters
     * @param {String} [idempotencyKey] A unique identifier for the message with a maximum of 64 characters (we recommend a UUID).
     * @param {module:model/PaymentCaptureRequest} [paymentCaptureRequest] 
     * @param {module:api/ModificationsApi~postPaymentsPaymentPspReferenceCapturesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PaymentCaptureResponse}
     */
    postPaymentsPaymentPspReferenceCaptures(paymentPspReference, opts, callback) {
      opts = opts || {};
      let postBody = opts['paymentCaptureRequest'];
      // verify the required parameter 'paymentPspReference' is set
      if (paymentPspReference === undefined || paymentPspReference === null) {
        throw new Error("Missing the required parameter 'paymentPspReference' when calling postPaymentsPaymentPspReferenceCaptures");
      }

      let pathParams = {
        'paymentPspReference': paymentPspReference
      };
      let queryParams = {
      };
      let headerParams = {
        'Idempotency-Key': opts['idempotencyKey']
      };
      let formParams = {
      };

      let authNames = ['BasicAuth', 'ApiKeyAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = PaymentCaptureResponse;
      return this.apiClient.callApi(
        '/payments/{paymentPspReference}/captures', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the postPaymentsPaymentPspReferenceRefunds operation.
     * @callback module:api/ModificationsApi~postPaymentsPaymentPspReferenceRefundsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PaymentRefundResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Refund a captured payment
     * Refunds a payment that has been [captured](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/payments/{paymentPspReference}/captures), and returns a unique reference for this request. You get the outcome of the request asynchronously, in a [**REFUND** webhook](https://docs.adyen.com/online-payments/refund#refund-webhook).  You can refund either the full captured amount or a part of the captured amount. You can also perform multiple partial refunds, as long as their sum doesn't exceed the captured amount.  > Some payment methods do not support partial refunds. To learn if a payment method supports partial refunds, refer to the payment method page such as [cards](https://docs.adyen.com/payment-methods/cards#supported-cards), [iDEAL](https://docs.adyen.com/payment-methods/ideal), or [Klarna](https://docs.adyen.com/payment-methods/klarna).   If you want to refund a payment but are not sure whether it has been captured, use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/payments/{paymentPspReference}/reversals) endpoint instead.  For more information, refer to [Refund](https://docs.adyen.com/online-payments/refund).
     * @param {String} paymentPspReference The [`pspReference`](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/payments__resParam_pspReference) of the payment that you want to refund.
     * @param {Object} opts Optional parameters
     * @param {String} [idempotencyKey] A unique identifier for the message with a maximum of 64 characters (we recommend a UUID).
     * @param {module:model/PaymentRefundRequest} [paymentRefundRequest] 
     * @param {module:api/ModificationsApi~postPaymentsPaymentPspReferenceRefundsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PaymentRefundResponse}
     */
    postPaymentsPaymentPspReferenceRefunds(paymentPspReference, opts, callback) {
      opts = opts || {};
      let postBody = opts['paymentRefundRequest'];
      // verify the required parameter 'paymentPspReference' is set
      if (paymentPspReference === undefined || paymentPspReference === null) {
        throw new Error("Missing the required parameter 'paymentPspReference' when calling postPaymentsPaymentPspReferenceRefunds");
      }

      let pathParams = {
        'paymentPspReference': paymentPspReference
      };
      let queryParams = {
      };
      let headerParams = {
        'Idempotency-Key': opts['idempotencyKey']
      };
      let formParams = {
      };

      let authNames = ['BasicAuth', 'ApiKeyAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = PaymentRefundResponse;
      return this.apiClient.callApi(
        '/payments/{paymentPspReference}/refunds', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the postPaymentsPaymentPspReferenceReversals operation.
     * @callback module:api/ModificationsApi~postPaymentsPaymentPspReferenceReversalsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PaymentReversalResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Refund or cancel a payment
     * [Refunds](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/payments/{paymentPspReference}/refunds) a payment if it has already been captured, and [cancels](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/payments/{paymentPspReference}/cancels) a payment if it has not yet been captured. Returns a unique reference for this request. You get the outcome of the request asynchronously, in a [**CANCEL_OR_REFUND** webhook](https://docs.adyen.com/online-payments/reverse#cancel-or-refund-webhook).  The reversed amount is always the full payment amount. > Do not use this request for payments that involve multiple partial captures.  For more information, refer to [Reversal](https://docs.adyen.com/online-payments/reversal).
     * @param {String} paymentPspReference The [`pspReference`](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/payments__resParam_pspReference) of the payment that you want to reverse. 
     * @param {Object} opts Optional parameters
     * @param {String} [idempotencyKey] A unique identifier for the message with a maximum of 64 characters (we recommend a UUID).
     * @param {module:model/PaymentReversalRequest} [paymentReversalRequest] 
     * @param {module:api/ModificationsApi~postPaymentsPaymentPspReferenceReversalsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PaymentReversalResponse}
     */
    postPaymentsPaymentPspReferenceReversals(paymentPspReference, opts, callback) {
      opts = opts || {};
      let postBody = opts['paymentReversalRequest'];
      // verify the required parameter 'paymentPspReference' is set
      if (paymentPspReference === undefined || paymentPspReference === null) {
        throw new Error("Missing the required parameter 'paymentPspReference' when calling postPaymentsPaymentPspReferenceReversals");
      }

      let pathParams = {
        'paymentPspReference': paymentPspReference
      };
      let queryParams = {
      };
      let headerParams = {
        'Idempotency-Key': opts['idempotencyKey']
      };
      let formParams = {
      };

      let authNames = ['BasicAuth', 'ApiKeyAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = PaymentReversalResponse;
      return this.apiClient.callApi(
        '/payments/{paymentPspReference}/reversals', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
