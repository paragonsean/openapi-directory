/*
 * Adyen Checkout API
 * Adyen Checkout API provides a simple and flexible way to initiate and authorise online payments. You can use the same integration for payments made with cards (including 3D Secure), mobile wallets, and local payment methods (for example, iDEAL and Sofort).  This API reference provides information on available endpoints and how to interact with them. To learn more about the API, visit [online payments documentation](https://docs.adyen.com/online-payments).  ## Authentication Each request to Checkout API must be signed with an API key. For this, [get your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) from your Customer Area, and set this key to the `X-API-Key` header value, for example:  ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ``` ## Versioning Checkout API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://checkout-test.adyen.com/v46/payments ```  ## Going live  To access the live endpoints, you need an API key from your live Customer Area.  The live endpoint URLs contain a prefix which is unique to your company account, for example: ``` https://{PREFIX}-checkout-live.adyenpayments.com/checkout/v46/payments ```  Get your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.  When preparing to do live transactions with Checkout API, follow the [go-live checklist](https://docs.adyen.com/online-payments/go-live-checklist) to make sure you've got all the required configuration in place.  ## Release notes Have a look at the [release notes](https://docs.adyen.com/online-payments/release-notes?integration_type=api&version=46) to find out what changed in this version!
 *
 * The version of the OpenAPI document: 46
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.DeviceRenderOptions;
import org.openapitools.client.model.SDKEphemPubKey;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ThreeDS2RequestData
 */
public class ThreeDS2RequestDataTest {
    private final ThreeDS2RequestData model = new ThreeDS2RequestData();

    /**
     * Model tests for ThreeDS2RequestData
     */
    @Test
    public void testThreeDS2RequestData() {
        // TODO: test ThreeDS2RequestData
    }

    /**
     * Test the property 'authenticationOnly'
     */
    @Test
    public void authenticationOnlyTest() {
        // TODO: test authenticationOnly
    }

    /**
     * Test the property 'challengeIndicator'
     */
    @Test
    public void challengeIndicatorTest() {
        // TODO: test challengeIndicator
    }

    /**
     * Test the property 'deviceChannel'
     */
    @Test
    public void deviceChannelTest() {
        // TODO: test deviceChannel
    }

    /**
     * Test the property 'deviceRenderOptions'
     */
    @Test
    public void deviceRenderOptionsTest() {
        // TODO: test deviceRenderOptions
    }

    /**
     * Test the property 'messageVersion'
     */
    @Test
    public void messageVersionTest() {
        // TODO: test messageVersion
    }

    /**
     * Test the property 'notificationURL'
     */
    @Test
    public void notificationURLTest() {
        // TODO: test notificationURL
    }

    /**
     * Test the property 'platform'
     */
    @Test
    public void platformTest() {
        // TODO: test platform
    }

    /**
     * Test the property 'sdkAppID'
     */
    @Test
    public void sdkAppIDTest() {
        // TODO: test sdkAppID
    }

    /**
     * Test the property 'sdkEncData'
     */
    @Test
    public void sdkEncDataTest() {
        // TODO: test sdkEncData
    }

    /**
     * Test the property 'sdkEphemPubKey'
     */
    @Test
    public void sdkEphemPubKeyTest() {
        // TODO: test sdkEphemPubKey
    }

    /**
     * Test the property 'sdkMaxTimeout'
     */
    @Test
    public void sdkMaxTimeoutTest() {
        // TODO: test sdkMaxTimeout
    }

    /**
     * Test the property 'sdkReferenceNumber'
     */
    @Test
    public void sdkReferenceNumberTest() {
        // TODO: test sdkReferenceNumber
    }

    /**
     * Test the property 'sdkTransID'
     */
    @Test
    public void sdkTransIDTest() {
        // TODO: test sdkTransID
    }

    /**
     * Test the property 'sdkVersion'
     */
    @Test
    public void sdkVersionTest() {
        // TODO: test sdkVersion
    }

    /**
     * Test the property 'threeDSCompInd'
     */
    @Test
    public void threeDSCompIndTest() {
        // TODO: test threeDSCompInd
    }

    /**
     * Test the property 'threeDSRequestorID'
     */
    @Test
    public void threeDSRequestorIDTest() {
        // TODO: test threeDSRequestorID
    }

    /**
     * Test the property 'threeDSRequestorName'
     */
    @Test
    public void threeDSRequestorNameTest() {
        // TODO: test threeDSRequestorName
    }

    /**
     * Test the property 'threeDSRequestorURL'
     */
    @Test
    public void threeDSRequestorURLTest() {
        // TODO: test threeDSRequestorURL
    }

}
