# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.payment_completion_details import PaymentCompletionDetails
from openapi_server import util


class PaymentDetailsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, details: PaymentCompletionDetails=None, payment_data: str=None, three_ds_authentication_only: bool=None):
        """PaymentDetailsRequest - a model defined in OpenAPI

        :param details: The details of this PaymentDetailsRequest.
        :param payment_data: The payment_data of this PaymentDetailsRequest.
        :param three_ds_authentication_only: The three_ds_authentication_only of this PaymentDetailsRequest.
        """
        self.openapi_types = {
            'details': PaymentCompletionDetails,
            'payment_data': str,
            'three_ds_authentication_only': bool
        }

        self.attribute_map = {
            'details': 'details',
            'payment_data': 'paymentData',
            'three_ds_authentication_only': 'threeDSAuthenticationOnly'
        }

        self._details = details
        self._payment_data = payment_data
        self._three_ds_authentication_only = three_ds_authentication_only

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PaymentDetailsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PaymentDetailsRequest of this PaymentDetailsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def details(self):
        """Gets the details of this PaymentDetailsRequest.

        Use this collection to submit the details that were returned as a result of the `/payments` call.

        :return: The details of this PaymentDetailsRequest.
        :rtype: PaymentCompletionDetails
        """
        return self._details

    @details.setter
    def details(self, details):
        """Sets the details of this PaymentDetailsRequest.

        Use this collection to submit the details that were returned as a result of the `/payments` call.

        :param details: The details of this PaymentDetailsRequest.
        :type details: PaymentCompletionDetails
        """
        if details is None:
            raise ValueError("Invalid value for `details`, must not be `None`")

        self._details = details

    @property
    def payment_data(self):
        """Gets the payment_data of this PaymentDetailsRequest.

        The `paymentData` value from the `/payments` response. Required if the `/payments` response contained `paymentData`. 

        :return: The payment_data of this PaymentDetailsRequest.
        :rtype: str
        """
        return self._payment_data

    @payment_data.setter
    def payment_data(self, payment_data):
        """Sets the payment_data of this PaymentDetailsRequest.

        The `paymentData` value from the `/payments` response. Required if the `/payments` response contained `paymentData`. 

        :param payment_data: The payment_data of this PaymentDetailsRequest.
        :type payment_data: str
        """
        if payment_data is not None and len(payment_data) > 200000:
            raise ValueError("Invalid value for `payment_data`, length must be less than or equal to `200000`")

        self._payment_data = payment_data

    @property
    def three_ds_authentication_only(self):
        """Gets the three_ds_authentication_only of this PaymentDetailsRequest.

        Change the `authenticationOnly` indicator originally set in the `/payments` request. Only needs to be set if you want to modify the value set previously.

        :return: The three_ds_authentication_only of this PaymentDetailsRequest.
        :rtype: bool
        """
        return self._three_ds_authentication_only

    @three_ds_authentication_only.setter
    def three_ds_authentication_only(self, three_ds_authentication_only):
        """Sets the three_ds_authentication_only of this PaymentDetailsRequest.

        Change the `authenticationOnly` indicator originally set in the `/payments` request. Only needs to be set if you want to modify the value set previously.

        :param three_ds_authentication_only: The three_ds_authentication_only of this PaymentDetailsRequest.
        :type three_ds_authentication_only: bool
        """

        self._three_ds_authentication_only = three_ds_authentication_only
