# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BlikDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, blik_code: str=None, recurring_detail_reference: str=None, type: str=None):
        """BlikDetails - a model defined in OpenAPI

        :param blik_code: The blik_code of this BlikDetails.
        :param recurring_detail_reference: The recurring_detail_reference of this BlikDetails.
        :param type: The type of this BlikDetails.
        """
        self.openapi_types = {
            'blik_code': str,
            'recurring_detail_reference': str,
            'type': str
        }

        self.attribute_map = {
            'blik_code': 'blikCode',
            'recurring_detail_reference': 'recurringDetailReference',
            'type': 'type'
        }

        self._blik_code = blik_code
        self._recurring_detail_reference = recurring_detail_reference
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BlikDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BlikDetails of this BlikDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def blik_code(self):
        """Gets the blik_code of this BlikDetails.

        BLIK code consisting of 6 digits.

        :return: The blik_code of this BlikDetails.
        :rtype: str
        """
        return self._blik_code

    @blik_code.setter
    def blik_code(self, blik_code):
        """Sets the blik_code of this BlikDetails.

        BLIK code consisting of 6 digits.

        :param blik_code: The blik_code of this BlikDetails.
        :type blik_code: str
        """

        self._blik_code = blik_code

    @property
    def recurring_detail_reference(self):
        """Gets the recurring_detail_reference of this BlikDetails.

        This is the `recurringDetailReference` returned in the response when you created the token.

        :return: The recurring_detail_reference of this BlikDetails.
        :rtype: str
        """
        return self._recurring_detail_reference

    @recurring_detail_reference.setter
    def recurring_detail_reference(self, recurring_detail_reference):
        """Sets the recurring_detail_reference of this BlikDetails.

        This is the `recurringDetailReference` returned in the response when you created the token.

        :param recurring_detail_reference: The recurring_detail_reference of this BlikDetails.
        :type recurring_detail_reference: str
        """

        self._recurring_detail_reference = recurring_detail_reference

    @property
    def type(self):
        """Gets the type of this BlikDetails.

        **blik**

        :return: The type of this BlikDetails.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this BlikDetails.

        **blik**

        :param type: The type of this BlikDetails.
        :type type: str
        """
        allowed_values = ["blik"]  # noqa: E501
        if type not in allowed_values:
            raise ValueError(
                "Invalid value for `type` ({0}), must be one of {1}"
                .format(type, allowed_values)
            )

        self._type = type
