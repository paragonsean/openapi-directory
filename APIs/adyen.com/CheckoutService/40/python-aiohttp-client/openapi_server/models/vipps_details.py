# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class VippsDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, recurring_detail_reference: str=None, telephone_number: str=None, type: str='vipps'):
        """VippsDetails - a model defined in OpenAPI

        :param recurring_detail_reference: The recurring_detail_reference of this VippsDetails.
        :param telephone_number: The telephone_number of this VippsDetails.
        :param type: The type of this VippsDetails.
        """
        self.openapi_types = {
            'recurring_detail_reference': str,
            'telephone_number': str,
            'type': str
        }

        self.attribute_map = {
            'recurring_detail_reference': 'recurringDetailReference',
            'telephone_number': 'telephoneNumber',
            'type': 'type'
        }

        self._recurring_detail_reference = recurring_detail_reference
        self._telephone_number = telephone_number
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VippsDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VippsDetails of this VippsDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def recurring_detail_reference(self):
        """Gets the recurring_detail_reference of this VippsDetails.

        This is the `recurringDetailReference` returned in the response when you created the token.

        :return: The recurring_detail_reference of this VippsDetails.
        :rtype: str
        """
        return self._recurring_detail_reference

    @recurring_detail_reference.setter
    def recurring_detail_reference(self, recurring_detail_reference):
        """Sets the recurring_detail_reference of this VippsDetails.

        This is the `recurringDetailReference` returned in the response when you created the token.

        :param recurring_detail_reference: The recurring_detail_reference of this VippsDetails.
        :type recurring_detail_reference: str
        """

        self._recurring_detail_reference = recurring_detail_reference

    @property
    def telephone_number(self):
        """Gets the telephone_number of this VippsDetails.

        

        :return: The telephone_number of this VippsDetails.
        :rtype: str
        """
        return self._telephone_number

    @telephone_number.setter
    def telephone_number(self, telephone_number):
        """Sets the telephone_number of this VippsDetails.

        

        :param telephone_number: The telephone_number of this VippsDetails.
        :type telephone_number: str
        """
        if telephone_number is None:
            raise ValueError("Invalid value for `telephone_number`, must not be `None`")

        self._telephone_number = telephone_number

    @property
    def type(self):
        """Gets the type of this VippsDetails.

        **vipps**

        :return: The type of this VippsDetails.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this VippsDetails.

        **vipps**

        :param type: The type of this VippsDetails.
        :type type: str
        """
        allowed_values = ["vipps"]  # noqa: E501
        if type not in allowed_values:
            raise ValueError(
                "Invalid value for `type` ({0}), must be one of {1}"
                .format(type, allowed_values)
            )

        self._type = type
