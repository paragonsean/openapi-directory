/**
 * Adyen Checkout API
 * Adyen Checkout API provides a simple and flexible way to initiate and authorise online payments. You can use the same integration for payments made with cards (including 3D Secure), mobile wallets, and local payment methods (for example, iDEAL and Sofort).  This API reference provides information on available endpoints and how to interact with them. To learn more about the API, visit [online payments documentation](https://docs.adyen.com/online-payments).  ## Authentication Each request to Checkout API must be signed with an API key. For this, [get your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) from your Customer Area, and set this key to the `X-API-Key` header value, for example:  ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ``` ## Versioning Checkout API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://checkout-test.adyen.com/v40/payments ```  ## Going live  To access the live endpoints, you need an API key from your live Customer Area.  The live endpoint URLs contain a prefix which is unique to your company account, for example: ``` https://{PREFIX}-checkout-live.adyenpayments.com/checkout/v40/payments ```  Get your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.  When preparing to do live transactions with Checkout API, follow the [go-live checklist](https://docs.adyen.com/online-payments/go-live-checklist) to make sure you've got all the required configuration in place.  ## Release notes Have a look at the [release notes](https://docs.adyen.com/online-payments/release-notes?integration_type=api&version=40) to find out what changed in this version!
 *
 * The version of the OpenAPI document: 40
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAdditionalDataTemporaryServices.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAdditionalDataTemporaryServices::OAIAdditionalDataTemporaryServices(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAdditionalDataTemporaryServices::OAIAdditionalDataTemporaryServices() {
    this->initializeModel();
}

OAIAdditionalDataTemporaryServices::~OAIAdditionalDataTemporaryServices() {}

void OAIAdditionalDataTemporaryServices::initializeModel() {

    m_enhanced_scheme_data_customer_reference_isSet = false;
    m_enhanced_scheme_data_customer_reference_isValid = false;

    m_enhanced_scheme_data_employee_name_isSet = false;
    m_enhanced_scheme_data_employee_name_isValid = false;

    m_enhanced_scheme_data_job_description_isSet = false;
    m_enhanced_scheme_data_job_description_isValid = false;

    m_enhanced_scheme_data_regular_hours_rate_isSet = false;
    m_enhanced_scheme_data_regular_hours_rate_isValid = false;

    m_enhanced_scheme_data_regular_hours_worked_isSet = false;
    m_enhanced_scheme_data_regular_hours_worked_isValid = false;

    m_enhanced_scheme_data_request_name_isSet = false;
    m_enhanced_scheme_data_request_name_isValid = false;

    m_enhanced_scheme_data_temp_start_date_isSet = false;
    m_enhanced_scheme_data_temp_start_date_isValid = false;

    m_enhanced_scheme_data_temp_week_ending_isSet = false;
    m_enhanced_scheme_data_temp_week_ending_isValid = false;

    m_enhanced_scheme_data_total_tax_amount_isSet = false;
    m_enhanced_scheme_data_total_tax_amount_isValid = false;
}

void OAIAdditionalDataTemporaryServices::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAdditionalDataTemporaryServices::fromJsonObject(QJsonObject json) {

    m_enhanced_scheme_data_customer_reference_isValid = ::OpenAPI::fromJsonValue(m_enhanced_scheme_data_customer_reference, json[QString("enhancedSchemeData.customerReference")]);
    m_enhanced_scheme_data_customer_reference_isSet = !json[QString("enhancedSchemeData.customerReference")].isNull() && m_enhanced_scheme_data_customer_reference_isValid;

    m_enhanced_scheme_data_employee_name_isValid = ::OpenAPI::fromJsonValue(m_enhanced_scheme_data_employee_name, json[QString("enhancedSchemeData.employeeName")]);
    m_enhanced_scheme_data_employee_name_isSet = !json[QString("enhancedSchemeData.employeeName")].isNull() && m_enhanced_scheme_data_employee_name_isValid;

    m_enhanced_scheme_data_job_description_isValid = ::OpenAPI::fromJsonValue(m_enhanced_scheme_data_job_description, json[QString("enhancedSchemeData.jobDescription")]);
    m_enhanced_scheme_data_job_description_isSet = !json[QString("enhancedSchemeData.jobDescription")].isNull() && m_enhanced_scheme_data_job_description_isValid;

    m_enhanced_scheme_data_regular_hours_rate_isValid = ::OpenAPI::fromJsonValue(m_enhanced_scheme_data_regular_hours_rate, json[QString("enhancedSchemeData.regularHoursRate")]);
    m_enhanced_scheme_data_regular_hours_rate_isSet = !json[QString("enhancedSchemeData.regularHoursRate")].isNull() && m_enhanced_scheme_data_regular_hours_rate_isValid;

    m_enhanced_scheme_data_regular_hours_worked_isValid = ::OpenAPI::fromJsonValue(m_enhanced_scheme_data_regular_hours_worked, json[QString("enhancedSchemeData.regularHoursWorked")]);
    m_enhanced_scheme_data_regular_hours_worked_isSet = !json[QString("enhancedSchemeData.regularHoursWorked")].isNull() && m_enhanced_scheme_data_regular_hours_worked_isValid;

    m_enhanced_scheme_data_request_name_isValid = ::OpenAPI::fromJsonValue(m_enhanced_scheme_data_request_name, json[QString("enhancedSchemeData.requestName")]);
    m_enhanced_scheme_data_request_name_isSet = !json[QString("enhancedSchemeData.requestName")].isNull() && m_enhanced_scheme_data_request_name_isValid;

    m_enhanced_scheme_data_temp_start_date_isValid = ::OpenAPI::fromJsonValue(m_enhanced_scheme_data_temp_start_date, json[QString("enhancedSchemeData.tempStartDate")]);
    m_enhanced_scheme_data_temp_start_date_isSet = !json[QString("enhancedSchemeData.tempStartDate")].isNull() && m_enhanced_scheme_data_temp_start_date_isValid;

    m_enhanced_scheme_data_temp_week_ending_isValid = ::OpenAPI::fromJsonValue(m_enhanced_scheme_data_temp_week_ending, json[QString("enhancedSchemeData.tempWeekEnding")]);
    m_enhanced_scheme_data_temp_week_ending_isSet = !json[QString("enhancedSchemeData.tempWeekEnding")].isNull() && m_enhanced_scheme_data_temp_week_ending_isValid;

    m_enhanced_scheme_data_total_tax_amount_isValid = ::OpenAPI::fromJsonValue(m_enhanced_scheme_data_total_tax_amount, json[QString("enhancedSchemeData.totalTaxAmount")]);
    m_enhanced_scheme_data_total_tax_amount_isSet = !json[QString("enhancedSchemeData.totalTaxAmount")].isNull() && m_enhanced_scheme_data_total_tax_amount_isValid;
}

QString OAIAdditionalDataTemporaryServices::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAdditionalDataTemporaryServices::asJsonObject() const {
    QJsonObject obj;
    if (m_enhanced_scheme_data_customer_reference_isSet) {
        obj.insert(QString("enhancedSchemeData.customerReference"), ::OpenAPI::toJsonValue(m_enhanced_scheme_data_customer_reference));
    }
    if (m_enhanced_scheme_data_employee_name_isSet) {
        obj.insert(QString("enhancedSchemeData.employeeName"), ::OpenAPI::toJsonValue(m_enhanced_scheme_data_employee_name));
    }
    if (m_enhanced_scheme_data_job_description_isSet) {
        obj.insert(QString("enhancedSchemeData.jobDescription"), ::OpenAPI::toJsonValue(m_enhanced_scheme_data_job_description));
    }
    if (m_enhanced_scheme_data_regular_hours_rate_isSet) {
        obj.insert(QString("enhancedSchemeData.regularHoursRate"), ::OpenAPI::toJsonValue(m_enhanced_scheme_data_regular_hours_rate));
    }
    if (m_enhanced_scheme_data_regular_hours_worked_isSet) {
        obj.insert(QString("enhancedSchemeData.regularHoursWorked"), ::OpenAPI::toJsonValue(m_enhanced_scheme_data_regular_hours_worked));
    }
    if (m_enhanced_scheme_data_request_name_isSet) {
        obj.insert(QString("enhancedSchemeData.requestName"), ::OpenAPI::toJsonValue(m_enhanced_scheme_data_request_name));
    }
    if (m_enhanced_scheme_data_temp_start_date_isSet) {
        obj.insert(QString("enhancedSchemeData.tempStartDate"), ::OpenAPI::toJsonValue(m_enhanced_scheme_data_temp_start_date));
    }
    if (m_enhanced_scheme_data_temp_week_ending_isSet) {
        obj.insert(QString("enhancedSchemeData.tempWeekEnding"), ::OpenAPI::toJsonValue(m_enhanced_scheme_data_temp_week_ending));
    }
    if (m_enhanced_scheme_data_total_tax_amount_isSet) {
        obj.insert(QString("enhancedSchemeData.totalTaxAmount"), ::OpenAPI::toJsonValue(m_enhanced_scheme_data_total_tax_amount));
    }
    return obj;
}

QString OAIAdditionalDataTemporaryServices::getEnhancedSchemeDataCustomerReference() const {
    return m_enhanced_scheme_data_customer_reference;
}
void OAIAdditionalDataTemporaryServices::setEnhancedSchemeDataCustomerReference(const QString &enhanced_scheme_data_customer_reference) {
    m_enhanced_scheme_data_customer_reference = enhanced_scheme_data_customer_reference;
    m_enhanced_scheme_data_customer_reference_isSet = true;
}

bool OAIAdditionalDataTemporaryServices::is_enhanced_scheme_data_customer_reference_Set() const{
    return m_enhanced_scheme_data_customer_reference_isSet;
}

bool OAIAdditionalDataTemporaryServices::is_enhanced_scheme_data_customer_reference_Valid() const{
    return m_enhanced_scheme_data_customer_reference_isValid;
}

QString OAIAdditionalDataTemporaryServices::getEnhancedSchemeDataEmployeeName() const {
    return m_enhanced_scheme_data_employee_name;
}
void OAIAdditionalDataTemporaryServices::setEnhancedSchemeDataEmployeeName(const QString &enhanced_scheme_data_employee_name) {
    m_enhanced_scheme_data_employee_name = enhanced_scheme_data_employee_name;
    m_enhanced_scheme_data_employee_name_isSet = true;
}

bool OAIAdditionalDataTemporaryServices::is_enhanced_scheme_data_employee_name_Set() const{
    return m_enhanced_scheme_data_employee_name_isSet;
}

bool OAIAdditionalDataTemporaryServices::is_enhanced_scheme_data_employee_name_Valid() const{
    return m_enhanced_scheme_data_employee_name_isValid;
}

QString OAIAdditionalDataTemporaryServices::getEnhancedSchemeDataJobDescription() const {
    return m_enhanced_scheme_data_job_description;
}
void OAIAdditionalDataTemporaryServices::setEnhancedSchemeDataJobDescription(const QString &enhanced_scheme_data_job_description) {
    m_enhanced_scheme_data_job_description = enhanced_scheme_data_job_description;
    m_enhanced_scheme_data_job_description_isSet = true;
}

bool OAIAdditionalDataTemporaryServices::is_enhanced_scheme_data_job_description_Set() const{
    return m_enhanced_scheme_data_job_description_isSet;
}

bool OAIAdditionalDataTemporaryServices::is_enhanced_scheme_data_job_description_Valid() const{
    return m_enhanced_scheme_data_job_description_isValid;
}

QString OAIAdditionalDataTemporaryServices::getEnhancedSchemeDataRegularHoursRate() const {
    return m_enhanced_scheme_data_regular_hours_rate;
}
void OAIAdditionalDataTemporaryServices::setEnhancedSchemeDataRegularHoursRate(const QString &enhanced_scheme_data_regular_hours_rate) {
    m_enhanced_scheme_data_regular_hours_rate = enhanced_scheme_data_regular_hours_rate;
    m_enhanced_scheme_data_regular_hours_rate_isSet = true;
}

bool OAIAdditionalDataTemporaryServices::is_enhanced_scheme_data_regular_hours_rate_Set() const{
    return m_enhanced_scheme_data_regular_hours_rate_isSet;
}

bool OAIAdditionalDataTemporaryServices::is_enhanced_scheme_data_regular_hours_rate_Valid() const{
    return m_enhanced_scheme_data_regular_hours_rate_isValid;
}

QString OAIAdditionalDataTemporaryServices::getEnhancedSchemeDataRegularHoursWorked() const {
    return m_enhanced_scheme_data_regular_hours_worked;
}
void OAIAdditionalDataTemporaryServices::setEnhancedSchemeDataRegularHoursWorked(const QString &enhanced_scheme_data_regular_hours_worked) {
    m_enhanced_scheme_data_regular_hours_worked = enhanced_scheme_data_regular_hours_worked;
    m_enhanced_scheme_data_regular_hours_worked_isSet = true;
}

bool OAIAdditionalDataTemporaryServices::is_enhanced_scheme_data_regular_hours_worked_Set() const{
    return m_enhanced_scheme_data_regular_hours_worked_isSet;
}

bool OAIAdditionalDataTemporaryServices::is_enhanced_scheme_data_regular_hours_worked_Valid() const{
    return m_enhanced_scheme_data_regular_hours_worked_isValid;
}

QString OAIAdditionalDataTemporaryServices::getEnhancedSchemeDataRequestName() const {
    return m_enhanced_scheme_data_request_name;
}
void OAIAdditionalDataTemporaryServices::setEnhancedSchemeDataRequestName(const QString &enhanced_scheme_data_request_name) {
    m_enhanced_scheme_data_request_name = enhanced_scheme_data_request_name;
    m_enhanced_scheme_data_request_name_isSet = true;
}

bool OAIAdditionalDataTemporaryServices::is_enhanced_scheme_data_request_name_Set() const{
    return m_enhanced_scheme_data_request_name_isSet;
}

bool OAIAdditionalDataTemporaryServices::is_enhanced_scheme_data_request_name_Valid() const{
    return m_enhanced_scheme_data_request_name_isValid;
}

QString OAIAdditionalDataTemporaryServices::getEnhancedSchemeDataTempStartDate() const {
    return m_enhanced_scheme_data_temp_start_date;
}
void OAIAdditionalDataTemporaryServices::setEnhancedSchemeDataTempStartDate(const QString &enhanced_scheme_data_temp_start_date) {
    m_enhanced_scheme_data_temp_start_date = enhanced_scheme_data_temp_start_date;
    m_enhanced_scheme_data_temp_start_date_isSet = true;
}

bool OAIAdditionalDataTemporaryServices::is_enhanced_scheme_data_temp_start_date_Set() const{
    return m_enhanced_scheme_data_temp_start_date_isSet;
}

bool OAIAdditionalDataTemporaryServices::is_enhanced_scheme_data_temp_start_date_Valid() const{
    return m_enhanced_scheme_data_temp_start_date_isValid;
}

QString OAIAdditionalDataTemporaryServices::getEnhancedSchemeDataTempWeekEnding() const {
    return m_enhanced_scheme_data_temp_week_ending;
}
void OAIAdditionalDataTemporaryServices::setEnhancedSchemeDataTempWeekEnding(const QString &enhanced_scheme_data_temp_week_ending) {
    m_enhanced_scheme_data_temp_week_ending = enhanced_scheme_data_temp_week_ending;
    m_enhanced_scheme_data_temp_week_ending_isSet = true;
}

bool OAIAdditionalDataTemporaryServices::is_enhanced_scheme_data_temp_week_ending_Set() const{
    return m_enhanced_scheme_data_temp_week_ending_isSet;
}

bool OAIAdditionalDataTemporaryServices::is_enhanced_scheme_data_temp_week_ending_Valid() const{
    return m_enhanced_scheme_data_temp_week_ending_isValid;
}

QString OAIAdditionalDataTemporaryServices::getEnhancedSchemeDataTotalTaxAmount() const {
    return m_enhanced_scheme_data_total_tax_amount;
}
void OAIAdditionalDataTemporaryServices::setEnhancedSchemeDataTotalTaxAmount(const QString &enhanced_scheme_data_total_tax_amount) {
    m_enhanced_scheme_data_total_tax_amount = enhanced_scheme_data_total_tax_amount;
    m_enhanced_scheme_data_total_tax_amount_isSet = true;
}

bool OAIAdditionalDataTemporaryServices::is_enhanced_scheme_data_total_tax_amount_Set() const{
    return m_enhanced_scheme_data_total_tax_amount_isSet;
}

bool OAIAdditionalDataTemporaryServices::is_enhanced_scheme_data_total_tax_amount_Valid() const{
    return m_enhanced_scheme_data_total_tax_amount_isValid;
}

bool OAIAdditionalDataTemporaryServices::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_enhanced_scheme_data_customer_reference_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_enhanced_scheme_data_employee_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_enhanced_scheme_data_job_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_enhanced_scheme_data_regular_hours_rate_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_enhanced_scheme_data_regular_hours_worked_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_enhanced_scheme_data_request_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_enhanced_scheme_data_temp_start_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_enhanced_scheme_data_temp_week_ending_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_enhanced_scheme_data_total_tax_amount_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAdditionalDataTemporaryServices::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
