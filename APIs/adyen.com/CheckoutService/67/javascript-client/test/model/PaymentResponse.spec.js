/**
 * Adyen Checkout API
 * Adyen Checkout API provides a simple and flexible way to initiate and authorise online payments. You can use the same integration for payments made with cards (including 3D Secure), mobile wallets, and local payment methods (for example, iDEAL and Sofort).  This API reference provides information on available endpoints and how to interact with them. To learn more about the API, visit [online payments documentation](https://docs.adyen.com/online-payments).  ## Authentication Each request to Checkout API must be signed with an API key. For this, [get your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) from your Customer Area, and set this key to the `X-API-Key` header value, for example:  ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ``` ## Versioning Checkout API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://checkout-test.adyen.com/v67/payments ```  ## Going live  To access the live endpoints, you need an API key from your live Customer Area.  The live endpoint URLs contain a prefix which is unique to your company account, for example: ``` https://{PREFIX}-checkout-live.adyenpayments.com/checkout/v67/payments ```  Get your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.  When preparing to do live transactions with Checkout API, follow the [go-live checklist](https://docs.adyen.com/online-payments/go-live-checklist) to make sure you've got all the required configuration in place.  ## Release notes Have a look at the [release notes](https://docs.adyen.com/online-payments/release-notes?integration_type=api&version=67) to find out what changed in this version!
 *
 * The version of the OpenAPI document: 67
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AdyenCheckoutApi);
  }
}(this, function(expect, AdyenCheckoutApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AdyenCheckoutApi.PaymentResponse();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('PaymentResponse', function() {
    it('should create an instance of PaymentResponse', function() {
      // uncomment below and update the code to test PaymentResponse
      //var instance = new AdyenCheckoutApi.PaymentResponse();
      //expect(instance).to.be.a(AdyenCheckoutApi.PaymentResponse);
    });

    it('should have the property action (base name: "action")', function() {
      // uncomment below and update the code to test the property action
      //var instance = new AdyenCheckoutApi.PaymentResponse();
      //expect(instance).to.be();
    });

    it('should have the property additionalData (base name: "additionalData")', function() {
      // uncomment below and update the code to test the property additionalData
      //var instance = new AdyenCheckoutApi.PaymentResponse();
      //expect(instance).to.be();
    });

    it('should have the property amount (base name: "amount")', function() {
      // uncomment below and update the code to test the property amount
      //var instance = new AdyenCheckoutApi.PaymentResponse();
      //expect(instance).to.be();
    });

    it('should have the property donationToken (base name: "donationToken")', function() {
      // uncomment below and update the code to test the property donationToken
      //var instance = new AdyenCheckoutApi.PaymentResponse();
      //expect(instance).to.be();
    });

    it('should have the property fraudResult (base name: "fraudResult")', function() {
      // uncomment below and update the code to test the property fraudResult
      //var instance = new AdyenCheckoutApi.PaymentResponse();
      //expect(instance).to.be();
    });

    it('should have the property merchantReference (base name: "merchantReference")', function() {
      // uncomment below and update the code to test the property merchantReference
      //var instance = new AdyenCheckoutApi.PaymentResponse();
      //expect(instance).to.be();
    });

    it('should have the property order (base name: "order")', function() {
      // uncomment below and update the code to test the property order
      //var instance = new AdyenCheckoutApi.PaymentResponse();
      //expect(instance).to.be();
    });

    it('should have the property pspReference (base name: "pspReference")', function() {
      // uncomment below and update the code to test the property pspReference
      //var instance = new AdyenCheckoutApi.PaymentResponse();
      //expect(instance).to.be();
    });

    it('should have the property refusalReason (base name: "refusalReason")', function() {
      // uncomment below and update the code to test the property refusalReason
      //var instance = new AdyenCheckoutApi.PaymentResponse();
      //expect(instance).to.be();
    });

    it('should have the property refusalReasonCode (base name: "refusalReasonCode")', function() {
      // uncomment below and update the code to test the property refusalReasonCode
      //var instance = new AdyenCheckoutApi.PaymentResponse();
      //expect(instance).to.be();
    });

    it('should have the property resultCode (base name: "resultCode")', function() {
      // uncomment below and update the code to test the property resultCode
      //var instance = new AdyenCheckoutApi.PaymentResponse();
      //expect(instance).to.be();
    });

    it('should have the property threeDS2ResponseData (base name: "threeDS2ResponseData")', function() {
      // uncomment below and update the code to test the property threeDS2ResponseData
      //var instance = new AdyenCheckoutApi.PaymentResponse();
      //expect(instance).to.be();
    });

    it('should have the property threeDS2Result (base name: "threeDS2Result")', function() {
      // uncomment below and update the code to test the property threeDS2Result
      //var instance = new AdyenCheckoutApi.PaymentResponse();
      //expect(instance).to.be();
    });

    it('should have the property threeDSPaymentData (base name: "threeDSPaymentData")', function() {
      // uncomment below and update the code to test the property threeDSPaymentData
      //var instance = new AdyenCheckoutApi.PaymentResponse();
      //expect(instance).to.be();
    });

  });

}));
