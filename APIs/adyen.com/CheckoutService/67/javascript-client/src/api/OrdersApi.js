/**
 * Adyen Checkout API
 * Adyen Checkout API provides a simple and flexible way to initiate and authorise online payments. You can use the same integration for payments made with cards (including 3D Secure), mobile wallets, and local payment methods (for example, iDEAL and Sofort).  This API reference provides information on available endpoints and how to interact with them. To learn more about the API, visit [online payments documentation](https://docs.adyen.com/online-payments).  ## Authentication Each request to Checkout API must be signed with an API key. For this, [get your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) from your Customer Area, and set this key to the `X-API-Key` header value, for example:  ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ``` ## Versioning Checkout API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://checkout-test.adyen.com/v67/payments ```  ## Going live  To access the live endpoints, you need an API key from your live Customer Area.  The live endpoint URLs contain a prefix which is unique to your company account, for example: ``` https://{PREFIX}-checkout-live.adyenpayments.com/checkout/v67/payments ```  Get your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.  When preparing to do live transactions with Checkout API, follow the [go-live checklist](https://docs.adyen.com/online-payments/go-live-checklist) to make sure you've got all the required configuration in place.  ## Release notes Have a look at the [release notes](https://docs.adyen.com/online-payments/release-notes?integration_type=api&version=67) to find out what changed in this version!
 *
 * The version of the OpenAPI document: 67
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import BalanceCheckRequest from '../model/BalanceCheckRequest';
import BalanceCheckResponse from '../model/BalanceCheckResponse';
import CancelOrderRequest from '../model/CancelOrderRequest';
import CancelOrderResponse from '../model/CancelOrderResponse';
import CreateOrderRequest from '../model/CreateOrderRequest';
import CreateOrderResponse from '../model/CreateOrderResponse';
import ServiceError from '../model/ServiceError';

/**
* Orders service.
* @module api/OrdersApi
* @version 67
*/
export default class OrdersApi {

    /**
    * Constructs a new OrdersApi. 
    * @alias module:api/OrdersApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the postOrders operation.
     * @callback module:api/OrdersApi~postOrdersCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CreateOrderResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create an order
     * Creates an order to be used for partial payments. Make a POST `/orders` call before making a `/payments` call when processing payments with different payment methods.
     * @param {Object} opts Optional parameters
     * @param {String} [idempotencyKey] A unique identifier for the message with a maximum of 64 characters (we recommend a UUID).
     * @param {module:model/CreateOrderRequest} [createOrderRequest] 
     * @param {module:api/OrdersApi~postOrdersCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CreateOrderResponse}
     */
    postOrders(opts, callback) {
      opts = opts || {};
      let postBody = opts['createOrderRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Idempotency-Key': opts['idempotencyKey']
      };
      let formParams = {
      };

      let authNames = ['BasicAuth', 'ApiKeyAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CreateOrderResponse;
      return this.apiClient.callApi(
        '/orders', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the postOrdersCancel operation.
     * @callback module:api/OrdersApi~postOrdersCancelCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CancelOrderResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Cancel an order
     * Cancels an order. Cancellation of an order results in an automatic rollback of all payments made in the order, either by canceling or refunding the payment, depending on the type of payment method.
     * @param {Object} opts Optional parameters
     * @param {String} [idempotencyKey] A unique identifier for the message with a maximum of 64 characters (we recommend a UUID).
     * @param {module:model/CancelOrderRequest} [cancelOrderRequest] 
     * @param {module:api/OrdersApi~postOrdersCancelCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CancelOrderResponse}
     */
    postOrdersCancel(opts, callback) {
      opts = opts || {};
      let postBody = opts['cancelOrderRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Idempotency-Key': opts['idempotencyKey']
      };
      let formParams = {
      };

      let authNames = ['BasicAuth', 'ApiKeyAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CancelOrderResponse;
      return this.apiClient.callApi(
        '/orders/cancel', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the postPaymentMethodsBalance operation.
     * @callback module:api/OrdersApi~postPaymentMethodsBalanceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BalanceCheckResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get the balance of a gift card
     * Retrieves the balance remaining on a shopper's gift card. To check a gift card's balance, make a POST `/paymentMethods/balance` call and include the gift card's details inside a `paymentMethod` object.
     * @param {Object} opts Optional parameters
     * @param {String} [idempotencyKey] A unique identifier for the message with a maximum of 64 characters (we recommend a UUID).
     * @param {module:model/BalanceCheckRequest} [balanceCheckRequest] 
     * @param {module:api/OrdersApi~postPaymentMethodsBalanceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BalanceCheckResponse}
     */
    postPaymentMethodsBalance(opts, callback) {
      opts = opts || {};
      let postBody = opts['balanceCheckRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Idempotency-Key': opts['idempotencyKey']
      };
      let formParams = {
      };

      let authNames = ['BasicAuth', 'ApiKeyAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = BalanceCheckResponse;
      return this.apiClient.callApi(
        '/paymentMethods/balance', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
