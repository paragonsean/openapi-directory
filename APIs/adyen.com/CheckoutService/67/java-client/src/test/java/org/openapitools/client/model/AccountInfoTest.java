/*
 * Adyen Checkout API
 * Adyen Checkout API provides a simple and flexible way to initiate and authorise online payments. You can use the same integration for payments made with cards (including 3D Secure), mobile wallets, and local payment methods (for example, iDEAL and Sofort).  This API reference provides information on available endpoints and how to interact with them. To learn more about the API, visit [online payments documentation](https://docs.adyen.com/online-payments).  ## Authentication Each request to Checkout API must be signed with an API key. For this, [get your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) from your Customer Area, and set this key to the `X-API-Key` header value, for example:  ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ``` ## Versioning Checkout API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://checkout-test.adyen.com/v67/payments ```  ## Going live  To access the live endpoints, you need an API key from your live Customer Area.  The live endpoint URLs contain a prefix which is unique to your company account, for example: ``` https://{PREFIX}-checkout-live.adyenpayments.com/checkout/v67/payments ```  Get your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.  When preparing to do live transactions with Checkout API, follow the [go-live checklist](https://docs.adyen.com/online-payments/go-live-checklist) to make sure you've got all the required configuration in place.  ## Release notes Have a look at the [release notes](https://docs.adyen.com/online-payments/release-notes?integration_type=api&version=67) to find out what changed in this version!
 *
 * The version of the OpenAPI document: 67
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for AccountInfo
 */
public class AccountInfoTest {
    private final AccountInfo model = new AccountInfo();

    /**
     * Model tests for AccountInfo
     */
    @Test
    public void testAccountInfo() {
        // TODO: test AccountInfo
    }

    /**
     * Test the property 'accountAgeIndicator'
     */
    @Test
    public void accountAgeIndicatorTest() {
        // TODO: test accountAgeIndicator
    }

    /**
     * Test the property 'accountChangeDate'
     */
    @Test
    public void accountChangeDateTest() {
        // TODO: test accountChangeDate
    }

    /**
     * Test the property 'accountChangeIndicator'
     */
    @Test
    public void accountChangeIndicatorTest() {
        // TODO: test accountChangeIndicator
    }

    /**
     * Test the property 'accountCreationDate'
     */
    @Test
    public void accountCreationDateTest() {
        // TODO: test accountCreationDate
    }

    /**
     * Test the property 'accountType'
     */
    @Test
    public void accountTypeTest() {
        // TODO: test accountType
    }

    /**
     * Test the property 'addCardAttemptsDay'
     */
    @Test
    public void addCardAttemptsDayTest() {
        // TODO: test addCardAttemptsDay
    }

    /**
     * Test the property 'deliveryAddressUsageDate'
     */
    @Test
    public void deliveryAddressUsageDateTest() {
        // TODO: test deliveryAddressUsageDate
    }

    /**
     * Test the property 'deliveryAddressUsageIndicator'
     */
    @Test
    public void deliveryAddressUsageIndicatorTest() {
        // TODO: test deliveryAddressUsageIndicator
    }

    /**
     * Test the property 'homePhone'
     */
    @Test
    public void homePhoneTest() {
        // TODO: test homePhone
    }

    /**
     * Test the property 'mobilePhone'
     */
    @Test
    public void mobilePhoneTest() {
        // TODO: test mobilePhone
    }

    /**
     * Test the property 'passwordChangeDate'
     */
    @Test
    public void passwordChangeDateTest() {
        // TODO: test passwordChangeDate
    }

    /**
     * Test the property 'passwordChangeIndicator'
     */
    @Test
    public void passwordChangeIndicatorTest() {
        // TODO: test passwordChangeIndicator
    }

    /**
     * Test the property 'pastTransactionsDay'
     */
    @Test
    public void pastTransactionsDayTest() {
        // TODO: test pastTransactionsDay
    }

    /**
     * Test the property 'pastTransactionsYear'
     */
    @Test
    public void pastTransactionsYearTest() {
        // TODO: test pastTransactionsYear
    }

    /**
     * Test the property 'paymentAccountAge'
     */
    @Test
    public void paymentAccountAgeTest() {
        // TODO: test paymentAccountAge
    }

    /**
     * Test the property 'paymentAccountIndicator'
     */
    @Test
    public void paymentAccountIndicatorTest() {
        // TODO: test paymentAccountIndicator
    }

    /**
     * Test the property 'purchasesLast6Months'
     */
    @Test
    public void purchasesLast6MonthsTest() {
        // TODO: test purchasesLast6Months
    }

    /**
     * Test the property 'suspiciousActivity'
     */
    @Test
    public void suspiciousActivityTest() {
        // TODO: test suspiciousActivity
    }

    /**
     * Test the property 'workPhone'
     */
    @Test
    public void workPhoneTest() {
        // TODO: test workPhone
    }

}
