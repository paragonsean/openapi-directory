/*
 * Adyen Checkout API
 * Adyen Checkout API provides a simple and flexible way to initiate and authorise online payments. You can use the same integration for payments made with cards (including 3D Secure), mobile wallets, and local payment methods (for example, iDEAL and Sofort).  This API reference provides information on available endpoints and how to interact with them. To learn more about the API, visit [online payments documentation](https://docs.adyen.com/online-payments).  ## Authentication Each request to Checkout API must be signed with an API key. For this, [get your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) from your Customer Area, and set this key to the `X-API-Key` header value, for example:  ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ``` ## Versioning Checkout API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://checkout-test.adyen.com/v67/payments ```  ## Going live  To access the live endpoints, you need an API key from your live Customer Area.  The live endpoint URLs contain a prefix which is unique to your company account, for example: ``` https://{PREFIX}-checkout-live.adyenpayments.com/checkout/v67/payments ```  Get your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.  When preparing to do live transactions with Checkout API, follow the [go-live checklist](https://docs.adyen.com/online-payments/go-live-checklist) to make sure you've got all the required configuration in place.  ## Release notes Have a look at the [release notes](https://docs.adyen.com/online-payments/release-notes?integration_type=api&version=67) to find out what changed in this version!
 *
 * The version of the OpenAPI document: 67
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ThreeDS2ResponseData
 */
public class ThreeDS2ResponseDataTest {
    private final ThreeDS2ResponseData model = new ThreeDS2ResponseData();

    /**
     * Model tests for ThreeDS2ResponseData
     */
    @Test
    public void testThreeDS2ResponseData() {
        // TODO: test ThreeDS2ResponseData
    }

    /**
     * Test the property 'acsChallengeMandated'
     */
    @Test
    public void acsChallengeMandatedTest() {
        // TODO: test acsChallengeMandated
    }

    /**
     * Test the property 'acsOperatorID'
     */
    @Test
    public void acsOperatorIDTest() {
        // TODO: test acsOperatorID
    }

    /**
     * Test the property 'acsReferenceNumber'
     */
    @Test
    public void acsReferenceNumberTest() {
        // TODO: test acsReferenceNumber
    }

    /**
     * Test the property 'acsSignedContent'
     */
    @Test
    public void acsSignedContentTest() {
        // TODO: test acsSignedContent
    }

    /**
     * Test the property 'acsTransID'
     */
    @Test
    public void acsTransIDTest() {
        // TODO: test acsTransID
    }

    /**
     * Test the property 'acsURL'
     */
    @Test
    public void acsURLTest() {
        // TODO: test acsURL
    }

    /**
     * Test the property 'authenticationType'
     */
    @Test
    public void authenticationTypeTest() {
        // TODO: test authenticationType
    }

    /**
     * Test the property 'cardHolderInfo'
     */
    @Test
    public void cardHolderInfoTest() {
        // TODO: test cardHolderInfo
    }

    /**
     * Test the property 'cavvAlgorithm'
     */
    @Test
    public void cavvAlgorithmTest() {
        // TODO: test cavvAlgorithm
    }

    /**
     * Test the property 'challengeIndicator'
     */
    @Test
    public void challengeIndicatorTest() {
        // TODO: test challengeIndicator
    }

    /**
     * Test the property 'dsReferenceNumber'
     */
    @Test
    public void dsReferenceNumberTest() {
        // TODO: test dsReferenceNumber
    }

    /**
     * Test the property 'dsTransID'
     */
    @Test
    public void dsTransIDTest() {
        // TODO: test dsTransID
    }

    /**
     * Test the property 'exemptionIndicator'
     */
    @Test
    public void exemptionIndicatorTest() {
        // TODO: test exemptionIndicator
    }

    /**
     * Test the property 'messageVersion'
     */
    @Test
    public void messageVersionTest() {
        // TODO: test messageVersion
    }

    /**
     * Test the property 'riskScore'
     */
    @Test
    public void riskScoreTest() {
        // TODO: test riskScore
    }

    /**
     * Test the property 'sdkEphemPubKey'
     */
    @Test
    public void sdkEphemPubKeyTest() {
        // TODO: test sdkEphemPubKey
    }

    /**
     * Test the property 'threeDSServerTransID'
     */
    @Test
    public void threeDSServerTransIDTest() {
        // TODO: test threeDSServerTransID
    }

    /**
     * Test the property 'transStatus'
     */
    @Test
    public void transStatusTest() {
        // TODO: test transStatus
    }

    /**
     * Test the property 'transStatusReason'
     */
    @Test
    public void transStatusReasonTest() {
        // TODO: test transStatusReason
    }

}
