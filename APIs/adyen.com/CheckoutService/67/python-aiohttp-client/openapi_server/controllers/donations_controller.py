from typing import List, Dict
from aiohttp import web

from openapi_server.models.donation_payment_request import DonationPaymentRequest
from openapi_server.models.donation_payment_response import DonationPaymentResponse
from openapi_server.models.service_error import ServiceError
from openapi_server import util


async def post_donations(request: web.Request, idempotency_key=None, body=None) -> web.Response:
    """Start a transaction for donations

    Takes in the donation token generated by the &#x60;/payments&#x60; request and uses it to make the donation for the donation account specified in the request.  For more information, see [Donations](https://docs.adyen.com/online-payments/donations).

    :param idempotency_key: A unique identifier for the message with a maximum of 64 characters (we recommend a UUID).
    :type idempotency_key: str
    :param body: 
    :type body: dict | bytes

    """
    body = DonationPaymentRequest.from_dict(body)
    return web.Response(status=200)
