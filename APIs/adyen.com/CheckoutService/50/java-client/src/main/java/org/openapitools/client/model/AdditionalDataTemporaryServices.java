/*
 * Adyen Checkout API
 * Adyen Checkout API provides a simple and flexible way to initiate and authorise online payments. You can use the same integration for payments made with cards (including 3D Secure), mobile wallets, and local payment methods (for example, iDEAL and Sofort).  This API reference provides information on available endpoints and how to interact with them. To learn more about the API, visit [online payments documentation](https://docs.adyen.com/online-payments).  ## Authentication Each request to Checkout API must be signed with an API key. For this, [get your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) from your Customer Area, and set this key to the `X-API-Key` header value, for example:  ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ``` ## Versioning Checkout API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://checkout-test.adyen.com/v50/payments ```  ## Going live  To access the live endpoints, you need an API key from your live Customer Area.  The live endpoint URLs contain a prefix which is unique to your company account, for example: ``` https://{PREFIX}-checkout-live.adyenpayments.com/checkout/v50/payments ```  Get your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.  When preparing to do live transactions with Checkout API, follow the [go-live checklist](https://docs.adyen.com/online-payments/go-live-checklist) to make sure you've got all the required configuration in place.  ## Release notes Have a look at the [release notes](https://docs.adyen.com/online-payments/release-notes?integration_type=api&version=50) to find out what changed in this version!
 *
 * The version of the OpenAPI document: 50
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * AdditionalDataTemporaryServices
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:16:05.566779-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AdditionalDataTemporaryServices {
  public static final String SERIALIZED_NAME_ENHANCED_SCHEME_DATA_CUSTOMER_REFERENCE = "enhancedSchemeData.customerReference";
  @SerializedName(SERIALIZED_NAME_ENHANCED_SCHEME_DATA_CUSTOMER_REFERENCE)
  private String enhancedSchemeDataCustomerReference;

  public static final String SERIALIZED_NAME_ENHANCED_SCHEME_DATA_EMPLOYEE_NAME = "enhancedSchemeData.employeeName";
  @SerializedName(SERIALIZED_NAME_ENHANCED_SCHEME_DATA_EMPLOYEE_NAME)
  private String enhancedSchemeDataEmployeeName;

  public static final String SERIALIZED_NAME_ENHANCED_SCHEME_DATA_JOB_DESCRIPTION = "enhancedSchemeData.jobDescription";
  @SerializedName(SERIALIZED_NAME_ENHANCED_SCHEME_DATA_JOB_DESCRIPTION)
  private String enhancedSchemeDataJobDescription;

  public static final String SERIALIZED_NAME_ENHANCED_SCHEME_DATA_REGULAR_HOURS_RATE = "enhancedSchemeData.regularHoursRate";
  @SerializedName(SERIALIZED_NAME_ENHANCED_SCHEME_DATA_REGULAR_HOURS_RATE)
  private String enhancedSchemeDataRegularHoursRate;

  public static final String SERIALIZED_NAME_ENHANCED_SCHEME_DATA_REGULAR_HOURS_WORKED = "enhancedSchemeData.regularHoursWorked";
  @SerializedName(SERIALIZED_NAME_ENHANCED_SCHEME_DATA_REGULAR_HOURS_WORKED)
  private String enhancedSchemeDataRegularHoursWorked;

  public static final String SERIALIZED_NAME_ENHANCED_SCHEME_DATA_REQUEST_NAME = "enhancedSchemeData.requestName";
  @SerializedName(SERIALIZED_NAME_ENHANCED_SCHEME_DATA_REQUEST_NAME)
  private String enhancedSchemeDataRequestName;

  public static final String SERIALIZED_NAME_ENHANCED_SCHEME_DATA_TEMP_START_DATE = "enhancedSchemeData.tempStartDate";
  @SerializedName(SERIALIZED_NAME_ENHANCED_SCHEME_DATA_TEMP_START_DATE)
  private String enhancedSchemeDataTempStartDate;

  public static final String SERIALIZED_NAME_ENHANCED_SCHEME_DATA_TEMP_WEEK_ENDING = "enhancedSchemeData.tempWeekEnding";
  @SerializedName(SERIALIZED_NAME_ENHANCED_SCHEME_DATA_TEMP_WEEK_ENDING)
  private String enhancedSchemeDataTempWeekEnding;

  public static final String SERIALIZED_NAME_ENHANCED_SCHEME_DATA_TOTAL_TAX_AMOUNT = "enhancedSchemeData.totalTaxAmount";
  @SerializedName(SERIALIZED_NAME_ENHANCED_SCHEME_DATA_TOTAL_TAX_AMOUNT)
  private String enhancedSchemeDataTotalTaxAmount;

  public AdditionalDataTemporaryServices() {
  }

  public AdditionalDataTemporaryServices enhancedSchemeDataCustomerReference(String enhancedSchemeDataCustomerReference) {
    this.enhancedSchemeDataCustomerReference = enhancedSchemeDataCustomerReference;
    return this;
  }

  /**
   * The customer code, if supplied by a customer. * Encoding: ASCII * maxLength: 25
   * @return enhancedSchemeDataCustomerReference
   */
  @javax.annotation.Nullable
  public String getEnhancedSchemeDataCustomerReference() {
    return enhancedSchemeDataCustomerReference;
  }

  public void setEnhancedSchemeDataCustomerReference(String enhancedSchemeDataCustomerReference) {
    this.enhancedSchemeDataCustomerReference = enhancedSchemeDataCustomerReference;
  }


  public AdditionalDataTemporaryServices enhancedSchemeDataEmployeeName(String enhancedSchemeDataEmployeeName) {
    this.enhancedSchemeDataEmployeeName = enhancedSchemeDataEmployeeName;
    return this;
  }

  /**
   * The name or ID of the person working in a temporary capacity. * maxLength: 40.   * Must not be all spaces.  *Must not be all zeros.
   * @return enhancedSchemeDataEmployeeName
   */
  @javax.annotation.Nullable
  public String getEnhancedSchemeDataEmployeeName() {
    return enhancedSchemeDataEmployeeName;
  }

  public void setEnhancedSchemeDataEmployeeName(String enhancedSchemeDataEmployeeName) {
    this.enhancedSchemeDataEmployeeName = enhancedSchemeDataEmployeeName;
  }


  public AdditionalDataTemporaryServices enhancedSchemeDataJobDescription(String enhancedSchemeDataJobDescription) {
    this.enhancedSchemeDataJobDescription = enhancedSchemeDataJobDescription;
    return this;
  }

  /**
   * The job description of the person working in a temporary capacity. * maxLength: 40  * Must not be all spaces.  *Must not be all zeros.
   * @return enhancedSchemeDataJobDescription
   */
  @javax.annotation.Nullable
  public String getEnhancedSchemeDataJobDescription() {
    return enhancedSchemeDataJobDescription;
  }

  public void setEnhancedSchemeDataJobDescription(String enhancedSchemeDataJobDescription) {
    this.enhancedSchemeDataJobDescription = enhancedSchemeDataJobDescription;
  }


  public AdditionalDataTemporaryServices enhancedSchemeDataRegularHoursRate(String enhancedSchemeDataRegularHoursRate) {
    this.enhancedSchemeDataRegularHoursRate = enhancedSchemeDataRegularHoursRate;
    return this;
  }

  /**
   * The amount paid for regular hours worked, [minor units](https://docs.adyen.com/development-resources/currency-codes). * maxLength: 7 * Must not be empty * Can be all zeros
   * @return enhancedSchemeDataRegularHoursRate
   */
  @javax.annotation.Nullable
  public String getEnhancedSchemeDataRegularHoursRate() {
    return enhancedSchemeDataRegularHoursRate;
  }

  public void setEnhancedSchemeDataRegularHoursRate(String enhancedSchemeDataRegularHoursRate) {
    this.enhancedSchemeDataRegularHoursRate = enhancedSchemeDataRegularHoursRate;
  }


  public AdditionalDataTemporaryServices enhancedSchemeDataRegularHoursWorked(String enhancedSchemeDataRegularHoursWorked) {
    this.enhancedSchemeDataRegularHoursWorked = enhancedSchemeDataRegularHoursWorked;
    return this;
  }

  /**
   * The hours worked. * maxLength: 7 * Must not be empty * Can be all zeros
   * @return enhancedSchemeDataRegularHoursWorked
   */
  @javax.annotation.Nullable
  public String getEnhancedSchemeDataRegularHoursWorked() {
    return enhancedSchemeDataRegularHoursWorked;
  }

  public void setEnhancedSchemeDataRegularHoursWorked(String enhancedSchemeDataRegularHoursWorked) {
    this.enhancedSchemeDataRegularHoursWorked = enhancedSchemeDataRegularHoursWorked;
  }


  public AdditionalDataTemporaryServices enhancedSchemeDataRequestName(String enhancedSchemeDataRequestName) {
    this.enhancedSchemeDataRequestName = enhancedSchemeDataRequestName;
    return this;
  }

  /**
   * The name of the person requesting temporary services. * maxLength: 40 * Must not be all zeros * Must not be all spaces
   * @return enhancedSchemeDataRequestName
   */
  @javax.annotation.Nullable
  public String getEnhancedSchemeDataRequestName() {
    return enhancedSchemeDataRequestName;
  }

  public void setEnhancedSchemeDataRequestName(String enhancedSchemeDataRequestName) {
    this.enhancedSchemeDataRequestName = enhancedSchemeDataRequestName;
  }


  public AdditionalDataTemporaryServices enhancedSchemeDataTempStartDate(String enhancedSchemeDataTempStartDate) {
    this.enhancedSchemeDataTempStartDate = enhancedSchemeDataTempStartDate;
    return this;
  }

  /**
   * The billing period start date. * Format: ddMMyy * maxLength: 6
   * @return enhancedSchemeDataTempStartDate
   */
  @javax.annotation.Nullable
  public String getEnhancedSchemeDataTempStartDate() {
    return enhancedSchemeDataTempStartDate;
  }

  public void setEnhancedSchemeDataTempStartDate(String enhancedSchemeDataTempStartDate) {
    this.enhancedSchemeDataTempStartDate = enhancedSchemeDataTempStartDate;
  }


  public AdditionalDataTemporaryServices enhancedSchemeDataTempWeekEnding(String enhancedSchemeDataTempWeekEnding) {
    this.enhancedSchemeDataTempWeekEnding = enhancedSchemeDataTempWeekEnding;
    return this;
  }

  /**
   * The billing period end date. * Format: ddMMyy * maxLength: 6
   * @return enhancedSchemeDataTempWeekEnding
   */
  @javax.annotation.Nullable
  public String getEnhancedSchemeDataTempWeekEnding() {
    return enhancedSchemeDataTempWeekEnding;
  }

  public void setEnhancedSchemeDataTempWeekEnding(String enhancedSchemeDataTempWeekEnding) {
    this.enhancedSchemeDataTempWeekEnding = enhancedSchemeDataTempWeekEnding;
  }


  public AdditionalDataTemporaryServices enhancedSchemeDataTotalTaxAmount(String enhancedSchemeDataTotalTaxAmount) {
    this.enhancedSchemeDataTotalTaxAmount = enhancedSchemeDataTotalTaxAmount;
    return this;
  }

  /**
   * The total tax amount, in [minor units](https://docs.adyen.com/development-resources/currency-codes). For example, 2000 means USD 20.00 * maxLength: 12
   * @return enhancedSchemeDataTotalTaxAmount
   */
  @javax.annotation.Nullable
  public String getEnhancedSchemeDataTotalTaxAmount() {
    return enhancedSchemeDataTotalTaxAmount;
  }

  public void setEnhancedSchemeDataTotalTaxAmount(String enhancedSchemeDataTotalTaxAmount) {
    this.enhancedSchemeDataTotalTaxAmount = enhancedSchemeDataTotalTaxAmount;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AdditionalDataTemporaryServices additionalDataTemporaryServices = (AdditionalDataTemporaryServices) o;
    return Objects.equals(this.enhancedSchemeDataCustomerReference, additionalDataTemporaryServices.enhancedSchemeDataCustomerReference) &&
        Objects.equals(this.enhancedSchemeDataEmployeeName, additionalDataTemporaryServices.enhancedSchemeDataEmployeeName) &&
        Objects.equals(this.enhancedSchemeDataJobDescription, additionalDataTemporaryServices.enhancedSchemeDataJobDescription) &&
        Objects.equals(this.enhancedSchemeDataRegularHoursRate, additionalDataTemporaryServices.enhancedSchemeDataRegularHoursRate) &&
        Objects.equals(this.enhancedSchemeDataRegularHoursWorked, additionalDataTemporaryServices.enhancedSchemeDataRegularHoursWorked) &&
        Objects.equals(this.enhancedSchemeDataRequestName, additionalDataTemporaryServices.enhancedSchemeDataRequestName) &&
        Objects.equals(this.enhancedSchemeDataTempStartDate, additionalDataTemporaryServices.enhancedSchemeDataTempStartDate) &&
        Objects.equals(this.enhancedSchemeDataTempWeekEnding, additionalDataTemporaryServices.enhancedSchemeDataTempWeekEnding) &&
        Objects.equals(this.enhancedSchemeDataTotalTaxAmount, additionalDataTemporaryServices.enhancedSchemeDataTotalTaxAmount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(enhancedSchemeDataCustomerReference, enhancedSchemeDataEmployeeName, enhancedSchemeDataJobDescription, enhancedSchemeDataRegularHoursRate, enhancedSchemeDataRegularHoursWorked, enhancedSchemeDataRequestName, enhancedSchemeDataTempStartDate, enhancedSchemeDataTempWeekEnding, enhancedSchemeDataTotalTaxAmount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AdditionalDataTemporaryServices {\n");
    sb.append("    enhancedSchemeDataCustomerReference: ").append(toIndentedString(enhancedSchemeDataCustomerReference)).append("\n");
    sb.append("    enhancedSchemeDataEmployeeName: ").append(toIndentedString(enhancedSchemeDataEmployeeName)).append("\n");
    sb.append("    enhancedSchemeDataJobDescription: ").append(toIndentedString(enhancedSchemeDataJobDescription)).append("\n");
    sb.append("    enhancedSchemeDataRegularHoursRate: ").append(toIndentedString(enhancedSchemeDataRegularHoursRate)).append("\n");
    sb.append("    enhancedSchemeDataRegularHoursWorked: ").append(toIndentedString(enhancedSchemeDataRegularHoursWorked)).append("\n");
    sb.append("    enhancedSchemeDataRequestName: ").append(toIndentedString(enhancedSchemeDataRequestName)).append("\n");
    sb.append("    enhancedSchemeDataTempStartDate: ").append(toIndentedString(enhancedSchemeDataTempStartDate)).append("\n");
    sb.append("    enhancedSchemeDataTempWeekEnding: ").append(toIndentedString(enhancedSchemeDataTempWeekEnding)).append("\n");
    sb.append("    enhancedSchemeDataTotalTaxAmount: ").append(toIndentedString(enhancedSchemeDataTotalTaxAmount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("enhancedSchemeData.customerReference");
    openapiFields.add("enhancedSchemeData.employeeName");
    openapiFields.add("enhancedSchemeData.jobDescription");
    openapiFields.add("enhancedSchemeData.regularHoursRate");
    openapiFields.add("enhancedSchemeData.regularHoursWorked");
    openapiFields.add("enhancedSchemeData.requestName");
    openapiFields.add("enhancedSchemeData.tempStartDate");
    openapiFields.add("enhancedSchemeData.tempWeekEnding");
    openapiFields.add("enhancedSchemeData.totalTaxAmount");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AdditionalDataTemporaryServices
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AdditionalDataTemporaryServices.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AdditionalDataTemporaryServices is not found in the empty JSON string", AdditionalDataTemporaryServices.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AdditionalDataTemporaryServices.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AdditionalDataTemporaryServices` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("enhancedSchemeData.customerReference") != null && !jsonObj.get("enhancedSchemeData.customerReference").isJsonNull()) && !jsonObj.get("enhancedSchemeData.customerReference").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `enhancedSchemeData.customerReference` to be a primitive type in the JSON string but got `%s`", jsonObj.get("enhancedSchemeData.customerReference").toString()));
      }
      if ((jsonObj.get("enhancedSchemeData.employeeName") != null && !jsonObj.get("enhancedSchemeData.employeeName").isJsonNull()) && !jsonObj.get("enhancedSchemeData.employeeName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `enhancedSchemeData.employeeName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("enhancedSchemeData.employeeName").toString()));
      }
      if ((jsonObj.get("enhancedSchemeData.jobDescription") != null && !jsonObj.get("enhancedSchemeData.jobDescription").isJsonNull()) && !jsonObj.get("enhancedSchemeData.jobDescription").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `enhancedSchemeData.jobDescription` to be a primitive type in the JSON string but got `%s`", jsonObj.get("enhancedSchemeData.jobDescription").toString()));
      }
      if ((jsonObj.get("enhancedSchemeData.regularHoursRate") != null && !jsonObj.get("enhancedSchemeData.regularHoursRate").isJsonNull()) && !jsonObj.get("enhancedSchemeData.regularHoursRate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `enhancedSchemeData.regularHoursRate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("enhancedSchemeData.regularHoursRate").toString()));
      }
      if ((jsonObj.get("enhancedSchemeData.regularHoursWorked") != null && !jsonObj.get("enhancedSchemeData.regularHoursWorked").isJsonNull()) && !jsonObj.get("enhancedSchemeData.regularHoursWorked").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `enhancedSchemeData.regularHoursWorked` to be a primitive type in the JSON string but got `%s`", jsonObj.get("enhancedSchemeData.regularHoursWorked").toString()));
      }
      if ((jsonObj.get("enhancedSchemeData.requestName") != null && !jsonObj.get("enhancedSchemeData.requestName").isJsonNull()) && !jsonObj.get("enhancedSchemeData.requestName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `enhancedSchemeData.requestName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("enhancedSchemeData.requestName").toString()));
      }
      if ((jsonObj.get("enhancedSchemeData.tempStartDate") != null && !jsonObj.get("enhancedSchemeData.tempStartDate").isJsonNull()) && !jsonObj.get("enhancedSchemeData.tempStartDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `enhancedSchemeData.tempStartDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("enhancedSchemeData.tempStartDate").toString()));
      }
      if ((jsonObj.get("enhancedSchemeData.tempWeekEnding") != null && !jsonObj.get("enhancedSchemeData.tempWeekEnding").isJsonNull()) && !jsonObj.get("enhancedSchemeData.tempWeekEnding").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `enhancedSchemeData.tempWeekEnding` to be a primitive type in the JSON string but got `%s`", jsonObj.get("enhancedSchemeData.tempWeekEnding").toString()));
      }
      if ((jsonObj.get("enhancedSchemeData.totalTaxAmount") != null && !jsonObj.get("enhancedSchemeData.totalTaxAmount").isJsonNull()) && !jsonObj.get("enhancedSchemeData.totalTaxAmount").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `enhancedSchemeData.totalTaxAmount` to be a primitive type in the JSON string but got `%s`", jsonObj.get("enhancedSchemeData.totalTaxAmount").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AdditionalDataTemporaryServices.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AdditionalDataTemporaryServices' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AdditionalDataTemporaryServices> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AdditionalDataTemporaryServices.class));

       return (TypeAdapter<T>) new TypeAdapter<AdditionalDataTemporaryServices>() {
           @Override
           public void write(JsonWriter out, AdditionalDataTemporaryServices value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AdditionalDataTemporaryServices read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AdditionalDataTemporaryServices given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AdditionalDataTemporaryServices
   * @throws IOException if the JSON string is invalid with respect to AdditionalDataTemporaryServices
   */
  public static AdditionalDataTemporaryServices fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AdditionalDataTemporaryServices.class);
  }

  /**
   * Convert an instance of AdditionalDataTemporaryServices to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

