/**
 * Adyen Checkout API
 * Adyen Checkout API provides a simple and flexible way to initiate and authorise online payments. You can use the same integration for payments made with cards (including 3D Secure), mobile wallets, and local payment methods (for example, iDEAL and Sofort).  This API reference provides information on available endpoints and how to interact with them. To learn more about the API, visit [online payments documentation](https://docs.adyen.com/online-payments).  ## Authentication Each request to Checkout API must be signed with an API key. For this, [get your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) from your Customer Area, and set this key to the `X-API-Key` header value, for example:  ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ``` ## Versioning Checkout API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://checkout-test.adyen.com/v50/payments ```  ## Going live  To access the live endpoints, you need an API key from your live Customer Area.  The live endpoint URLs contain a prefix which is unique to your company account, for example: ``` https://{PREFIX}-checkout-live.adyenpayments.com/checkout/v50/payments ```  Get your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.  When preparing to do live transactions with Checkout API, follow the [go-live checklist](https://docs.adyen.com/online-payments/go-live-checklist) to make sure you've got all the required configuration in place.  ## Release notes Have a look at the [release notes](https://docs.adyen.com/online-payments/release-notes?integration_type=api&version=50) to find out what changed in this version!
 *
 * The version of the OpenAPI document: 50
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAdditionalData3DSecure.h
 *
 * 
 */

#ifndef OAIAdditionalData3DSecure_H
#define OAIAdditionalData3DSecure_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAdditionalData3DSecure : public OAIObject {
public:
    OAIAdditionalData3DSecure();
    OAIAdditionalData3DSecure(QString json);
    ~OAIAdditionalData3DSecure() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAllow3Ds2() const;
    void setAllow3Ds2(const QString &allow3_ds2);
    bool is_allow3_ds2_Set() const;
    bool is_allow3_ds2_Valid() const;

    QString getChallengeWindowSize() const;
    void setChallengeWindowSize(const QString &challenge_window_size);
    bool is_challenge_window_size_Set() const;
    bool is_challenge_window_size_Valid() const;

    QString getExecuteThreeD() const;
    void setExecuteThreeD(const QString &execute_three_d);
    bool is_execute_three_d_Set() const;
    bool is_execute_three_d_Valid() const;

    QString getMpiImplementationType() const;
    void setMpiImplementationType(const QString &mpi_implementation_type);
    bool is_mpi_implementation_type_Set() const;
    bool is_mpi_implementation_type_Valid() const;

    QString getScaExemption() const;
    void setScaExemption(const QString &sca_exemption);
    bool is_sca_exemption_Set() const;
    bool is_sca_exemption_Valid() const;

    QString getThreeDsVersion() const;
    void setThreeDsVersion(const QString &three_ds_version);
    bool is_three_ds_version_Set() const;
    bool is_three_ds_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_allow3_ds2;
    bool m_allow3_ds2_isSet;
    bool m_allow3_ds2_isValid;

    QString m_challenge_window_size;
    bool m_challenge_window_size_isSet;
    bool m_challenge_window_size_isValid;

    QString m_execute_three_d;
    bool m_execute_three_d_isSet;
    bool m_execute_three_d_isValid;

    QString m_mpi_implementation_type;
    bool m_mpi_implementation_type_isSet;
    bool m_mpi_implementation_type_isValid;

    QString m_sca_exemption;
    bool m_sca_exemption_isSet;
    bool m_sca_exemption_isValid;

    QString m_three_ds_version;
    bool m_three_ds_version_isSet;
    bool m_three_ds_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAdditionalData3DSecure)

#endif // OAIAdditionalData3DSecure_H
