/**
 * Adyen Checkout API
 * Adyen Checkout API provides a simple and flexible way to initiate and authorise online payments. You can use the same integration for payments made with cards (including 3D Secure), mobile wallets, and local payment methods (for example, iDEAL and Sofort).  This API reference provides information on available endpoints and how to interact with them. To learn more about the API, visit [online payments documentation](https://docs.adyen.com/online-payments).  ## Authentication Each request to Checkout API must be signed with an API key. For this, [get your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) from your Customer Area, and set this key to the `X-API-Key` header value, for example:  ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ``` ## Versioning Checkout API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://checkout-test.adyen.com/v50/payments ```  ## Going live  To access the live endpoints, you need an API key from your live Customer Area.  The live endpoint URLs contain a prefix which is unique to your company account, for example: ``` https://{PREFIX}-checkout-live.adyenpayments.com/checkout/v50/payments ```  Get your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.  When preparing to do live transactions with Checkout API, follow the [go-live checklist](https://docs.adyen.com/online-payments/go-live-checklist) to make sure you've got all the required configuration in place.  ## Release notes Have a look at the [release notes](https://docs.adyen.com/online-payments/release-notes?integration_type=api&version=50) to find out what changed in this version!
 *
 * The version of the OpenAPI document: 50
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIResponseAdditionalDataBillingAddress.h
 *
 * 
 */

#ifndef OAIResponseAdditionalDataBillingAddress_H
#define OAIResponseAdditionalDataBillingAddress_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIResponseAdditionalDataBillingAddress : public OAIObject {
public:
    OAIResponseAdditionalDataBillingAddress();
    OAIResponseAdditionalDataBillingAddress(QString json);
    ~OAIResponseAdditionalDataBillingAddress() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBillingAddressCity() const;
    void setBillingAddressCity(const QString &billing_address_city);
    bool is_billing_address_city_Set() const;
    bool is_billing_address_city_Valid() const;

    QString getBillingAddressCountry() const;
    void setBillingAddressCountry(const QString &billing_address_country);
    bool is_billing_address_country_Set() const;
    bool is_billing_address_country_Valid() const;

    QString getBillingAddressHouseNumberOrName() const;
    void setBillingAddressHouseNumberOrName(const QString &billing_address_house_number_or_name);
    bool is_billing_address_house_number_or_name_Set() const;
    bool is_billing_address_house_number_or_name_Valid() const;

    QString getBillingAddressPostalCode() const;
    void setBillingAddressPostalCode(const QString &billing_address_postal_code);
    bool is_billing_address_postal_code_Set() const;
    bool is_billing_address_postal_code_Valid() const;

    QString getBillingAddressStateOrProvince() const;
    void setBillingAddressStateOrProvince(const QString &billing_address_state_or_province);
    bool is_billing_address_state_or_province_Set() const;
    bool is_billing_address_state_or_province_Valid() const;

    QString getBillingAddressStreet() const;
    void setBillingAddressStreet(const QString &billing_address_street);
    bool is_billing_address_street_Set() const;
    bool is_billing_address_street_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_billing_address_city;
    bool m_billing_address_city_isSet;
    bool m_billing_address_city_isValid;

    QString m_billing_address_country;
    bool m_billing_address_country_isSet;
    bool m_billing_address_country_isValid;

    QString m_billing_address_house_number_or_name;
    bool m_billing_address_house_number_or_name_isSet;
    bool m_billing_address_house_number_or_name_isValid;

    QString m_billing_address_postal_code;
    bool m_billing_address_postal_code_isSet;
    bool m_billing_address_postal_code_isValid;

    QString m_billing_address_state_or_province;
    bool m_billing_address_state_or_province_isSet;
    bool m_billing_address_state_or_province_isValid;

    QString m_billing_address_street;
    bool m_billing_address_street_isSet;
    bool m_billing_address_street_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIResponseAdditionalDataBillingAddress)

#endif // OAIResponseAdditionalDataBillingAddress_H
