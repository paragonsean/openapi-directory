/**
 * Adyen Checkout API
 * Adyen Checkout API provides a simple and flexible way to initiate and authorise online payments. You can use the same integration for payments made with cards (including 3D Secure), mobile wallets, and local payment methods (for example, iDEAL and Sofort).  This API reference provides information on available endpoints and how to interact with them. To learn more about the API, visit [online payments documentation](https://docs.adyen.com/online-payments).  ## Authentication Each request to Checkout API must be signed with an API key. For this, [get your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) from your Customer Area, and set this key to the `X-API-Key` header value, for example:  ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ``` ## Versioning Checkout API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://checkout-test.adyen.com/v50/payments ```  ## Going live  To access the live endpoints, you need an API key from your live Customer Area.  The live endpoint URLs contain a prefix which is unique to your company account, for example: ``` https://{PREFIX}-checkout-live.adyenpayments.com/checkout/v50/payments ```  Get your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.  When preparing to do live transactions with Checkout API, follow the [go-live checklist](https://docs.adyen.com/online-payments/go-live-checklist) to make sure you've got all the required configuration in place.  ## Release notes Have a look at the [release notes](https://docs.adyen.com/online-payments/release-notes?integration_type=api&version=50) to find out what changed in this version!
 *
 * The version of the OpenAPI document: 50
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISDKEphemPubKey.h
 *
 * 
 */

#ifndef OAISDKEphemPubKey_H
#define OAISDKEphemPubKey_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISDKEphemPubKey : public OAIObject {
public:
    OAISDKEphemPubKey();
    OAISDKEphemPubKey(QString json);
    ~OAISDKEphemPubKey() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCrv() const;
    void setCrv(const QString &crv);
    bool is_crv_Set() const;
    bool is_crv_Valid() const;

    QString getKty() const;
    void setKty(const QString &kty);
    bool is_kty_Set() const;
    bool is_kty_Valid() const;

    QString getX() const;
    void setX(const QString &x);
    bool is_x_Set() const;
    bool is_x_Valid() const;

    QString getY() const;
    void setY(const QString &y);
    bool is_y_Set() const;
    bool is_y_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_crv;
    bool m_crv_isSet;
    bool m_crv_isValid;

    QString m_kty;
    bool m_kty_isSet;
    bool m_kty_isValid;

    QString m_x;
    bool m_x_isSet;
    bool m_x_isValid;

    QString m_y;
    bool m_y_isSet;
    bool m_y_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISDKEphemPubKey)

#endif // OAISDKEphemPubKey_H
