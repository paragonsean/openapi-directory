/*
 * Adyen Checkout API
 * Adyen Checkout API provides a simple and flexible way to initiate and authorise online payments. You can use the same integration for payments made with cards (including 3D Secure), mobile wallets, and local payment methods (for example, iDEAL and Sofort).  This API reference provides information on available endpoints and how to interact with them. To learn more about the API, visit [online payments documentation](https://docs.adyen.com/online-payments).  ## Authentication Each request to Checkout API must be signed with an API key. For this, [get your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) from your Customer Area, and set this key to the `X-API-Key` header value, for example:  ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ``` ## Versioning Checkout API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://checkout-test.adyen.com/v65/payments ```  ## Going live  To access the live endpoints, you need an API key from your live Customer Area.  The live endpoint URLs contain a prefix which is unique to your company account, for example: ``` https://{PREFIX}-checkout-live.adyenpayments.com/checkout/v65/payments ```  Get your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.  When preparing to do live transactions with Checkout API, follow the [go-live checklist](https://docs.adyen.com/online-payments/go-live-checklist) to make sure you've got all the required configuration in place.  ## Release notes Have a look at the [release notes](https://docs.adyen.com/online-payments/release-notes?integration_type=api&version=65) to find out what changed in this version!
 *
 * The version of the OpenAPI document: 65
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * AdditionalDataCarRental
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:15:58.142349-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AdditionalDataCarRental {
  public static final String SERIALIZED_NAME_CAR_RENTAL_CHECK_OUT_DATE = "carRental.checkOutDate";
  @SerializedName(SERIALIZED_NAME_CAR_RENTAL_CHECK_OUT_DATE)
  private String carRentalCheckOutDate;

  public static final String SERIALIZED_NAME_CAR_RENTAL_CUSTOMER_SERVICE_TOLL_FREE_NUMBER = "carRental.customerServiceTollFreeNumber";
  @SerializedName(SERIALIZED_NAME_CAR_RENTAL_CUSTOMER_SERVICE_TOLL_FREE_NUMBER)
  private String carRentalCustomerServiceTollFreeNumber;

  public static final String SERIALIZED_NAME_CAR_RENTAL_DAYS_RENTED = "carRental.daysRented";
  @SerializedName(SERIALIZED_NAME_CAR_RENTAL_DAYS_RENTED)
  private String carRentalDaysRented;

  public static final String SERIALIZED_NAME_CAR_RENTAL_FUEL_CHARGES = "carRental.fuelCharges";
  @SerializedName(SERIALIZED_NAME_CAR_RENTAL_FUEL_CHARGES)
  private String carRentalFuelCharges;

  public static final String SERIALIZED_NAME_CAR_RENTAL_INSURANCE_CHARGES = "carRental.insuranceCharges";
  @SerializedName(SERIALIZED_NAME_CAR_RENTAL_INSURANCE_CHARGES)
  private String carRentalInsuranceCharges;

  public static final String SERIALIZED_NAME_CAR_RENTAL_LOCATION_CITY = "carRental.locationCity";
  @SerializedName(SERIALIZED_NAME_CAR_RENTAL_LOCATION_CITY)
  private String carRentalLocationCity;

  public static final String SERIALIZED_NAME_CAR_RENTAL_LOCATION_COUNTRY = "carRental.locationCountry";
  @SerializedName(SERIALIZED_NAME_CAR_RENTAL_LOCATION_COUNTRY)
  private String carRentalLocationCountry;

  public static final String SERIALIZED_NAME_CAR_RENTAL_LOCATION_STATE_PROVINCE = "carRental.locationStateProvince";
  @SerializedName(SERIALIZED_NAME_CAR_RENTAL_LOCATION_STATE_PROVINCE)
  private String carRentalLocationStateProvince;

  public static final String SERIALIZED_NAME_CAR_RENTAL_NO_SHOW_INDICATOR = "carRental.noShowIndicator";
  @SerializedName(SERIALIZED_NAME_CAR_RENTAL_NO_SHOW_INDICATOR)
  private String carRentalNoShowIndicator;

  public static final String SERIALIZED_NAME_CAR_RENTAL_ONE_WAY_DROP_OFF_CHARGES = "carRental.oneWayDropOffCharges";
  @SerializedName(SERIALIZED_NAME_CAR_RENTAL_ONE_WAY_DROP_OFF_CHARGES)
  private String carRentalOneWayDropOffCharges;

  public static final String SERIALIZED_NAME_CAR_RENTAL_RATE = "carRental.rate";
  @SerializedName(SERIALIZED_NAME_CAR_RENTAL_RATE)
  private String carRentalRate;

  public static final String SERIALIZED_NAME_CAR_RENTAL_RATE_INDICATOR = "carRental.rateIndicator";
  @SerializedName(SERIALIZED_NAME_CAR_RENTAL_RATE_INDICATOR)
  private String carRentalRateIndicator;

  public static final String SERIALIZED_NAME_CAR_RENTAL_RENTAL_AGREEMENT_NUMBER = "carRental.rentalAgreementNumber";
  @SerializedName(SERIALIZED_NAME_CAR_RENTAL_RENTAL_AGREEMENT_NUMBER)
  private String carRentalRentalAgreementNumber;

  public static final String SERIALIZED_NAME_CAR_RENTAL_RENTAL_CLASS_ID = "carRental.rentalClassId";
  @SerializedName(SERIALIZED_NAME_CAR_RENTAL_RENTAL_CLASS_ID)
  private String carRentalRentalClassId;

  public static final String SERIALIZED_NAME_CAR_RENTAL_RENTER_NAME = "carRental.renterName";
  @SerializedName(SERIALIZED_NAME_CAR_RENTAL_RENTER_NAME)
  private String carRentalRenterName;

  public static final String SERIALIZED_NAME_CAR_RENTAL_RETURN_CITY = "carRental.returnCity";
  @SerializedName(SERIALIZED_NAME_CAR_RENTAL_RETURN_CITY)
  private String carRentalReturnCity;

  public static final String SERIALIZED_NAME_CAR_RENTAL_RETURN_COUNTRY = "carRental.returnCountry";
  @SerializedName(SERIALIZED_NAME_CAR_RENTAL_RETURN_COUNTRY)
  private String carRentalReturnCountry;

  public static final String SERIALIZED_NAME_CAR_RENTAL_RETURN_DATE = "carRental.returnDate";
  @SerializedName(SERIALIZED_NAME_CAR_RENTAL_RETURN_DATE)
  private String carRentalReturnDate;

  public static final String SERIALIZED_NAME_CAR_RENTAL_RETURN_LOCATION_ID = "carRental.returnLocationId";
  @SerializedName(SERIALIZED_NAME_CAR_RENTAL_RETURN_LOCATION_ID)
  private String carRentalReturnLocationId;

  public static final String SERIALIZED_NAME_CAR_RENTAL_RETURN_STATE_PROVINCE = "carRental.returnStateProvince";
  @SerializedName(SERIALIZED_NAME_CAR_RENTAL_RETURN_STATE_PROVINCE)
  private String carRentalReturnStateProvince;

  public static final String SERIALIZED_NAME_CAR_RENTAL_TAX_EXEMPT_INDICATOR = "carRental.taxExemptIndicator";
  @SerializedName(SERIALIZED_NAME_CAR_RENTAL_TAX_EXEMPT_INDICATOR)
  private String carRentalTaxExemptIndicator;

  public static final String SERIALIZED_NAME_TRAVEL_ENTERTAINMENT_AUTH_DATA_DURATION = "travelEntertainmentAuthData.duration";
  @SerializedName(SERIALIZED_NAME_TRAVEL_ENTERTAINMENT_AUTH_DATA_DURATION)
  private String travelEntertainmentAuthDataDuration;

  public static final String SERIALIZED_NAME_TRAVEL_ENTERTAINMENT_AUTH_DATA_MARKET = "travelEntertainmentAuthData.market";
  @SerializedName(SERIALIZED_NAME_TRAVEL_ENTERTAINMENT_AUTH_DATA_MARKET)
  private String travelEntertainmentAuthDataMarket;

  public AdditionalDataCarRental() {
  }

  public AdditionalDataCarRental carRentalCheckOutDate(String carRentalCheckOutDate) {
    this.carRentalCheckOutDate = carRentalCheckOutDate;
    return this;
  }

  /**
   * The pick-up date. * Date format: &#x60;yyyyMMdd&#x60;
   * @return carRentalCheckOutDate
   */
  @javax.annotation.Nullable
  public String getCarRentalCheckOutDate() {
    return carRentalCheckOutDate;
  }

  public void setCarRentalCheckOutDate(String carRentalCheckOutDate) {
    this.carRentalCheckOutDate = carRentalCheckOutDate;
  }


  public AdditionalDataCarRental carRentalCustomerServiceTollFreeNumber(String carRentalCustomerServiceTollFreeNumber) {
    this.carRentalCustomerServiceTollFreeNumber = carRentalCustomerServiceTollFreeNumber;
    return this;
  }

  /**
   * The customer service phone number of the car rental company. * Format: Alphanumeric * maxLength: 17 * For US and CA numbers must be 10 characters in length * Must not start with a space * Must not contain any special characters such as + or - *Must not be all zeros.
   * @return carRentalCustomerServiceTollFreeNumber
   */
  @javax.annotation.Nullable
  public String getCarRentalCustomerServiceTollFreeNumber() {
    return carRentalCustomerServiceTollFreeNumber;
  }

  public void setCarRentalCustomerServiceTollFreeNumber(String carRentalCustomerServiceTollFreeNumber) {
    this.carRentalCustomerServiceTollFreeNumber = carRentalCustomerServiceTollFreeNumber;
  }


  public AdditionalDataCarRental carRentalDaysRented(String carRentalDaysRented) {
    this.carRentalDaysRented = carRentalDaysRented;
    return this;
  }

  /**
   * Number of days for which the car is being rented. * Format: Numeric * maxLength: 4 * Must not be all spaces
   * @return carRentalDaysRented
   */
  @javax.annotation.Nullable
  public String getCarRentalDaysRented() {
    return carRentalDaysRented;
  }

  public void setCarRentalDaysRented(String carRentalDaysRented) {
    this.carRentalDaysRented = carRentalDaysRented;
  }


  public AdditionalDataCarRental carRentalFuelCharges(String carRentalFuelCharges) {
    this.carRentalFuelCharges = carRentalFuelCharges;
    return this;
  }

  /**
   * Any fuel charges associated with the rental, in [minor units](https://docs.adyen.com/development-resources/currency-codes). * Format: Numeric * maxLength: 12
   * @return carRentalFuelCharges
   */
  @javax.annotation.Nullable
  public String getCarRentalFuelCharges() {
    return carRentalFuelCharges;
  }

  public void setCarRentalFuelCharges(String carRentalFuelCharges) {
    this.carRentalFuelCharges = carRentalFuelCharges;
  }


  public AdditionalDataCarRental carRentalInsuranceCharges(String carRentalInsuranceCharges) {
    this.carRentalInsuranceCharges = carRentalInsuranceCharges;
    return this;
  }

  /**
   * Any insurance charges associated with the rental, in [minor units](https://docs.adyen.com/development-resources/currency-codes). * Format: Numeric * maxLength: 12 * Must not be all spaces *Must not be all zeros.
   * @return carRentalInsuranceCharges
   */
  @javax.annotation.Nullable
  public String getCarRentalInsuranceCharges() {
    return carRentalInsuranceCharges;
  }

  public void setCarRentalInsuranceCharges(String carRentalInsuranceCharges) {
    this.carRentalInsuranceCharges = carRentalInsuranceCharges;
  }


  public AdditionalDataCarRental carRentalLocationCity(String carRentalLocationCity) {
    this.carRentalLocationCity = carRentalLocationCity;
    return this;
  }

  /**
   * The city where the car is rented. * Format: Alphanumeric * maxLength: 18 * Must not start with a space or be all spaces *Must not be all zeros.
   * @return carRentalLocationCity
   */
  @javax.annotation.Nullable
  public String getCarRentalLocationCity() {
    return carRentalLocationCity;
  }

  public void setCarRentalLocationCity(String carRentalLocationCity) {
    this.carRentalLocationCity = carRentalLocationCity;
  }


  public AdditionalDataCarRental carRentalLocationCountry(String carRentalLocationCountry) {
    this.carRentalLocationCountry = carRentalLocationCountry;
    return this;
  }

  /**
   * The country where the car is rented, in [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) format. * Format: Alphanumeric * maxLength: 2
   * @return carRentalLocationCountry
   */
  @javax.annotation.Nullable
  public String getCarRentalLocationCountry() {
    return carRentalLocationCountry;
  }

  public void setCarRentalLocationCountry(String carRentalLocationCountry) {
    this.carRentalLocationCountry = carRentalLocationCountry;
  }


  public AdditionalDataCarRental carRentalLocationStateProvince(String carRentalLocationStateProvince) {
    this.carRentalLocationStateProvince = carRentalLocationStateProvince;
    return this;
  }

  /**
   * The state or province where the car is rented. * Format: Alphanumeric * maxLength: 2 * Must not start with a space or be all spaces *Must not be all zeros.
   * @return carRentalLocationStateProvince
   */
  @javax.annotation.Nullable
  public String getCarRentalLocationStateProvince() {
    return carRentalLocationStateProvince;
  }

  public void setCarRentalLocationStateProvince(String carRentalLocationStateProvince) {
    this.carRentalLocationStateProvince = carRentalLocationStateProvince;
  }


  public AdditionalDataCarRental carRentalNoShowIndicator(String carRentalNoShowIndicator) {
    this.carRentalNoShowIndicator = carRentalNoShowIndicator;
    return this;
  }

  /**
   * Indicates if the customer didn&#39;t pick up their rental car. * Y - Customer did not pick up their car * N - Not applicable
   * @return carRentalNoShowIndicator
   */
  @javax.annotation.Nullable
  public String getCarRentalNoShowIndicator() {
    return carRentalNoShowIndicator;
  }

  public void setCarRentalNoShowIndicator(String carRentalNoShowIndicator) {
    this.carRentalNoShowIndicator = carRentalNoShowIndicator;
  }


  public AdditionalDataCarRental carRentalOneWayDropOffCharges(String carRentalOneWayDropOffCharges) {
    this.carRentalOneWayDropOffCharges = carRentalOneWayDropOffCharges;
    return this;
  }

  /**
   * The charge for not returning a car to the original rental location, in [minor units](https://docs.adyen.com/development-resources/currency-codes). * maxLength: 12
   * @return carRentalOneWayDropOffCharges
   */
  @javax.annotation.Nullable
  public String getCarRentalOneWayDropOffCharges() {
    return carRentalOneWayDropOffCharges;
  }

  public void setCarRentalOneWayDropOffCharges(String carRentalOneWayDropOffCharges) {
    this.carRentalOneWayDropOffCharges = carRentalOneWayDropOffCharges;
  }


  public AdditionalDataCarRental carRentalRate(String carRentalRate) {
    this.carRentalRate = carRentalRate;
    return this;
  }

  /**
   * The daily rental rate, in [minor units](https://docs.adyen.com/development-resources/currency-codes). * Format: Alphanumeric * maxLength: 12
   * @return carRentalRate
   */
  @javax.annotation.Nullable
  public String getCarRentalRate() {
    return carRentalRate;
  }

  public void setCarRentalRate(String carRentalRate) {
    this.carRentalRate = carRentalRate;
  }


  public AdditionalDataCarRental carRentalRateIndicator(String carRentalRateIndicator) {
    this.carRentalRateIndicator = carRentalRateIndicator;
    return this;
  }

  /**
   * Specifies whether the given rate is applied daily or weekly. * D - Daily rate * W - Weekly rate
   * @return carRentalRateIndicator
   */
  @javax.annotation.Nullable
  public String getCarRentalRateIndicator() {
    return carRentalRateIndicator;
  }

  public void setCarRentalRateIndicator(String carRentalRateIndicator) {
    this.carRentalRateIndicator = carRentalRateIndicator;
  }


  public AdditionalDataCarRental carRentalRentalAgreementNumber(String carRentalRentalAgreementNumber) {
    this.carRentalRentalAgreementNumber = carRentalRentalAgreementNumber;
    return this;
  }

  /**
   * The rental agreement number for the car rental. * Format: Alphanumeric * maxLength: 9 * Must not start with a space or be all spaces *Must not be all zeros.
   * @return carRentalRentalAgreementNumber
   */
  @javax.annotation.Nullable
  public String getCarRentalRentalAgreementNumber() {
    return carRentalRentalAgreementNumber;
  }

  public void setCarRentalRentalAgreementNumber(String carRentalRentalAgreementNumber) {
    this.carRentalRentalAgreementNumber = carRentalRentalAgreementNumber;
  }


  public AdditionalDataCarRental carRentalRentalClassId(String carRentalRentalClassId) {
    this.carRentalRentalClassId = carRentalRentalClassId;
    return this;
  }

  /**
   * The classification of the rental car. * Format: Alphanumeric * maxLength: 4 * Must not start with a space or be all spaces *Must not be all zeros.
   * @return carRentalRentalClassId
   */
  @javax.annotation.Nullable
  public String getCarRentalRentalClassId() {
    return carRentalRentalClassId;
  }

  public void setCarRentalRentalClassId(String carRentalRentalClassId) {
    this.carRentalRentalClassId = carRentalRentalClassId;
  }


  public AdditionalDataCarRental carRentalRenterName(String carRentalRenterName) {
    this.carRentalRenterName = carRentalRenterName;
    return this;
  }

  /**
   * The name of the person renting the car. * Format: Alphanumeric * maxLength: 26 * If you send more than 26 characters, the name is truncated * Must not start with a space or be all spaces *Must not be all zeros.
   * @return carRentalRenterName
   */
  @javax.annotation.Nullable
  public String getCarRentalRenterName() {
    return carRentalRenterName;
  }

  public void setCarRentalRenterName(String carRentalRenterName) {
    this.carRentalRenterName = carRentalRenterName;
  }


  public AdditionalDataCarRental carRentalReturnCity(String carRentalReturnCity) {
    this.carRentalReturnCity = carRentalReturnCity;
    return this;
  }

  /**
   * The city where the car must be returned. * Format: Alphanumeric * maxLength: 18 * Must not start with a space or be all spaces *Must not be all zeros.
   * @return carRentalReturnCity
   */
  @javax.annotation.Nullable
  public String getCarRentalReturnCity() {
    return carRentalReturnCity;
  }

  public void setCarRentalReturnCity(String carRentalReturnCity) {
    this.carRentalReturnCity = carRentalReturnCity;
  }


  public AdditionalDataCarRental carRentalReturnCountry(String carRentalReturnCountry) {
    this.carRentalReturnCountry = carRentalReturnCountry;
    return this;
  }

  /**
   * The country where the car must be returned, in [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) format. * Format: Alphanumeric * maxLength: 2
   * @return carRentalReturnCountry
   */
  @javax.annotation.Nullable
  public String getCarRentalReturnCountry() {
    return carRentalReturnCountry;
  }

  public void setCarRentalReturnCountry(String carRentalReturnCountry) {
    this.carRentalReturnCountry = carRentalReturnCountry;
  }


  public AdditionalDataCarRental carRentalReturnDate(String carRentalReturnDate) {
    this.carRentalReturnDate = carRentalReturnDate;
    return this;
  }

  /**
   * The last date to return the car by. * Date format: &#x60;yyyyMMdd&#x60; * maxLength: 8
   * @return carRentalReturnDate
   */
  @javax.annotation.Nullable
  public String getCarRentalReturnDate() {
    return carRentalReturnDate;
  }

  public void setCarRentalReturnDate(String carRentalReturnDate) {
    this.carRentalReturnDate = carRentalReturnDate;
  }


  public AdditionalDataCarRental carRentalReturnLocationId(String carRentalReturnLocationId) {
    this.carRentalReturnLocationId = carRentalReturnLocationId;
    return this;
  }

  /**
   * The agency code, phone number, or address abbreviation * Format: Alphanumeric * maxLength: 10 * Must not start with a space or be all spaces *Must not be all zeros.
   * @return carRentalReturnLocationId
   */
  @javax.annotation.Nullable
  public String getCarRentalReturnLocationId() {
    return carRentalReturnLocationId;
  }

  public void setCarRentalReturnLocationId(String carRentalReturnLocationId) {
    this.carRentalReturnLocationId = carRentalReturnLocationId;
  }


  public AdditionalDataCarRental carRentalReturnStateProvince(String carRentalReturnStateProvince) {
    this.carRentalReturnStateProvince = carRentalReturnStateProvince;
    return this;
  }

  /**
   * The state or province where the car must be returned. * Format: Alphanumeric * maxLength: 3 * Must not start with a space or be all spaces *Must not be all zeros.
   * @return carRentalReturnStateProvince
   */
  @javax.annotation.Nullable
  public String getCarRentalReturnStateProvince() {
    return carRentalReturnStateProvince;
  }

  public void setCarRentalReturnStateProvince(String carRentalReturnStateProvince) {
    this.carRentalReturnStateProvince = carRentalReturnStateProvince;
  }


  public AdditionalDataCarRental carRentalTaxExemptIndicator(String carRentalTaxExemptIndicator) {
    this.carRentalTaxExemptIndicator = carRentalTaxExemptIndicator;
    return this;
  }

  /**
   * Indicates if the goods or services were tax-exempt, or if tax was not paid on them.  Values: * Y - Goods or services were tax exempt * N - Tax was not collected
   * @return carRentalTaxExemptIndicator
   */
  @javax.annotation.Nullable
  public String getCarRentalTaxExemptIndicator() {
    return carRentalTaxExemptIndicator;
  }

  public void setCarRentalTaxExemptIndicator(String carRentalTaxExemptIndicator) {
    this.carRentalTaxExemptIndicator = carRentalTaxExemptIndicator;
  }


  public AdditionalDataCarRental travelEntertainmentAuthDataDuration(String travelEntertainmentAuthDataDuration) {
    this.travelEntertainmentAuthDataDuration = travelEntertainmentAuthDataDuration;
    return this;
  }

  /**
   * Number of days the car is rented for. This should be included in the auth message. * Format: Numeric * maxLength: 4
   * @return travelEntertainmentAuthDataDuration
   */
  @javax.annotation.Nullable
  public String getTravelEntertainmentAuthDataDuration() {
    return travelEntertainmentAuthDataDuration;
  }

  public void setTravelEntertainmentAuthDataDuration(String travelEntertainmentAuthDataDuration) {
    this.travelEntertainmentAuthDataDuration = travelEntertainmentAuthDataDuration;
  }


  public AdditionalDataCarRental travelEntertainmentAuthDataMarket(String travelEntertainmentAuthDataMarket) {
    this.travelEntertainmentAuthDataMarket = travelEntertainmentAuthDataMarket;
    return this;
  }

  /**
   * Indicates what market-specific dataset will be submitted or is being submitted. Value should be &#39;A&#39; for car rental. This should be included in the auth message. * Format: Alphanumeric * maxLength: 1
   * @return travelEntertainmentAuthDataMarket
   */
  @javax.annotation.Nullable
  public String getTravelEntertainmentAuthDataMarket() {
    return travelEntertainmentAuthDataMarket;
  }

  public void setTravelEntertainmentAuthDataMarket(String travelEntertainmentAuthDataMarket) {
    this.travelEntertainmentAuthDataMarket = travelEntertainmentAuthDataMarket;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AdditionalDataCarRental additionalDataCarRental = (AdditionalDataCarRental) o;
    return Objects.equals(this.carRentalCheckOutDate, additionalDataCarRental.carRentalCheckOutDate) &&
        Objects.equals(this.carRentalCustomerServiceTollFreeNumber, additionalDataCarRental.carRentalCustomerServiceTollFreeNumber) &&
        Objects.equals(this.carRentalDaysRented, additionalDataCarRental.carRentalDaysRented) &&
        Objects.equals(this.carRentalFuelCharges, additionalDataCarRental.carRentalFuelCharges) &&
        Objects.equals(this.carRentalInsuranceCharges, additionalDataCarRental.carRentalInsuranceCharges) &&
        Objects.equals(this.carRentalLocationCity, additionalDataCarRental.carRentalLocationCity) &&
        Objects.equals(this.carRentalLocationCountry, additionalDataCarRental.carRentalLocationCountry) &&
        Objects.equals(this.carRentalLocationStateProvince, additionalDataCarRental.carRentalLocationStateProvince) &&
        Objects.equals(this.carRentalNoShowIndicator, additionalDataCarRental.carRentalNoShowIndicator) &&
        Objects.equals(this.carRentalOneWayDropOffCharges, additionalDataCarRental.carRentalOneWayDropOffCharges) &&
        Objects.equals(this.carRentalRate, additionalDataCarRental.carRentalRate) &&
        Objects.equals(this.carRentalRateIndicator, additionalDataCarRental.carRentalRateIndicator) &&
        Objects.equals(this.carRentalRentalAgreementNumber, additionalDataCarRental.carRentalRentalAgreementNumber) &&
        Objects.equals(this.carRentalRentalClassId, additionalDataCarRental.carRentalRentalClassId) &&
        Objects.equals(this.carRentalRenterName, additionalDataCarRental.carRentalRenterName) &&
        Objects.equals(this.carRentalReturnCity, additionalDataCarRental.carRentalReturnCity) &&
        Objects.equals(this.carRentalReturnCountry, additionalDataCarRental.carRentalReturnCountry) &&
        Objects.equals(this.carRentalReturnDate, additionalDataCarRental.carRentalReturnDate) &&
        Objects.equals(this.carRentalReturnLocationId, additionalDataCarRental.carRentalReturnLocationId) &&
        Objects.equals(this.carRentalReturnStateProvince, additionalDataCarRental.carRentalReturnStateProvince) &&
        Objects.equals(this.carRentalTaxExemptIndicator, additionalDataCarRental.carRentalTaxExemptIndicator) &&
        Objects.equals(this.travelEntertainmentAuthDataDuration, additionalDataCarRental.travelEntertainmentAuthDataDuration) &&
        Objects.equals(this.travelEntertainmentAuthDataMarket, additionalDataCarRental.travelEntertainmentAuthDataMarket);
  }

  @Override
  public int hashCode() {
    return Objects.hash(carRentalCheckOutDate, carRentalCustomerServiceTollFreeNumber, carRentalDaysRented, carRentalFuelCharges, carRentalInsuranceCharges, carRentalLocationCity, carRentalLocationCountry, carRentalLocationStateProvince, carRentalNoShowIndicator, carRentalOneWayDropOffCharges, carRentalRate, carRentalRateIndicator, carRentalRentalAgreementNumber, carRentalRentalClassId, carRentalRenterName, carRentalReturnCity, carRentalReturnCountry, carRentalReturnDate, carRentalReturnLocationId, carRentalReturnStateProvince, carRentalTaxExemptIndicator, travelEntertainmentAuthDataDuration, travelEntertainmentAuthDataMarket);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AdditionalDataCarRental {\n");
    sb.append("    carRentalCheckOutDate: ").append(toIndentedString(carRentalCheckOutDate)).append("\n");
    sb.append("    carRentalCustomerServiceTollFreeNumber: ").append(toIndentedString(carRentalCustomerServiceTollFreeNumber)).append("\n");
    sb.append("    carRentalDaysRented: ").append(toIndentedString(carRentalDaysRented)).append("\n");
    sb.append("    carRentalFuelCharges: ").append(toIndentedString(carRentalFuelCharges)).append("\n");
    sb.append("    carRentalInsuranceCharges: ").append(toIndentedString(carRentalInsuranceCharges)).append("\n");
    sb.append("    carRentalLocationCity: ").append(toIndentedString(carRentalLocationCity)).append("\n");
    sb.append("    carRentalLocationCountry: ").append(toIndentedString(carRentalLocationCountry)).append("\n");
    sb.append("    carRentalLocationStateProvince: ").append(toIndentedString(carRentalLocationStateProvince)).append("\n");
    sb.append("    carRentalNoShowIndicator: ").append(toIndentedString(carRentalNoShowIndicator)).append("\n");
    sb.append("    carRentalOneWayDropOffCharges: ").append(toIndentedString(carRentalOneWayDropOffCharges)).append("\n");
    sb.append("    carRentalRate: ").append(toIndentedString(carRentalRate)).append("\n");
    sb.append("    carRentalRateIndicator: ").append(toIndentedString(carRentalRateIndicator)).append("\n");
    sb.append("    carRentalRentalAgreementNumber: ").append(toIndentedString(carRentalRentalAgreementNumber)).append("\n");
    sb.append("    carRentalRentalClassId: ").append(toIndentedString(carRentalRentalClassId)).append("\n");
    sb.append("    carRentalRenterName: ").append(toIndentedString(carRentalRenterName)).append("\n");
    sb.append("    carRentalReturnCity: ").append(toIndentedString(carRentalReturnCity)).append("\n");
    sb.append("    carRentalReturnCountry: ").append(toIndentedString(carRentalReturnCountry)).append("\n");
    sb.append("    carRentalReturnDate: ").append(toIndentedString(carRentalReturnDate)).append("\n");
    sb.append("    carRentalReturnLocationId: ").append(toIndentedString(carRentalReturnLocationId)).append("\n");
    sb.append("    carRentalReturnStateProvince: ").append(toIndentedString(carRentalReturnStateProvince)).append("\n");
    sb.append("    carRentalTaxExemptIndicator: ").append(toIndentedString(carRentalTaxExemptIndicator)).append("\n");
    sb.append("    travelEntertainmentAuthDataDuration: ").append(toIndentedString(travelEntertainmentAuthDataDuration)).append("\n");
    sb.append("    travelEntertainmentAuthDataMarket: ").append(toIndentedString(travelEntertainmentAuthDataMarket)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("carRental.checkOutDate");
    openapiFields.add("carRental.customerServiceTollFreeNumber");
    openapiFields.add("carRental.daysRented");
    openapiFields.add("carRental.fuelCharges");
    openapiFields.add("carRental.insuranceCharges");
    openapiFields.add("carRental.locationCity");
    openapiFields.add("carRental.locationCountry");
    openapiFields.add("carRental.locationStateProvince");
    openapiFields.add("carRental.noShowIndicator");
    openapiFields.add("carRental.oneWayDropOffCharges");
    openapiFields.add("carRental.rate");
    openapiFields.add("carRental.rateIndicator");
    openapiFields.add("carRental.rentalAgreementNumber");
    openapiFields.add("carRental.rentalClassId");
    openapiFields.add("carRental.renterName");
    openapiFields.add("carRental.returnCity");
    openapiFields.add("carRental.returnCountry");
    openapiFields.add("carRental.returnDate");
    openapiFields.add("carRental.returnLocationId");
    openapiFields.add("carRental.returnStateProvince");
    openapiFields.add("carRental.taxExemptIndicator");
    openapiFields.add("travelEntertainmentAuthData.duration");
    openapiFields.add("travelEntertainmentAuthData.market");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AdditionalDataCarRental
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AdditionalDataCarRental.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AdditionalDataCarRental is not found in the empty JSON string", AdditionalDataCarRental.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AdditionalDataCarRental.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AdditionalDataCarRental` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("carRental.checkOutDate") != null && !jsonObj.get("carRental.checkOutDate").isJsonNull()) && !jsonObj.get("carRental.checkOutDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `carRental.checkOutDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("carRental.checkOutDate").toString()));
      }
      if ((jsonObj.get("carRental.customerServiceTollFreeNumber") != null && !jsonObj.get("carRental.customerServiceTollFreeNumber").isJsonNull()) && !jsonObj.get("carRental.customerServiceTollFreeNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `carRental.customerServiceTollFreeNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("carRental.customerServiceTollFreeNumber").toString()));
      }
      if ((jsonObj.get("carRental.daysRented") != null && !jsonObj.get("carRental.daysRented").isJsonNull()) && !jsonObj.get("carRental.daysRented").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `carRental.daysRented` to be a primitive type in the JSON string but got `%s`", jsonObj.get("carRental.daysRented").toString()));
      }
      if ((jsonObj.get("carRental.fuelCharges") != null && !jsonObj.get("carRental.fuelCharges").isJsonNull()) && !jsonObj.get("carRental.fuelCharges").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `carRental.fuelCharges` to be a primitive type in the JSON string but got `%s`", jsonObj.get("carRental.fuelCharges").toString()));
      }
      if ((jsonObj.get("carRental.insuranceCharges") != null && !jsonObj.get("carRental.insuranceCharges").isJsonNull()) && !jsonObj.get("carRental.insuranceCharges").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `carRental.insuranceCharges` to be a primitive type in the JSON string but got `%s`", jsonObj.get("carRental.insuranceCharges").toString()));
      }
      if ((jsonObj.get("carRental.locationCity") != null && !jsonObj.get("carRental.locationCity").isJsonNull()) && !jsonObj.get("carRental.locationCity").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `carRental.locationCity` to be a primitive type in the JSON string but got `%s`", jsonObj.get("carRental.locationCity").toString()));
      }
      if ((jsonObj.get("carRental.locationCountry") != null && !jsonObj.get("carRental.locationCountry").isJsonNull()) && !jsonObj.get("carRental.locationCountry").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `carRental.locationCountry` to be a primitive type in the JSON string but got `%s`", jsonObj.get("carRental.locationCountry").toString()));
      }
      if ((jsonObj.get("carRental.locationStateProvince") != null && !jsonObj.get("carRental.locationStateProvince").isJsonNull()) && !jsonObj.get("carRental.locationStateProvince").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `carRental.locationStateProvince` to be a primitive type in the JSON string but got `%s`", jsonObj.get("carRental.locationStateProvince").toString()));
      }
      if ((jsonObj.get("carRental.noShowIndicator") != null && !jsonObj.get("carRental.noShowIndicator").isJsonNull()) && !jsonObj.get("carRental.noShowIndicator").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `carRental.noShowIndicator` to be a primitive type in the JSON string but got `%s`", jsonObj.get("carRental.noShowIndicator").toString()));
      }
      if ((jsonObj.get("carRental.oneWayDropOffCharges") != null && !jsonObj.get("carRental.oneWayDropOffCharges").isJsonNull()) && !jsonObj.get("carRental.oneWayDropOffCharges").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `carRental.oneWayDropOffCharges` to be a primitive type in the JSON string but got `%s`", jsonObj.get("carRental.oneWayDropOffCharges").toString()));
      }
      if ((jsonObj.get("carRental.rate") != null && !jsonObj.get("carRental.rate").isJsonNull()) && !jsonObj.get("carRental.rate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `carRental.rate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("carRental.rate").toString()));
      }
      if ((jsonObj.get("carRental.rateIndicator") != null && !jsonObj.get("carRental.rateIndicator").isJsonNull()) && !jsonObj.get("carRental.rateIndicator").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `carRental.rateIndicator` to be a primitive type in the JSON string but got `%s`", jsonObj.get("carRental.rateIndicator").toString()));
      }
      if ((jsonObj.get("carRental.rentalAgreementNumber") != null && !jsonObj.get("carRental.rentalAgreementNumber").isJsonNull()) && !jsonObj.get("carRental.rentalAgreementNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `carRental.rentalAgreementNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("carRental.rentalAgreementNumber").toString()));
      }
      if ((jsonObj.get("carRental.rentalClassId") != null && !jsonObj.get("carRental.rentalClassId").isJsonNull()) && !jsonObj.get("carRental.rentalClassId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `carRental.rentalClassId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("carRental.rentalClassId").toString()));
      }
      if ((jsonObj.get("carRental.renterName") != null && !jsonObj.get("carRental.renterName").isJsonNull()) && !jsonObj.get("carRental.renterName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `carRental.renterName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("carRental.renterName").toString()));
      }
      if ((jsonObj.get("carRental.returnCity") != null && !jsonObj.get("carRental.returnCity").isJsonNull()) && !jsonObj.get("carRental.returnCity").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `carRental.returnCity` to be a primitive type in the JSON string but got `%s`", jsonObj.get("carRental.returnCity").toString()));
      }
      if ((jsonObj.get("carRental.returnCountry") != null && !jsonObj.get("carRental.returnCountry").isJsonNull()) && !jsonObj.get("carRental.returnCountry").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `carRental.returnCountry` to be a primitive type in the JSON string but got `%s`", jsonObj.get("carRental.returnCountry").toString()));
      }
      if ((jsonObj.get("carRental.returnDate") != null && !jsonObj.get("carRental.returnDate").isJsonNull()) && !jsonObj.get("carRental.returnDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `carRental.returnDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("carRental.returnDate").toString()));
      }
      if ((jsonObj.get("carRental.returnLocationId") != null && !jsonObj.get("carRental.returnLocationId").isJsonNull()) && !jsonObj.get("carRental.returnLocationId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `carRental.returnLocationId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("carRental.returnLocationId").toString()));
      }
      if ((jsonObj.get("carRental.returnStateProvince") != null && !jsonObj.get("carRental.returnStateProvince").isJsonNull()) && !jsonObj.get("carRental.returnStateProvince").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `carRental.returnStateProvince` to be a primitive type in the JSON string but got `%s`", jsonObj.get("carRental.returnStateProvince").toString()));
      }
      if ((jsonObj.get("carRental.taxExemptIndicator") != null && !jsonObj.get("carRental.taxExemptIndicator").isJsonNull()) && !jsonObj.get("carRental.taxExemptIndicator").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `carRental.taxExemptIndicator` to be a primitive type in the JSON string but got `%s`", jsonObj.get("carRental.taxExemptIndicator").toString()));
      }
      if ((jsonObj.get("travelEntertainmentAuthData.duration") != null && !jsonObj.get("travelEntertainmentAuthData.duration").isJsonNull()) && !jsonObj.get("travelEntertainmentAuthData.duration").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `travelEntertainmentAuthData.duration` to be a primitive type in the JSON string but got `%s`", jsonObj.get("travelEntertainmentAuthData.duration").toString()));
      }
      if ((jsonObj.get("travelEntertainmentAuthData.market") != null && !jsonObj.get("travelEntertainmentAuthData.market").isJsonNull()) && !jsonObj.get("travelEntertainmentAuthData.market").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `travelEntertainmentAuthData.market` to be a primitive type in the JSON string but got `%s`", jsonObj.get("travelEntertainmentAuthData.market").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AdditionalDataCarRental.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AdditionalDataCarRental' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AdditionalDataCarRental> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AdditionalDataCarRental.class));

       return (TypeAdapter<T>) new TypeAdapter<AdditionalDataCarRental>() {
           @Override
           public void write(JsonWriter out, AdditionalDataCarRental value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AdditionalDataCarRental read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AdditionalDataCarRental given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AdditionalDataCarRental
   * @throws IOException if the JSON string is invalid with respect to AdditionalDataCarRental
   */
  public static AdditionalDataCarRental fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AdditionalDataCarRental.class);
  }

  /**
   * Convert an instance of AdditionalDataCarRental to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

