/**
 * Adyen Checkout API
 * Adyen Checkout API provides a simple and flexible way to initiate and authorise online payments. You can use the same integration for payments made with cards (including 3D Secure), mobile wallets, and local payment methods (for example, iDEAL and Sofort).  This API reference provides information on available endpoints and how to interact with them. To learn more about the API, visit [online payments documentation](https://docs.adyen.com/online-payments).  ## Authentication Each request to Checkout API must be signed with an API key. For this, [get your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) from your Customer Area, and set this key to the `X-API-Key` header value, for example:  ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ``` ## Versioning Checkout API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://checkout-test.adyen.com/v70/payments ```  ## Going live  To access the live endpoints, you need an API key from your live Customer Area.  The live endpoint URLs contain a prefix which is unique to your company account, for example: ``` https://{PREFIX}-checkout-live.adyenpayments.com/checkout/v70/payments ```  Get your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.  When preparing to do live transactions with Checkout API, follow the [go-live checklist](https://docs.adyen.com/online-payments/go-live-checklist) to make sure you've got all the required configuration in place.  ## Release notes Have a look at the [release notes](https://docs.adyen.com/online-payments/release-notes?integration_type=api&version=70) to find out what changed in this version!
 *
 * The version of the OpenAPI document: 70
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIConfiguration.h
 *
 * 
 */

#ifndef OAIConfiguration_H
#define OAIConfiguration_H

#include <QJsonObject>

#include "OAIAvs.h"
#include "OAIInstallmentsNumber.h"
#include "OAIShopperInput.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAvs;
class OAIInstallmentsNumber;
class OAIShopperInput;

class OAIConfiguration : public OAIObject {
public:
    OAIConfiguration();
    OAIConfiguration(QString json);
    ~OAIConfiguration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAvs getAvs() const;
    void setAvs(const OAIAvs &avs);
    bool is_avs_Set() const;
    bool is_avs_Valid() const;

    QString getCardHolderName() const;
    void setCardHolderName(const QString &card_holder_name);
    bool is_card_holder_name_Set() const;
    bool is_card_holder_name_Valid() const;

    OAIInstallmentsNumber getInstallments() const;
    void setInstallments(const OAIInstallmentsNumber &installments);
    bool is_installments_Set() const;
    bool is_installments_Valid() const;

    OAIShopperInput getShopperInput() const;
    void setShopperInput(const OAIShopperInput &shopper_input);
    bool is_shopper_input_Set() const;
    bool is_shopper_input_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAvs m_avs;
    bool m_avs_isSet;
    bool m_avs_isValid;

    QString m_card_holder_name;
    bool m_card_holder_name_isSet;
    bool m_card_holder_name_isValid;

    OAIInstallmentsNumber m_installments;
    bool m_installments_isSet;
    bool m_installments_isValid;

    OAIShopperInput m_shopper_input;
    bool m_shopper_input_isSet;
    bool m_shopper_input_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIConfiguration)

#endif // OAIConfiguration_H
