/**
 * Adyen Checkout API
 * Adyen Checkout API provides a simple and flexible way to initiate and authorise online payments. You can use the same integration for payments made with cards (including 3D Secure), mobile wallets, and local payment methods (for example, iDEAL and Sofort).  This API reference provides information on available endpoints and how to interact with them. To learn more about the API, visit [online payments documentation](https://docs.adyen.com/online-payments).  ## Authentication Each request to Checkout API must be signed with an API key. For this, [get your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) from your Customer Area, and set this key to the `X-API-Key` header value, for example:  ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ``` ## Versioning Checkout API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://checkout-test.adyen.com/v70/payments ```  ## Going live  To access the live endpoints, you need an API key from your live Customer Area.  The live endpoint URLs contain a prefix which is unique to your company account, for example: ``` https://{PREFIX}-checkout-live.adyenpayments.com/checkout/v70/payments ```  Get your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.  When preparing to do live transactions with Checkout API, follow the [go-live checklist](https://docs.adyen.com/online-payments/go-live-checklist) to make sure you've got all the required configuration in place.  ## Release notes Have a look at the [release notes](https://docs.adyen.com/online-payments/release-notes?integration_type=api&version=70) to find out what changed in this version!
 *
 * The version of the OpenAPI document: 70
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVisaCheckoutDetails.h
 *
 * 
 */

#ifndef OAIVisaCheckoutDetails_H
#define OAIVisaCheckoutDetails_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIVisaCheckoutDetails : public OAIObject {
public:
    OAIVisaCheckoutDetails();
    OAIVisaCheckoutDetails(QString json);
    ~OAIVisaCheckoutDetails() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCheckoutAttemptId() const;
    void setCheckoutAttemptId(const QString &checkout_attempt_id);
    bool is_checkout_attempt_id_Set() const;
    bool is_checkout_attempt_id_Valid() const;

    QString getFundingSource() const;
    void setFundingSource(const QString &funding_source);
    bool is_funding_source_Set() const;
    bool is_funding_source_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getVisaCheckoutCallId() const;
    void setVisaCheckoutCallId(const QString &visa_checkout_call_id);
    bool is_visa_checkout_call_id_Set() const;
    bool is_visa_checkout_call_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_checkout_attempt_id;
    bool m_checkout_attempt_id_isSet;
    bool m_checkout_attempt_id_isValid;

    QString m_funding_source;
    bool m_funding_source_isSet;
    bool m_funding_source_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_visa_checkout_call_id;
    bool m_visa_checkout_call_id_isSet;
    bool m_visa_checkout_call_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVisaCheckoutDetails)

#endif // OAIVisaCheckoutDetails_H
