# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class WeChatPayDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, checkout_attempt_id: str=None, type: str='wechatpay'):
        """WeChatPayDetails - a model defined in OpenAPI

        :param checkout_attempt_id: The checkout_attempt_id of this WeChatPayDetails.
        :param type: The type of this WeChatPayDetails.
        """
        self.openapi_types = {
            'checkout_attempt_id': str,
            'type': str
        }

        self.attribute_map = {
            'checkout_attempt_id': 'checkoutAttemptId',
            'type': 'type'
        }

        self._checkout_attempt_id = checkout_attempt_id
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'WeChatPayDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The WeChatPayDetails of this WeChatPayDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def checkout_attempt_id(self):
        """Gets the checkout_attempt_id of this WeChatPayDetails.

        The checkout attempt identifier.

        :return: The checkout_attempt_id of this WeChatPayDetails.
        :rtype: str
        """
        return self._checkout_attempt_id

    @checkout_attempt_id.setter
    def checkout_attempt_id(self, checkout_attempt_id):
        """Sets the checkout_attempt_id of this WeChatPayDetails.

        The checkout attempt identifier.

        :param checkout_attempt_id: The checkout_attempt_id of this WeChatPayDetails.
        :type checkout_attempt_id: str
        """

        self._checkout_attempt_id = checkout_attempt_id

    @property
    def type(self):
        """Gets the type of this WeChatPayDetails.

        **wechatpay**

        :return: The type of this WeChatPayDetails.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this WeChatPayDetails.

        **wechatpay**

        :param type: The type of this WeChatPayDetails.
        :type type: str
        """
        allowed_values = ["wechatpay", "wechatpay_pos"]  # noqa: E501
        if type not in allowed_values:
            raise ValueError(
                "Invalid value for `type` ({0}), must be one of {1}"
                .format(type, allowed_values)
            )

        self._type = type
