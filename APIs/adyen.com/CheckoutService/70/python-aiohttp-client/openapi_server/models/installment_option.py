# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class InstallmentOption(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, max_value: int=None, plans: List[str]=None, preselected_value: int=None, values: List[int]=None):
        """InstallmentOption - a model defined in OpenAPI

        :param max_value: The max_value of this InstallmentOption.
        :param plans: The plans of this InstallmentOption.
        :param preselected_value: The preselected_value of this InstallmentOption.
        :param values: The values of this InstallmentOption.
        """
        self.openapi_types = {
            'max_value': int,
            'plans': List[str],
            'preselected_value': int,
            'values': List[int]
        }

        self.attribute_map = {
            'max_value': 'maxValue',
            'plans': 'plans',
            'preselected_value': 'preselectedValue',
            'values': 'values'
        }

        self._max_value = max_value
        self._plans = plans
        self._preselected_value = preselected_value
        self._values = values

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InstallmentOption':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The InstallmentOption of this InstallmentOption.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def max_value(self):
        """Gets the max_value of this InstallmentOption.

        The maximum number of installments offered for this payment method.

        :return: The max_value of this InstallmentOption.
        :rtype: int
        """
        return self._max_value

    @max_value.setter
    def max_value(self, max_value):
        """Sets the max_value of this InstallmentOption.

        The maximum number of installments offered for this payment method.

        :param max_value: The max_value of this InstallmentOption.
        :type max_value: int
        """

        self._max_value = max_value

    @property
    def plans(self):
        """Gets the plans of this InstallmentOption.

        Defines the type of installment plan. If not set, defaults to **regular**.  Possible values: * **regular** * **revolving**

        :return: The plans of this InstallmentOption.
        :rtype: List[str]
        """
        return self._plans

    @plans.setter
    def plans(self, plans):
        """Sets the plans of this InstallmentOption.

        Defines the type of installment plan. If not set, defaults to **regular**.  Possible values: * **regular** * **revolving**

        :param plans: The plans of this InstallmentOption.
        :type plans: List[str]
        """
        allowed_values = ["regular", "revolving"]  # noqa: E501
        if not set(plans).issubset(set(allowed_values)):
            raise ValueError(
                "Invalid values for `plans` [{0}], must be a subset of [{1}]"
                .format(", ".join(map(str, set(plans) - set(allowed_values))),
                        ", ".join(map(str, allowed_values)))
            )

        self._plans = plans

    @property
    def preselected_value(self):
        """Gets the preselected_value of this InstallmentOption.

        Preselected number of installments offered for this payment method.

        :return: The preselected_value of this InstallmentOption.
        :rtype: int
        """
        return self._preselected_value

    @preselected_value.setter
    def preselected_value(self, preselected_value):
        """Sets the preselected_value of this InstallmentOption.

        Preselected number of installments offered for this payment method.

        :param preselected_value: The preselected_value of this InstallmentOption.
        :type preselected_value: int
        """

        self._preselected_value = preselected_value

    @property
    def values(self):
        """Gets the values of this InstallmentOption.

        An array of the number of installments that the shopper can choose from. For example, **[2,3,5]**. This cannot be specified simultaneously with `maxValue`.

        :return: The values of this InstallmentOption.
        :rtype: List[int]
        """
        return self._values

    @values.setter
    def values(self, values):
        """Sets the values of this InstallmentOption.

        An array of the number of installments that the shopper can choose from. For example, **[2,3,5]**. This cannot be specified simultaneously with `maxValue`.

        :param values: The values of this InstallmentOption.
        :type values: List[int]
        """

        self._values = values
