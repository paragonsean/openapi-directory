/**
 * Adyen Checkout API
 * Adyen Checkout API provides a simple and flexible way to initiate and authorise online payments. You can use the same integration for payments made with cards (including 3D Secure), mobile wallets, and local payment methods (for example, iDEAL and Sofort).  This API reference provides information on available endpoints and how to interact with them. To learn more about the API, visit [online payments documentation](https://docs.adyen.com/online-payments).  ## Authentication Each request to Checkout API must be signed with an API key. For this, [get your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) from your Customer Area, and set this key to the `X-API-Key` header value, for example:  ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ``` ## Versioning Checkout API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://checkout-test.adyen.com/v66/payments ```  ## Going live  To access the live endpoints, you need an API key from your live Customer Area.  The live endpoint URLs contain a prefix which is unique to your company account, for example: ``` https://{PREFIX}-checkout-live.adyenpayments.com/checkout/v66/payments ```  Get your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.  When preparing to do live transactions with Checkout API, follow the [go-live checklist](https://docs.adyen.com/online-payments/go-live-checklist) to make sure you've got all the required configuration in place.  ## Release notes Have a look at the [release notes](https://docs.adyen.com/online-payments/release-notes?integration_type=api&version=66) to find out what changed in this version!
 *
 * The version of the OpenAPI document: 66
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILineItem.h
 *
 * 
 */

#ifndef OAILineItem_H
#define OAILineItem_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAILineItem : public OAIObject {
public:
    OAILineItem();
    OAILineItem(QString json);
    ~OAILineItem() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint64 getAmountExcludingTax() const;
    void setAmountExcludingTax(const qint64 &amount_excluding_tax);
    bool is_amount_excluding_tax_Set() const;
    bool is_amount_excluding_tax_Valid() const;

    qint64 getAmountIncludingTax() const;
    void setAmountIncludingTax(const qint64 &amount_including_tax);
    bool is_amount_including_tax_Set() const;
    bool is_amount_including_tax_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getImageUrl() const;
    void setImageUrl(const QString &image_url);
    bool is_image_url_Set() const;
    bool is_image_url_Valid() const;

    QString getItemCategory() const;
    void setItemCategory(const QString &item_category);
    bool is_item_category_Set() const;
    bool is_item_category_Valid() const;

    QString getProductUrl() const;
    void setProductUrl(const QString &product_url);
    bool is_product_url_Set() const;
    bool is_product_url_Valid() const;

    qint64 getQuantity() const;
    void setQuantity(const qint64 &quantity);
    bool is_quantity_Set() const;
    bool is_quantity_Valid() const;

    qint64 getTaxAmount() const;
    void setTaxAmount(const qint64 &tax_amount);
    bool is_tax_amount_Set() const;
    bool is_tax_amount_Valid() const;

    qint64 getTaxPercentage() const;
    void setTaxPercentage(const qint64 &tax_percentage);
    bool is_tax_percentage_Set() const;
    bool is_tax_percentage_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint64 m_amount_excluding_tax;
    bool m_amount_excluding_tax_isSet;
    bool m_amount_excluding_tax_isValid;

    qint64 m_amount_including_tax;
    bool m_amount_including_tax_isSet;
    bool m_amount_including_tax_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_image_url;
    bool m_image_url_isSet;
    bool m_image_url_isValid;

    QString m_item_category;
    bool m_item_category_isSet;
    bool m_item_category_isValid;

    QString m_product_url;
    bool m_product_url_isSet;
    bool m_product_url_isValid;

    qint64 m_quantity;
    bool m_quantity_isSet;
    bool m_quantity_isValid;

    qint64 m_tax_amount;
    bool m_tax_amount_isSet;
    bool m_tax_amount_isValid;

    qint64 m_tax_percentage;
    bool m_tax_percentage_isSet;
    bool m_tax_percentage_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILineItem)

#endif // OAILineItem_H
