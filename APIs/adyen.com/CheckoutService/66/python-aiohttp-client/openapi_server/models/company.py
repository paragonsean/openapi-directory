# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Company(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, homepage: str=None, name: str=None, registration_number: str=None, registry_location: str=None, tax_id: str=None, type: str=None):
        """Company - a model defined in OpenAPI

        :param homepage: The homepage of this Company.
        :param name: The name of this Company.
        :param registration_number: The registration_number of this Company.
        :param registry_location: The registry_location of this Company.
        :param tax_id: The tax_id of this Company.
        :param type: The type of this Company.
        """
        self.openapi_types = {
            'homepage': str,
            'name': str,
            'registration_number': str,
            'registry_location': str,
            'tax_id': str,
            'type': str
        }

        self.attribute_map = {
            'homepage': 'homepage',
            'name': 'name',
            'registration_number': 'registrationNumber',
            'registry_location': 'registryLocation',
            'tax_id': 'taxId',
            'type': 'type'
        }

        self._homepage = homepage
        self._name = name
        self._registration_number = registration_number
        self._registry_location = registry_location
        self._tax_id = tax_id
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Company':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Company of this Company.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def homepage(self):
        """Gets the homepage of this Company.

        The company website's home page.

        :return: The homepage of this Company.
        :rtype: str
        """
        return self._homepage

    @homepage.setter
    def homepage(self, homepage):
        """Sets the homepage of this Company.

        The company website's home page.

        :param homepage: The homepage of this Company.
        :type homepage: str
        """

        self._homepage = homepage

    @property
    def name(self):
        """Gets the name of this Company.

        The company name.

        :return: The name of this Company.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Company.

        The company name.

        :param name: The name of this Company.
        :type name: str
        """

        self._name = name

    @property
    def registration_number(self):
        """Gets the registration_number of this Company.

        Registration number of the company.

        :return: The registration_number of this Company.
        :rtype: str
        """
        return self._registration_number

    @registration_number.setter
    def registration_number(self, registration_number):
        """Sets the registration_number of this Company.

        Registration number of the company.

        :param registration_number: The registration_number of this Company.
        :type registration_number: str
        """

        self._registration_number = registration_number

    @property
    def registry_location(self):
        """Gets the registry_location of this Company.

        Registry location of the company.

        :return: The registry_location of this Company.
        :rtype: str
        """
        return self._registry_location

    @registry_location.setter
    def registry_location(self, registry_location):
        """Sets the registry_location of this Company.

        Registry location of the company.

        :param registry_location: The registry_location of this Company.
        :type registry_location: str
        """

        self._registry_location = registry_location

    @property
    def tax_id(self):
        """Gets the tax_id of this Company.

        Tax ID of the company.

        :return: The tax_id of this Company.
        :rtype: str
        """
        return self._tax_id

    @tax_id.setter
    def tax_id(self, tax_id):
        """Sets the tax_id of this Company.

        Tax ID of the company.

        :param tax_id: The tax_id of this Company.
        :type tax_id: str
        """

        self._tax_id = tax_id

    @property
    def type(self):
        """Gets the type of this Company.

        The company type.

        :return: The type of this Company.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this Company.

        The company type.

        :param type: The type of this Company.
        :type type: str
        """

        self._type = type
