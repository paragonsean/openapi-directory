# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.bank_account import BankAccount
from openapi_server.models.card import Card
from openapi_server import util


class StoredDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bank: BankAccount=None, card: Card=None, email_address: str=None):
        """StoredDetails - a model defined in OpenAPI

        :param bank: The bank of this StoredDetails.
        :param card: The card of this StoredDetails.
        :param email_address: The email_address of this StoredDetails.
        """
        self.openapi_types = {
            'bank': BankAccount,
            'card': Card,
            'email_address': str
        }

        self.attribute_map = {
            'bank': 'bank',
            'card': 'card',
            'email_address': 'emailAddress'
        }

        self._bank = bank
        self._card = card
        self._email_address = email_address

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StoredDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StoredDetails of this StoredDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bank(self):
        """Gets the bank of this StoredDetails.

        The stored bank account.

        :return: The bank of this StoredDetails.
        :rtype: BankAccount
        """
        return self._bank

    @bank.setter
    def bank(self, bank):
        """Sets the bank of this StoredDetails.

        The stored bank account.

        :param bank: The bank of this StoredDetails.
        :type bank: BankAccount
        """

        self._bank = bank

    @property
    def card(self):
        """Gets the card of this StoredDetails.

        The stored card information.

        :return: The card of this StoredDetails.
        :rtype: Card
        """
        return self._card

    @card.setter
    def card(self, card):
        """Sets the card of this StoredDetails.

        The stored card information.

        :param card: The card of this StoredDetails.
        :type card: Card
        """

        self._card = card

    @property
    def email_address(self):
        """Gets the email_address of this StoredDetails.

        The email associated with stored payment details.

        :return: The email_address of this StoredDetails.
        :rtype: str
        """
        return self._email_address

    @email_address.setter
    def email_address(self, email_address):
        """Sets the email_address of this StoredDetails.

        The email associated with stored payment details.

        :param email_address: The email_address of this StoredDetails.
        :type email_address: str
        """

        self._email_address = email_address
