# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.avs import Avs
from openapi_server.models.installments_number import InstallmentsNumber
from openapi_server.models.shopper_input import ShopperInput
from openapi_server import util


class Configuration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, avs: Avs=None, card_holder_name: str=None, installments: InstallmentsNumber=None, shopper_input: ShopperInput=None):
        """Configuration - a model defined in OpenAPI

        :param avs: The avs of this Configuration.
        :param card_holder_name: The card_holder_name of this Configuration.
        :param installments: The installments of this Configuration.
        :param shopper_input: The shopper_input of this Configuration.
        """
        self.openapi_types = {
            'avs': Avs,
            'card_holder_name': str,
            'installments': InstallmentsNumber,
            'shopper_input': ShopperInput
        }

        self.attribute_map = {
            'avs': 'avs',
            'card_holder_name': 'cardHolderName',
            'installments': 'installments',
            'shopper_input': 'shopperInput'
        }

        self._avs = avs
        self._card_holder_name = card_holder_name
        self._installments = installments
        self._shopper_input = shopper_input

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Configuration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Configuration of this Configuration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def avs(self):
        """Gets the avs of this Configuration.

        Describes the configuration for AVS ([Address Verification System](https://en.wikipedia.org/wiki/Address_Verification_System)).

        :return: The avs of this Configuration.
        :rtype: Avs
        """
        return self._avs

    @avs.setter
    def avs(self, avs):
        """Sets the avs of this Configuration.

        Describes the configuration for AVS ([Address Verification System](https://en.wikipedia.org/wiki/Address_Verification_System)).

        :param avs: The avs of this Configuration.
        :type avs: Avs
        """

        self._avs = avs

    @property
    def card_holder_name(self):
        """Gets the card_holder_name of this Configuration.

        Determines whether the cardholder name should be provided or not.  Permitted values: * NONE * OPTIONAL * REQUIRED

        :return: The card_holder_name of this Configuration.
        :rtype: str
        """
        return self._card_holder_name

    @card_holder_name.setter
    def card_holder_name(self, card_holder_name):
        """Sets the card_holder_name of this Configuration.

        Determines whether the cardholder name should be provided or not.  Permitted values: * NONE * OPTIONAL * REQUIRED

        :param card_holder_name: The card_holder_name of this Configuration.
        :type card_holder_name: str
        """
        allowed_values = ["NONE", "OPTIONAL", "REQUIRED"]  # noqa: E501
        if card_holder_name not in allowed_values:
            raise ValueError(
                "Invalid value for `card_holder_name` ({0}), must be one of {1}"
                .format(card_holder_name, allowed_values)
            )

        self._card_holder_name = card_holder_name

    @property
    def installments(self):
        """Gets the installments of this Configuration.

        Describes the configuration for [installment payments](https://docs.adyen.com/payment-methods/cards/credit-card-installments).

        :return: The installments of this Configuration.
        :rtype: InstallmentsNumber
        """
        return self._installments

    @installments.setter
    def installments(self, installments):
        """Sets the installments of this Configuration.

        Describes the configuration for [installment payments](https://docs.adyen.com/payment-methods/cards/credit-card-installments).

        :param installments: The installments of this Configuration.
        :type installments: InstallmentsNumber
        """

        self._installments = installments

    @property
    def shopper_input(self):
        """Gets the shopper_input of this Configuration.

        Determines how to display the details fields.

        :return: The shopper_input of this Configuration.
        :rtype: ShopperInput
        """
        return self._shopper_input

    @shopper_input.setter
    def shopper_input(self, shopper_input):
        """Sets the shopper_input of this Configuration.

        Determines how to display the details fields.

        :param shopper_input: The shopper_input of this Configuration.
        :type shopper_input: ShopperInput
        """

        self._shopper_input = shopper_input
