/*
 * Adyen Checkout API
 * Adyen Checkout API provides a simple and flexible way to initiate and authorise online payments. You can use the same integration for payments made with cards (including 3D Secure), mobile wallets, and local payment methods (for example, iDEAL and Sofort).  This API reference provides information on available endpoints and how to interact with them. To learn more about the API, visit [online payments documentation](https://docs.adyen.com/online-payments).  ## Authentication Each request to Checkout API must be signed with an API key. For this, [get your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) from your Customer Area, and set this key to the `X-API-Key` header value, for example:  ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ``` ## Versioning Checkout API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://checkout-test.adyen.com/v52/payments ```  ## Going live  To access the live endpoints, you need an API key from your live Customer Area.  The live endpoint URLs contain a prefix which is unique to your company account, for example: ``` https://{PREFIX}-checkout-live.adyenpayments.com/checkout/v52/payments ```  Get your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.  When preparing to do live transactions with Checkout API, follow the [go-live checklist](https://docs.adyen.com/online-payments/go-live-checklist) to make sure you've got all the required configuration in place.  ## Release notes Have a look at the [release notes](https://docs.adyen.com/online-payments/release-notes?integration_type=api&version=52) to find out what changed in this version!
 *
 * The version of the OpenAPI document: 52
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.CommonField;
import org.openapitools.client.model.ExternalPlatform;
import org.openapitools.client.model.MerchantDevice;
import org.openapitools.client.model.ShopperInteractionDevice;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ApplicationInfo
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:16:20.558147-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ApplicationInfo {
  public static final String SERIALIZED_NAME_ADYEN_LIBRARY = "adyenLibrary";
  @SerializedName(SERIALIZED_NAME_ADYEN_LIBRARY)
  private CommonField adyenLibrary;

  public static final String SERIALIZED_NAME_ADYEN_PAYMENT_SOURCE = "adyenPaymentSource";
  @SerializedName(SERIALIZED_NAME_ADYEN_PAYMENT_SOURCE)
  private CommonField adyenPaymentSource;

  public static final String SERIALIZED_NAME_EXTERNAL_PLATFORM = "externalPlatform";
  @SerializedName(SERIALIZED_NAME_EXTERNAL_PLATFORM)
  private ExternalPlatform externalPlatform;

  public static final String SERIALIZED_NAME_MERCHANT_APPLICATION = "merchantApplication";
  @SerializedName(SERIALIZED_NAME_MERCHANT_APPLICATION)
  private CommonField merchantApplication;

  public static final String SERIALIZED_NAME_MERCHANT_DEVICE = "merchantDevice";
  @SerializedName(SERIALIZED_NAME_MERCHANT_DEVICE)
  private MerchantDevice merchantDevice;

  public static final String SERIALIZED_NAME_SHOPPER_INTERACTION_DEVICE = "shopperInteractionDevice";
  @SerializedName(SERIALIZED_NAME_SHOPPER_INTERACTION_DEVICE)
  private ShopperInteractionDevice shopperInteractionDevice;

  public ApplicationInfo() {
  }

  public ApplicationInfo adyenLibrary(CommonField adyenLibrary) {
    this.adyenLibrary = adyenLibrary;
    return this;
  }

  /**
   * Adyen-developed software, such as libraries and plugins, used to interact with the Adyen API. For example, Magento plugin, Java API library, etc.
   * @return adyenLibrary
   */
  @javax.annotation.Nullable
  public CommonField getAdyenLibrary() {
    return adyenLibrary;
  }

  public void setAdyenLibrary(CommonField adyenLibrary) {
    this.adyenLibrary = adyenLibrary;
  }


  public ApplicationInfo adyenPaymentSource(CommonField adyenPaymentSource) {
    this.adyenPaymentSource = adyenPaymentSource;
    return this;
  }

  /**
   * Adyen-developed software to get payment details. For example, Checkout SDK, Secured Fields SDK, etc.
   * @return adyenPaymentSource
   */
  @javax.annotation.Nullable
  public CommonField getAdyenPaymentSource() {
    return adyenPaymentSource;
  }

  public void setAdyenPaymentSource(CommonField adyenPaymentSource) {
    this.adyenPaymentSource = adyenPaymentSource;
  }


  public ApplicationInfo externalPlatform(ExternalPlatform externalPlatform) {
    this.externalPlatform = externalPlatform;
    return this;
  }

  /**
   * Third-party developed platform used to initiate payment requests. For example, Magento, Zuora, etc.
   * @return externalPlatform
   */
  @javax.annotation.Nullable
  public ExternalPlatform getExternalPlatform() {
    return externalPlatform;
  }

  public void setExternalPlatform(ExternalPlatform externalPlatform) {
    this.externalPlatform = externalPlatform;
  }


  public ApplicationInfo merchantApplication(CommonField merchantApplication) {
    this.merchantApplication = merchantApplication;
    return this;
  }

  /**
   * Merchant developed software, such as cashier application, used to interact with the Adyen API.
   * @return merchantApplication
   */
  @javax.annotation.Nullable
  public CommonField getMerchantApplication() {
    return merchantApplication;
  }

  public void setMerchantApplication(CommonField merchantApplication) {
    this.merchantApplication = merchantApplication;
  }


  public ApplicationInfo merchantDevice(MerchantDevice merchantDevice) {
    this.merchantDevice = merchantDevice;
    return this;
  }

  /**
   * Merchant device information.
   * @return merchantDevice
   */
  @javax.annotation.Nullable
  public MerchantDevice getMerchantDevice() {
    return merchantDevice;
  }

  public void setMerchantDevice(MerchantDevice merchantDevice) {
    this.merchantDevice = merchantDevice;
  }


  public ApplicationInfo shopperInteractionDevice(ShopperInteractionDevice shopperInteractionDevice) {
    this.shopperInteractionDevice = shopperInteractionDevice;
    return this;
  }

  /**
   * Shopper interaction device, such as terminal, mobile device or web browser, to initiate payment requests.
   * @return shopperInteractionDevice
   */
  @javax.annotation.Nullable
  public ShopperInteractionDevice getShopperInteractionDevice() {
    return shopperInteractionDevice;
  }

  public void setShopperInteractionDevice(ShopperInteractionDevice shopperInteractionDevice) {
    this.shopperInteractionDevice = shopperInteractionDevice;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApplicationInfo applicationInfo = (ApplicationInfo) o;
    return Objects.equals(this.adyenLibrary, applicationInfo.adyenLibrary) &&
        Objects.equals(this.adyenPaymentSource, applicationInfo.adyenPaymentSource) &&
        Objects.equals(this.externalPlatform, applicationInfo.externalPlatform) &&
        Objects.equals(this.merchantApplication, applicationInfo.merchantApplication) &&
        Objects.equals(this.merchantDevice, applicationInfo.merchantDevice) &&
        Objects.equals(this.shopperInteractionDevice, applicationInfo.shopperInteractionDevice);
  }

  @Override
  public int hashCode() {
    return Objects.hash(adyenLibrary, adyenPaymentSource, externalPlatform, merchantApplication, merchantDevice, shopperInteractionDevice);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApplicationInfo {\n");
    sb.append("    adyenLibrary: ").append(toIndentedString(adyenLibrary)).append("\n");
    sb.append("    adyenPaymentSource: ").append(toIndentedString(adyenPaymentSource)).append("\n");
    sb.append("    externalPlatform: ").append(toIndentedString(externalPlatform)).append("\n");
    sb.append("    merchantApplication: ").append(toIndentedString(merchantApplication)).append("\n");
    sb.append("    merchantDevice: ").append(toIndentedString(merchantDevice)).append("\n");
    sb.append("    shopperInteractionDevice: ").append(toIndentedString(shopperInteractionDevice)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("adyenLibrary");
    openapiFields.add("adyenPaymentSource");
    openapiFields.add("externalPlatform");
    openapiFields.add("merchantApplication");
    openapiFields.add("merchantDevice");
    openapiFields.add("shopperInteractionDevice");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ApplicationInfo
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ApplicationInfo.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ApplicationInfo is not found in the empty JSON string", ApplicationInfo.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ApplicationInfo.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ApplicationInfo` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `adyenLibrary`
      if (jsonObj.get("adyenLibrary") != null && !jsonObj.get("adyenLibrary").isJsonNull()) {
        CommonField.validateJsonElement(jsonObj.get("adyenLibrary"));
      }
      // validate the optional field `adyenPaymentSource`
      if (jsonObj.get("adyenPaymentSource") != null && !jsonObj.get("adyenPaymentSource").isJsonNull()) {
        CommonField.validateJsonElement(jsonObj.get("adyenPaymentSource"));
      }
      // validate the optional field `externalPlatform`
      if (jsonObj.get("externalPlatform") != null && !jsonObj.get("externalPlatform").isJsonNull()) {
        ExternalPlatform.validateJsonElement(jsonObj.get("externalPlatform"));
      }
      // validate the optional field `merchantApplication`
      if (jsonObj.get("merchantApplication") != null && !jsonObj.get("merchantApplication").isJsonNull()) {
        CommonField.validateJsonElement(jsonObj.get("merchantApplication"));
      }
      // validate the optional field `merchantDevice`
      if (jsonObj.get("merchantDevice") != null && !jsonObj.get("merchantDevice").isJsonNull()) {
        MerchantDevice.validateJsonElement(jsonObj.get("merchantDevice"));
      }
      // validate the optional field `shopperInteractionDevice`
      if (jsonObj.get("shopperInteractionDevice") != null && !jsonObj.get("shopperInteractionDevice").isJsonNull()) {
        ShopperInteractionDevice.validateJsonElement(jsonObj.get("shopperInteractionDevice"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ApplicationInfo.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ApplicationInfo' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ApplicationInfo> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ApplicationInfo.class));

       return (TypeAdapter<T>) new TypeAdapter<ApplicationInfo>() {
           @Override
           public void write(JsonWriter out, ApplicationInfo value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ApplicationInfo read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ApplicationInfo given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ApplicationInfo
   * @throws IOException if the JSON string is invalid with respect to ApplicationInfo
   */
  public static ApplicationInfo fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ApplicationInfo.class);
  }

  /**
   * Convert an instance of ApplicationInfo to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

