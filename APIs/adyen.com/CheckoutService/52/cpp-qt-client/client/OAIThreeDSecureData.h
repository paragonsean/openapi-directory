/**
 * Adyen Checkout API
 * Adyen Checkout API provides a simple and flexible way to initiate and authorise online payments. You can use the same integration for payments made with cards (including 3D Secure), mobile wallets, and local payment methods (for example, iDEAL and Sofort).  This API reference provides information on available endpoints and how to interact with them. To learn more about the API, visit [online payments documentation](https://docs.adyen.com/online-payments).  ## Authentication Each request to Checkout API must be signed with an API key. For this, [get your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) from your Customer Area, and set this key to the `X-API-Key` header value, for example:  ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ``` ## Versioning Checkout API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://checkout-test.adyen.com/v52/payments ```  ## Going live  To access the live endpoints, you need an API key from your live Customer Area.  The live endpoint URLs contain a prefix which is unique to your company account, for example: ``` https://{PREFIX}-checkout-live.adyenpayments.com/checkout/v52/payments ```  Get your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.  When preparing to do live transactions with Checkout API, follow the [go-live checklist](https://docs.adyen.com/online-payments/go-live-checklist) to make sure you've got all the required configuration in place.  ## Release notes Have a look at the [release notes](https://docs.adyen.com/online-payments/release-notes?integration_type=api&version=52) to find out what changed in this version!
 *
 * The version of the OpenAPI document: 52
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIThreeDSecureData.h
 *
 * 
 */

#ifndef OAIThreeDSecureData_H
#define OAIThreeDSecureData_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIThreeDSecureData : public OAIObject {
public:
    OAIThreeDSecureData();
    OAIThreeDSecureData(QString json);
    ~OAIThreeDSecureData() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAuthenticationResponse() const;
    void setAuthenticationResponse(const QString &authentication_response);
    bool is_authentication_response_Set() const;
    bool is_authentication_response_Valid() const;

    QString getCavv() const;
    void setCavv(const QString &cavv);
    bool is_cavv_Set() const;
    bool is_cavv_Valid() const;

    QString getCavvAlgorithm() const;
    void setCavvAlgorithm(const QString &cavv_algorithm);
    bool is_cavv_algorithm_Set() const;
    bool is_cavv_algorithm_Valid() const;

    QString getDirectoryResponse() const;
    void setDirectoryResponse(const QString &directory_response);
    bool is_directory_response_Set() const;
    bool is_directory_response_Valid() const;

    QString getDsTransId() const;
    void setDsTransId(const QString &ds_trans_id);
    bool is_ds_trans_id_Set() const;
    bool is_ds_trans_id_Valid() const;

    QString getEci() const;
    void setEci(const QString &eci);
    bool is_eci_Set() const;
    bool is_eci_Valid() const;

    QString getThreeDsVersion() const;
    void setThreeDsVersion(const QString &three_ds_version);
    bool is_three_ds_version_Set() const;
    bool is_three_ds_version_Valid() const;

    QString getXid() const;
    void setXid(const QString &xid);
    bool is_xid_Set() const;
    bool is_xid_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_authentication_response;
    bool m_authentication_response_isSet;
    bool m_authentication_response_isValid;

    QString m_cavv;
    bool m_cavv_isSet;
    bool m_cavv_isValid;

    QString m_cavv_algorithm;
    bool m_cavv_algorithm_isSet;
    bool m_cavv_algorithm_isValid;

    QString m_directory_response;
    bool m_directory_response_isSet;
    bool m_directory_response_isValid;

    QString m_ds_trans_id;
    bool m_ds_trans_id_isSet;
    bool m_ds_trans_id_isValid;

    QString m_eci;
    bool m_eci_isSet;
    bool m_eci_isValid;

    QString m_three_ds_version;
    bool m_three_ds_version_isSet;
    bool m_three_ds_version_isValid;

    QString m_xid;
    bool m_xid_isSet;
    bool m_xid_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIThreeDSecureData)

#endif // OAIThreeDSecureData_H
