/**
 * Adyen Checkout API
 * Adyen Checkout API provides a simple and flexible way to initiate and authorise online payments. You can use the same integration for payments made with cards (including 3D Secure), mobile wallets, and local payment methods (for example, iDEAL and Sofort).  This API reference provides information on available endpoints and how to interact with them. To learn more about the API, visit [online payments documentation](https://docs.adyen.com/online-payments).  ## Authentication Each request to Checkout API must be signed with an API key. For this, [get your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) from your Customer Area, and set this key to the `X-API-Key` header value, for example:  ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ``` ## Versioning Checkout API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://checkout-test.adyen.com/v52/payments ```  ## Going live  To access the live endpoints, you need an API key from your live Customer Area.  The live endpoint URLs contain a prefix which is unique to your company account, for example: ``` https://{PREFIX}-checkout-live.adyenpayments.com/checkout/v52/payments ```  Get your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.  When preparing to do live transactions with Checkout API, follow the [go-live checklist](https://docs.adyen.com/online-payments/go-live-checklist) to make sure you've got all the required configuration in place.  ## Release notes Have a look at the [release notes](https://docs.adyen.com/online-payments/release-notes?integration_type=api&version=52) to find out what changed in this version!
 *
 * The version of the OpenAPI document: 52
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICard.h
 *
 * 
 */

#ifndef OAICard_H
#define OAICard_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICard : public OAIObject {
public:
    OAICard();
    OAICard(QString json);
    ~OAICard() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCvc() const;
    void setCvc(const QString &cvc);
    bool is_cvc_Set() const;
    bool is_cvc_Valid() const;

    QString getExpiryMonth() const;
    void setExpiryMonth(const QString &expiry_month);
    bool is_expiry_month_Set() const;
    bool is_expiry_month_Valid() const;

    QString getExpiryYear() const;
    void setExpiryYear(const QString &expiry_year);
    bool is_expiry_year_Set() const;
    bool is_expiry_year_Valid() const;

    QString getHolderName() const;
    void setHolderName(const QString &holder_name);
    bool is_holder_name_Set() const;
    bool is_holder_name_Valid() const;

    QString getIssueNumber() const;
    void setIssueNumber(const QString &issue_number);
    bool is_issue_number_Set() const;
    bool is_issue_number_Valid() const;

    QString getNumber() const;
    void setNumber(const QString &number);
    bool is_number_Set() const;
    bool is_number_Valid() const;

    QString getStartMonth() const;
    void setStartMonth(const QString &start_month);
    bool is_start_month_Set() const;
    bool is_start_month_Valid() const;

    QString getStartYear() const;
    void setStartYear(const QString &start_year);
    bool is_start_year_Set() const;
    bool is_start_year_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_cvc;
    bool m_cvc_isSet;
    bool m_cvc_isValid;

    QString m_expiry_month;
    bool m_expiry_month_isSet;
    bool m_expiry_month_isValid;

    QString m_expiry_year;
    bool m_expiry_year_isSet;
    bool m_expiry_year_isValid;

    QString m_holder_name;
    bool m_holder_name_isSet;
    bool m_holder_name_isValid;

    QString m_issue_number;
    bool m_issue_number_isSet;
    bool m_issue_number_isValid;

    QString m_number;
    bool m_number_isSet;
    bool m_number_isValid;

    QString m_start_month;
    bool m_start_month_isSet;
    bool m_start_month_isValid;

    QString m_start_year;
    bool m_start_year_isSet;
    bool m_start_year_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICard)

#endif // OAICard_H
