/**
 * Adyen Checkout API
 * Adyen Checkout API provides a simple and flexible way to initiate and authorise online payments. You can use the same integration for payments made with cards (including 3D Secure), mobile wallets, and local payment methods (for example, iDEAL and Sofort).  This API reference provides information on available endpoints and how to interact with them. To learn more about the API, visit [online payments documentation](https://docs.adyen.com/online-payments).  ## Authentication Each request to Checkout API must be signed with an API key. For this, [get your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) from your Customer Area, and set this key to the `X-API-Key` header value, for example:  ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ``` ## Versioning Checkout API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://checkout-test.adyen.com/v52/payments ```  ## Going live  To access the live endpoints, you need an API key from your live Customer Area.  The live endpoint URLs contain a prefix which is unique to your company account, for example: ``` https://{PREFIX}-checkout-live.adyenpayments.com/checkout/v52/payments ```  Get your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.  When preparing to do live transactions with Checkout API, follow the [go-live checklist](https://docs.adyen.com/online-payments/go-live-checklist) to make sure you've got all the required configuration in place.  ## Release notes Have a look at the [release notes](https://docs.adyen.com/online-payments/release-notes?integration_type=api&version=52) to find out what changed in this version!
 *
 * The version of the OpenAPI document: 52
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AdditionalDataCarRental model module.
 * @module model/AdditionalDataCarRental
 * @version 52
 */
class AdditionalDataCarRental {
    /**
     * Constructs a new <code>AdditionalDataCarRental</code>.
     * @alias module:model/AdditionalDataCarRental
     */
    constructor() { 
        
        AdditionalDataCarRental.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AdditionalDataCarRental</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AdditionalDataCarRental} obj Optional instance to populate.
     * @return {module:model/AdditionalDataCarRental} The populated <code>AdditionalDataCarRental</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AdditionalDataCarRental();

            if (data.hasOwnProperty('carRental.checkOutDate')) {
                obj['carRental.checkOutDate'] = ApiClient.convertToType(data['carRental.checkOutDate'], 'String');
            }
            if (data.hasOwnProperty('carRental.customerServiceTollFreeNumber')) {
                obj['carRental.customerServiceTollFreeNumber'] = ApiClient.convertToType(data['carRental.customerServiceTollFreeNumber'], 'String');
            }
            if (data.hasOwnProperty('carRental.daysRented')) {
                obj['carRental.daysRented'] = ApiClient.convertToType(data['carRental.daysRented'], 'String');
            }
            if (data.hasOwnProperty('carRental.fuelCharges')) {
                obj['carRental.fuelCharges'] = ApiClient.convertToType(data['carRental.fuelCharges'], 'String');
            }
            if (data.hasOwnProperty('carRental.insuranceCharges')) {
                obj['carRental.insuranceCharges'] = ApiClient.convertToType(data['carRental.insuranceCharges'], 'String');
            }
            if (data.hasOwnProperty('carRental.locationCity')) {
                obj['carRental.locationCity'] = ApiClient.convertToType(data['carRental.locationCity'], 'String');
            }
            if (data.hasOwnProperty('carRental.locationCountry')) {
                obj['carRental.locationCountry'] = ApiClient.convertToType(data['carRental.locationCountry'], 'String');
            }
            if (data.hasOwnProperty('carRental.locationStateProvince')) {
                obj['carRental.locationStateProvince'] = ApiClient.convertToType(data['carRental.locationStateProvince'], 'String');
            }
            if (data.hasOwnProperty('carRental.noShowIndicator')) {
                obj['carRental.noShowIndicator'] = ApiClient.convertToType(data['carRental.noShowIndicator'], 'String');
            }
            if (data.hasOwnProperty('carRental.oneWayDropOffCharges')) {
                obj['carRental.oneWayDropOffCharges'] = ApiClient.convertToType(data['carRental.oneWayDropOffCharges'], 'String');
            }
            if (data.hasOwnProperty('carRental.rate')) {
                obj['carRental.rate'] = ApiClient.convertToType(data['carRental.rate'], 'String');
            }
            if (data.hasOwnProperty('carRental.rateIndicator')) {
                obj['carRental.rateIndicator'] = ApiClient.convertToType(data['carRental.rateIndicator'], 'String');
            }
            if (data.hasOwnProperty('carRental.rentalAgreementNumber')) {
                obj['carRental.rentalAgreementNumber'] = ApiClient.convertToType(data['carRental.rentalAgreementNumber'], 'String');
            }
            if (data.hasOwnProperty('carRental.rentalClassId')) {
                obj['carRental.rentalClassId'] = ApiClient.convertToType(data['carRental.rentalClassId'], 'String');
            }
            if (data.hasOwnProperty('carRental.renterName')) {
                obj['carRental.renterName'] = ApiClient.convertToType(data['carRental.renterName'], 'String');
            }
            if (data.hasOwnProperty('carRental.returnCity')) {
                obj['carRental.returnCity'] = ApiClient.convertToType(data['carRental.returnCity'], 'String');
            }
            if (data.hasOwnProperty('carRental.returnCountry')) {
                obj['carRental.returnCountry'] = ApiClient.convertToType(data['carRental.returnCountry'], 'String');
            }
            if (data.hasOwnProperty('carRental.returnDate')) {
                obj['carRental.returnDate'] = ApiClient.convertToType(data['carRental.returnDate'], 'String');
            }
            if (data.hasOwnProperty('carRental.returnLocationId')) {
                obj['carRental.returnLocationId'] = ApiClient.convertToType(data['carRental.returnLocationId'], 'String');
            }
            if (data.hasOwnProperty('carRental.returnStateProvince')) {
                obj['carRental.returnStateProvince'] = ApiClient.convertToType(data['carRental.returnStateProvince'], 'String');
            }
            if (data.hasOwnProperty('carRental.taxExemptIndicator')) {
                obj['carRental.taxExemptIndicator'] = ApiClient.convertToType(data['carRental.taxExemptIndicator'], 'String');
            }
            if (data.hasOwnProperty('travelEntertainmentAuthData.duration')) {
                obj['travelEntertainmentAuthData.duration'] = ApiClient.convertToType(data['travelEntertainmentAuthData.duration'], 'String');
            }
            if (data.hasOwnProperty('travelEntertainmentAuthData.market')) {
                obj['travelEntertainmentAuthData.market'] = ApiClient.convertToType(data['travelEntertainmentAuthData.market'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AdditionalDataCarRental</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AdditionalDataCarRental</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['carRental.checkOutDate'] && !(typeof data['carRental.checkOutDate'] === 'string' || data['carRental.checkOutDate'] instanceof String)) {
            throw new Error("Expected the field `carRental.checkOutDate` to be a primitive type in the JSON string but got " + data['carRental.checkOutDate']);
        }
        // ensure the json data is a string
        if (data['carRental.customerServiceTollFreeNumber'] && !(typeof data['carRental.customerServiceTollFreeNumber'] === 'string' || data['carRental.customerServiceTollFreeNumber'] instanceof String)) {
            throw new Error("Expected the field `carRental.customerServiceTollFreeNumber` to be a primitive type in the JSON string but got " + data['carRental.customerServiceTollFreeNumber']);
        }
        // ensure the json data is a string
        if (data['carRental.daysRented'] && !(typeof data['carRental.daysRented'] === 'string' || data['carRental.daysRented'] instanceof String)) {
            throw new Error("Expected the field `carRental.daysRented` to be a primitive type in the JSON string but got " + data['carRental.daysRented']);
        }
        // ensure the json data is a string
        if (data['carRental.fuelCharges'] && !(typeof data['carRental.fuelCharges'] === 'string' || data['carRental.fuelCharges'] instanceof String)) {
            throw new Error("Expected the field `carRental.fuelCharges` to be a primitive type in the JSON string but got " + data['carRental.fuelCharges']);
        }
        // ensure the json data is a string
        if (data['carRental.insuranceCharges'] && !(typeof data['carRental.insuranceCharges'] === 'string' || data['carRental.insuranceCharges'] instanceof String)) {
            throw new Error("Expected the field `carRental.insuranceCharges` to be a primitive type in the JSON string but got " + data['carRental.insuranceCharges']);
        }
        // ensure the json data is a string
        if (data['carRental.locationCity'] && !(typeof data['carRental.locationCity'] === 'string' || data['carRental.locationCity'] instanceof String)) {
            throw new Error("Expected the field `carRental.locationCity` to be a primitive type in the JSON string but got " + data['carRental.locationCity']);
        }
        // ensure the json data is a string
        if (data['carRental.locationCountry'] && !(typeof data['carRental.locationCountry'] === 'string' || data['carRental.locationCountry'] instanceof String)) {
            throw new Error("Expected the field `carRental.locationCountry` to be a primitive type in the JSON string but got " + data['carRental.locationCountry']);
        }
        // ensure the json data is a string
        if (data['carRental.locationStateProvince'] && !(typeof data['carRental.locationStateProvince'] === 'string' || data['carRental.locationStateProvince'] instanceof String)) {
            throw new Error("Expected the field `carRental.locationStateProvince` to be a primitive type in the JSON string but got " + data['carRental.locationStateProvince']);
        }
        // ensure the json data is a string
        if (data['carRental.noShowIndicator'] && !(typeof data['carRental.noShowIndicator'] === 'string' || data['carRental.noShowIndicator'] instanceof String)) {
            throw new Error("Expected the field `carRental.noShowIndicator` to be a primitive type in the JSON string but got " + data['carRental.noShowIndicator']);
        }
        // ensure the json data is a string
        if (data['carRental.oneWayDropOffCharges'] && !(typeof data['carRental.oneWayDropOffCharges'] === 'string' || data['carRental.oneWayDropOffCharges'] instanceof String)) {
            throw new Error("Expected the field `carRental.oneWayDropOffCharges` to be a primitive type in the JSON string but got " + data['carRental.oneWayDropOffCharges']);
        }
        // ensure the json data is a string
        if (data['carRental.rate'] && !(typeof data['carRental.rate'] === 'string' || data['carRental.rate'] instanceof String)) {
            throw new Error("Expected the field `carRental.rate` to be a primitive type in the JSON string but got " + data['carRental.rate']);
        }
        // ensure the json data is a string
        if (data['carRental.rateIndicator'] && !(typeof data['carRental.rateIndicator'] === 'string' || data['carRental.rateIndicator'] instanceof String)) {
            throw new Error("Expected the field `carRental.rateIndicator` to be a primitive type in the JSON string but got " + data['carRental.rateIndicator']);
        }
        // ensure the json data is a string
        if (data['carRental.rentalAgreementNumber'] && !(typeof data['carRental.rentalAgreementNumber'] === 'string' || data['carRental.rentalAgreementNumber'] instanceof String)) {
            throw new Error("Expected the field `carRental.rentalAgreementNumber` to be a primitive type in the JSON string but got " + data['carRental.rentalAgreementNumber']);
        }
        // ensure the json data is a string
        if (data['carRental.rentalClassId'] && !(typeof data['carRental.rentalClassId'] === 'string' || data['carRental.rentalClassId'] instanceof String)) {
            throw new Error("Expected the field `carRental.rentalClassId` to be a primitive type in the JSON string but got " + data['carRental.rentalClassId']);
        }
        // ensure the json data is a string
        if (data['carRental.renterName'] && !(typeof data['carRental.renterName'] === 'string' || data['carRental.renterName'] instanceof String)) {
            throw new Error("Expected the field `carRental.renterName` to be a primitive type in the JSON string but got " + data['carRental.renterName']);
        }
        // ensure the json data is a string
        if (data['carRental.returnCity'] && !(typeof data['carRental.returnCity'] === 'string' || data['carRental.returnCity'] instanceof String)) {
            throw new Error("Expected the field `carRental.returnCity` to be a primitive type in the JSON string but got " + data['carRental.returnCity']);
        }
        // ensure the json data is a string
        if (data['carRental.returnCountry'] && !(typeof data['carRental.returnCountry'] === 'string' || data['carRental.returnCountry'] instanceof String)) {
            throw new Error("Expected the field `carRental.returnCountry` to be a primitive type in the JSON string but got " + data['carRental.returnCountry']);
        }
        // ensure the json data is a string
        if (data['carRental.returnDate'] && !(typeof data['carRental.returnDate'] === 'string' || data['carRental.returnDate'] instanceof String)) {
            throw new Error("Expected the field `carRental.returnDate` to be a primitive type in the JSON string but got " + data['carRental.returnDate']);
        }
        // ensure the json data is a string
        if (data['carRental.returnLocationId'] && !(typeof data['carRental.returnLocationId'] === 'string' || data['carRental.returnLocationId'] instanceof String)) {
            throw new Error("Expected the field `carRental.returnLocationId` to be a primitive type in the JSON string but got " + data['carRental.returnLocationId']);
        }
        // ensure the json data is a string
        if (data['carRental.returnStateProvince'] && !(typeof data['carRental.returnStateProvince'] === 'string' || data['carRental.returnStateProvince'] instanceof String)) {
            throw new Error("Expected the field `carRental.returnStateProvince` to be a primitive type in the JSON string but got " + data['carRental.returnStateProvince']);
        }
        // ensure the json data is a string
        if (data['carRental.taxExemptIndicator'] && !(typeof data['carRental.taxExemptIndicator'] === 'string' || data['carRental.taxExemptIndicator'] instanceof String)) {
            throw new Error("Expected the field `carRental.taxExemptIndicator` to be a primitive type in the JSON string but got " + data['carRental.taxExemptIndicator']);
        }
        // ensure the json data is a string
        if (data['travelEntertainmentAuthData.duration'] && !(typeof data['travelEntertainmentAuthData.duration'] === 'string' || data['travelEntertainmentAuthData.duration'] instanceof String)) {
            throw new Error("Expected the field `travelEntertainmentAuthData.duration` to be a primitive type in the JSON string but got " + data['travelEntertainmentAuthData.duration']);
        }
        // ensure the json data is a string
        if (data['travelEntertainmentAuthData.market'] && !(typeof data['travelEntertainmentAuthData.market'] === 'string' || data['travelEntertainmentAuthData.market'] instanceof String)) {
            throw new Error("Expected the field `travelEntertainmentAuthData.market` to be a primitive type in the JSON string but got " + data['travelEntertainmentAuthData.market']);
        }

        return true;
    }


}



/**
 * The pick-up date. * Date format: `yyyyMMdd`
 * @member {String} carRental.checkOutDate
 */
AdditionalDataCarRental.prototype['carRental.checkOutDate'] = undefined;

/**
 * The customer service phone number of the car rental company. * Format: Alphanumeric * maxLength: 17 * For US and CA numbers must be 10 characters in length * Must not start with a space * Must not contain any special characters such as + or - *Must not be all zeros.
 * @member {String} carRental.customerServiceTollFreeNumber
 */
AdditionalDataCarRental.prototype['carRental.customerServiceTollFreeNumber'] = undefined;

/**
 * Number of days for which the car is being rented. * Format: Numeric * maxLength: 4 * Must not be all spaces
 * @member {String} carRental.daysRented
 */
AdditionalDataCarRental.prototype['carRental.daysRented'] = undefined;

/**
 * Any fuel charges associated with the rental, in [minor units](https://docs.adyen.com/development-resources/currency-codes). * Format: Numeric * maxLength: 12
 * @member {String} carRental.fuelCharges
 */
AdditionalDataCarRental.prototype['carRental.fuelCharges'] = undefined;

/**
 * Any insurance charges associated with the rental, in [minor units](https://docs.adyen.com/development-resources/currency-codes). * Format: Numeric * maxLength: 12 * Must not be all spaces *Must not be all zeros.
 * @member {String} carRental.insuranceCharges
 */
AdditionalDataCarRental.prototype['carRental.insuranceCharges'] = undefined;

/**
 * The city where the car is rented. * Format: Alphanumeric * maxLength: 18 * Must not start with a space or be all spaces *Must not be all zeros.
 * @member {String} carRental.locationCity
 */
AdditionalDataCarRental.prototype['carRental.locationCity'] = undefined;

/**
 * The country where the car is rented, in [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) format. * Format: Alphanumeric * maxLength: 2
 * @member {String} carRental.locationCountry
 */
AdditionalDataCarRental.prototype['carRental.locationCountry'] = undefined;

/**
 * The state or province where the car is rented. * Format: Alphanumeric * maxLength: 2 * Must not start with a space or be all spaces *Must not be all zeros.
 * @member {String} carRental.locationStateProvince
 */
AdditionalDataCarRental.prototype['carRental.locationStateProvince'] = undefined;

/**
 * Indicates if the customer didn't pick up their rental car. * Y - Customer did not pick up their car * N - Not applicable
 * @member {String} carRental.noShowIndicator
 */
AdditionalDataCarRental.prototype['carRental.noShowIndicator'] = undefined;

/**
 * The charge for not returning a car to the original rental location, in [minor units](https://docs.adyen.com/development-resources/currency-codes). * maxLength: 12
 * @member {String} carRental.oneWayDropOffCharges
 */
AdditionalDataCarRental.prototype['carRental.oneWayDropOffCharges'] = undefined;

/**
 * The daily rental rate, in [minor units](https://docs.adyen.com/development-resources/currency-codes). * Format: Alphanumeric * maxLength: 12
 * @member {String} carRental.rate
 */
AdditionalDataCarRental.prototype['carRental.rate'] = undefined;

/**
 * Specifies whether the given rate is applied daily or weekly. * D - Daily rate * W - Weekly rate
 * @member {String} carRental.rateIndicator
 */
AdditionalDataCarRental.prototype['carRental.rateIndicator'] = undefined;

/**
 * The rental agreement number for the car rental. * Format: Alphanumeric * maxLength: 9 * Must not start with a space or be all spaces *Must not be all zeros.
 * @member {String} carRental.rentalAgreementNumber
 */
AdditionalDataCarRental.prototype['carRental.rentalAgreementNumber'] = undefined;

/**
 * The classification of the rental car. * Format: Alphanumeric * maxLength: 4 * Must not start with a space or be all spaces *Must not be all zeros.
 * @member {String} carRental.rentalClassId
 */
AdditionalDataCarRental.prototype['carRental.rentalClassId'] = undefined;

/**
 * The name of the person renting the car. * Format: Alphanumeric * maxLength: 26 * If you send more than 26 characters, the name is truncated * Must not start with a space or be all spaces *Must not be all zeros.
 * @member {String} carRental.renterName
 */
AdditionalDataCarRental.prototype['carRental.renterName'] = undefined;

/**
 * The city where the car must be returned. * Format: Alphanumeric * maxLength: 18 * Must not start with a space or be all spaces *Must not be all zeros.
 * @member {String} carRental.returnCity
 */
AdditionalDataCarRental.prototype['carRental.returnCity'] = undefined;

/**
 * The country where the car must be returned, in [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) format. * Format: Alphanumeric * maxLength: 2
 * @member {String} carRental.returnCountry
 */
AdditionalDataCarRental.prototype['carRental.returnCountry'] = undefined;

/**
 * The last date to return the car by. * Date format: `yyyyMMdd` * maxLength: 8
 * @member {String} carRental.returnDate
 */
AdditionalDataCarRental.prototype['carRental.returnDate'] = undefined;

/**
 * The agency code, phone number, or address abbreviation * Format: Alphanumeric * maxLength: 10 * Must not start with a space or be all spaces *Must not be all zeros.
 * @member {String} carRental.returnLocationId
 */
AdditionalDataCarRental.prototype['carRental.returnLocationId'] = undefined;

/**
 * The state or province where the car must be returned. * Format: Alphanumeric * maxLength: 3 * Must not start with a space or be all spaces *Must not be all zeros.
 * @member {String} carRental.returnStateProvince
 */
AdditionalDataCarRental.prototype['carRental.returnStateProvince'] = undefined;

/**
 * Indicates if the goods or services were tax-exempt, or if tax was not paid on them.  Values: * Y - Goods or services were tax exempt * N - Tax was not collected
 * @member {String} carRental.taxExemptIndicator
 */
AdditionalDataCarRental.prototype['carRental.taxExemptIndicator'] = undefined;

/**
 * Number of days the car is rented for. This should be included in the auth message. * Format: Numeric * maxLength: 4
 * @member {String} travelEntertainmentAuthData.duration
 */
AdditionalDataCarRental.prototype['travelEntertainmentAuthData.duration'] = undefined;

/**
 * Indicates what market-specific dataset will be submitted or is being submitted. Value should be 'A' for car rental. This should be included in the auth message. * Format: Alphanumeric * maxLength: 1
 * @member {String} travelEntertainmentAuthData.market
 */
AdditionalDataCarRental.prototype['travelEntertainmentAuthData.market'] = undefined;






export default AdditionalDataCarRental;

