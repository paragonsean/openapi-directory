# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.amount import Amount
from openapi_server import util


class CheckoutVoucherAction(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, alternative_reference: str=None, collection_institution_number: str=None, download_url: str=None, entity: str=None, expires_at: str=None, initial_amount: Amount=None, instructions_url: str=None, issuer: str=None, masked_telephone_number: str=None, merchant_name: str=None, merchant_reference: str=None, payment_data: str=None, payment_method_type: str=None, reference: str=None, shopper_email: str=None, shopper_name: str=None, surcharge: Amount=None, total_amount: Amount=None, type: str=None, url: str=None):
        """CheckoutVoucherAction - a model defined in OpenAPI

        :param alternative_reference: The alternative_reference of this CheckoutVoucherAction.
        :param collection_institution_number: The collection_institution_number of this CheckoutVoucherAction.
        :param download_url: The download_url of this CheckoutVoucherAction.
        :param entity: The entity of this CheckoutVoucherAction.
        :param expires_at: The expires_at of this CheckoutVoucherAction.
        :param initial_amount: The initial_amount of this CheckoutVoucherAction.
        :param instructions_url: The instructions_url of this CheckoutVoucherAction.
        :param issuer: The issuer of this CheckoutVoucherAction.
        :param masked_telephone_number: The masked_telephone_number of this CheckoutVoucherAction.
        :param merchant_name: The merchant_name of this CheckoutVoucherAction.
        :param merchant_reference: The merchant_reference of this CheckoutVoucherAction.
        :param payment_data: The payment_data of this CheckoutVoucherAction.
        :param payment_method_type: The payment_method_type of this CheckoutVoucherAction.
        :param reference: The reference of this CheckoutVoucherAction.
        :param shopper_email: The shopper_email of this CheckoutVoucherAction.
        :param shopper_name: The shopper_name of this CheckoutVoucherAction.
        :param surcharge: The surcharge of this CheckoutVoucherAction.
        :param total_amount: The total_amount of this CheckoutVoucherAction.
        :param type: The type of this CheckoutVoucherAction.
        :param url: The url of this CheckoutVoucherAction.
        """
        self.openapi_types = {
            'alternative_reference': str,
            'collection_institution_number': str,
            'download_url': str,
            'entity': str,
            'expires_at': str,
            'initial_amount': Amount,
            'instructions_url': str,
            'issuer': str,
            'masked_telephone_number': str,
            'merchant_name': str,
            'merchant_reference': str,
            'payment_data': str,
            'payment_method_type': str,
            'reference': str,
            'shopper_email': str,
            'shopper_name': str,
            'surcharge': Amount,
            'total_amount': Amount,
            'type': str,
            'url': str
        }

        self.attribute_map = {
            'alternative_reference': 'alternativeReference',
            'collection_institution_number': 'collectionInstitutionNumber',
            'download_url': 'downloadUrl',
            'entity': 'entity',
            'expires_at': 'expiresAt',
            'initial_amount': 'initialAmount',
            'instructions_url': 'instructionsUrl',
            'issuer': 'issuer',
            'masked_telephone_number': 'maskedTelephoneNumber',
            'merchant_name': 'merchantName',
            'merchant_reference': 'merchantReference',
            'payment_data': 'paymentData',
            'payment_method_type': 'paymentMethodType',
            'reference': 'reference',
            'shopper_email': 'shopperEmail',
            'shopper_name': 'shopperName',
            'surcharge': 'surcharge',
            'total_amount': 'totalAmount',
            'type': 'type',
            'url': 'url'
        }

        self._alternative_reference = alternative_reference
        self._collection_institution_number = collection_institution_number
        self._download_url = download_url
        self._entity = entity
        self._expires_at = expires_at
        self._initial_amount = initial_amount
        self._instructions_url = instructions_url
        self._issuer = issuer
        self._masked_telephone_number = masked_telephone_number
        self._merchant_name = merchant_name
        self._merchant_reference = merchant_reference
        self._payment_data = payment_data
        self._payment_method_type = payment_method_type
        self._reference = reference
        self._shopper_email = shopper_email
        self._shopper_name = shopper_name
        self._surcharge = surcharge
        self._total_amount = total_amount
        self._type = type
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CheckoutVoucherAction':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CheckoutVoucherAction of this CheckoutVoucherAction.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def alternative_reference(self):
        """Gets the alternative_reference of this CheckoutVoucherAction.

        The voucher alternative reference code.

        :return: The alternative_reference of this CheckoutVoucherAction.
        :rtype: str
        """
        return self._alternative_reference

    @alternative_reference.setter
    def alternative_reference(self, alternative_reference):
        """Sets the alternative_reference of this CheckoutVoucherAction.

        The voucher alternative reference code.

        :param alternative_reference: The alternative_reference of this CheckoutVoucherAction.
        :type alternative_reference: str
        """

        self._alternative_reference = alternative_reference

    @property
    def collection_institution_number(self):
        """Gets the collection_institution_number of this CheckoutVoucherAction.

        A collection institution number (store number) for Econtext Pay-Easy ATM.

        :return: The collection_institution_number of this CheckoutVoucherAction.
        :rtype: str
        """
        return self._collection_institution_number

    @collection_institution_number.setter
    def collection_institution_number(self, collection_institution_number):
        """Sets the collection_institution_number of this CheckoutVoucherAction.

        A collection institution number (store number) for Econtext Pay-Easy ATM.

        :param collection_institution_number: The collection_institution_number of this CheckoutVoucherAction.
        :type collection_institution_number: str
        """

        self._collection_institution_number = collection_institution_number

    @property
    def download_url(self):
        """Gets the download_url of this CheckoutVoucherAction.

        The URL to download the voucher.

        :return: The download_url of this CheckoutVoucherAction.
        :rtype: str
        """
        return self._download_url

    @download_url.setter
    def download_url(self, download_url):
        """Sets the download_url of this CheckoutVoucherAction.

        The URL to download the voucher.

        :param download_url: The download_url of this CheckoutVoucherAction.
        :type download_url: str
        """

        self._download_url = download_url

    @property
    def entity(self):
        """Gets the entity of this CheckoutVoucherAction.

        An entity number of Multibanco.

        :return: The entity of this CheckoutVoucherAction.
        :rtype: str
        """
        return self._entity

    @entity.setter
    def entity(self, entity):
        """Sets the entity of this CheckoutVoucherAction.

        An entity number of Multibanco.

        :param entity: The entity of this CheckoutVoucherAction.
        :type entity: str
        """

        self._entity = entity

    @property
    def expires_at(self):
        """Gets the expires_at of this CheckoutVoucherAction.

        The date time of the voucher expiry.

        :return: The expires_at of this CheckoutVoucherAction.
        :rtype: str
        """
        return self._expires_at

    @expires_at.setter
    def expires_at(self, expires_at):
        """Sets the expires_at of this CheckoutVoucherAction.

        The date time of the voucher expiry.

        :param expires_at: The expires_at of this CheckoutVoucherAction.
        :type expires_at: str
        """

        self._expires_at = expires_at

    @property
    def initial_amount(self):
        """Gets the initial_amount of this CheckoutVoucherAction.

        The initial amount.

        :return: The initial_amount of this CheckoutVoucherAction.
        :rtype: Amount
        """
        return self._initial_amount

    @initial_amount.setter
    def initial_amount(self, initial_amount):
        """Sets the initial_amount of this CheckoutVoucherAction.

        The initial amount.

        :param initial_amount: The initial_amount of this CheckoutVoucherAction.
        :type initial_amount: Amount
        """

        self._initial_amount = initial_amount

    @property
    def instructions_url(self):
        """Gets the instructions_url of this CheckoutVoucherAction.

        The URL to the detailed instructions to make payment using the voucher.

        :return: The instructions_url of this CheckoutVoucherAction.
        :rtype: str
        """
        return self._instructions_url

    @instructions_url.setter
    def instructions_url(self, instructions_url):
        """Sets the instructions_url of this CheckoutVoucherAction.

        The URL to the detailed instructions to make payment using the voucher.

        :param instructions_url: The instructions_url of this CheckoutVoucherAction.
        :type instructions_url: str
        """

        self._instructions_url = instructions_url

    @property
    def issuer(self):
        """Gets the issuer of this CheckoutVoucherAction.

        The issuer of the voucher.

        :return: The issuer of this CheckoutVoucherAction.
        :rtype: str
        """
        return self._issuer

    @issuer.setter
    def issuer(self, issuer):
        """Sets the issuer of this CheckoutVoucherAction.

        The issuer of the voucher.

        :param issuer: The issuer of this CheckoutVoucherAction.
        :type issuer: str
        """

        self._issuer = issuer

    @property
    def masked_telephone_number(self):
        """Gets the masked_telephone_number of this CheckoutVoucherAction.

        The shopper telephone number (partially masked).

        :return: The masked_telephone_number of this CheckoutVoucherAction.
        :rtype: str
        """
        return self._masked_telephone_number

    @masked_telephone_number.setter
    def masked_telephone_number(self, masked_telephone_number):
        """Sets the masked_telephone_number of this CheckoutVoucherAction.

        The shopper telephone number (partially masked).

        :param masked_telephone_number: The masked_telephone_number of this CheckoutVoucherAction.
        :type masked_telephone_number: str
        """

        self._masked_telephone_number = masked_telephone_number

    @property
    def merchant_name(self):
        """Gets the merchant_name of this CheckoutVoucherAction.

        The merchant name.

        :return: The merchant_name of this CheckoutVoucherAction.
        :rtype: str
        """
        return self._merchant_name

    @merchant_name.setter
    def merchant_name(self, merchant_name):
        """Sets the merchant_name of this CheckoutVoucherAction.

        The merchant name.

        :param merchant_name: The merchant_name of this CheckoutVoucherAction.
        :type merchant_name: str
        """

        self._merchant_name = merchant_name

    @property
    def merchant_reference(self):
        """Gets the merchant_reference of this CheckoutVoucherAction.

        The merchant reference.

        :return: The merchant_reference of this CheckoutVoucherAction.
        :rtype: str
        """
        return self._merchant_reference

    @merchant_reference.setter
    def merchant_reference(self, merchant_reference):
        """Sets the merchant_reference of this CheckoutVoucherAction.

        The merchant reference.

        :param merchant_reference: The merchant_reference of this CheckoutVoucherAction.
        :type merchant_reference: str
        """

        self._merchant_reference = merchant_reference

    @property
    def payment_data(self):
        """Gets the payment_data of this CheckoutVoucherAction.

        A value that must be submitted to the `/payments/details` endpoint to verify this payment.

        :return: The payment_data of this CheckoutVoucherAction.
        :rtype: str
        """
        return self._payment_data

    @payment_data.setter
    def payment_data(self, payment_data):
        """Sets the payment_data of this CheckoutVoucherAction.

        A value that must be submitted to the `/payments/details` endpoint to verify this payment.

        :param payment_data: The payment_data of this CheckoutVoucherAction.
        :type payment_data: str
        """

        self._payment_data = payment_data

    @property
    def payment_method_type(self):
        """Gets the payment_method_type of this CheckoutVoucherAction.

        Specifies the payment method.

        :return: The payment_method_type of this CheckoutVoucherAction.
        :rtype: str
        """
        return self._payment_method_type

    @payment_method_type.setter
    def payment_method_type(self, payment_method_type):
        """Sets the payment_method_type of this CheckoutVoucherAction.

        Specifies the payment method.

        :param payment_method_type: The payment_method_type of this CheckoutVoucherAction.
        :type payment_method_type: str
        """

        self._payment_method_type = payment_method_type

    @property
    def reference(self):
        """Gets the reference of this CheckoutVoucherAction.

        The voucher reference code.

        :return: The reference of this CheckoutVoucherAction.
        :rtype: str
        """
        return self._reference

    @reference.setter
    def reference(self, reference):
        """Sets the reference of this CheckoutVoucherAction.

        The voucher reference code.

        :param reference: The reference of this CheckoutVoucherAction.
        :type reference: str
        """

        self._reference = reference

    @property
    def shopper_email(self):
        """Gets the shopper_email of this CheckoutVoucherAction.

        The shopper email.

        :return: The shopper_email of this CheckoutVoucherAction.
        :rtype: str
        """
        return self._shopper_email

    @shopper_email.setter
    def shopper_email(self, shopper_email):
        """Sets the shopper_email of this CheckoutVoucherAction.

        The shopper email.

        :param shopper_email: The shopper_email of this CheckoutVoucherAction.
        :type shopper_email: str
        """

        self._shopper_email = shopper_email

    @property
    def shopper_name(self):
        """Gets the shopper_name of this CheckoutVoucherAction.

        The shopper name.

        :return: The shopper_name of this CheckoutVoucherAction.
        :rtype: str
        """
        return self._shopper_name

    @shopper_name.setter
    def shopper_name(self, shopper_name):
        """Sets the shopper_name of this CheckoutVoucherAction.

        The shopper name.

        :param shopper_name: The shopper_name of this CheckoutVoucherAction.
        :type shopper_name: str
        """

        self._shopper_name = shopper_name

    @property
    def surcharge(self):
        """Gets the surcharge of this CheckoutVoucherAction.

        The surcharge amount.

        :return: The surcharge of this CheckoutVoucherAction.
        :rtype: Amount
        """
        return self._surcharge

    @surcharge.setter
    def surcharge(self, surcharge):
        """Sets the surcharge of this CheckoutVoucherAction.

        The surcharge amount.

        :param surcharge: The surcharge of this CheckoutVoucherAction.
        :type surcharge: Amount
        """

        self._surcharge = surcharge

    @property
    def total_amount(self):
        """Gets the total_amount of this CheckoutVoucherAction.

        The total amount (initial plus surcharge amount).

        :return: The total_amount of this CheckoutVoucherAction.
        :rtype: Amount
        """
        return self._total_amount

    @total_amount.setter
    def total_amount(self, total_amount):
        """Sets the total_amount of this CheckoutVoucherAction.

        The total amount (initial plus surcharge amount).

        :param total_amount: The total_amount of this CheckoutVoucherAction.
        :type total_amount: Amount
        """

        self._total_amount = total_amount

    @property
    def type(self):
        """Gets the type of this CheckoutVoucherAction.

        **voucher**

        :return: The type of this CheckoutVoucherAction.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this CheckoutVoucherAction.

        **voucher**

        :param type: The type of this CheckoutVoucherAction.
        :type type: str
        """
        allowed_values = ["voucher"]  # noqa: E501
        if type not in allowed_values:
            raise ValueError(
                "Invalid value for `type` ({0}), must be one of {1}"
                .format(type, allowed_values)
            )

        self._type = type

    @property
    def url(self):
        """Gets the url of this CheckoutVoucherAction.

        Specifies the URL to redirect to.

        :return: The url of this CheckoutVoucherAction.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this CheckoutVoucherAction.

        Specifies the URL to redirect to.

        :param url: The url of this CheckoutVoucherAction.
        :type url: str
        """

        self._url = url
