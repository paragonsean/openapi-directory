/*
 * Adyen Checkout API
 * Adyen Checkout API provides a simple and flexible way to initiate and authorise online payments. You can use the same integration for payments made with cards (including 3D Secure), mobile wallets, and local payment methods (for example, iDEAL and Sofort).  This API reference provides information on available endpoints and how to interact with them. To learn more about the API, visit [online payments documentation](https://docs.adyen.com/online-payments).  ## Authentication Each request to Checkout API must be signed with an API key. For this, [get your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) from your Customer Area, and set this key to the `X-API-Key` header value, for example:  ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ``` ## Versioning Checkout API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://checkout-test.adyen.com/v64/payments ```  ## Going live  To access the live endpoints, you need an API key from your live Customer Area.  The live endpoint URLs contain a prefix which is unique to your company account, for example: ``` https://{PREFIX}-checkout-live.adyenpayments.com/checkout/v64/payments ```  Get your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.  When preparing to do live transactions with Checkout API, follow the [go-live checklist](https://docs.adyen.com/online-payments/go-live-checklist) to make sure you've got all the required configuration in place.  ## Release notes Have a look at the [release notes](https://docs.adyen.com/online-payments/release-notes?integration_type=api&version=64) to find out what changed in this version!
 *
 * The version of the OpenAPI document: 64
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for CardDonations
 */
public class CardDonationsTest {
    private final CardDonations model = new CardDonations();

    /**
     * Model tests for CardDonations
     */
    @Test
    public void testCardDonations() {
        // TODO: test CardDonations
    }

    /**
     * Test the property 'brand'
     */
    @Test
    public void brandTest() {
        // TODO: test brand
    }

    /**
     * Test the property 'cupsecureplusSmscode'
     */
    @Test
    public void cupsecureplusSmscodeTest() {
        // TODO: test cupsecureplusSmscode
    }

    /**
     * Test the property 'cvc'
     */
    @Test
    public void cvcTest() {
        // TODO: test cvc
    }

    /**
     * Test the property 'encryptedCardNumber'
     */
    @Test
    public void encryptedCardNumberTest() {
        // TODO: test encryptedCardNumber
    }

    /**
     * Test the property 'encryptedExpiryMonth'
     */
    @Test
    public void encryptedExpiryMonthTest() {
        // TODO: test encryptedExpiryMonth
    }

    /**
     * Test the property 'encryptedExpiryYear'
     */
    @Test
    public void encryptedExpiryYearTest() {
        // TODO: test encryptedExpiryYear
    }

    /**
     * Test the property 'encryptedSecurityCode'
     */
    @Test
    public void encryptedSecurityCodeTest() {
        // TODO: test encryptedSecurityCode
    }

    /**
     * Test the property 'expiryMonth'
     */
    @Test
    public void expiryMonthTest() {
        // TODO: test expiryMonth
    }

    /**
     * Test the property 'expiryYear'
     */
    @Test
    public void expiryYearTest() {
        // TODO: test expiryYear
    }

    /**
     * Test the property 'fundingSource'
     */
    @Test
    public void fundingSourceTest() {
        // TODO: test fundingSource
    }

    /**
     * Test the property 'holderName'
     */
    @Test
    public void holderNameTest() {
        // TODO: test holderName
    }

    /**
     * Test the property 'networkPaymentReference'
     */
    @Test
    public void networkPaymentReferenceTest() {
        // TODO: test networkPaymentReference
    }

    /**
     * Test the property 'number'
     */
    @Test
    public void numberTest() {
        // TODO: test number
    }

    /**
     * Test the property 'recurringDetailReference'
     */
    @Test
    public void recurringDetailReferenceTest() {
        // TODO: test recurringDetailReference
    }

    /**
     * Test the property 'shopperNotificationReference'
     */
    @Test
    public void shopperNotificationReferenceTest() {
        // TODO: test shopperNotificationReference
    }

    /**
     * Test the property 'storedPaymentMethodId'
     */
    @Test
    public void storedPaymentMethodIdTest() {
        // TODO: test storedPaymentMethodId
    }

    /**
     * Test the property 'threeDS2SdkVersion'
     */
    @Test
    public void threeDS2SdkVersionTest() {
        // TODO: test threeDS2SdkVersion
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

}
