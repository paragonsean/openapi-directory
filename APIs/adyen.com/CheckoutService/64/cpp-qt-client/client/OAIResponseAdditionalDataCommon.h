/**
 * Adyen Checkout API
 * Adyen Checkout API provides a simple and flexible way to initiate and authorise online payments. You can use the same integration for payments made with cards (including 3D Secure), mobile wallets, and local payment methods (for example, iDEAL and Sofort).  This API reference provides information on available endpoints and how to interact with them. To learn more about the API, visit [online payments documentation](https://docs.adyen.com/online-payments).  ## Authentication Each request to Checkout API must be signed with an API key. For this, [get your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) from your Customer Area, and set this key to the `X-API-Key` header value, for example:  ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ``` ## Versioning Checkout API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://checkout-test.adyen.com/v64/payments ```  ## Going live  To access the live endpoints, you need an API key from your live Customer Area.  The live endpoint URLs contain a prefix which is unique to your company account, for example: ``` https://{PREFIX}-checkout-live.adyenpayments.com/checkout/v64/payments ```  Get your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.  When preparing to do live transactions with Checkout API, follow the [go-live checklist](https://docs.adyen.com/online-payments/go-live-checklist) to make sure you've got all the required configuration in place.  ## Release notes Have a look at the [release notes](https://docs.adyen.com/online-payments/release-notes?integration_type=api&version=64) to find out what changed in this version!
 *
 * The version of the OpenAPI document: 64
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIResponseAdditionalDataCommon.h
 *
 * 
 */

#ifndef OAIResponseAdditionalDataCommon_H
#define OAIResponseAdditionalDataCommon_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIResponseAdditionalDataCommon : public OAIObject {
public:
    OAIResponseAdditionalDataCommon();
    OAIResponseAdditionalDataCommon(QString json);
    ~OAIResponseAdditionalDataCommon() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAcquirerAccountCode() const;
    void setAcquirerAccountCode(const QString &acquirer_account_code);
    bool is_acquirer_account_code_Set() const;
    bool is_acquirer_account_code_Valid() const;

    QString getAcquirerCode() const;
    void setAcquirerCode(const QString &acquirer_code);
    bool is_acquirer_code_Set() const;
    bool is_acquirer_code_Valid() const;

    QString getAcquirerReference() const;
    void setAcquirerReference(const QString &acquirer_reference);
    bool is_acquirer_reference_Set() const;
    bool is_acquirer_reference_Valid() const;

    QString getAlias() const;
    void setAlias(const QString &alias);
    bool is_alias_Set() const;
    bool is_alias_Valid() const;

    QString getAliasType() const;
    void setAliasType(const QString &alias_type);
    bool is_alias_type_Set() const;
    bool is_alias_type_Valid() const;

    QString getAuthCode() const;
    void setAuthCode(const QString &auth_code);
    bool is_auth_code_Set() const;
    bool is_auth_code_Valid() const;

    QString getAuthorisationMid() const;
    void setAuthorisationMid(const QString &authorisation_mid);
    bool is_authorisation_mid_Set() const;
    bool is_authorisation_mid_Valid() const;

    QString getAuthorisedAmountCurrency() const;
    void setAuthorisedAmountCurrency(const QString &authorised_amount_currency);
    bool is_authorised_amount_currency_Set() const;
    bool is_authorised_amount_currency_Valid() const;

    QString getAuthorisedAmountValue() const;
    void setAuthorisedAmountValue(const QString &authorised_amount_value);
    bool is_authorised_amount_value_Set() const;
    bool is_authorised_amount_value_Valid() const;

    QString getAvsResult() const;
    void setAvsResult(const QString &avs_result);
    bool is_avs_result_Set() const;
    bool is_avs_result_Valid() const;

    QString getAvsResultRaw() const;
    void setAvsResultRaw(const QString &avs_result_raw);
    bool is_avs_result_raw_Set() const;
    bool is_avs_result_raw_Valid() const;

    QString getBic() const;
    void setBic(const QString &bic);
    bool is_bic_Set() const;
    bool is_bic_Valid() const;

    QString getCoBrandedWith() const;
    void setCoBrandedWith(const QString &co_branded_with);
    bool is_co_branded_with_Set() const;
    bool is_co_branded_with_Valid() const;

    QString getCvcResult() const;
    void setCvcResult(const QString &cvc_result);
    bool is_cvc_result_Set() const;
    bool is_cvc_result_Valid() const;

    QString getCvcResultRaw() const;
    void setCvcResultRaw(const QString &cvc_result_raw);
    bool is_cvc_result_raw_Set() const;
    bool is_cvc_result_raw_Valid() const;

    QString getDsTransId() const;
    void setDsTransId(const QString &ds_trans_id);
    bool is_ds_trans_id_Set() const;
    bool is_ds_trans_id_Valid() const;

    QString getEci() const;
    void setEci(const QString &eci);
    bool is_eci_Set() const;
    bool is_eci_Valid() const;

    QString getExpiryDate() const;
    void setExpiryDate(const QString &expiry_date);
    bool is_expiry_date_Set() const;
    bool is_expiry_date_Valid() const;

    QString getExtraCostsCurrency() const;
    void setExtraCostsCurrency(const QString &extra_costs_currency);
    bool is_extra_costs_currency_Set() const;
    bool is_extra_costs_currency_Valid() const;

    QString getExtraCostsValue() const;
    void setExtraCostsValue(const QString &extra_costs_value);
    bool is_extra_costs_value_Set() const;
    bool is_extra_costs_value_Valid() const;

    QString getFraudCheckItemNrFraudCheckname() const;
    void setFraudCheckItemNrFraudCheckname(const QString &fraud_check__item_nr__fraud_checkname);
    bool is_fraud_check__item_nr__fraud_checkname_Set() const;
    bool is_fraud_check__item_nr__fraud_checkname_Valid() const;

    QString getFraudManualReview() const;
    void setFraudManualReview(const QString &fraud_manual_review);
    bool is_fraud_manual_review_Set() const;
    bool is_fraud_manual_review_Valid() const;

    QString getFraudResultType() const;
    void setFraudResultType(const QString &fraud_result_type);
    bool is_fraud_result_type_Set() const;
    bool is_fraud_result_type_Valid() const;

    QString getFundingSource() const;
    void setFundingSource(const QString &funding_source);
    bool is_funding_source_Set() const;
    bool is_funding_source_Valid() const;

    QString getFundsAvailability() const;
    void setFundsAvailability(const QString &funds_availability);
    bool is_funds_availability_Set() const;
    bool is_funds_availability_Valid() const;

    QString getInferredRefusalReason() const;
    void setInferredRefusalReason(const QString &inferred_refusal_reason);
    bool is_inferred_refusal_reason_Set() const;
    bool is_inferred_refusal_reason_Valid() const;

    QString getIsCardCommercial() const;
    void setIsCardCommercial(const QString &is_card_commercial);
    bool is_is_card_commercial_Set() const;
    bool is_is_card_commercial_Valid() const;

    QString getIssuerCountry() const;
    void setIssuerCountry(const QString &issuer_country);
    bool is_issuer_country_Set() const;
    bool is_issuer_country_Valid() const;

    QString getLiabilityShift() const;
    void setLiabilityShift(const QString &liability_shift);
    bool is_liability_shift_Set() const;
    bool is_liability_shift_Valid() const;

    QString getMcBankNetReferenceNumber() const;
    void setMcBankNetReferenceNumber(const QString &mc_bank_net_reference_number);
    bool is_mc_bank_net_reference_number_Set() const;
    bool is_mc_bank_net_reference_number_Valid() const;

    QString getMerchantAdviceCode() const;
    void setMerchantAdviceCode(const QString &merchant_advice_code);
    bool is_merchant_advice_code_Set() const;
    bool is_merchant_advice_code_Valid() const;

    QString getMerchantReference() const;
    void setMerchantReference(const QString &merchant_reference);
    bool is_merchant_reference_Set() const;
    bool is_merchant_reference_Valid() const;

    QString getNetworkTxReference() const;
    void setNetworkTxReference(const QString &network_tx_reference);
    bool is_network_tx_reference_Set() const;
    bool is_network_tx_reference_Valid() const;

    QString getNonSchemeTransactionLimit() const;
    void setNonSchemeTransactionLimit(const QString &non_scheme_transaction_limit);
    bool is_non_scheme_transaction_limit_Set() const;
    bool is_non_scheme_transaction_limit_Valid() const;

    QString getNonSchemeTransactionLimitCcy() const;
    void setNonSchemeTransactionLimitCcy(const QString &non_scheme_transaction_limit_ccy);
    bool is_non_scheme_transaction_limit_ccy_Set() const;
    bool is_non_scheme_transaction_limit_ccy_Valid() const;

    QString getOwnerName() const;
    void setOwnerName(const QString &owner_name);
    bool is_owner_name_Set() const;
    bool is_owner_name_Valid() const;

    QString getPaymentAccountReference() const;
    void setPaymentAccountReference(const QString &payment_account_reference);
    bool is_payment_account_reference_Set() const;
    bool is_payment_account_reference_Valid() const;

    QString getPaymentMethod() const;
    void setPaymentMethod(const QString &payment_method);
    bool is_payment_method_Set() const;
    bool is_payment_method_Valid() const;

    QString getPaymentMethodVariant() const;
    void setPaymentMethodVariant(const QString &payment_method_variant);
    bool is_payment_method_variant_Set() const;
    bool is_payment_method_variant_Valid() const;

    QString getPayoutEligible() const;
    void setPayoutEligible(const QString &payout_eligible);
    bool is_payout_eligible_Set() const;
    bool is_payout_eligible_Valid() const;

    QString getRealtimeAccountUpdaterStatus() const;
    void setRealtimeAccountUpdaterStatus(const QString &realtime_account_updater_status);
    bool is_realtime_account_updater_status_Set() const;
    bool is_realtime_account_updater_status_Valid() const;

    QString getReceiptFreeText() const;
    void setReceiptFreeText(const QString &receipt_free_text);
    bool is_receipt_free_text_Set() const;
    bool is_receipt_free_text_Valid() const;

    QString getRecurringContractTypes() const;
    void setRecurringContractTypes(const QString &recurring_contract_types);
    bool is_recurring_contract_types_Set() const;
    bool is_recurring_contract_types_Valid() const;

    QString getRecurringFirstPspReference() const;
    void setRecurringFirstPspReference(const QString &recurring_first_psp_reference);
    bool is_recurring_first_psp_reference_Set() const;
    bool is_recurring_first_psp_reference_Valid() const;

    QString getRecurringRecurringDetailReference() const;
    void setRecurringRecurringDetailReference(const QString &recurring_recurring_detail_reference);
    bool is_recurring_recurring_detail_reference_Set() const;
    bool is_recurring_recurring_detail_reference_Valid() const;

    QString getRecurringShopperReference() const;
    void setRecurringShopperReference(const QString &recurring_shopper_reference);
    bool is_recurring_shopper_reference_Set() const;
    bool is_recurring_shopper_reference_Valid() const;

    QString getRecurringProcessingModel() const;
    void setRecurringProcessingModel(const QString &recurring_processing_model);
    bool is_recurring_processing_model_Set() const;
    bool is_recurring_processing_model_Valid() const;

    QString getReferred() const;
    void setReferred(const QString &referred);
    bool is_referred_Set() const;
    bool is_referred_Valid() const;

    QString getRefusalReasonRaw() const;
    void setRefusalReasonRaw(const QString &refusal_reason_raw);
    bool is_refusal_reason_raw_Set() const;
    bool is_refusal_reason_raw_Valid() const;

    QString getRequestAmount() const;
    void setRequestAmount(const QString &request_amount);
    bool is_request_amount_Set() const;
    bool is_request_amount_Valid() const;

    QString getRequestCurrencyCode() const;
    void setRequestCurrencyCode(const QString &request_currency_code);
    bool is_request_currency_code_Set() const;
    bool is_request_currency_code_Valid() const;

    QString getShopperInteraction() const;
    void setShopperInteraction(const QString &shopper_interaction);
    bool is_shopper_interaction_Set() const;
    bool is_shopper_interaction_Valid() const;

    QString getShopperReference() const;
    void setShopperReference(const QString &shopper_reference);
    bool is_shopper_reference_Set() const;
    bool is_shopper_reference_Valid() const;

    QString getTerminalId() const;
    void setTerminalId(const QString &terminal_id);
    bool is_terminal_id_Set() const;
    bool is_terminal_id_Valid() const;

    QString getThreeDAuthenticated() const;
    void setThreeDAuthenticated(const QString &three_d_authenticated);
    bool is_three_d_authenticated_Set() const;
    bool is_three_d_authenticated_Valid() const;

    QString getThreeDAuthenticatedResponse() const;
    void setThreeDAuthenticatedResponse(const QString &three_d_authenticated_response);
    bool is_three_d_authenticated_response_Set() const;
    bool is_three_d_authenticated_response_Valid() const;

    QString getThreeDOffered() const;
    void setThreeDOffered(const QString &three_d_offered);
    bool is_three_d_offered_Set() const;
    bool is_three_d_offered_Valid() const;

    QString getThreeDOfferedResponse() const;
    void setThreeDOfferedResponse(const QString &three_d_offered_response);
    bool is_three_d_offered_response_Set() const;
    bool is_three_d_offered_response_Valid() const;

    QString getThreeDsVersion() const;
    void setThreeDsVersion(const QString &three_ds_version);
    bool is_three_ds_version_Set() const;
    bool is_three_ds_version_Valid() const;

    QString getVisaTransactionId() const;
    void setVisaTransactionId(const QString &visa_transaction_id);
    bool is_visa_transaction_id_Set() const;
    bool is_visa_transaction_id_Valid() const;

    QString getXid() const;
    void setXid(const QString &xid);
    bool is_xid_Set() const;
    bool is_xid_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_acquirer_account_code;
    bool m_acquirer_account_code_isSet;
    bool m_acquirer_account_code_isValid;

    QString m_acquirer_code;
    bool m_acquirer_code_isSet;
    bool m_acquirer_code_isValid;

    QString m_acquirer_reference;
    bool m_acquirer_reference_isSet;
    bool m_acquirer_reference_isValid;

    QString m_alias;
    bool m_alias_isSet;
    bool m_alias_isValid;

    QString m_alias_type;
    bool m_alias_type_isSet;
    bool m_alias_type_isValid;

    QString m_auth_code;
    bool m_auth_code_isSet;
    bool m_auth_code_isValid;

    QString m_authorisation_mid;
    bool m_authorisation_mid_isSet;
    bool m_authorisation_mid_isValid;

    QString m_authorised_amount_currency;
    bool m_authorised_amount_currency_isSet;
    bool m_authorised_amount_currency_isValid;

    QString m_authorised_amount_value;
    bool m_authorised_amount_value_isSet;
    bool m_authorised_amount_value_isValid;

    QString m_avs_result;
    bool m_avs_result_isSet;
    bool m_avs_result_isValid;

    QString m_avs_result_raw;
    bool m_avs_result_raw_isSet;
    bool m_avs_result_raw_isValid;

    QString m_bic;
    bool m_bic_isSet;
    bool m_bic_isValid;

    QString m_co_branded_with;
    bool m_co_branded_with_isSet;
    bool m_co_branded_with_isValid;

    QString m_cvc_result;
    bool m_cvc_result_isSet;
    bool m_cvc_result_isValid;

    QString m_cvc_result_raw;
    bool m_cvc_result_raw_isSet;
    bool m_cvc_result_raw_isValid;

    QString m_ds_trans_id;
    bool m_ds_trans_id_isSet;
    bool m_ds_trans_id_isValid;

    QString m_eci;
    bool m_eci_isSet;
    bool m_eci_isValid;

    QString m_expiry_date;
    bool m_expiry_date_isSet;
    bool m_expiry_date_isValid;

    QString m_extra_costs_currency;
    bool m_extra_costs_currency_isSet;
    bool m_extra_costs_currency_isValid;

    QString m_extra_costs_value;
    bool m_extra_costs_value_isSet;
    bool m_extra_costs_value_isValid;

    QString m_fraud_check__item_nr__fraud_checkname;
    bool m_fraud_check__item_nr__fraud_checkname_isSet;
    bool m_fraud_check__item_nr__fraud_checkname_isValid;

    QString m_fraud_manual_review;
    bool m_fraud_manual_review_isSet;
    bool m_fraud_manual_review_isValid;

    QString m_fraud_result_type;
    bool m_fraud_result_type_isSet;
    bool m_fraud_result_type_isValid;

    QString m_funding_source;
    bool m_funding_source_isSet;
    bool m_funding_source_isValid;

    QString m_funds_availability;
    bool m_funds_availability_isSet;
    bool m_funds_availability_isValid;

    QString m_inferred_refusal_reason;
    bool m_inferred_refusal_reason_isSet;
    bool m_inferred_refusal_reason_isValid;

    QString m_is_card_commercial;
    bool m_is_card_commercial_isSet;
    bool m_is_card_commercial_isValid;

    QString m_issuer_country;
    bool m_issuer_country_isSet;
    bool m_issuer_country_isValid;

    QString m_liability_shift;
    bool m_liability_shift_isSet;
    bool m_liability_shift_isValid;

    QString m_mc_bank_net_reference_number;
    bool m_mc_bank_net_reference_number_isSet;
    bool m_mc_bank_net_reference_number_isValid;

    QString m_merchant_advice_code;
    bool m_merchant_advice_code_isSet;
    bool m_merchant_advice_code_isValid;

    QString m_merchant_reference;
    bool m_merchant_reference_isSet;
    bool m_merchant_reference_isValid;

    QString m_network_tx_reference;
    bool m_network_tx_reference_isSet;
    bool m_network_tx_reference_isValid;

    QString m_non_scheme_transaction_limit;
    bool m_non_scheme_transaction_limit_isSet;
    bool m_non_scheme_transaction_limit_isValid;

    QString m_non_scheme_transaction_limit_ccy;
    bool m_non_scheme_transaction_limit_ccy_isSet;
    bool m_non_scheme_transaction_limit_ccy_isValid;

    QString m_owner_name;
    bool m_owner_name_isSet;
    bool m_owner_name_isValid;

    QString m_payment_account_reference;
    bool m_payment_account_reference_isSet;
    bool m_payment_account_reference_isValid;

    QString m_payment_method;
    bool m_payment_method_isSet;
    bool m_payment_method_isValid;

    QString m_payment_method_variant;
    bool m_payment_method_variant_isSet;
    bool m_payment_method_variant_isValid;

    QString m_payout_eligible;
    bool m_payout_eligible_isSet;
    bool m_payout_eligible_isValid;

    QString m_realtime_account_updater_status;
    bool m_realtime_account_updater_status_isSet;
    bool m_realtime_account_updater_status_isValid;

    QString m_receipt_free_text;
    bool m_receipt_free_text_isSet;
    bool m_receipt_free_text_isValid;

    QString m_recurring_contract_types;
    bool m_recurring_contract_types_isSet;
    bool m_recurring_contract_types_isValid;

    QString m_recurring_first_psp_reference;
    bool m_recurring_first_psp_reference_isSet;
    bool m_recurring_first_psp_reference_isValid;

    QString m_recurring_recurring_detail_reference;
    bool m_recurring_recurring_detail_reference_isSet;
    bool m_recurring_recurring_detail_reference_isValid;

    QString m_recurring_shopper_reference;
    bool m_recurring_shopper_reference_isSet;
    bool m_recurring_shopper_reference_isValid;

    QString m_recurring_processing_model;
    bool m_recurring_processing_model_isSet;
    bool m_recurring_processing_model_isValid;

    QString m_referred;
    bool m_referred_isSet;
    bool m_referred_isValid;

    QString m_refusal_reason_raw;
    bool m_refusal_reason_raw_isSet;
    bool m_refusal_reason_raw_isValid;

    QString m_request_amount;
    bool m_request_amount_isSet;
    bool m_request_amount_isValid;

    QString m_request_currency_code;
    bool m_request_currency_code_isSet;
    bool m_request_currency_code_isValid;

    QString m_shopper_interaction;
    bool m_shopper_interaction_isSet;
    bool m_shopper_interaction_isValid;

    QString m_shopper_reference;
    bool m_shopper_reference_isSet;
    bool m_shopper_reference_isValid;

    QString m_terminal_id;
    bool m_terminal_id_isSet;
    bool m_terminal_id_isValid;

    QString m_three_d_authenticated;
    bool m_three_d_authenticated_isSet;
    bool m_three_d_authenticated_isValid;

    QString m_three_d_authenticated_response;
    bool m_three_d_authenticated_response_isSet;
    bool m_three_d_authenticated_response_isValid;

    QString m_three_d_offered;
    bool m_three_d_offered_isSet;
    bool m_three_d_offered_isValid;

    QString m_three_d_offered_response;
    bool m_three_d_offered_response_isSet;
    bool m_three_d_offered_response_isValid;

    QString m_three_ds_version;
    bool m_three_ds_version_isSet;
    bool m_three_ds_version_isValid;

    QString m_visa_transaction_id;
    bool m_visa_transaction_id_isSet;
    bool m_visa_transaction_id_isValid;

    QString m_xid;
    bool m_xid_isSet;
    bool m_xid_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIResponseAdditionalDataCommon)

#endif // OAIResponseAdditionalDataCommon_H
