# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.address import Address
from openapi_server.models.name import Name
from openapi_server import util


class FundOrigin(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, billing_address: Address=None, shopper_email: str=None, shopper_name: Name=None, telephone_number: str=None, wallet_identifier: str=None):
        """FundOrigin - a model defined in OpenAPI

        :param billing_address: The billing_address of this FundOrigin.
        :param shopper_email: The shopper_email of this FundOrigin.
        :param shopper_name: The shopper_name of this FundOrigin.
        :param telephone_number: The telephone_number of this FundOrigin.
        :param wallet_identifier: The wallet_identifier of this FundOrigin.
        """
        self.openapi_types = {
            'billing_address': Address,
            'shopper_email': str,
            'shopper_name': Name,
            'telephone_number': str,
            'wallet_identifier': str
        }

        self.attribute_map = {
            'billing_address': 'billingAddress',
            'shopper_email': 'shopperEmail',
            'shopper_name': 'shopperName',
            'telephone_number': 'telephoneNumber',
            'wallet_identifier': 'walletIdentifier'
        }

        self._billing_address = billing_address
        self._shopper_email = shopper_email
        self._shopper_name = shopper_name
        self._telephone_number = telephone_number
        self._wallet_identifier = wallet_identifier

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FundOrigin':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FundOrigin of this FundOrigin.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def billing_address(self):
        """Gets the billing_address of this FundOrigin.

        The address where to send the invoice.

        :return: The billing_address of this FundOrigin.
        :rtype: Address
        """
        return self._billing_address

    @billing_address.setter
    def billing_address(self, billing_address):
        """Sets the billing_address of this FundOrigin.

        The address where to send the invoice.

        :param billing_address: The billing_address of this FundOrigin.
        :type billing_address: Address
        """

        self._billing_address = billing_address

    @property
    def shopper_email(self):
        """Gets the shopper_email of this FundOrigin.

        Email address of the person.

        :return: The shopper_email of this FundOrigin.
        :rtype: str
        """
        return self._shopper_email

    @shopper_email.setter
    def shopper_email(self, shopper_email):
        """Sets the shopper_email of this FundOrigin.

        Email address of the person.

        :param shopper_email: The shopper_email of this FundOrigin.
        :type shopper_email: str
        """

        self._shopper_email = shopper_email

    @property
    def shopper_name(self):
        """Gets the shopper_name of this FundOrigin.

        The name of the person

        :return: The shopper_name of this FundOrigin.
        :rtype: Name
        """
        return self._shopper_name

    @shopper_name.setter
    def shopper_name(self, shopper_name):
        """Sets the shopper_name of this FundOrigin.

        The name of the person

        :param shopper_name: The shopper_name of this FundOrigin.
        :type shopper_name: Name
        """

        self._shopper_name = shopper_name

    @property
    def telephone_number(self):
        """Gets the telephone_number of this FundOrigin.

        Phone number of the person

        :return: The telephone_number of this FundOrigin.
        :rtype: str
        """
        return self._telephone_number

    @telephone_number.setter
    def telephone_number(self, telephone_number):
        """Sets the telephone_number of this FundOrigin.

        Phone number of the person

        :param telephone_number: The telephone_number of this FundOrigin.
        :type telephone_number: str
        """

        self._telephone_number = telephone_number

    @property
    def wallet_identifier(self):
        """Gets the wallet_identifier of this FundOrigin.


        :return: The wallet_identifier of this FundOrigin.
        :rtype: str
        """
        return self._wallet_identifier

    @wallet_identifier.setter
    def wallet_identifier(self, wallet_identifier):
        """Sets the wallet_identifier of this FundOrigin.


        :param wallet_identifier: The wallet_identifier of this FundOrigin.
        :type wallet_identifier: str
        """

        self._wallet_identifier = wallet_identifier
