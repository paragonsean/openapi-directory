/**
 * Adyen Checkout API
 * Adyen Checkout API provides a simple and flexible way to initiate and authorise online payments. You can use the same integration for payments made with cards (including 3D Secure), mobile wallets, and local payment methods (for example, iDEAL and Sofort).  This API reference provides information on available endpoints and how to interact with them. To learn more about the API, visit [online payments documentation](https://docs.adyen.com/online-payments).  ## Authentication Each request to Checkout API must be signed with an API key. For this, [get your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) from your Customer Area, and set this key to the `X-API-Key` header value, for example:  ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ``` ## Versioning Checkout API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://checkout-test.adyen.com/v37/payments ```  ## Going live  To access the live endpoints, you need an API key from your live Customer Area.  The live endpoint URLs contain a prefix which is unique to your company account, for example: ``` https://{PREFIX}-checkout-live.adyenpayments.com/checkout/v37/payments ```  Get your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.  When preparing to do live transactions with Checkout API, follow the [go-live checklist](https://docs.adyen.com/online-payments/go-live-checklist) to make sure you've got all the required configuration in place.  ## Release notes Have a look at the [release notes](https://docs.adyen.com/online-payments/release-notes?integration_type=api&version=37) to find out what changed in this version!
 *
 * The version of the OpenAPI document: 37
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIResponseAdditionalData3DSecure.h
 *
 * 
 */

#ifndef OAIResponseAdditionalData3DSecure_H
#define OAIResponseAdditionalData3DSecure_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIResponseAdditionalData3DSecure : public OAIObject {
public:
    OAIResponseAdditionalData3DSecure();
    OAIResponseAdditionalData3DSecure(QString json);
    ~OAIResponseAdditionalData3DSecure() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCardHolderInfo() const;
    void setCardHolderInfo(const QString &card_holder_info);
    bool is_card_holder_info_Set() const;
    bool is_card_holder_info_Valid() const;

    QString getCavv() const;
    void setCavv(const QString &cavv);
    bool is_cavv_Set() const;
    bool is_cavv_Valid() const;

    QString getCavvAlgorithm() const;
    void setCavvAlgorithm(const QString &cavv_algorithm);
    bool is_cavv_algorithm_Set() const;
    bool is_cavv_algorithm_Valid() const;

    QString getScaExemptionRequested() const;
    void setScaExemptionRequested(const QString &sca_exemption_requested);
    bool is_sca_exemption_requested_Set() const;
    bool is_sca_exemption_requested_Valid() const;

    bool isThreeds2CardEnrolled() const;
    void setThreeds2CardEnrolled(const bool &threeds2_card_enrolled);
    bool is_threeds2_card_enrolled_Set() const;
    bool is_threeds2_card_enrolled_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_card_holder_info;
    bool m_card_holder_info_isSet;
    bool m_card_holder_info_isValid;

    QString m_cavv;
    bool m_cavv_isSet;
    bool m_cavv_isValid;

    QString m_cavv_algorithm;
    bool m_cavv_algorithm_isSet;
    bool m_cavv_algorithm_isValid;

    QString m_sca_exemption_requested;
    bool m_sca_exemption_requested_isSet;
    bool m_sca_exemption_requested_isValid;

    bool m_threeds2_card_enrolled;
    bool m_threeds2_card_enrolled_isSet;
    bool m_threeds2_card_enrolled_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIResponseAdditionalData3DSecure)

#endif // OAIResponseAdditionalData3DSecure_H
