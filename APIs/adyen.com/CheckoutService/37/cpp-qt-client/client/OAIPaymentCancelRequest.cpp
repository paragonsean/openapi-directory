/**
 * Adyen Checkout API
 * Adyen Checkout API provides a simple and flexible way to initiate and authorise online payments. You can use the same integration for payments made with cards (including 3D Secure), mobile wallets, and local payment methods (for example, iDEAL and Sofort).  This API reference provides information on available endpoints and how to interact with them. To learn more about the API, visit [online payments documentation](https://docs.adyen.com/online-payments).  ## Authentication Each request to Checkout API must be signed with an API key. For this, [get your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) from your Customer Area, and set this key to the `X-API-Key` header value, for example:  ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ``` ## Versioning Checkout API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://checkout-test.adyen.com/v37/payments ```  ## Going live  To access the live endpoints, you need an API key from your live Customer Area.  The live endpoint URLs contain a prefix which is unique to your company account, for example: ``` https://{PREFIX}-checkout-live.adyenpayments.com/checkout/v37/payments ```  Get your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.  When preparing to do live transactions with Checkout API, follow the [go-live checklist](https://docs.adyen.com/online-payments/go-live-checklist) to make sure you've got all the required configuration in place.  ## Release notes Have a look at the [release notes](https://docs.adyen.com/online-payments/release-notes?integration_type=api&version=37) to find out what changed in this version!
 *
 * The version of the OpenAPI document: 37
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPaymentCancelRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPaymentCancelRequest::OAIPaymentCancelRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPaymentCancelRequest::OAIPaymentCancelRequest() {
    this->initializeModel();
}

OAIPaymentCancelRequest::~OAIPaymentCancelRequest() {}

void OAIPaymentCancelRequest::initializeModel() {

    m_application_info_isSet = false;
    m_application_info_isValid = false;

    m_merchant_account_isSet = false;
    m_merchant_account_isValid = false;

    m_reference_isSet = false;
    m_reference_isValid = false;
}

void OAIPaymentCancelRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPaymentCancelRequest::fromJsonObject(QJsonObject json) {

    m_application_info_isValid = ::OpenAPI::fromJsonValue(m_application_info, json[QString("applicationInfo")]);
    m_application_info_isSet = !json[QString("applicationInfo")].isNull() && m_application_info_isValid;

    m_merchant_account_isValid = ::OpenAPI::fromJsonValue(m_merchant_account, json[QString("merchantAccount")]);
    m_merchant_account_isSet = !json[QString("merchantAccount")].isNull() && m_merchant_account_isValid;

    m_reference_isValid = ::OpenAPI::fromJsonValue(m_reference, json[QString("reference")]);
    m_reference_isSet = !json[QString("reference")].isNull() && m_reference_isValid;
}

QString OAIPaymentCancelRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPaymentCancelRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_application_info.isSet()) {
        obj.insert(QString("applicationInfo"), ::OpenAPI::toJsonValue(m_application_info));
    }
    if (m_merchant_account_isSet) {
        obj.insert(QString("merchantAccount"), ::OpenAPI::toJsonValue(m_merchant_account));
    }
    if (m_reference_isSet) {
        obj.insert(QString("reference"), ::OpenAPI::toJsonValue(m_reference));
    }
    return obj;
}

OAIApplicationInfo OAIPaymentCancelRequest::getApplicationInfo() const {
    return m_application_info;
}
void OAIPaymentCancelRequest::setApplicationInfo(const OAIApplicationInfo &application_info) {
    m_application_info = application_info;
    m_application_info_isSet = true;
}

bool OAIPaymentCancelRequest::is_application_info_Set() const{
    return m_application_info_isSet;
}

bool OAIPaymentCancelRequest::is_application_info_Valid() const{
    return m_application_info_isValid;
}

QString OAIPaymentCancelRequest::getMerchantAccount() const {
    return m_merchant_account;
}
void OAIPaymentCancelRequest::setMerchantAccount(const QString &merchant_account) {
    m_merchant_account = merchant_account;
    m_merchant_account_isSet = true;
}

bool OAIPaymentCancelRequest::is_merchant_account_Set() const{
    return m_merchant_account_isSet;
}

bool OAIPaymentCancelRequest::is_merchant_account_Valid() const{
    return m_merchant_account_isValid;
}

QString OAIPaymentCancelRequest::getReference() const {
    return m_reference;
}
void OAIPaymentCancelRequest::setReference(const QString &reference) {
    m_reference = reference;
    m_reference_isSet = true;
}

bool OAIPaymentCancelRequest::is_reference_Set() const{
    return m_reference_isSet;
}

bool OAIPaymentCancelRequest::is_reference_Valid() const{
    return m_reference_isValid;
}

bool OAIPaymentCancelRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_application_info.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_merchant_account_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_reference_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPaymentCancelRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_merchant_account_isValid && true;
}

} // namespace OpenAPI
