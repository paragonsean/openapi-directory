/**
 * Adyen Checkout API
 * Adyen Checkout API provides a simple and flexible way to initiate and authorise online payments. You can use the same integration for payments made with cards (including 3D Secure), mobile wallets, and local payment methods (for example, iDEAL and Sofort).  This API reference provides information on available endpoints and how to interact with them. To learn more about the API, visit [online payments documentation](https://docs.adyen.com/online-payments).  ## Authentication Each request to Checkout API must be signed with an API key. For this, [get your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) from your Customer Area, and set this key to the `X-API-Key` header value, for example:  ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ``` ## Versioning Checkout API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://checkout-test.adyen.com/v37/payments ```  ## Going live  To access the live endpoints, you need an API key from your live Customer Area.  The live endpoint URLs contain a prefix which is unique to your company account, for example: ``` https://{PREFIX}-checkout-live.adyenpayments.com/checkout/v37/payments ```  Get your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.  When preparing to do live transactions with Checkout API, follow the [go-live checklist](https://docs.adyen.com/online-payments/go-live-checklist) to make sure you've got all the required configuration in place.  ## Release notes Have a look at the [release notes](https://docs.adyen.com/online-payments/release-notes?integration_type=api&version=37) to find out what changed in this version!
 *
 * The version of the OpenAPI document: 37
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateOrderResponse.h
 *
 * 
 */

#ifndef OAICreateOrderResponse_H
#define OAICreateOrderResponse_H

#include <QJsonObject>

#include "OAIAmount.h"
#include "OAIBalanceCheckResponse_additionalData.h"
#include "OAIFraudResult.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIBalanceCheckResponse_additionalData;
class OAIFraudResult;
class OAIAmount;

class OAICreateOrderResponse : public OAIObject {
public:
    OAICreateOrderResponse();
    OAICreateOrderResponse(QString json);
    ~OAICreateOrderResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIBalanceCheckResponse_additionalData getAdditionalData() const;
    void setAdditionalData(const OAIBalanceCheckResponse_additionalData &additional_data);
    bool is_additional_data_Set() const;
    bool is_additional_data_Valid() const;

    QString getExpiresAt() const;
    void setExpiresAt(const QString &expires_at);
    bool is_expires_at_Set() const;
    bool is_expires_at_Valid() const;

    OAIFraudResult getFraudResult() const;
    void setFraudResult(const OAIFraudResult &fraud_result);
    bool is_fraud_result_Set() const;
    bool is_fraud_result_Valid() const;

    QString getOrderData() const;
    void setOrderData(const QString &order_data);
    bool is_order_data_Set() const;
    bool is_order_data_Valid() const;

    QString getPspReference() const;
    void setPspReference(const QString &psp_reference);
    bool is_psp_reference_Set() const;
    bool is_psp_reference_Valid() const;

    QString getReference() const;
    void setReference(const QString &reference);
    bool is_reference_Set() const;
    bool is_reference_Valid() const;

    QString getRefusalReason() const;
    void setRefusalReason(const QString &refusal_reason);
    bool is_refusal_reason_Set() const;
    bool is_refusal_reason_Valid() const;

    OAIAmount getRemainingAmount() const;
    void setRemainingAmount(const OAIAmount &remaining_amount);
    bool is_remaining_amount_Set() const;
    bool is_remaining_amount_Valid() const;

    QString getResultCode() const;
    void setResultCode(const QString &result_code);
    bool is_result_code_Set() const;
    bool is_result_code_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIBalanceCheckResponse_additionalData m_additional_data;
    bool m_additional_data_isSet;
    bool m_additional_data_isValid;

    QString m_expires_at;
    bool m_expires_at_isSet;
    bool m_expires_at_isValid;

    OAIFraudResult m_fraud_result;
    bool m_fraud_result_isSet;
    bool m_fraud_result_isValid;

    QString m_order_data;
    bool m_order_data_isSet;
    bool m_order_data_isValid;

    QString m_psp_reference;
    bool m_psp_reference_isSet;
    bool m_psp_reference_isValid;

    QString m_reference;
    bool m_reference_isSet;
    bool m_reference_isValid;

    QString m_refusal_reason;
    bool m_refusal_reason_isSet;
    bool m_refusal_reason_isValid;

    OAIAmount m_remaining_amount;
    bool m_remaining_amount_isSet;
    bool m_remaining_amount_isValid;

    QString m_result_code;
    bool m_result_code_isSet;
    bool m_result_code_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateOrderResponse)

#endif // OAICreateOrderResponse_H
