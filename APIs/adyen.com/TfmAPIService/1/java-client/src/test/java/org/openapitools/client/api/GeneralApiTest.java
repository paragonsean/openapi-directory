/*
 * POS Terminal Management API
 * This API provides endpoints for managing your point-of-sale (POS) payment terminals. You can use the API to obtain information about a specific terminal, retrieve overviews of your terminals and stores, and assign terminals to a merchant account or store.  For more information, refer to [Assign terminals](https://docs.adyen.com/point-of-sale/automating-terminal-management/assign-terminals-api).  ## Authentication Each request to the Terminal Management API must be signed with an API key. For this, obtain an API Key from your Customer Area, as described in [How to get the API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key). Then set this key to the `X-API-Key` header value, for example:  ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: Your_API_key\" \\ ... ``` Note that when going live, you need to generate new web service user credentials to access the [live endpoints](https://docs.adyen.com/development-resources/live-endpoints).  ## Versioning Terminal Management API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://postfmapi-test.adyen.com/postfmapi/terminal/v1/getTerminalsUnderAccount ``` When using versioned endpoints, Boolean response values are returned in string format: `\"true\"` or `\"false\"`. If you omit the version from the endpoint URL, Boolean response values are returned like this: `true` or `false`.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AssignTerminalsRequest;
import org.openapitools.client.model.AssignTerminalsResponse;
import org.openapitools.client.model.FindTerminalRequest;
import org.openapitools.client.model.FindTerminalResponse;
import org.openapitools.client.model.GetStoresUnderAccountRequest;
import org.openapitools.client.model.GetStoresUnderAccountResponse;
import org.openapitools.client.model.GetTerminalDetailsRequest;
import org.openapitools.client.model.GetTerminalDetailsResponse;
import org.openapitools.client.model.GetTerminalsUnderAccountRequest;
import org.openapitools.client.model.GetTerminalsUnderAccountResponse;
import org.openapitools.client.model.ServiceError;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for GeneralApi
 */
@Disabled
public class GeneralApiTest {

    private final GeneralApi api = new GeneralApi();

    /**
     * Assign terminals
     *
     * Assigns one or more payment terminals to a merchant account or a store. You can also use this endpoint to reassign terminals between merchant accounts or stores, and to unassign a terminal and return it to company inventory.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postAssignTerminalsTest() throws ApiException {
        AssignTerminalsRequest assignTerminalsRequest = null;
        AssignTerminalsResponse response = api.postAssignTerminals(assignTerminalsRequest);
        // TODO: test validations
    }

    /**
     * Get the account or store of a terminal
     *
     * Returns the company account, merchant account, or store that a payment terminal is assigned to.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postFindTerminalTest() throws ApiException {
        FindTerminalRequest findTerminalRequest = null;
        FindTerminalResponse response = api.postFindTerminal(findTerminalRequest);
        // TODO: test validations
    }

    /**
     * Get the stores of an account
     *
     * Returns a list of stores associated with a company account or a merchant account, including the status of each store.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postGetStoresUnderAccountTest() throws ApiException {
        GetStoresUnderAccountRequest getStoresUnderAccountRequest = null;
        GetStoresUnderAccountResponse response = api.postGetStoresUnderAccount(getStoresUnderAccountRequest);
        // TODO: test validations
    }

    /**
     * Get the details of a terminal
     *
     * Returns the details of a payment terminal, including where the terminal is assigned to. The response returns the same details that are provided in the terminal list in your Customer Area and in the Terminal Fleet report.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postGetTerminalDetailsTest() throws ApiException {
        GetTerminalDetailsRequest getTerminalDetailsRequest = null;
        GetTerminalDetailsResponse response = api.postGetTerminalDetails(getTerminalDetailsRequest);
        // TODO: test validations
    }

    /**
     * Get the list of terminals
     *
     * Returns a list of payment terminals associated with a company account, merchant account, or store. The response shows whether the terminals are in the inventory, or in-store (ready for boarding or already boarded).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postGetTerminalsUnderAccountTest() throws ApiException {
        GetTerminalsUnderAccountRequest getTerminalsUnderAccountRequest = null;
        GetTerminalsUnderAccountResponse response = api.postGetTerminalsUnderAccount(getTerminalsUnderAccountRequest);
        // TODO: test validations
    }

}
