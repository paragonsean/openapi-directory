/*
 * POS Terminal Management API
 * This API provides endpoints for managing your point-of-sale (POS) payment terminals. You can use the API to obtain information about a specific terminal, retrieve overviews of your terminals and stores, and assign terminals to a merchant account or store.  For more information, refer to [Assign terminals](https://docs.adyen.com/point-of-sale/automating-terminal-management/assign-terminals-api).  ## Authentication Each request to the Terminal Management API must be signed with an API key. For this, obtain an API Key from your Customer Area, as described in [How to get the API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key). Then set this key to the `X-API-Key` header value, for example:  ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: Your_API_key\" \\ ... ``` Note that when going live, you need to generate new web service user credentials to access the [live endpoints](https://docs.adyen.com/development-resources/live-endpoints).  ## Versioning Terminal Management API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://postfmapi-test.adyen.com/postfmapi/terminal/v1/getTerminalsUnderAccount ``` When using versioned endpoints, Boolean response values are returned in string format: `\"true\"` or `\"false\"`. If you omit the version from the endpoint URL, Boolean response values are returned like this: `true` or `false`.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.Store;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for GetTerminalDetailsResponse
 */
public class GetTerminalDetailsResponseTest {
    private final GetTerminalDetailsResponse model = new GetTerminalDetailsResponse();

    /**
     * Model tests for GetTerminalDetailsResponse
     */
    @Test
    public void testGetTerminalDetailsResponse() {
        // TODO: test GetTerminalDetailsResponse
    }

    /**
     * Test the property 'bluetoothIp'
     */
    @Test
    public void bluetoothIpTest() {
        // TODO: test bluetoothIp
    }

    /**
     * Test the property 'bluetoothMac'
     */
    @Test
    public void bluetoothMacTest() {
        // TODO: test bluetoothMac
    }

    /**
     * Test the property 'companyAccount'
     */
    @Test
    public void companyAccountTest() {
        // TODO: test companyAccount
    }

    /**
     * Test the property 'country'
     */
    @Test
    public void countryTest() {
        // TODO: test country
    }

    /**
     * Test the property 'deviceModel'
     */
    @Test
    public void deviceModelTest() {
        // TODO: test deviceModel
    }

    /**
     * Test the property 'dhcpEnabled'
     */
    @Test
    public void dhcpEnabledTest() {
        // TODO: test dhcpEnabled
    }

    /**
     * Test the property 'displayLabel'
     */
    @Test
    public void displayLabelTest() {
        // TODO: test displayLabel
    }

    /**
     * Test the property 'ethernetIp'
     */
    @Test
    public void ethernetIpTest() {
        // TODO: test ethernetIp
    }

    /**
     * Test the property 'ethernetMac'
     */
    @Test
    public void ethernetMacTest() {
        // TODO: test ethernetMac
    }

    /**
     * Test the property 'firmwareVersion'
     */
    @Test
    public void firmwareVersionTest() {
        // TODO: test firmwareVersion
    }

    /**
     * Test the property 'iccid'
     */
    @Test
    public void iccidTest() {
        // TODO: test iccid
    }

    /**
     * Test the property 'lastActivityDateTime'
     */
    @Test
    public void lastActivityDateTimeTest() {
        // TODO: test lastActivityDateTime
    }

    /**
     * Test the property 'lastTransactionDateTime'
     */
    @Test
    public void lastTransactionDateTimeTest() {
        // TODO: test lastTransactionDateTime
    }

    /**
     * Test the property 'linkNegotiation'
     */
    @Test
    public void linkNegotiationTest() {
        // TODO: test linkNegotiation
    }

    /**
     * Test the property 'merchantAccount'
     */
    @Test
    public void merchantAccountTest() {
        // TODO: test merchantAccount
    }

    /**
     * Test the property 'merchantInventory'
     */
    @Test
    public void merchantInventoryTest() {
        // TODO: test merchantInventory
    }

    /**
     * Test the property 'permanentTerminalId'
     */
    @Test
    public void permanentTerminalIdTest() {
        // TODO: test permanentTerminalId
    }

    /**
     * Test the property 'serialNumber'
     */
    @Test
    public void serialNumberTest() {
        // TODO: test serialNumber
    }

    /**
     * Test the property 'simStatus'
     */
    @Test
    public void simStatusTest() {
        // TODO: test simStatus
    }

    /**
     * Test the property 'store'
     */
    @Test
    public void storeTest() {
        // TODO: test store
    }

    /**
     * Test the property 'storeDetails'
     */
    @Test
    public void storeDetailsTest() {
        // TODO: test storeDetails
    }

    /**
     * Test the property 'terminal'
     */
    @Test
    public void terminalTest() {
        // TODO: test terminal
    }

    /**
     * Test the property 'terminalStatus'
     */
    @Test
    public void terminalStatusTest() {
        // TODO: test terminalStatus
    }

    /**
     * Test the property 'wifiIp'
     */
    @Test
    public void wifiIpTest() {
        // TODO: test wifiIp
    }

    /**
     * Test the property 'wifiMac'
     */
    @Test
    public void wifiMacTest() {
        // TODO: test wifiMac
    }

}
