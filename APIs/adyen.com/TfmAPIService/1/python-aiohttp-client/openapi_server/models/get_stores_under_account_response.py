# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.store import Store
from openapi_server import util


class GetStoresUnderAccountResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, stores: List[Store]=None):
        """GetStoresUnderAccountResponse - a model defined in OpenAPI

        :param stores: The stores of this GetStoresUnderAccountResponse.
        """
        self.openapi_types = {
            'stores': List[Store]
        }

        self.attribute_map = {
            'stores': 'stores'
        }

        self._stores = stores

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetStoresUnderAccountResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetStoresUnderAccountResponse of this GetStoresUnderAccountResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def stores(self):
        """Gets the stores of this GetStoresUnderAccountResponse.

        Array that returns a list of all stores for the specified merchant account, or for all merchant accounts under the company account.

        :return: The stores of this GetStoresUnderAccountResponse.
        :rtype: List[Store]
        """
        return self._stores

    @stores.setter
    def stores(self, stores):
        """Sets the stores of this GetStoresUnderAccountResponse.

        Array that returns a list of all stores for the specified merchant account, or for all merchant accounts under the company account.

        :param stores: The stores of this GetStoresUnderAccountResponse.
        :type stores: List[Store]
        """

        self._stores = stores
