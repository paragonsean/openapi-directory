# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class FindTerminalRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, terminal: str=None):
        """FindTerminalRequest - a model defined in OpenAPI

        :param terminal: The terminal of this FindTerminalRequest.
        """
        self.openapi_types = {
            'terminal': str
        }

        self.attribute_map = {
            'terminal': 'terminal'
        }

        self._terminal = terminal

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FindTerminalRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FindTerminalRequest of this FindTerminalRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def terminal(self):
        """Gets the terminal of this FindTerminalRequest.

        The unique terminal ID in the format `[Device model]-[Serial number]`.   For example, **V400m-324689776**.

        :return: The terminal of this FindTerminalRequest.
        :rtype: str
        """
        return self._terminal

    @terminal.setter
    def terminal(self, terminal):
        """Sets the terminal of this FindTerminalRequest.

        The unique terminal ID in the format `[Device model]-[Serial number]`.   For example, **V400m-324689776**.

        :param terminal: The terminal of this FindTerminalRequest.
        :type terminal: str
        """
        if terminal is None:
            raise ValueError("Invalid value for `terminal`, must not be `None`")

        self._terminal = terminal
