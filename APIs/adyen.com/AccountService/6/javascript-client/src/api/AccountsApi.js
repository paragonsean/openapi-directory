/**
 * Account API
 * This API is used for the classic integration. If you are just starting your implementation, refer to our [new integration guide](https://docs.adyen.com/marketplaces-and-platforms) instead.  The Account API provides endpoints for managing account-related entities on your platform. These related entities include account holders, accounts, bank accounts, shareholders, and verification-related documents. The management operations include actions such as creation, retrieval, updating, and deletion of them.  For more information, refer to our [documentation](https://docs.adyen.com/marketplaces-and-platforms/classic). ## Authentication Your Adyen contact will provide your API credential and an API key. To connect to the API, add an `X-API-Key` header with the API key as the value, for example:   ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ```  Alternatively, you can use the username and password to connect to the API using basic authentication. For example:  ``` curl -U \"ws@MarketPlace.YOUR_PLATFORM_ACCOUNT\":\"YOUR_WS_PASSWORD\" \\ -H \"Content-Type: application/json\" \\ ... ``` When going live, you need to generate new web service user credentials to access the [live endpoints](https://docs.adyen.com/development-resources/live-endpoints).  ## Versioning The Account API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://cal-test.adyen.com/cal/services/Account/v6/createAccountHolder ```
 *
 * The version of the OpenAPI document: 6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CloseAccountRequest from '../model/CloseAccountRequest';
import CloseAccountResponse from '../model/CloseAccountResponse';
import CreateAccountRequest from '../model/CreateAccountRequest';
import CreateAccountResponse from '../model/CreateAccountResponse';
import ServiceError from '../model/ServiceError';
import UpdateAccountRequest from '../model/UpdateAccountRequest';
import UpdateAccountResponse from '../model/UpdateAccountResponse';

/**
* Accounts service.
* @module api/AccountsApi
* @version 6
*/
export default class AccountsApi {

    /**
    * Constructs a new AccountsApi. 
    * @alias module:api/AccountsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the postCloseAccount operation.
     * @callback module:api/AccountsApi~postCloseAccountCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CloseAccountResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Close an account
     * Closes an account. If an account is closed, you cannot process transactions, pay out its funds, or reopen it. If payments are made to a closed account, the payments are sent to your liable account.
     * @param {Object} opts Optional parameters
     * @param {module:model/CloseAccountRequest} [closeAccountRequest] 
     * @param {module:api/AccountsApi~postCloseAccountCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CloseAccountResponse}
     */
    postCloseAccount(opts, callback) {
      opts = opts || {};
      let postBody = opts['closeAccountRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BasicAuth', 'ApiKeyAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CloseAccountResponse;
      return this.apiClient.callApi(
        '/closeAccount', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the postCreateAccount operation.
     * @callback module:api/AccountsApi~postCreateAccountCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CreateAccountResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create an account
     * Creates an account under an account holder. An account holder can have [multiple accounts](https://docs.adyen.com/marketplaces-and-platforms/classic/account-holders-and-accounts#create-additional-accounts).
     * @param {Object} opts Optional parameters
     * @param {module:model/CreateAccountRequest} [createAccountRequest] 
     * @param {module:api/AccountsApi~postCreateAccountCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CreateAccountResponse}
     */
    postCreateAccount(opts, callback) {
      opts = opts || {};
      let postBody = opts['createAccountRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BasicAuth', 'ApiKeyAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CreateAccountResponse;
      return this.apiClient.callApi(
        '/createAccount', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the postUpdateAccount operation.
     * @callback module:api/AccountsApi~postUpdateAccountCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UpdateAccountResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update an account
     * Updates the description or payout schedule of an account.
     * @param {Object} opts Optional parameters
     * @param {module:model/UpdateAccountRequest} [updateAccountRequest] 
     * @param {module:api/AccountsApi~postUpdateAccountCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UpdateAccountResponse}
     */
    postUpdateAccount(opts, callback) {
      opts = opts || {};
      let postBody = opts['updateAccountRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BasicAuth', 'ApiKeyAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = UpdateAccountResponse;
      return this.apiClient.callApi(
        '/updateAccount', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
