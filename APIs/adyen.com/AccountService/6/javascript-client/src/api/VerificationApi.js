/**
 * Account API
 * This API is used for the classic integration. If you are just starting your implementation, refer to our [new integration guide](https://docs.adyen.com/marketplaces-and-platforms) instead.  The Account API provides endpoints for managing account-related entities on your platform. These related entities include account holders, accounts, bank accounts, shareholders, and verification-related documents. The management operations include actions such as creation, retrieval, updating, and deletion of them.  For more information, refer to our [documentation](https://docs.adyen.com/marketplaces-and-platforms/classic). ## Authentication Your Adyen contact will provide your API credential and an API key. To connect to the API, add an `X-API-Key` header with the API key as the value, for example:   ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ```  Alternatively, you can use the username and password to connect to the API using basic authentication. For example:  ``` curl -U \"ws@MarketPlace.YOUR_PLATFORM_ACCOUNT\":\"YOUR_WS_PASSWORD\" \\ -H \"Content-Type: application/json\" \\ ... ``` When going live, you need to generate new web service user credentials to access the [live endpoints](https://docs.adyen.com/development-resources/live-endpoints).  ## Versioning The Account API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://cal-test.adyen.com/cal/services/Account/v6/createAccountHolder ```
 *
 * The version of the OpenAPI document: 6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import DeleteBankAccountRequest from '../model/DeleteBankAccountRequest';
import DeleteLegalArrangementRequest from '../model/DeleteLegalArrangementRequest';
import DeletePayoutMethodRequest from '../model/DeletePayoutMethodRequest';
import DeleteShareholderRequest from '../model/DeleteShareholderRequest';
import DeleteSignatoriesRequest from '../model/DeleteSignatoriesRequest';
import GenericResponse from '../model/GenericResponse';
import GetUploadedDocumentsRequest from '../model/GetUploadedDocumentsRequest';
import GetUploadedDocumentsResponse from '../model/GetUploadedDocumentsResponse';
import PerformVerificationRequest from '../model/PerformVerificationRequest';
import ServiceError from '../model/ServiceError';
import UpdateAccountHolderResponse from '../model/UpdateAccountHolderResponse';
import UploadDocumentRequest from '../model/UploadDocumentRequest';

/**
* Verification service.
* @module api/VerificationApi
* @version 6
*/
export default class VerificationApi {

    /**
    * Constructs a new VerificationApi. 
    * @alias module:api/VerificationApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the postCheckAccountHolder operation.
     * @callback module:api/VerificationApi~postCheckAccountHolderCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GenericResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Trigger verification
     * Triggers the verification of an account holder even if the checks are not yet required for the volume that they are currently processing.
     * @param {Object} opts Optional parameters
     * @param {module:model/PerformVerificationRequest} [performVerificationRequest] 
     * @param {module:api/VerificationApi~postCheckAccountHolderCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GenericResponse}
     */
    postCheckAccountHolder(opts, callback) {
      opts = opts || {};
      let postBody = opts['performVerificationRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BasicAuth', 'ApiKeyAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GenericResponse;
      return this.apiClient.callApi(
        '/checkAccountHolder', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the postDeleteBankAccounts operation.
     * @callback module:api/VerificationApi~postDeleteBankAccountsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GenericResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete bank accounts
     * Deletes bank accounts associated with an account holder. 
     * @param {Object} opts Optional parameters
     * @param {module:model/DeleteBankAccountRequest} [deleteBankAccountRequest] 
     * @param {module:api/VerificationApi~postDeleteBankAccountsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GenericResponse}
     */
    postDeleteBankAccounts(opts, callback) {
      opts = opts || {};
      let postBody = opts['deleteBankAccountRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BasicAuth', 'ApiKeyAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GenericResponse;
      return this.apiClient.callApi(
        '/deleteBankAccounts', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the postDeleteLegalArrangements operation.
     * @callback module:api/VerificationApi~postDeleteLegalArrangementsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GenericResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete legal arrangements
     * Deletes legal arrangements and/or legal arrangement entities associated with an account holder.
     * @param {Object} opts Optional parameters
     * @param {module:model/DeleteLegalArrangementRequest} [deleteLegalArrangementRequest] 
     * @param {module:api/VerificationApi~postDeleteLegalArrangementsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GenericResponse}
     */
    postDeleteLegalArrangements(opts, callback) {
      opts = opts || {};
      let postBody = opts['deleteLegalArrangementRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BasicAuth', 'ApiKeyAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GenericResponse;
      return this.apiClient.callApi(
        '/deleteLegalArrangements', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the postDeletePayoutMethods operation.
     * @callback module:api/VerificationApi~postDeletePayoutMethodsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GenericResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete payout methods
     * Deletes payout methods associated with an account holder.
     * @param {Object} opts Optional parameters
     * @param {module:model/DeletePayoutMethodRequest} [deletePayoutMethodRequest] 
     * @param {module:api/VerificationApi~postDeletePayoutMethodsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GenericResponse}
     */
    postDeletePayoutMethods(opts, callback) {
      opts = opts || {};
      let postBody = opts['deletePayoutMethodRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BasicAuth', 'ApiKeyAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GenericResponse;
      return this.apiClient.callApi(
        '/deletePayoutMethods', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the postDeleteShareholders operation.
     * @callback module:api/VerificationApi~postDeleteShareholdersCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GenericResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete shareholders
     * Deletes shareholders associated with an account holder.
     * @param {Object} opts Optional parameters
     * @param {module:model/DeleteShareholderRequest} [deleteShareholderRequest] 
     * @param {module:api/VerificationApi~postDeleteShareholdersCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GenericResponse}
     */
    postDeleteShareholders(opts, callback) {
      opts = opts || {};
      let postBody = opts['deleteShareholderRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BasicAuth', 'ApiKeyAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GenericResponse;
      return this.apiClient.callApi(
        '/deleteShareholders', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the postDeleteSignatories operation.
     * @callback module:api/VerificationApi~postDeleteSignatoriesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GenericResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete signatories
     * Deletes signatories associated with an account holder.
     * @param {Object} opts Optional parameters
     * @param {module:model/DeleteSignatoriesRequest} [deleteSignatoriesRequest] 
     * @param {module:api/VerificationApi~postDeleteSignatoriesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GenericResponse}
     */
    postDeleteSignatories(opts, callback) {
      opts = opts || {};
      let postBody = opts['deleteSignatoriesRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BasicAuth', 'ApiKeyAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GenericResponse;
      return this.apiClient.callApi(
        '/deleteSignatories', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the postGetUploadedDocuments operation.
     * @callback module:api/VerificationApi~postGetUploadedDocumentsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetUploadedDocumentsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get documents
     * Returns documents that were previously uploaded for an account holder. Adyen uses the documents during the [verification process](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-process). 
     * @param {Object} opts Optional parameters
     * @param {module:model/GetUploadedDocumentsRequest} [getUploadedDocumentsRequest] 
     * @param {module:api/VerificationApi~postGetUploadedDocumentsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetUploadedDocumentsResponse}
     */
    postGetUploadedDocuments(opts, callback) {
      opts = opts || {};
      let postBody = opts['getUploadedDocumentsRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BasicAuth', 'ApiKeyAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GetUploadedDocumentsResponse;
      return this.apiClient.callApi(
        '/getUploadedDocuments', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the postUploadDocument operation.
     * @callback module:api/VerificationApi~postUploadDocumentCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UpdateAccountHolderResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Upload a document
     * Uploads a document for an account holder. Adyen uses the documents during the [verification process](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-process).
     * @param {Object} opts Optional parameters
     * @param {module:model/UploadDocumentRequest} [uploadDocumentRequest] 
     * @param {module:api/VerificationApi~postUploadDocumentCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UpdateAccountHolderResponse}
     */
    postUploadDocument(opts, callback) {
      opts = opts || {};
      let postBody = opts['uploadDocumentRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BasicAuth', 'ApiKeyAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = UpdateAccountHolderResponse;
      return this.apiClient.callApi(
        '/uploadDocument', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
