/**
 * Account API
 * This API is used for the classic integration. If you are just starting your implementation, refer to our [new integration guide](https://docs.adyen.com/marketplaces-and-platforms) instead.  The Account API provides endpoints for managing account-related entities on your platform. These related entities include account holders, accounts, bank accounts, shareholders, and verification-related documents. The management operations include actions such as creation, retrieval, updating, and deletion of them.  For more information, refer to our [documentation](https://docs.adyen.com/marketplaces-and-platforms/classic). ## Authentication Your Adyen contact will provide your API credential and an API key. To connect to the API, add an `X-API-Key` header with the API key as the value, for example:   ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ```  Alternatively, you can use the username and password to connect to the API using basic authentication. For example:  ``` curl -U \"ws@MarketPlace.YOUR_PLATFORM_ACCOUNT\":\"YOUR_WS_PASSWORD\" \\ -H \"Content-Type: application/json\" \\ ... ``` When going live, you need to generate new web service user credentials to access the [live endpoints](https://docs.adyen.com/development-resources/live-endpoints).  ## Versioning The Account API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://cal-test.adyen.com/cal/services/Account/v6/createAccountHolder ```
 *
 * The version of the OpenAPI document: 6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MigratedAccounts from './MigratedAccounts';
import MigratedShareholders from './MigratedShareholders';
import MigratedStores from './MigratedStores';

/**
 * The MigrationData model module.
 * @module model/MigrationData
 * @version 6
 */
class MigrationData {
    /**
     * Constructs a new <code>MigrationData</code>.
     * @alias module:model/MigrationData
     */
    constructor() { 
        
        MigrationData.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MigrationData</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MigrationData} obj Optional instance to populate.
     * @return {module:model/MigrationData} The populated <code>MigrationData</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MigrationData();

            if (data.hasOwnProperty('accountHolderId')) {
                obj['accountHolderId'] = ApiClient.convertToType(data['accountHolderId'], 'String');
            }
            if (data.hasOwnProperty('balancePlatform')) {
                obj['balancePlatform'] = ApiClient.convertToType(data['balancePlatform'], 'String');
            }
            if (data.hasOwnProperty('migrated')) {
                obj['migrated'] = ApiClient.convertToType(data['migrated'], 'Boolean');
            }
            if (data.hasOwnProperty('migratedAccounts')) {
                obj['migratedAccounts'] = ApiClient.convertToType(data['migratedAccounts'], [MigratedAccounts]);
            }
            if (data.hasOwnProperty('migratedShareholders')) {
                obj['migratedShareholders'] = ApiClient.convertToType(data['migratedShareholders'], [MigratedShareholders]);
            }
            if (data.hasOwnProperty('migratedStores')) {
                obj['migratedStores'] = ApiClient.convertToType(data['migratedStores'], [MigratedStores]);
            }
            if (data.hasOwnProperty('migrationDate')) {
                obj['migrationDate'] = ApiClient.convertToType(data['migrationDate'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MigrationData</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MigrationData</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['accountHolderId'] && !(typeof data['accountHolderId'] === 'string' || data['accountHolderId'] instanceof String)) {
            throw new Error("Expected the field `accountHolderId` to be a primitive type in the JSON string but got " + data['accountHolderId']);
        }
        // ensure the json data is a string
        if (data['balancePlatform'] && !(typeof data['balancePlatform'] === 'string' || data['balancePlatform'] instanceof String)) {
            throw new Error("Expected the field `balancePlatform` to be a primitive type in the JSON string but got " + data['balancePlatform']);
        }
        if (data['migratedAccounts']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['migratedAccounts'])) {
                throw new Error("Expected the field `migratedAccounts` to be an array in the JSON data but got " + data['migratedAccounts']);
            }
            // validate the optional field `migratedAccounts` (array)
            for (const item of data['migratedAccounts']) {
                MigratedAccounts.validateJSON(item);
            };
        }
        if (data['migratedShareholders']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['migratedShareholders'])) {
                throw new Error("Expected the field `migratedShareholders` to be an array in the JSON data but got " + data['migratedShareholders']);
            }
            // validate the optional field `migratedShareholders` (array)
            for (const item of data['migratedShareholders']) {
                MigratedShareholders.validateJSON(item);
            };
        }
        if (data['migratedStores']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['migratedStores'])) {
                throw new Error("Expected the field `migratedStores` to be an array in the JSON data but got " + data['migratedStores']);
            }
            // validate the optional field `migratedStores` (array)
            for (const item of data['migratedStores']) {
                MigratedStores.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * The unique identifier of the account holder in the balance platform.
 * @member {String} accountHolderId
 */
MigrationData.prototype['accountHolderId'] = undefined;

/**
 * The unique identifier of the balance platfrom to which the account holder was migrated.
 * @member {String} balancePlatform
 */
MigrationData.prototype['balancePlatform'] = undefined;

/**
 * Set to **true** if the account holder has been migrated.
 * @member {Boolean} migrated
 */
MigrationData.prototype['migrated'] = undefined;

/**
 * Contains the mapping of virtual account codes (classic integration) to the balance account codes (balance platform) associated with the migrated account holder.
 * @member {Array.<module:model/MigratedAccounts>} migratedAccounts
 */
MigrationData.prototype['migratedAccounts'] = undefined;

/**
 * Contains the mapping of shareholders associated with the migrated legal entities.
 * @member {Array.<module:model/MigratedShareholders>} migratedShareholders
 */
MigrationData.prototype['migratedShareholders'] = undefined;

/**
 * Contains the mapping of business lines and stores associated with the migrated account holder.
 * @member {Array.<module:model/MigratedStores>} migratedStores
 */
MigrationData.prototype['migratedStores'] = undefined;

/**
 * The date when account holder was migrated.
 * @member {Date} migrationDate
 */
MigrationData.prototype['migrationDate'] = undefined;






export default MigrationData;

