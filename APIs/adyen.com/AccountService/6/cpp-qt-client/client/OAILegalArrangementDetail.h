/**
 * Account API
 * This API is used for the classic integration. If you are just starting your implementation, refer to our [new integration guide](https://docs.adyen.com/marketplaces-and-platforms) instead.  The Account API provides endpoints for managing account-related entities on your platform. These related entities include account holders, accounts, bank accounts, shareholders, and verification-related documents. The management operations include actions such as creation, retrieval, updating, and deletion of them.  For more information, refer to our [documentation](https://docs.adyen.com/marketplaces-and-platforms/classic). ## Authentication Your Adyen contact will provide your API credential and an API key. To connect to the API, add an `X-API-Key` header with the API key as the value, for example:   ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ```  Alternatively, you can use the username and password to connect to the API using basic authentication. For example:  ``` curl -U \"ws@MarketPlace.YOUR_PLATFORM_ACCOUNT\":\"YOUR_WS_PASSWORD\" \\ -H \"Content-Type: application/json\" \\ ... ``` When going live, you need to generate new web service user credentials to access the [live endpoints](https://docs.adyen.com/development-resources/live-endpoints).  ## Versioning The Account API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://cal-test.adyen.com/cal/services/Account/v6/createAccountHolder ```
 *
 * The version of the OpenAPI document: 6
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILegalArrangementDetail.h
 *
 * 
 */

#ifndef OAILegalArrangementDetail_H
#define OAILegalArrangementDetail_H

#include <QJsonObject>

#include "OAILegalArrangementEntityDetail.h"
#include "OAIViasAddress.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIViasAddress;
class OAILegalArrangementEntityDetail;

class OAILegalArrangementDetail : public OAIObject {
public:
    OAILegalArrangementDetail();
    OAILegalArrangementDetail(QString json);
    ~OAILegalArrangementDetail() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIViasAddress getAddress() const;
    void setAddress(const OAIViasAddress &address);
    bool is_address_Set() const;
    bool is_address_Valid() const;

    QString getLegalArrangementCode() const;
    void setLegalArrangementCode(const QString &legal_arrangement_code);
    bool is_legal_arrangement_code_Set() const;
    bool is_legal_arrangement_code_Valid() const;

    QList<OAILegalArrangementEntityDetail> getLegalArrangementEntities() const;
    void setLegalArrangementEntities(const QList<OAILegalArrangementEntityDetail> &legal_arrangement_entities);
    bool is_legal_arrangement_entities_Set() const;
    bool is_legal_arrangement_entities_Valid() const;

    QString getLegalArrangementReference() const;
    void setLegalArrangementReference(const QString &legal_arrangement_reference);
    bool is_legal_arrangement_reference_Set() const;
    bool is_legal_arrangement_reference_Valid() const;

    QString getLegalForm() const;
    void setLegalForm(const QString &legal_form);
    bool is_legal_form_Set() const;
    bool is_legal_form_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getRegistrationNumber() const;
    void setRegistrationNumber(const QString &registration_number);
    bool is_registration_number_Set() const;
    bool is_registration_number_Valid() const;

    QString getTaxNumber() const;
    void setTaxNumber(const QString &tax_number);
    bool is_tax_number_Set() const;
    bool is_tax_number_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIViasAddress m_address;
    bool m_address_isSet;
    bool m_address_isValid;

    QString m_legal_arrangement_code;
    bool m_legal_arrangement_code_isSet;
    bool m_legal_arrangement_code_isValid;

    QList<OAILegalArrangementEntityDetail> m_legal_arrangement_entities;
    bool m_legal_arrangement_entities_isSet;
    bool m_legal_arrangement_entities_isValid;

    QString m_legal_arrangement_reference;
    bool m_legal_arrangement_reference_isSet;
    bool m_legal_arrangement_reference_isValid;

    QString m_legal_form;
    bool m_legal_form_isSet;
    bool m_legal_form_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_registration_number;
    bool m_registration_number_isSet;
    bool m_registration_number_isValid;

    QString m_tax_number;
    bool m_tax_number_isSet;
    bool m_tax_number_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILegalArrangementDetail)

#endif // OAILegalArrangementDetail_H
