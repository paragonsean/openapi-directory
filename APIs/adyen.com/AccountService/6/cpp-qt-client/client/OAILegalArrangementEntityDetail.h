/**
 * Account API
 * This API is used for the classic integration. If you are just starting your implementation, refer to our [new integration guide](https://docs.adyen.com/marketplaces-and-platforms) instead.  The Account API provides endpoints for managing account-related entities on your platform. These related entities include account holders, accounts, bank accounts, shareholders, and verification-related documents. The management operations include actions such as creation, retrieval, updating, and deletion of them.  For more information, refer to our [documentation](https://docs.adyen.com/marketplaces-and-platforms/classic). ## Authentication Your Adyen contact will provide your API credential and an API key. To connect to the API, add an `X-API-Key` header with the API key as the value, for example:   ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ```  Alternatively, you can use the username and password to connect to the API using basic authentication. For example:  ``` curl -U \"ws@MarketPlace.YOUR_PLATFORM_ACCOUNT\":\"YOUR_WS_PASSWORD\" \\ -H \"Content-Type: application/json\" \\ ... ``` When going live, you need to generate new web service user credentials to access the [live endpoints](https://docs.adyen.com/development-resources/live-endpoints).  ## Versioning The Account API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://cal-test.adyen.com/cal/services/Account/v6/createAccountHolder ```
 *
 * The version of the OpenAPI document: 6
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILegalArrangementEntityDetail.h
 *
 * 
 */

#ifndef OAILegalArrangementEntityDetail_H
#define OAILegalArrangementEntityDetail_H

#include <QJsonObject>

#include "OAIBusinessDetails.h"
#include "OAIIndividualDetails.h"
#include "OAIViasAddress.h"
#include "OAIViasPhoneNumber.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIViasAddress;
class OAIBusinessDetails;
class OAIIndividualDetails;
class OAIViasPhoneNumber;

class OAILegalArrangementEntityDetail : public OAIObject {
public:
    OAILegalArrangementEntityDetail();
    OAILegalArrangementEntityDetail(QString json);
    ~OAILegalArrangementEntityDetail() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIViasAddress getAddress() const;
    void setAddress(const OAIViasAddress &address);
    bool is_address_Set() const;
    bool is_address_Valid() const;

    OAIBusinessDetails getBusinessDetails() const;
    void setBusinessDetails(const OAIBusinessDetails &business_details);
    bool is_business_details_Set() const;
    bool is_business_details_Valid() const;

    QString getEmail() const;
    void setEmail(const QString &email);
    bool is_email_Set() const;
    bool is_email_Valid() const;

    QString getFullPhoneNumber() const;
    void setFullPhoneNumber(const QString &full_phone_number);
    bool is_full_phone_number_Set() const;
    bool is_full_phone_number_Valid() const;

    OAIIndividualDetails getIndividualDetails() const;
    void setIndividualDetails(const OAIIndividualDetails &individual_details);
    bool is_individual_details_Set() const;
    bool is_individual_details_Valid() const;

    QString getLegalArrangementEntityCode() const;
    void setLegalArrangementEntityCode(const QString &legal_arrangement_entity_code);
    bool is_legal_arrangement_entity_code_Set() const;
    bool is_legal_arrangement_entity_code_Valid() const;

    QString getLegalArrangementEntityReference() const;
    void setLegalArrangementEntityReference(const QString &legal_arrangement_entity_reference);
    bool is_legal_arrangement_entity_reference_Set() const;
    bool is_legal_arrangement_entity_reference_Valid() const;

    QList<QString> getLegalArrangementMembers() const;
    void setLegalArrangementMembers(const QList<QString> &legal_arrangement_members);
    bool is_legal_arrangement_members_Set() const;
    bool is_legal_arrangement_members_Valid() const;

    QString getLegalEntityType() const;
    void setLegalEntityType(const QString &legal_entity_type);
    bool is_legal_entity_type_Set() const;
    bool is_legal_entity_type_Valid() const;

    OAIViasPhoneNumber getPhoneNumber() const;
    void setPhoneNumber(const OAIViasPhoneNumber &phone_number);
    bool is_phone_number_Set() const;
    bool is_phone_number_Valid() const;

    QString getWebAddress() const;
    void setWebAddress(const QString &web_address);
    bool is_web_address_Set() const;
    bool is_web_address_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIViasAddress m_address;
    bool m_address_isSet;
    bool m_address_isValid;

    OAIBusinessDetails m_business_details;
    bool m_business_details_isSet;
    bool m_business_details_isValid;

    QString m_email;
    bool m_email_isSet;
    bool m_email_isValid;

    QString m_full_phone_number;
    bool m_full_phone_number_isSet;
    bool m_full_phone_number_isValid;

    OAIIndividualDetails m_individual_details;
    bool m_individual_details_isSet;
    bool m_individual_details_isValid;

    QString m_legal_arrangement_entity_code;
    bool m_legal_arrangement_entity_code_isSet;
    bool m_legal_arrangement_entity_code_isValid;

    QString m_legal_arrangement_entity_reference;
    bool m_legal_arrangement_entity_reference_isSet;
    bool m_legal_arrangement_entity_reference_isValid;

    QList<QString> m_legal_arrangement_members;
    bool m_legal_arrangement_members_isSet;
    bool m_legal_arrangement_members_isValid;

    QString m_legal_entity_type;
    bool m_legal_entity_type_isSet;
    bool m_legal_entity_type_isValid;

    OAIViasPhoneNumber m_phone_number;
    bool m_phone_number_isSet;
    bool m_phone_number_isValid;

    QString m_web_address;
    bool m_web_address_isSet;
    bool m_web_address_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILegalArrangementEntityDetail)

#endif // OAILegalArrangementEntityDetail_H
