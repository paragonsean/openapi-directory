# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UltimateParentCompanyBusinessDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, legal_business_name: str=None, registration_number: str=None, stock_exchange: str=None, stock_number: str=None, stock_ticker: str=None):
        """UltimateParentCompanyBusinessDetails - a model defined in OpenAPI

        :param legal_business_name: The legal_business_name of this UltimateParentCompanyBusinessDetails.
        :param registration_number: The registration_number of this UltimateParentCompanyBusinessDetails.
        :param stock_exchange: The stock_exchange of this UltimateParentCompanyBusinessDetails.
        :param stock_number: The stock_number of this UltimateParentCompanyBusinessDetails.
        :param stock_ticker: The stock_ticker of this UltimateParentCompanyBusinessDetails.
        """
        self.openapi_types = {
            'legal_business_name': str,
            'registration_number': str,
            'stock_exchange': str,
            'stock_number': str,
            'stock_ticker': str
        }

        self.attribute_map = {
            'legal_business_name': 'legalBusinessName',
            'registration_number': 'registrationNumber',
            'stock_exchange': 'stockExchange',
            'stock_number': 'stockNumber',
            'stock_ticker': 'stockTicker'
        }

        self._legal_business_name = legal_business_name
        self._registration_number = registration_number
        self._stock_exchange = stock_exchange
        self._stock_number = stock_number
        self._stock_ticker = stock_ticker

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UltimateParentCompanyBusinessDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UltimateParentCompanyBusinessDetails of this UltimateParentCompanyBusinessDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def legal_business_name(self):
        """Gets the legal_business_name of this UltimateParentCompanyBusinessDetails.

        The legal name of the company.

        :return: The legal_business_name of this UltimateParentCompanyBusinessDetails.
        :rtype: str
        """
        return self._legal_business_name

    @legal_business_name.setter
    def legal_business_name(self, legal_business_name):
        """Sets the legal_business_name of this UltimateParentCompanyBusinessDetails.

        The legal name of the company.

        :param legal_business_name: The legal_business_name of this UltimateParentCompanyBusinessDetails.
        :type legal_business_name: str
        """

        self._legal_business_name = legal_business_name

    @property
    def registration_number(self):
        """Gets the registration_number of this UltimateParentCompanyBusinessDetails.

        The registration number of the company.

        :return: The registration_number of this UltimateParentCompanyBusinessDetails.
        :rtype: str
        """
        return self._registration_number

    @registration_number.setter
    def registration_number(self, registration_number):
        """Sets the registration_number of this UltimateParentCompanyBusinessDetails.

        The registration number of the company.

        :param registration_number: The registration_number of this UltimateParentCompanyBusinessDetails.
        :type registration_number: str
        """

        self._registration_number = registration_number

    @property
    def stock_exchange(self):
        """Gets the stock_exchange of this UltimateParentCompanyBusinessDetails.

        Market Identifier Code (MIC).

        :return: The stock_exchange of this UltimateParentCompanyBusinessDetails.
        :rtype: str
        """
        return self._stock_exchange

    @stock_exchange.setter
    def stock_exchange(self, stock_exchange):
        """Sets the stock_exchange of this UltimateParentCompanyBusinessDetails.

        Market Identifier Code (MIC).

        :param stock_exchange: The stock_exchange of this UltimateParentCompanyBusinessDetails.
        :type stock_exchange: str
        """

        self._stock_exchange = stock_exchange

    @property
    def stock_number(self):
        """Gets the stock_number of this UltimateParentCompanyBusinessDetails.

        International Securities Identification Number (ISIN).

        :return: The stock_number of this UltimateParentCompanyBusinessDetails.
        :rtype: str
        """
        return self._stock_number

    @stock_number.setter
    def stock_number(self, stock_number):
        """Sets the stock_number of this UltimateParentCompanyBusinessDetails.

        International Securities Identification Number (ISIN).

        :param stock_number: The stock_number of this UltimateParentCompanyBusinessDetails.
        :type stock_number: str
        """

        self._stock_number = stock_number

    @property
    def stock_ticker(self):
        """Gets the stock_ticker of this UltimateParentCompanyBusinessDetails.

        Stock Ticker symbol.

        :return: The stock_ticker of this UltimateParentCompanyBusinessDetails.
        :rtype: str
        """
        return self._stock_ticker

    @stock_ticker.setter
    def stock_ticker(self, stock_ticker):
        """Sets the stock_ticker of this UltimateParentCompanyBusinessDetails.

        Stock Ticker symbol.

        :param stock_ticker: The stock_ticker of this UltimateParentCompanyBusinessDetails.
        :type stock_ticker: str
        """

        self._stock_ticker = stock_ticker
