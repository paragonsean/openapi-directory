# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.kyc_check_status_data import KYCCheckStatusData
from openapi_server import util


class KYCLegalArrangementCheckResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, checks: List[KYCCheckStatusData]=None, legal_arrangement_code: str=None):
        """KYCLegalArrangementCheckResult - a model defined in OpenAPI

        :param checks: The checks of this KYCLegalArrangementCheckResult.
        :param legal_arrangement_code: The legal_arrangement_code of this KYCLegalArrangementCheckResult.
        """
        self.openapi_types = {
            'checks': List[KYCCheckStatusData],
            'legal_arrangement_code': str
        }

        self.attribute_map = {
            'checks': 'checks',
            'legal_arrangement_code': 'legalArrangementCode'
        }

        self._checks = checks
        self._legal_arrangement_code = legal_arrangement_code

    @classmethod
    def from_dict(cls, dikt: dict) -> 'KYCLegalArrangementCheckResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The KYCLegalArrangementCheckResult of this KYCLegalArrangementCheckResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def checks(self):
        """Gets the checks of this KYCLegalArrangementCheckResult.

        A list of the checks and their statuses.

        :return: The checks of this KYCLegalArrangementCheckResult.
        :rtype: List[KYCCheckStatusData]
        """
        return self._checks

    @checks.setter
    def checks(self, checks):
        """Sets the checks of this KYCLegalArrangementCheckResult.

        A list of the checks and their statuses.

        :param checks: The checks of this KYCLegalArrangementCheckResult.
        :type checks: List[KYCCheckStatusData]
        """

        self._checks = checks

    @property
    def legal_arrangement_code(self):
        """Gets the legal_arrangement_code of this KYCLegalArrangementCheckResult.

        The unique ID of the legal arrangement to which the check applies.

        :return: The legal_arrangement_code of this KYCLegalArrangementCheckResult.
        :rtype: str
        """
        return self._legal_arrangement_code

    @legal_arrangement_code.setter
    def legal_arrangement_code(self, legal_arrangement_code):
        """Sets the legal_arrangement_code of this KYCLegalArrangementCheckResult.

        The unique ID of the legal arrangement to which the check applies.

        :param legal_arrangement_code: The legal_arrangement_code of this KYCLegalArrangementCheckResult.
        :type legal_arrangement_code: str
        """

        self._legal_arrangement_code = legal_arrangement_code
