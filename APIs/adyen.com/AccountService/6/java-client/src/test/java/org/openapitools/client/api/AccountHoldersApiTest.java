/*
 * Account API
 * This API is used for the classic integration. If you are just starting your implementation, refer to our [new integration guide](https://docs.adyen.com/marketplaces-and-platforms) instead.  The Account API provides endpoints for managing account-related entities on your platform. These related entities include account holders, accounts, bank accounts, shareholders, and verification-related documents. The management operations include actions such as creation, retrieval, updating, and deletion of them.  For more information, refer to our [documentation](https://docs.adyen.com/marketplaces-and-platforms/classic). ## Authentication Your Adyen contact will provide your API credential and an API key. To connect to the API, add an `X-API-Key` header with the API key as the value, for example:   ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ```  Alternatively, you can use the username and password to connect to the API using basic authentication. For example:  ``` curl -U \"ws@MarketPlace.YOUR_PLATFORM_ACCOUNT\":\"YOUR_WS_PASSWORD\" \\ -H \"Content-Type: application/json\" \\ ... ``` When going live, you need to generate new web service user credentials to access the [live endpoints](https://docs.adyen.com/development-resources/live-endpoints).  ## Versioning The Account API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://cal-test.adyen.com/cal/services/Account/v6/createAccountHolder ```
 *
 * The version of the OpenAPI document: 6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CloseAccountHolderRequest;
import org.openapitools.client.model.CloseAccountHolderResponse;
import org.openapitools.client.model.CloseStoresRequest;
import org.openapitools.client.model.CreateAccountHolderRequest;
import org.openapitools.client.model.CreateAccountHolderResponse;
import org.openapitools.client.model.GenericResponse;
import org.openapitools.client.model.GetAccountHolderRequest;
import org.openapitools.client.model.GetAccountHolderResponse;
import org.openapitools.client.model.GetAccountHolderStatusResponse;
import org.openapitools.client.model.GetTaxFormRequest;
import org.openapitools.client.model.GetTaxFormResponse;
import org.openapitools.client.model.ServiceError;
import org.openapitools.client.model.SuspendAccountHolderRequest;
import org.openapitools.client.model.SuspendAccountHolderResponse;
import org.openapitools.client.model.UnSuspendAccountHolderRequest;
import org.openapitools.client.model.UnSuspendAccountHolderResponse;
import org.openapitools.client.model.UpdateAccountHolderRequest;
import org.openapitools.client.model.UpdateAccountHolderResponse;
import org.openapitools.client.model.UpdateAccountHolderStateRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AccountHoldersApi
 */
@Disabled
public class AccountHoldersApiTest {

    private final AccountHoldersApi api = new AccountHoldersApi();

    /**
     * Close an account holder
     *
     * Changes the [status of an account holder](https://docs.adyen.com/marketplaces-and-platforms/classic/account-holders-and-accounts#account-holder-statuses) to **Closed**. This state is final. If an account holder is closed, you can&#39;t process transactions, pay out funds, or reopen it. If payments are made to an account of an account holder with a **Closed** [&#x60;status&#x60;](https://docs.adyen.com/api-explorer/#/Account/latest/post/getAccountHolder__resParam_verification-accountHolder-checks-status), the payments are sent to your liable account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postCloseAccountHolderTest() throws ApiException {
        CloseAccountHolderRequest closeAccountHolderRequest = null;
        CloseAccountHolderResponse response = api.postCloseAccountHolder(closeAccountHolderRequest);
        // TODO: test validations
    }

    /**
     * Close stores
     *
     * Closes stores associated with an account holder.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postCloseStoresTest() throws ApiException {
        CloseStoresRequest closeStoresRequest = null;
        GenericResponse response = api.postCloseStores(closeStoresRequest);
        // TODO: test validations
    }

    /**
     * Create an account holder
     *
     * Creates an account holder that [represents the sub-merchant&#39;s entity](https://docs.adyen.com/marketplaces-and-platforms/classic/account-structure#your-platform) in your platform. The details that you need to provide in the request depend on the sub-merchant&#39;s legal entity type. For more information, refer to [Account holder and accounts](https://docs.adyen.com/marketplaces-and-platforms/classic/account-holders-and-accounts#legal-entity-types).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postCreateAccountHolderTest() throws ApiException {
        CreateAccountHolderRequest createAccountHolderRequest = null;
        CreateAccountHolderResponse response = api.postCreateAccountHolder(createAccountHolderRequest);
        // TODO: test validations
    }

    /**
     * Get an account holder
     *
     * Returns the details of an account holder.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postGetAccountHolderTest() throws ApiException {
        GetAccountHolderRequest getAccountHolderRequest = null;
        GetAccountHolderResponse response = api.postGetAccountHolder(getAccountHolderRequest);
        // TODO: test validations
    }

    /**
     * Get a tax form
     *
     * Generates a tax form for account holders operating in the US. For more information, refer to [Providing tax forms](https://docs.adyen.com/marketplaces-and-platforms/classic/tax-forms).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postGetTaxFormTest() throws ApiException {
        GetTaxFormRequest getTaxFormRequest = null;
        GetTaxFormResponse response = api.postGetTaxForm(getTaxFormRequest);
        // TODO: test validations
    }

    /**
     * Suspend an account holder
     *
     * Changes the [status of an account holder](https://docs.adyen.com/marketplaces-and-platforms/classic/account-holders-and-accounts#account-holder-statuses) to **Suspended**.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postSuspendAccountHolderTest() throws ApiException {
        SuspendAccountHolderRequest suspendAccountHolderRequest = null;
        SuspendAccountHolderResponse response = api.postSuspendAccountHolder(suspendAccountHolderRequest);
        // TODO: test validations
    }

    /**
     * Unsuspend an account holder
     *
     * Changes the [status of an account holder](https://docs.adyen.com/marketplaces-and-platforms/classic/account-holders-and-accounts#account-holder-statuses) from **Suspended** to **Inactive**.  Account holders can have a **Suspended** [&#x60;status&#x60;](https://docs.adyen.com/api-explorer/#/Account/latest/post/getAccountHolder__resParam_verification-accountHolder-checks-status) if you suspend them through the [&#x60;/suspendAccountHolder&#x60;](https://docs.adyen.com/api-explorer/#/Account/v5/post/suspendAccountHolder) endpoint or if a verification deadline expires.  You can only unsuspend account holders if they do not have verification checks with a **FAILED** [&#x60;status&#x60;](https://docs.adyen.com/api-explorer/#/Account/latest/post/getAccountHolder__resParam_verification-accountHolder-checks-status).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postUnSuspendAccountHolderTest() throws ApiException {
        UnSuspendAccountHolderRequest unSuspendAccountHolderRequest = null;
        UnSuspendAccountHolderResponse response = api.postUnSuspendAccountHolder(unSuspendAccountHolderRequest);
        // TODO: test validations
    }

    /**
     * Update an account holder
     *
     * Updates the &#x60;accountHolderDetails&#x60; and &#x60;processingTier&#x60; of an account holder, and adds bank accounts and shareholders.  When updating &#x60;accountHolderDetails&#x60;, parameters that are not included in the request are left unchanged except for the following object:  * &#x60;metadata&#x60;: Updating the metadata replaces the entire object. This means that to update an existing key-value pair, you must provide the changes, as well as other existing key-value pairs.  When updating any field in the following objects, you must submit all the fields required for validation:   * &#x60;address&#x60;  * &#x60;fullPhoneNumber&#x60;  * &#x60;bankAccountDetails.BankAccountDetail&#x60;  * &#x60;businessDetails.shareholders.ShareholderContact&#x60;   For example, to update the &#x60;address.postalCode&#x60;, you must also submit the &#x60;address.country&#x60;, &#x60;.city&#x60;, &#x60;.street&#x60;, &#x60;.postalCode&#x60;, and possibly &#x60;.stateOrProvince&#x60; so that the address can be validated.  To add a bank account or shareholder, provide the bank account or shareholder details without a &#x60;bankAccountUUID&#x60; or a &#x60;shareholderCode&#x60;.  
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postUpdateAccountHolderTest() throws ApiException {
        UpdateAccountHolderRequest updateAccountHolderRequest = null;
        UpdateAccountHolderResponse response = api.postUpdateAccountHolder(updateAccountHolderRequest);
        // TODO: test validations
    }

    /**
     * Update payout or processing state
     *
     * Disables or enables the processing or payout state of an account holder.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postUpdateAccountHolderStateTest() throws ApiException {
        UpdateAccountHolderStateRequest updateAccountHolderStateRequest = null;
        GetAccountHolderStatusResponse response = api.postUpdateAccountHolderState(updateAccountHolderStateRequest);
        // TODO: test validations
    }

}
