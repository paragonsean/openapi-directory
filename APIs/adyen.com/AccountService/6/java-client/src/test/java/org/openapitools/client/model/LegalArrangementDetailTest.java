/*
 * Account API
 * This API is used for the classic integration. If you are just starting your implementation, refer to our [new integration guide](https://docs.adyen.com/marketplaces-and-platforms) instead.  The Account API provides endpoints for managing account-related entities on your platform. These related entities include account holders, accounts, bank accounts, shareholders, and verification-related documents. The management operations include actions such as creation, retrieval, updating, and deletion of them.  For more information, refer to our [documentation](https://docs.adyen.com/marketplaces-and-platforms/classic). ## Authentication Your Adyen contact will provide your API credential and an API key. To connect to the API, add an `X-API-Key` header with the API key as the value, for example:   ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ```  Alternatively, you can use the username and password to connect to the API using basic authentication. For example:  ``` curl -U \"ws@MarketPlace.YOUR_PLATFORM_ACCOUNT\":\"YOUR_WS_PASSWORD\" \\ -H \"Content-Type: application/json\" \\ ... ``` When going live, you need to generate new web service user credentials to access the [live endpoints](https://docs.adyen.com/development-resources/live-endpoints).  ## Versioning The Account API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://cal-test.adyen.com/cal/services/Account/v6/createAccountHolder ```
 *
 * The version of the OpenAPI document: 6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.LegalArrangementEntityDetail;
import org.openapitools.client.model.ViasAddress;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for LegalArrangementDetail
 */
public class LegalArrangementDetailTest {
    private final LegalArrangementDetail model = new LegalArrangementDetail();

    /**
     * Model tests for LegalArrangementDetail
     */
    @Test
    public void testLegalArrangementDetail() {
        // TODO: test LegalArrangementDetail
    }

    /**
     * Test the property 'address'
     */
    @Test
    public void addressTest() {
        // TODO: test address
    }

    /**
     * Test the property 'legalArrangementCode'
     */
    @Test
    public void legalArrangementCodeTest() {
        // TODO: test legalArrangementCode
    }

    /**
     * Test the property 'legalArrangementEntities'
     */
    @Test
    public void legalArrangementEntitiesTest() {
        // TODO: test legalArrangementEntities
    }

    /**
     * Test the property 'legalArrangementReference'
     */
    @Test
    public void legalArrangementReferenceTest() {
        // TODO: test legalArrangementReference
    }

    /**
     * Test the property 'legalForm'
     */
    @Test
    public void legalFormTest() {
        // TODO: test legalForm
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'registrationNumber'
     */
    @Test
    public void registrationNumberTest() {
        // TODO: test registrationNumber
    }

    /**
     * Test the property 'taxNumber'
     */
    @Test
    public void taxNumberTest() {
        // TODO: test taxNumber
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

}
