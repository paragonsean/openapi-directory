/*
 * Account API
 * This API is used for the classic integration. If you are just starting your implementation, refer to our [new integration guide](https://docs.adyen.com/marketplaces-and-platforms) instead.  The Account API provides endpoints for managing account-related entities on your platform. These related entities include account holders, accounts, bank accounts, shareholders, and verification-related documents. The management operations include actions such as creation, retrieval, updating, and deletion of them.  For more information, refer to our [documentation](https://docs.adyen.com/marketplaces-and-platforms/classic). ## Authentication Your Adyen contact will provide your API credential and an API key. To connect to the API, add an `X-API-Key` header with the API key as the value, for example:   ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ```  Alternatively, you can use the username and password to connect to the API using basic authentication. For example:  ``` curl -U \"ws@MarketPlace.YOUR_PLATFORM_ACCOUNT\":\"YOUR_WS_PASSWORD\" \\ -H \"Content-Type: application/json\" \\ ... ``` When going live, you need to generate new web service user credentials to access the [live endpoints](https://docs.adyen.com/development-resources/live-endpoints).  ## Versioning The Account API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://cal-test.adyen.com/cal/services/Account/v6/createAccountHolder ```
 *
 * The version of the OpenAPI document: 6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.BankAccountDetail;
import org.openapitools.client.model.BusinessDetails;
import org.openapitools.client.model.IndividualDetails;
import org.openapitools.client.model.LegalArrangementDetail;
import org.openapitools.client.model.PayoutMethod;
import org.openapitools.client.model.StoreDetail;
import org.openapitools.client.model.ViasAddress;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for AccountHolderDetails
 */
public class AccountHolderDetailsTest {
    private final AccountHolderDetails model = new AccountHolderDetails();

    /**
     * Model tests for AccountHolderDetails
     */
    @Test
    public void testAccountHolderDetails() {
        // TODO: test AccountHolderDetails
    }

    /**
     * Test the property 'address'
     */
    @Test
    public void addressTest() {
        // TODO: test address
    }

    /**
     * Test the property 'bankAccountDetails'
     */
    @Test
    public void bankAccountDetailsTest() {
        // TODO: test bankAccountDetails
    }

    /**
     * Test the property 'bankAggregatorDataReference'
     */
    @Test
    public void bankAggregatorDataReferenceTest() {
        // TODO: test bankAggregatorDataReference
    }

    /**
     * Test the property 'businessDetails'
     */
    @Test
    public void businessDetailsTest() {
        // TODO: test businessDetails
    }

    /**
     * Test the property 'email'
     */
    @Test
    public void emailTest() {
        // TODO: test email
    }

    /**
     * Test the property 'fullPhoneNumber'
     */
    @Test
    public void fullPhoneNumberTest() {
        // TODO: test fullPhoneNumber
    }

    /**
     * Test the property 'individualDetails'
     */
    @Test
    public void individualDetailsTest() {
        // TODO: test individualDetails
    }

    /**
     * Test the property 'lastReviewDate'
     */
    @Test
    public void lastReviewDateTest() {
        // TODO: test lastReviewDate
    }

    /**
     * Test the property 'legalArrangements'
     */
    @Test
    public void legalArrangementsTest() {
        // TODO: test legalArrangements
    }

    /**
     * Test the property 'merchantCategoryCode'
     */
    @Test
    public void merchantCategoryCodeTest() {
        // TODO: test merchantCategoryCode
    }

    /**
     * Test the property 'metadata'
     */
    @Test
    public void metadataTest() {
        // TODO: test metadata
    }

    /**
     * Test the property 'payoutMethods'
     */
    @Test
    public void payoutMethodsTest() {
        // TODO: test payoutMethods
    }

    /**
     * Test the property 'principalBusinessAddress'
     */
    @Test
    public void principalBusinessAddressTest() {
        // TODO: test principalBusinessAddress
    }

    /**
     * Test the property 'storeDetails'
     */
    @Test
    public void storeDetailsTest() {
        // TODO: test storeDetails
    }

    /**
     * Test the property 'webAddress'
     */
    @Test
    public void webAddressTest() {
        // TODO: test webAddress
    }

}
