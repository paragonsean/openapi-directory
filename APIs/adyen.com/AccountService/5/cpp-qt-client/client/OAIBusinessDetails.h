/**
 * Account API
 * This API is used for the classic integration. If you are just starting your implementation, refer to our [new integration guide](https://docs.adyen.com/marketplaces-and-platforms) instead.  The Account API provides endpoints for managing account-related entities on your platform. These related entities include account holders, accounts, bank accounts, shareholders, and verification-related documents. The management operations include actions such as creation, retrieval, updating, and deletion of them.  For more information, refer to our [documentation](https://docs.adyen.com/marketplaces-and-platforms/classic). ## Authentication Your Adyen contact will provide your API credential and an API key. To connect to the API, add an `X-API-Key` header with the API key as the value, for example:   ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ```  Alternatively, you can use the username and password to connect to the API using basic authentication. For example:  ``` curl -U \"ws@MarketPlace.YOUR_PLATFORM_ACCOUNT\":\"YOUR_WS_PASSWORD\" \\ -H \"Content-Type: application/json\" \\ ... ``` When going live, you need to generate new web service user credentials to access the [live endpoints](https://docs.adyen.com/development-resources/live-endpoints).  ## Versioning The Account API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://cal-test.adyen.com/cal/services/Account/v5/createAccountHolder ```
 *
 * The version of the OpenAPI document: 5
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBusinessDetails.h
 *
 * 
 */

#ifndef OAIBusinessDetails_H
#define OAIBusinessDetails_H

#include <QJsonObject>

#include "OAIShareholderContact.h"
#include "OAISignatoryContact.h"
#include "OAIUltimateParentCompany.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUltimateParentCompany;
class OAIShareholderContact;
class OAISignatoryContact;

class OAIBusinessDetails : public OAIObject {
public:
    OAIBusinessDetails();
    OAIBusinessDetails(QString json);
    ~OAIBusinessDetails() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDoingBusinessAs() const;
    void setDoingBusinessAs(const QString &doing_business_as);
    bool is_doing_business_as_Set() const;
    bool is_doing_business_as_Valid() const;

    QString getLegalBusinessName() const;
    void setLegalBusinessName(const QString &legal_business_name);
    bool is_legal_business_name_Set() const;
    bool is_legal_business_name_Valid() const;

    QList<OAIUltimateParentCompany> getListedUltimateParentCompany() const;
    void setListedUltimateParentCompany(const QList<OAIUltimateParentCompany> &listed_ultimate_parent_company);
    bool is_listed_ultimate_parent_company_Set() const;
    bool is_listed_ultimate_parent_company_Valid() const;

    QString getRegistrationNumber() const;
    void setRegistrationNumber(const QString &registration_number);
    bool is_registration_number_Set() const;
    bool is_registration_number_Valid() const;

    QList<OAIShareholderContact> getShareholders() const;
    void setShareholders(const QList<OAIShareholderContact> &shareholders);
    bool is_shareholders_Set() const;
    bool is_shareholders_Valid() const;

    QList<OAISignatoryContact> getSignatories() const;
    void setSignatories(const QList<OAISignatoryContact> &signatories);
    bool is_signatories_Set() const;
    bool is_signatories_Valid() const;

    QString getTaxId() const;
    void setTaxId(const QString &tax_id);
    bool is_tax_id_Set() const;
    bool is_tax_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_doing_business_as;
    bool m_doing_business_as_isSet;
    bool m_doing_business_as_isValid;

    QString m_legal_business_name;
    bool m_legal_business_name_isSet;
    bool m_legal_business_name_isValid;

    QList<OAIUltimateParentCompany> m_listed_ultimate_parent_company;
    bool m_listed_ultimate_parent_company_isSet;
    bool m_listed_ultimate_parent_company_isValid;

    QString m_registration_number;
    bool m_registration_number_isSet;
    bool m_registration_number_isValid;

    QList<OAIShareholderContact> m_shareholders;
    bool m_shareholders_isSet;
    bool m_shareholders_isValid;

    QList<OAISignatoryContact> m_signatories;
    bool m_signatories_isSet;
    bool m_signatories_isValid;

    QString m_tax_id;
    bool m_tax_id_isSet;
    bool m_tax_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBusinessDetails)

#endif // OAIBusinessDetails_H
