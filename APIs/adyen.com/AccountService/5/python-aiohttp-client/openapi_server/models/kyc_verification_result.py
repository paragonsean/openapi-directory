# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.kyc_bank_account_check_result import KYCBankAccountCheckResult
from openapi_server.models.kyc_card_check_result import KYCCardCheckResult
from openapi_server.models.kyc_check_result import KYCCheckResult
from openapi_server.models.kyc_shareholder_check_result import KYCShareholderCheckResult
from openapi_server.models.kyc_signatory_check_result import KYCSignatoryCheckResult
from openapi_server import util


class KYCVerificationResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_holder: KYCCheckResult=None, bank_accounts: List[KYCBankAccountCheckResult]=None, cards: List[KYCCardCheckResult]=None, shareholders: List[KYCShareholderCheckResult]=None, signatories: List[KYCSignatoryCheckResult]=None):
        """KYCVerificationResult - a model defined in OpenAPI

        :param account_holder: The account_holder of this KYCVerificationResult.
        :param bank_accounts: The bank_accounts of this KYCVerificationResult.
        :param cards: The cards of this KYCVerificationResult.
        :param shareholders: The shareholders of this KYCVerificationResult.
        :param signatories: The signatories of this KYCVerificationResult.
        """
        self.openapi_types = {
            'account_holder': KYCCheckResult,
            'bank_accounts': List[KYCBankAccountCheckResult],
            'cards': List[KYCCardCheckResult],
            'shareholders': List[KYCShareholderCheckResult],
            'signatories': List[KYCSignatoryCheckResult]
        }

        self.attribute_map = {
            'account_holder': 'accountHolder',
            'bank_accounts': 'bankAccounts',
            'cards': 'cards',
            'shareholders': 'shareholders',
            'signatories': 'signatories'
        }

        self._account_holder = account_holder
        self._bank_accounts = bank_accounts
        self._cards = cards
        self._shareholders = shareholders
        self._signatories = signatories

    @classmethod
    def from_dict(cls, dikt: dict) -> 'KYCVerificationResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The KYCVerificationResult of this KYCVerificationResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_holder(self):
        """Gets the account_holder of this KYCVerificationResult.

        The results of the checks on the account holder.

        :return: The account_holder of this KYCVerificationResult.
        :rtype: KYCCheckResult
        """
        return self._account_holder

    @account_holder.setter
    def account_holder(self, account_holder):
        """Sets the account_holder of this KYCVerificationResult.

        The results of the checks on the account holder.

        :param account_holder: The account_holder of this KYCVerificationResult.
        :type account_holder: KYCCheckResult
        """

        self._account_holder = account_holder

    @property
    def bank_accounts(self):
        """Gets the bank_accounts of this KYCVerificationResult.

        The results of the checks on the bank accounts.

        :return: The bank_accounts of this KYCVerificationResult.
        :rtype: List[KYCBankAccountCheckResult]
        """
        return self._bank_accounts

    @bank_accounts.setter
    def bank_accounts(self, bank_accounts):
        """Sets the bank_accounts of this KYCVerificationResult.

        The results of the checks on the bank accounts.

        :param bank_accounts: The bank_accounts of this KYCVerificationResult.
        :type bank_accounts: List[KYCBankAccountCheckResult]
        """

        self._bank_accounts = bank_accounts

    @property
    def cards(self):
        """Gets the cards of this KYCVerificationResult.

        The results of the checks on the cards.

        :return: The cards of this KYCVerificationResult.
        :rtype: List[KYCCardCheckResult]
        """
        return self._cards

    @cards.setter
    def cards(self, cards):
        """Sets the cards of this KYCVerificationResult.

        The results of the checks on the cards.

        :param cards: The cards of this KYCVerificationResult.
        :type cards: List[KYCCardCheckResult]
        """

        self._cards = cards

    @property
    def shareholders(self):
        """Gets the shareholders of this KYCVerificationResult.

        The results of the checks on the shareholders.

        :return: The shareholders of this KYCVerificationResult.
        :rtype: List[KYCShareholderCheckResult]
        """
        return self._shareholders

    @shareholders.setter
    def shareholders(self, shareholders):
        """Sets the shareholders of this KYCVerificationResult.

        The results of the checks on the shareholders.

        :param shareholders: The shareholders of this KYCVerificationResult.
        :type shareholders: List[KYCShareholderCheckResult]
        """

        self._shareholders = shareholders

    @property
    def signatories(self):
        """Gets the signatories of this KYCVerificationResult.

        The results of the checks on the signatories.

        :return: The signatories of this KYCVerificationResult.
        :rtype: List[KYCSignatoryCheckResult]
        """
        return self._signatories

    @signatories.setter
    def signatories(self, signatories):
        """Sets the signatories of this KYCVerificationResult.

        The results of the checks on the signatories.

        :param signatories: The signatories of this KYCVerificationResult.
        :type signatories: List[KYCSignatoryCheckResult]
        """

        self._signatories = signatories
