# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MigratedStores(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, business_line_id: str=None, store_code: str=None, store_id: str=None, store_reference: str=None):
        """MigratedStores - a model defined in OpenAPI

        :param business_line_id: The business_line_id of this MigratedStores.
        :param store_code: The store_code of this MigratedStores.
        :param store_id: The store_id of this MigratedStores.
        :param store_reference: The store_reference of this MigratedStores.
        """
        self.openapi_types = {
            'business_line_id': str,
            'store_code': str,
            'store_id': str,
            'store_reference': str
        }

        self.attribute_map = {
            'business_line_id': 'businessLineId',
            'store_code': 'storeCode',
            'store_id': 'storeId',
            'store_reference': 'storeReference'
        }

        self._business_line_id = business_line_id
        self._store_code = store_code
        self._store_id = store_id
        self._store_reference = store_reference

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MigratedStores':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MigratedStores of this MigratedStores.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def business_line_id(self):
        """Gets the business_line_id of this MigratedStores.

        The unique identifier of the business line associated with the migrated account holder in the balance platform.

        :return: The business_line_id of this MigratedStores.
        :rtype: str
        """
        return self._business_line_id

    @business_line_id.setter
    def business_line_id(self, business_line_id):
        """Sets the business_line_id of this MigratedStores.

        The unique identifier of the business line associated with the migrated account holder in the balance platform.

        :param business_line_id: The business_line_id of this MigratedStores.
        :type business_line_id: str
        """

        self._business_line_id = business_line_id

    @property
    def store_code(self):
        """Gets the store_code of this MigratedStores.

        The unique identifier of the store associated with the migrated account holder in the classic integration.

        :return: The store_code of this MigratedStores.
        :rtype: str
        """
        return self._store_code

    @store_code.setter
    def store_code(self, store_code):
        """Sets the store_code of this MigratedStores.

        The unique identifier of the store associated with the migrated account holder in the classic integration.

        :param store_code: The store_code of this MigratedStores.
        :type store_code: str
        """

        self._store_code = store_code

    @property
    def store_id(self):
        """Gets the store_id of this MigratedStores.

        The unique identifier of the store associated with the migrated account holder in the balance platform.

        :return: The store_id of this MigratedStores.
        :rtype: str
        """
        return self._store_id

    @store_id.setter
    def store_id(self, store_id):
        """Sets the store_id of this MigratedStores.

        The unique identifier of the store associated with the migrated account holder in the balance platform.

        :param store_id: The store_id of this MigratedStores.
        :type store_id: str
        """

        self._store_id = store_id

    @property
    def store_reference(self):
        """Gets the store_reference of this MigratedStores.

        Your reference for the store in the classic integration. The [Customer Area](https://ca-test.adyen.com/) uses this value for the store description.

        :return: The store_reference of this MigratedStores.
        :rtype: str
        """
        return self._store_reference

    @store_reference.setter
    def store_reference(self, store_reference):
        """Sets the store_reference of this MigratedStores.

        Your reference for the store in the classic integration. The [Customer Area](https://ca-test.adyen.com/) uses this value for the store description.

        :param store_reference: The store_reference of this MigratedStores.
        :type store_reference: str
        """

        self._store_reference = store_reference
