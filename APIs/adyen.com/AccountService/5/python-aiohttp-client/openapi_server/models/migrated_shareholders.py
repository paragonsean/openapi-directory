# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MigratedShareholders(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, legal_entity_code: str=None, shareholder_code: str=None):
        """MigratedShareholders - a model defined in OpenAPI

        :param legal_entity_code: The legal_entity_code of this MigratedShareholders.
        :param shareholder_code: The shareholder_code of this MigratedShareholders.
        """
        self.openapi_types = {
            'legal_entity_code': str,
            'shareholder_code': str
        }

        self.attribute_map = {
            'legal_entity_code': 'legalEntityCode',
            'shareholder_code': 'shareholderCode'
        }

        self._legal_entity_code = legal_entity_code
        self._shareholder_code = shareholder_code

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MigratedShareholders':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MigratedShareholders of this MigratedShareholders.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def legal_entity_code(self):
        """Gets the legal_entity_code of this MigratedShareholders.

        The unique identifier of the legal entity of that shareholder in the balance platform.

        :return: The legal_entity_code of this MigratedShareholders.
        :rtype: str
        """
        return self._legal_entity_code

    @legal_entity_code.setter
    def legal_entity_code(self, legal_entity_code):
        """Sets the legal_entity_code of this MigratedShareholders.

        The unique identifier of the legal entity of that shareholder in the balance platform.

        :param legal_entity_code: The legal_entity_code of this MigratedShareholders.
        :type legal_entity_code: str
        """

        self._legal_entity_code = legal_entity_code

    @property
    def shareholder_code(self):
        """Gets the shareholder_code of this MigratedShareholders.

        The unique identifier of the account of the migrated shareholder in the classic integration.

        :return: The shareholder_code of this MigratedShareholders.
        :rtype: str
        """
        return self._shareholder_code

    @shareholder_code.setter
    def shareholder_code(self, shareholder_code):
        """Sets the shareholder_code of this MigratedShareholders.

        The unique identifier of the account of the migrated shareholder in the classic integration.

        :param shareholder_code: The shareholder_code of this MigratedShareholders.
        :type shareholder_code: str
        """

        self._shareholder_code = shareholder_code
