# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetTaxFormRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_holder_code: str=None, form_type: str=None, year: int=None):
        """GetTaxFormRequest - a model defined in OpenAPI

        :param account_holder_code: The account_holder_code of this GetTaxFormRequest.
        :param form_type: The form_type of this GetTaxFormRequest.
        :param year: The year of this GetTaxFormRequest.
        """
        self.openapi_types = {
            'account_holder_code': str,
            'form_type': str,
            'year': int
        }

        self.attribute_map = {
            'account_holder_code': 'accountHolderCode',
            'form_type': 'formType',
            'year': 'year'
        }

        self._account_holder_code = account_holder_code
        self._form_type = form_type
        self._year = year

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetTaxFormRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetTaxFormRequest of this GetTaxFormRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_holder_code(self):
        """Gets the account_holder_code of this GetTaxFormRequest.

        The account holder code you provided when you created the account holder.

        :return: The account_holder_code of this GetTaxFormRequest.
        :rtype: str
        """
        return self._account_holder_code

    @account_holder_code.setter
    def account_holder_code(self, account_holder_code):
        """Sets the account_holder_code of this GetTaxFormRequest.

        The account holder code you provided when you created the account holder.

        :param account_holder_code: The account_holder_code of this GetTaxFormRequest.
        :type account_holder_code: str
        """
        if account_holder_code is None:
            raise ValueError("Invalid value for `account_holder_code`, must not be `None`")

        self._account_holder_code = account_holder_code

    @property
    def form_type(self):
        """Gets the form_type of this GetTaxFormRequest.

        Type of the requested tax form. For example, 1099-K.

        :return: The form_type of this GetTaxFormRequest.
        :rtype: str
        """
        return self._form_type

    @form_type.setter
    def form_type(self, form_type):
        """Sets the form_type of this GetTaxFormRequest.

        Type of the requested tax form. For example, 1099-K.

        :param form_type: The form_type of this GetTaxFormRequest.
        :type form_type: str
        """
        if form_type is None:
            raise ValueError("Invalid value for `form_type`, must not be `None`")

        self._form_type = form_type

    @property
    def year(self):
        """Gets the year of this GetTaxFormRequest.

        Applicable tax year in the YYYY format.

        :return: The year of this GetTaxFormRequest.
        :rtype: int
        """
        return self._year

    @year.setter
    def year(self, year):
        """Sets the year of this GetTaxFormRequest.

        Applicable tax year in the YYYY format.

        :param year: The year of this GetTaxFormRequest.
        :type year: int
        """
        if year is None:
            raise ValueError("Invalid value for `year`, must not be `None`")

        self._year = year
