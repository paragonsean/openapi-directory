# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetUploadedDocumentsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_holder_code: str=None, bank_account_uuid: str=None, shareholder_code: str=None):
        """GetUploadedDocumentsRequest - a model defined in OpenAPI

        :param account_holder_code: The account_holder_code of this GetUploadedDocumentsRequest.
        :param bank_account_uuid: The bank_account_uuid of this GetUploadedDocumentsRequest.
        :param shareholder_code: The shareholder_code of this GetUploadedDocumentsRequest.
        """
        self.openapi_types = {
            'account_holder_code': str,
            'bank_account_uuid': str,
            'shareholder_code': str
        }

        self.attribute_map = {
            'account_holder_code': 'accountHolderCode',
            'bank_account_uuid': 'bankAccountUUID',
            'shareholder_code': 'shareholderCode'
        }

        self._account_holder_code = account_holder_code
        self._bank_account_uuid = bank_account_uuid
        self._shareholder_code = shareholder_code

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetUploadedDocumentsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetUploadedDocumentsRequest of this GetUploadedDocumentsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_holder_code(self):
        """Gets the account_holder_code of this GetUploadedDocumentsRequest.

        The code of the Account Holder for which to retrieve the documents.

        :return: The account_holder_code of this GetUploadedDocumentsRequest.
        :rtype: str
        """
        return self._account_holder_code

    @account_holder_code.setter
    def account_holder_code(self, account_holder_code):
        """Sets the account_holder_code of this GetUploadedDocumentsRequest.

        The code of the Account Holder for which to retrieve the documents.

        :param account_holder_code: The account_holder_code of this GetUploadedDocumentsRequest.
        :type account_holder_code: str
        """
        if account_holder_code is None:
            raise ValueError("Invalid value for `account_holder_code`, must not be `None`")

        self._account_holder_code = account_holder_code

    @property
    def bank_account_uuid(self):
        """Gets the bank_account_uuid of this GetUploadedDocumentsRequest.

        The code of the Bank Account for which to retrieve the documents.

        :return: The bank_account_uuid of this GetUploadedDocumentsRequest.
        :rtype: str
        """
        return self._bank_account_uuid

    @bank_account_uuid.setter
    def bank_account_uuid(self, bank_account_uuid):
        """Sets the bank_account_uuid of this GetUploadedDocumentsRequest.

        The code of the Bank Account for which to retrieve the documents.

        :param bank_account_uuid: The bank_account_uuid of this GetUploadedDocumentsRequest.
        :type bank_account_uuid: str
        """

        self._bank_account_uuid = bank_account_uuid

    @property
    def shareholder_code(self):
        """Gets the shareholder_code of this GetUploadedDocumentsRequest.

        The code of the Shareholder for which to retrieve the documents.

        :return: The shareholder_code of this GetUploadedDocumentsRequest.
        :rtype: str
        """
        return self._shareholder_code

    @shareholder_code.setter
    def shareholder_code(self, shareholder_code):
        """Sets the shareholder_code of this GetUploadedDocumentsRequest.

        The code of the Shareholder for which to retrieve the documents.

        :param shareholder_code: The shareholder_code of this GetUploadedDocumentsRequest.
        :type shareholder_code: str
        """

        self._shareholder_code = shareholder_code
