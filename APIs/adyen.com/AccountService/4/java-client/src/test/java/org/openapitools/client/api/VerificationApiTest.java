/*
 * Account API
 * This API is used for the classic integration. If you are just starting your implementation, refer to our [new integration guide](https://docs.adyen.com/marketplaces-and-platforms) instead.  The Account API provides endpoints for managing account-related entities on your platform. These related entities include account holders, accounts, bank accounts, shareholders, and verification-related documents. The management operations include actions such as creation, retrieval, updating, and deletion of them.  For more information, refer to our [documentation](https://docs.adyen.com/marketplaces-and-platforms/classic). ## Authentication Your Adyen contact will provide your API credential and an API key. To connect to the API, add an `X-API-Key` header with the API key as the value, for example:   ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ```  Alternatively, you can use the username and password to connect to the API using basic authentication. For example:  ``` curl -U \"ws@MarketPlace.YOUR_PLATFORM_ACCOUNT\":\"YOUR_WS_PASSWORD\" \\ -H \"Content-Type: application/json\" \\ ... ``` When going live, you need to generate new web service user credentials to access the [live endpoints](https://docs.adyen.com/development-resources/live-endpoints).  ## Versioning The Account API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://cal-test.adyen.com/cal/services/Account/v4/createAccountHolder ```
 *
 * The version of the OpenAPI document: 4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.DeleteBankAccountRequest;
import org.openapitools.client.model.DeleteLegalArrangementRequest;
import org.openapitools.client.model.DeleteShareholderRequest;
import org.openapitools.client.model.DeleteSignatoriesRequest;
import org.openapitools.client.model.GenericResponse;
import org.openapitools.client.model.GetUploadedDocumentsRequest;
import org.openapitools.client.model.GetUploadedDocumentsResponse;
import org.openapitools.client.model.ServiceError;
import org.openapitools.client.model.UpdateAccountHolderResponse;
import org.openapitools.client.model.UploadDocumentRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for VerificationApi
 */
@Disabled
public class VerificationApiTest {

    private final VerificationApi api = new VerificationApi();

    /**
     * Delete bank accounts
     *
     * Deletes bank accounts associated with an account holder. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postDeleteBankAccountsTest() throws ApiException {
        DeleteBankAccountRequest deleteBankAccountRequest = null;
        GenericResponse response = api.postDeleteBankAccounts(deleteBankAccountRequest);
        // TODO: test validations
    }

    /**
     * Delete legal arrangements
     *
     * Deletes legal arrangements and/or legal arrangement entities associated with an account holder.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postDeleteLegalArrangementsTest() throws ApiException {
        DeleteLegalArrangementRequest deleteLegalArrangementRequest = null;
        GenericResponse response = api.postDeleteLegalArrangements(deleteLegalArrangementRequest);
        // TODO: test validations
    }

    /**
     * Delete shareholders
     *
     * Deletes shareholders associated with an account holder.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postDeleteShareholdersTest() throws ApiException {
        DeleteShareholderRequest deleteShareholderRequest = null;
        GenericResponse response = api.postDeleteShareholders(deleteShareholderRequest);
        // TODO: test validations
    }

    /**
     * Delete signatories
     *
     * Deletes signatories associated with an account holder.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postDeleteSignatoriesTest() throws ApiException {
        DeleteSignatoriesRequest deleteSignatoriesRequest = null;
        GenericResponse response = api.postDeleteSignatories(deleteSignatoriesRequest);
        // TODO: test validations
    }

    /**
     * Get documents
     *
     * Returns documents that were previously uploaded for an account holder. Adyen uses the documents during the [verification process](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-process). 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postGetUploadedDocumentsTest() throws ApiException {
        GetUploadedDocumentsRequest getUploadedDocumentsRequest = null;
        GetUploadedDocumentsResponse response = api.postGetUploadedDocuments(getUploadedDocumentsRequest);
        // TODO: test validations
    }

    /**
     * Upload a document
     *
     * Uploads a document for an account holder. Adyen uses the documents during the [verification process](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-process).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postUploadDocumentTest() throws ApiException {
        UploadDocumentRequest uploadDocumentRequest = null;
        UpdateAccountHolderResponse response = api.postUploadDocument(uploadDocumentRequest);
        // TODO: test validations
    }

}
