/**
 * Account API
 * This API is used for the classic integration. If you are just starting your implementation, refer to our [new integration guide](https://docs.adyen.com/marketplaces-and-platforms) instead.  The Account API provides endpoints for managing account-related entities on your platform. These related entities include account holders, accounts, bank accounts, shareholders, and verification-related documents. The management operations include actions such as creation, retrieval, updating, and deletion of them.  For more information, refer to our [documentation](https://docs.adyen.com/marketplaces-and-platforms/classic). ## Authentication Your Adyen contact will provide your API credential and an API key. To connect to the API, add an `X-API-Key` header with the API key as the value, for example:   ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ```  Alternatively, you can use the username and password to connect to the API using basic authentication. For example:  ``` curl -U \"ws@MarketPlace.YOUR_PLATFORM_ACCOUNT\":\"YOUR_WS_PASSWORD\" \\ -H \"Content-Type: application/json\" \\ ... ``` When going live, you need to generate new web service user credentials to access the [live endpoints](https://docs.adyen.com/development-resources/live-endpoints).  ## Versioning The Account API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://cal-test.adyen.com/cal/services/Account/v4/createAccountHolder ```
 *
 * The version of the OpenAPI document: 4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import KYCCheckSummary from './KYCCheckSummary';

/**
 * The KYCCheckStatusData model module.
 * @module model/KYCCheckStatusData
 * @version 4
 */
class KYCCheckStatusData {
    /**
     * Constructs a new <code>KYCCheckStatusData</code>.
     * @alias module:model/KYCCheckStatusData
     * @param status {module:model/KYCCheckStatusData.StatusEnum} The status of the check.  Possible values: **AWAITING_DATA** , **DATA_PROVIDED**, **FAILED**, **INVALID_DATA**, **PASSED**, **PENDING**, **RETRY_LIMIT_REACHED**.
     * @param type {module:model/KYCCheckStatusData.TypeEnum} The type of check.  Possible values:   * **BANK_ACCOUNT_VERIFICATION**: Used in v5 and earlier. Replaced by **PAYOUT_METHOD_VERIFICATION** in v6 and later.   * **COMPANY_VERIFICATION**    * **CARD_VERIFICATION**  * **IDENTITY_VERIFICATION**  * **LEGAL_ARRANGEMENT_VERIFICATION**  * **NONPROFIT_VERIFICATION**   * **PASSPORT_VERIFICATION**  * **PAYOUT_METHOD_VERIFICATION**: Used in v6 and later.  * **PCI_VERIFICATION**
     */
    constructor(status, type) { 
        
        KYCCheckStatusData.initialize(this, status, type);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, status, type) { 
        obj['status'] = status;
        obj['type'] = type;
    }

    /**
     * Constructs a <code>KYCCheckStatusData</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/KYCCheckStatusData} obj Optional instance to populate.
     * @return {module:model/KYCCheckStatusData} The populated <code>KYCCheckStatusData</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new KYCCheckStatusData();

            if (data.hasOwnProperty('requiredFields')) {
                obj['requiredFields'] = ApiClient.convertToType(data['requiredFields'], ['String']);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('summary')) {
                obj['summary'] = KYCCheckSummary.constructFromObject(data['summary']);
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>KYCCheckStatusData</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>KYCCheckStatusData</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of KYCCheckStatusData.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is an array
        if (!Array.isArray(data['requiredFields'])) {
            throw new Error("Expected the field `requiredFields` to be an array in the JSON data but got " + data['requiredFields']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // validate the optional field `summary`
        if (data['summary']) { // data not null
          KYCCheckSummary.validateJSON(data['summary']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}

KYCCheckStatusData.RequiredProperties = ["status", "type"];

/**
 * A list of the fields required for execution of the check.
 * @member {Array.<String>} requiredFields
 */
KYCCheckStatusData.prototype['requiredFields'] = undefined;

/**
 * The status of the check.  Possible values: **AWAITING_DATA** , **DATA_PROVIDED**, **FAILED**, **INVALID_DATA**, **PASSED**, **PENDING**, **RETRY_LIMIT_REACHED**.
 * @member {module:model/KYCCheckStatusData.StatusEnum} status
 */
KYCCheckStatusData.prototype['status'] = undefined;

/**
 * A summary of the execution of the check.
 * @member {module:model/KYCCheckSummary} summary
 */
KYCCheckStatusData.prototype['summary'] = undefined;

/**
 * The type of check.  Possible values:   * **BANK_ACCOUNT_VERIFICATION**: Used in v5 and earlier. Replaced by **PAYOUT_METHOD_VERIFICATION** in v6 and later.   * **COMPANY_VERIFICATION**    * **CARD_VERIFICATION**  * **IDENTITY_VERIFICATION**  * **LEGAL_ARRANGEMENT_VERIFICATION**  * **NONPROFIT_VERIFICATION**   * **PASSPORT_VERIFICATION**  * **PAYOUT_METHOD_VERIFICATION**: Used in v6 and later.  * **PCI_VERIFICATION**
 * @member {module:model/KYCCheckStatusData.TypeEnum} type
 */
KYCCheckStatusData.prototype['type'] = undefined;





/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
KYCCheckStatusData['StatusEnum'] = {

    /**
     * value: "AWAITING_DATA"
     * @const
     */
    "AWAITING_DATA": "AWAITING_DATA",

    /**
     * value: "DATA_PROVIDED"
     * @const
     */
    "DATA_PROVIDED": "DATA_PROVIDED",

    /**
     * value: "FAILED"
     * @const
     */
    "FAILED": "FAILED",

    /**
     * value: "INVALID_DATA"
     * @const
     */
    "INVALID_DATA": "INVALID_DATA",

    /**
     * value: "PASSED"
     * @const
     */
    "PASSED": "PASSED",

    /**
     * value: "PENDING"
     * @const
     */
    "PENDING": "PENDING",

    /**
     * value: "PENDING_REVIEW"
     * @const
     */
    "PENDING_REVIEW": "PENDING_REVIEW",

    /**
     * value: "RETRY_LIMIT_REACHED"
     * @const
     */
    "RETRY_LIMIT_REACHED": "RETRY_LIMIT_REACHED",

    /**
     * value: "UNCHECKED"
     * @const
     */
    "UNCHECKED": "UNCHECKED"
};


/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
KYCCheckStatusData['TypeEnum'] = {

    /**
     * value: "BANK_ACCOUNT_VERIFICATION"
     * @const
     */
    "BANK_ACCOUNT_VERIFICATION": "BANK_ACCOUNT_VERIFICATION",

    /**
     * value: "CARD_VERIFICATION"
     * @const
     */
    "CARD_VERIFICATION": "CARD_VERIFICATION",

    /**
     * value: "COMPANY_VERIFICATION"
     * @const
     */
    "COMPANY_VERIFICATION": "COMPANY_VERIFICATION",

    /**
     * value: "IDENTITY_VERIFICATION"
     * @const
     */
    "IDENTITY_VERIFICATION": "IDENTITY_VERIFICATION",

    /**
     * value: "LEGAL_ARRANGEMENT_VERIFICATION"
     * @const
     */
    "LEGAL_ARRANGEMENT_VERIFICATION": "LEGAL_ARRANGEMENT_VERIFICATION",

    /**
     * value: "NONPROFIT_VERIFICATION"
     * @const
     */
    "NONPROFIT_VERIFICATION": "NONPROFIT_VERIFICATION",

    /**
     * value: "PASSPORT_VERIFICATION"
     * @const
     */
    "PASSPORT_VERIFICATION": "PASSPORT_VERIFICATION",

    /**
     * value: "PAYOUT_METHOD_VERIFICATION"
     * @const
     */
    "PAYOUT_METHOD_VERIFICATION": "PAYOUT_METHOD_VERIFICATION",

    /**
     * value: "PCI_VERIFICATION"
     * @const
     */
    "PCI_VERIFICATION": "PCI_VERIFICATION"
};



export default KYCCheckStatusData;

