/**
 * Account API
 * This API is used for the classic integration. If you are just starting your implementation, refer to our [new integration guide](https://docs.adyen.com/marketplaces-and-platforms) instead.  The Account API provides endpoints for managing account-related entities on your platform. These related entities include account holders, accounts, bank accounts, shareholders, and verification-related documents. The management operations include actions such as creation, retrieval, updating, and deletion of them.  For more information, refer to our [documentation](https://docs.adyen.com/marketplaces-and-platforms/classic). ## Authentication Your Adyen contact will provide your API credential and an API key. To connect to the API, add an `X-API-Key` header with the API key as the value, for example:   ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ```  Alternatively, you can use the username and password to connect to the API using basic authentication. For example:  ``` curl -U \"ws@MarketPlace.YOUR_PLATFORM_ACCOUNT\":\"YOUR_WS_PASSWORD\" \\ -H \"Content-Type: application/json\" \\ ... ``` When going live, you need to generate new web service user credentials to access the [live endpoints](https://docs.adyen.com/development-resources/live-endpoints).  ## Versioning The Account API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://cal-test.adyen.com/cal/services/Account/v4/createAccountHolder ```
 *
 * The version of the OpenAPI document: 4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AccountHolderDetails from './AccountHolderDetails';
import AccountHolderStatus from './AccountHolderStatus';
import AccountWrapper from './AccountWrapper';
import KYCVerificationResult from './KYCVerificationResult';

/**
 * The GetAccountHolderResponse model module.
 * @module model/GetAccountHolderResponse
 * @version 4
 */
class GetAccountHolderResponse {
    /**
     * Constructs a new <code>GetAccountHolderResponse</code>.
     * @alias module:model/GetAccountHolderResponse
     */
    constructor() { 
        
        GetAccountHolderResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GetAccountHolderResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetAccountHolderResponse} obj Optional instance to populate.
     * @return {module:model/GetAccountHolderResponse} The populated <code>GetAccountHolderResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetAccountHolderResponse();

            if (data.hasOwnProperty('accountHolderCode')) {
                obj['accountHolderCode'] = ApiClient.convertToType(data['accountHolderCode'], 'String');
            }
            if (data.hasOwnProperty('accountHolderDetails')) {
                obj['accountHolderDetails'] = AccountHolderDetails.constructFromObject(data['accountHolderDetails']);
            }
            if (data.hasOwnProperty('accountHolderStatus')) {
                obj['accountHolderStatus'] = AccountHolderStatus.constructFromObject(data['accountHolderStatus']);
            }
            if (data.hasOwnProperty('accounts')) {
                obj['accounts'] = ApiClient.convertToType(data['accounts'], [AccountWrapper]);
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('legalEntity')) {
                obj['legalEntity'] = ApiClient.convertToType(data['legalEntity'], 'String');
            }
            if (data.hasOwnProperty('primaryCurrency')) {
                obj['primaryCurrency'] = ApiClient.convertToType(data['primaryCurrency'], 'String');
            }
            if (data.hasOwnProperty('pspReference')) {
                obj['pspReference'] = ApiClient.convertToType(data['pspReference'], 'String');
            }
            if (data.hasOwnProperty('resultCode')) {
                obj['resultCode'] = ApiClient.convertToType(data['resultCode'], 'String');
            }
            if (data.hasOwnProperty('submittedAsync')) {
                obj['submittedAsync'] = ApiClient.convertToType(data['submittedAsync'], 'Boolean');
            }
            if (data.hasOwnProperty('verification')) {
                obj['verification'] = KYCVerificationResult.constructFromObject(data['verification']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetAccountHolderResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetAccountHolderResponse</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['accountHolderCode'] && !(typeof data['accountHolderCode'] === 'string' || data['accountHolderCode'] instanceof String)) {
            throw new Error("Expected the field `accountHolderCode` to be a primitive type in the JSON string but got " + data['accountHolderCode']);
        }
        // validate the optional field `accountHolderDetails`
        if (data['accountHolderDetails']) { // data not null
          AccountHolderDetails.validateJSON(data['accountHolderDetails']);
        }
        // validate the optional field `accountHolderStatus`
        if (data['accountHolderStatus']) { // data not null
          AccountHolderStatus.validateJSON(data['accountHolderStatus']);
        }
        if (data['accounts']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['accounts'])) {
                throw new Error("Expected the field `accounts` to be an array in the JSON data but got " + data['accounts']);
            }
            // validate the optional field `accounts` (array)
            for (const item of data['accounts']) {
                AccountWrapper.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['legalEntity'] && !(typeof data['legalEntity'] === 'string' || data['legalEntity'] instanceof String)) {
            throw new Error("Expected the field `legalEntity` to be a primitive type in the JSON string but got " + data['legalEntity']);
        }
        // ensure the json data is a string
        if (data['primaryCurrency'] && !(typeof data['primaryCurrency'] === 'string' || data['primaryCurrency'] instanceof String)) {
            throw new Error("Expected the field `primaryCurrency` to be a primitive type in the JSON string but got " + data['primaryCurrency']);
        }
        // ensure the json data is a string
        if (data['pspReference'] && !(typeof data['pspReference'] === 'string' || data['pspReference'] instanceof String)) {
            throw new Error("Expected the field `pspReference` to be a primitive type in the JSON string but got " + data['pspReference']);
        }
        // ensure the json data is a string
        if (data['resultCode'] && !(typeof data['resultCode'] === 'string' || data['resultCode'] instanceof String)) {
            throw new Error("Expected the field `resultCode` to be a primitive type in the JSON string but got " + data['resultCode']);
        }
        // validate the optional field `verification`
        if (data['verification']) { // data not null
          KYCVerificationResult.validateJSON(data['verification']);
        }

        return true;
    }


}



/**
 * The code of the account holder.
 * @member {String} accountHolderCode
 */
GetAccountHolderResponse.prototype['accountHolderCode'] = undefined;

/**
 * Details of the account holder.
 * @member {module:model/AccountHolderDetails} accountHolderDetails
 */
GetAccountHolderResponse.prototype['accountHolderDetails'] = undefined;

/**
 * The status of the account holder.
 * @member {module:model/AccountHolderStatus} accountHolderStatus
 */
GetAccountHolderResponse.prototype['accountHolderStatus'] = undefined;

/**
 * A list of the accounts under the account holder.
 * @member {Array.<module:model/AccountWrapper>} accounts
 */
GetAccountHolderResponse.prototype['accounts'] = undefined;

/**
 * The description of the account holder.
 * @member {String} description
 */
GetAccountHolderResponse.prototype['description'] = undefined;

/**
 * The legal entity of the account holder.
 * @member {module:model/GetAccountHolderResponse.LegalEntityEnum} legalEntity
 */
GetAccountHolderResponse.prototype['legalEntity'] = undefined;

/**
 * The three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes), with which the prospective account holder primarily deals.
 * @member {String} primaryCurrency
 */
GetAccountHolderResponse.prototype['primaryCurrency'] = undefined;

/**
 * The reference of a request. Can be used to uniquely identify the request.
 * @member {String} pspReference
 */
GetAccountHolderResponse.prototype['pspReference'] = undefined;

/**
 * The result code.
 * @member {String} resultCode
 */
GetAccountHolderResponse.prototype['resultCode'] = undefined;

/**
 * Indicates whether the request is processed asynchronously. Depending on the request's platform settings, the following scenarios may be applied: * **true**: The request is queued and will be executed when the providing service is available in the order in which the requests are received. * **false**: The processing of the request is immediately attempted; it may result in an error if the providing service is unavailable.
 * @member {Boolean} submittedAsync
 */
GetAccountHolderResponse.prototype['submittedAsync'] = undefined;

/**
 * The details of KYC Verification of the account holder.
 * @member {module:model/KYCVerificationResult} verification
 */
GetAccountHolderResponse.prototype['verification'] = undefined;





/**
 * Allowed values for the <code>legalEntity</code> property.
 * @enum {String}
 * @readonly
 */
GetAccountHolderResponse['LegalEntityEnum'] = {

    /**
     * value: "Business"
     * @const
     */
    "Business": "Business",

    /**
     * value: "Individual"
     * @const
     */
    "Individual": "Individual",

    /**
     * value: "NonProfit"
     * @const
     */
    "NonProfit": "NonProfit"
};



export default GetAccountHolderResponse;

