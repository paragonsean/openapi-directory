# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.payout_schedule_response import PayoutScheduleResponse
from openapi_server import util


class Account(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_code: str=None, beneficiary_account: str=None, beneficiary_merchant_reference: str=None, payout_schedule: PayoutScheduleResponse=None):
        """Account - a model defined in OpenAPI

        :param account_code: The account_code of this Account.
        :param beneficiary_account: The beneficiary_account of this Account.
        :param beneficiary_merchant_reference: The beneficiary_merchant_reference of this Account.
        :param payout_schedule: The payout_schedule of this Account.
        """
        self.openapi_types = {
            'account_code': str,
            'beneficiary_account': str,
            'beneficiary_merchant_reference': str,
            'payout_schedule': PayoutScheduleResponse
        }

        self.attribute_map = {
            'account_code': 'accountCode',
            'beneficiary_account': 'beneficiaryAccount',
            'beneficiary_merchant_reference': 'beneficiaryMerchantReference',
            'payout_schedule': 'payoutSchedule'
        }

        self._account_code = account_code
        self._beneficiary_account = beneficiary_account
        self._beneficiary_merchant_reference = beneficiary_merchant_reference
        self._payout_schedule = payout_schedule

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Account':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Account of this Account.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_code(self):
        """Gets the account_code of this Account.

        The code of the account.

        :return: The account_code of this Account.
        :rtype: str
        """
        return self._account_code

    @account_code.setter
    def account_code(self, account_code):
        """Sets the account_code of this Account.

        The code of the account.

        :param account_code: The account_code of this Account.
        :type account_code: str
        """

        self._account_code = account_code

    @property
    def beneficiary_account(self):
        """Gets the beneficiary_account of this Account.

        The beneficiary of the account.

        :return: The beneficiary_account of this Account.
        :rtype: str
        """
        return self._beneficiary_account

    @beneficiary_account.setter
    def beneficiary_account(self, beneficiary_account):
        """Sets the beneficiary_account of this Account.

        The beneficiary of the account.

        :param beneficiary_account: The beneficiary_account of this Account.
        :type beneficiary_account: str
        """

        self._beneficiary_account = beneficiary_account

    @property
    def beneficiary_merchant_reference(self):
        """Gets the beneficiary_merchant_reference of this Account.

        The reason that a beneficiary has been set up for this account. This may have been supplied during the setup of a beneficiary at the discretion of the executing user.

        :return: The beneficiary_merchant_reference of this Account.
        :rtype: str
        """
        return self._beneficiary_merchant_reference

    @beneficiary_merchant_reference.setter
    def beneficiary_merchant_reference(self, beneficiary_merchant_reference):
        """Sets the beneficiary_merchant_reference of this Account.

        The reason that a beneficiary has been set up for this account. This may have been supplied during the setup of a beneficiary at the discretion of the executing user.

        :param beneficiary_merchant_reference: The beneficiary_merchant_reference of this Account.
        :type beneficiary_merchant_reference: str
        """

        self._beneficiary_merchant_reference = beneficiary_merchant_reference

    @property
    def payout_schedule(self):
        """Gets the payout_schedule of this Account.

        The account's payout schedule.

        :return: The payout_schedule of this Account.
        :rtype: PayoutScheduleResponse
        """
        return self._payout_schedule

    @payout_schedule.setter
    def payout_schedule(self, payout_schedule):
        """Sets the payout_schedule of this Account.

        The account's payout schedule.

        :param payout_schedule: The payout_schedule of this Account.
        :type payout_schedule: PayoutScheduleResponse
        """

        self._payout_schedule = payout_schedule
