# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.account_holder_status import AccountHolderStatus
from openapi_server import util


class UnSuspendAccountHolderResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_holder_status: AccountHolderStatus=None, psp_reference: str=None, result_code: str=None, submitted_async: bool=None):
        """UnSuspendAccountHolderResponse - a model defined in OpenAPI

        :param account_holder_status: The account_holder_status of this UnSuspendAccountHolderResponse.
        :param psp_reference: The psp_reference of this UnSuspendAccountHolderResponse.
        :param result_code: The result_code of this UnSuspendAccountHolderResponse.
        :param submitted_async: The submitted_async of this UnSuspendAccountHolderResponse.
        """
        self.openapi_types = {
            'account_holder_status': AccountHolderStatus,
            'psp_reference': str,
            'result_code': str,
            'submitted_async': bool
        }

        self.attribute_map = {
            'account_holder_status': 'accountHolderStatus',
            'psp_reference': 'pspReference',
            'result_code': 'resultCode',
            'submitted_async': 'submittedAsync'
        }

        self._account_holder_status = account_holder_status
        self._psp_reference = psp_reference
        self._result_code = result_code
        self._submitted_async = submitted_async

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UnSuspendAccountHolderResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UnSuspendAccountHolderResponse of this UnSuspendAccountHolderResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_holder_status(self):
        """Gets the account_holder_status of this UnSuspendAccountHolderResponse.

        The new status of the Account Holder.

        :return: The account_holder_status of this UnSuspendAccountHolderResponse.
        :rtype: AccountHolderStatus
        """
        return self._account_holder_status

    @account_holder_status.setter
    def account_holder_status(self, account_holder_status):
        """Sets the account_holder_status of this UnSuspendAccountHolderResponse.

        The new status of the Account Holder.

        :param account_holder_status: The account_holder_status of this UnSuspendAccountHolderResponse.
        :type account_holder_status: AccountHolderStatus
        """

        self._account_holder_status = account_holder_status

    @property
    def psp_reference(self):
        """Gets the psp_reference of this UnSuspendAccountHolderResponse.

        The reference of a request. Can be used to uniquely identify the request.

        :return: The psp_reference of this UnSuspendAccountHolderResponse.
        :rtype: str
        """
        return self._psp_reference

    @psp_reference.setter
    def psp_reference(self, psp_reference):
        """Sets the psp_reference of this UnSuspendAccountHolderResponse.

        The reference of a request. Can be used to uniquely identify the request.

        :param psp_reference: The psp_reference of this UnSuspendAccountHolderResponse.
        :type psp_reference: str
        """

        self._psp_reference = psp_reference

    @property
    def result_code(self):
        """Gets the result_code of this UnSuspendAccountHolderResponse.

        The result code.

        :return: The result_code of this UnSuspendAccountHolderResponse.
        :rtype: str
        """
        return self._result_code

    @result_code.setter
    def result_code(self, result_code):
        """Sets the result_code of this UnSuspendAccountHolderResponse.

        The result code.

        :param result_code: The result_code of this UnSuspendAccountHolderResponse.
        :type result_code: str
        """

        self._result_code = result_code

    @property
    def submitted_async(self):
        """Gets the submitted_async of this UnSuspendAccountHolderResponse.

        Indicates whether the request is processed asynchronously. Depending on the request's platform settings, the following scenarios may be applied: * **true**: The request is queued and will be executed when the providing service is available in the order in which the requests are received. * **false**: The processing of the request is immediately attempted; it may result in an error if the providing service is unavailable.

        :return: The submitted_async of this UnSuspendAccountHolderResponse.
        :rtype: bool
        """
        return self._submitted_async

    @submitted_async.setter
    def submitted_async(self, submitted_async):
        """Sets the submitted_async of this UnSuspendAccountHolderResponse.

        Indicates whether the request is processed asynchronously. Depending on the request's platform settings, the following scenarios may be applied: * **true**: The request is queued and will be executed when the providing service is available in the order in which the requests are received. * **false**: The processing of the request is immediately attempted; it may result in an error if the providing service is unavailable.

        :param submitted_async: The submitted_async of this UnSuspendAccountHolderResponse.
        :type submitted_async: bool
        """

        self._submitted_async = submitted_async
