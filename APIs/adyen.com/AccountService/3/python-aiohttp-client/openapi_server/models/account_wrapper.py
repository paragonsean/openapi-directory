# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.account import Account
from openapi_server import util


class AccountWrapper(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account: Account=None):
        """AccountWrapper - a model defined in OpenAPI

        :param account: The account of this AccountWrapper.
        """
        self.openapi_types = {
            'account': Account
        }

        self.attribute_map = {
            'account': 'Account'
        }

        self._account = account

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AccountWrapper':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AccountWrapper of this AccountWrapper.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account(self):
        """Gets the account of this AccountWrapper.


        :return: The account of this AccountWrapper.
        :rtype: Account
        """
        return self._account

    @account.setter
    def account(self, account):
        """Sets the account of this AccountWrapper.


        :param account: The account of this AccountWrapper.
        :type account: Account
        """

        self._account = account
