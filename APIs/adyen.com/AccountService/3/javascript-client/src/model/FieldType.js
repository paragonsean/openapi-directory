/**
 * Account API
 * This API is used for the classic integration. If you are just starting your implementation, refer to our [new integration guide](https://docs.adyen.com/marketplaces-and-platforms) instead.  The Account API provides endpoints for managing account-related entities on your platform. These related entities include account holders, accounts, bank accounts, shareholders, and verification-related documents. The management operations include actions such as creation, retrieval, updating, and deletion of them.  For more information, refer to our [documentation](https://docs.adyen.com/marketplaces-and-platforms/classic). ## Authentication Your Adyen contact will provide your API credential and an API key. To connect to the API, add an `X-API-Key` header with the API key as the value, for example:   ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ```  Alternatively, you can use the username and password to connect to the API using basic authentication. For example:  ``` curl -U \"ws@MarketPlace.YOUR_PLATFORM_ACCOUNT\":\"YOUR_WS_PASSWORD\" \\ -H \"Content-Type: application/json\" \\ ... ``` When going live, you need to generate new web service user credentials to access the [live endpoints](https://docs.adyen.com/development-resources/live-endpoints).  ## Versioning The Account API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://cal-test.adyen.com/cal/services/Account/v3/createAccountHolder ```
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The FieldType model module.
 * @module model/FieldType
 * @version 3
 */
class FieldType {
    /**
     * Constructs a new <code>FieldType</code>.
     * @alias module:model/FieldType
     */
    constructor() { 
        
        FieldType.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FieldType</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FieldType} obj Optional instance to populate.
     * @return {module:model/FieldType} The populated <code>FieldType</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FieldType();

            if (data.hasOwnProperty('field')) {
                obj['field'] = ApiClient.convertToType(data['field'], 'String');
            }
            if (data.hasOwnProperty('fieldName')) {
                obj['fieldName'] = ApiClient.convertToType(data['fieldName'], 'String');
            }
            if (data.hasOwnProperty('shareholderCode')) {
                obj['shareholderCode'] = ApiClient.convertToType(data['shareholderCode'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FieldType</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FieldType</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['field'] && !(typeof data['field'] === 'string' || data['field'] instanceof String)) {
            throw new Error("Expected the field `field` to be a primitive type in the JSON string but got " + data['field']);
        }
        // ensure the json data is a string
        if (data['fieldName'] && !(typeof data['fieldName'] === 'string' || data['fieldName'] instanceof String)) {
            throw new Error("Expected the field `fieldName` to be a primitive type in the JSON string but got " + data['fieldName']);
        }
        // ensure the json data is a string
        if (data['shareholderCode'] && !(typeof data['shareholderCode'] === 'string' || data['shareholderCode'] instanceof String)) {
            throw new Error("Expected the field `shareholderCode` to be a primitive type in the JSON string but got " + data['shareholderCode']);
        }

        return true;
    }


}



/**
 * The full name of the property.
 * @member {String} field
 */
FieldType.prototype['field'] = undefined;

/**
 * The type of the field.
 * @member {module:model/FieldType.FieldNameEnum} fieldName
 */
FieldType.prototype['fieldName'] = undefined;

/**
 * The code of the shareholder that the field belongs to. If empty, the field belongs to an account holder.
 * @member {String} shareholderCode
 */
FieldType.prototype['shareholderCode'] = undefined;





/**
 * Allowed values for the <code>fieldName</code> property.
 * @enum {String}
 * @readonly
 */
FieldType['FieldNameEnum'] = {

    /**
     * value: "accountCode"
     * @const
     */
    "accountCode": "accountCode",

    /**
     * value: "accountHolderCode"
     * @const
     */
    "accountHolderCode": "accountHolderCode",

    /**
     * value: "accountHolderDetails"
     * @const
     */
    "accountHolderDetails": "accountHolderDetails",

    /**
     * value: "accountNumber"
     * @const
     */
    "accountNumber": "accountNumber",

    /**
     * value: "accountStateType"
     * @const
     */
    "accountStateType": "accountStateType",

    /**
     * value: "accountStatus"
     * @const
     */
    "accountStatus": "accountStatus",

    /**
     * value: "accountType"
     * @const
     */
    "accountType": "accountType",

    /**
     * value: "address"
     * @const
     */
    "address": "address",

    /**
     * value: "balanceAccount"
     * @const
     */
    "balanceAccount": "balanceAccount",

    /**
     * value: "balanceAccountActive"
     * @const
     */
    "balanceAccountActive": "balanceAccountActive",

    /**
     * value: "balanceAccountCode"
     * @const
     */
    "balanceAccountCode": "balanceAccountCode",

    /**
     * value: "balanceAccountId"
     * @const
     */
    "balanceAccountId": "balanceAccountId",

    /**
     * value: "bankAccount"
     * @const
     */
    "bankAccount": "bankAccount",

    /**
     * value: "bankAccountCode"
     * @const
     */
    "bankAccountCode": "bankAccountCode",

    /**
     * value: "bankAccountName"
     * @const
     */
    "bankAccountName": "bankAccountName",

    /**
     * value: "bankAccountUUID"
     * @const
     */
    "bankAccountUUID": "bankAccountUUID",

    /**
     * value: "bankBicSwift"
     * @const
     */
    "bankBicSwift": "bankBicSwift",

    /**
     * value: "bankCity"
     * @const
     */
    "bankCity": "bankCity",

    /**
     * value: "bankCode"
     * @const
     */
    "bankCode": "bankCode",

    /**
     * value: "bankName"
     * @const
     */
    "bankName": "bankName",

    /**
     * value: "bankStatement"
     * @const
     */
    "bankStatement": "bankStatement",

    /**
     * value: "branchCode"
     * @const
     */
    "branchCode": "branchCode",

    /**
     * value: "businessContact"
     * @const
     */
    "businessContact": "businessContact",

    /**
     * value: "cardToken"
     * @const
     */
    "cardToken": "cardToken",

    /**
     * value: "checkCode"
     * @const
     */
    "checkCode": "checkCode",

    /**
     * value: "city"
     * @const
     */
    "city": "city",

    /**
     * value: "companyRegistration"
     * @const
     */
    "companyRegistration": "companyRegistration",

    /**
     * value: "constitutionalDocument"
     * @const
     */
    "constitutionalDocument": "constitutionalDocument",

    /**
     * value: "controller"
     * @const
     */
    "controller": "controller",

    /**
     * value: "country"
     * @const
     */
    "country": "country",

    /**
     * value: "countryCode"
     * @const
     */
    "countryCode": "countryCode",

    /**
     * value: "currency"
     * @const
     */
    "currency": "currency",

    /**
     * value: "currencyCode"
     * @const
     */
    "currencyCode": "currencyCode",

    /**
     * value: "dateOfBirth"
     * @const
     */
    "dateOfBirth": "dateOfBirth",

    /**
     * value: "destinationAccountCode"
     * @const
     */
    "destinationAccountCode": "destinationAccountCode",

    /**
     * value: "document"
     * @const
     */
    "document": "document",

    /**
     * value: "documentContent"
     * @const
     */
    "documentContent": "documentContent",

    /**
     * value: "documentExpirationDate"
     * @const
     */
    "documentExpirationDate": "documentExpirationDate",

    /**
     * value: "documentIssuerCountry"
     * @const
     */
    "documentIssuerCountry": "documentIssuerCountry",

    /**
     * value: "documentIssuerState"
     * @const
     */
    "documentIssuerState": "documentIssuerState",

    /**
     * value: "documentName"
     * @const
     */
    "documentName": "documentName",

    /**
     * value: "documentNumber"
     * @const
     */
    "documentNumber": "documentNumber",

    /**
     * value: "documentType"
     * @const
     */
    "documentType": "documentType",

    /**
     * value: "doingBusinessAs"
     * @const
     */
    "doingBusinessAs": "doingBusinessAs",

    /**
     * value: "drivingLicence"
     * @const
     */
    "drivingLicence": "drivingLicence",

    /**
     * value: "drivingLicenceBack"
     * @const
     */
    "drivingLicenceBack": "drivingLicenceBack",

    /**
     * value: "drivingLicenceFront"
     * @const
     */
    "drivingLicenceFront": "drivingLicenceFront",

    /**
     * value: "drivingLicense"
     * @const
     */
    "drivingLicense": "drivingLicense",

    /**
     * value: "email"
     * @const
     */
    "email": "email",

    /**
     * value: "firstName"
     * @const
     */
    "firstName": "firstName",

    /**
     * value: "formType"
     * @const
     */
    "formType": "formType",

    /**
     * value: "fullPhoneNumber"
     * @const
     */
    "fullPhoneNumber": "fullPhoneNumber",

    /**
     * value: "gender"
     * @const
     */
    "gender": "gender",

    /**
     * value: "hopWebserviceUser"
     * @const
     */
    "hopWebserviceUser": "hopWebserviceUser",

    /**
     * value: "houseNumberOrName"
     * @const
     */
    "houseNumberOrName": "houseNumberOrName",

    /**
     * value: "iban"
     * @const
     */
    "iban": "iban",

    /**
     * value: "idCard"
     * @const
     */
    "idCard": "idCard",

    /**
     * value: "idNumber"
     * @const
     */
    "idNumber": "idNumber",

    /**
     * value: "identityDocument"
     * @const
     */
    "identityDocument": "identityDocument",

    /**
     * value: "individualDetails"
     * @const
     */
    "individualDetails": "individualDetails",

    /**
     * value: "infix"
     * @const
     */
    "infix": "infix",

    /**
     * value: "jobTitle"
     * @const
     */
    "jobTitle": "jobTitle",

    /**
     * value: "lastName"
     * @const
     */
    "lastName": "lastName",

    /**
     * value: "lastReviewDate"
     * @const
     */
    "lastReviewDate": "lastReviewDate",

    /**
     * value: "legalArrangement"
     * @const
     */
    "legalArrangement": "legalArrangement",

    /**
     * value: "legalArrangementCode"
     * @const
     */
    "legalArrangementCode": "legalArrangementCode",

    /**
     * value: "legalArrangementEntity"
     * @const
     */
    "legalArrangementEntity": "legalArrangementEntity",

    /**
     * value: "legalArrangementEntityCode"
     * @const
     */
    "legalArrangementEntityCode": "legalArrangementEntityCode",

    /**
     * value: "legalArrangementLegalForm"
     * @const
     */
    "legalArrangementLegalForm": "legalArrangementLegalForm",

    /**
     * value: "legalArrangementMember"
     * @const
     */
    "legalArrangementMember": "legalArrangementMember",

    /**
     * value: "legalArrangementMembers"
     * @const
     */
    "legalArrangementMembers": "legalArrangementMembers",

    /**
     * value: "legalArrangementName"
     * @const
     */
    "legalArrangementName": "legalArrangementName",

    /**
     * value: "legalArrangementReference"
     * @const
     */
    "legalArrangementReference": "legalArrangementReference",

    /**
     * value: "legalArrangementRegistrationNumber"
     * @const
     */
    "legalArrangementRegistrationNumber": "legalArrangementRegistrationNumber",

    /**
     * value: "legalArrangementTaxNumber"
     * @const
     */
    "legalArrangementTaxNumber": "legalArrangementTaxNumber",

    /**
     * value: "legalArrangementType"
     * @const
     */
    "legalArrangementType": "legalArrangementType",

    /**
     * value: "legalBusinessName"
     * @const
     */
    "legalBusinessName": "legalBusinessName",

    /**
     * value: "legalEntity"
     * @const
     */
    "legalEntity": "legalEntity",

    /**
     * value: "legalEntityType"
     * @const
     */
    "legalEntityType": "legalEntityType",

    /**
     * value: "logo"
     * @const
     */
    "logo": "logo",

    /**
     * value: "merchantAccount"
     * @const
     */
    "merchantAccount": "merchantAccount",

    /**
     * value: "merchantCategoryCode"
     * @const
     */
    "merchantCategoryCode": "merchantCategoryCode",

    /**
     * value: "merchantHouseNumber"
     * @const
     */
    "merchantHouseNumber": "merchantHouseNumber",

    /**
     * value: "merchantReference"
     * @const
     */
    "merchantReference": "merchantReference",

    /**
     * value: "microDeposit"
     * @const
     */
    "microDeposit": "microDeposit",

    /**
     * value: "name"
     * @const
     */
    "name": "name",

    /**
     * value: "nationality"
     * @const
     */
    "nationality": "nationality",

    /**
     * value: "originalReference"
     * @const
     */
    "originalReference": "originalReference",

    /**
     * value: "ownerCity"
     * @const
     */
    "ownerCity": "ownerCity",

    /**
     * value: "ownerCountryCode"
     * @const
     */
    "ownerCountryCode": "ownerCountryCode",

    /**
     * value: "ownerDateOfBirth"
     * @const
     */
    "ownerDateOfBirth": "ownerDateOfBirth",

    /**
     * value: "ownerHouseNumberOrName"
     * @const
     */
    "ownerHouseNumberOrName": "ownerHouseNumberOrName",

    /**
     * value: "ownerName"
     * @const
     */
    "ownerName": "ownerName",

    /**
     * value: "ownerPostalCode"
     * @const
     */
    "ownerPostalCode": "ownerPostalCode",

    /**
     * value: "ownerState"
     * @const
     */
    "ownerState": "ownerState",

    /**
     * value: "ownerStreet"
     * @const
     */
    "ownerStreet": "ownerStreet",

    /**
     * value: "passport"
     * @const
     */
    "passport": "passport",

    /**
     * value: "passportNumber"
     * @const
     */
    "passportNumber": "passportNumber",

    /**
     * value: "payoutMethod"
     * @const
     */
    "payoutMethod": "payoutMethod",

    /**
     * value: "payoutMethodCode"
     * @const
     */
    "payoutMethodCode": "payoutMethodCode",

    /**
     * value: "payoutSchedule"
     * @const
     */
    "payoutSchedule": "payoutSchedule",

    /**
     * value: "pciSelfAssessment"
     * @const
     */
    "pciSelfAssessment": "pciSelfAssessment",

    /**
     * value: "personalData"
     * @const
     */
    "personalData": "personalData",

    /**
     * value: "phoneCountryCode"
     * @const
     */
    "phoneCountryCode": "phoneCountryCode",

    /**
     * value: "phoneNumber"
     * @const
     */
    "phoneNumber": "phoneNumber",

    /**
     * value: "postalCode"
     * @const
     */
    "postalCode": "postalCode",

    /**
     * value: "primaryCurrency"
     * @const
     */
    "primaryCurrency": "primaryCurrency",

    /**
     * value: "reason"
     * @const
     */
    "reason": "reason",

    /**
     * value: "returnUrl"
     * @const
     */
    "returnUrl": "returnUrl",

    /**
     * value: "schedule"
     * @const
     */
    "schedule": "schedule",

    /**
     * value: "shareholder"
     * @const
     */
    "shareholder": "shareholder",

    /**
     * value: "shareholderCode"
     * @const
     */
    "shareholderCode": "shareholderCode",

    /**
     * value: "shareholderCodeAndSignatoryCode"
     * @const
     */
    "shareholderCodeAndSignatoryCode": "shareholderCodeAndSignatoryCode",

    /**
     * value: "shareholderCodeOrSignatoryCode"
     * @const
     */
    "shareholderCodeOrSignatoryCode": "shareholderCodeOrSignatoryCode",

    /**
     * value: "shareholderType"
     * @const
     */
    "shareholderType": "shareholderType",

    /**
     * value: "shareholderTypes"
     * @const
     */
    "shareholderTypes": "shareholderTypes",

    /**
     * value: "shopperInteraction"
     * @const
     */
    "shopperInteraction": "shopperInteraction",

    /**
     * value: "signatory"
     * @const
     */
    "signatory": "signatory",

    /**
     * value: "signatoryCode"
     * @const
     */
    "signatoryCode": "signatoryCode",

    /**
     * value: "socialSecurityNumber"
     * @const
     */
    "socialSecurityNumber": "socialSecurityNumber",

    /**
     * value: "sourceAccountCode"
     * @const
     */
    "sourceAccountCode": "sourceAccountCode",

    /**
     * value: "splitAccount"
     * @const
     */
    "splitAccount": "splitAccount",

    /**
     * value: "splitConfigurationUUID"
     * @const
     */
    "splitConfigurationUUID": "splitConfigurationUUID",

    /**
     * value: "splitCurrency"
     * @const
     */
    "splitCurrency": "splitCurrency",

    /**
     * value: "splitValue"
     * @const
     */
    "splitValue": "splitValue",

    /**
     * value: "splits"
     * @const
     */
    "splits": "splits",

    /**
     * value: "stateOrProvince"
     * @const
     */
    "stateOrProvince": "stateOrProvince",

    /**
     * value: "status"
     * @const
     */
    "status": "status",

    /**
     * value: "stockExchange"
     * @const
     */
    "stockExchange": "stockExchange",

    /**
     * value: "stockNumber"
     * @const
     */
    "stockNumber": "stockNumber",

    /**
     * value: "stockTicker"
     * @const
     */
    "stockTicker": "stockTicker",

    /**
     * value: "store"
     * @const
     */
    "store": "store",

    /**
     * value: "storeDetail"
     * @const
     */
    "storeDetail": "storeDetail",

    /**
     * value: "storeName"
     * @const
     */
    "storeName": "storeName",

    /**
     * value: "storeReference"
     * @const
     */
    "storeReference": "storeReference",

    /**
     * value: "street"
     * @const
     */
    "street": "street",

    /**
     * value: "taxId"
     * @const
     */
    "taxId": "taxId",

    /**
     * value: "tier"
     * @const
     */
    "tier": "tier",

    /**
     * value: "tierNumber"
     * @const
     */
    "tierNumber": "tierNumber",

    /**
     * value: "transferCode"
     * @const
     */
    "transferCode": "transferCode",

    /**
     * value: "ultimateParentCompany"
     * @const
     */
    "ultimateParentCompany": "ultimateParentCompany",

    /**
     * value: "ultimateParentCompanyAddressDetails"
     * @const
     */
    "ultimateParentCompanyAddressDetails": "ultimateParentCompanyAddressDetails",

    /**
     * value: "ultimateParentCompanyAddressDetailsCountry"
     * @const
     */
    "ultimateParentCompanyAddressDetailsCountry": "ultimateParentCompanyAddressDetailsCountry",

    /**
     * value: "ultimateParentCompanyBusinessDetails"
     * @const
     */
    "ultimateParentCompanyBusinessDetails": "ultimateParentCompanyBusinessDetails",

    /**
     * value: "ultimateParentCompanyBusinessDetailsLegalBusinessName"
     * @const
     */
    "ultimateParentCompanyBusinessDetailsLegalBusinessName": "ultimateParentCompanyBusinessDetailsLegalBusinessName",

    /**
     * value: "ultimateParentCompanyBusinessDetailsRegistrationNumber"
     * @const
     */
    "ultimateParentCompanyBusinessDetailsRegistrationNumber": "ultimateParentCompanyBusinessDetailsRegistrationNumber",

    /**
     * value: "ultimateParentCompanyCode"
     * @const
     */
    "ultimateParentCompanyCode": "ultimateParentCompanyCode",

    /**
     * value: "ultimateParentCompanyStockExchange"
     * @const
     */
    "ultimateParentCompanyStockExchange": "ultimateParentCompanyStockExchange",

    /**
     * value: "ultimateParentCompanyStockNumber"
     * @const
     */
    "ultimateParentCompanyStockNumber": "ultimateParentCompanyStockNumber",

    /**
     * value: "ultimateParentCompanyStockNumberOrStockTicker"
     * @const
     */
    "ultimateParentCompanyStockNumberOrStockTicker": "ultimateParentCompanyStockNumberOrStockTicker",

    /**
     * value: "ultimateParentCompanyStockTicker"
     * @const
     */
    "ultimateParentCompanyStockTicker": "ultimateParentCompanyStockTicker",

    /**
     * value: "unknown"
     * @const
     */
    "unknown": "unknown",

    /**
     * value: "value"
     * @const
     */
    "value": "value",

    /**
     * value: "verificationType"
     * @const
     */
    "verificationType": "verificationType",

    /**
     * value: "virtualAccount"
     * @const
     */
    "virtualAccount": "virtualAccount",

    /**
     * value: "visaNumber"
     * @const
     */
    "visaNumber": "visaNumber",

    /**
     * value: "webAddress"
     * @const
     */
    "webAddress": "webAddress",

    /**
     * value: "year"
     * @const
     */
    "year": "year"
};



export default FieldType;

