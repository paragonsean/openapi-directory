# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.sweep_configuration import SweepConfiguration
from openapi_server import util


class BalanceAccountUpdateRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_holder_id: str=None, default_currency_code: str=None, description: str=None, reference: str=None, status: str=None, sweep_configurations: Dict[str, SweepConfiguration]=None, time_zone: str=None):
        """BalanceAccountUpdateRequest - a model defined in OpenAPI

        :param account_holder_id: The account_holder_id of this BalanceAccountUpdateRequest.
        :param default_currency_code: The default_currency_code of this BalanceAccountUpdateRequest.
        :param description: The description of this BalanceAccountUpdateRequest.
        :param reference: The reference of this BalanceAccountUpdateRequest.
        :param status: The status of this BalanceAccountUpdateRequest.
        :param sweep_configurations: The sweep_configurations of this BalanceAccountUpdateRequest.
        :param time_zone: The time_zone of this BalanceAccountUpdateRequest.
        """
        self.openapi_types = {
            'account_holder_id': str,
            'default_currency_code': str,
            'description': str,
            'reference': str,
            'status': str,
            'sweep_configurations': Dict[str, SweepConfiguration],
            'time_zone': str
        }

        self.attribute_map = {
            'account_holder_id': 'accountHolderId',
            'default_currency_code': 'defaultCurrencyCode',
            'description': 'description',
            'reference': 'reference',
            'status': 'status',
            'sweep_configurations': 'sweepConfigurations',
            'time_zone': 'timeZone'
        }

        self._account_holder_id = account_holder_id
        self._default_currency_code = default_currency_code
        self._description = description
        self._reference = reference
        self._status = status
        self._sweep_configurations = sweep_configurations
        self._time_zone = time_zone

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BalanceAccountUpdateRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BalanceAccountUpdateRequest of this BalanceAccountUpdateRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_holder_id(self):
        """Gets the account_holder_id of this BalanceAccountUpdateRequest.

        The unique identifier of the [account holder](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/post/accountHolders__resParam_id) associated with the balance account.

        :return: The account_holder_id of this BalanceAccountUpdateRequest.
        :rtype: str
        """
        return self._account_holder_id

    @account_holder_id.setter
    def account_holder_id(self, account_holder_id):
        """Sets the account_holder_id of this BalanceAccountUpdateRequest.

        The unique identifier of the [account holder](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/post/accountHolders__resParam_id) associated with the balance account.

        :param account_holder_id: The account_holder_id of this BalanceAccountUpdateRequest.
        :type account_holder_id: str
        """

        self._account_holder_id = account_holder_id

    @property
    def default_currency_code(self):
        """Gets the default_currency_code of this BalanceAccountUpdateRequest.

        The default currency code of this balance account, in three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes) format.  The default value is **EUR**.

        :return: The default_currency_code of this BalanceAccountUpdateRequest.
        :rtype: str
        """
        return self._default_currency_code

    @default_currency_code.setter
    def default_currency_code(self, default_currency_code):
        """Sets the default_currency_code of this BalanceAccountUpdateRequest.

        The default currency code of this balance account, in three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes) format.  The default value is **EUR**.

        :param default_currency_code: The default_currency_code of this BalanceAccountUpdateRequest.
        :type default_currency_code: str
        """

        self._default_currency_code = default_currency_code

    @property
    def description(self):
        """Gets the description of this BalanceAccountUpdateRequest.

        A human-readable description of the balance account, maximum 300 characters. You can use this parameter to distinguish between multiple balance accounts under an account holder.

        :return: The description of this BalanceAccountUpdateRequest.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this BalanceAccountUpdateRequest.

        A human-readable description of the balance account, maximum 300 characters. You can use this parameter to distinguish between multiple balance accounts under an account holder.

        :param description: The description of this BalanceAccountUpdateRequest.
        :type description: str
        """
        if description is not None and len(description) > 300:
            raise ValueError("Invalid value for `description`, length must be less than or equal to `300`")

        self._description = description

    @property
    def reference(self):
        """Gets the reference of this BalanceAccountUpdateRequest.

        Your reference to the balance account, maximum 150 characters.

        :return: The reference of this BalanceAccountUpdateRequest.
        :rtype: str
        """
        return self._reference

    @reference.setter
    def reference(self, reference):
        """Sets the reference of this BalanceAccountUpdateRequest.

        Your reference to the balance account, maximum 150 characters.

        :param reference: The reference of this BalanceAccountUpdateRequest.
        :type reference: str
        """
        if reference is not None and len(reference) > 150:
            raise ValueError("Invalid value for `reference`, length must be less than or equal to `150`")

        self._reference = reference

    @property
    def status(self):
        """Gets the status of this BalanceAccountUpdateRequest.

        The status of the balance account. Payment instruments linked to the balance account can only be used if the balance account status is **Active**.  Possible values: **Active**, **Inactive**, **Closed**, **Suspended**.

        :return: The status of this BalanceAccountUpdateRequest.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this BalanceAccountUpdateRequest.

        The status of the balance account. Payment instruments linked to the balance account can only be used if the balance account status is **Active**.  Possible values: **Active**, **Inactive**, **Closed**, **Suspended**.

        :param status: The status of this BalanceAccountUpdateRequest.
        :type status: str
        """
        allowed_values = ["Active", "Closed", "Inactive", "Suspended"]  # noqa: E501
        if status not in allowed_values:
            raise ValueError(
                "Invalid value for `status` ({0}), must be one of {1}"
                .format(status, allowed_values)
            )

        self._status = status

    @property
    def sweep_configurations(self):
        """Gets the sweep_configurations of this BalanceAccountUpdateRequest.

        Contains key-value pairs that specify [balance sweep per currency code](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/post/balanceAccounts__reqParam_sweepConfigurations).  You can update the balance account to add, update, or delete sweeps.  * To add a sweep, send the currency code as a key and the configuration as the object.   * To update a sweep, send the whole configuration with your updates.  * To delete a sweep, set the value to **null**. For example, `\"EUR\": null`.

        :return: The sweep_configurations of this BalanceAccountUpdateRequest.
        :rtype: Dict[str, SweepConfiguration]
        """
        return self._sweep_configurations

    @sweep_configurations.setter
    def sweep_configurations(self, sweep_configurations):
        """Sets the sweep_configurations of this BalanceAccountUpdateRequest.

        Contains key-value pairs that specify [balance sweep per currency code](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/post/balanceAccounts__reqParam_sweepConfigurations).  You can update the balance account to add, update, or delete sweeps.  * To add a sweep, send the currency code as a key and the configuration as the object.   * To update a sweep, send the whole configuration with your updates.  * To delete a sweep, set the value to **null**. For example, `\"EUR\": null`.

        :param sweep_configurations: The sweep_configurations of this BalanceAccountUpdateRequest.
        :type sweep_configurations: Dict[str, SweepConfiguration]
        """

        self._sweep_configurations = sweep_configurations

    @property
    def time_zone(self):
        """Gets the time_zone of this BalanceAccountUpdateRequest.

        The [time zone](https://www.iana.org/time-zones) of the balance account. For example, **Europe/Amsterdam**. Defaults to the time zone of the account holder if no time zone is set. For possible values, see the [list of time zone codes](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones).

        :return: The time_zone of this BalanceAccountUpdateRequest.
        :rtype: str
        """
        return self._time_zone

    @time_zone.setter
    def time_zone(self, time_zone):
        """Sets the time_zone of this BalanceAccountUpdateRequest.

        The [time zone](https://www.iana.org/time-zones) of the balance account. For example, **Europe/Amsterdam**. Defaults to the time zone of the account holder if no time zone is set. For possible values, see the [list of time zone codes](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones).

        :param time_zone: The time_zone of this BalanceAccountUpdateRequest.
        :type time_zone: str
        """

        self._time_zone = time_zone
