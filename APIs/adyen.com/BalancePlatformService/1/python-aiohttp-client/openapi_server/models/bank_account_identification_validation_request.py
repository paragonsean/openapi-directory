# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.bank_account_identification_validation_request_account_identification import BankAccountIdentificationValidationRequestAccountIdentification
from openapi_server import util


class BankAccountIdentificationValidationRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_identification: BankAccountIdentificationValidationRequestAccountIdentification=None):
        """BankAccountIdentificationValidationRequest - a model defined in OpenAPI

        :param account_identification: The account_identification of this BankAccountIdentificationValidationRequest.
        """
        self.openapi_types = {
            'account_identification': BankAccountIdentificationValidationRequestAccountIdentification
        }

        self.attribute_map = {
            'account_identification': 'accountIdentification'
        }

        self._account_identification = account_identification

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BankAccountIdentificationValidationRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BankAccountIdentificationValidationRequest of this BankAccountIdentificationValidationRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_identification(self):
        """Gets the account_identification of this BankAccountIdentificationValidationRequest.


        :return: The account_identification of this BankAccountIdentificationValidationRequest.
        :rtype: BankAccountIdentificationValidationRequestAccountIdentification
        """
        return self._account_identification

    @account_identification.setter
    def account_identification(self, account_identification):
        """Sets the account_identification of this BankAccountIdentificationValidationRequest.


        :param account_identification: The account_identification of this BankAccountIdentificationValidationRequest.
        :type account_identification: BankAccountIdentificationValidationRequestAccountIdentification
        """
        if account_identification is None:
            raise ValueError("Invalid value for `account_identification`, must not be `None`")

        self._account_identification = account_identification
