# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.address import Address
from openapi_server.models.name import Name
from openapi_server.models.personal_data import PersonalData
from openapi_server.models.phone_number import PhoneNumber
from openapi_server import util


class Contact(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, address: Address=None, email: str=None, full_phone_number: str=None, name: Name=None, personal_data: PersonalData=None, phone_number: PhoneNumber=None, web_address: str=None):
        """Contact - a model defined in OpenAPI

        :param address: The address of this Contact.
        :param email: The email of this Contact.
        :param full_phone_number: The full_phone_number of this Contact.
        :param name: The name of this Contact.
        :param personal_data: The personal_data of this Contact.
        :param phone_number: The phone_number of this Contact.
        :param web_address: The web_address of this Contact.
        """
        self.openapi_types = {
            'address': Address,
            'email': str,
            'full_phone_number': str,
            'name': Name,
            'personal_data': PersonalData,
            'phone_number': PhoneNumber,
            'web_address': str
        }

        self.attribute_map = {
            'address': 'address',
            'email': 'email',
            'full_phone_number': 'fullPhoneNumber',
            'name': 'name',
            'personal_data': 'personalData',
            'phone_number': 'phoneNumber',
            'web_address': 'webAddress'
        }

        self._address = address
        self._email = email
        self._full_phone_number = full_phone_number
        self._name = name
        self._personal_data = personal_data
        self._phone_number = phone_number
        self._web_address = web_address

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Contact':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Contact of this Contact.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def address(self):
        """Gets the address of this Contact.

        The address of the contact.

        :return: The address of this Contact.
        :rtype: Address
        """
        return self._address

    @address.setter
    def address(self, address):
        """Sets the address of this Contact.

        The address of the contact.

        :param address: The address of this Contact.
        :type address: Address
        """

        self._address = address

    @property
    def email(self):
        """Gets the email of this Contact.

        The e-mail address of the contact.

        :return: The email of this Contact.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this Contact.

        The e-mail address of the contact.

        :param email: The email of this Contact.
        :type email: str
        """

        self._email = email

    @property
    def full_phone_number(self):
        """Gets the full_phone_number of this Contact.

        The phone number of the contact provided as a single string.  It will be handled as a landline phone. **Examples:** \"0031 6 11 22 33 44\", \"+316/1122-3344\", \"(0031) 611223344\"

        :return: The full_phone_number of this Contact.
        :rtype: str
        """
        return self._full_phone_number

    @full_phone_number.setter
    def full_phone_number(self, full_phone_number):
        """Sets the full_phone_number of this Contact.

        The phone number of the contact provided as a single string.  It will be handled as a landline phone. **Examples:** \"0031 6 11 22 33 44\", \"+316/1122-3344\", \"(0031) 611223344\"

        :param full_phone_number: The full_phone_number of this Contact.
        :type full_phone_number: str
        """

        self._full_phone_number = full_phone_number

    @property
    def name(self):
        """Gets the name of this Contact.

        The name of the contact.

        :return: The name of this Contact.
        :rtype: Name
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Contact.

        The name of the contact.

        :param name: The name of this Contact.
        :type name: Name
        """

        self._name = name

    @property
    def personal_data(self):
        """Gets the personal_data of this Contact.

        Personal data of the contact.

        :return: The personal_data of this Contact.
        :rtype: PersonalData
        """
        return self._personal_data

    @personal_data.setter
    def personal_data(self, personal_data):
        """Sets the personal_data of this Contact.

        Personal data of the contact.

        :param personal_data: The personal_data of this Contact.
        :type personal_data: PersonalData
        """

        self._personal_data = personal_data

    @property
    def phone_number(self):
        """Gets the phone_number of this Contact.

        The phone number of the contact.

        :return: The phone_number of this Contact.
        :rtype: PhoneNumber
        """
        return self._phone_number

    @phone_number.setter
    def phone_number(self, phone_number):
        """Sets the phone_number of this Contact.

        The phone number of the contact.

        :param phone_number: The phone_number of this Contact.
        :type phone_number: PhoneNumber
        """

        self._phone_number = phone_number

    @property
    def web_address(self):
        """Gets the web_address of this Contact.

        The URL of the website of the contact.

        :return: The web_address of this Contact.
        :rtype: str
        """
        return self._web_address

    @web_address.setter
    def web_address(self, web_address):
        """Sets the web_address of this Contact.

        The URL of the website of the contact.

        :param web_address: The web_address of this Contact.
        :type web_address: str
        """

        self._web_address = web_address
