# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Expiry(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, month: str=None, year: str=None):
        """Expiry - a model defined in OpenAPI

        :param month: The month of this Expiry.
        :param year: The year of this Expiry.
        """
        self.openapi_types = {
            'month': str,
            'year': str
        }

        self.attribute_map = {
            'month': 'month',
            'year': 'year'
        }

        self._month = month
        self._year = year

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Expiry':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Expiry of this Expiry.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def month(self):
        """Gets the month of this Expiry.

        The month in which the card will expire.

        :return: The month of this Expiry.
        :rtype: str
        """
        return self._month

    @month.setter
    def month(self, month):
        """Sets the month of this Expiry.

        The month in which the card will expire.

        :param month: The month of this Expiry.
        :type month: str
        """

        self._month = month

    @property
    def year(self):
        """Gets the year of this Expiry.

        The year in which the card will expire.

        :return: The year of this Expiry.
        :rtype: str
        """
        return self._year

    @year.setter
    def year(self, year):
        """Sets the year of this Expiry.

        The year in which the card will expire.

        :param year: The year of this Expiry.
        :type year: str
        """

        self._year = year
