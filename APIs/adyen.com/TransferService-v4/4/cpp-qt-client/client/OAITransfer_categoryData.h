/**
 * Transfers API
 * >Versions 1 and 2 of the Transfers API are deprecated. If you are just starting your implementation, use the latest version.  This API provides endpoints that you can use to transfer funds, whether when [paying out to a transfer instrument](https://docs.adyen.com/marketplaces-and-platforms/payout-to-users/on-demand-payouts), [sending funds to third parties](https://docs.adyen.com/marketplaces-and-platforms/business-accounts/send-receive-funds) for users with business bank accounts, or to [request a payout for a grant offer](https://docs.adyen.com/marketplaces-and-platforms/capital). The API also supports use cases for [getting transactions for business bank accounts](https://docs.adyen.com/marketplaces-and-platforms/business-accounts/transactions-api) and getting [grants and its outstanding balances](https://docs.adyen.com/marketplaces-and-platforms/capital#get-balances). .  ## Authentication Your Adyen contact will provide your API credential and an API key. To connect to the API, add an `X-API-Key` header with the API key as the value, for example:   ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ```  Alternatively, you can use the username and password to connect to the API using basic authentication. For example:  ``` curl -H \"Content-Type: application/json\" \\ -U \"ws@BalancePlatform.YOUR_BALANCE_PLATFORM\":\"YOUR_WS_PASSWORD\" \\ ... ``` ## Roles and permissions To use the Transfers API, you need an additional role for your API credential. Transfers must also be enabled for the source balance account. Your Adyen contact will set up the roles and permissions for you. ## Versioning The Transfers API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://balanceplatform-api-test.adyen.com/btl/v4/transfers ``` ## Going live When going live, your Adyen contact will provide your API credential for the live environment. You can then use the username and password to send requests to `https://balanceplatform-api-live.adyen.com/btl/v4`.  
 *
 * The version of the OpenAPI document: 4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITransfer_categoryData.h
 *
 * The relevant data according to the transfer category.
 */

#ifndef OAITransfer_categoryData_H
#define OAITransfer_categoryData_H

#include <QJsonObject>

#include "OAIBankCategoryData.h"
#include "OAIInternalCategoryData.h"
#include "OAIIssuedCard.h"
#include "OAIPlatformPayment.h"
#include "OAIRelayedAuthorisationData.h"
#include "OAITransferNotificationValidationFact.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIRelayedAuthorisationData;
class OAITransferNotificationValidationFact;

class OAITransfer_categoryData : public OAIObject {
public:
    OAITransfer_categoryData();
    OAITransfer_categoryData(QString json);
    ~OAITransfer_categoryData() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getPriority() const;
    void setPriority(const QString &priority);
    bool is_priority_Set() const;
    bool is_priority_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getModificationMerchantReference() const;
    void setModificationMerchantReference(const QString &modification_merchant_reference);
    bool is_modification_merchant_reference_Set() const;
    bool is_modification_merchant_reference_Valid() const;

    QString getModificationPspReference() const;
    void setModificationPspReference(const QString &modification_psp_reference);
    bool is_modification_psp_reference_Set() const;
    bool is_modification_psp_reference_Valid() const;

    QString getAuthorisationType() const;
    void setAuthorisationType(const QString &authorisation_type);
    bool is_authorisation_type_Set() const;
    bool is_authorisation_type_Valid() const;

    QString getPanEntryMode() const;
    void setPanEntryMode(const QString &pan_entry_mode);
    bool is_pan_entry_mode_Set() const;
    bool is_pan_entry_mode_Valid() const;

    QString getProcessingType() const;
    void setProcessingType(const QString &processing_type);
    bool is_processing_type_Set() const;
    bool is_processing_type_Valid() const;

    OAIRelayedAuthorisationData getRelayedAuthorisationData() const;
    void setRelayedAuthorisationData(const OAIRelayedAuthorisationData &relayed_authorisation_data);
    bool is_relayed_authorisation_data_Set() const;
    bool is_relayed_authorisation_data_Valid() const;

    QString getSchemeTraceId() const;
    void setSchemeTraceId(const QString &scheme_trace_id);
    bool is_scheme_trace_id_Set() const;
    bool is_scheme_trace_id_Valid() const;

    QString getSchemeUniqueTransactionId() const;
    void setSchemeUniqueTransactionId(const QString &scheme_unique_transaction_id);
    bool is_scheme_unique_transaction_id_Set() const;
    bool is_scheme_unique_transaction_id_Valid() const;

    QList<OAITransferNotificationValidationFact> getValidationFacts() const;
    void setValidationFacts(const QList<OAITransferNotificationValidationFact> &validation_facts);
    bool is_validation_facts_Set() const;
    bool is_validation_facts_Valid() const;

    QString getPaymentMerchantReference() const;
    void setPaymentMerchantReference(const QString &payment_merchant_reference);
    bool is_payment_merchant_reference_Set() const;
    bool is_payment_merchant_reference_Valid() const;

    QString getPlatformPaymentType() const;
    void setPlatformPaymentType(const QString &platform_payment_type);
    bool is_platform_payment_type_Set() const;
    bool is_platform_payment_type_Valid() const;

    QString getPspPaymentReference() const;
    void setPspPaymentReference(const QString &psp_payment_reference);
    bool is_psp_payment_reference_Set() const;
    bool is_psp_payment_reference_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_priority;
    bool m_priority_isSet;
    bool m_priority_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_modification_merchant_reference;
    bool m_modification_merchant_reference_isSet;
    bool m_modification_merchant_reference_isValid;

    QString m_modification_psp_reference;
    bool m_modification_psp_reference_isSet;
    bool m_modification_psp_reference_isValid;

    QString m_authorisation_type;
    bool m_authorisation_type_isSet;
    bool m_authorisation_type_isValid;

    QString m_pan_entry_mode;
    bool m_pan_entry_mode_isSet;
    bool m_pan_entry_mode_isValid;

    QString m_processing_type;
    bool m_processing_type_isSet;
    bool m_processing_type_isValid;

    OAIRelayedAuthorisationData m_relayed_authorisation_data;
    bool m_relayed_authorisation_data_isSet;
    bool m_relayed_authorisation_data_isValid;

    QString m_scheme_trace_id;
    bool m_scheme_trace_id_isSet;
    bool m_scheme_trace_id_isValid;

    QString m_scheme_unique_transaction_id;
    bool m_scheme_unique_transaction_id_isSet;
    bool m_scheme_unique_transaction_id_isValid;

    QList<OAITransferNotificationValidationFact> m_validation_facts;
    bool m_validation_facts_isSet;
    bool m_validation_facts_isValid;

    QString m_payment_merchant_reference;
    bool m_payment_merchant_reference_isSet;
    bool m_payment_merchant_reference_isValid;

    QString m_platform_payment_type;
    bool m_platform_payment_type_isSet;
    bool m_platform_payment_type_isValid;

    QString m_psp_payment_reference;
    bool m_psp_payment_reference_isSet;
    bool m_psp_payment_reference_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITransfer_categoryData)

#endif // OAITransfer_categoryData_H
