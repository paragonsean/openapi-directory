/**
 * Transfers API
 * >Versions 1 and 2 of the Transfers API are deprecated. If you are just starting your implementation, use the latest version.  This API provides endpoints that you can use to transfer funds, whether when [paying out to a transfer instrument](https://docs.adyen.com/marketplaces-and-platforms/payout-to-users/on-demand-payouts), [sending funds to third parties](https://docs.adyen.com/marketplaces-and-platforms/business-accounts/send-receive-funds) for users with business bank accounts, or to [request a payout for a grant offer](https://docs.adyen.com/marketplaces-and-platforms/capital). The API also supports use cases for [getting transactions for business bank accounts](https://docs.adyen.com/marketplaces-and-platforms/business-accounts/transactions-api) and getting [grants and its outstanding balances](https://docs.adyen.com/marketplaces-and-platforms/capital#get-balances). .  ## Authentication Your Adyen contact will provide your API credential and an API key. To connect to the API, add an `X-API-Key` header with the API key as the value, for example:   ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ```  Alternatively, you can use the username and password to connect to the API using basic authentication. For example:  ``` curl -H \"Content-Type: application/json\" \\ -U \"ws@BalancePlatform.YOUR_BALANCE_PLATFORM\":\"YOUR_WS_PASSWORD\" \\ ... ``` ## Roles and permissions To use the Transfers API, you need an additional role for your API credential. Transfers must also be enabled for the source balance account. Your Adyen contact will set up the roles and permissions for you. ## Versioning The Transfers API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://balanceplatform-api-test.adyen.com/btl/v4/transfers ``` ## Going live When going live, your Adyen contact will provide your API credential for the live environment. You can then use the username and password to send requests to `https://balanceplatform-api-live.adyen.com/btl/v4`.  
 *
 * The version of the OpenAPI document: 4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITransfer.h
 *
 * 
 */

#ifndef OAITransfer_H
#define OAITransfer_H

#include <QJsonObject>

#include "OAIAmount.h"
#include "OAICounterpartyV3.h"
#include "OAIPaymentInstrument.h"
#include "OAIResourceReference.h"
#include "OAITransfer_categoryData.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIResourceReference;
class OAIAmount;
class OAITransfer_categoryData;
class OAICounterpartyV3;
class OAIPaymentInstrument;

class OAITransfer : public OAIObject {
public:
    OAITransfer();
    OAITransfer(QString json);
    ~OAITransfer() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIResourceReference getAccountHolder() const;
    void setAccountHolder(const OAIResourceReference &account_holder);
    bool is_account_holder_Set() const;
    bool is_account_holder_Valid() const;

    OAIAmount getAmount() const;
    void setAmount(const OAIAmount &amount);
    bool is_amount_Set() const;
    bool is_amount_Valid() const;

    OAIResourceReference getBalanceAccount() const;
    void setBalanceAccount(const OAIResourceReference &balance_account);
    bool is_balance_account_Set() const;
    bool is_balance_account_Valid() const;

    QString getCategory() const;
    void setCategory(const QString &category);
    bool is_category_Set() const;
    bool is_category_Valid() const;

    OAITransfer_categoryData getCategoryData() const;
    void setCategoryData(const OAITransfer_categoryData &category_data);
    bool is_category_data_Set() const;
    bool is_category_data_Valid() const;

    OAICounterpartyV3 getCounterparty() const;
    void setCounterparty(const OAICounterpartyV3 &counterparty);
    bool is_counterparty_Set() const;
    bool is_counterparty_Valid() const;

    QDateTime getCreationDate() const;
    void setCreationDate(const QDateTime &creation_date);
    bool is_creation_date_Set() const;
    bool is_creation_date_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getDirection() const;
    void setDirection(const QString &direction);
    bool is_direction_Set() const;
    bool is_direction_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAIPaymentInstrument getPaymentInstrument() const;
    void setPaymentInstrument(const OAIPaymentInstrument &payment_instrument);
    bool is_payment_instrument_Set() const;
    bool is_payment_instrument_Valid() const;

    QString getReason() const;
    void setReason(const QString &reason);
    bool is_reason_Set() const;
    bool is_reason_Valid() const;

    QString getReference() const;
    void setReference(const QString &reference);
    bool is_reference_Set() const;
    bool is_reference_Valid() const;

    QString getReferenceForBeneficiary() const;
    void setReferenceForBeneficiary(const QString &reference_for_beneficiary);
    bool is_reference_for_beneficiary_Set() const;
    bool is_reference_for_beneficiary_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIResourceReference m_account_holder;
    bool m_account_holder_isSet;
    bool m_account_holder_isValid;

    OAIAmount m_amount;
    bool m_amount_isSet;
    bool m_amount_isValid;

    OAIResourceReference m_balance_account;
    bool m_balance_account_isSet;
    bool m_balance_account_isValid;

    QString m_category;
    bool m_category_isSet;
    bool m_category_isValid;

    OAITransfer_categoryData m_category_data;
    bool m_category_data_isSet;
    bool m_category_data_isValid;

    OAICounterpartyV3 m_counterparty;
    bool m_counterparty_isSet;
    bool m_counterparty_isValid;

    QDateTime m_creation_date;
    bool m_creation_date_isSet;
    bool m_creation_date_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_direction;
    bool m_direction_isSet;
    bool m_direction_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAIPaymentInstrument m_payment_instrument;
    bool m_payment_instrument_isSet;
    bool m_payment_instrument_isValid;

    QString m_reason;
    bool m_reason_isSet;
    bool m_reason_isValid;

    QString m_reference;
    bool m_reference_isSet;
    bool m_reference_isValid;

    QString m_reference_for_beneficiary;
    bool m_reference_for_beneficiary_isSet;
    bool m_reference_for_beneficiary_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITransfer)

#endif // OAITransfer_H
