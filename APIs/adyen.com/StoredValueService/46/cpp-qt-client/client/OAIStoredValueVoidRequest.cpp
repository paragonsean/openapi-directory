/**
 * Adyen Stored Value API
 * A set of API endpoints to manage stored value products.
 *
 * The version of the OpenAPI document: 46
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIStoredValueVoidRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIStoredValueVoidRequest::OAIStoredValueVoidRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIStoredValueVoidRequest::OAIStoredValueVoidRequest() {
    this->initializeModel();
}

OAIStoredValueVoidRequest::~OAIStoredValueVoidRequest() {}

void OAIStoredValueVoidRequest::initializeModel() {

    m_merchant_account_isSet = false;
    m_merchant_account_isValid = false;

    m_original_reference_isSet = false;
    m_original_reference_isValid = false;

    m_reference_isSet = false;
    m_reference_isValid = false;

    m_store_isSet = false;
    m_store_isValid = false;

    m_tender_reference_isSet = false;
    m_tender_reference_isValid = false;

    m_unique_terminal_id_isSet = false;
    m_unique_terminal_id_isValid = false;
}

void OAIStoredValueVoidRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIStoredValueVoidRequest::fromJsonObject(QJsonObject json) {

    m_merchant_account_isValid = ::OpenAPI::fromJsonValue(m_merchant_account, json[QString("merchantAccount")]);
    m_merchant_account_isSet = !json[QString("merchantAccount")].isNull() && m_merchant_account_isValid;

    m_original_reference_isValid = ::OpenAPI::fromJsonValue(m_original_reference, json[QString("originalReference")]);
    m_original_reference_isSet = !json[QString("originalReference")].isNull() && m_original_reference_isValid;

    m_reference_isValid = ::OpenAPI::fromJsonValue(m_reference, json[QString("reference")]);
    m_reference_isSet = !json[QString("reference")].isNull() && m_reference_isValid;

    m_store_isValid = ::OpenAPI::fromJsonValue(m_store, json[QString("store")]);
    m_store_isSet = !json[QString("store")].isNull() && m_store_isValid;

    m_tender_reference_isValid = ::OpenAPI::fromJsonValue(m_tender_reference, json[QString("tenderReference")]);
    m_tender_reference_isSet = !json[QString("tenderReference")].isNull() && m_tender_reference_isValid;

    m_unique_terminal_id_isValid = ::OpenAPI::fromJsonValue(m_unique_terminal_id, json[QString("uniqueTerminalId")]);
    m_unique_terminal_id_isSet = !json[QString("uniqueTerminalId")].isNull() && m_unique_terminal_id_isValid;
}

QString OAIStoredValueVoidRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIStoredValueVoidRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_merchant_account_isSet) {
        obj.insert(QString("merchantAccount"), ::OpenAPI::toJsonValue(m_merchant_account));
    }
    if (m_original_reference_isSet) {
        obj.insert(QString("originalReference"), ::OpenAPI::toJsonValue(m_original_reference));
    }
    if (m_reference_isSet) {
        obj.insert(QString("reference"), ::OpenAPI::toJsonValue(m_reference));
    }
    if (m_store_isSet) {
        obj.insert(QString("store"), ::OpenAPI::toJsonValue(m_store));
    }
    if (m_tender_reference_isSet) {
        obj.insert(QString("tenderReference"), ::OpenAPI::toJsonValue(m_tender_reference));
    }
    if (m_unique_terminal_id_isSet) {
        obj.insert(QString("uniqueTerminalId"), ::OpenAPI::toJsonValue(m_unique_terminal_id));
    }
    return obj;
}

QString OAIStoredValueVoidRequest::getMerchantAccount() const {
    return m_merchant_account;
}
void OAIStoredValueVoidRequest::setMerchantAccount(const QString &merchant_account) {
    m_merchant_account = merchant_account;
    m_merchant_account_isSet = true;
}

bool OAIStoredValueVoidRequest::is_merchant_account_Set() const{
    return m_merchant_account_isSet;
}

bool OAIStoredValueVoidRequest::is_merchant_account_Valid() const{
    return m_merchant_account_isValid;
}

QString OAIStoredValueVoidRequest::getOriginalReference() const {
    return m_original_reference;
}
void OAIStoredValueVoidRequest::setOriginalReference(const QString &original_reference) {
    m_original_reference = original_reference;
    m_original_reference_isSet = true;
}

bool OAIStoredValueVoidRequest::is_original_reference_Set() const{
    return m_original_reference_isSet;
}

bool OAIStoredValueVoidRequest::is_original_reference_Valid() const{
    return m_original_reference_isValid;
}

QString OAIStoredValueVoidRequest::getReference() const {
    return m_reference;
}
void OAIStoredValueVoidRequest::setReference(const QString &reference) {
    m_reference = reference;
    m_reference_isSet = true;
}

bool OAIStoredValueVoidRequest::is_reference_Set() const{
    return m_reference_isSet;
}

bool OAIStoredValueVoidRequest::is_reference_Valid() const{
    return m_reference_isValid;
}

QString OAIStoredValueVoidRequest::getStore() const {
    return m_store;
}
void OAIStoredValueVoidRequest::setStore(const QString &store) {
    m_store = store;
    m_store_isSet = true;
}

bool OAIStoredValueVoidRequest::is_store_Set() const{
    return m_store_isSet;
}

bool OAIStoredValueVoidRequest::is_store_Valid() const{
    return m_store_isValid;
}

QString OAIStoredValueVoidRequest::getTenderReference() const {
    return m_tender_reference;
}
void OAIStoredValueVoidRequest::setTenderReference(const QString &tender_reference) {
    m_tender_reference = tender_reference;
    m_tender_reference_isSet = true;
}

bool OAIStoredValueVoidRequest::is_tender_reference_Set() const{
    return m_tender_reference_isSet;
}

bool OAIStoredValueVoidRequest::is_tender_reference_Valid() const{
    return m_tender_reference_isValid;
}

QString OAIStoredValueVoidRequest::getUniqueTerminalId() const {
    return m_unique_terminal_id;
}
void OAIStoredValueVoidRequest::setUniqueTerminalId(const QString &unique_terminal_id) {
    m_unique_terminal_id = unique_terminal_id;
    m_unique_terminal_id_isSet = true;
}

bool OAIStoredValueVoidRequest::is_unique_terminal_id_Set() const{
    return m_unique_terminal_id_isSet;
}

bool OAIStoredValueVoidRequest::is_unique_terminal_id_Valid() const{
    return m_unique_terminal_id_isValid;
}

bool OAIStoredValueVoidRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_merchant_account_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_original_reference_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_reference_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_store_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tender_reference_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_unique_terminal_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIStoredValueVoidRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_merchant_account_isValid && m_original_reference_isValid && true;
}

} // namespace OpenAPI
