/**
 * Adyen Stored Value API
 * A set of API endpoints to manage stored value products.
 *
 * The version of the OpenAPI document: 46
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIStoredValueIssueRequest.h
 *
 * 
 */

#ifndef OAIStoredValueIssueRequest_H
#define OAIStoredValueIssueRequest_H

#include <QJsonObject>

#include "OAIAmount.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAmount;

class OAIStoredValueIssueRequest : public OAIObject {
public:
    OAIStoredValueIssueRequest();
    OAIStoredValueIssueRequest(QString json);
    ~OAIStoredValueIssueRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAmount getAmount() const;
    void setAmount(const OAIAmount &amount);
    bool is_amount_Set() const;
    bool is_amount_Valid() const;

    QString getMerchantAccount() const;
    void setMerchantAccount(const QString &merchant_account);
    bool is_merchant_account_Set() const;
    bool is_merchant_account_Valid() const;

    QMap<QString, QString> getPaymentMethod() const;
    void setPaymentMethod(const QMap<QString, QString> &payment_method);
    bool is_payment_method_Set() const;
    bool is_payment_method_Valid() const;

    QString getRecurringDetailReference() const;
    void setRecurringDetailReference(const QString &recurring_detail_reference);
    bool is_recurring_detail_reference_Set() const;
    bool is_recurring_detail_reference_Valid() const;

    QString getReference() const;
    void setReference(const QString &reference);
    bool is_reference_Set() const;
    bool is_reference_Valid() const;

    QString getShopperInteraction() const;
    void setShopperInteraction(const QString &shopper_interaction);
    bool is_shopper_interaction_Set() const;
    bool is_shopper_interaction_Valid() const;

    QString getShopperReference() const;
    void setShopperReference(const QString &shopper_reference);
    bool is_shopper_reference_Set() const;
    bool is_shopper_reference_Valid() const;

    QString getStore() const;
    void setStore(const QString &store);
    bool is_store_Set() const;
    bool is_store_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAmount m_amount;
    bool m_amount_isSet;
    bool m_amount_isValid;

    QString m_merchant_account;
    bool m_merchant_account_isSet;
    bool m_merchant_account_isValid;

    QMap<QString, QString> m_payment_method;
    bool m_payment_method_isSet;
    bool m_payment_method_isValid;

    QString m_recurring_detail_reference;
    bool m_recurring_detail_reference_isSet;
    bool m_recurring_detail_reference_isValid;

    QString m_reference;
    bool m_reference_isSet;
    bool m_reference_isValid;

    QString m_shopper_interaction;
    bool m_shopper_interaction_isSet;
    bool m_shopper_interaction_isValid;

    QString m_shopper_reference;
    bool m_shopper_reference_isSet;
    bool m_shopper_reference_isValid;

    QString m_store;
    bool m_store_isSet;
    bool m_store_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIStoredValueIssueRequest)

#endif // OAIStoredValueIssueRequest_H
