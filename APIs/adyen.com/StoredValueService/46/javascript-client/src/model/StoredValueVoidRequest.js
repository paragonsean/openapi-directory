/**
 * Adyen Stored Value API
 * A set of API endpoints to manage stored value products.
 *
 * The version of the OpenAPI document: 46
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The StoredValueVoidRequest model module.
 * @module model/StoredValueVoidRequest
 * @version 46
 */
class StoredValueVoidRequest {
    /**
     * Constructs a new <code>StoredValueVoidRequest</code>.
     * @alias module:model/StoredValueVoidRequest
     * @param merchantAccount {String} The merchant account identifier, with which you want to process the transaction.
     * @param originalReference {String} The original pspReference of the payment to modify.
     */
    constructor(merchantAccount, originalReference) { 
        
        StoredValueVoidRequest.initialize(this, merchantAccount, originalReference);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, merchantAccount, originalReference) { 
        obj['merchantAccount'] = merchantAccount;
        obj['originalReference'] = originalReference;
    }

    /**
     * Constructs a <code>StoredValueVoidRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/StoredValueVoidRequest} obj Optional instance to populate.
     * @return {module:model/StoredValueVoidRequest} The populated <code>StoredValueVoidRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new StoredValueVoidRequest();

            if (data.hasOwnProperty('merchantAccount')) {
                obj['merchantAccount'] = ApiClient.convertToType(data['merchantAccount'], 'String');
            }
            if (data.hasOwnProperty('originalReference')) {
                obj['originalReference'] = ApiClient.convertToType(data['originalReference'], 'String');
            }
            if (data.hasOwnProperty('reference')) {
                obj['reference'] = ApiClient.convertToType(data['reference'], 'String');
            }
            if (data.hasOwnProperty('store')) {
                obj['store'] = ApiClient.convertToType(data['store'], 'String');
            }
            if (data.hasOwnProperty('tenderReference')) {
                obj['tenderReference'] = ApiClient.convertToType(data['tenderReference'], 'String');
            }
            if (data.hasOwnProperty('uniqueTerminalId')) {
                obj['uniqueTerminalId'] = ApiClient.convertToType(data['uniqueTerminalId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>StoredValueVoidRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>StoredValueVoidRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of StoredValueVoidRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['merchantAccount'] && !(typeof data['merchantAccount'] === 'string' || data['merchantAccount'] instanceof String)) {
            throw new Error("Expected the field `merchantAccount` to be a primitive type in the JSON string but got " + data['merchantAccount']);
        }
        // ensure the json data is a string
        if (data['originalReference'] && !(typeof data['originalReference'] === 'string' || data['originalReference'] instanceof String)) {
            throw new Error("Expected the field `originalReference` to be a primitive type in the JSON string but got " + data['originalReference']);
        }
        // ensure the json data is a string
        if (data['reference'] && !(typeof data['reference'] === 'string' || data['reference'] instanceof String)) {
            throw new Error("Expected the field `reference` to be a primitive type in the JSON string but got " + data['reference']);
        }
        // ensure the json data is a string
        if (data['store'] && !(typeof data['store'] === 'string' || data['store'] instanceof String)) {
            throw new Error("Expected the field `store` to be a primitive type in the JSON string but got " + data['store']);
        }
        // ensure the json data is a string
        if (data['tenderReference'] && !(typeof data['tenderReference'] === 'string' || data['tenderReference'] instanceof String)) {
            throw new Error("Expected the field `tenderReference` to be a primitive type in the JSON string but got " + data['tenderReference']);
        }
        // ensure the json data is a string
        if (data['uniqueTerminalId'] && !(typeof data['uniqueTerminalId'] === 'string' || data['uniqueTerminalId'] instanceof String)) {
            throw new Error("Expected the field `uniqueTerminalId` to be a primitive type in the JSON string but got " + data['uniqueTerminalId']);
        }

        return true;
    }


}

StoredValueVoidRequest.RequiredProperties = ["merchantAccount", "originalReference"];

/**
 * The merchant account identifier, with which you want to process the transaction.
 * @member {String} merchantAccount
 */
StoredValueVoidRequest.prototype['merchantAccount'] = undefined;

/**
 * The original pspReference of the payment to modify.
 * @member {String} originalReference
 */
StoredValueVoidRequest.prototype['originalReference'] = undefined;

/**
 * Your reference for the payment modification. This reference is visible in Customer Area and in reports. Maximum length: 80 characters.
 * @member {String} reference
 */
StoredValueVoidRequest.prototype['reference'] = undefined;

/**
 * The physical store, for which this payment is processed.
 * @member {String} store
 */
StoredValueVoidRequest.prototype['store'] = undefined;

/**
 * The reference of the tender.
 * @member {String} tenderReference
 */
StoredValueVoidRequest.prototype['tenderReference'] = undefined;

/**
 * The unique ID of a POS terminal.
 * @member {String} uniqueTerminalId
 */
StoredValueVoidRequest.prototype['uniqueTerminalId'] = undefined;






export default StoredValueVoidRequest;

