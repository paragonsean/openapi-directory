/**
 * Adyen Stored Value API
 * A set of API endpoints to manage stored value products.
 *
 * The version of the OpenAPI document: 46
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Amount from './model/Amount';
import ServiceError from './model/ServiceError';
import StoredValueBalanceCheckRequest from './model/StoredValueBalanceCheckRequest';
import StoredValueBalanceCheckResponse from './model/StoredValueBalanceCheckResponse';
import StoredValueBalanceMergeRequest from './model/StoredValueBalanceMergeRequest';
import StoredValueBalanceMergeResponse from './model/StoredValueBalanceMergeResponse';
import StoredValueIssueRequest from './model/StoredValueIssueRequest';
import StoredValueIssueResponse from './model/StoredValueIssueResponse';
import StoredValueLoadRequest from './model/StoredValueLoadRequest';
import StoredValueLoadResponse from './model/StoredValueLoadResponse';
import StoredValueStatusChangeRequest from './model/StoredValueStatusChangeRequest';
import StoredValueStatusChangeResponse from './model/StoredValueStatusChangeResponse';
import StoredValueVoidRequest from './model/StoredValueVoidRequest';
import StoredValueVoidResponse from './model/StoredValueVoidResponse';
import GeneralApi from './api/GeneralApi';


/**
* A set of API endpoints to manage stored value products..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var AdyenStoredValueApi = require('index'); // See note below*.
* var xxxSvc = new AdyenStoredValueApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new AdyenStoredValueApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new AdyenStoredValueApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new AdyenStoredValueApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 46
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Amount model constructor.
     * @property {module:model/Amount}
     */
    Amount,

    /**
     * The ServiceError model constructor.
     * @property {module:model/ServiceError}
     */
    ServiceError,

    /**
     * The StoredValueBalanceCheckRequest model constructor.
     * @property {module:model/StoredValueBalanceCheckRequest}
     */
    StoredValueBalanceCheckRequest,

    /**
     * The StoredValueBalanceCheckResponse model constructor.
     * @property {module:model/StoredValueBalanceCheckResponse}
     */
    StoredValueBalanceCheckResponse,

    /**
     * The StoredValueBalanceMergeRequest model constructor.
     * @property {module:model/StoredValueBalanceMergeRequest}
     */
    StoredValueBalanceMergeRequest,

    /**
     * The StoredValueBalanceMergeResponse model constructor.
     * @property {module:model/StoredValueBalanceMergeResponse}
     */
    StoredValueBalanceMergeResponse,

    /**
     * The StoredValueIssueRequest model constructor.
     * @property {module:model/StoredValueIssueRequest}
     */
    StoredValueIssueRequest,

    /**
     * The StoredValueIssueResponse model constructor.
     * @property {module:model/StoredValueIssueResponse}
     */
    StoredValueIssueResponse,

    /**
     * The StoredValueLoadRequest model constructor.
     * @property {module:model/StoredValueLoadRequest}
     */
    StoredValueLoadRequest,

    /**
     * The StoredValueLoadResponse model constructor.
     * @property {module:model/StoredValueLoadResponse}
     */
    StoredValueLoadResponse,

    /**
     * The StoredValueStatusChangeRequest model constructor.
     * @property {module:model/StoredValueStatusChangeRequest}
     */
    StoredValueStatusChangeRequest,

    /**
     * The StoredValueStatusChangeResponse model constructor.
     * @property {module:model/StoredValueStatusChangeResponse}
     */
    StoredValueStatusChangeResponse,

    /**
     * The StoredValueVoidRequest model constructor.
     * @property {module:model/StoredValueVoidRequest}
     */
    StoredValueVoidRequest,

    /**
     * The StoredValueVoidResponse model constructor.
     * @property {module:model/StoredValueVoidResponse}
     */
    StoredValueVoidResponse,

    /**
    * The GeneralApi service constructor.
    * @property {module:api/GeneralApi}
    */
    GeneralApi
};
