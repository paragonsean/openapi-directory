/*
 * Adyen Stored Value API
 * A set of API endpoints to manage stored value products.
 *
 * The version of the OpenAPI document: 46
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ServiceError;
import org.openapitools.client.model.StoredValueBalanceCheckRequest;
import org.openapitools.client.model.StoredValueBalanceCheckResponse;
import org.openapitools.client.model.StoredValueBalanceMergeRequest;
import org.openapitools.client.model.StoredValueBalanceMergeResponse;
import org.openapitools.client.model.StoredValueIssueRequest;
import org.openapitools.client.model.StoredValueIssueResponse;
import org.openapitools.client.model.StoredValueLoadRequest;
import org.openapitools.client.model.StoredValueLoadResponse;
import org.openapitools.client.model.StoredValueStatusChangeRequest;
import org.openapitools.client.model.StoredValueStatusChangeResponse;
import org.openapitools.client.model.StoredValueVoidRequest;
import org.openapitools.client.model.StoredValueVoidResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for GeneralApi
 */
@Disabled
public class GeneralApiTest {

    private final GeneralApi api = new GeneralApi();

    /**
     * Changes the status of the payment method.
     *
     * Changes the status of the provided payment method to the specified status.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postChangeStatusTest() throws ApiException {
        StoredValueStatusChangeRequest storedValueStatusChangeRequest = null;
        StoredValueStatusChangeResponse response = api.postChangeStatus(storedValueStatusChangeRequest);
        // TODO: test validations
    }

    /**
     * Checks the balance.
     *
     * Checks the balance of the provided payment method.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postCheckBalanceTest() throws ApiException {
        StoredValueBalanceCheckRequest storedValueBalanceCheckRequest = null;
        StoredValueBalanceCheckResponse response = api.postCheckBalance(storedValueBalanceCheckRequest);
        // TODO: test validations
    }

    /**
     * Issues a new card.
     *
     * Issues a new card of the given payment method.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postIssueTest() throws ApiException {
        StoredValueIssueRequest storedValueIssueRequest = null;
        StoredValueIssueResponse response = api.postIssue(storedValueIssueRequest);
        // TODO: test validations
    }

    /**
     * Loads the payment method.
     *
     * Loads the payment method with the specified funds.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postLoadTest() throws ApiException {
        StoredValueLoadRequest storedValueLoadRequest = null;
        StoredValueLoadResponse response = api.postLoad(storedValueLoadRequest);
        // TODO: test validations
    }

    /**
     * Merge the balance of two cards.
     *
     * Increases the balance of the paymentmethod by the full amount left on the source paymentmethod
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postMergeBalanceTest() throws ApiException {
        StoredValueBalanceMergeRequest storedValueBalanceMergeRequest = null;
        StoredValueBalanceMergeResponse response = api.postMergeBalance(storedValueBalanceMergeRequest);
        // TODO: test validations
    }

    /**
     * Voids a transaction.
     *
     * Voids the referenced stored value transaction.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postVoidTransactionTest() throws ApiException {
        StoredValueVoidRequest storedValueVoidRequest = null;
        StoredValueVoidResponse response = api.postVoidTransaction(storedValueVoidRequest);
        // TODO: test validations
    }

}
