# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.dispute_service_result import DisputeServiceResult
from openapi_server import util


class SupplyDefenseDocumentResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, dispute_service_result: DisputeServiceResult=None):
        """SupplyDefenseDocumentResponse - a model defined in OpenAPI

        :param dispute_service_result: The dispute_service_result of this SupplyDefenseDocumentResponse.
        """
        self.openapi_types = {
            'dispute_service_result': DisputeServiceResult
        }

        self.attribute_map = {
            'dispute_service_result': 'disputeServiceResult'
        }

        self._dispute_service_result = dispute_service_result

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SupplyDefenseDocumentResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SupplyDefenseDocumentResponse of this SupplyDefenseDocumentResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def dispute_service_result(self):
        """Gets the dispute_service_result of this SupplyDefenseDocumentResponse.

        The result of the dispute service.

        :return: The dispute_service_result of this SupplyDefenseDocumentResponse.
        :rtype: DisputeServiceResult
        """
        return self._dispute_service_result

    @dispute_service_result.setter
    def dispute_service_result(self, dispute_service_result):
        """Sets the dispute_service_result of this SupplyDefenseDocumentResponse.

        The result of the dispute service.

        :param dispute_service_result: The dispute_service_result of this SupplyDefenseDocumentResponse.
        :type dispute_service_result: DisputeServiceResult
        """
        if dispute_service_result is None:
            raise ValueError("Invalid value for `dispute_service_result`, must not be `None`")

        self._dispute_service_result = dispute_service_result
