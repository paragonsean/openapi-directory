/**
 * Disputes API
 * You can use the [Disputes API](https://docs.adyen.com/risk-management/disputes-api) to automate the dispute handling process so that you can respond to disputes and chargebacks as soon as they are initiated. The Disputes API lets you retrieve defense reasons, supply and delete defense documents, and accept or defend disputes.  ## Authentication Each request to the Disputes API must be signed with an API key. For this, obtain an API Key from your Customer Area, as described in [How to get the API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key). Then set this key to the `X-API-Key` header value, for example:  ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: Your_API_key\" \\ ... ``` Note that when going live, you need to generate new web service user credentials to access the [live endpoints](https://docs.adyen.com/development-resources/live-endpoints).  ## Versioning Disputes API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://ca-test.adyen.com/ca/services/DisputeService/v30/defendDispute ```
 *
 * The version of the OpenAPI document: 30
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AcceptDisputeRequest from '../model/AcceptDisputeRequest';
import AcceptDisputeResponse from '../model/AcceptDisputeResponse';
import DefendDisputeRequest from '../model/DefendDisputeRequest';
import DefendDisputeResponse from '../model/DefendDisputeResponse';
import DefenseReasonsRequest from '../model/DefenseReasonsRequest';
import DefenseReasonsResponse from '../model/DefenseReasonsResponse';
import DeleteDefenseDocumentRequest from '../model/DeleteDefenseDocumentRequest';
import DeleteDefenseDocumentResponse from '../model/DeleteDefenseDocumentResponse';
import ServiceError from '../model/ServiceError';
import SupplyDefenseDocumentRequest from '../model/SupplyDefenseDocumentRequest';
import SupplyDefenseDocumentResponse from '../model/SupplyDefenseDocumentResponse';

/**
* General service.
* @module api/GeneralApi
* @version 30
*/
export default class GeneralApi {

    /**
    * Constructs a new GeneralApi. 
    * @alias module:api/GeneralApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the postAcceptDispute operation.
     * @callback module:api/GeneralApi~postAcceptDisputeCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AcceptDisputeResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Accept a dispute
     * Accepts a specific dispute.
     * @param {Object} opts Optional parameters
     * @param {module:model/AcceptDisputeRequest} [acceptDisputeRequest] 
     * @param {module:api/GeneralApi~postAcceptDisputeCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AcceptDisputeResponse}
     */
    postAcceptDispute(opts, callback) {
      opts = opts || {};
      let postBody = opts['acceptDisputeRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BasicAuth', 'ApiKeyAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = AcceptDisputeResponse;
      return this.apiClient.callApi(
        '/acceptDispute', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the postDefendDispute operation.
     * @callback module:api/GeneralApi~postDefendDisputeCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DefendDisputeResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Defend a dispute
     * Defends a specific dispute.
     * @param {Object} opts Optional parameters
     * @param {module:model/DefendDisputeRequest} [defendDisputeRequest] 
     * @param {module:api/GeneralApi~postDefendDisputeCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DefendDisputeResponse}
     */
    postDefendDispute(opts, callback) {
      opts = opts || {};
      let postBody = opts['defendDisputeRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BasicAuth', 'ApiKeyAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = DefendDisputeResponse;
      return this.apiClient.callApi(
        '/defendDispute', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the postDeleteDisputeDefenseDocument operation.
     * @callback module:api/GeneralApi~postDeleteDisputeDefenseDocumentCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DeleteDefenseDocumentResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete a defense document
     * Deletes a specific dispute defense document that was supplied earlier.
     * @param {Object} opts Optional parameters
     * @param {module:model/DeleteDefenseDocumentRequest} [deleteDefenseDocumentRequest] 
     * @param {module:api/GeneralApi~postDeleteDisputeDefenseDocumentCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DeleteDefenseDocumentResponse}
     */
    postDeleteDisputeDefenseDocument(opts, callback) {
      opts = opts || {};
      let postBody = opts['deleteDefenseDocumentRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BasicAuth', 'ApiKeyAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = DeleteDefenseDocumentResponse;
      return this.apiClient.callApi(
        '/deleteDisputeDefenseDocument', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the postRetrieveApplicableDefenseReasons operation.
     * @callback module:api/GeneralApi~postRetrieveApplicableDefenseReasonsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DefenseReasonsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get applicable defense reasons
     * Returns a list of all applicable defense reasons to defend a specific dispute.
     * @param {Object} opts Optional parameters
     * @param {module:model/DefenseReasonsRequest} [defenseReasonsRequest] 
     * @param {module:api/GeneralApi~postRetrieveApplicableDefenseReasonsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DefenseReasonsResponse}
     */
    postRetrieveApplicableDefenseReasons(opts, callback) {
      opts = opts || {};
      let postBody = opts['defenseReasonsRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BasicAuth', 'ApiKeyAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = DefenseReasonsResponse;
      return this.apiClient.callApi(
        '/retrieveApplicableDefenseReasons', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the postSupplyDefenseDocument operation.
     * @callback module:api/GeneralApi~postSupplyDefenseDocumentCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SupplyDefenseDocumentResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Supply a defense document
     * Supplies a specific dispute defense document.
     * @param {Object} opts Optional parameters
     * @param {module:model/SupplyDefenseDocumentRequest} [supplyDefenseDocumentRequest] 
     * @param {module:api/GeneralApi~postSupplyDefenseDocumentCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SupplyDefenseDocumentResponse}
     */
    postSupplyDefenseDocument(opts, callback) {
      opts = opts || {};
      let postBody = opts['supplyDefenseDocumentRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BasicAuth', 'ApiKeyAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = SupplyDefenseDocumentResponse;
      return this.apiClient.callApi(
        '/supplyDefenseDocument', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
