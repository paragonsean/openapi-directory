/**
 * Disputes API
 * You can use the [Disputes API](https://docs.adyen.com/risk-management/disputes-api) to automate the dispute handling process so that you can respond to disputes and chargebacks as soon as they are initiated. The Disputes API lets you retrieve defense reasons, supply and delete defense documents, and accept or defend disputes.  ## Authentication Each request to the Disputes API must be signed with an API key. For this, obtain an API Key from your Customer Area, as described in [How to get the API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key). Then set this key to the `X-API-Key` header value, for example:  ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: Your_API_key\" \\ ... ``` Note that when going live, you need to generate new web service user credentials to access the [live endpoints](https://docs.adyen.com/development-resources/live-endpoints).  ## Versioning Disputes API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://ca-test.adyen.com/ca/services/DisputeService/v30/defendDispute ```
 *
 * The version of the OpenAPI document: 30
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DisputeServiceResult from './DisputeServiceResult';

/**
 * The DeleteDefenseDocumentResponse model module.
 * @module model/DeleteDefenseDocumentResponse
 * @version 30
 */
class DeleteDefenseDocumentResponse {
    /**
     * Constructs a new <code>DeleteDefenseDocumentResponse</code>.
     * @alias module:model/DeleteDefenseDocumentResponse
     * @param disputeServiceResult {module:model/DisputeServiceResult} The result of the dispute service.
     */
    constructor(disputeServiceResult) { 
        
        DeleteDefenseDocumentResponse.initialize(this, disputeServiceResult);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, disputeServiceResult) { 
        obj['disputeServiceResult'] = disputeServiceResult;
    }

    /**
     * Constructs a <code>DeleteDefenseDocumentResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DeleteDefenseDocumentResponse} obj Optional instance to populate.
     * @return {module:model/DeleteDefenseDocumentResponse} The populated <code>DeleteDefenseDocumentResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DeleteDefenseDocumentResponse();

            if (data.hasOwnProperty('disputeServiceResult')) {
                obj['disputeServiceResult'] = DisputeServiceResult.constructFromObject(data['disputeServiceResult']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DeleteDefenseDocumentResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DeleteDefenseDocumentResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DeleteDefenseDocumentResponse.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `disputeServiceResult`
        if (data['disputeServiceResult']) { // data not null
          DisputeServiceResult.validateJSON(data['disputeServiceResult']);
        }

        return true;
    }


}

DeleteDefenseDocumentResponse.RequiredProperties = ["disputeServiceResult"];

/**
 * The result of the dispute service.
 * @member {module:model/DisputeServiceResult} disputeServiceResult
 */
DeleteDefenseDocumentResponse.prototype['disputeServiceResult'] = undefined;






export default DeleteDefenseDocumentResponse;

