/**
 * Disputes API
 * You can use the [Disputes API](https://docs.adyen.com/risk-management/disputes-api) to automate the dispute handling process so that you can respond to disputes and chargebacks as soon as they are initiated. The Disputes API lets you retrieve defense reasons, supply and delete defense documents, and accept or defend disputes.  ## Authentication Each request to the Disputes API must be signed with an API key. For this, obtain an API Key from your Customer Area, as described in [How to get the API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key). Then set this key to the `X-API-Key` header value, for example:  ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: Your_API_key\" \\ ... ``` Note that when going live, you need to generate new web service user credentials to access the [live endpoints](https://docs.adyen.com/development-resources/live-endpoints).  ## Versioning Disputes API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://ca-test.adyen.com/ca/services/DisputeService/v30/defendDispute ```
 *
 * The version of the OpenAPI document: 30
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AcceptDisputeRequest from './model/AcceptDisputeRequest';
import AcceptDisputeResponse from './model/AcceptDisputeResponse';
import DefendDisputeRequest from './model/DefendDisputeRequest';
import DefendDisputeResponse from './model/DefendDisputeResponse';
import DefenseDocument from './model/DefenseDocument';
import DefenseDocumentType from './model/DefenseDocumentType';
import DefenseReason from './model/DefenseReason';
import DefenseReasonsRequest from './model/DefenseReasonsRequest';
import DefenseReasonsResponse from './model/DefenseReasonsResponse';
import DeleteDefenseDocumentRequest from './model/DeleteDefenseDocumentRequest';
import DeleteDefenseDocumentResponse from './model/DeleteDefenseDocumentResponse';
import DisputeServiceResult from './model/DisputeServiceResult';
import ServiceError from './model/ServiceError';
import SupplyDefenseDocumentRequest from './model/SupplyDefenseDocumentRequest';
import SupplyDefenseDocumentResponse from './model/SupplyDefenseDocumentResponse';
import GeneralApi from './api/GeneralApi';


/**
* You can use the [Disputes API](https://docs.adyen.com/risk-management/disputes-api) to automate the dispute handling process so that you can respond to disputes and chargebacks as soon as they are initiated. The Disputes API lets you retrieve defense reasons, supply and delete defense documents, and accept or defend disputes.  ## Authentication Each request to the Disputes API must be signed with an API key. For this, obtain an API Key from your Customer Area, as described in [How to get the API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key). Then set this key to the &#x60;X-API-Key&#x60; header value, for example:  &#x60;&#x60;&#x60; curl -H \&quot;Content-Type: application/json\&quot; \\ -H \&quot;X-API-Key: Your_API_key\&quot; \\ ... &#x60;&#x60;&#x60; Note that when going live, you need to generate new web service user credentials to access the [live endpoints](https://docs.adyen.com/development-resources/live-endpoints).  ## Versioning Disputes API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \&quot;vXX\&quot;, where XX is the version number.  For example: &#x60;&#x60;&#x60; https://ca-test.adyen.com/ca/services/DisputeService/v30/defendDispute &#x60;&#x60;&#x60;.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var DisputesApi = require('index'); // See note below*.
* var xxxSvc = new DisputesApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new DisputesApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new DisputesApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new DisputesApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 30
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AcceptDisputeRequest model constructor.
     * @property {module:model/AcceptDisputeRequest}
     */
    AcceptDisputeRequest,

    /**
     * The AcceptDisputeResponse model constructor.
     * @property {module:model/AcceptDisputeResponse}
     */
    AcceptDisputeResponse,

    /**
     * The DefendDisputeRequest model constructor.
     * @property {module:model/DefendDisputeRequest}
     */
    DefendDisputeRequest,

    /**
     * The DefendDisputeResponse model constructor.
     * @property {module:model/DefendDisputeResponse}
     */
    DefendDisputeResponse,

    /**
     * The DefenseDocument model constructor.
     * @property {module:model/DefenseDocument}
     */
    DefenseDocument,

    /**
     * The DefenseDocumentType model constructor.
     * @property {module:model/DefenseDocumentType}
     */
    DefenseDocumentType,

    /**
     * The DefenseReason model constructor.
     * @property {module:model/DefenseReason}
     */
    DefenseReason,

    /**
     * The DefenseReasonsRequest model constructor.
     * @property {module:model/DefenseReasonsRequest}
     */
    DefenseReasonsRequest,

    /**
     * The DefenseReasonsResponse model constructor.
     * @property {module:model/DefenseReasonsResponse}
     */
    DefenseReasonsResponse,

    /**
     * The DeleteDefenseDocumentRequest model constructor.
     * @property {module:model/DeleteDefenseDocumentRequest}
     */
    DeleteDefenseDocumentRequest,

    /**
     * The DeleteDefenseDocumentResponse model constructor.
     * @property {module:model/DeleteDefenseDocumentResponse}
     */
    DeleteDefenseDocumentResponse,

    /**
     * The DisputeServiceResult model constructor.
     * @property {module:model/DisputeServiceResult}
     */
    DisputeServiceResult,

    /**
     * The ServiceError model constructor.
     * @property {module:model/ServiceError}
     */
    ServiceError,

    /**
     * The SupplyDefenseDocumentRequest model constructor.
     * @property {module:model/SupplyDefenseDocumentRequest}
     */
    SupplyDefenseDocumentRequest,

    /**
     * The SupplyDefenseDocumentResponse model constructor.
     * @property {module:model/SupplyDefenseDocumentResponse}
     */
    SupplyDefenseDocumentResponse,

    /**
    * The GeneralApi service constructor.
    * @property {module:api/GeneralApi}
    */
    GeneralApi
};
