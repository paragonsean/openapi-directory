/**
 * Disputes API
 * You can use the [Disputes API](https://docs.adyen.com/risk-management/disputes-api) to automate the dispute handling process so that you can respond to disputes and chargebacks as soon as they are initiated. The Disputes API lets you retrieve defense reasons, supply and delete defense documents, and accept or defend disputes.  ## Authentication Each request to the Disputes API must be signed with an API key. For this, obtain an API Key from your Customer Area, as described in [How to get the API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key). Then set this key to the `X-API-Key` header value, for example:  ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: Your_API_key\" \\ ... ``` Note that when going live, you need to generate new web service user credentials to access the [live endpoints](https://docs.adyen.com/development-resources/live-endpoints).  ## Versioning Disputes API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://ca-test.adyen.com/ca/services/DisputeService/v30/defendDispute ```
 *
 * The version of the OpenAPI document: 30
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDefendDisputeResponse.h
 *
 * 
 */

#ifndef OAIDefendDisputeResponse_H
#define OAIDefendDisputeResponse_H

#include <QJsonObject>

#include "OAIDisputeServiceResult.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDisputeServiceResult;

class OAIDefendDisputeResponse : public OAIObject {
public:
    OAIDefendDisputeResponse();
    OAIDefendDisputeResponse(QString json);
    ~OAIDefendDisputeResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIDisputeServiceResult getDisputeServiceResult() const;
    void setDisputeServiceResult(const OAIDisputeServiceResult &dispute_service_result);
    bool is_dispute_service_result_Set() const;
    bool is_dispute_service_result_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIDisputeServiceResult m_dispute_service_result;
    bool m_dispute_service_result_isSet;
    bool m_dispute_service_result_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDefendDisputeResponse)

#endif // OAIDefendDisputeResponse_H
