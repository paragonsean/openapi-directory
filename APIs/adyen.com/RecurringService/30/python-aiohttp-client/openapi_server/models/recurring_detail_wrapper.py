# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.recurring_detail import RecurringDetail
from openapi_server import util


class RecurringDetailWrapper(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, recurring_detail: RecurringDetail=None):
        """RecurringDetailWrapper - a model defined in OpenAPI

        :param recurring_detail: The recurring_detail of this RecurringDetailWrapper.
        """
        self.openapi_types = {
            'recurring_detail': RecurringDetail
        }

        self.attribute_map = {
            'recurring_detail': 'RecurringDetail'
        }

        self._recurring_detail = recurring_detail

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RecurringDetailWrapper':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RecurringDetailWrapper of this RecurringDetailWrapper.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def recurring_detail(self):
        """Gets the recurring_detail of this RecurringDetailWrapper.


        :return: The recurring_detail of this RecurringDetailWrapper.
        :rtype: RecurringDetail
        """
        return self._recurring_detail

    @recurring_detail.setter
    def recurring_detail(self, recurring_detail):
        """Sets the recurring_detail of this RecurringDetailWrapper.


        :param recurring_detail: The recurring_detail of this RecurringDetailWrapper.
        :type recurring_detail: RecurringDetail
        """

        self._recurring_detail = recurring_detail
