/**
 * Adyen Recurring API
 * The Recurring APIs allow you to manage and remove your tokens or saved payment details. Tokens should be created with validation during a payment request.  For more information, refer to our [Tokenization documentation](https://docs.adyen.com/online-payments/tokenization). ## Authentication You need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.  If using an API key, add an `X-API-Key` header with the API key as the value, for example:   ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ```  Alternatively, you can use the username and password to connect to the API using basic authentication, for example:  ``` curl -U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\ -H \"Content-Type: application/json\" \\ ... ```  ## Versioning Recurring API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://pal-test.adyen.com/pal/servlet/Recurring/v67/disable ```  ## Going live  To authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.  The live endpoint URLs contain a prefix which is unique to your company account: ```  https://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Recurring/v67/disable ```  Get your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.
 *
 * The version of the OpenAPI document: 67
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Amount from './Amount';

/**
 * The PermitRestriction model module.
 * @module model/PermitRestriction
 * @version 67
 */
class PermitRestriction {
    /**
     * Constructs a new <code>PermitRestriction</code>.
     * @alias module:model/PermitRestriction
     */
    constructor() { 
        
        PermitRestriction.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PermitRestriction</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PermitRestriction} obj Optional instance to populate.
     * @return {module:model/PermitRestriction} The populated <code>PermitRestriction</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PermitRestriction();

            if (data.hasOwnProperty('maxAmount')) {
                obj['maxAmount'] = Amount.constructFromObject(data['maxAmount']);
            }
            if (data.hasOwnProperty('singleTransactionLimit')) {
                obj['singleTransactionLimit'] = Amount.constructFromObject(data['singleTransactionLimit']);
            }
            if (data.hasOwnProperty('singleUse')) {
                obj['singleUse'] = ApiClient.convertToType(data['singleUse'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PermitRestriction</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PermitRestriction</code>.
     */
    static validateJSON(data) {
        // validate the optional field `maxAmount`
        if (data['maxAmount']) { // data not null
          Amount.validateJSON(data['maxAmount']);
        }
        // validate the optional field `singleTransactionLimit`
        if (data['singleTransactionLimit']) { // data not null
          Amount.validateJSON(data['singleTransactionLimit']);
        }

        return true;
    }


}



/**
 * The total sum amount of one or more payments made using this permit may not exceed this amount if set.
 * @member {module:model/Amount} maxAmount
 */
PermitRestriction.prototype['maxAmount'] = undefined;

/**
 * The amount of any single payment using this permit may not exceed this amount if set.
 * @member {module:model/Amount} singleTransactionLimit
 */
PermitRestriction.prototype['singleTransactionLimit'] = undefined;

/**
 * Only a single payment can be made using this permit if set to true, otherwise multiple payments are allowed.
 * @member {Boolean} singleUse
 */
PermitRestriction.prototype['singleUse'] = undefined;






export default PermitRestriction;

