# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.card import Card
from openapi_server import util


class ScheduleAccountUpdaterRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, additional_data: Dict[str, str]=None, card: Card=None, merchant_account: str=None, reference: str=None, selected_recurring_detail_reference: str=None, shopper_reference: str=None):
        """ScheduleAccountUpdaterRequest - a model defined in OpenAPI

        :param additional_data: The additional_data of this ScheduleAccountUpdaterRequest.
        :param card: The card of this ScheduleAccountUpdaterRequest.
        :param merchant_account: The merchant_account of this ScheduleAccountUpdaterRequest.
        :param reference: The reference of this ScheduleAccountUpdaterRequest.
        :param selected_recurring_detail_reference: The selected_recurring_detail_reference of this ScheduleAccountUpdaterRequest.
        :param shopper_reference: The shopper_reference of this ScheduleAccountUpdaterRequest.
        """
        self.openapi_types = {
            'additional_data': Dict[str, str],
            'card': Card,
            'merchant_account': str,
            'reference': str,
            'selected_recurring_detail_reference': str,
            'shopper_reference': str
        }

        self.attribute_map = {
            'additional_data': 'additionalData',
            'card': 'card',
            'merchant_account': 'merchantAccount',
            'reference': 'reference',
            'selected_recurring_detail_reference': 'selectedRecurringDetailReference',
            'shopper_reference': 'shopperReference'
        }

        self._additional_data = additional_data
        self._card = card
        self._merchant_account = merchant_account
        self._reference = reference
        self._selected_recurring_detail_reference = selected_recurring_detail_reference
        self._shopper_reference = shopper_reference

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ScheduleAccountUpdaterRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ScheduleAccountUpdaterRequest of this ScheduleAccountUpdaterRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def additional_data(self):
        """Gets the additional_data of this ScheduleAccountUpdaterRequest.

        This field contains additional data, which may be required for a particular request.

        :return: The additional_data of this ScheduleAccountUpdaterRequest.
        :rtype: Dict[str, str]
        """
        return self._additional_data

    @additional_data.setter
    def additional_data(self, additional_data):
        """Sets the additional_data of this ScheduleAccountUpdaterRequest.

        This field contains additional data, which may be required for a particular request.

        :param additional_data: The additional_data of this ScheduleAccountUpdaterRequest.
        :type additional_data: Dict[str, str]
        """

        self._additional_data = additional_data

    @property
    def card(self):
        """Gets the card of this ScheduleAccountUpdaterRequest.

        Credit card data.  Optional if `shopperReference` and `selectedRecurringDetailReference` are provided.

        :return: The card of this ScheduleAccountUpdaterRequest.
        :rtype: Card
        """
        return self._card

    @card.setter
    def card(self, card):
        """Sets the card of this ScheduleAccountUpdaterRequest.

        Credit card data.  Optional if `shopperReference` and `selectedRecurringDetailReference` are provided.

        :param card: The card of this ScheduleAccountUpdaterRequest.
        :type card: Card
        """

        self._card = card

    @property
    def merchant_account(self):
        """Gets the merchant_account of this ScheduleAccountUpdaterRequest.

        Account of the merchant.

        :return: The merchant_account of this ScheduleAccountUpdaterRequest.
        :rtype: str
        """
        return self._merchant_account

    @merchant_account.setter
    def merchant_account(self, merchant_account):
        """Sets the merchant_account of this ScheduleAccountUpdaterRequest.

        Account of the merchant.

        :param merchant_account: The merchant_account of this ScheduleAccountUpdaterRequest.
        :type merchant_account: str
        """
        if merchant_account is None:
            raise ValueError("Invalid value for `merchant_account`, must not be `None`")

        self._merchant_account = merchant_account

    @property
    def reference(self):
        """Gets the reference of this ScheduleAccountUpdaterRequest.

        A reference that merchants can apply for the call.

        :return: The reference of this ScheduleAccountUpdaterRequest.
        :rtype: str
        """
        return self._reference

    @reference.setter
    def reference(self, reference):
        """Sets the reference of this ScheduleAccountUpdaterRequest.

        A reference that merchants can apply for the call.

        :param reference: The reference of this ScheduleAccountUpdaterRequest.
        :type reference: str
        """
        if reference is None:
            raise ValueError("Invalid value for `reference`, must not be `None`")

        self._reference = reference

    @property
    def selected_recurring_detail_reference(self):
        """Gets the selected_recurring_detail_reference of this ScheduleAccountUpdaterRequest.

        The selected detail recurring reference.  Optional if `card` is provided.

        :return: The selected_recurring_detail_reference of this ScheduleAccountUpdaterRequest.
        :rtype: str
        """
        return self._selected_recurring_detail_reference

    @selected_recurring_detail_reference.setter
    def selected_recurring_detail_reference(self, selected_recurring_detail_reference):
        """Sets the selected_recurring_detail_reference of this ScheduleAccountUpdaterRequest.

        The selected detail recurring reference.  Optional if `card` is provided.

        :param selected_recurring_detail_reference: The selected_recurring_detail_reference of this ScheduleAccountUpdaterRequest.
        :type selected_recurring_detail_reference: str
        """

        self._selected_recurring_detail_reference = selected_recurring_detail_reference

    @property
    def shopper_reference(self):
        """Gets the shopper_reference of this ScheduleAccountUpdaterRequest.

        The reference of the shopper that owns the recurring contract.  Optional if `card` is provided.

        :return: The shopper_reference of this ScheduleAccountUpdaterRequest.
        :rtype: str
        """
        return self._shopper_reference

    @shopper_reference.setter
    def shopper_reference(self, shopper_reference):
        """Sets the shopper_reference of this ScheduleAccountUpdaterRequest.

        The reference of the shopper that owns the recurring contract.  Optional if `card` is provided.

        :param shopper_reference: The shopper_reference of this ScheduleAccountUpdaterRequest.
        :type shopper_reference: str
        """

        self._shopper_reference = shopper_reference
