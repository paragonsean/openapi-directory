# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DisablePermitResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, psp_reference: str=None, status: str=None):
        """DisablePermitResult - a model defined in OpenAPI

        :param psp_reference: The psp_reference of this DisablePermitResult.
        :param status: The status of this DisablePermitResult.
        """
        self.openapi_types = {
            'psp_reference': str,
            'status': str
        }

        self.attribute_map = {
            'psp_reference': 'pspReference',
            'status': 'status'
        }

        self._psp_reference = psp_reference
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DisablePermitResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DisablePermitResult of this DisablePermitResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def psp_reference(self):
        """Gets the psp_reference of this DisablePermitResult.

        A unique reference associated with the request. This value is globally unique; quote it when communicating with us about this request.

        :return: The psp_reference of this DisablePermitResult.
        :rtype: str
        """
        return self._psp_reference

    @psp_reference.setter
    def psp_reference(self, psp_reference):
        """Sets the psp_reference of this DisablePermitResult.

        A unique reference associated with the request. This value is globally unique; quote it when communicating with us about this request.

        :param psp_reference: The psp_reference of this DisablePermitResult.
        :type psp_reference: str
        """

        self._psp_reference = psp_reference

    @property
    def status(self):
        """Gets the status of this DisablePermitResult.

        Status of the disable request.

        :return: The status of this DisablePermitResult.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this DisablePermitResult.

        Status of the disable request.

        :param status: The status of this DisablePermitResult.
        :type status: str
        """

        self._status = status
