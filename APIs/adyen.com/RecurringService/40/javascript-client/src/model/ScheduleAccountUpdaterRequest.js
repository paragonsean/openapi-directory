/**
 * Adyen Recurring API
 * The Recurring APIs allow you to manage and remove your tokens or saved payment details. Tokens should be created with validation during a payment request.  For more information, refer to our [Tokenization documentation](https://docs.adyen.com/online-payments/tokenization). ## Authentication You need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.  If using an API key, add an `X-API-Key` header with the API key as the value, for example:   ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ```  Alternatively, you can use the username and password to connect to the API using basic authentication, for example:  ``` curl -U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\ -H \"Content-Type: application/json\" \\ ... ```  ## Versioning Recurring API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://pal-test.adyen.com/pal/servlet/Recurring/v40/disable ```  ## Going live  To authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.  The live endpoint URLs contain a prefix which is unique to your company account: ```  https://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Recurring/v40/disable ```  Get your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.
 *
 * The version of the OpenAPI document: 40
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Card from './Card';

/**
 * The ScheduleAccountUpdaterRequest model module.
 * @module model/ScheduleAccountUpdaterRequest
 * @version 40
 */
class ScheduleAccountUpdaterRequest {
    /**
     * Constructs a new <code>ScheduleAccountUpdaterRequest</code>.
     * @alias module:model/ScheduleAccountUpdaterRequest
     * @param merchantAccount {String} Account of the merchant.
     * @param reference {String} A reference that merchants can apply for the call.
     */
    constructor(merchantAccount, reference) { 
        
        ScheduleAccountUpdaterRequest.initialize(this, merchantAccount, reference);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, merchantAccount, reference) { 
        obj['merchantAccount'] = merchantAccount;
        obj['reference'] = reference;
    }

    /**
     * Constructs a <code>ScheduleAccountUpdaterRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ScheduleAccountUpdaterRequest} obj Optional instance to populate.
     * @return {module:model/ScheduleAccountUpdaterRequest} The populated <code>ScheduleAccountUpdaterRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ScheduleAccountUpdaterRequest();

            if (data.hasOwnProperty('additionalData')) {
                obj['additionalData'] = ApiClient.convertToType(data['additionalData'], {'String': 'String'});
            }
            if (data.hasOwnProperty('card')) {
                obj['card'] = Card.constructFromObject(data['card']);
            }
            if (data.hasOwnProperty('merchantAccount')) {
                obj['merchantAccount'] = ApiClient.convertToType(data['merchantAccount'], 'String');
            }
            if (data.hasOwnProperty('reference')) {
                obj['reference'] = ApiClient.convertToType(data['reference'], 'String');
            }
            if (data.hasOwnProperty('selectedRecurringDetailReference')) {
                obj['selectedRecurringDetailReference'] = ApiClient.convertToType(data['selectedRecurringDetailReference'], 'String');
            }
            if (data.hasOwnProperty('shopperReference')) {
                obj['shopperReference'] = ApiClient.convertToType(data['shopperReference'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ScheduleAccountUpdaterRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ScheduleAccountUpdaterRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ScheduleAccountUpdaterRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `card`
        if (data['card']) { // data not null
          Card.validateJSON(data['card']);
        }
        // ensure the json data is a string
        if (data['merchantAccount'] && !(typeof data['merchantAccount'] === 'string' || data['merchantAccount'] instanceof String)) {
            throw new Error("Expected the field `merchantAccount` to be a primitive type in the JSON string but got " + data['merchantAccount']);
        }
        // ensure the json data is a string
        if (data['reference'] && !(typeof data['reference'] === 'string' || data['reference'] instanceof String)) {
            throw new Error("Expected the field `reference` to be a primitive type in the JSON string but got " + data['reference']);
        }
        // ensure the json data is a string
        if (data['selectedRecurringDetailReference'] && !(typeof data['selectedRecurringDetailReference'] === 'string' || data['selectedRecurringDetailReference'] instanceof String)) {
            throw new Error("Expected the field `selectedRecurringDetailReference` to be a primitive type in the JSON string but got " + data['selectedRecurringDetailReference']);
        }
        // ensure the json data is a string
        if (data['shopperReference'] && !(typeof data['shopperReference'] === 'string' || data['shopperReference'] instanceof String)) {
            throw new Error("Expected the field `shopperReference` to be a primitive type in the JSON string but got " + data['shopperReference']);
        }

        return true;
    }


}

ScheduleAccountUpdaterRequest.RequiredProperties = ["merchantAccount", "reference"];

/**
 * This field contains additional data, which may be required for a particular request.
 * @member {Object.<String, String>} additionalData
 */
ScheduleAccountUpdaterRequest.prototype['additionalData'] = undefined;

/**
 * Credit card data.  Optional if `shopperReference` and `selectedRecurringDetailReference` are provided.
 * @member {module:model/Card} card
 */
ScheduleAccountUpdaterRequest.prototype['card'] = undefined;

/**
 * Account of the merchant.
 * @member {String} merchantAccount
 */
ScheduleAccountUpdaterRequest.prototype['merchantAccount'] = undefined;

/**
 * A reference that merchants can apply for the call.
 * @member {String} reference
 */
ScheduleAccountUpdaterRequest.prototype['reference'] = undefined;

/**
 * The selected detail recurring reference.  Optional if `card` is provided.
 * @member {String} selectedRecurringDetailReference
 */
ScheduleAccountUpdaterRequest.prototype['selectedRecurringDetailReference'] = undefined;

/**
 * The reference of the shopper that owns the recurring contract.  Optional if `card` is provided.
 * @member {String} shopperReference
 */
ScheduleAccountUpdaterRequest.prototype['shopperReference'] = undefined;






export default ScheduleAccountUpdaterRequest;

