# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.permit_restriction import PermitRestriction
from openapi_server import util


class Permit(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, partner_id: str=None, profile_reference: str=None, restriction: PermitRestriction=None, result_key: str=None, valid_till_date: datetime=None):
        """Permit - a model defined in OpenAPI

        :param partner_id: The partner_id of this Permit.
        :param profile_reference: The profile_reference of this Permit.
        :param restriction: The restriction of this Permit.
        :param result_key: The result_key of this Permit.
        :param valid_till_date: The valid_till_date of this Permit.
        """
        self.openapi_types = {
            'partner_id': str,
            'profile_reference': str,
            'restriction': PermitRestriction,
            'result_key': str,
            'valid_till_date': datetime
        }

        self.attribute_map = {
            'partner_id': 'partnerId',
            'profile_reference': 'profileReference',
            'restriction': 'restriction',
            'result_key': 'resultKey',
            'valid_till_date': 'validTillDate'
        }

        self._partner_id = partner_id
        self._profile_reference = profile_reference
        self._restriction = restriction
        self._result_key = result_key
        self._valid_till_date = valid_till_date

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Permit':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Permit of this Permit.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def partner_id(self):
        """Gets the partner_id of this Permit.

        Partner ID (when using the permit-per-partner token sharing model).

        :return: The partner_id of this Permit.
        :rtype: str
        """
        return self._partner_id

    @partner_id.setter
    def partner_id(self, partner_id):
        """Sets the partner_id of this Permit.

        Partner ID (when using the permit-per-partner token sharing model).

        :param partner_id: The partner_id of this Permit.
        :type partner_id: str
        """

        self._partner_id = partner_id

    @property
    def profile_reference(self):
        """Gets the profile_reference of this Permit.

        The profile to apply to this permit (when using the shared permits model).

        :return: The profile_reference of this Permit.
        :rtype: str
        """
        return self._profile_reference

    @profile_reference.setter
    def profile_reference(self, profile_reference):
        """Sets the profile_reference of this Permit.

        The profile to apply to this permit (when using the shared permits model).

        :param profile_reference: The profile_reference of this Permit.
        :type profile_reference: str
        """

        self._profile_reference = profile_reference

    @property
    def restriction(self):
        """Gets the restriction of this Permit.

        Permit level restriction overrides.

        :return: The restriction of this Permit.
        :rtype: PermitRestriction
        """
        return self._restriction

    @restriction.setter
    def restriction(self, restriction):
        """Sets the restriction of this Permit.

        Permit level restriction overrides.

        :param restriction: The restriction of this Permit.
        :type restriction: PermitRestriction
        """

        self._restriction = restriction

    @property
    def result_key(self):
        """Gets the result_key of this Permit.

        The key to link permit requests to permit results.

        :return: The result_key of this Permit.
        :rtype: str
        """
        return self._result_key

    @result_key.setter
    def result_key(self, result_key):
        """Sets the result_key of this Permit.

        The key to link permit requests to permit results.

        :param result_key: The result_key of this Permit.
        :type result_key: str
        """

        self._result_key = result_key

    @property
    def valid_till_date(self):
        """Gets the valid_till_date of this Permit.

        The expiry date for this permit.

        :return: The valid_till_date of this Permit.
        :rtype: datetime
        """
        return self._valid_till_date

    @valid_till_date.setter
    def valid_till_date(self, valid_till_date):
        """Sets the valid_till_date of this Permit.

        The expiry date for this permit.

        :param valid_till_date: The valid_till_date of this Permit.
        :type valid_till_date: datetime
        """

        self._valid_till_date = valid_till_date
